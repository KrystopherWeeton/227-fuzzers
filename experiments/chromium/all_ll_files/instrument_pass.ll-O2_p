; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/instrument_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/instrument_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.spvtools::opt::InstrumentPass" = type <{ %"class.spvtools::opt::Pass.base", [3 x i8], i32, i32, [4 x i8], %"class.std::__1::unordered_map.201", %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.249", i32, i32, i32, i32, %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.910", %"class.spvtools::opt::Function"*, i8, [7 x i8] }>
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.930", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.std::__1::tuple.1174" = type { %"struct.std::__1::__tuple_impl.1175" }
%"struct.std::__1::__tuple_impl.1175" = type { %"class.std::__1::__tuple_leaf.1176" }
%"class.std::__1::__tuple_leaf.1176" = type { i32* }
%"class.std::__1::tuple.1061" = type { i8 }
%"struct.std::__1::default_delete.44" = type { i8 }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::tuple.1146" = type { %"struct.std::__1::__tuple_impl.1147" }
%"struct.std::__1::__tuple_impl.1147" = type { %"class.std::__1::__tuple_leaf.1148" }
%"class.std::__1::__tuple_leaf.1148" = type { i32* }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::function.1071" = type { %"class.std::__1::__function::__policy_func.1075" }
%"class.std::__1::__function::__policy_func.1075" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1076", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1076" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.938" = type { %"class.std::__1::__function::__policy_func.942" }
%"class.std::__1::__function::__policy_func.942" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.943", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.943" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.spvtools::opt::InstructionBuilder" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionList::iterator", i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.spvtools::opt::analysis::Struct" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::vector.956", %"class.std::__1::map.963" }
%"class.std::__1::vector.956" = type { %"class.std::__1::__vector_base.957" }
%"class.std::__1::__vector_base.957" = type { %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"**, %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.spvtools::opt::analysis::Type"** }
%"class.std::__1::map.963" = type { %"class.std::__1::__tree.964" }
%"class.std::__1::__tree.964" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.965", %"class.std::__1::__compressed_pair.969" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::default_delete.150" = type { i8 }
%"class.std::__1::__tree_node.1092" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1093" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.1093" = type { %"struct.std::__1::pair.1094" }
%"struct.std::__1::pair.1094" = type { i32, %"class.std::__1::vector.463" }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Float" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::Vector" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Function" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.956" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.spvtools::opt::analysis::Void" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.std::__1::tuple.1196" = type { %"struct.std::__1::__tuple_impl.1197" }
%"struct.std::__1::__tuple_impl.1197" = type { %"class.std::__1::__tuple_leaf.1198" }
%"class.std::__1::__tuple_leaf.1198" = type { %"class.std::__1::vector.3"* }
%"class.std::initializer_list.973" = type { %"struct.spvtools::opt::Operand"*, i64 }
%"class.std::__1::function.944" = type { %"class.std::__1::__function::__policy_func.948" }
%"class.std::__1::__function::__policy_func.948" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.949", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.949" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.spvtools::opt::analysis::RuntimeArray" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__tree_node.1091" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.spvtools::opt::analysis::Bool" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::function.974" = type { %"class.std::__1::__function::__policy_func.977" }
%"class.std::__1::__function::__policy_func.977" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.978", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.978" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::InstructionList::iterator"*, %"class.spvtools::opt::UptrVectorIterator"*, i32, %"class.std::__1::vector.38"*)* }
%"class.spvtools::opt::UptrVectorIterator" = type { %"class.std::__1::vector.38"*, %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.984" }
%"struct.std::__1::__split_buffer" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { i32** }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set.985" = type { %"class.std::__1::__hash_table.986" }
%"class.std::__1::__hash_table.986" = type <{ %"class.std::__1::unique_ptr.987", %"class.std::__1::__compressed_pair.997", %"class.std::__1::__compressed_pair.1002", %"class.std::__1::__compressed_pair.1004", [4 x i8] }>
%"class.std::__1::unique_ptr.987" = type { %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989", %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %"struct.std::__1::__hash_node_base.990"** }
%"struct.std::__1::__hash_node_base.990" = type { %"struct.std::__1::__hash_node_base.990"* }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"class.std::__1::__bucket_list_deallocator.992" }
%"class.std::__1::__bucket_list_deallocator.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"struct.std::__1::__hash_node_base.990" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__hash_node.1150" = type { %"struct.std::__1::__hash_node_base.254", i64, %"struct.std::__1::__hash_value_type.1149" }
%"struct.std::__1::__hash_value_type.1149" = type { %"struct.std::__1::pair" }
%"class.std::__1::function.1010" = type { %"class.std::__1::__function::__policy_func.1014" }
%"class.std::__1::__function::__policy_func.1014" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1015", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1015" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.spvtools::opt::analysis::Matrix" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Image" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, i32, i32, i8, i8, i32, i32, i32 }
%"class.spvtools::opt::analysis::Sampler" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::SampledImage" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Array" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"struct.spvtools::opt::analysis::Array::LengthInfo" }
%"struct.spvtools::opt::analysis::Array::LengthInfo" = type { i32, %"class.std::__1::vector.3" }
%"class.spvtools::opt::analysis::Opaque" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::basic_string" }
%"class.spvtools::opt::analysis::Pointer" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Event" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::DeviceEvent" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::ReserveId" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Queue" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Pipe" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::ForwardPointer" = type { %"class.spvtools::opt::analysis::Type.base", i32, i32, %"class.spvtools::opt::analysis::Pointer"* }
%"class.spvtools::opt::analysis::PipeStorage" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::NamedBarrier" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::AccelerationStructureNV" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::CooperativeMatrixNV" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, i32, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::RayQueryKHR" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1027" }
%"struct.std::__1::pair.1027" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"class.std::__1::__tree_node.1038" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1039" }
%"struct.std::__1::pair.1039" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::function.1049" = type { %"class.std::__1::__function::__policy_func.1053" }
%"class.std::__1::__function::__policy_func.1053" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1054", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1054" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::set.1095" = type { %"class.std::__1::__tree.1096" }
%"class.std::__1::__tree.1096" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1097", %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set.1105" = type { %"class.std::__1::__hash_table.1106" }
%"class.std::__1::__hash_table.1106" = type <{ %"class.std::__1::unique_ptr.1107", %"class.std::__1::__compressed_pair.1117", %"class.std::__1::__compressed_pair.1122", %"class.std::__1::__compressed_pair.1126", [4 x i8] }>
%"class.std::__1::unique_ptr.1107" = type { %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109", %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"struct.std::__1::__hash_node_base.1110"** }
%"struct.std::__1::__hash_node_base.1110" = type { %"struct.std::__1::__hash_node_base.1110"* }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"class.std::__1::__bucket_list_deallocator.1112" }
%"class.std::__1::__bucket_list_deallocator.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.1118" }
%"struct.std::__1::__compressed_pair_elem.1118" = type { %"struct.std::__1::__hash_node_base.1110" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__split_buffer.1135" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.std::__1::allocator.49"* }
%"class.std::__1::allocator.49" = type { i8 }
%"class.std::__1::__function::__default_alloc_func.1214" = type { %class.anon }
%class.anon = type { %"class.std::__1::unordered_map.249"**, %"class.std::__1::unordered_map"**, %"class.spvtools::opt::BasicBlock"**, i8*, %"class.spvtools::opt::InstrumentPass"* }
%"class.std::__1::__function::__default_alloc_func.1217" = type { %class.anon.950 }
%class.anon.950 = type { i32*, i32*, %"class.spvtools::opt::InstrumentPass"* }
%"class.std::__1::__function::__default_alloc_func.1234" = type { %class.anon.1218 }
%class.anon.1218 = type { i32*, i32*, %"class.spvtools::opt::InstrumentPass"* }
%"class.std::__1::__function::__default_alloc_func.1236" = type { %class.anon.1235 }
%class.anon.1235 = type { i32*, i32*, i8* }
%"struct.std::__1::__split_buffer.1244" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.1245" }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.980", %"struct.std::__1::__compressed_pair_elem.1246" }
%"struct.std::__1::__compressed_pair_elem.1246" = type { %"class.std::__1::allocator.982"* }
%"class.std::__1::allocator.982" = type { i8 }

$_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j = comdat any

$_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj = comdat any

$_ZN8spvtools3opt18InstructionBuilder12AddTernaryOpEj6SpvOp_jjj = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPKjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPjEEE4typeES8_SA_SA_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj = comdat any

$_ZN8spvtools3opt9IRContext12AddExtensionERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt8analysis4TypeD2Ev = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddQuadOpEj6SpvOp_jjjj = comdat any

$_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddBranchEj = comdat any

$_ZN8spvtools3opt18InstructionBuilder12AddNullaryOpEj6SpvOp_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_ = comdat any

$_ZN8spvtools3opt18UptrVectorIteratorINS0_10BasicBlockELb0EE12InsertBeforeILb0EEENSt3__19enable_ifIXntT_ES3_E4typeEPNS5_6vectorINS5_10unique_ptrIS2_NS5_14default_deleteIS2_EEEENS5_9allocatorISD_EEEE = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZN8spvtools3opt8analysis4TypeD0Ev = comdat any

$_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZNK8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv = comdat any

$_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorINS2_IjNS_9allocatorIjEEEENS3_IS5_EEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS3_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN8spvtools3opt8analysis4BoolD0Ev = comdat any

$_ZNK8spvtools3opt8analysis4Bool10IsSameImplEPKNS1_4TypeEPNSt3__13setINS6_4pairIPKNS1_7PointerESB_EENS6_4lessISC_EENS6_9allocatorISC_EEEE = comdat any

$_ZNK8spvtools3opt8analysis4Bool3strEv = comdat any

$_ZNK8spvtools3opt8analysis4Bool17GetExtraHashWordsEPNSt3__16vectorIjNS3_9allocatorIjEEEEPNS3_13unordered_setIPKNS1_4TypeENS3_4hashISC_EENS3_8equal_toISC_EENS5_ISC_EEEE = comdat any

$_ZN8spvtools3opt8analysis4Bool6AsBoolEv = comdat any

$_ZNK8spvtools3opt8analysis4Bool6AsBoolEv = comdat any

$_ZN8spvtools3opt8analysis4VoidD0Ev = comdat any

$_ZNK8spvtools3opt8analysis4Void10IsSameImplEPKNS1_4TypeEPNSt3__13setINS6_4pairIPKNS1_7PointerESB_EENS6_4lessISC_EENS6_9allocatorISC_EEEE = comdat any

$_ZNK8spvtools3opt8analysis4Void3strEv = comdat any

$_ZNK8spvtools3opt8analysis4Void17GetExtraHashWordsEPNSt3__16vectorIjNS3_9allocatorIjEEEEPNS3_13unordered_setIPKNS1_4TypeENS3_4hashISC_EENS3_8equal_toISC_EENS5_ISC_EEEE = comdat any

$_ZN8spvtools3opt8analysis4Void6AsVoidEv = comdat any

$_ZNK8spvtools3opt8analysis4Void6AsVoidEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_ = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt8FunctionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_ = comdat any

$_ZN8spvtools3opt8FunctionD2Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEjEENS_22__unordered_map_hasherIS5_S6_N8spvtools3opt14InstrumentPass12vector_hash_ENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SD_SB_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEjEENS_22__unordered_map_hasherIS5_S6_N8spvtools3opt14InstrumentPass12vector_hash_ENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SD_SB_Lb1EEENS3_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEjEENS_22__unordered_map_hasherIS5_S6_N8spvtools3opt14InstrumentPass12vector_hash_ENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SD_SB_Lb1EEENS3_IS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm = comdat any

$_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt8analysis4TypeE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt8analysis4BoolE = comdat any

$_ZTVN8spvtools3opt8analysis4VoidE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@.str = private unnamed_addr constant [37 x i8] c"SPV_KHR_storage_buffer_storage_class\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"Mixed stage shader module not supported\00", align 1
@.ref.tmp.5 = private constant %struct.spv_position_t zeroinitializer, align 8
@.str.6 = private unnamed_addr constant [39 x i8] c"Stage not supported by instrumentation\00", align 1
@.ref.tmp.7 = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt8analysis7IntegerE = external unnamed_addr constant { [61 x i8*] }, align 8
@_ZTVN8spvtools3opt8analysis4TypeE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@.str.8 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp.10 = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools3opt8analysis6StructE = external unnamed_addr constant { [61 x i8*] }, align 8
@_ZTVN8spvtools3opt8analysis5FloatE = external unnamed_addr constant { [61 x i8*] }, align 8
@_ZTVN8spvtools3opt8analysis4BoolE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Bool"*)* @_ZN8spvtools3opt8analysis4BoolD0Ev to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Bool"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::set.1095"*)* @_ZNK8spvtools3opt8analysis4Bool10IsSameImplEPKNS1_4TypeEPNSt3__13setINS6_4pairIPKNS1_7PointerESB_EENS6_4lessISC_EENS6_9allocatorISC_EEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.spvtools::opt::analysis::Bool"*)* @_ZNK8spvtools3opt8analysis4Bool3strEv to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Bool"*, %"class.std::__1::vector.3"*, %"class.std::__1::unordered_set.1105"*)* @_ZNK8spvtools3opt8analysis4Bool17GetExtraHashWordsEPNSt3__16vectorIjNS3_9allocatorIjEEEEPNS3_13unordered_setIPKNS1_4TypeENS3_4hashISC_EENS3_8equal_toISC_EENS5_ISC_EEEE to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Bool"*)* @_ZN8spvtools3opt8analysis4Bool6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Bool"*)* @_ZNK8spvtools3opt8analysis4Bool6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt8analysis4VoidE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Void"*)* @_ZN8spvtools3opt8analysis4VoidD0Ev to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Void"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::set.1095"*)* @_ZNK8spvtools3opt8analysis4Void10IsSameImplEPKNS1_4TypeEPNSt3__13setINS6_4pairIPKNS1_7PointerESB_EENS6_4lessISC_EENS6_9allocatorISC_EEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.spvtools::opt::analysis::Void"*)* @_ZNK8spvtools3opt8analysis4Void3strEv to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Void"*, %"class.std::__1::vector.3"*, %"class.std::__1::unordered_set.1105"*)* @_ZNK8spvtools3opt8analysis4Void17GetExtraHashWordsEPNSt3__16vectorIjNS3_9allocatorIjEEEEPNS3_13unordered_setIPKNS1_4TypeENS3_4hashISC_EENS3_8equal_toISC_EENS5_ISC_EEEE to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Void"*)* @_ZN8spvtools3opt8analysis4Void6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Void"*)* @_ZNK8spvtools3opt8analysis4Void6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt8analysis8FunctionE = external unnamed_addr constant { [61 x i8*] }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS5_10BasicBlockEE3$_0FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS5_10BasicBlockEE3$_0FvPjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS5_10BasicBlockEE3$_0FvPjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjENKUlPNS5_11InstructionEE_clESJ_EUlPjE_FvSL_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjENKUlPNS5_11InstructionEE_clESJ_EUlPjE_FvSL_EEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjENKUlPNS5_11InstructionEE_clESJ_EUlPjE_FvSL_EEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjEUlPNS5_11InstructionEE_FvSJ_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjEUlPNS5_11InstructionEE_FvSJ_EEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjEUlPNS5_11InstructionEE_FvSJ_EEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_1FvjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_1FvjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_1FvjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20InitializeInstrumentEvE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14InstrumentPass15MovePreludeCodeENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPNSt3__110unique_ptrIS5_NS7_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstrumentPass"*, %"class.spvtools::opt::InstructionList::iterator"* nocapture readonly, %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::tuple.1174", align 8
  %7 = alloca %"class.std::__1::tuple.1061", align 1
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 28
  %10 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 28, i32 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %63, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 28, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %14, align 8
  %16 = icmp eq %"struct.std::__1::__hash_node_base"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13, %17
  %18 = phi %"struct.std::__1::__hash_node_base"* [ %20, %17 ], [ %15, %13 ]
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %19, align 8
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %18 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  %22 = icmp eq %"struct.std::__1::__hash_node_base"* %20, null
  br i1 %22, label %23, label %17

23:                                               ; preds = %17, %13
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %14, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %45, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = add i64 %25, -1
  %30 = and i64 %25, 3
  %31 = icmp ult i64 %29, 3
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = sub i64 %25, %30
  br label %46

34:                                               ; preds = %46, %27
  %35 = phi i64 [ 0, %27 ], [ %60, %46 ]
  %36 = icmp eq i64 %30, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %34, %37
  %38 = phi i64 [ %42, %37 ], [ %35, %34 ]
  %39 = phi i64 [ %43, %37 ], [ %30, %34 ]
  %40 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %28, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, i64 %38
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %41, align 8
  %42 = add nuw i64 %38, 1
  %43 = add i64 %39, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %37, !llvm.loop !2

45:                                               ; preds = %34, %37, %23
  store i64 0, i64* %10, align 8
  br label %63

46:                                               ; preds = %46, %32
  %47 = phi i64 [ 0, %32 ], [ %60, %46 ]
  %48 = phi i64 [ %33, %32 ], [ %61, %46 ]
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %28, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %47, 1
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %28, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = or i64 %47, 2
  %55 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %28, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %56, align 8
  %57 = or i64 %47, 3
  %58 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %28, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %58, i64 %57
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %59, align 8
  %60 = add nuw i64 %47, 4
  %61 = add i64 %48, -4
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %34, label %46

63:                                               ; preds = %5, %45
  %64 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %117, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 29, i32 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base.254"* %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %67, %71
  %72 = phi %"struct.std::__1::__hash_node_base.254"* [ %74, %71 ], [ %69, %67 ]
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %72, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %73, align 8
  %75 = bitcast %"struct.std::__1::__hash_node_base.254"* %72 to i8*
  tail call void @_ZdlPv(i8* %75) #12
  %76 = icmp eq %"struct.std::__1::__hash_node_base.254"* %74, null
  br i1 %76, label %77, label %71

77:                                               ; preds = %71, %67
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %68, align 8
  %78 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %99, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = add i64 %79, -1
  %84 = and i64 %79, 3
  %85 = icmp ult i64 %83, 3
  br i1 %85, label %88, label %86

86:                                               ; preds = %81
  %87 = sub i64 %79, %84
  br label %100

88:                                               ; preds = %100, %81
  %89 = phi i64 [ 0, %81 ], [ %114, %100 ]
  %90 = icmp eq i64 %84, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %88, %91
  %92 = phi i64 [ %96, %91 ], [ %89, %88 ]
  %93 = phi i64 [ %97, %91 ], [ %84, %88 ]
  %94 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %82, align 8
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %94, i64 %92
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %95, align 8
  %96 = add nuw i64 %92, 1
  %97 = add i64 %93, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %91, !llvm.loop !4

99:                                               ; preds = %88, %91, %77
  store i64 0, i64* %64, align 8
  br label %117

100:                                              ; preds = %100, %86
  %101 = phi i64 [ 0, %86 ], [ %114, %100 ]
  %102 = phi i64 [ %87, %86 ], [ %115, %100 ]
  %103 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %82, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %103, i64 %101
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %104, align 8
  %105 = or i64 %101, 1
  %106 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %82, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, i64 %105
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %107, align 8
  %108 = or i64 %101, 2
  %109 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %82, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %109, i64 %108
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %110, align 8
  %111 = or i64 %101, 3
  %112 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %82, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %112, i64 %111
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %113, align 8
  %114 = add nuw i64 %101, 4
  %115 = add i64 %102, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %88, label %100

117:                                              ; preds = %63, %99
  %118 = tail call i8* @_Znwm(i64 136) #12
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %3, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %119, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %120, i64 0, i32 1
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.std::__1::unique_ptr.21"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %122, align 8
  %125 = bitcast i8* %118 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %125, align 8
  %126 = getelementptr inbounds i8, i8* %118, i64 8
  %127 = bitcast i8* %126 to i64*
  store i64 %124, i64* %127, align 8
  %128 = getelementptr inbounds i8, i8* %118, i64 16
  %129 = bitcast i8* %128 to i32 (...)***
  %130 = getelementptr inbounds i8, i8* %118, i64 24
  %131 = bitcast i8* %130 to i32 (...)***
  %132 = getelementptr inbounds i8, i8* %118, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %133 = getelementptr inbounds i8, i8* %118, i64 56
  %134 = getelementptr inbounds i8, i8* %118, i64 72
  %135 = bitcast i8* %134 to i32*
  store i32 0, i32* %135, align 8
  %136 = getelementptr inbounds i8, i8* %118, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 14, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 56, i1 false) #13
  %137 = bitcast i8* %132 to i8**
  store i8* %130, i8** %137, align 8
  %138 = getelementptr inbounds i8, i8* %118, i64 40
  %139 = bitcast i8* %138 to i8**
  store i8* %130, i8** %139, align 8
  %140 = getelementptr inbounds i8, i8* %118, i64 48
  store i8 1, i8* %140, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %4, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %141, align 8
  %143 = bitcast %"class.std::__1::unique_ptr.40"* %4 to i8**
  store i8* %118, i8** %143, align 8
  %144 = icmp eq %"class.spvtools::opt::BasicBlock"* %142, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %117
  %146 = bitcast %"class.std::__1::unique_ptr.40"* %4 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %146, %"class.spvtools::opt::BasicBlock"* nonnull %142) #13
  br label %147

147:                                              ; preds = %117, %145
  %148 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %119, align 8
  %149 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %148, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %150 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %149, align 8, !noalias !5
  %151 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %1, i64 0, i32 0, i32 0
  %152 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %151, align 8
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %150, %152
  br i1 %153, label %160, label %154

154:                                              ; preds = %147
  %155 = bitcast i32* %8 to i8*
  %156 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %9, i64 0, i32 0
  %157 = bitcast %"class.std::__1::tuple.1174"* %6 to i8*
  %158 = getelementptr inbounds %"class.std::__1::tuple.1174", %"class.std::__1::tuple.1174"* %6, i64 0, i32 0, i32 0, i32 0
  %159 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %7, i64 0, i32 0
  br label %161

160:                                              ; preds = %210, %147
  ret void

161:                                              ; preds = %154, %210
  %162 = phi %"class.spvtools::opt::Instruction"* [ %150, %154 ], [ %220, %210 ]
  %163 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %162, i64 0, i32 0, i32 2
  %164 = bitcast %"class.spvtools::opt::Instruction"** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %162, i64 0, i32 0, i32 1
  %167 = bitcast %"class.spvtools::opt::Instruction"** %166 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %168 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %167, align 8
  %169 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %168, i64 0, i32 2
  %170 = bitcast %"class.spvtools::opt::Instruction"** %169 to i64*
  store i64 %165, i64* %170, align 8
  %171 = bitcast %"class.spvtools::opt::Instruction"** %166 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %"class.spvtools::opt::Instruction"** %163 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %174 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %173, align 8
  %175 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %174, i64 0, i32 1
  %176 = bitcast %"class.spvtools::opt::Instruction"** %175 to i64*
  store i64 %172, i64* %176, align 8
  %177 = bitcast %"class.spvtools::opt::Instruction"** %166 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 16, i1 false) #13
  %178 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %162, i64 0, i32 2
  %179 = load i32, i32* %178, align 8
  switch i32 %179, label %180 [
    i32 100, label %183
    i32 86, label %183
  ]

180:                                              ; preds = %161
  %181 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %141, align 8
  %182 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %181, i64 0, i32 2, i32 0, i32 1
  br label %210

183:                                              ; preds = %161, %161
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %155) #13
  %184 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %162, i64 0, i32 4
  %185 = load i8, i8* %184, align 1, !range !6
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %192, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %162, i64 0, i32 3
  %189 = load i8, i8* %188, align 4, !range !6
  %190 = zext i8 %189 to i32
  %191 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %162, i32 %190) #13
  br label %192

192:                                              ; preds = %187, %183
  %193 = phi i32 [ %191, %187 ], [ 0, %183 ]
  store i32 %193, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #13
  store i32* %8, i32** %158, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %159) #13
  %194 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %156, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1174"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %7) #13
  %195 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %194, 0
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %195, i64 3
  %197 = bitcast %"struct.std::__1::__hash_node_base"* %196 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %159) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #13
  store %"class.spvtools::opt::Instruction"* %162, %"class.spvtools::opt::Instruction"** %197, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %155) #13
  %198 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %166, align 8
  %199 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %141, align 8
  %200 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %199, i64 0, i32 2, i32 0, i32 1
  %201 = icmp eq %"class.spvtools::opt::Instruction"* %198, null
  br i1 %201, label %210, label %202

202:                                              ; preds = %192
  %203 = load i64, i64* %164, align 8
  %204 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %198, i64 0, i32 0, i32 2
  %205 = bitcast %"class.spvtools::opt::Instruction"** %204 to i64*
  store i64 %203, i64* %205, align 8
  %206 = load i64, i64* %171, align 8
  %207 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %173, align 8
  %208 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %207, i64 0, i32 1
  %209 = bitcast %"class.spvtools::opt::Instruction"** %208 to i64*
  store i64 %206, i64* %209, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 16, i1 false) #13
  br label %210

210:                                              ; preds = %180, %202, %192
  %211 = phi %"class.spvtools::opt::Instruction"* [ %182, %180 ], [ %200, %202 ], [ %200, %192 ]
  %212 = phi %"class.spvtools::opt::BasicBlock"* [ %181, %180 ], [ %199, %202 ], [ %199, %192 ]
  store %"class.spvtools::opt::Instruction"* %211, %"class.spvtools::opt::Instruction"** %166, align 8
  %213 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %212, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %214 = bitcast %"class.spvtools::opt::Instruction"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  store i64 %215, i64* %164, align 8
  store %"class.spvtools::opt::Instruction"* %162, %"class.spvtools::opt::Instruction"** %213, align 8
  %216 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %173, align 8
  %217 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %216, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %162, %"class.spvtools::opt::Instruction"** %217, align 8
  %218 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %119, align 8
  %219 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %218, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %220 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %219, align 8, !noalias !5
  %221 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %151, align 8
  %222 = icmp eq %"class.spvtools::opt::Instruction"* %220, %221
  br i1 %222, label %160, label %161
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt14InstrumentPass13IsSameBlockOpEPKNS0_11InstructionE(%"class.spvtools::opt::InstrumentPass"* nocapture readnone, %"class.spvtools::opt::Instruction"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 86
  %6 = icmp eq i32 %4, 100
  %7 = or i1 %5, %6
  ret i1 %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14InstrumentPass16MovePostludeCodeENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPS3_(%"class.spvtools::opt::InstrumentPass"*, %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple.1146", align 8
  %6 = alloca %"class.std::__1::tuple.1061", align 1
  %7 = alloca %"class.std::__1::unique_ptr.21", align 8
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %10, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.spvtools::opt::Instruction"** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !5
  %14 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %10, i64 0, i32 2, i32 0, i32 1
  %15 = inttoptr i64 %13 to %"class.spvtools::opt::Instruction"*
  %16 = icmp eq %"class.spvtools::opt::Instruction"* %14, %15
  br i1 %16, label %32, label %17

17:                                               ; preds = %4
  %18 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i8*
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %7, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i64*
  %21 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 28, i32 0, i32 2, i32 0, i32 0
  %22 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 28
  %23 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 29
  %24 = bitcast i32* %8 to i8*
  %25 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %23, i64 0, i32 0
  %26 = bitcast %"class.std::__1::tuple.1146"* %5 to i8*
  %27 = getelementptr inbounds %"class.std::__1::tuple.1146", %"class.std::__1::tuple.1146"* %5, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %6, i64 0, i32 0
  %29 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %3, i64 0, i32 2, i32 0, i32 1
  %30 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %3, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %31 = bitcast %"class.spvtools::opt::Instruction"** %30 to i64*
  br label %33

32:                                               ; preds = %91, %4
  ret void

33:                                               ; preds = %17, %91
  %34 = phi %"class.spvtools::opt::Instruction"* [ %15, %17 ], [ %103, %91 ]
  %35 = phi i64 [ %13, %17 ], [ %101, %91 ]
  %36 = inttoptr i64 %35 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %37 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %36, i64 0, i32 2
  %38 = bitcast %"class.spvtools::opt::Instruction"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %36, i64 0, i32 1
  %41 = bitcast %"class.spvtools::opt::Instruction"** %40 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %42 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %41, align 8
  %43 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %42, i64 0, i32 2
  %44 = bitcast %"class.spvtools::opt::Instruction"** %43 to i64*
  store i64 %39, i64* %44, align 8
  %45 = bitcast %"class.spvtools::opt::Instruction"** %40 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.spvtools::opt::Instruction"** %37 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %48 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %48, i64 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  store i64 %46, i64* %50, align 8
  %51 = bitcast %"class.spvtools::opt::Instruction"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  store i64 %35, i64* %20, align 8
  %52 = load i64, i64* %21, align 8
  %53 = icmp eq i64 %52, 0
  %54 = inttoptr i64 %35 to %"class.spvtools::opt::Instruction"*
  br i1 %53, label %74, label %55

55:                                               ; preds = %33
  call void @_ZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEEPNS2_13unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS9_IjPS4_SB_SD_NSE_INSF_ISG_SL_EEEEEEPNS0_10BasicBlockE(%"class.spvtools::opt::InstrumentPass"* %0, %"class.std::__1::unique_ptr.21"* nonnull %7, %"class.std::__1::unordered_map.249"* %23, %"class.std::__1::unordered_map"* %22, %"class.spvtools::opt::BasicBlock"* %3)
  %56 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %54, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  switch i32 %57, label %74 [
    i32 100, label %58
    i32 86, label %58
  ]

58:                                               ; preds = %55, %55
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #13
  store i32 -1431655766, i32* %8, align 4
  %59 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %54, i64 0, i32 4
  %60 = load i8, i8* %59, align 1, !range !6
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %54, i64 0, i32 3
  %64 = load i8, i8* %63, align 4, !range !6
  %65 = zext i8 %64 to i32
  %66 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %54, i32 %65) #13
  br label %67

67:                                               ; preds = %58, %62
  %68 = phi i32 [ %66, %62 ], [ 0, %58 ]
  store i32 %68, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  store i32* %8, i32** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #13
  %69 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %25, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1146"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %6) #13
  %70 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %69, 0
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %70, i64 2
  %72 = bitcast %"struct.std::__1::__hash_node_base.254"* %71 to %"struct.std::__1::pair"*
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  store i32 %68, i32* %73, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #13
  br label %74

74:                                               ; preds = %55, %33, %67
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %19, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 1
  %76 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %75, align 8
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 2
  %80 = bitcast %"class.spvtools::opt::Instruction"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 0, i32 2
  %83 = bitcast %"class.spvtools::opt::Instruction"** %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = bitcast %"class.spvtools::opt::Instruction"** %75 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.spvtools::opt::Instruction"** %79 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %87 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %86, align 8
  %88 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %87, i64 0, i32 1
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  store i64 %85, i64* %89, align 8
  %90 = bitcast %"class.spvtools::opt::Instruction"** %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #13
  br label %91

91:                                               ; preds = %74, %78
  store %"class.spvtools::opt::Instruction"* %29, %"class.spvtools::opt::Instruction"** %75, align 8
  %92 = load i64, i64* %31, align 8
  %93 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 2
  %94 = bitcast %"class.spvtools::opt::Instruction"** %93 to i64*
  store i64 %92, i64* %94, align 8
  store %"class.spvtools::opt::Instruction"* %34, %"class.spvtools::opt::Instruction"** %30, align 8
  %95 = bitcast %"class.spvtools::opt::Instruction"** %93 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %96 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %95, align 8
  %97 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %96, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %34, %"class.spvtools::opt::Instruction"** %97, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %98 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %9, align 8
  %99 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %98, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %100 = bitcast %"class.spvtools::opt::Instruction"** %99 to i64*
  %101 = load i64, i64* %100, align 8, !noalias !5
  %102 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %98, i64 0, i32 2, i32 0, i32 1
  %103 = inttoptr i64 %101 to %"class.spvtools::opt::Instruction"*
  %104 = icmp eq %"class.spvtools::opt::Instruction"* %102, %103
  br i1 %104, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEEPNS2_13unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS9_IjPS4_SB_SD_NSE_INSF_ISG_SL_EEEEEEPNS0_10BasicBlockE(%"class.spvtools::opt::InstrumentPass"*, %"class.std::__1::unique_ptr.21"* nocapture readonly, %"class.std::__1::unordered_map.249"*, %"class.std::__1::unordered_map"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::function.1071", align 8
  %7 = alloca %"class.std::__1::unordered_map.249"*, align 8
  %8 = alloca %"class.std::__1::unordered_map"*, align 8
  %9 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.std::__1::function.938", align 8
  store %"class.std::__1::unordered_map.249"* %2, %"class.std::__1::unordered_map.249"** %7, align 8
  store %"class.std::__1::unordered_map"* %3, %"class.std::__1::unordered_map"** %8, align 8
  store %"class.spvtools::opt::BasicBlock"* %4, %"class.spvtools::opt::BasicBlock"** %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #13
  store i8 0, i8* %10, align 1
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, align 8
  %14 = bitcast %"class.std::__1::function.938"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %11, i64 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %11, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNS_10unique_ptrINS8_11InstructionENS_14default_deleteISB_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSG_IjPSB_SI_SK_NSL_INSM_ISN_SS_EEEEEEPNS8_10BasicBlockEE3$_0S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %15, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS5_10BasicBlockEE3$_0FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %16, align 8
  %17 = tail call i8* @_Znwm(i64 40) #12, !noalias !7
  %18 = bitcast i8* %17 to %"class.std::__1::unordered_map.249"***
  store %"class.std::__1::unordered_map.249"** %7, %"class.std::__1::unordered_map.249"*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = bitcast i8* %19 to %"class.std::__1::unordered_map"***
  store %"class.std::__1::unordered_map"** %8, %"class.std::__1::unordered_map"*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %17, i64 16
  %22 = bitcast i8* %21 to %"class.spvtools::opt::BasicBlock"***
  store %"class.spvtools::opt::BasicBlock"** %9, %"class.spvtools::opt::BasicBlock"*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %17, i64 24
  %24 = bitcast i8* %23 to i8**
  store i8* %10, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %17, i64 32
  %26 = bitcast i8* %25 to %"class.spvtools::opt::InstrumentPass"**
  store %"class.spvtools::opt::InstrumentPass"* %0, %"class.spvtools::opt::InstrumentPass"** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %11, i64 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %27, align 8
  %28 = bitcast %"class.std::__1::function.1071"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #13
  %29 = ptrtoint %"class.std::__1::function.938"* %11 to i64
  %30 = getelementptr inbounds %"class.std::__1::function.1071", %"class.std::__1::function.1071"* %6, i64 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.std::__1::function.1071", %"class.std::__1::function.1071"* %6, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %30, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %31, align 8
  %32 = bitcast %"class.std::__1::function.1071"* %6 to i64*
  store i64 %29, i64* %32, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 6, i32 0, i32 0
  %34 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 6, i32 0, i32 1
  %36 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %35, align 8
  %37 = icmp eq %"struct.spvtools::opt::Operand"* %34, %36
  br i1 %37, label %60, label %38

38:                                               ; preds = %5
  %39 = getelementptr inbounds %"class.std::__1::function.1071", %"class.std::__1::function.1071"* %6, i64 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %55, %38
  %41 = phi %"struct.spvtools::opt::Operand"* [ %34, %38 ], [ %56, %55 ]
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %43) #13
  br i1 %44, label %45, label %55

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %46, align 8
  %48 = icmp eq %"class.std::__1::vector.3"* %47, null
  %49 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %47, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 1, i32 2
  %51 = select i1 %48, i32** %50, i32** %49
  %52 = load i32*, i32** %51, align 8
  %53 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %30, align 8
  %54 = call zeroext i1 %53(%"union.std::__1::__function::__policy_storage"* nonnull %39, i32* %52) #13
  br i1 %54, label %55, label %58

55:                                               ; preds = %45, %40
  %56 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 1
  %57 = icmp eq %"struct.spvtools::opt::Operand"* %56, %36
  br i1 %57, label %58, label %40

58:                                               ; preds = %55, %45
  %59 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %31, align 8
  br label %60

60:                                               ; preds = %58, %5
  %61 = phi %"struct.std::__1::__function::__policy"* [ %59, %58 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %5 ]
  %62 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %61, i64 0, i32 1
  %63 = load void (i8*)*, void (i8*)** %62, align 8
  %64 = icmp eq void (i8*)* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.std::__1::function.1071", %"class.std::__1::function.1071"* %6, i64 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void %63(i8* %67) #13
  br label %68

68:                                               ; preds = %60, %65
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #13
  %69 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %16, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %69, i64 0, i32 1
  %71 = load void (i8*)*, void (i8*)** %70, align 8
  %72 = icmp eq void (i8*)* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = load i8*, i8** %27, align 8
  call void %71(i8* %74) #13
  br label %75

75:                                               ; preds = %68, %73
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #13
  %76 = load i8, i8* %10, align 1, !range !6
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %113, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %80 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %79, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %80, i64 0, i32 11
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %109

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %80, i64 0, i32 4, i32 0, i32 0, i32 0
  %87 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %86, align 8
  %88 = call i8* @_Znwm(i64 104) #12
  %89 = bitcast i8* %88 to %"class.spvtools::opt::analysis::DefUseManager"*
  %90 = getelementptr inbounds i8, i8* %88, i64 32
  %91 = bitcast i8* %90 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %91, align 4
  %92 = getelementptr inbounds i8, i8* %88, i64 48
  %93 = getelementptr inbounds i8, i8* %88, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #13
  %94 = bitcast i8* %93 to i8**
  store i8* %92, i8** %94, align 8
  %95 = getelementptr inbounds i8, i8* %88, i64 64
  %96 = getelementptr inbounds i8, i8* %88, i64 96
  %97 = bitcast i8* %96 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %97, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %89, %"class.spvtools::opt::Module"* %87) #13
  %98 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %80, i64 0, i32 6
  %99 = ptrtoint i8* %88 to i64
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %98, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %100, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.62"* %98 to i64*
  store i64 %99, i64* %102, align 8
  %103 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %101, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %85
  %105 = bitcast %"class.std::__1::unique_ptr.62"* %98 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %105, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %101) #13
  br label %106

106:                                              ; preds = %104, %85
  %107 = load i32, i32* %81, align 8
  %108 = or i32 %107, 1
  store i32 %108, i32* %81, align 8
  br label %109

109:                                              ; preds = %78, %106
  %110 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %80, i64 0, i32 6, i32 0, i32 0, i32 0
  %111 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %110, align 8
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %111, %"class.spvtools::opt::Instruction"* %112) #13
  br label %113

113:                                              ; preds = %75, %109
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt14InstrumentPass8NewLabelEj(%"class.spvtools::opt::InstrumentPass"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = tail call i8* @_Znwm(i64 112) #12
  %5 = bitcast i8* %4 to %"class.spvtools::opt::Instruction"*
  %6 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #13
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %5, %"class.spvtools::opt::IRContext"* %7, i32 248, i32 0, i32 %1, %"class.std::__1::vector"* nonnull dereferenceable(24) %3) #13
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %10 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %9, align 8
  %11 = icmp eq %"struct.spvtools::opt::Operand"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %2
  %13 = bitcast %"struct.spvtools::opt::Operand"* %10 to i8*
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %15 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %14, align 8
  %16 = icmp eq %"struct.spvtools::opt::Operand"* %15, %10
  br i1 %16, label %40, label %17

17:                                               ; preds = %12, %35
  %18 = phi %"struct.spvtools::opt::Operand"* [ %19, %35 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %18, i64 -1
  %20 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %18, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %18, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %21, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %21, align 8
  %23 = icmp eq %"class.std::__1::vector.3"* %22, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %22, i64 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = icmp eq i32* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = ptrtoint i32* %26 to i64
  %30 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %22, i64 0, i32 0, i32 1
  %31 = bitcast i32** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = bitcast i32* %26 to i8*
  call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %28, %24
  %34 = bitcast %"class.std::__1::vector.3"* %22 to i8*
  call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %33, %17
  %36 = icmp eq %"struct.spvtools::opt::Operand"* %19, %10
  br i1 %36, label %37, label %17

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::vector"* %3 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %12
  %41 = phi i8* [ %39, %37 ], [ %13, %12 ]
  store %"struct.spvtools::opt::Operand"* %10, %"struct.spvtools::opt::Operand"** %14, align 8
  call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %2, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  %43 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 11
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %72

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %49, align 8
  %51 = call i8* @_Znwm(i64 104) #12
  %52 = bitcast i8* %51 to %"class.spvtools::opt::analysis::DefUseManager"*
  %53 = getelementptr inbounds i8, i8* %51, i64 32
  %54 = bitcast i8* %53 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %54, align 4
  %55 = getelementptr inbounds i8, i8* %51, i64 48
  %56 = getelementptr inbounds i8, i8* %51, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #13
  %57 = bitcast i8* %56 to i8**
  store i8* %55, i8** %57, align 8
  %58 = getelementptr inbounds i8, i8* %51, i64 64
  %59 = getelementptr inbounds i8, i8* %51, i64 96
  %60 = bitcast i8* %59 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %60, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %52, %"class.spvtools::opt::Module"* %50) #13
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 6
  %62 = ptrtoint i8* %51 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %61, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %63, align 8
  %65 = bitcast %"class.std::__1::unique_ptr.62"* %61 to i64*
  store i64 %62, i64* %65, align 8
  %66 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %64, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %48
  %68 = bitcast %"class.std::__1::unique_ptr.62"* %61 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %68, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %64) #13
  br label %69

69:                                               ; preds = %67, %48
  %70 = load i32, i32* %44, align 8
  %71 = or i32 %70, 1
  store i32 %71, i32* %44, align 8
  br label %72

72:                                               ; preds = %42, %69
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 6, i32 0, i32 0, i32 0
  %74 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %73, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %74, %"class.spvtools::opt::Instruction"* nonnull %5) #13
  ret %"class.spvtools::opt::Instruction"* %5
}

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass15Gen32BitCvtCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* nocapture readonly, i32, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = trunc i32 %8 to i16
  %10 = icmp slt i16 %9, 0
  br i1 %10, label %29, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 5
  %13 = tail call i8* @_Znwm(i64 240) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %14, %"class.std::__1::function"* dereferenceable(32) %12, %"class.spvtools::opt::IRContext"* %6) #13
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 20
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.480"* %16 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %11
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %18) #13
  %22 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %18 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %21, %11
  %24 = load i32, i32* %7, align 8
  %25 = or i32 %24, 32768
  store i32 %25, i32* %7, align 8
  %26 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 11
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %3, %23
  %30 = phi i32 [ %8, %3 ], [ %28, %23 ]
  %31 = phi %"class.spvtools::opt::IRContext"* [ %6, %3 ], [ %26, %23 ]
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 20, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 11
  %35 = and i32 %30, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %61

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %38, align 8
  %40 = tail call i8* @_Znwm(i64 104) #12
  %41 = bitcast i8* %40 to %"class.spvtools::opt::analysis::DefUseManager"*
  %42 = getelementptr inbounds i8, i8* %40, i64 32
  %43 = bitcast i8* %42 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %40, i64 48
  %45 = getelementptr inbounds i8, i8* %40, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #13
  %46 = bitcast i8* %45 to i8**
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds i8, i8* %40, i64 64
  %48 = getelementptr inbounds i8, i8* %40, i64 96
  %49 = bitcast i8* %48 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %49, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %41, %"class.spvtools::opt::Module"* %39) #13
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 6
  %51 = ptrtoint i8* %40 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %50, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %52, align 8
  %54 = bitcast %"class.std::__1::unique_ptr.62"* %50 to i64*
  store i64 %51, i64* %54, align 8
  %55 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %53, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %37
  %57 = bitcast %"class.std::__1::unique_ptr.62"* %50 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %57, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %53) #13
  br label %58

58:                                               ; preds = %56, %37
  %59 = load i32, i32* %34, align 8
  %60 = or i32 %59, 1
  store i32 %60, i32* %34, align 8
  br label %61

61:                                               ; preds = %29, %58
  %62 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 6, i32 0, i32 0, i32 0
  %63 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %62, align 8
  %64 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %63, i32 %1) #13
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 3
  %66 = load i8, i8* %65, align 4, !range !6
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %61
  %69 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %64, i32 0) #13
  br label %70

70:                                               ; preds = %61, %68
  %71 = phi i32 [ %69, %68 ], [ 0, %61 ]
  %72 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %33, i32 %71) #13
  %73 = bitcast %"class.spvtools::opt::analysis::Type"* %72 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %74 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %74, i64 10
  %76 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %75, align 8
  %77 = tail call %"class.spvtools::opt::analysis::Integer"* %76(%"class.spvtools::opt::analysis::Type"* %72) #13
  %78 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %77, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 32
  br i1 %80, label %144, label %81

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %77, i64 0, i32 2
  %83 = load i8, i8* %82, align 8, !range !6
  %84 = icmp eq i8 %83, 0
  %85 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %85) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 48, i1 false)
  %86 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1
  %88 = bitcast %"class.std::__1::vector.463"* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #13
  %89 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 2
  store i32 2, i32* %89, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %90 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 1
  store i32 32, i32* %90, align 4
  %91 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 2
  store i8 %83, i8* %91, align 8
  %92 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to %"class.spvtools::opt::analysis::Type"*
  %93 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %33, %"class.spvtools::opt::analysis::Type"* nonnull %92) #13
  %94 = call i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %33, %"class.spvtools::opt::analysis::Type"* %93) #13
  br i1 %84, label %105, label %95

95:                                               ; preds = %81
  %96 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %94, i32 114, i32 %1)
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %96, i64 0, i32 4
  %98 = load i8, i8* %97, align 1, !range !6
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %96, i64 0, i32 3
  %102 = load i8, i8* %101, align 4, !range !6
  %103 = zext i8 %102 to i32
  %104 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %96, i32 %103) #13
  br label %115

105:                                              ; preds = %81
  %106 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %94, i32 113, i32 %1)
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %106, i64 0, i32 4
  %108 = load i8, i8* %107, align 1, !range !6
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %115, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %106, i64 0, i32 3
  %112 = load i8, i8* %111, align 4, !range !6
  %113 = zext i8 %112 to i32
  %114 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %106, i32 %113) #13
  br label %115

115:                                              ; preds = %110, %105, %100, %95
  %116 = phi i32 [ %104, %100 ], [ 0, %95 ], [ %114, %110 ], [ 0, %105 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %117 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %87, i64 0, i32 0, i32 0
  %118 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %117, align 8
  %119 = icmp eq %"class.std::__1::vector.3"* %118, null
  br i1 %119, label %143, label %120

120:                                              ; preds = %115
  %121 = bitcast %"class.std::__1::vector.3"* %118 to i8*
  %122 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %123 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %122, align 8
  %124 = icmp eq %"class.std::__1::vector.3"* %123, %118
  br i1 %124, label %141, label %125

125:                                              ; preds = %120, %136
  %126 = phi %"class.std::__1::vector.3"* [ %127, %136 ], [ %123, %120 ]
  %127 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %126, i64 -1
  %128 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %127, i64 0, i32 0, i32 0
  %129 = load i32*, i32** %128, align 8
  %130 = icmp eq i32* %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %125
  %132 = ptrtoint i32* %129 to i64
  %133 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %126, i64 -1, i32 0, i32 1
  %134 = bitcast i32** %133 to i64*
  store i64 %132, i64* %134, align 8
  %135 = bitcast i32* %129 to i8*
  call void @_ZdlPv(i8* %135) #12
  br label %136

136:                                              ; preds = %131, %125
  %137 = icmp eq %"class.std::__1::vector.3"* %127, %118
  br i1 %137, label %138, label %125

138:                                              ; preds = %136
  %139 = bitcast %"class.std::__1::vector.463"* %87 to i8**
  %140 = load i8*, i8** %139, align 8
  br label %141

141:                                              ; preds = %138, %120
  %142 = phi i8* [ %140, %138 ], [ %121, %120 ]
  store %"class.std::__1::vector.3"* %118, %"class.std::__1::vector.3"** %122, align 8
  call void @_ZdlPv(i8* %142) #12
  br label %143

143:                                              ; preds = %115, %141
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %85) #13
  br label %144

144:                                              ; preds = %70, %143
  %145 = phi i32 [ %116, %143 ], [ %1, %70 ]
  ret i32 %145
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #4

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #4

declare i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.21", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %14) #13
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5, i32 0, i32 2
  %19 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %19, i64 0, i32 2
  %21 = load i8, i8* %20, align 8, !range !6
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %156

23:                                               ; preds = %17
  %24 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %24, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %25 = getelementptr inbounds i8, i8* %24, i64 37
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5, i32 0, i32 1, i32 0
  %27 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5, i32 0, i32 0
  tail call void %27(%"union.std::__1::__function::__policy_storage"* %28, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %24) #13
  tail call void @_ZdlPv(i8* nonnull %24) #12
  br label %156

29:                                               ; preds = %10, %4
  %30 = phi i32 [ 0, %4 ], [ %15, %10 ]
  %31 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %5, i64 0, i32 0, i32 0, i32 0
  %33 = tail call i8* @_Znwm(i64 112) #12
  %34 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %35 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %36 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13
  %37 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #13
  %38 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38) #13
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %43 = bitcast i32** %41 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %42, %"struct.std::__1::aligned_storage<4, 4>::type"** %43, align 8
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %45 = bitcast %"class.std::__1::unique_ptr.0"* %44 to i64*
  store i64 0, i64* %45, align 8
  %46 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %42 to i32*
  store i64 1, i64* %40, align 8
  store i32 %3, i32* %46, align 8
  %47 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  store i32 1, i32* %47, align 8
  %48 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %48, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 2
  %52 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 3, i64 0
  %53 = bitcast i32** %51 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %52, %"struct.std::__1::aligned_storage<4, 4>::type"** %53, align 8
  %54 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4
  %55 = bitcast %"class.std::__1::unique_ptr.0"* %54 to i64*
  store i64 0, i64* %55, align 8
  %56 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %48, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #13
  %57 = call i8* @_Znwm(i64 48) #12
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %59 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %57, i64 48
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"struct.spvtools::opt::Operand"** %61 to i8**
  store i8* %60, i8** %62, align 8
  %63 = bitcast i8* %57 to i32*
  %64 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  %65 = load i32, i32* %64, align 8
  store i32 %65, i32* %63, align 8
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to %"class.spvtools::utils::SmallVector"*
  %68 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %69 = bitcast i8* %66 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds i8, i8* %57, i64 16
  %71 = bitcast i8* %70 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds i8, i8* %57, i64 24
  %73 = getelementptr inbounds i8, i8* %57, i64 32
  %74 = bitcast i8* %72 to i8**
  store i8* %73, i8** %74, align 8
  %75 = getelementptr inbounds i8, i8* %57, i64 40
  %76 = bitcast i8* %75 to i64*
  store i64 0, i64* %76, align 8
  %77 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %67, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %68) #13
  %78 = getelementptr inbounds i8, i8* %57, i64 48
  %79 = bitcast i8* %33 to %"class.spvtools::opt::Instruction"*
  %80 = bitcast %"struct.spvtools::opt::Operand"** %58 to i64*
  %81 = ptrtoint i8* %78 to i64
  store i64 %81, i64* %80, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %79, %"class.spvtools::opt::IRContext"* %35, i32 %2, i32 %1, i32 %30, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #13
  %82 = ptrtoint i8* %33 to i64
  %83 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %85 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %84, align 8
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %85, null
  br i1 %86, label %115, label %87

87:                                               ; preds = %29
  %88 = bitcast %"struct.spvtools::opt::Operand"* %85 to i8*
  %89 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %58, align 8
  %90 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %90, label %113, label %91

91:                                               ; preds = %87, %109
  %92 = phi %"struct.spvtools::opt::Operand"* [ %93, %109 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %92, i64 -1
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %92, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %92, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %96 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %95, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %95, align 8
  %97 = icmp eq %"class.std::__1::vector.3"* %96, null
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %96, i64 0, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = icmp eq i32* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = ptrtoint i32* %100 to i64
  %104 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %96, i64 0, i32 0, i32 1
  %105 = bitcast i32** %104 to i64*
  store i64 %103, i64* %105, align 8
  %106 = bitcast i32* %100 to i8*
  call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %102, %98
  %108 = bitcast %"class.std::__1::vector.3"* %96 to i8*
  call void @_ZdlPv(i8* %108) #12
  br label %109

109:                                              ; preds = %107, %91
  %110 = icmp eq %"struct.spvtools::opt::Operand"* %93, %85
  br i1 %110, label %111, label %91

111:                                              ; preds = %109
  %112 = load i8*, i8** %59, align 8
  br label %113

113:                                              ; preds = %111, %87
  %114 = phi i8* [ %112, %111 ], [ %88, %87 ]
  store %"struct.spvtools::opt::Operand"* %85, %"struct.spvtools::opt::Operand"** %58, align 8
  call void @_ZdlPv(i8* %114) #12
  br label %115

115:                                              ; preds = %29, %113
  %116 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %117 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %118 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %117, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %117, align 8
  %119 = icmp eq %"class.std::__1::vector.3"* %118, null
  br i1 %119, label %131, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %118, i64 0, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = icmp eq i32* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %120
  %125 = ptrtoint i32* %122 to i64
  %126 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %118, i64 0, i32 0, i32 1
  %127 = bitcast i32** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = bitcast i32* %122 to i8*
  call void @_ZdlPv(i8* %128) #12
  br label %129

129:                                              ; preds = %124, %120
  %130 = bitcast %"class.std::__1::vector.3"* %118 to i8*
  call void @_ZdlPv(i8* %130) #12
  br label %131

131:                                              ; preds = %115, %129
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %132 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %133 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %132, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %132, align 8
  %134 = icmp eq %"class.std::__1::vector.3"* %133, null
  br i1 %134, label %146, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %133, i64 0, i32 0, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %135
  %140 = ptrtoint i32* %137 to i64
  %141 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %133, i64 0, i32 0, i32 1
  %142 = bitcast i32** %141 to i64*
  store i64 %140, i64* %142, align 8
  %143 = bitcast i32* %137 to i8*
  call void @_ZdlPv(i8* %143) #12
  br label %144

144:                                              ; preds = %139, %135
  %145 = bitcast %"class.std::__1::vector.3"* %133 to i8*
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %131, %144
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #13
  %147 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %5)
  %148 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %32, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %32, align 8
  %149 = icmp eq %"class.spvtools::opt::Instruction"* %148, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %146
  %151 = bitcast %"class.spvtools::opt::Instruction"* %148 to void (%"class.spvtools::opt::Instruction"*)***
  %152 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %152, i64 1
  %154 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %153, align 8
  call void %154(%"class.spvtools::opt::Instruction"* nonnull %148) #13
  br label %155

155:                                              ; preds = %146, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %156

156:                                              ; preds = %23, %17, %155
  %157 = phi %"class.spvtools::opt::Instruction"* [ %147, %155 ], [ null, %17 ], [ null, %23 ]
  ret %"class.spvtools::opt::Instruction"* %157
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass15GenUintCastCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* nocapture, i32, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN8spvtools3opt14InstrumentPass15Gen32BitCvtCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %1, %"class.spvtools::opt::InstructionBuilder"* %2)
  %5 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = trunc i32 %8 to i16
  %10 = icmp slt i16 %9, 0
  br i1 %10, label %29, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 5
  %13 = tail call i8* @_Znwm(i64 240) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %14, %"class.std::__1::function"* dereferenceable(32) %12, %"class.spvtools::opt::IRContext"* %6) #13
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 20
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.480"* %16 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %11
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %18) #13
  %22 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %18 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %21, %11
  %24 = load i32, i32* %7, align 8
  %25 = or i32 %24, 32768
  store i32 %25, i32* %7, align 8
  %26 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 11
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %3, %23
  %30 = phi i32 [ %8, %3 ], [ %28, %23 ]
  %31 = phi %"class.spvtools::opt::IRContext"* [ %6, %3 ], [ %26, %23 ]
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 20, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 11
  %35 = and i32 %30, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %61

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %38, align 8
  %40 = tail call i8* @_Znwm(i64 104) #12
  %41 = bitcast i8* %40 to %"class.spvtools::opt::analysis::DefUseManager"*
  %42 = getelementptr inbounds i8, i8* %40, i64 32
  %43 = bitcast i8* %42 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %40, i64 48
  %45 = getelementptr inbounds i8, i8* %40, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #13
  %46 = bitcast i8* %45 to i8**
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds i8, i8* %40, i64 64
  %48 = getelementptr inbounds i8, i8* %40, i64 96
  %49 = bitcast i8* %48 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %49, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %41, %"class.spvtools::opt::Module"* %39) #13
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 6
  %51 = ptrtoint i8* %40 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %50, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %52, align 8
  %54 = bitcast %"class.std::__1::unique_ptr.62"* %50 to i64*
  store i64 %51, i64* %54, align 8
  %55 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %53, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %37
  %57 = bitcast %"class.std::__1::unique_ptr.62"* %50 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %57, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %53) #13
  br label %58

58:                                               ; preds = %56, %37
  %59 = load i32, i32* %34, align 8
  %60 = or i32 %59, 1
  store i32 %60, i32* %34, align 8
  br label %61

61:                                               ; preds = %29, %58
  %62 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 6, i32 0, i32 0, i32 0
  %63 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %62, align 8
  %64 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %63, i32 %4) #13
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 3
  %66 = load i8, i8* %65, align 4, !range !6
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %61
  %69 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %64, i32 0) #13
  br label %70

70:                                               ; preds = %61, %68
  %71 = phi i32 [ %69, %68 ], [ 0, %61 ]
  %72 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %33, i32 %71) #13
  %73 = bitcast %"class.spvtools::opt::analysis::Type"* %72 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %74 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %74, i64 10
  %76 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %75, align 8
  %77 = tail call %"class.spvtools::opt::analysis::Integer"* %76(%"class.spvtools::opt::analysis::Type"* %72) #13
  %78 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %77, i64 0, i32 2
  %79 = load i8, i8* %78, align 8, !range !6
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %92, label %81

81:                                               ; preds = %70
  %82 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %83 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %82, i32 124, i32 %4)
  %84 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %83, i64 0, i32 4
  %85 = load i8, i8* %84, align 1, !range !6
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %92, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %83, i64 0, i32 3
  %89 = load i8, i8* %88, align 4, !range !6
  %90 = zext i8 %89 to i32
  %91 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %83, i32 %90) #13
  br label %92

92:                                               ; preds = %70, %87, %81
  %93 = phi i32 [ %4, %70 ], [ %91, %87 ], [ 0, %81 ]
  ret i32 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 19
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %70

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = trunc i32 %10 to i16
  %12 = icmp slt i16 %11, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 5
  %15 = tail call i8* @_Znwm(i64 240) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %16, %"class.std::__1::function"* dereferenceable(32) %14, %"class.spvtools::opt::IRContext"* %8) #13
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.480"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %20) #13
  %24 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %13
  %26 = load i32, i32* %9, align 8
  %27 = or i32 %26, 32768
  store i32 %27, i32* %9, align 8
  br label %28

28:                                               ; preds = %6, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %29, align 8
  %31 = bitcast %"class.spvtools::opt::analysis::Integer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 48, i1 false)
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::vector.463"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #13
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 2
  store i32 2, i32* %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 1
  store i32 32, i32* %36, align 4
  %37 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 2
  store i8 0, i8* %37, align 8
  %38 = bitcast %"class.spvtools::opt::analysis::Integer"* %2 to %"class.spvtools::opt::analysis::Type"*
  %39 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* nonnull %38) #13
  %40 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* %39) #13
  store i32 %40, i32* %3, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %33, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %41, align 8
  %43 = icmp eq %"class.std::__1::vector.3"* %42, null
  br i1 %43, label %68, label %44

44:                                               ; preds = %28
  %45 = bitcast %"class.std::__1::vector.3"* %42 to i8*
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %47 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %46, align 8
  %48 = icmp eq %"class.std::__1::vector.3"* %47, %42
  br i1 %48, label %65, label %49

49:                                               ; preds = %44, %60
  %50 = phi %"class.std::__1::vector.3"* [ %51, %60 ], [ %47, %44 ]
  %51 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 -1
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %51, i64 0, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = icmp eq i32* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %49
  %56 = ptrtoint i32* %53 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 -1, i32 0, i32 1
  %58 = bitcast i32** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast i32* %53 to i8*
  call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %55, %49
  %61 = icmp eq %"class.std::__1::vector.3"* %51, %42
  br i1 %61, label %62, label %49

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::vector.463"* %33 to i8**
  %64 = load i8*, i8** %63, align 8
  br label %65

65:                                               ; preds = %62, %44
  %66 = phi i8* [ %64, %62 ], [ %45, %44 ]
  store %"class.std::__1::vector.3"* %42, %"class.std::__1::vector.3"** %46, align 8
  call void @_ZdlPv(i8* %66) #12
  %67 = load i32, i32* %3, align 4
  br label %68

68:                                               ; preds = %28, %65
  %69 = phi i32 [ %40, %28 ], [ %67, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #13
  br label %70

70:                                               ; preds = %68, %1
  %71 = phi i32 [ %69, %68 ], [ %4, %1 ]
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* nocapture, i32, i32, i32, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  %6 = tail call i32 @_ZN8spvtools3opt14InstrumentPass15GenUintCastCodeEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %3, %"class.spvtools::opt::InstructionBuilder"* %4)
  %7 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %8 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %4, i32 %2, i1 zeroext false) #13
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %8, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !6
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %8, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !6
  %15 = zext i8 %14 to i32
  %16 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %8, i32 %15) #13
  br label %17

17:                                               ; preds = %5, %12
  %18 = phi i32 [ %16, %12 ], [ 0, %5 ]
  %19 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %4, i32 %7, i32 128, i32 %1, i32 %18)
  %20 = tail call i32 @_ZN8spvtools3opt14InstrumentPass17GetOutputBufferIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %21 = tail call i32 @_ZN8spvtools3opt14InstrumentPass20GetOutputBufferPtrIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %22 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %4, i32 1, i1 zeroext false) #13
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !6
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 3
  %28 = load i8, i8* %27, align 4, !range !6
  %29 = zext i8 %28 to i32
  %30 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %29) #13
  br label %31

31:                                               ; preds = %17, %26
  %32 = phi i32 [ %30, %26 ], [ 0, %17 ]
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %19, i64 0, i32 4
  %34 = load i8, i8* %33, align 1, !range !6
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %19, i64 0, i32 3
  %38 = load i8, i8* %37, align 4, !range !6
  %39 = zext i8 %38 to i32
  %40 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %19, i32 %39) #13
  br label %41

41:                                               ; preds = %31, %36
  %42 = phi i32 [ %40, %36 ], [ 0, %31 ]
  %43 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder12AddTernaryOpEj6SpvOp_jjj(%"class.spvtools::opt::InstructionBuilder"* %4, i32 %21, i32 65, i32 %20, i32 %32, i32 %42)
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 4
  %45 = load i8, i8* %44, align 1, !range !6
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 3
  %49 = load i8, i8* %48, align 4, !range !6
  %50 = zext i8 %49 to i32
  %51 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 %50) #13
  br label %52

52:                                               ; preds = %41, %47
  %53 = phi i32 [ %51, %47 ], [ 0, %41 ]
  %54 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %4, i32 0, i32 62, i32 %53, i32 %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.21", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %14 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %15, align 8
  %17 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %16) #13
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 2
  %21 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %21, i64 0, i32 2
  %23 = load i8, i8* %22, align 8, !range !6
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %211

25:                                               ; preds = %19
  %26 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %27 = getelementptr inbounds i8, i8* %26, i64 37
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 1, i32 0
  %29 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 0
  tail call void %29(%"union.std::__1::__function::__policy_storage"* %30, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %26) #13
  tail call void @_ZdlPv(i8* nonnull %26) #12
  br label %211

31:                                               ; preds = %12, %5
  %32 = phi i32 [ 0, %5 ], [ %17, %12 ]
  %33 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %34, align 8
  %35 = tail call i8* @_Znwm(i64 112) #12
  %36 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %37 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %36, align 8
  %38 = icmp eq i32 %2, 62
  %39 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #13
  %40 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %40) #13
  %41 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %41) #13
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %45 to i32*
  store i64 1, i64* %43, align 8
  store i32 %3, i32* %49, align 8
  %50 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  store i32 1, i32* %50, align 8
  %51 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %52 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %51, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 2
  %55 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 3, i64 0
  %56 = bitcast i32** %54 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %55, %"struct.std::__1::aligned_storage<4, 4>::type"** %56, align 8
  %57 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4
  %58 = bitcast %"class.std::__1::unique_ptr.0"* %57 to i64*
  store i64 0, i64* %58, align 8
  %59 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %51, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #13
  %60 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #13
  %61 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %65 = bitcast i32** %63 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %64, %"struct.std::__1::aligned_storage<4, 4>::type"** %65, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %67 = bitcast %"class.std::__1::unique_ptr.0"* %66 to i64*
  store i64 0, i64* %67, align 8
  %68 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %64 to i32*
  store i64 1, i64* %62, align 8
  store i32 %4, i32* %68, align 8
  %69 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 0
  store i32 1, i32* %69, align 8
  %70 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1
  %71 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %70, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 2
  %74 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 3, i64 0
  %75 = bitcast i32** %73 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %74, %"struct.std::__1::aligned_storage<4, 4>::type"** %75, align 8
  %76 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 4
  %77 = bitcast %"class.std::__1::unique_ptr.0"* %76 to i64*
  store i64 0, i64* %77, align 8
  %78 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %70, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #13
  %79 = call i8* @_Znwm(i64 96) #12
  %80 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %81 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %79, i8** %81, align 8
  %82 = getelementptr inbounds i8, i8* %79, i64 96
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %84 = bitcast %"struct.spvtools::opt::Operand"** %83 to i8**
  store i8* %82, i8** %84, align 8
  %85 = bitcast i8* %79 to i32*
  %86 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  %87 = load i32, i32* %86, align 8
  store i32 %87, i32* %85, align 8
  %88 = getelementptr inbounds i8, i8* %79, i64 8
  %89 = bitcast i8* %88 to %"class.spvtools::utils::SmallVector"*
  %90 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %91 = bitcast i8* %88 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds i8, i8* %79, i64 16
  %93 = bitcast i8* %92 to i64*
  store i64 0, i64* %93, align 8
  %94 = getelementptr inbounds i8, i8* %79, i64 24
  %95 = getelementptr inbounds i8, i8* %79, i64 32
  %96 = bitcast i8* %94 to i8**
  store i8* %95, i8** %96, align 8
  %97 = getelementptr inbounds i8, i8* %79, i64 40
  %98 = bitcast i8* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %89, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %90) #13
  %100 = getelementptr inbounds i8, i8* %79, i64 48
  %101 = bitcast i8* %100 to i32*
  %102 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 0
  %103 = load i32, i32* %102, align 8
  store i32 %103, i32* %101, align 8
  %104 = getelementptr inbounds i8, i8* %79, i64 56
  %105 = bitcast i8* %104 to %"class.spvtools::utils::SmallVector"*
  %106 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1
  %107 = bitcast i8* %104 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds i8, i8* %79, i64 64
  %109 = bitcast i8* %108 to i64*
  store i64 0, i64* %109, align 8
  %110 = getelementptr inbounds i8, i8* %79, i64 72
  %111 = getelementptr inbounds i8, i8* %79, i64 80
  %112 = bitcast i8* %110 to i8**
  store i8* %111, i8** %112, align 8
  %113 = getelementptr inbounds i8, i8* %79, i64 88
  %114 = bitcast i8* %113 to i64*
  store i64 0, i64* %114, align 8
  %115 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %105, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %106) #13
  %116 = getelementptr inbounds i8, i8* %79, i64 96
  %117 = bitcast i8* %35 to %"class.spvtools::opt::Instruction"*
  %118 = select i1 %38, i32 0, i32 %32
  %119 = bitcast %"struct.spvtools::opt::Operand"** %80 to i64*
  %120 = ptrtoint i8* %116 to i64
  store i64 %120, i64* %119, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %117, %"class.spvtools::opt::IRContext"* %37, i32 %2, i32 %1, i32 %118, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #13
  %121 = ptrtoint i8* %35 to i64
  %122 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %124 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %123, align 8
  %125 = icmp eq %"struct.spvtools::opt::Operand"* %124, null
  br i1 %125, label %154, label %126

126:                                              ; preds = %31
  %127 = bitcast %"struct.spvtools::opt::Operand"* %124 to i8*
  %128 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %80, align 8
  %129 = icmp eq %"struct.spvtools::opt::Operand"* %128, %124
  br i1 %129, label %152, label %130

130:                                              ; preds = %126, %148
  %131 = phi %"struct.spvtools::opt::Operand"* [ %132, %148 ], [ %128, %126 ]
  %132 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %131, i64 -1
  %133 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %131, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8
  %134 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %131, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %135 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %134, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %134, align 8
  %136 = icmp eq %"class.std::__1::vector.3"* %135, null
  br i1 %136, label %148, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %135, i64 0, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = icmp eq i32* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %137
  %142 = ptrtoint i32* %139 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %135, i64 0, i32 0, i32 1
  %144 = bitcast i32** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast i32* %139 to i8*
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %141, %137
  %147 = bitcast %"class.std::__1::vector.3"* %135 to i8*
  call void @_ZdlPv(i8* %147) #12
  br label %148

148:                                              ; preds = %146, %130
  %149 = icmp eq %"struct.spvtools::opt::Operand"* %132, %124
  br i1 %149, label %150, label %130

150:                                              ; preds = %148
  %151 = load i8*, i8** %81, align 8
  br label %152

152:                                              ; preds = %150, %126
  %153 = phi i8* [ %151, %150 ], [ %127, %126 ]
  store %"struct.spvtools::opt::Operand"* %124, %"struct.spvtools::opt::Operand"** %80, align 8
  call void @_ZdlPv(i8* %153) #12
  br label %154

154:                                              ; preds = %31, %152
  %155 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %156 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %157 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %156, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %156, align 8
  %158 = icmp eq %"class.std::__1::vector.3"* %157, null
  br i1 %158, label %170, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %157, i64 0, i32 0, i32 0
  %161 = load i32*, i32** %160, align 8
  %162 = icmp eq i32* %161, null
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = ptrtoint i32* %161 to i64
  %165 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %157, i64 0, i32 0, i32 1
  %166 = bitcast i32** %165 to i64*
  store i64 %164, i64* %166, align 8
  %167 = bitcast i32* %161 to i8*
  call void @_ZdlPv(i8* %167) #12
  br label %168

168:                                              ; preds = %163, %159
  %169 = bitcast %"class.std::__1::vector.3"* %157 to i8*
  call void @_ZdlPv(i8* %169) #12
  br label %170

170:                                              ; preds = %154, %168
  %171 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %171, align 8
  %172 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %173 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %172, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %172, align 8
  %174 = icmp eq %"class.std::__1::vector.3"* %173, null
  br i1 %174, label %224, label %213

175:                                              ; preds = %224
  %176 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %226, i64 0, i32 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = icmp eq i32* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = ptrtoint i32* %177 to i64
  %181 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %226, i64 0, i32 0, i32 1
  %182 = bitcast i32** %181 to i64*
  store i64 %180, i64* %182, align 8
  %183 = bitcast i32* %177 to i8*
  call void @_ZdlPv(i8* %183) #12
  br label %184

184:                                              ; preds = %179, %175
  %185 = bitcast %"class.std::__1::vector.3"* %226 to i8*
  call void @_ZdlPv(i8* %185) #12
  br label %186

186:                                              ; preds = %224, %184
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %187 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %188 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %187, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %187, align 8
  %189 = icmp eq %"class.std::__1::vector.3"* %188, null
  br i1 %189, label %201, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %188, i64 0, i32 0, i32 0
  %192 = load i32*, i32** %191, align 8
  %193 = icmp eq i32* %192, null
  br i1 %193, label %199, label %194

194:                                              ; preds = %190
  %195 = ptrtoint i32* %192 to i64
  %196 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %188, i64 0, i32 0, i32 1
  %197 = bitcast i32** %196 to i64*
  store i64 %195, i64* %197, align 8
  %198 = bitcast i32* %192 to i8*
  call void @_ZdlPv(i8* %198) #12
  br label %199

199:                                              ; preds = %194, %190
  %200 = bitcast %"class.std::__1::vector.3"* %188 to i8*
  call void @_ZdlPv(i8* %200) #12
  br label %201

201:                                              ; preds = %186, %199
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #13
  %202 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %6)
  %203 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %34, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %34, align 8
  %204 = icmp eq %"class.spvtools::opt::Instruction"* %203, null
  br i1 %204, label %210, label %205

205:                                              ; preds = %201
  %206 = bitcast %"class.spvtools::opt::Instruction"* %203 to void (%"class.spvtools::opt::Instruction"*)***
  %207 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %206, align 8
  %208 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %207, i64 1
  %209 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %208, align 8
  call void %209(%"class.spvtools::opt::Instruction"* nonnull %203) #13
  br label %210

210:                                              ; preds = %201, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br label %211

211:                                              ; preds = %25, %19, %210
  %212 = phi %"class.spvtools::opt::Instruction"* [ %202, %210 ], [ null, %19 ], [ null, %25 ]
  ret %"class.spvtools::opt::Instruction"* %212

213:                                              ; preds = %170
  %214 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %173, i64 0, i32 0, i32 0
  %215 = load i32*, i32** %214, align 8
  %216 = icmp eq i32* %215, null
  br i1 %216, label %222, label %217

217:                                              ; preds = %213
  %218 = ptrtoint i32* %215 to i64
  %219 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %173, i64 0, i32 0, i32 1
  %220 = bitcast i32** %219 to i64*
  store i64 %218, i64* %220, align 8
  %221 = bitcast i32* %215 to i8*
  call void @_ZdlPv(i8* %221) #12
  br label %222

222:                                              ; preds = %217, %213
  %223 = bitcast %"class.std::__1::vector.3"* %173 to i8*
  call void @_ZdlPv(i8* %223) #12
  br label %224

224:                                              ; preds = %222, %170
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %225 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %226 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %225, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %225, align 8
  %227 = icmp eq %"class.std::__1::vector.3"* %226, null
  br i1 %227, label %186, label %175
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass17GetOutputBufferIdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %3 = alloca %"class.spvtools::opt::analysis::Struct", align 8
  %4 = alloca %"class.std::__1::vector.956", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"struct.spvtools::opt::Operand", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %452

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 11
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %44

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = bitcast %"class.spvtools::opt::Module"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = tail call i8* @_Znwm(i64 48) #12
  %25 = bitcast i8* %24 to %"class.spvtools::opt::analysis::DecorationManager"*
  %26 = getelementptr inbounds i8, i8* %24, i64 32
  %27 = bitcast i8* %26 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %24, i64 40
  %29 = bitcast i8* %28 to i64*
  store i64 %23, i64* %29, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %25) #13
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 7
  %31 = ptrtoint i8* %24 to i64
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %30, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %32, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.122"* %30 to i64*
  store i64 %31, i64* %34, align 8
  %35 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %33, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %20
  %37 = bitcast %"class.std::__1::unique_ptr.122"* %30 to %"struct.std::__1::default_delete.150"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %37, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %33) #13
  br label %38

38:                                               ; preds = %36, %20
  %39 = load i32, i32* %16, align 8
  %40 = or i32 %39, 4
  store i32 %40, i32* %16, align 8
  %41 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 11
  %43 = load i32, i32* %42, align 8
  br label %44

44:                                               ; preds = %13, %38
  %45 = phi i32 [ %17, %13 ], [ %43, %38 ]
  %46 = phi %"class.spvtools::opt::IRContext"* [ %15, %13 ], [ %41, %38 ]
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 7, i32 0, i32 0, i32 0
  %48 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 11
  %50 = trunc i32 %45 to i16
  %51 = icmp slt i16 %50, 0
  br i1 %51, label %67, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 5
  %54 = tail call i8* @_Znwm(i64 240) #12
  %55 = bitcast i8* %54 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %55, %"class.std::__1::function"* dereferenceable(32) %53, %"class.spvtools::opt::IRContext"* %46) #13
  %56 = ptrtoint i8* %54 to i64
  %57 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 20
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %58, align 8
  %60 = bitcast %"class.std::__1::unique_ptr.480"* %57 to i64*
  store i64 %56, i64* %60, align 8
  %61 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %59, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %52
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %59) #13
  %63 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %59 to i8*
  tail call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %62, %52
  %65 = load i32, i32* %49, align 8
  %66 = or i32 %65, 32768
  store i32 %66, i32* %49, align 8
  br label %67

67:                                               ; preds = %44, %64
  %68 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 20, i32 0, i32 0, i32 0
  %69 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %68, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 27
  %71 = tail call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt14InstrumentPass24GetUintXRuntimeArrayTypeEjPPNS0_8analysis4TypeE(%"class.spvtools::opt::InstrumentPass"* %0, i32 32, %"class.spvtools::opt::analysis::Type"** %70) #13
  %72 = bitcast %"class.spvtools::opt::analysis::Integer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %72) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 48, i1 false)
  %73 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 1
  %75 = bitcast %"class.std::__1::vector.463"* %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #13
  %76 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 2
  store i32 2, i32* %76, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 1
  store i32 32, i32* %77, align 4
  %78 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 2
  store i8 0, i8* %78, align 8
  %79 = bitcast %"class.spvtools::opt::analysis::Integer"* %2 to %"class.spvtools::opt::analysis::Type"*
  %80 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %69, %"class.spvtools::opt::analysis::Type"* nonnull %79) #13
  %81 = bitcast %"class.spvtools::opt::analysis::Struct"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %81) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 88, i1 false)
  %82 = bitcast %"class.std::__1::vector.956"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #13
  %83 = call i8* @_Znwm(i64 16) #12
  %84 = bitcast i8* %83 to %"class.spvtools::opt::analysis::Type"**
  %85 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %4, i64 0, i32 0, i32 1
  %86 = bitcast %"class.std::__1::vector.956"* %4 to i8**
  store i8* %83, i8** %86, align 8
  %87 = getelementptr inbounds i8, i8* %83, i64 16
  %88 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %89 = bitcast %"class.spvtools::opt::analysis::Type"*** %88 to i8**
  store i8* %87, i8** %89, align 8
  %90 = bitcast %"class.spvtools::opt::analysis::Type"*** %85 to i64*
  store %"class.spvtools::opt::analysis::Type"* %80, %"class.spvtools::opt::analysis::Type"** %84, align 8
  %91 = getelementptr inbounds i8, i8* %83, i64 8
  %92 = bitcast i8* %91 to %"class.spvtools::opt::analysis::Type"**
  store %"class.spvtools::opt::analysis::Type"* %71, %"class.spvtools::opt::analysis::Type"** %92, align 8
  %93 = ptrtoint i8* %87 to i64
  store i64 %93, i64* %90, align 8
  call void @_ZN8spvtools3opt8analysis6StructC1ERKNSt3__16vectorIPKNS1_4TypeENS3_9allocatorIS7_EEEE(%"class.spvtools::opt::analysis::Struct"* nonnull %3, %"class.std::__1::vector.956"* nonnull dereferenceable(24) %4) #13
  %94 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %4, i64 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %94, align 8
  %96 = icmp eq %"class.spvtools::opt::analysis::Type"** %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %67
  %98 = ptrtoint %"class.spvtools::opt::analysis::Type"** %95 to i64
  store i64 %98, i64* %90, align 8
  %99 = bitcast %"class.spvtools::opt::analysis::Type"** %95 to i8*
  call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %67, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #13
  %101 = bitcast %"class.spvtools::opt::analysis::Struct"* %3 to %"class.spvtools::opt::analysis::Type"*
  %102 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %69, %"class.spvtools::opt::analysis::Type"* nonnull %101) #13
  %103 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %69, %"class.spvtools::opt::analysis::Type"* %102) #13
  call void @_ZN8spvtools3opt8analysis17DecorationManager13AddDecorationEjj(%"class.spvtools::opt::analysis::DecorationManager"* %48, i32 %103, i32 2) #13
  call void @_ZN8spvtools3opt8analysis17DecorationManager19AddMemberDecorationEjjjj(%"class.spvtools::opt::analysis::DecorationManager"* %48, i32 %103, i32 0, i32 35, i32 0) #13
  call void @_ZN8spvtools3opt8analysis17DecorationManager19AddMemberDecorationEjjjj(%"class.spvtools::opt::analysis::DecorationManager"* %48, i32 %103, i32 1, i32 35, i32 4) #13
  %104 = call i32 @_ZN8spvtools3opt8analysis11TypeManager17FindPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"* %69, i32 %103, i32 12) #13
  %105 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 4, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %106, align 8
  %108 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %107) #13
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %122

110:                                              ; preds = %100
  %111 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 5, i32 0, i32 2
  %112 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %112, i64 0, i32 2
  %114 = load i8, i8* %113, align 8, !range !6
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %122

116:                                              ; preds = %110
  %117 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %117, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %118 = getelementptr inbounds i8, i8* %117, i64 37
  store i8 0, i8* %118, align 1
  %119 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 5, i32 0, i32 1, i32 0
  %120 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %119, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 5, i32 0, i32 0
  call void %120(%"union.std::__1::__function::__policy_storage"* %121, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %117) #13
  call void @_ZdlPv(i8* nonnull %117) #12
  br label %122

122:                                              ; preds = %100, %110, %116
  store i32 %108, i32* %10, align 4
  %123 = call i8* @_Znwm(i64 112) #12
  %124 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %125 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #13
  %126 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %126) #13
  %127 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %127) #13
  %128 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  %129 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %130 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %131 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %132 = bitcast i32** %130 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %131, %"struct.std::__1::aligned_storage<4, 4>::type"** %132, align 8
  %133 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %134 = bitcast %"class.std::__1::unique_ptr.0"* %133 to i64*
  store i64 0, i64* %134, align 8
  %135 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %131 to i32*
  store i64 1, i64* %129, align 8
  store i32 12, i32* %135, align 8
  %136 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  store i32 6, i32* %136, align 8
  %137 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %138 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %137, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8
  %139 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %139, align 8
  %140 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 2
  %141 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 3, i64 0
  %142 = bitcast i32** %140 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %141, %"struct.std::__1::aligned_storage<4, 4>::type"** %142, align 8
  %143 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4
  %144 = bitcast %"class.std::__1::unique_ptr.0"* %143 to i64*
  store i64 0, i64* %144, align 8
  %145 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %137, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #13
  %146 = call i8* @_Znwm(i64 48) #12
  %147 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %148 = bitcast %"struct.spvtools::opt::Operand"** %147 to i8**
  store i8* %146, i8** %148, align 8
  %149 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %146, i8** %149, align 8
  %150 = getelementptr inbounds i8, i8* %146, i64 48
  %151 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %152 = bitcast %"struct.spvtools::opt::Operand"** %151 to i8**
  store i8* %150, i8** %152, align 8
  %153 = bitcast i8* %146 to i32*
  %154 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  %155 = load i32, i32* %154, align 8
  store i32 %155, i32* %153, align 8
  %156 = getelementptr inbounds i8, i8* %146, i64 8
  %157 = bitcast i8* %156 to %"class.spvtools::utils::SmallVector"*
  %158 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %159 = bitcast i8* %156 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  %160 = getelementptr inbounds i8, i8* %146, i64 16
  %161 = bitcast i8* %160 to i64*
  store i64 0, i64* %161, align 8
  %162 = getelementptr inbounds i8, i8* %146, i64 24
  %163 = getelementptr inbounds i8, i8* %146, i64 32
  %164 = bitcast i8* %162 to i8**
  store i8* %163, i8** %164, align 8
  %165 = getelementptr inbounds i8, i8* %146, i64 40
  %166 = bitcast i8* %165 to i64*
  store i64 0, i64* %166, align 8
  %167 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %157, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %158) #13
  %168 = getelementptr inbounds i8, i8* %146, i64 48
  %169 = bitcast i8* %123 to %"class.spvtools::opt::Instruction"*
  %170 = bitcast %"struct.spvtools::opt::Operand"** %147 to i64*
  %171 = ptrtoint i8* %168 to i64
  store i64 %171, i64* %170, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %169, %"class.spvtools::opt::IRContext"* %124, i32 59, i32 %104, i32 %108, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #13
  %172 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %173 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %172, align 8
  %174 = icmp eq %"struct.spvtools::opt::Operand"* %173, null
  br i1 %174, label %203, label %175

175:                                              ; preds = %122
  %176 = bitcast %"struct.spvtools::opt::Operand"* %173 to i8*
  %177 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %147, align 8
  %178 = icmp eq %"struct.spvtools::opt::Operand"* %177, %173
  br i1 %178, label %201, label %179

179:                                              ; preds = %175, %197
  %180 = phi %"struct.spvtools::opt::Operand"* [ %181, %197 ], [ %177, %175 ]
  %181 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %180, i64 -1
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %180, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %182, align 8
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %180, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %184 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %183, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %183, align 8
  %185 = icmp eq %"class.std::__1::vector.3"* %184, null
  br i1 %185, label %197, label %186

186:                                              ; preds = %179
  %187 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %184, i64 0, i32 0, i32 0
  %188 = load i32*, i32** %187, align 8
  %189 = icmp eq i32* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %186
  %191 = ptrtoint i32* %188 to i64
  %192 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %184, i64 0, i32 0, i32 1
  %193 = bitcast i32** %192 to i64*
  store i64 %191, i64* %193, align 8
  %194 = bitcast i32* %188 to i8*
  call void @_ZdlPv(i8* %194) #12
  br label %195

195:                                              ; preds = %190, %186
  %196 = bitcast %"class.std::__1::vector.3"* %184 to i8*
  call void @_ZdlPv(i8* %196) #12
  br label %197

197:                                              ; preds = %195, %179
  %198 = icmp eq %"struct.spvtools::opt::Operand"* %181, %173
  br i1 %198, label %199, label %179

199:                                              ; preds = %197
  %200 = load i8*, i8** %149, align 8
  br label %201

201:                                              ; preds = %199, %175
  %202 = phi i8* [ %200, %199 ], [ %176, %175 ]
  store %"struct.spvtools::opt::Operand"* %173, %"struct.spvtools::opt::Operand"** %147, align 8
  call void @_ZdlPv(i8* %202) #12
  br label %203

203:                                              ; preds = %122, %201
  %204 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %204, align 8
  %205 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %206 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %205, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %205, align 8
  %207 = icmp eq %"class.std::__1::vector.3"* %206, null
  br i1 %207, label %219, label %208

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 0
  %210 = load i32*, i32** %209, align 8
  %211 = icmp eq i32* %210, null
  br i1 %211, label %217, label %212

212:                                              ; preds = %208
  %213 = ptrtoint i32* %210 to i64
  %214 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 1
  %215 = bitcast i32** %214 to i64*
  store i64 %213, i64* %215, align 8
  %216 = bitcast i32* %210 to i8*
  call void @_ZdlPv(i8* %216) #12
  br label %217

217:                                              ; preds = %212, %208
  %218 = bitcast %"class.std::__1::vector.3"* %206 to i8*
  call void @_ZdlPv(i8* %218) #12
  br label %219

219:                                              ; preds = %203, %217
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  %220 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %221 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %220, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %220, align 8
  %222 = icmp eq %"class.std::__1::vector.3"* %221, null
  br i1 %222, label %234, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 0
  %225 = load i32*, i32** %224, align 8
  %226 = icmp eq i32* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %223
  %228 = ptrtoint i32* %225 to i64
  %229 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 1
  %230 = bitcast i32** %229 to i64*
  store i64 %228, i64* %230, align 8
  %231 = bitcast i32* %225 to i8*
  call void @_ZdlPv(i8* %231) #12
  br label %232

232:                                              ; preds = %227, %223
  %233 = bitcast %"class.std::__1::vector.3"* %221 to i8*
  call void @_ZdlPv(i8* %233) #12
  br label %234

234:                                              ; preds = %219, %232
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %127) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %126) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #13
  %235 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %236 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %235, i64 0, i32 11
  %237 = load i32, i32* %236, align 8
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %243, label %240

240:                                              ; preds = %234
  %241 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %235, i64 0, i32 6, i32 0, i32 0, i32 0
  %242 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %241, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %242, %"class.spvtools::opt::Instruction"* nonnull %169) #13
  br label %243

243:                                              ; preds = %240, %234
  %244 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %235, i64 0, i32 4, i32 0, i32 0, i32 0
  %245 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %244, align 8
  %246 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %245, i64 0, i32 14, i32 0, i32 1
  %247 = getelementptr inbounds i8, i8* %123, i64 8
  %248 = bitcast i8* %247 to %"class.spvtools::opt::Instruction"**
  %249 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %248, align 8
  %250 = icmp eq %"class.spvtools::opt::Instruction"* %249, null
  br i1 %250, label %263, label %251

251:                                              ; preds = %243
  %252 = getelementptr inbounds i8, i8* %123, i64 16
  %253 = bitcast i8* %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %249, i64 0, i32 0, i32 2
  %256 = bitcast %"class.spvtools::opt::Instruction"** %255 to i64*
  store i64 %254, i64* %256, align 8
  %257 = bitcast i8* %247 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast i8* %252 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %260 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %259, align 8
  %261 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %260, i64 0, i32 1
  %262 = bitcast %"class.spvtools::opt::Instruction"** %261 to i64*
  store i64 %258, i64* %262, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %247, i8 0, i64 16, i1 false) #13
  br label %263

263:                                              ; preds = %243, %251
  store %"class.spvtools::opt::Instruction"* %246, %"class.spvtools::opt::Instruction"** %248, align 8
  %264 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %245, i64 0, i32 14, i32 0, i32 1, i32 0, i32 2
  %265 = bitcast %"class.spvtools::opt::Instruction"** %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = getelementptr inbounds i8, i8* %123, i64 16
  %268 = bitcast i8* %267 to i64*
  store i64 %266, i64* %268, align 8
  %269 = bitcast %"class.spvtools::opt::Instruction"** %264 to i8**
  store i8* %123, i8** %269, align 8
  %270 = bitcast i8* %267 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %271 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %270, align 8
  %272 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %271, i64 0, i32 1
  %273 = bitcast %"class.spvtools::opt::Instruction"** %272 to i8**
  store i8* %123, i8** %273, align 8
  %274 = load i32, i32* %10, align 4
  %275 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 2
  %276 = load i32, i32* %275, align 4
  call void @_ZN8spvtools3opt8analysis17DecorationManager16AddDecorationValEjjj(%"class.spvtools::opt::analysis::DecorationManager"* %48, i32 %274, i32 34, i32 %276) #13
  %277 = load i32, i32* %10, align 4
  %278 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 8
  %279 = load i32, i32* %278, align 8
  %280 = icmp eq i32 %279, 2
  %281 = select i1 %280, i32 3, i32 0
  call void @_ZN8spvtools3opt8analysis17DecorationManager16AddDecorationValEjjj(%"class.spvtools::opt::analysis::DecorationManager"* %48, i32 %277, i32 33, i32 %281) #13
  call void @_ZN8spvtools3opt14InstrumentPass19AddStorageBufferExtEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %282 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %283 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %282, i64 0, i32 4, i32 0, i32 0, i32 0
  %284 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %283, align 8
  %285 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %284, i64 0, i32 0, i32 1
  %286 = load i32, i32* %285, align 4
  %287 = icmp ugt i32 %286, 66559
  br i1 %287, label %288, label %381

288:                                              ; preds = %263
  %289 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %284, i64 0, i32 7, i32 0, i32 1, i32 0, i32 1
  %290 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %284, i64 0, i32 7, i32 0, i32 1
  %291 = bitcast %"class.spvtools::opt::Instruction"** %289 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = inttoptr i64 %292 to %"class.spvtools::opt::Instruction"*
  %294 = icmp eq %"class.spvtools::opt::Instruction"* %290, %293
  br i1 %294, label %381, label %295

295:                                              ; preds = %288
  %296 = bitcast %"struct.spvtools::opt::Operand"* %8 to i8*
  %297 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  %298 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  %299 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %300 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %301 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %302 = bitcast i32** %300 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %303 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %304 = bitcast %"class.std::__1::unique_ptr.0"* %303 to i64*
  %305 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %301 to i32*
  %306 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 0
  %307 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1
  %308 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %307, i64 0, i32 0
  %309 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 1
  %310 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 2
  %311 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 3, i64 0
  %312 = bitcast i32** %310 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %313 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4
  %314 = bitcast %"class.std::__1::unique_ptr.0"* %313 to i64*
  %315 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 0
  %316 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %317 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %318

318:                                              ; preds = %295, %373
  %319 = phi %"class.spvtools::opt::Instruction"* [ %293, %295 ], [ %379, %373 ]
  %320 = phi i64 [ %292, %295 ], [ %378, %373 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %296) #13
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %297) #13
  %321 = load i32, i32* %10, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %298, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %301, %"struct.std::__1::aligned_storage<4, 4>::type"** %302, align 8
  store i64 0, i64* %304, align 8
  store i64 1, i64* %299, align 8
  store i32 %321, i32* %305, align 8
  store i32 1, i32* %306, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %308, align 8
  store i64 0, i64* %309, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %311, %"struct.std::__1::aligned_storage<4, 4>::type"** %312, align 8
  store i64 0, i64* %314, align 8
  %322 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %307, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #13
  %323 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %319, i64 0, i32 6, i32 0, i32 1
  %324 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %323, align 8
  %325 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %319, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %326 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %325, align 8
  %327 = icmp ult %"struct.spvtools::opt::Operand"* %324, %326
  br i1 %327, label %328, label %343

328:                                              ; preds = %318
  %329 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %324, i64 0, i32 0
  %330 = load i32, i32* %306, align 8
  store i32 %330, i32* %329, align 8
  %331 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %324, i64 0, i32 1
  %332 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %331, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %332, align 8
  %333 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %324, i64 0, i32 1, i32 1
  store i64 0, i64* %333, align 8
  %334 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %324, i64 0, i32 1, i32 2
  %335 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %324, i64 0, i32 1, i32 3, i64 0
  %336 = bitcast i32** %334 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %335, %"struct.std::__1::aligned_storage<4, 4>::type"** %336, align 8
  %337 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %324, i64 0, i32 1, i32 4
  %338 = bitcast %"class.std::__1::unique_ptr.0"* %337 to i64*
  store i64 0, i64* %338, align 8
  %339 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %331, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %307) #13
  %340 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %324, i64 1
  %341 = ptrtoint %"struct.spvtools::opt::Operand"* %340 to i64
  %342 = bitcast %"struct.spvtools::opt::Operand"** %323 to i64*
  store i64 %341, i64* %342, align 8
  br label %345

343:                                              ; preds = %318
  %344 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %319, i64 0, i32 6
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %344, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %8) #13
  br label %345

345:                                              ; preds = %328, %343
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %315, align 8
  %346 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %316, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %316, align 8
  %347 = icmp eq %"class.std::__1::vector.3"* %346, null
  br i1 %347, label %359, label %348

348:                                              ; preds = %345
  %349 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %346, i64 0, i32 0, i32 0
  %350 = load i32*, i32** %349, align 8
  %351 = icmp eq i32* %350, null
  br i1 %351, label %357, label %352

352:                                              ; preds = %348
  %353 = ptrtoint i32* %350 to i64
  %354 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %346, i64 0, i32 0, i32 1
  %355 = bitcast i32** %354 to i64*
  store i64 %353, i64* %355, align 8
  %356 = bitcast i32* %350 to i8*
  call void @_ZdlPv(i8* %356) #12
  br label %357

357:                                              ; preds = %352, %348
  %358 = bitcast %"class.std::__1::vector.3"* %346 to i8*
  call void @_ZdlPv(i8* %358) #12
  br label %359

359:                                              ; preds = %345, %357
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %298, align 8
  %360 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %317, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %317, align 8
  %361 = icmp eq %"class.std::__1::vector.3"* %360, null
  br i1 %361, label %373, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %360, i64 0, i32 0, i32 0
  %364 = load i32*, i32** %363, align 8
  %365 = icmp eq i32* %364, null
  br i1 %365, label %371, label %366

366:                                              ; preds = %362
  %367 = ptrtoint i32* %364 to i64
  %368 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %360, i64 0, i32 0, i32 1
  %369 = bitcast i32** %368 to i64*
  store i64 %367, i64* %369, align 8
  %370 = bitcast i32* %364 to i8*
  call void @_ZdlPv(i8* %370) #12
  br label %371

371:                                              ; preds = %366, %362
  %372 = bitcast %"class.std::__1::vector.3"* %360 to i8*
  call void @_ZdlPv(i8* %372) #12
  br label %373

373:                                              ; preds = %359, %371
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %297) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %296) #13
  %374 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %374, %"class.spvtools::opt::Instruction"* %319) #13
  %375 = inttoptr i64 %320 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %376 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %375, i64 0, i32 1
  %377 = bitcast %"class.spvtools::opt::Instruction"** %376 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = inttoptr i64 %378 to %"class.spvtools::opt::Instruction"*
  %380 = icmp eq %"class.spvtools::opt::Instruction"* %290, %379
  br i1 %380, label %381, label %318

381:                                              ; preds = %373, %288, %263
  %382 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis6StructE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %382, align 8
  %383 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %3, i64 0, i32 2, i32 0
  %384 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %3, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %385 = bitcast %"class.std::__1::__tree_end_node"* %384 to %"class.std::__1::__tree_node.1092"**
  %386 = load %"class.std::__1::__tree_node.1092"*, %"class.std::__1::__tree_node.1092"** %385, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorINS2_IjNS_9allocatorIjEEEENS3_IS5_EEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS3_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.964"* %383, %"class.std::__1::__tree_node.1092"* %386) #13
  %387 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %3, i64 0, i32 1, i32 0, i32 0
  %388 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %387, align 8
  %389 = icmp eq %"class.spvtools::opt::analysis::Type"** %388, null
  br i1 %389, label %395, label %390

390:                                              ; preds = %381
  %391 = ptrtoint %"class.spvtools::opt::analysis::Type"** %388 to i64
  %392 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %3, i64 0, i32 1, i32 0, i32 1
  %393 = bitcast %"class.spvtools::opt::analysis::Type"*** %392 to i64*
  store i64 %391, i64* %393, align 8
  %394 = bitcast %"class.spvtools::opt::analysis::Type"** %388 to i8*
  call void @_ZdlPv(i8* %394) #12
  br label %395

395:                                              ; preds = %390, %381
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %382, align 8
  %396 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %3, i64 0, i32 0, i32 1
  %397 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %396, i64 0, i32 0, i32 0
  %398 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %397, align 8
  %399 = icmp eq %"class.std::__1::vector.3"* %398, null
  br i1 %399, label %423, label %400

400:                                              ; preds = %395
  %401 = bitcast %"class.std::__1::vector.3"* %398 to i8*
  %402 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %403 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %402, align 8
  %404 = icmp eq %"class.std::__1::vector.3"* %403, %398
  br i1 %404, label %421, label %405

405:                                              ; preds = %400, %416
  %406 = phi %"class.std::__1::vector.3"* [ %407, %416 ], [ %403, %400 ]
  %407 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %406, i64 -1
  %408 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %407, i64 0, i32 0, i32 0
  %409 = load i32*, i32** %408, align 8
  %410 = icmp eq i32* %409, null
  br i1 %410, label %416, label %411

411:                                              ; preds = %405
  %412 = ptrtoint i32* %409 to i64
  %413 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %406, i64 -1, i32 0, i32 1
  %414 = bitcast i32** %413 to i64*
  store i64 %412, i64* %414, align 8
  %415 = bitcast i32* %409 to i8*
  call void @_ZdlPv(i8* %415) #12
  br label %416

416:                                              ; preds = %411, %405
  %417 = icmp eq %"class.std::__1::vector.3"* %407, %398
  br i1 %417, label %418, label %405

418:                                              ; preds = %416
  %419 = bitcast %"class.std::__1::vector.463"* %396 to i8**
  %420 = load i8*, i8** %419, align 8
  br label %421

421:                                              ; preds = %418, %400
  %422 = phi i8* [ %420, %418 ], [ %401, %400 ]
  store %"class.std::__1::vector.3"* %398, %"class.std::__1::vector.3"** %402, align 8
  call void @_ZdlPv(i8* %422) #12
  br label %423

423:                                              ; preds = %395, %421
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %81) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %424 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %74, i64 0, i32 0, i32 0
  %425 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %424, align 8
  %426 = icmp eq %"class.std::__1::vector.3"* %425, null
  br i1 %426, label %450, label %427

427:                                              ; preds = %423
  %428 = bitcast %"class.std::__1::vector.3"* %425 to i8*
  %429 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %430 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %429, align 8
  %431 = icmp eq %"class.std::__1::vector.3"* %430, %425
  br i1 %431, label %448, label %432

432:                                              ; preds = %427, %443
  %433 = phi %"class.std::__1::vector.3"* [ %434, %443 ], [ %430, %427 ]
  %434 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %433, i64 -1
  %435 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %434, i64 0, i32 0, i32 0
  %436 = load i32*, i32** %435, align 8
  %437 = icmp eq i32* %436, null
  br i1 %437, label %443, label %438

438:                                              ; preds = %432
  %439 = ptrtoint i32* %436 to i64
  %440 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %433, i64 -1, i32 0, i32 1
  %441 = bitcast i32** %440 to i64*
  store i64 %439, i64* %441, align 8
  %442 = bitcast i32* %436 to i8*
  call void @_ZdlPv(i8* %442) #12
  br label %443

443:                                              ; preds = %438, %432
  %444 = icmp eq %"class.std::__1::vector.3"* %434, %425
  br i1 %444, label %445, label %432

445:                                              ; preds = %443
  %446 = bitcast %"class.std::__1::vector.463"* %74 to i8**
  %447 = load i8*, i8** %446, align 8
  br label %448

448:                                              ; preds = %445, %427
  %449 = phi i8* [ %447, %445 ], [ %428, %427 ]
  store %"class.std::__1::vector.3"* %425, %"class.std::__1::vector.3"** %429, align 8
  call void @_ZdlPv(i8* %449) #12
  br label %450

450:                                              ; preds = %423, %448
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %72) #13
  %451 = load i32, i32* %10, align 4
  br label %452

452:                                              ; preds = %450, %1
  %453 = phi i32 [ %451, %450 ], [ %11, %1 ]
  ret i32 %453
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass20GetOutputBufferPtrIdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %32

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = trunc i32 %9 to i16
  %11 = icmp slt i16 %10, 0
  br i1 %11, label %27, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 5
  %14 = tail call i8* @_Znwm(i64 240) #12
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %15, %"class.std::__1::function"* dereferenceable(32) %13, %"class.spvtools::opt::IRContext"* %7) #13
  %16 = ptrtoint i8* %14 to i64
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 20
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.480"* %17 to i64*
  store i64 %16, i64* %20, align 8
  %21 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %12
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %19) #13
  %23 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %19 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %22, %12
  %25 = load i32, i32* %8, align 8
  %26 = or i32 %25, 32768
  store i32 %26, i32* %8, align 8
  br label %27

27:                                               ; preds = %5, %24
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 20, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %28, align 8
  %30 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %31 = tail call i32 @_ZN8spvtools3opt8analysis11TypeManager17FindPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"* %29, i32 %30, i32 12) #13
  store i32 %31, i32* %2, align 8
  br label %32

32:                                               ; preds = %27, %1
  %33 = phi i32 [ %31, %27 ], [ %3, %1 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder12AddTernaryOpEj6SpvOp_jjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.21", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca [3 x %"struct.spvtools::opt::Operand"], align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.spvtools::utils::SmallVector", align 8
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %16 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %17, align 8
  %19 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %18) #13
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 5, i32 0, i32 2
  %23 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %23, i64 0, i32 2
  %25 = load i8, i8* %24, align 8, !range !6
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %262

27:                                               ; preds = %21
  %28 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %29 = getelementptr inbounds i8, i8* %28, i64 37
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 5, i32 0, i32 1, i32 0
  %31 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %30, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 5, i32 0, i32 0
  tail call void %31(%"union.std::__1::__function::__policy_storage"* %32, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %28) #13
  tail call void @_ZdlPv(i8* nonnull %28) #12
  br label %262

33:                                               ; preds = %14, %6
  %34 = phi i32 [ 0, %6 ], [ %19, %14 ]
  %35 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %36, align 8
  %37 = tail call i8* @_Znwm(i64 112) #12
  %38 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %39 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %38, align 8
  %40 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13
  %41 = bitcast [3 x %"struct.spvtools::opt::Operand"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %41) #13
  %42 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %42) #13
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %47 = bitcast i32** %45 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %46, %"struct.std::__1::aligned_storage<4, 4>::type"** %47, align 8
  %48 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %49 = bitcast %"class.std::__1::unique_ptr.0"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %46 to i32*
  store i64 1, i64* %44, align 8
  store i32 %3, i32* %50, align 8
  %51 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  store i32 1, i32* %51, align 8
  %52 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %53 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %52, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 2
  %56 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 3, i64 0
  %57 = bitcast i32** %55 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %56, %"struct.std::__1::aligned_storage<4, 4>::type"** %57, align 8
  %58 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4
  %59 = bitcast %"class.std::__1::unique_ptr.0"* %58 to i64*
  store i64 0, i64* %59, align 8
  %60 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %52, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #13
  %61 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %61) #13
  %62 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %66 = bitcast i32** %64 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %65, %"struct.std::__1::aligned_storage<4, 4>::type"** %66, align 8
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %68 = bitcast %"class.std::__1::unique_ptr.0"* %67 to i64*
  store i64 0, i64* %68, align 8
  %69 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %65 to i32*
  store i64 1, i64* %63, align 8
  store i32 %4, i32* %69, align 8
  %70 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  store i32 1, i32* %70, align 8
  %71 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %72 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %71, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %73 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 2
  %75 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 3, i64 0
  %76 = bitcast i32** %74 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %75, %"struct.std::__1::aligned_storage<4, 4>::type"** %76, align 8
  %77 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4
  %78 = bitcast %"class.std::__1::unique_ptr.0"* %77 to i64*
  store i64 0, i64* %78, align 8
  %79 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %71, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #13
  %80 = bitcast %"class.spvtools::utils::SmallVector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %80) #13
  %81 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %82 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 1
  %83 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 2
  %84 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 3, i64 0
  %85 = bitcast i32** %83 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %84, %"struct.std::__1::aligned_storage<4, 4>::type"** %85, align 8
  %86 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4
  %87 = bitcast %"class.std::__1::unique_ptr.0"* %86 to i64*
  store i64 0, i64* %87, align 8
  %88 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %84 to i32*
  store i64 1, i64* %82, align 8
  store i32 %5, i32* %88, align 8
  %89 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 0
  store i32 1, i32* %89, align 8
  %90 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1
  %91 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %90, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 1
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 2
  %94 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 3, i64 0
  %95 = bitcast i32** %93 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %94, %"struct.std::__1::aligned_storage<4, 4>::type"** %95, align 8
  %96 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 4
  %97 = bitcast %"class.std::__1::unique_ptr.0"* %96 to i64*
  store i64 0, i64* %97, align 8
  %98 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %90, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %12) #13
  %99 = call i8* @_Znwm(i64 144) #12
  %100 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %101 = bitcast %"struct.spvtools::opt::Operand"** %100 to i8**
  store i8* %99, i8** %101, align 8
  %102 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %99, i8** %102, align 8
  %103 = getelementptr inbounds i8, i8* %99, i64 144
  %104 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"struct.spvtools::opt::Operand"** %104 to i8**
  store i8* %103, i8** %105, align 8
  %106 = bitcast i8* %99 to i32*
  %107 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  store i32 %108, i32* %106, align 8
  %109 = getelementptr inbounds i8, i8* %99, i64 8
  %110 = bitcast i8* %109 to %"class.spvtools::utils::SmallVector"*
  %111 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %112 = bitcast i8* %109 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %113 = getelementptr inbounds i8, i8* %99, i64 16
  %114 = bitcast i8* %113 to i64*
  store i64 0, i64* %114, align 8
  %115 = getelementptr inbounds i8, i8* %99, i64 24
  %116 = getelementptr inbounds i8, i8* %99, i64 32
  %117 = bitcast i8* %115 to i8**
  store i8* %116, i8** %117, align 8
  %118 = getelementptr inbounds i8, i8* %99, i64 40
  %119 = bitcast i8* %118 to i64*
  store i64 0, i64* %119, align 8
  %120 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %110, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %111) #13
  %121 = getelementptr inbounds i8, i8* %99, i64 48
  %122 = bitcast i8* %121 to i32*
  %123 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  %124 = load i32, i32* %123, align 8
  store i32 %124, i32* %122, align 8
  %125 = getelementptr inbounds i8, i8* %99, i64 56
  %126 = bitcast i8* %125 to %"class.spvtools::utils::SmallVector"*
  %127 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %128 = bitcast i8* %125 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  %129 = getelementptr inbounds i8, i8* %99, i64 64
  %130 = bitcast i8* %129 to i64*
  store i64 0, i64* %130, align 8
  %131 = getelementptr inbounds i8, i8* %99, i64 72
  %132 = getelementptr inbounds i8, i8* %99, i64 80
  %133 = bitcast i8* %131 to i8**
  store i8* %132, i8** %133, align 8
  %134 = getelementptr inbounds i8, i8* %99, i64 88
  %135 = bitcast i8* %134 to i64*
  store i64 0, i64* %135, align 8
  %136 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %126, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %127) #13
  %137 = getelementptr inbounds i8, i8* %99, i64 96
  %138 = bitcast i8* %137 to i32*
  %139 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 0
  %140 = load i32, i32* %139, align 8
  store i32 %140, i32* %138, align 8
  %141 = getelementptr inbounds i8, i8* %99, i64 104
  %142 = bitcast i8* %141 to %"class.spvtools::utils::SmallVector"*
  %143 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1
  %144 = bitcast i8* %141 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %144, align 8
  %145 = getelementptr inbounds i8, i8* %99, i64 112
  %146 = bitcast i8* %145 to i64*
  store i64 0, i64* %146, align 8
  %147 = getelementptr inbounds i8, i8* %99, i64 120
  %148 = getelementptr inbounds i8, i8* %99, i64 128
  %149 = bitcast i8* %147 to i8**
  store i8* %148, i8** %149, align 8
  %150 = getelementptr inbounds i8, i8* %99, i64 136
  %151 = bitcast i8* %150 to i64*
  store i64 0, i64* %151, align 8
  %152 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %142, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %143) #13
  %153 = getelementptr inbounds i8, i8* %99, i64 144
  %154 = bitcast i8* %37 to %"class.spvtools::opt::Instruction"*
  %155 = bitcast %"struct.spvtools::opt::Operand"** %100 to i64*
  %156 = ptrtoint i8* %153 to i64
  store i64 %156, i64* %155, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %154, %"class.spvtools::opt::IRContext"* %39, i32 %2, i32 %1, i32 %34, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #13
  %157 = ptrtoint i8* %37 to i64
  %158 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %160 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %159, align 8
  %161 = icmp eq %"struct.spvtools::opt::Operand"* %160, null
  br i1 %161, label %190, label %162

162:                                              ; preds = %33
  %163 = bitcast %"struct.spvtools::opt::Operand"* %160 to i8*
  %164 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %100, align 8
  %165 = icmp eq %"struct.spvtools::opt::Operand"* %164, %160
  br i1 %165, label %188, label %166

166:                                              ; preds = %162, %184
  %167 = phi %"struct.spvtools::opt::Operand"* [ %168, %184 ], [ %164, %162 ]
  %168 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 -1
  %169 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %169, align 8
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %171 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %170, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %170, align 8
  %172 = icmp eq %"class.std::__1::vector.3"* %171, null
  br i1 %172, label %184, label %173

173:                                              ; preds = %166
  %174 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %171, i64 0, i32 0, i32 0
  %175 = load i32*, i32** %174, align 8
  %176 = icmp eq i32* %175, null
  br i1 %176, label %182, label %177

177:                                              ; preds = %173
  %178 = ptrtoint i32* %175 to i64
  %179 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %171, i64 0, i32 0, i32 1
  %180 = bitcast i32** %179 to i64*
  store i64 %178, i64* %180, align 8
  %181 = bitcast i32* %175 to i8*
  call void @_ZdlPv(i8* %181) #12
  br label %182

182:                                              ; preds = %177, %173
  %183 = bitcast %"class.std::__1::vector.3"* %171 to i8*
  call void @_ZdlPv(i8* %183) #12
  br label %184

184:                                              ; preds = %182, %166
  %185 = icmp eq %"struct.spvtools::opt::Operand"* %168, %160
  br i1 %185, label %186, label %166

186:                                              ; preds = %184
  %187 = load i8*, i8** %102, align 8
  br label %188

188:                                              ; preds = %186, %162
  %189 = phi i8* [ %187, %186 ], [ %163, %162 ]
  store %"struct.spvtools::opt::Operand"* %160, %"struct.spvtools::opt::Operand"** %100, align 8
  call void @_ZdlPv(i8* %189) #12
  br label %190

190:                                              ; preds = %33, %188
  %191 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %191, align 8
  %192 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 4, i32 0, i32 0, i32 0
  %193 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %192, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %192, align 8
  %194 = icmp eq %"class.std::__1::vector.3"* %193, null
  br i1 %194, label %206, label %195

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %193, i64 0, i32 0, i32 0
  %197 = load i32*, i32** %196, align 8
  %198 = icmp eq i32* %197, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %195
  %200 = ptrtoint i32* %197 to i64
  %201 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %193, i64 0, i32 0, i32 1
  %202 = bitcast i32** %201 to i64*
  store i64 %200, i64* %202, align 8
  %203 = bitcast i32* %197 to i8*
  call void @_ZdlPv(i8* %203) #12
  br label %204

204:                                              ; preds = %199, %195
  %205 = bitcast %"class.std::__1::vector.3"* %193 to i8*
  call void @_ZdlPv(i8* %205) #12
  br label %206

206:                                              ; preds = %190, %204
  %207 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %207, align 8
  %208 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %209 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %208, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %208, align 8
  %210 = icmp eq %"class.std::__1::vector.3"* %209, null
  br i1 %210, label %275, label %264

211:                                              ; preds = %291
  %212 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %293, i64 0, i32 0, i32 0
  %213 = load i32*, i32** %212, align 8
  %214 = icmp eq i32* %213, null
  br i1 %214, label %220, label %215

215:                                              ; preds = %211
  %216 = ptrtoint i32* %213 to i64
  %217 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %293, i64 0, i32 0, i32 1
  %218 = bitcast i32** %217 to i64*
  store i64 %216, i64* %218, align 8
  %219 = bitcast i32* %213 to i8*
  call void @_ZdlPv(i8* %219) #12
  br label %220

220:                                              ; preds = %215, %211
  %221 = bitcast %"class.std::__1::vector.3"* %293 to i8*
  call void @_ZdlPv(i8* %221) #12
  br label %222

222:                                              ; preds = %291, %220
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %80) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %223 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %224 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %223, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %223, align 8
  %225 = icmp eq %"class.std::__1::vector.3"* %224, null
  br i1 %225, label %237, label %226

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %224, i64 0, i32 0, i32 0
  %228 = load i32*, i32** %227, align 8
  %229 = icmp eq i32* %228, null
  br i1 %229, label %235, label %230

230:                                              ; preds = %226
  %231 = ptrtoint i32* %228 to i64
  %232 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %224, i64 0, i32 0, i32 1
  %233 = bitcast i32** %232 to i64*
  store i64 %231, i64* %233, align 8
  %234 = bitcast i32* %228 to i8*
  call void @_ZdlPv(i8* %234) #12
  br label %235

235:                                              ; preds = %230, %226
  %236 = bitcast %"class.std::__1::vector.3"* %224 to i8*
  call void @_ZdlPv(i8* %236) #12
  br label %237

237:                                              ; preds = %222, %235
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %61) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %238 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %239 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %238, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %238, align 8
  %240 = icmp eq %"class.std::__1::vector.3"* %239, null
  br i1 %240, label %252, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %239, i64 0, i32 0, i32 0
  %243 = load i32*, i32** %242, align 8
  %244 = icmp eq i32* %243, null
  br i1 %244, label %250, label %245

245:                                              ; preds = %241
  %246 = ptrtoint i32* %243 to i64
  %247 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %239, i64 0, i32 0, i32 1
  %248 = bitcast i32** %247 to i64*
  store i64 %246, i64* %248, align 8
  %249 = bitcast i32* %243 to i8*
  call void @_ZdlPv(i8* %249) #12
  br label %250

250:                                              ; preds = %245, %241
  %251 = bitcast %"class.std::__1::vector.3"* %239 to i8*
  call void @_ZdlPv(i8* %251) #12
  br label %252

252:                                              ; preds = %237, %250
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13
  %253 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %7)
  %254 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %36, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %36, align 8
  %255 = icmp eq %"class.spvtools::opt::Instruction"* %254, null
  br i1 %255, label %261, label %256

256:                                              ; preds = %252
  %257 = bitcast %"class.spvtools::opt::Instruction"* %254 to void (%"class.spvtools::opt::Instruction"*)***
  %258 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %257, align 8
  %259 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %258, i64 1
  %260 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %259, align 8
  call void %260(%"class.spvtools::opt::Instruction"* nonnull %254) #13
  br label %261

261:                                              ; preds = %252, %256
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  br label %262

262:                                              ; preds = %27, %21, %261
  %263 = phi %"class.spvtools::opt::Instruction"* [ %253, %261 ], [ null, %21 ], [ null, %27 ]
  ret %"class.spvtools::opt::Instruction"* %263

264:                                              ; preds = %206
  %265 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %209, i64 0, i32 0, i32 0
  %266 = load i32*, i32** %265, align 8
  %267 = icmp eq i32* %266, null
  br i1 %267, label %273, label %268

268:                                              ; preds = %264
  %269 = ptrtoint i32* %266 to i64
  %270 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %209, i64 0, i32 0, i32 1
  %271 = bitcast i32** %270 to i64*
  store i64 %269, i64* %271, align 8
  %272 = bitcast i32* %266 to i8*
  call void @_ZdlPv(i8* %272) #12
  br label %273

273:                                              ; preds = %268, %264
  %274 = bitcast %"class.std::__1::vector.3"* %209 to i8*
  call void @_ZdlPv(i8* %274) #12
  br label %275

275:                                              ; preds = %273, %206
  %276 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %276, align 8
  %277 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %278 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %277, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %277, align 8
  %279 = icmp eq %"class.std::__1::vector.3"* %278, null
  br i1 %279, label %291, label %280

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %278, i64 0, i32 0, i32 0
  %282 = load i32*, i32** %281, align 8
  %283 = icmp eq i32* %282, null
  br i1 %283, label %289, label %284

284:                                              ; preds = %280
  %285 = ptrtoint i32* %282 to i64
  %286 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %278, i64 0, i32 0, i32 1
  %287 = bitcast i32** %286 to i64*
  store i64 %285, i64* %287, align 8
  %288 = bitcast i32* %282 to i8*
  call void @_ZdlPv(i8* %288) #12
  br label %289

289:                                              ; preds = %284, %280
  %290 = bitcast %"class.std::__1::vector.3"* %278 to i8*
  call void @_ZdlPv(i8* %290) #12
  br label %291

291:                                              ; preds = %289, %275
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %292 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %293 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %292, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %292, align 8
  %294 = icmp eq %"class.std::__1::vector.3"* %293, null
  br i1 %294, label %222, label %211
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14InstrumentPass24GenCommonStreamWriteCodeEjjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* nocapture, i32, i32, i32, i32, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  %7 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %5, i32 %1, i1 zeroext false) #13
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !6
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !6
  %14 = zext i8 %13 to i32
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %7, i32 %14) #13
  br label %16

16:                                               ; preds = %6, %11
  %17 = phi i32 [ %15, %11 ], [ 0, %6 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %4, i32 0, i32 %17, %"class.spvtools::opt::InstructionBuilder"* %5)
  %18 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %5, i32 %19, i1 zeroext false) #13
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 4
  %22 = load i8, i8* %21, align 1, !range !6
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 3
  %26 = load i8, i8* %25, align 4, !range !6
  %27 = zext i8 %26 to i32
  %28 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %20, i32 %27) #13
  br label %29

29:                                               ; preds = %16, %24
  %30 = phi i32 [ %28, %24 ], [ 0, %16 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %4, i32 1, i32 %30, %"class.spvtools::opt::InstructionBuilder"* %5)
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %4, i32 2, i32 %2, %"class.spvtools::opt::InstructionBuilder"* %5)
  %31 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %5, i32 %3, i1 zeroext false) #13
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 4
  %33 = load i8, i8* %32, align 1, !range !6
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 3
  %37 = load i8, i8* %36, align 4, !range !6
  %38 = zext i8 %37 to i32
  %39 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %31, i32 %38) #13
  br label %40

40:                                               ; preds = %29, %35
  %41 = phi i32 [ %39, %35 ], [ 0, %29 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %4, i32 3, i32 %41, %"class.spvtools::opt::InstructionBuilder"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14InstrumentPass30GenFragCoordEltDebugOutputCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* nocapture, i32, i32, i32, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  %6 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %7 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %4, i32 %6, i32 81, i32 %2, i32 %3)
  %8 = add i32 %3, 4
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !6
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !6
  %15 = zext i8 %14 to i32
  %16 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %7, i32 %15) #13
  br label %17

17:                                               ; preds = %5, %12
  %18 = phi i32 [ %16, %12 ], [ 0, %5 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %1, i32 %8, i32 %18, %"class.spvtools::opt::InstructionBuilder"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.21", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %14 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %15, align 8
  %17 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %16) #13
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 2
  %21 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %21, i64 0, i32 2
  %23 = load i8, i8* %22, align 8, !range !6
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %209

25:                                               ; preds = %19
  %26 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %27 = getelementptr inbounds i8, i8* %26, i64 37
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 1, i32 0
  %29 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 0
  tail call void %29(%"union.std::__1::__function::__policy_storage"* %30, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %26) #13
  tail call void @_ZdlPv(i8* nonnull %26) #12
  br label %209

31:                                               ; preds = %12, %5
  %32 = phi i32 [ 0, %5 ], [ %17, %12 ]
  %33 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %34, align 8
  %35 = tail call i8* @_Znwm(i64 112) #12
  %36 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %37 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %36, align 8
  %38 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13
  %39 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %39) #13
  %40 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %45 = bitcast i32** %43 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %44, %"struct.std::__1::aligned_storage<4, 4>::type"** %45, align 8
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %47 = bitcast %"class.std::__1::unique_ptr.0"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %44 to i32*
  store i64 1, i64* %42, align 8
  store i32 %3, i32* %48, align 8
  %49 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  store i32 1, i32* %49, align 8
  %50 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %51 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %50, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 2
  %54 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 3, i64 0
  %55 = bitcast i32** %53 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %54, %"struct.std::__1::aligned_storage<4, 4>::type"** %55, align 8
  %56 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4
  %57 = bitcast %"class.std::__1::unique_ptr.0"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %50, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #13
  %59 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #13
  %60 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %62 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %64 = bitcast i32** %62 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %63, %"struct.std::__1::aligned_storage<4, 4>::type"** %64, align 8
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %66 = bitcast %"class.std::__1::unique_ptr.0"* %65 to i64*
  store i64 0, i64* %66, align 8
  %67 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %63 to i32*
  store i64 1, i64* %61, align 8
  store i32 %4, i32* %67, align 8
  %68 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 0
  store i32 6, i32* %68, align 8
  %69 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1
  %70 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %69, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 2
  %73 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 3, i64 0
  %74 = bitcast i32** %72 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %73, %"struct.std::__1::aligned_storage<4, 4>::type"** %74, align 8
  %75 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 4
  %76 = bitcast %"class.std::__1::unique_ptr.0"* %75 to i64*
  store i64 0, i64* %76, align 8
  %77 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %69, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #13
  %78 = call i8* @_Znwm(i64 96) #12
  %79 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %80 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %78, i8** %80, align 8
  %81 = getelementptr inbounds i8, i8* %78, i64 96
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast %"struct.spvtools::opt::Operand"** %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = bitcast i8* %78 to i32*
  %85 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  %86 = load i32, i32* %85, align 8
  store i32 %86, i32* %84, align 8
  %87 = getelementptr inbounds i8, i8* %78, i64 8
  %88 = bitcast i8* %87 to %"class.spvtools::utils::SmallVector"*
  %89 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %90 = bitcast i8* %87 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds i8, i8* %78, i64 16
  %92 = bitcast i8* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds i8, i8* %78, i64 24
  %94 = getelementptr inbounds i8, i8* %78, i64 32
  %95 = bitcast i8* %93 to i8**
  store i8* %94, i8** %95, align 8
  %96 = getelementptr inbounds i8, i8* %78, i64 40
  %97 = bitcast i8* %96 to i64*
  store i64 0, i64* %97, align 8
  %98 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %88, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %89) #13
  %99 = getelementptr inbounds i8, i8* %78, i64 48
  %100 = bitcast i8* %99 to i32*
  %101 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 0
  %102 = load i32, i32* %101, align 8
  store i32 %102, i32* %100, align 8
  %103 = getelementptr inbounds i8, i8* %78, i64 56
  %104 = bitcast i8* %103 to %"class.spvtools::utils::SmallVector"*
  %105 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1
  %106 = bitcast i8* %103 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %107 = getelementptr inbounds i8, i8* %78, i64 64
  %108 = bitcast i8* %107 to i64*
  store i64 0, i64* %108, align 8
  %109 = getelementptr inbounds i8, i8* %78, i64 72
  %110 = getelementptr inbounds i8, i8* %78, i64 80
  %111 = bitcast i8* %109 to i8**
  store i8* %110, i8** %111, align 8
  %112 = getelementptr inbounds i8, i8* %78, i64 88
  %113 = bitcast i8* %112 to i64*
  store i64 0, i64* %113, align 8
  %114 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %104, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %105) #13
  %115 = getelementptr inbounds i8, i8* %78, i64 96
  %116 = bitcast i8* %35 to %"class.spvtools::opt::Instruction"*
  %117 = bitcast %"struct.spvtools::opt::Operand"** %79 to i64*
  %118 = ptrtoint i8* %115 to i64
  store i64 %118, i64* %117, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %116, %"class.spvtools::opt::IRContext"* %37, i32 %2, i32 %1, i32 %32, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #13
  %119 = ptrtoint i8* %35 to i64
  %120 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %122 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %121, align 8
  %123 = icmp eq %"struct.spvtools::opt::Operand"* %122, null
  br i1 %123, label %152, label %124

124:                                              ; preds = %31
  %125 = bitcast %"struct.spvtools::opt::Operand"* %122 to i8*
  %126 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %79, align 8
  %127 = icmp eq %"struct.spvtools::opt::Operand"* %126, %122
  br i1 %127, label %150, label %128

128:                                              ; preds = %124, %146
  %129 = phi %"struct.spvtools::opt::Operand"* [ %130, %146 ], [ %126, %124 ]
  %130 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %129, i64 -1
  %131 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %129, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %132 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %129, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %133 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %132, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %132, align 8
  %134 = icmp eq %"class.std::__1::vector.3"* %133, null
  br i1 %134, label %146, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %133, i64 0, i32 0, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %135
  %140 = ptrtoint i32* %137 to i64
  %141 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %133, i64 0, i32 0, i32 1
  %142 = bitcast i32** %141 to i64*
  store i64 %140, i64* %142, align 8
  %143 = bitcast i32* %137 to i8*
  call void @_ZdlPv(i8* %143) #12
  br label %144

144:                                              ; preds = %139, %135
  %145 = bitcast %"class.std::__1::vector.3"* %133 to i8*
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %144, %128
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %130, %122
  br i1 %147, label %148, label %128

148:                                              ; preds = %146
  %149 = load i8*, i8** %80, align 8
  br label %150

150:                                              ; preds = %148, %124
  %151 = phi i8* [ %149, %148 ], [ %125, %124 ]
  store %"struct.spvtools::opt::Operand"* %122, %"struct.spvtools::opt::Operand"** %79, align 8
  call void @_ZdlPv(i8* %151) #12
  br label %152

152:                                              ; preds = %31, %150
  %153 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %153, align 8
  %154 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %155 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %154, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %154, align 8
  %156 = icmp eq %"class.std::__1::vector.3"* %155, null
  br i1 %156, label %168, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %155, i64 0, i32 0, i32 0
  %159 = load i32*, i32** %158, align 8
  %160 = icmp eq i32* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %157
  %162 = ptrtoint i32* %159 to i64
  %163 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %155, i64 0, i32 0, i32 1
  %164 = bitcast i32** %163 to i64*
  store i64 %162, i64* %164, align 8
  %165 = bitcast i32* %159 to i8*
  call void @_ZdlPv(i8* %165) #12
  br label %166

166:                                              ; preds = %161, %157
  %167 = bitcast %"class.std::__1::vector.3"* %155 to i8*
  call void @_ZdlPv(i8* %167) #12
  br label %168

168:                                              ; preds = %152, %166
  %169 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %169, align 8
  %170 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %171 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %170, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %170, align 8
  %172 = icmp eq %"class.std::__1::vector.3"* %171, null
  br i1 %172, label %222, label %211

173:                                              ; preds = %222
  %174 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %224, i64 0, i32 0, i32 0
  %175 = load i32*, i32** %174, align 8
  %176 = icmp eq i32* %175, null
  br i1 %176, label %182, label %177

177:                                              ; preds = %173
  %178 = ptrtoint i32* %175 to i64
  %179 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %224, i64 0, i32 0, i32 1
  %180 = bitcast i32** %179 to i64*
  store i64 %178, i64* %180, align 8
  %181 = bitcast i32* %175 to i8*
  call void @_ZdlPv(i8* %181) #12
  br label %182

182:                                              ; preds = %177, %173
  %183 = bitcast %"class.std::__1::vector.3"* %224 to i8*
  call void @_ZdlPv(i8* %183) #12
  br label %184

184:                                              ; preds = %222, %182
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %185 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %186 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %185, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %185, align 8
  %187 = icmp eq %"class.std::__1::vector.3"* %186, null
  br i1 %187, label %199, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %186, i64 0, i32 0, i32 0
  %190 = load i32*, i32** %189, align 8
  %191 = icmp eq i32* %190, null
  br i1 %191, label %197, label %192

192:                                              ; preds = %188
  %193 = ptrtoint i32* %190 to i64
  %194 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %186, i64 0, i32 0, i32 1
  %195 = bitcast i32** %194 to i64*
  store i64 %193, i64* %195, align 8
  %196 = bitcast i32* %190 to i8*
  call void @_ZdlPv(i8* %196) #12
  br label %197

197:                                              ; preds = %192, %188
  %198 = bitcast %"class.std::__1::vector.3"* %186 to i8*
  call void @_ZdlPv(i8* %198) #12
  br label %199

199:                                              ; preds = %184, %197
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  %200 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %6)
  %201 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %34, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %34, align 8
  %202 = icmp eq %"class.spvtools::opt::Instruction"* %201, null
  br i1 %202, label %208, label %203

203:                                              ; preds = %199
  %204 = bitcast %"class.spvtools::opt::Instruction"* %201 to void (%"class.spvtools::opt::Instruction"*)***
  %205 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %205, i64 1
  %207 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %206, align 8
  call void %207(%"class.spvtools::opt::Instruction"* nonnull %201) #13
  br label %208

208:                                              ; preds = %199, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br label %209

209:                                              ; preds = %25, %19, %208
  %210 = phi %"class.spvtools::opt::Instruction"* [ %200, %208 ], [ null, %19 ], [ null, %25 ]
  ret %"class.spvtools::opt::Instruction"* %210

211:                                              ; preds = %168
  %212 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %171, i64 0, i32 0, i32 0
  %213 = load i32*, i32** %212, align 8
  %214 = icmp eq i32* %213, null
  br i1 %214, label %220, label %215

215:                                              ; preds = %211
  %216 = ptrtoint i32* %213 to i64
  %217 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %171, i64 0, i32 0, i32 1
  %218 = bitcast i32** %217 to i64*
  store i64 %216, i64* %218, align 8
  %219 = bitcast i32* %213 to i8*
  call void @_ZdlPv(i8* %219) #12
  br label %220

220:                                              ; preds = %215, %211
  %221 = bitcast %"class.std::__1::vector.3"* %171 to i8*
  call void @_ZdlPv(i8* %221) #12
  br label %222

222:                                              ; preds = %220, %168
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %223 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %224 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %223, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %223, align 8
  %225 = icmp eq %"class.std::__1::vector.3"* %224, null
  br i1 %225, label %184, label %173
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass10GenVarLoadEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"*, i32, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.spvtools::opt::InstrumentPass"* %0 to %"class.spvtools::opt::Pass"*
  %5 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 104) #12
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DefUseManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #13
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 64
  %22 = getelementptr inbounds i8, i8* %14, i64 96
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %23, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %15, %"class.spvtools::opt::Module"* %13) #13
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6
  %25 = ptrtoint i8* %14 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.62"* %24 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %24 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %31, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %27) #13
  br label %32

32:                                               ; preds = %30, %11
  %33 = load i32, i32* %7, align 8
  %34 = or i32 %33, 1
  store i32 %34, i32* %7, align 8
  br label %35

35:                                               ; preds = %3, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %37, i32 %1) #13
  %39 = tail call i32 @_ZNK8spvtools3opt4Pass16GetPointeeTypeIdEPKNS0_11InstructionE(%"class.spvtools::opt::Pass"* %4, %"class.spvtools::opt::Instruction"* %38) #13
  %40 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"* %2, i32 %39, i32 61, i32 %1)
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %40, i64 0, i32 4
  %42 = load i8, i8* %41, align 1, !range !6
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %40, i64 0, i32 3
  %46 = load i8, i8* %45, align 4, !range !6
  %47 = zext i8 %46 to i32
  %48 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %40, i32 %47) #13
  br label %49

49:                                               ; preds = %35, %44
  %50 = phi i32 [ %48, %44 ], [ 0, %35 ]
  ret i32 %50
}

declare i32 @_ZNK8spvtools3opt4Pass16GetPointeeTypeIdEPKNS0_11InstructionE(%"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14InstrumentPass20GenBuiltinOutputCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"*, i32, i32, i32, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  %6 = tail call i32 @_ZN8spvtools3opt14InstrumentPass10GenVarLoadEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %1, %"class.spvtools::opt::InstructionBuilder"* %4)
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %3, i32 %2, i32 %6, %"class.spvtools::opt::InstructionBuilder"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14InstrumentPass23GenStageStreamWriteCodeEjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"*, i32, i32, %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %209 [
    i32 0, label %5
    i32 5, label %13
    i32 5267, label %13
    i32 5268, label %13
    i32 3, label %54
    i32 1, label %62
    i32 2, label %70
    i32 4, label %120
    i32 5313, label %168
    i32 5314, label %168
    i32 5315, label %168
    i32 5316, label %168
    i32 5317, label %168
    i32 5318, label %168
  ]

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = tail call i32 @_ZN8spvtools3opt9IRContext20GetBuiltinInputVarIdEj(%"class.spvtools::opt::IRContext"* %7, i32 42) #13
  %9 = tail call i32 @_ZN8spvtools3opt14InstrumentPass10GenVarLoadEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %8, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 4, i32 %9, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %11 = tail call i32 @_ZN8spvtools3opt9IRContext20GetBuiltinInputVarIdEj(%"class.spvtools::opt::IRContext"* %10, i32 43) #13
  %12 = tail call i32 @_ZN8spvtools3opt14InstrumentPass10GenVarLoadEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %11, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 5, i32 %12, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  br label %209

13:                                               ; preds = %4, %4, %4
  %14 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = tail call i32 @_ZN8spvtools3opt9IRContext20GetBuiltinInputVarIdEj(%"class.spvtools::opt::IRContext"* %15, i32 28) #13
  %17 = tail call i32 @_ZN8spvtools3opt14InstrumentPass10GenVarLoadEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %16, %"class.spvtools::opt::InstructionBuilder"* %3)
  %18 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %19 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %18, i32 81, i32 %17, i32 0)
  %20 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %21 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %20, i32 81, i32 %17, i32 1)
  %22 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %23 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %22, i32 81, i32 %17, i32 2)
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %19, i64 0, i32 4
  %25 = load i8, i8* %24, align 1, !range !6
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %19, i64 0, i32 3
  %29 = load i8, i8* %28, align 4, !range !6
  %30 = zext i8 %29 to i32
  %31 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %19, i32 %30) #13
  br label %32

32:                                               ; preds = %13, %27
  %33 = phi i32 [ %31, %27 ], [ 0, %13 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 4, i32 %33, %"class.spvtools::opt::InstructionBuilder"* %3)
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 4
  %35 = load i8, i8* %34, align 1, !range !6
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 3
  %39 = load i8, i8* %38, align 4, !range !6
  %40 = zext i8 %39 to i32
  %41 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %21, i32 %40) #13
  br label %42

42:                                               ; preds = %32, %37
  %43 = phi i32 [ %41, %37 ], [ 0, %32 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 5, i32 %43, %"class.spvtools::opt::InstructionBuilder"* %3)
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %23, i64 0, i32 4
  %45 = load i8, i8* %44, align 1, !range !6
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %23, i64 0, i32 3
  %49 = load i8, i8* %48, align 4, !range !6
  %50 = zext i8 %49 to i32
  %51 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %23, i32 %50) #13
  br label %52

52:                                               ; preds = %42, %47
  %53 = phi i32 [ %51, %47 ], [ 0, %42 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 6, i32 %53, %"class.spvtools::opt::InstructionBuilder"* %3)
  br label %209

54:                                               ; preds = %4
  %55 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %56 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %55, align 8
  %57 = tail call i32 @_ZN8spvtools3opt9IRContext20GetBuiltinInputVarIdEj(%"class.spvtools::opt::IRContext"* %56, i32 7) #13
  %58 = tail call i32 @_ZN8spvtools3opt14InstrumentPass10GenVarLoadEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %57, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 4, i32 %58, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  %59 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %55, align 8
  %60 = tail call i32 @_ZN8spvtools3opt9IRContext20GetBuiltinInputVarIdEj(%"class.spvtools::opt::IRContext"* %59, i32 8) #13
  %61 = tail call i32 @_ZN8spvtools3opt14InstrumentPass10GenVarLoadEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %60, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 5, i32 %61, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  br label %209

62:                                               ; preds = %4
  %63 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %64 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %63, align 8
  %65 = tail call i32 @_ZN8spvtools3opt9IRContext20GetBuiltinInputVarIdEj(%"class.spvtools::opt::IRContext"* %64, i32 8) #13
  %66 = tail call i32 @_ZN8spvtools3opt14InstrumentPass10GenVarLoadEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %65, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 4, i32 %66, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  %67 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %63, align 8
  %68 = tail call i32 @_ZN8spvtools3opt9IRContext20GetBuiltinInputVarIdEj(%"class.spvtools::opt::IRContext"* %67, i32 7) #13
  %69 = tail call i32 @_ZN8spvtools3opt14InstrumentPass10GenVarLoadEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %68, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 5, i32 %69, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  br label %209

70:                                               ; preds = %4
  %71 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %72 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %71, align 8
  %73 = tail call i32 @_ZN8spvtools3opt9IRContext20GetBuiltinInputVarIdEj(%"class.spvtools::opt::IRContext"* %72, i32 7) #13
  %74 = tail call i32 @_ZN8spvtools3opt14InstrumentPass10GenVarLoadEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %73, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 4, i32 %74, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  %75 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %71, align 8
  %76 = tail call i32 @_ZN8spvtools3opt9IRContext20GetBuiltinInputVarIdEj(%"class.spvtools::opt::IRContext"* %75, i32 13) #13
  %77 = tail call i32 @_ZN8spvtools3opt14InstrumentPass10GenVarLoadEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %76, %"class.spvtools::opt::InstructionBuilder"* %3)
  %78 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 18
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %70
  %82 = tail call i32 @_ZN8spvtools3opt14InstrumentPass12GetVecUintIdEj(%"class.spvtools::opt::InstrumentPass"* %0, i32 3) #13
  store i32 %82, i32* %78, align 8
  br label %83

83:                                               ; preds = %70, %81
  %84 = phi i32 [ %82, %81 ], [ %79, %70 ]
  %85 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %84, i32 124, i32 %77)
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %85, i64 0, i32 4
  %87 = load i8, i8* %86, align 1, !range !6
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %85, i64 0, i32 3
  %91 = load i8, i8* %90, align 4, !range !6
  %92 = zext i8 %91 to i32
  %93 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %85, i32 %92) #13
  br label %94

94:                                               ; preds = %83, %89
  %95 = phi i32 [ %93, %89 ], [ 0, %83 ]
  %96 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %97 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %96, i32 81, i32 %95, i32 0)
  %98 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %99 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %98, i32 81, i32 %95, i32 1)
  %100 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 4
  %101 = load i8, i8* %100, align 1, !range !6
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %94
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 3
  %105 = load i8, i8* %104, align 4, !range !6
  %106 = zext i8 %105 to i32
  %107 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %97, i32 %106) #13
  br label %108

108:                                              ; preds = %94, %103
  %109 = phi i32 [ %107, %103 ], [ 0, %94 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 5, i32 %109, %"class.spvtools::opt::InstructionBuilder"* %3)
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %99, i64 0, i32 4
  %111 = load i8, i8* %110, align 1, !range !6
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %118, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %99, i64 0, i32 3
  %115 = load i8, i8* %114, align 4, !range !6
  %116 = zext i8 %115 to i32
  %117 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %99, i32 %116) #13
  br label %118

118:                                              ; preds = %108, %113
  %119 = phi i32 [ %117, %113 ], [ 0, %108 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 6, i32 %119, %"class.spvtools::opt::InstructionBuilder"* %3)
  br label %209

120:                                              ; preds = %4
  %121 = tail call i32 @_ZN8spvtools3opt14InstrumentPass14GetVec4FloatIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %122 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %123 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %122, align 8
  %124 = tail call i32 @_ZN8spvtools3opt9IRContext20GetBuiltinInputVarIdEj(%"class.spvtools::opt::IRContext"* %123, i32 15) #13
  %125 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %121, i32 61, i32 %124)
  %126 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 17
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %120
  %130 = tail call i32 @_ZN8spvtools3opt14InstrumentPass12GetVecUintIdEj(%"class.spvtools::opt::InstrumentPass"* %0, i32 4) #13
  store i32 %130, i32* %126, align 4
  br label %131

131:                                              ; preds = %120, %129
  %132 = phi i32 [ %130, %129 ], [ %127, %120 ]
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %125, i64 0, i32 4
  %134 = load i8, i8* %133, align 1, !range !6
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %141, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %125, i64 0, i32 3
  %138 = load i8, i8* %137, align 4, !range !6
  %139 = zext i8 %138 to i32
  %140 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %125, i32 %139) #13
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i32 [ %140, %136 ], [ 0, %131 ]
  %143 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %132, i32 124, i32 %142)
  %144 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %143, i64 0, i32 4
  %145 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %143, i64 0, i32 3
  %146 = load i8, i8* %144, align 1, !range !6
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %152, label %148

148:                                              ; preds = %141
  %149 = load i8, i8* %145, align 4, !range !6
  %150 = zext i8 %149 to i32
  %151 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %143, i32 %150) #13
  br label %152

152:                                              ; preds = %141, %148
  %153 = phi i32 [ %151, %148 ], [ 0, %141 ]
  %154 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0) #13
  %155 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %154, i32 81, i32 %153, i32 0) #13
  %156 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %155, i64 0, i32 4
  %157 = load i8, i8* %156, align 1, !range !6
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %164, label %159

159:                                              ; preds = %152
  %160 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %155, i64 0, i32 3
  %161 = load i8, i8* %160, align 4, !range !6
  %162 = zext i8 %161 to i32
  %163 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %155, i32 %162) #13
  br label %164

164:                                              ; preds = %152, %159
  %165 = phi i32 [ %163, %159 ], [ 0, %152 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 4, i32 %165, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  %166 = load i8, i8* %144, align 1, !range !6
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %214, label %210

168:                                              ; preds = %4, %4, %4, %4, %4, %4
  %169 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %170 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %169, align 8
  %171 = tail call i32 @_ZN8spvtools3opt9IRContext20GetBuiltinInputVarIdEj(%"class.spvtools::opt::IRContext"* %170, i32 5319) #13
  %172 = tail call i32 @_ZN8spvtools3opt14InstrumentPass10GenVarLoadEjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %171, %"class.spvtools::opt::InstructionBuilder"* %3)
  %173 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %174 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %173, i32 81, i32 %172, i32 0)
  %175 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %176 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %175, i32 81, i32 %172, i32 1)
  %177 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %178 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %177, i32 81, i32 %172, i32 2)
  %179 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %174, i64 0, i32 4
  %180 = load i8, i8* %179, align 1, !range !6
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %187, label %182

182:                                              ; preds = %168
  %183 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %174, i64 0, i32 3
  %184 = load i8, i8* %183, align 4, !range !6
  %185 = zext i8 %184 to i32
  %186 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %174, i32 %185) #13
  br label %187

187:                                              ; preds = %168, %182
  %188 = phi i32 [ %186, %182 ], [ 0, %168 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 4, i32 %188, %"class.spvtools::opt::InstructionBuilder"* %3)
  %189 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %176, i64 0, i32 4
  %190 = load i8, i8* %189, align 1, !range !6
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %197, label %192

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %176, i64 0, i32 3
  %194 = load i8, i8* %193, align 4, !range !6
  %195 = zext i8 %194 to i32
  %196 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %176, i32 %195) #13
  br label %197

197:                                              ; preds = %187, %192
  %198 = phi i32 [ %196, %192 ], [ 0, %187 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 5, i32 %198, %"class.spvtools::opt::InstructionBuilder"* %3)
  %199 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %178, i64 0, i32 4
  %200 = load i8, i8* %199, align 1, !range !6
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %207, label %202

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %178, i64 0, i32 3
  %204 = load i8, i8* %203, align 4, !range !6
  %205 = zext i8 %204 to i32
  %206 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %178, i32 %205) #13
  br label %207

207:                                              ; preds = %197, %202
  %208 = phi i32 [ %206, %202 ], [ 0, %197 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 6, i32 %208, %"class.spvtools::opt::InstructionBuilder"* %3)
  br label %209

209:                                              ; preds = %226, %4, %207, %118, %62, %54, %52, %5
  ret void

210:                                              ; preds = %164
  %211 = load i8, i8* %145, align 4, !range !6
  %212 = zext i8 %211 to i32
  %213 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %143, i32 %212) #13
  br label %214

214:                                              ; preds = %210, %164
  %215 = phi i32 [ %213, %210 ], [ 0, %164 ]
  %216 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0) #13
  %217 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* %3, i32 %216, i32 81, i32 %215, i32 1) #13
  %218 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %217, i64 0, i32 4
  %219 = load i8, i8* %218, align 1, !range !6
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %226, label %221

221:                                              ; preds = %214
  %222 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %217, i64 0, i32 3
  %223 = load i8, i8* %222, align 4, !range !6
  %224 = zext i8 %223 to i32
  %225 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %217, i32 %224) #13
  br label %226

226:                                              ; preds = %221, %214
  %227 = phi i32 [ %225, %221 ], [ 0, %214 ]
  tail call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 5, i32 %227, %"class.spvtools::opt::InstructionBuilder"* %3) #13
  br label %209
}

declare i32 @_ZN8spvtools3opt9IRContext20GetBuiltinInputVarIdEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass13GetVec3UintIdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 18
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call i32 @_ZN8spvtools3opt14InstrumentPass12GetVecUintIdEj(%"class.spvtools::opt::InstrumentPass"* %0, i32 3)
  store i32 %6, i32* %2, align 8
  br label %7

7:                                                ; preds = %5, %1
  %8 = phi i32 [ %6, %5 ], [ %3, %1 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass14GetVec4FloatIdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::analysis::Float", align 8
  %3 = alloca %"class.spvtools::opt::analysis::Vector", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %101

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = trunc i32 %11 to i16
  %13 = icmp slt i16 %12, 0
  br i1 %13, label %29, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 5
  %16 = tail call i8* @_Znwm(i64 240) #12
  %17 = bitcast i8* %16 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %17, %"class.std::__1::function"* dereferenceable(32) %15, %"class.spvtools::opt::IRContext"* %9) #13
  %18 = ptrtoint i8* %16 to i64
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 20
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.480"* %19 to i64*
  store i64 %18, i64* %22, align 8
  %23 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %14
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %21) #13
  %25 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %21 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %24, %14
  %27 = load i32, i32* %10, align 8
  %28 = or i32 %27, 32768
  store i32 %28, i32* %10, align 8
  br label %29

29:                                               ; preds = %7, %26
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 20, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %30, align 8
  %32 = bitcast %"class.spvtools::opt::analysis::Float"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %2, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %2, i64 0, i32 0, i32 2
  %36 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %2, i64 0, i32 1
  %37 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %2, i64 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::vector.463"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  store i32 3, i32* %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis5FloatE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  store i32 32, i32* %36, align 4
  %39 = bitcast %"class.spvtools::opt::analysis::Float"* %2 to %"class.spvtools::opt::analysis::Type"*
  %40 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %31, %"class.spvtools::opt::analysis::Type"* nonnull %39) #13
  %41 = bitcast %"class.spvtools::opt::analysis::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %41) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 56, i1 false)
  call void @_ZN8spvtools3opt8analysis6VectorC1EPKNS1_4TypeEj(%"class.spvtools::opt::analysis::Vector"* nonnull %3, %"class.spvtools::opt::analysis::Type"* %40, i32 4) #13
  %42 = bitcast %"class.spvtools::opt::analysis::Vector"* %3 to %"class.spvtools::opt::analysis::Type"*
  %43 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %31, %"class.spvtools::opt::analysis::Type"* nonnull %42) #13
  %44 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %31, %"class.spvtools::opt::analysis::Type"* %43) #13
  store i32 %44, i32* %4, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %3, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %47, align 8
  %49 = icmp eq %"class.std::__1::vector.3"* %48, null
  br i1 %49, label %73, label %50

50:                                               ; preds = %29
  %51 = bitcast %"class.std::__1::vector.3"* %48 to i8*
  %52 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %53 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %52, align 8
  %54 = icmp eq %"class.std::__1::vector.3"* %53, %48
  br i1 %54, label %71, label %55

55:                                               ; preds = %50, %66
  %56 = phi %"class.std::__1::vector.3"* [ %57, %66 ], [ %53, %50 ]
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %56, i64 -1
  %58 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %57, i64 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = icmp eq i32* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %55
  %62 = ptrtoint i32* %59 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %56, i64 -1, i32 0, i32 1
  %64 = bitcast i32** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = bitcast i32* %59 to i8*
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %61, %55
  %67 = icmp eq %"class.std::__1::vector.3"* %57, %48
  br i1 %67, label %68, label %55

68:                                               ; preds = %66
  %69 = bitcast %"class.std::__1::vector.463"* %46 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %50
  %72 = phi i8* [ %70, %68 ], [ %51, %50 ]
  store %"class.std::__1::vector.3"* %48, %"class.std::__1::vector.3"** %52, align 8
  call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %29, %71
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %41) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %74 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %37, i64 0, i32 0, i32 0
  %75 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %74, align 8
  %76 = icmp eq %"class.std::__1::vector.3"* %75, null
  br i1 %76, label %99, label %77

77:                                               ; preds = %73
  %78 = bitcast %"class.std::__1::vector.3"* %75 to i8*
  %79 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %34, align 8
  %80 = icmp eq %"class.std::__1::vector.3"* %79, %75
  br i1 %80, label %97, label %81

81:                                               ; preds = %77, %92
  %82 = phi %"class.std::__1::vector.3"* [ %83, %92 ], [ %79, %77 ]
  %83 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %82, i64 -1
  %84 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %83, i64 0, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = icmp eq i32* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %81
  %88 = ptrtoint i32* %85 to i64
  %89 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %82, i64 -1, i32 0, i32 1
  %90 = bitcast i32** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = bitcast i32* %85 to i8*
  call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %87, %81
  %93 = icmp eq %"class.std::__1::vector.3"* %83, %75
  br i1 %93, label %94, label %81

94:                                               ; preds = %92
  %95 = bitcast %"class.std::__1::vector.463"* %37 to i8**
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %94, %77
  %98 = phi i8* [ %96, %94 ], [ %78, %77 ]
  store %"class.std::__1::vector.3"* %75, %"class.std::__1::vector.3"** %34, align 8
  call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %73, %97
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #13
  %100 = load i32, i32* %4, align 8
  br label %101

101:                                              ; preds = %99, %1
  %102 = phi i32 [ %100, %99 ], [ %5, %1 ]
  ret i32 %102
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass13GetVec4UintIdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call i32 @_ZN8spvtools3opt14InstrumentPass12GetVecUintIdEj(%"class.spvtools::opt::InstrumentPass"* %0, i32 4)
  store i32 %6, i32* %2, align 4
  br label %7

7:                                                ; preds = %5, %1
  %8 = phi i32 [ %6, %5 ], [ %3, %1 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14InstrumentPass19GenDebugStreamWriteEjjRKNSt3__16vectorIjNS2_9allocatorIjEEEEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"*, i32, i32, %"class.std::__1::vector.3"* nocapture readonly dereferenceable(24), %"class.spvtools::opt::InstructionBuilder"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector.3", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.3"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = lshr exact i64 %12, 2
  %14 = trunc i64 %13 to i32
  %15 = tail call i32 @_ZN8spvtools3opt14InstrumentPass24GetStreamWriteFunctionIdEjj(%"class.spvtools::opt::InstrumentPass"* %0, i32 %2, i32 %14)
  %16 = bitcast %"class.std::__1::vector.3"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.std::__1::vector.3"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  %21 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* %4, i32 %1, i1 zeroext false) #13
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !6
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 3
  %27 = load i8, i8* %26, align 4, !range !6
  %28 = zext i8 %27 to i32
  %29 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %21, i32 %28) #13
  br label %30

30:                                               ; preds = %5, %25
  %31 = phi i32 [ %29, %25 ], [ 0, %5 ]
  %32 = tail call i8* @_Znwm(i64 8) #12
  %33 = bitcast i8* %32 to i32*
  %34 = bitcast %"class.std::__1::vector.3"* %6 to i8**
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds i8, i8* %32, i64 8
  %36 = bitcast i32** %19 to i8**
  store i8* %35, i8** %36, align 8
  %37 = bitcast i32** %18 to i64*
  store i32 %15, i32* %33, align 4
  %38 = getelementptr inbounds i8, i8* %32, i64 4
  %39 = bitcast i8* %38 to i32*
  store i32 %31, i32* %39, align 4
  %40 = ptrtoint i8* %35 to i64
  store i64 %40, i64* %37, align 8
  %41 = bitcast i8* %35 to i32*
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = load i32*, i32** %7, align 8
  %45 = call i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPKjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPjEEE4typeES8_SA_SA_(%"class.std::__1::vector.3"* nonnull %6, i32* %41, i32* %43, i32* %44)
  %46 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetVoidIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %47 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"* %4, i32 %46, i32 57, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %6, i32 0)
  %48 = load i32*, i32** %17, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %30
  %51 = ptrtoint i32* %48 to i64
  store i64 %51, i64* %37, align 8
  %52 = bitcast i32* %48 to i8*
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %30, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass24GetStreamWriteFunctionIdEjj(%"class.spvtools::opt::InstrumentPass"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.1146", align 8
  %5 = alloca %"class.std::__1::tuple.1061", align 1
  %6 = alloca %"class.std::__1::unique_ptr.28", align 8
  %7 = alloca %"class.std::__1::unique_ptr.40", align 8
  %8 = alloca %"class.std::__1::unique_ptr.40", align 8
  %9 = alloca %"class.std::__1::unique_ptr.40", align 8
  %10 = alloca %"class.std::__1::unique_ptr.40", align 8
  %11 = alloca %"class.std::__1::unique_ptr.21", align 8
  %12 = alloca %"class.std::__1::unique_ptr.40", align 8
  %13 = alloca %"class.std::__1::unique_ptr.40", align 8
  %14 = alloca %"class.std::__1::tuple.1146", align 8
  %15 = alloca %"class.std::__1::tuple.1061", align 1
  %16 = alloca %"class.std::__1::tuple.1146", align 8
  %17 = alloca %"class.std::__1::tuple.1061", align 1
  %18 = alloca %"class.std::__1::tuple.1146", align 8
  %19 = alloca %"class.std::__1::tuple.1061", align 1
  %20 = alloca i32, align 4
  %21 = alloca %"class.std::__1::vector.956", align 8
  %22 = alloca %"class.spvtools::opt::analysis::Function", align 8
  %23 = alloca %"class.std::__1::vector", align 8
  %24 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %25 = alloca %"class.spvtools::utils::SmallVector", align 8
  %26 = alloca %"class.spvtools::utils::SmallVector", align 8
  %27 = alloca %"class.std::__1::vector.3", align 8
  %28 = alloca %"class.std::__1::vector", align 8
  %29 = alloca %"class.std::__1::unique_ptr.40", align 8
  %30 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %31 = alloca %"class.std::__1::unique_ptr.40", align 8
  %32 = alloca %"class.std::__1::unique_ptr.40", align 8
  %33 = alloca %"class.std::__1::vector", align 8
  %34 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #13
  %35 = add i32 %2, 1
  store i32 %35, i32* %20, align 4
  %36 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 12, i32 0
  %37 = bitcast %"class.std::__1::tuple.1146"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  %38 = getelementptr inbounds %"class.std::__1::tuple.1146", %"class.std::__1::tuple.1146"* %18, i64 0, i32 0, i32 0, i32 0
  store i32* %20, i32** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %19, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %39) #13
  %40 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %36, i32* nonnull dereferenceable(4) %20, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1146"* nonnull dereferenceable(8) %18, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %19) #13
  %41 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %40, 0
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %41, i64 2
  %43 = bitcast %"struct.std::__1::__hash_node_base.254"* %42 to %"struct.std::__1::pair"*
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %43, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %1112

47:                                               ; preds = %3
  %48 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %49 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %48, align 8
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %49, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %50, align 8
  %52 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %51) #13
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %49, i64 0, i32 5, i32 0, i32 2
  %56 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %56, i64 0, i32 2
  %58 = load i8, i8* %57, align 8, !range !6
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %66

60:                                               ; preds = %54
  %61 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %61, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %62 = getelementptr inbounds i8, i8* %61, i64 37
  store i8 0, i8* %62, align 1
  %63 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %49, i64 0, i32 5, i32 0, i32 1, i32 0
  %64 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %49, i64 0, i32 5, i32 0, i32 0
  call void %64(%"union.std::__1::__function::__policy_storage"* %65, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %61) #13
  call void @_ZdlPv(i8* nonnull %61) #12
  br label %66

66:                                               ; preds = %47, %54, %60
  %67 = bitcast %"class.std::__1::tuple.1146"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #13
  %68 = getelementptr inbounds %"class.std::__1::tuple.1146", %"class.std::__1::tuple.1146"* %16, i64 0, i32 0, i32 0, i32 0
  store i32* %20, i32** %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %69) #13
  %70 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %36, i32* nonnull dereferenceable(4) %20, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1146"* nonnull dereferenceable(8) %16, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %17) #13
  %71 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %70, 0
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %71, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base.254"* %72 to %"struct.std::__1::pair"*
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %69) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #13
  store i32 %52, i32* %74, align 4
  %75 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %48, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %75, i64 0, i32 11
  %77 = load i32, i32* %76, align 8
  %78 = trunc i32 %77 to i16
  %79 = icmp slt i16 %78, 0
  br i1 %79, label %95, label %80

80:                                               ; preds = %66
  %81 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %75, i64 0, i32 5
  %82 = call i8* @_Znwm(i64 240) #12
  %83 = bitcast i8* %82 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %83, %"class.std::__1::function"* dereferenceable(32) %81, %"class.spvtools::opt::IRContext"* %75) #13
  %84 = ptrtoint i8* %82 to i64
  %85 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %75, i64 0, i32 20
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %86, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.480"* %85 to i64*
  store i64 %84, i64* %88, align 8
  %89 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %87, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %80
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %87) #13
  %91 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %87 to i8*
  call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %90, %80
  %93 = load i32, i32* %76, align 8
  %94 = or i32 %93, 32768
  store i32 %94, i32* %76, align 8
  br label %95

95:                                               ; preds = %66, %92
  %96 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %75, i64 0, i32 20, i32 0, i32 0, i32 0
  %97 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %96, align 8
  %98 = bitcast %"class.std::__1::vector.956"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #13
  %99 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %21, i64 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %21, i64 0, i32 0, i32 1
  %101 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %21, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 0, i64 24, i1 false) #13
  %102 = load i32, i32* %20, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %108, label %104

104:                                              ; preds = %95
  %105 = bitcast %"class.spvtools::opt::analysis::Type"*** %100 to i64*
  %106 = bitcast %"class.std::__1::vector.956"* %21 to i64*
  %107 = bitcast %"class.spvtools::opt::analysis::Type"*** %101 to i64*
  br label %245

108:                                              ; preds = %302, %95
  %109 = bitcast %"class.spvtools::opt::analysis::Function"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %109) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 72, i1 false)
  %110 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetVoidIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %111 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %97, i32 %110) #13
  call void @_ZN8spvtools3opt8analysis8FunctionC1EPKNS1_4TypeERNSt3__16vectorIS5_NS6_9allocatorIS5_EEEE(%"class.spvtools::opt::analysis::Function"* nonnull %22, %"class.spvtools::opt::analysis::Type"* %111, %"class.std::__1::vector.956"* nonnull dereferenceable(24) %21) #13
  %112 = bitcast %"class.spvtools::opt::analysis::Function"* %22 to %"class.spvtools::opt::analysis::Type"*
  %113 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %97, %"class.spvtools::opt::analysis::Type"* nonnull %112) #13
  %114 = call i8* @_Znwm(i64 112) #12
  %115 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %48, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %115, i64 0, i32 4, i32 0, i32 0, i32 0
  %117 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %116, align 8
  %118 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %117, i64 0, i32 2
  %119 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %118, align 8
  %120 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetVoidIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %121 = bitcast %"class.std::__1::tuple.1146"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #13
  %122 = getelementptr inbounds %"class.std::__1::tuple.1146", %"class.std::__1::tuple.1146"* %14, i64 0, i32 0, i32 0, i32 0
  store i32* %20, i32** %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %123) #13
  %124 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %36, i32* nonnull dereferenceable(4) %20, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1146"* nonnull dereferenceable(8) %14, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %15) #13
  %125 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %124, 0
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %125, i64 2
  %127 = bitcast %"struct.std::__1::__hash_node_base.254"* %126 to %"struct.std::__1::pair"*
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %123) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #13
  %129 = load i32, i32* %128, align 4
  %130 = bitcast %"class.std::__1::vector"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #13
  %131 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %131) #13
  %132 = bitcast %"class.spvtools::utils::SmallVector"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %132) #13
  %133 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %25, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8
  %134 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %25, i64 0, i32 1
  %135 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %25, i64 0, i32 2
  %136 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %25, i64 0, i32 3, i64 0
  %137 = bitcast i32** %135 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %136, %"struct.std::__1::aligned_storage<4, 4>::type"** %137, align 8
  %138 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %25, i64 0, i32 4
  %139 = bitcast %"class.std::__1::unique_ptr.0"* %138 to i64*
  store i64 0, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %136 to i32*
  store i64 1, i64* %134, align 8
  store i32 0, i32* %140, align 8
  %141 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 0, i32 0
  store i32 6, i32* %141, align 8
  %142 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 0, i32 1
  %143 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %142, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %143, align 8
  %144 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %144, align 8
  %145 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 0, i32 1, i32 2
  %146 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 0, i32 1, i32 3, i64 0
  %147 = bitcast i32** %145 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %146, %"struct.std::__1::aligned_storage<4, 4>::type"** %147, align 8
  %148 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 0, i32 1, i32 4
  %149 = bitcast %"class.std::__1::unique_ptr.0"* %148 to i64*
  store i64 0, i64* %149, align 8
  %150 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %142, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %25) #13
  %151 = bitcast %"class.spvtools::utils::SmallVector"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %151) #13
  %152 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %97, %"class.spvtools::opt::analysis::Type"* %113) #13
  %153 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %153, align 8
  %154 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 1
  %155 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 2
  %156 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 3, i64 0
  %157 = bitcast i32** %155 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %156, %"struct.std::__1::aligned_storage<4, 4>::type"** %157, align 8
  %158 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 4
  %159 = bitcast %"class.std::__1::unique_ptr.0"* %158 to i64*
  store i64 0, i64* %159, align 8
  %160 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %156 to i32*
  store i64 1, i64* %154, align 8
  store i32 %152, i32* %160, align 8
  %161 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 1, i32 0
  store i32 1, i32* %161, align 8
  %162 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 1, i32 1
  %163 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %162, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %163, align 8
  %164 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %164, align 8
  %165 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 1, i32 1, i32 2
  %166 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 1, i32 1, i32 3, i64 0
  %167 = bitcast i32** %165 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %166, %"struct.std::__1::aligned_storage<4, 4>::type"** %167, align 8
  %168 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 1, i32 1, i32 4
  %169 = bitcast %"class.std::__1::unique_ptr.0"* %168 to i64*
  store i64 0, i64* %169, align 8
  %170 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %162, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %26) #13
  %171 = call i8* @_Znwm(i64 96) #12
  %172 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 1
  %173 = bitcast %"struct.spvtools::opt::Operand"** %172 to i8**
  store i8* %171, i8** %173, align 8
  %174 = bitcast %"class.std::__1::vector"* %23 to i8**
  store i8* %171, i8** %174, align 8
  %175 = getelementptr inbounds i8, i8* %171, i64 96
  %176 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  %177 = bitcast %"struct.spvtools::opt::Operand"** %176 to i8**
  store i8* %175, i8** %177, align 8
  %178 = bitcast i8* %171 to i32*
  %179 = load i32, i32* %141, align 8
  store i32 %179, i32* %178, align 8
  %180 = getelementptr inbounds i8, i8* %171, i64 8
  %181 = bitcast i8* %180 to %"class.spvtools::utils::SmallVector"*
  %182 = bitcast i8* %180 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %182, align 8
  %183 = getelementptr inbounds i8, i8* %171, i64 16
  %184 = bitcast i8* %183 to i64*
  store i64 0, i64* %184, align 8
  %185 = getelementptr inbounds i8, i8* %171, i64 24
  %186 = getelementptr inbounds i8, i8* %171, i64 32
  %187 = bitcast i8* %185 to i8**
  store i8* %186, i8** %187, align 8
  %188 = getelementptr inbounds i8, i8* %171, i64 40
  %189 = bitcast i8* %188 to i64*
  store i64 0, i64* %189, align 8
  %190 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %181, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %142) #13
  %191 = getelementptr inbounds i8, i8* %171, i64 48
  %192 = bitcast i8* %191 to i32*
  %193 = load i32, i32* %161, align 8
  store i32 %193, i32* %192, align 8
  %194 = getelementptr inbounds i8, i8* %171, i64 56
  %195 = bitcast i8* %194 to %"class.spvtools::utils::SmallVector"*
  %196 = bitcast i8* %194 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %196, align 8
  %197 = getelementptr inbounds i8, i8* %171, i64 64
  %198 = bitcast i8* %197 to i64*
  store i64 0, i64* %198, align 8
  %199 = getelementptr inbounds i8, i8* %171, i64 72
  %200 = getelementptr inbounds i8, i8* %171, i64 80
  %201 = bitcast i8* %199 to i8**
  store i8* %200, i8** %201, align 8
  %202 = getelementptr inbounds i8, i8* %171, i64 88
  %203 = bitcast i8* %202 to i64*
  store i64 0, i64* %203, align 8
  %204 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %195, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %162) #13
  %205 = bitcast i8* %114 to %"class.spvtools::opt::Instruction"*
  %206 = bitcast %"struct.spvtools::opt::Operand"** %172 to i64*
  %207 = ptrtoint i8* %175 to i64
  store i64 %207, i64* %206, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %205, %"class.spvtools::opt::IRContext"* %119, i32 54, i32 %120, i32 %129, %"class.std::__1::vector"* nonnull dereferenceable(24) %23) #13
  %208 = ptrtoint i8* %114 to i64
  %209 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 0
  %210 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %209, align 8
  %211 = icmp eq %"struct.spvtools::opt::Operand"* %210, null
  br i1 %211, label %240, label %212

212:                                              ; preds = %108
  %213 = bitcast %"struct.spvtools::opt::Operand"* %210 to i8*
  %214 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %172, align 8
  %215 = icmp eq %"struct.spvtools::opt::Operand"* %214, %210
  br i1 %215, label %238, label %216

216:                                              ; preds = %212, %234
  %217 = phi %"struct.spvtools::opt::Operand"* [ %218, %234 ], [ %214, %212 ]
  %218 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %217, i64 -1
  %219 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %217, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %219, align 8
  %220 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %217, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %221 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %220, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %220, align 8
  %222 = icmp eq %"class.std::__1::vector.3"* %221, null
  br i1 %222, label %234, label %223

223:                                              ; preds = %216
  %224 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 0
  %225 = load i32*, i32** %224, align 8
  %226 = icmp eq i32* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %223
  %228 = ptrtoint i32* %225 to i64
  %229 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 1
  %230 = bitcast i32** %229 to i64*
  store i64 %228, i64* %230, align 8
  %231 = bitcast i32* %225 to i8*
  call void @_ZdlPv(i8* %231) #12
  br label %232

232:                                              ; preds = %227, %223
  %233 = bitcast %"class.std::__1::vector.3"* %221 to i8*
  call void @_ZdlPv(i8* %233) #12
  br label %234

234:                                              ; preds = %232, %216
  %235 = icmp eq %"struct.spvtools::opt::Operand"* %218, %210
  br i1 %235, label %236, label %216

236:                                              ; preds = %234
  %237 = load i8*, i8** %174, align 8
  br label %238

238:                                              ; preds = %236, %212
  %239 = phi i8* [ %237, %236 ], [ %213, %212 ]
  store %"struct.spvtools::opt::Operand"* %210, %"struct.spvtools::opt::Operand"** %172, align 8
  call void @_ZdlPv(i8* %239) #12
  br label %240

240:                                              ; preds = %108, %238
  %241 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %241, align 8
  %242 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %243 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %242, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %242, align 8
  %244 = icmp eq %"class.std::__1::vector.3"* %243, null
  br i1 %244, label %317, label %306

245:                                              ; preds = %104, %302
  %246 = phi i32 [ 0, %104 ], [ %303, %302 ]
  %247 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %248 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %97, i32 %247) #13
  %249 = ptrtoint %"class.spvtools::opt::analysis::Type"* %248 to i64
  %250 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %100, align 8
  %251 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %101, align 8
  %252 = icmp ult %"class.spvtools::opt::analysis::Type"** %250, %251
  %253 = ptrtoint %"class.spvtools::opt::analysis::Type"** %251 to i64
  br i1 %252, label %254, label %258

254:                                              ; preds = %245
  %255 = bitcast %"class.spvtools::opt::analysis::Type"** %250 to i64*
  store i64 %249, i64* %255, align 8
  %256 = getelementptr inbounds %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %250, i64 1
  %257 = ptrtoint %"class.spvtools::opt::analysis::Type"** %256 to i64
  store i64 %257, i64* %105, align 8
  br label %302

258:                                              ; preds = %245
  %259 = ptrtoint %"class.spvtools::opt::analysis::Type"** %250 to i64
  %260 = load i64, i64* %106, align 8
  %261 = sub i64 %259, %260
  %262 = ashr exact i64 %261, 3
  %263 = add nsw i64 %262, 1
  %264 = icmp ugt i64 %263, 2305843009213693951
  br i1 %264, label %265, label %267

265:                                              ; preds = %258
  %266 = bitcast %"class.std::__1::vector.956"* %21 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %266) #14
  unreachable

267:                                              ; preds = %258
  %268 = sub i64 %253, %260
  %269 = ashr exact i64 %268, 3
  %270 = icmp ult i64 %269, 1152921504606846975
  br i1 %270, label %271, label %279

271:                                              ; preds = %267
  %272 = ashr exact i64 %268, 2
  %273 = icmp ult i64 %272, %263
  %274 = select i1 %273, i64 %263, i64 %272
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %284, label %276

276:                                              ; preds = %271
  %277 = icmp ugt i64 %274, 2305843009213693951
  br i1 %277, label %278, label %279

278:                                              ; preds = %276
  call void @abort() #14
  unreachable

279:                                              ; preds = %276, %267
  %280 = phi i64 [ %274, %276 ], [ 2305843009213693951, %267 ]
  %281 = shl i64 %280, 3
  %282 = call i8* @_Znwm(i64 %281) #12
  %283 = bitcast i8* %282 to %"class.spvtools::opt::analysis::Type"**
  br label %284

284:                                              ; preds = %279, %271
  %285 = phi i64 [ %280, %279 ], [ 0, %271 ]
  %286 = phi i8* [ %282, %279 ], [ null, %271 ]
  %287 = phi %"class.spvtools::opt::analysis::Type"** [ %283, %279 ], [ null, %271 ]
  %288 = getelementptr inbounds %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %287, i64 %262
  %289 = getelementptr inbounds %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %287, i64 %285
  %290 = ptrtoint %"class.spvtools::opt::analysis::Type"** %289 to i64
  %291 = bitcast %"class.spvtools::opt::analysis::Type"** %288 to i64*
  store i64 %249, i64* %291, align 8
  %292 = getelementptr inbounds %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %288, i64 1
  %293 = ptrtoint %"class.spvtools::opt::analysis::Type"** %292 to i64
  %294 = ptrtoint %"class.spvtools::opt::analysis::Type"** %287 to i64
  %295 = icmp sgt i64 %261, 0
  br i1 %295, label %296, label %298

296:                                              ; preds = %284
  %297 = inttoptr i64 %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %286, i8* align 8 %297, i64 %261, i1 false) #13
  br label %298

298:                                              ; preds = %296, %284
  store i64 %294, i64* %106, align 8
  store i64 %293, i64* %105, align 8
  store i64 %290, i64* %107, align 8
  %299 = icmp eq i64 %260, 0
  br i1 %299, label %302, label %300

300:                                              ; preds = %298
  %301 = inttoptr i64 %260 to i8*
  call void @_ZdlPv(i8* %301) #12
  br label %302

302:                                              ; preds = %254, %298, %300
  %303 = add nuw i32 %246, 1
  %304 = load i32, i32* %20, align 4
  %305 = icmp ult i32 %303, %304
  br i1 %305, label %245, label %108

306:                                              ; preds = %240
  %307 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %243, i64 0, i32 0, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = icmp eq i32* %308, null
  br i1 %309, label %315, label %310

310:                                              ; preds = %306
  %311 = ptrtoint i32* %308 to i64
  %312 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %243, i64 0, i32 0, i32 1
  %313 = bitcast i32** %312 to i64*
  store i64 %311, i64* %313, align 8
  %314 = bitcast i32* %308 to i8*
  call void @_ZdlPv(i8* %314) #12
  br label %315

315:                                              ; preds = %310, %306
  %316 = bitcast %"class.std::__1::vector.3"* %243 to i8*
  call void @_ZdlPv(i8* %316) #12
  br label %317

317:                                              ; preds = %240, %315
  %318 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %318, align 8
  %319 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %24, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %320 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %319, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %319, align 8
  %321 = icmp eq %"class.std::__1::vector.3"* %320, null
  br i1 %321, label %1133, label %1122

322:                                              ; preds = %1133
  %323 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1135, i64 0, i32 0, i32 0
  %324 = load i32*, i32** %323, align 8
  %325 = icmp eq i32* %324, null
  br i1 %325, label %331, label %326

326:                                              ; preds = %322
  %327 = ptrtoint i32* %324 to i64
  %328 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1135, i64 0, i32 0, i32 1
  %329 = bitcast i32** %328 to i64*
  store i64 %327, i64* %329, align 8
  %330 = bitcast i32* %324 to i8*
  call void @_ZdlPv(i8* %330) #12
  br label %331

331:                                              ; preds = %326, %322
  %332 = bitcast %"class.std::__1::vector.3"* %1135 to i8*
  call void @_ZdlPv(i8* %332) #12
  br label %333

333:                                              ; preds = %1133, %331
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %151) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8
  %334 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %335 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %334, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %334, align 8
  %336 = icmp eq %"class.std::__1::vector.3"* %335, null
  br i1 %336, label %348, label %337

337:                                              ; preds = %333
  %338 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %335, i64 0, i32 0, i32 0
  %339 = load i32*, i32** %338, align 8
  %340 = icmp eq i32* %339, null
  br i1 %340, label %346, label %341

341:                                              ; preds = %337
  %342 = ptrtoint i32* %339 to i64
  %343 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %335, i64 0, i32 0, i32 1
  %344 = bitcast i32** %343 to i64*
  store i64 %342, i64* %344, align 8
  %345 = bitcast i32* %339 to i8*
  call void @_ZdlPv(i8* %345) #12
  br label %346

346:                                              ; preds = %341, %337
  %347 = bitcast %"class.std::__1::vector.3"* %335 to i8*
  call void @_ZdlPv(i8* %347) #12
  br label %348

348:                                              ; preds = %333, %346
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %132) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %131) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #13
  %349 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %48, align 8
  %350 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %349, i64 0, i32 11
  %351 = load i32, i32* %350, align 8
  %352 = and i32 %351, 1
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %378

354:                                              ; preds = %348
  %355 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %349, i64 0, i32 4, i32 0, i32 0, i32 0
  %356 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %355, align 8
  %357 = call i8* @_Znwm(i64 104) #12
  %358 = bitcast i8* %357 to %"class.spvtools::opt::analysis::DefUseManager"*
  %359 = getelementptr inbounds i8, i8* %357, i64 32
  %360 = bitcast i8* %359 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %357, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %360, align 4
  %361 = getelementptr inbounds i8, i8* %357, i64 48
  %362 = getelementptr inbounds i8, i8* %357, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %361, i8 0, i64 16, i1 false) #13
  %363 = bitcast i8* %362 to i8**
  store i8* %361, i8** %363, align 8
  %364 = getelementptr inbounds i8, i8* %357, i64 64
  %365 = getelementptr inbounds i8, i8* %357, i64 96
  %366 = bitcast i8* %365 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %364, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %366, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %358, %"class.spvtools::opt::Module"* %356) #13
  %367 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %349, i64 0, i32 6
  %368 = ptrtoint i8* %357 to i64
  %369 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %367, i64 0, i32 0, i32 0, i32 0
  %370 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %369, align 8
  %371 = bitcast %"class.std::__1::unique_ptr.62"* %367 to i64*
  store i64 %368, i64* %371, align 8
  %372 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %370, null
  br i1 %372, label %375, label %373

373:                                              ; preds = %354
  %374 = bitcast %"class.std::__1::unique_ptr.62"* %367 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %374, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %370) #13
  br label %375

375:                                              ; preds = %373, %354
  %376 = load i32, i32* %350, align 8
  %377 = or i32 %376, 1
  store i32 %377, i32* %350, align 8
  br label %378

378:                                              ; preds = %348, %375
  %379 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %349, i64 0, i32 6, i32 0, i32 0, i32 0
  %380 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %379, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %380, %"class.spvtools::opt::Instruction"* nonnull %205) #13
  %381 = call i8* @_Znwm(i64 208) #12
  %382 = bitcast i8* %381 to i64*
  store i64 %208, i64* %382, align 8
  %383 = getelementptr inbounds i8, i8* %381, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %383, i8 0, i64 24, i1 false) #13
  %384 = getelementptr inbounds i8, i8* %381, i64 32
  %385 = bitcast i8* %384 to i32 (...)***
  %386 = getelementptr inbounds i8, i8* %381, i64 40
  %387 = bitcast i8* %386 to i32 (...)***
  %388 = getelementptr inbounds i8, i8* %381, i64 48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %387, align 8
  %389 = getelementptr inbounds i8, i8* %381, i64 72
  %390 = getelementptr inbounds i8, i8* %381, i64 88
  %391 = bitcast i8* %390 to i32*
  store i32 0, i32* %391, align 8
  %392 = getelementptr inbounds i8, i8* %381, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 8 %389, i8 0, i64 14, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %392, i8 0, i64 56, i1 false) #13
  %393 = bitcast i8* %388 to i8**
  store i8* %386, i8** %393, align 8
  %394 = getelementptr inbounds i8, i8* %381, i64 56
  %395 = bitcast i8* %394 to i8**
  store i8* %386, i8** %395, align 8
  %396 = getelementptr inbounds i8, i8* %381, i64 64
  store i8 1, i8* %396, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %385, align 8
  %397 = getelementptr inbounds i8, i8* %381, i64 152
  call void @llvm.memset.p0i8.i64(i8* align 8 %397, i8 0, i64 56, i1 false) #13
  %398 = ptrtoint i8* %381 to i64
  %399 = bitcast %"class.std::__1::vector.3"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %399) #13
  %400 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %27, i64 0, i32 0, i32 0
  %401 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %27, i64 0, i32 0, i32 1
  %402 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %27, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %399, i8 0, i64 24, i1 false) #13
  %403 = load i32, i32* %20, align 4
  %404 = icmp eq i32 %403, 0
  %405 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %48, align 8
  %406 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %405, i64 0, i32 4, i32 0, i32 0, i32 0
  %407 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %406, align 8
  %408 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %407) #13
  %409 = icmp eq i32 %408, 0
  br i1 %404, label %427, label %410

410:                                              ; preds = %378
  %411 = bitcast i32** %401 to i64*
  %412 = bitcast %"class.std::__1::vector.3"* %27 to i64*
  %413 = bitcast i32** %402 to i64*
  %414 = bitcast %"class.std::__1::vector"* %28 to i8*
  %415 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 0, i32 0, i32 0
  %416 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 0, i32 0, i32 1
  %417 = bitcast %"class.std::__1::vector"* %28 to i8**
  %418 = bitcast %"class.std::__1::unique_ptr.21"* %11 to i8*
  %419 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %11, i64 0, i32 0, i32 0, i32 0
  %420 = bitcast %"class.std::__1::unique_ptr.21"* %11 to i8**
  %421 = getelementptr inbounds i8, i8* %381, i64 16
  %422 = bitcast i8* %421 to %"class.std::__1::unique_ptr.21"**
  %423 = getelementptr inbounds i8, i8* %381, i64 24
  %424 = bitcast i8* %423 to %"class.std::__1::unique_ptr.21"**
  %425 = bitcast i8* %383 to %"class.std::__1::vector.31"*
  %426 = bitcast i8* %421 to i64*
  br label %696

427:                                              ; preds = %853, %378
  %428 = phi %"class.spvtools::opt::IRContext"* [ %405, %378 ], [ %857, %853 ]
  %429 = phi i32 [ %408, %378 ], [ %860, %853 ]
  %430 = phi i1 [ %409, %378 ], [ %861, %853 ]
  br i1 %430, label %431, label %443

431:                                              ; preds = %427
  %432 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %428, i64 0, i32 5, i32 0, i32 2
  %433 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %432, align 8
  %434 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %433, i64 0, i32 2
  %435 = load i8, i8* %434, align 8, !range !6
  %436 = icmp eq i8 %435, 0
  br i1 %436, label %437, label %443

437:                                              ; preds = %431
  %438 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %438, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %439 = getelementptr inbounds i8, i8* %438, i64 37
  store i8 0, i8* %439, align 1
  %440 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %428, i64 0, i32 5, i32 0, i32 1, i32 0
  %441 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %440, align 8
  %442 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %428, i64 0, i32 5, i32 0, i32 0
  call void %441(%"union.std::__1::__function::__policy_storage"* %442, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %438) #13
  call void @_ZdlPv(i8* nonnull %438) #12
  br label %443

443:                                              ; preds = %427, %431, %437
  %444 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt14InstrumentPass8NewLabelEj(%"class.spvtools::opt::InstrumentPass"* %0, i32 %429)
  %445 = ptrtoint %"class.spvtools::opt::Instruction"* %444 to i64
  %446 = bitcast %"class.std::__1::unique_ptr.40"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %446) #13
  %447 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %29, i64 0, i32 0, i32 0, i32 0
  %448 = call i8* @_Znwm(i64 136) #12
  %449 = bitcast i8* %448 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %449, align 8
  %450 = getelementptr inbounds i8, i8* %448, i64 8
  %451 = bitcast i8* %450 to i64*
  store i64 %445, i64* %451, align 8
  %452 = getelementptr inbounds i8, i8* %448, i64 16
  %453 = bitcast i8* %452 to i32 (...)***
  %454 = getelementptr inbounds i8, i8* %448, i64 24
  %455 = bitcast i8* %454 to i32 (...)***
  %456 = getelementptr inbounds i8, i8* %448, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %455, align 8
  %457 = getelementptr inbounds i8, i8* %448, i64 56
  %458 = getelementptr inbounds i8, i8* %448, i64 72
  %459 = bitcast i8* %458 to i32*
  store i32 0, i32* %459, align 8
  %460 = getelementptr inbounds i8, i8* %448, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %457, i8 0, i64 14, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %460, i8 0, i64 56, i1 false) #13
  %461 = bitcast i8* %456 to i8**
  store i8* %454, i8** %461, align 8
  %462 = getelementptr inbounds i8, i8* %448, i64 40
  %463 = bitcast i8* %462 to i8**
  store i8* %454, i8** %463, align 8
  %464 = getelementptr inbounds i8, i8* %448, i64 48
  store i8 1, i8* %464, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %453, align 8
  %465 = bitcast %"class.std::__1::unique_ptr.40"* %29 to i8**
  store i8* %448, i8** %465, align 8
  %466 = bitcast %"class.spvtools::opt::InstructionBuilder"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %466) #13
  %467 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %30, i64 0, i32 1
  %468 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %30, i64 0, i32 3
  %469 = bitcast %"class.spvtools::opt::IRContext"** %48 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %466, i8 -86, i64 32, i1 false)
  %470 = load i64, i64* %469, align 8
  %471 = ptrtoint i8* %454 to i64
  %472 = bitcast %"class.spvtools::opt::InstructionBuilder"* %30 to i64*
  store i64 %470, i64* %472, align 8
  %473 = bitcast %"class.spvtools::opt::BasicBlock"** %467 to i8**
  store i8* %448, i8** %473, align 8
  %474 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %30, i64 0, i32 2
  %475 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %474 to i64*
  store i64 %471, i64* %475, align 8
  store i32 3, i32* %468, align 8
  %476 = add i32 %2, 7
  %477 = call i32 @_ZN8spvtools3opt14InstrumentPass17GetOutputBufferIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %478 = call i32 @_ZN8spvtools3opt14InstrumentPass20GetOutputBufferPtrIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %479 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 0, i1 zeroext false) #13
  %480 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %479, i64 0, i32 4
  %481 = load i8, i8* %480, align 1, !range !6
  %482 = icmp eq i8 %481, 0
  br i1 %482, label %488, label %483

483:                                              ; preds = %443
  %484 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %479, i64 0, i32 3
  %485 = load i8, i8* %484, align 4, !range !6
  %486 = zext i8 %485 to i32
  %487 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %479, i32 %486) #13
  br label %488

488:                                              ; preds = %443, %483
  %489 = phi i32 [ %487, %483 ], [ 0, %443 ]
  %490 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 %478, i32 65, i32 %477, i32 %489)
  %491 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 %476, i1 zeroext false) #13
  %492 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %491, i64 0, i32 4
  %493 = load i8, i8* %492, align 1, !range !6
  %494 = icmp eq i8 %493, 0
  br i1 %494, label %500, label %495

495:                                              ; preds = %488
  %496 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %491, i64 0, i32 3
  %497 = load i8, i8* %496, align 4, !range !6
  %498 = zext i8 %497 to i32
  %499 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %491, i32 %498) #13
  br label %500

500:                                              ; preds = %488, %495
  %501 = phi i32 [ %499, %495 ], [ 0, %488 ]
  %502 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 0, i1 zeroext false) #13
  %503 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %502, i64 0, i32 4
  %504 = load i8, i8* %503, align 1, !range !6
  %505 = icmp eq i8 %504, 0
  br i1 %505, label %511, label %506

506:                                              ; preds = %500
  %507 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %502, i64 0, i32 3
  %508 = load i8, i8* %507, align 4, !range !6
  %509 = zext i8 %508 to i32
  %510 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %502, i32 %509) #13
  br label %511

511:                                              ; preds = %500, %506
  %512 = phi i32 [ %510, %506 ], [ 0, %500 ]
  %513 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 4, i1 zeroext false) #13
  %514 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %513, i64 0, i32 4
  %515 = load i8, i8* %514, align 1, !range !6
  %516 = icmp eq i8 %515, 0
  br i1 %516, label %522, label %517

517:                                              ; preds = %511
  %518 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %513, i64 0, i32 3
  %519 = load i8, i8* %518, align 4, !range !6
  %520 = zext i8 %519 to i32
  %521 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %513, i32 %520) #13
  br label %522

522:                                              ; preds = %511, %517
  %523 = phi i32 [ %521, %517 ], [ 0, %511 ]
  %524 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %525 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %490, i64 0, i32 4
  %526 = load i8, i8* %525, align 1, !range !6
  %527 = icmp eq i8 %526, 0
  br i1 %527, label %533, label %528

528:                                              ; preds = %522
  %529 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %490, i64 0, i32 3
  %530 = load i8, i8* %529, align 4, !range !6
  %531 = zext i8 %530 to i32
  %532 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %490, i32 %531) #13
  br label %533

533:                                              ; preds = %522, %528
  %534 = phi i32 [ %532, %528 ], [ 0, %522 ]
  %535 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddQuadOpEj6SpvOp_jjjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 %524, i32 234, i32 %534, i32 %523, i32 %512, i32 %501)
  %536 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %535, i64 0, i32 4
  %537 = load i8, i8* %536, align 1, !range !6
  %538 = icmp eq i8 %537, 0
  br i1 %538, label %544, label %539

539:                                              ; preds = %533
  %540 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %535, i64 0, i32 3
  %541 = load i8, i8* %540, align 4, !range !6
  %542 = zext i8 %541 to i32
  %543 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %535, i32 %542) #13
  br label %544

544:                                              ; preds = %533, %539
  %545 = phi i32 [ %543, %539 ], [ 0, %533 ]
  %546 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %547 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 %476, i1 zeroext false) #13
  %548 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %547, i64 0, i32 4
  %549 = load i8, i8* %548, align 1, !range !6
  %550 = icmp eq i8 %549, 0
  br i1 %550, label %556, label %551

551:                                              ; preds = %544
  %552 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %547, i64 0, i32 3
  %553 = load i8, i8* %552, align 4, !range !6
  %554 = zext i8 %553 to i32
  %555 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %547, i32 %554) #13
  br label %556

556:                                              ; preds = %544, %551
  %557 = phi i32 [ %555, %551 ], [ 0, %544 ]
  %558 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 %546, i32 128, i32 %545, i32 %557)
  %559 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %560 = call i32 @_ZN8spvtools3opt14InstrumentPass17GetOutputBufferIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %561 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddIdLiteralOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 %559, i32 68, i32 %560, i32 1)
  %562 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetBoolIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %563 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %558, i64 0, i32 4
  %564 = load i8, i8* %563, align 1, !range !6
  %565 = icmp eq i8 %564, 0
  br i1 %565, label %571, label %566

566:                                              ; preds = %556
  %567 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %558, i64 0, i32 3
  %568 = load i8, i8* %567, align 4, !range !6
  %569 = zext i8 %568 to i32
  %570 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %558, i32 %569) #13
  br label %571

571:                                              ; preds = %556, %566
  %572 = phi i32 [ %570, %566 ], [ 0, %556 ]
  %573 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %561, i64 0, i32 4
  %574 = load i8, i8* %573, align 1, !range !6
  %575 = icmp eq i8 %574, 0
  br i1 %575, label %581, label %576

576:                                              ; preds = %571
  %577 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %561, i64 0, i32 3
  %578 = load i8, i8* %577, align 4, !range !6
  %579 = zext i8 %578 to i32
  %580 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %561, i32 %579) #13
  br label %581

581:                                              ; preds = %571, %576
  %582 = phi i32 [ %580, %576 ], [ 0, %571 ]
  %583 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 %562, i32 178, i32 %572, i32 %582)
  %584 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %48, align 8
  %585 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %584, i64 0, i32 4, i32 0, i32 0, i32 0
  %586 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %585, align 8
  %587 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %586) #13
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %601

589:                                              ; preds = %581
  %590 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %584, i64 0, i32 5, i32 0, i32 2
  %591 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %590, align 8
  %592 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %591, i64 0, i32 2
  %593 = load i8, i8* %592, align 8, !range !6
  %594 = icmp eq i8 %593, 0
  br i1 %594, label %595, label %601

595:                                              ; preds = %589
  %596 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %596, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %597 = getelementptr inbounds i8, i8* %596, i64 37
  store i8 0, i8* %597, align 1
  %598 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %584, i64 0, i32 5, i32 0, i32 1, i32 0
  %599 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %598, align 8
  %600 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %584, i64 0, i32 5, i32 0, i32 0
  call void %599(%"union.std::__1::__function::__policy_storage"* %600, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %596) #13
  call void @_ZdlPv(i8* nonnull %596) #12
  br label %601

601:                                              ; preds = %581, %589, %595
  %602 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %48, align 8
  %603 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %602, i64 0, i32 4, i32 0, i32 0, i32 0
  %604 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %603, align 8
  %605 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %604) #13
  %606 = icmp eq i32 %605, 0
  br i1 %606, label %607, label %619

607:                                              ; preds = %601
  %608 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %602, i64 0, i32 5, i32 0, i32 2
  %609 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %608, align 8
  %610 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %609, i64 0, i32 2
  %611 = load i8, i8* %610, align 8, !range !6
  %612 = icmp eq i8 %611, 0
  br i1 %612, label %613, label %619

613:                                              ; preds = %607
  %614 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %614, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %615 = getelementptr inbounds i8, i8* %614, i64 37
  store i8 0, i8* %615, align 1
  %616 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %602, i64 0, i32 5, i32 0, i32 1, i32 0
  %617 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %616, align 8
  %618 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %602, i64 0, i32 5, i32 0, i32 0
  call void %617(%"union.std::__1::__function::__policy_storage"* %618, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %614) #13
  call void @_ZdlPv(i8* nonnull %614) #12
  br label %619

619:                                              ; preds = %601, %607, %613
  %620 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt14InstrumentPass8NewLabelEj(%"class.spvtools::opt::InstrumentPass"* %0, i32 %587)
  %621 = ptrtoint %"class.spvtools::opt::Instruction"* %620 to i64
  %622 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt14InstrumentPass8NewLabelEj(%"class.spvtools::opt::InstrumentPass"* %0, i32 %605)
  %623 = ptrtoint %"class.spvtools::opt::Instruction"* %622 to i64
  %624 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %583, i64 0, i32 4
  %625 = load i8, i8* %624, align 1, !range !6
  %626 = icmp eq i8 %625, 0
  br i1 %626, label %632, label %627

627:                                              ; preds = %619
  %628 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %583, i64 0, i32 3
  %629 = load i8, i8* %628, align 4, !range !6
  %630 = zext i8 %629 to i32
  %631 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %583, i32 %630) #13
  br label %632

632:                                              ; preds = %619, %627
  %633 = phi i32 [ %631, %627 ], [ 0, %619 ]
  %634 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 %633, i32 %605, i32 %587, i32 %587, i32 0)
  %635 = bitcast %"class.std::__1::unique_ptr.40"* %29 to i64*
  %636 = load i64, i64* %635, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %447, align 8
  %637 = bitcast %"class.std::__1::unique_ptr.40"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %637)
  %638 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %638, align 8
  %639 = bitcast i8* %397 to %"class.std::__1::vector.38"*
  %640 = getelementptr inbounds i8, i8* %381, i64 160
  %641 = bitcast i8* %640 to %"class.std::__1::unique_ptr.40"**
  %642 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %641, align 8
  %643 = inttoptr i64 %636 to i8**
  store i8* %381, i8** %643, align 8
  %644 = bitcast %"class.std::__1::unique_ptr.40"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %644) #13
  %645 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %12, i64 0, i32 0, i32 0, i32 0
  %646 = bitcast %"class.std::__1::unique_ptr.40"* %12 to i64*
  store i64 %636, i64* %646, align 8
  %647 = call %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"* %639, %"class.std::__1::unique_ptr.40"* %642, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %12) #13
  %648 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %645, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %645, align 8
  %649 = icmp eq %"class.spvtools::opt::BasicBlock"* %648, null
  br i1 %649, label %650, label %651

650:                                              ; preds = %632
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %644) #13
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %638, align 8
  br label %657

651:                                              ; preds = %632
  %652 = bitcast %"class.std::__1::unique_ptr.40"* %12 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %652, %"class.spvtools::opt::BasicBlock"* nonnull %648) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %644) #13
  %653 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %638, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %638, align 8
  %654 = icmp eq %"class.spvtools::opt::BasicBlock"* %653, null
  br i1 %654, label %657, label %655

655:                                              ; preds = %651
  %656 = bitcast %"class.std::__1::unique_ptr.40"* %13 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %656, %"class.spvtools::opt::BasicBlock"* nonnull %653) #13
  br label %657

657:                                              ; preds = %650, %651, %655
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %637)
  %658 = bitcast %"class.std::__1::unique_ptr.40"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %658) #13
  %659 = call i8* @_Znwm(i64 136) #12
  %660 = bitcast i8* %659 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %660, align 8
  %661 = getelementptr inbounds i8, i8* %659, i64 8
  %662 = bitcast i8* %661 to i64*
  store i64 %623, i64* %662, align 8
  %663 = getelementptr inbounds i8, i8* %659, i64 16
  %664 = bitcast i8* %663 to i32 (...)***
  %665 = getelementptr inbounds i8, i8* %659, i64 24
  %666 = bitcast i8* %665 to i32 (...)***
  %667 = getelementptr inbounds i8, i8* %659, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %666, align 8
  %668 = getelementptr inbounds i8, i8* %659, i64 56
  %669 = getelementptr inbounds i8, i8* %659, i64 72
  %670 = bitcast i8* %669 to i32*
  store i32 0, i32* %670, align 8
  %671 = getelementptr inbounds i8, i8* %659, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %668, i8 0, i64 14, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %671, i8 0, i64 56, i1 false) #13
  %672 = bitcast i8* %667 to i8**
  store i8* %665, i8** %672, align 8
  %673 = getelementptr inbounds i8, i8* %659, i64 40
  %674 = bitcast i8* %673 to i8**
  store i8* %665, i8** %674, align 8
  %675 = getelementptr inbounds i8, i8* %659, i64 48
  store i8 1, i8* %675, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %664, align 8
  %676 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %31, i64 0, i32 0, i32 0, i32 0
  %677 = ptrtoint i8* %659 to i64
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %676, align 8
  %678 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %447, align 8
  store i64 %677, i64* %635, align 8
  %679 = icmp eq %"class.spvtools::opt::BasicBlock"* %678, null
  br i1 %679, label %680, label %681

680:                                              ; preds = %657
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %676, align 8
  br label %687

681:                                              ; preds = %657
  %682 = bitcast %"class.std::__1::unique_ptr.40"* %29 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %682, %"class.spvtools::opt::BasicBlock"* nonnull %678) #13
  %683 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %676, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %676, align 8
  %684 = icmp eq %"class.spvtools::opt::BasicBlock"* %683, null
  br i1 %684, label %687, label %685

685:                                              ; preds = %681
  %686 = bitcast %"class.std::__1::unique_ptr.40"* %31 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %686, %"class.spvtools::opt::BasicBlock"* nonnull %683) #13
  br label %687

687:                                              ; preds = %680, %681, %685
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %658) #13
  %688 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %447, align 8
  store %"class.spvtools::opt::BasicBlock"* %688, %"class.spvtools::opt::BasicBlock"** %467, align 8
  %689 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %688, i64 0, i32 2, i32 0, i32 1
  %690 = ptrtoint %"class.spvtools::opt::Instruction"* %689 to i64
  store i64 %690, i64* %475, align 8
  %691 = load i32*, i32** %400, align 8
  %692 = load i32, i32* %691, align 4
  call void @_ZN8spvtools3opt14InstrumentPass24GenCommonStreamWriteCodeEjjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %476, i32 %692, i32 %1, i32 %545, %"class.spvtools::opt::InstructionBuilder"* nonnull %30)
  call void @_ZN8spvtools3opt14InstrumentPass23GenStageStreamWriteCodeEjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %1, i32 %545, %"class.spvtools::opt::InstructionBuilder"* nonnull %30)
  %693 = icmp eq i32 %2, 0
  br i1 %693, label %862, label %694

694:                                              ; preds = %687
  %695 = zext i32 %2 to i64
  br label %1103

696:                                              ; preds = %410, %853
  %697 = phi i1 [ %409, %410 ], [ %861, %853 ]
  %698 = phi i32 [ %408, %410 ], [ %860, %853 ]
  %699 = phi %"class.spvtools::opt::IRContext"* [ %405, %410 ], [ %857, %853 ]
  %700 = phi i32 [ 0, %410 ], [ %854, %853 ]
  br i1 %697, label %701, label %713

701:                                              ; preds = %696
  %702 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %699, i64 0, i32 5, i32 0, i32 2
  %703 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %702, align 8
  %704 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %703, i64 0, i32 2
  %705 = load i8, i8* %704, align 8, !range !6
  %706 = icmp eq i8 %705, 0
  br i1 %706, label %707, label %713

707:                                              ; preds = %701
  %708 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %708, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %709 = getelementptr inbounds i8, i8* %708, i64 37
  store i8 0, i8* %709, align 1
  %710 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %699, i64 0, i32 5, i32 0, i32 1, i32 0
  %711 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %710, align 8
  %712 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %699, i64 0, i32 5, i32 0, i32 0
  call void %711(%"union.std::__1::__function::__policy_storage"* %712, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %708) #13
  call void @_ZdlPv(i8* nonnull %708) #12
  br label %713

713:                                              ; preds = %696, %701, %707
  %714 = load i32*, i32** %401, align 8
  %715 = load i32*, i32** %402, align 8
  %716 = icmp eq i32* %714, %715
  %717 = ptrtoint i32* %715 to i64
  br i1 %716, label %721, label %718

718:                                              ; preds = %713
  store i32 %698, i32* %714, align 4
  %719 = getelementptr inbounds i32, i32* %714, i64 1
  %720 = ptrtoint i32* %719 to i64
  store i64 %720, i64* %411, align 8
  br label %764

721:                                              ; preds = %713
  %722 = ptrtoint i32* %714 to i64
  %723 = load i64, i64* %412, align 8
  %724 = sub i64 %722, %723
  %725 = ashr exact i64 %724, 2
  %726 = add nsw i64 %725, 1
  %727 = icmp ugt i64 %726, 4611686018427387903
  br i1 %727, label %728, label %730

728:                                              ; preds = %721
  %729 = bitcast %"class.std::__1::vector.3"* %27 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %729) #14
  unreachable

730:                                              ; preds = %721
  %731 = sub i64 %717, %723
  %732 = ashr exact i64 %731, 2
  %733 = icmp ult i64 %732, 2305843009213693951
  br i1 %733, label %734, label %742

734:                                              ; preds = %730
  %735 = ashr exact i64 %731, 1
  %736 = icmp ult i64 %735, %726
  %737 = select i1 %736, i64 %726, i64 %735
  %738 = icmp eq i64 %737, 0
  br i1 %738, label %747, label %739

739:                                              ; preds = %734
  %740 = icmp ugt i64 %737, 4611686018427387903
  br i1 %740, label %741, label %742

741:                                              ; preds = %739
  call void @abort() #14
  unreachable

742:                                              ; preds = %739, %730
  %743 = phi i64 [ %737, %739 ], [ 4611686018427387903, %730 ]
  %744 = shl i64 %743, 2
  %745 = call i8* @_Znwm(i64 %744) #12
  %746 = bitcast i8* %745 to i32*
  br label %747

747:                                              ; preds = %742, %734
  %748 = phi i64 [ %743, %742 ], [ 0, %734 ]
  %749 = phi i8* [ %745, %742 ], [ null, %734 ]
  %750 = phi i32* [ %746, %742 ], [ null, %734 ]
  %751 = getelementptr inbounds i32, i32* %750, i64 %725
  %752 = getelementptr inbounds i32, i32* %750, i64 %748
  %753 = ptrtoint i32* %752 to i64
  store i32 %698, i32* %751, align 4
  %754 = getelementptr inbounds i32, i32* %751, i64 1
  %755 = ptrtoint i32* %754 to i64
  %756 = ptrtoint i32* %750 to i64
  %757 = icmp sgt i64 %724, 0
  br i1 %757, label %758, label %760

758:                                              ; preds = %747
  %759 = inttoptr i64 %723 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %749, i8* align 4 %759, i64 %724, i1 false) #13
  br label %760

760:                                              ; preds = %758, %747
  store i64 %756, i64* %412, align 8
  store i64 %755, i64* %411, align 8
  store i64 %753, i64* %413, align 8
  %761 = icmp eq i64 %723, 0
  br i1 %761, label %764, label %762

762:                                              ; preds = %760
  %763 = inttoptr i64 %723 to i8*
  call void @_ZdlPv(i8* %763) #12
  br label %764

764:                                              ; preds = %718, %760, %762
  %765 = call i8* @_Znwm(i64 112) #12
  %766 = bitcast i8* %765 to %"class.spvtools::opt::Instruction"*
  %767 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %48, align 8
  %768 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %767, i64 0, i32 4, i32 0, i32 0, i32 0
  %769 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %768, align 8
  %770 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %769, i64 0, i32 2
  %771 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %770, align 8
  %772 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %414) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %414, i8 0, i64 24, i1 false) #13
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %766, %"class.spvtools::opt::IRContext"* %771, i32 55, i32 %772, i32 %698, %"class.std::__1::vector"* nonnull dereferenceable(24) %28) #13
  %773 = ptrtoint i8* %765 to i64
  %774 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %415, align 8
  %775 = icmp eq %"struct.spvtools::opt::Operand"* %774, null
  br i1 %775, label %804, label %776

776:                                              ; preds = %764
  %777 = bitcast %"struct.spvtools::opt::Operand"* %774 to i8*
  %778 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %416, align 8
  %779 = icmp eq %"struct.spvtools::opt::Operand"* %778, %774
  br i1 %779, label %802, label %780

780:                                              ; preds = %776, %798
  %781 = phi %"struct.spvtools::opt::Operand"* [ %782, %798 ], [ %778, %776 ]
  %782 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %781, i64 -1
  %783 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %781, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %783, align 8
  %784 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %781, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %785 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %784, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %784, align 8
  %786 = icmp eq %"class.std::__1::vector.3"* %785, null
  br i1 %786, label %798, label %787

787:                                              ; preds = %780
  %788 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %785, i64 0, i32 0, i32 0
  %789 = load i32*, i32** %788, align 8
  %790 = icmp eq i32* %789, null
  br i1 %790, label %796, label %791

791:                                              ; preds = %787
  %792 = ptrtoint i32* %789 to i64
  %793 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %785, i64 0, i32 0, i32 1
  %794 = bitcast i32** %793 to i64*
  store i64 %792, i64* %794, align 8
  %795 = bitcast i32* %789 to i8*
  call void @_ZdlPv(i8* %795) #12
  br label %796

796:                                              ; preds = %791, %787
  %797 = bitcast %"class.std::__1::vector.3"* %785 to i8*
  call void @_ZdlPv(i8* %797) #12
  br label %798

798:                                              ; preds = %796, %780
  %799 = icmp eq %"struct.spvtools::opt::Operand"* %782, %774
  br i1 %799, label %800, label %780

800:                                              ; preds = %798
  %801 = load i8*, i8** %417, align 8
  br label %802

802:                                              ; preds = %800, %776
  %803 = phi i8* [ %801, %800 ], [ %777, %776 ]
  store %"struct.spvtools::opt::Operand"* %774, %"struct.spvtools::opt::Operand"** %416, align 8
  call void @_ZdlPv(i8* %803) #12
  br label %804

804:                                              ; preds = %764, %802
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %414) #13
  %805 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %48, align 8
  %806 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %805, i64 0, i32 11
  %807 = load i32, i32* %806, align 8
  %808 = and i32 %807, 1
  %809 = icmp eq i32 %808, 0
  br i1 %809, label %810, label %834

810:                                              ; preds = %804
  %811 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %805, i64 0, i32 4, i32 0, i32 0, i32 0
  %812 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %811, align 8
  %813 = call i8* @_Znwm(i64 104) #12
  %814 = bitcast i8* %813 to %"class.spvtools::opt::analysis::DefUseManager"*
  %815 = getelementptr inbounds i8, i8* %813, i64 32
  %816 = bitcast i8* %815 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %813, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %816, align 4
  %817 = getelementptr inbounds i8, i8* %813, i64 48
  %818 = getelementptr inbounds i8, i8* %813, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %817, i8 0, i64 16, i1 false) #13
  %819 = bitcast i8* %818 to i8**
  store i8* %817, i8** %819, align 8
  %820 = getelementptr inbounds i8, i8* %813, i64 64
  %821 = getelementptr inbounds i8, i8* %813, i64 96
  %822 = bitcast i8* %821 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %820, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %822, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %814, %"class.spvtools::opt::Module"* %812) #13
  %823 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %805, i64 0, i32 6
  %824 = ptrtoint i8* %813 to i64
  %825 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %823, i64 0, i32 0, i32 0, i32 0
  %826 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %825, align 8
  %827 = bitcast %"class.std::__1::unique_ptr.62"* %823 to i64*
  store i64 %824, i64* %827, align 8
  %828 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %826, null
  br i1 %828, label %831, label %829

829:                                              ; preds = %810
  %830 = bitcast %"class.std::__1::unique_ptr.62"* %823 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %830, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %826) #13
  br label %831

831:                                              ; preds = %829, %810
  %832 = load i32, i32* %806, align 8
  %833 = or i32 %832, 1
  store i32 %833, i32* %806, align 8
  br label %834

834:                                              ; preds = %804, %831
  %835 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %805, i64 0, i32 6, i32 0, i32 0, i32 0
  %836 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %835, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %836, %"class.spvtools::opt::Instruction"* nonnull %766) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %418)
  store i8* %765, i8** %420, align 8
  %837 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %422, align 8
  %838 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %424, align 8
  %839 = icmp ult %"class.std::__1::unique_ptr.21"* %837, %838
  br i1 %839, label %840, label %844

840:                                              ; preds = %834
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %419, align 8
  %841 = bitcast %"class.std::__1::unique_ptr.21"* %837 to i64*
  store i64 %773, i64* %841, align 8
  %842 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %837, i64 1
  %843 = ptrtoint %"class.std::__1::unique_ptr.21"* %842 to i64
  store i64 %843, i64* %426, align 8
  br label %845

844:                                              ; preds = %834
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.31"* %425, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %11) #13
  br label %845

845:                                              ; preds = %844, %840
  %846 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %419, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %419, align 8
  %847 = icmp eq %"class.spvtools::opt::Instruction"* %846, null
  br i1 %847, label %853, label %848

848:                                              ; preds = %845
  %849 = bitcast %"class.spvtools::opt::Instruction"* %846 to void (%"class.spvtools::opt::Instruction"*)***
  %850 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %849, align 8
  %851 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %850, i64 1
  %852 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %851, align 8
  call void %852(%"class.spvtools::opt::Instruction"* nonnull %846) #13
  br label %853

853:                                              ; preds = %848, %845
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %418)
  %854 = add nuw i32 %700, 1
  %855 = load i32, i32* %20, align 4
  %856 = icmp ult i32 %854, %855
  %857 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %48, align 8
  %858 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %857, i64 0, i32 4, i32 0, i32 0, i32 0
  %859 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %858, align 8
  %860 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %859) #13
  %861 = icmp eq i32 %860, 0
  br i1 %856, label %696, label %427

862:                                              ; preds = %1103, %687
  %863 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 %587)
  %864 = load i64, i64* %635, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %447, align 8
  %865 = bitcast %"class.std::__1::unique_ptr.40"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %865)
  %866 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %866, align 8
  %867 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %641, align 8
  %868 = inttoptr i64 %864 to i8**
  store i8* %381, i8** %868, align 8
  %869 = bitcast %"class.std::__1::unique_ptr.40"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %869) #13
  %870 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %9, i64 0, i32 0, i32 0, i32 0
  %871 = bitcast %"class.std::__1::unique_ptr.40"* %9 to i64*
  store i64 %864, i64* %871, align 8
  %872 = call %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"* %639, %"class.std::__1::unique_ptr.40"* %867, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %9) #13
  %873 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %870, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %870, align 8
  %874 = icmp eq %"class.spvtools::opt::BasicBlock"* %873, null
  br i1 %874, label %875, label %876

875:                                              ; preds = %862
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %869) #13
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %866, align 8
  br label %882

876:                                              ; preds = %862
  %877 = bitcast %"class.std::__1::unique_ptr.40"* %9 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %877, %"class.spvtools::opt::BasicBlock"* nonnull %873) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %869) #13
  %878 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %866, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %866, align 8
  %879 = icmp eq %"class.spvtools::opt::BasicBlock"* %878, null
  br i1 %879, label %882, label %880

880:                                              ; preds = %876
  %881 = bitcast %"class.std::__1::unique_ptr.40"* %10 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %881, %"class.spvtools::opt::BasicBlock"* nonnull %878) #13
  br label %882

882:                                              ; preds = %875, %876, %880
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %865)
  %883 = bitcast %"class.std::__1::unique_ptr.40"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %883) #13
  %884 = call i8* @_Znwm(i64 136) #12
  %885 = bitcast i8* %884 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %885, align 8
  %886 = getelementptr inbounds i8, i8* %884, i64 8
  %887 = bitcast i8* %886 to i64*
  store i64 %621, i64* %887, align 8
  %888 = getelementptr inbounds i8, i8* %884, i64 16
  %889 = bitcast i8* %888 to i32 (...)***
  %890 = getelementptr inbounds i8, i8* %884, i64 24
  %891 = bitcast i8* %890 to i32 (...)***
  %892 = getelementptr inbounds i8, i8* %884, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %891, align 8
  %893 = getelementptr inbounds i8, i8* %884, i64 56
  %894 = getelementptr inbounds i8, i8* %884, i64 72
  %895 = bitcast i8* %894 to i32*
  store i32 0, i32* %895, align 8
  %896 = getelementptr inbounds i8, i8* %884, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %893, i8 0, i64 14, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %896, i8 0, i64 56, i1 false) #13
  %897 = bitcast i8* %892 to i8**
  store i8* %890, i8** %897, align 8
  %898 = getelementptr inbounds i8, i8* %884, i64 40
  %899 = bitcast i8* %898 to i8**
  store i8* %890, i8** %899, align 8
  %900 = getelementptr inbounds i8, i8* %884, i64 48
  store i8 1, i8* %900, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %889, align 8
  %901 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %32, i64 0, i32 0, i32 0, i32 0
  %902 = ptrtoint i8* %884 to i64
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %901, align 8
  %903 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %447, align 8
  store i64 %902, i64* %635, align 8
  %904 = icmp eq %"class.spvtools::opt::BasicBlock"* %903, null
  br i1 %904, label %905, label %906

905:                                              ; preds = %882
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %901, align 8
  br label %912

906:                                              ; preds = %882
  %907 = bitcast %"class.std::__1::unique_ptr.40"* %29 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %907, %"class.spvtools::opt::BasicBlock"* nonnull %903) #13
  %908 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %901, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %901, align 8
  %909 = icmp eq %"class.spvtools::opt::BasicBlock"* %908, null
  br i1 %909, label %912, label %910

910:                                              ; preds = %906
  %911 = bitcast %"class.std::__1::unique_ptr.40"* %32 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %911, %"class.spvtools::opt::BasicBlock"* nonnull %908) #13
  br label %912

912:                                              ; preds = %905, %906, %910
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %883) #13
  %913 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %447, align 8
  store %"class.spvtools::opt::BasicBlock"* %913, %"class.spvtools::opt::BasicBlock"** %467, align 8
  %914 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %913, i64 0, i32 2, i32 0, i32 1
  %915 = ptrtoint %"class.spvtools::opt::Instruction"* %914 to i64
  store i64 %915, i64* %475, align 8
  %916 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder12AddNullaryOpEj6SpvOp_(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 0, i32 253)
  %917 = load i64, i64* %635, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %447, align 8
  %918 = bitcast %"class.std::__1::unique_ptr.40"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %918)
  %919 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %919, align 8
  %920 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %641, align 8
  %921 = inttoptr i64 %917 to i8**
  store i8* %381, i8** %921, align 8
  %922 = bitcast %"class.std::__1::unique_ptr.40"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %922) #13
  %923 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %7, i64 0, i32 0, i32 0, i32 0
  %924 = bitcast %"class.std::__1::unique_ptr.40"* %7 to i64*
  store i64 %917, i64* %924, align 8
  %925 = call %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"* %639, %"class.std::__1::unique_ptr.40"* %920, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %7) #13
  %926 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %923, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %923, align 8
  %927 = icmp eq %"class.spvtools::opt::BasicBlock"* %926, null
  br i1 %927, label %928, label %929

928:                                              ; preds = %912
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %922) #13
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %919, align 8
  br label %935

929:                                              ; preds = %912
  %930 = bitcast %"class.std::__1::unique_ptr.40"* %7 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %930, %"class.spvtools::opt::BasicBlock"* nonnull %926) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %922) #13
  %931 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %919, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %919, align 8
  %932 = icmp eq %"class.spvtools::opt::BasicBlock"* %931, null
  br i1 %932, label %935, label %933

933:                                              ; preds = %929
  %934 = bitcast %"class.std::__1::unique_ptr.40"* %8 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %934, %"class.spvtools::opt::BasicBlock"* nonnull %931) #13
  br label %935

935:                                              ; preds = %928, %929, %933
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %918)
  %936 = call i8* @_Znwm(i64 112) #12
  %937 = bitcast i8* %936 to %"class.spvtools::opt::Instruction"*
  %938 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %48, align 8
  %939 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %938, i64 0, i32 4, i32 0, i32 0, i32 0
  %940 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %939, align 8
  %941 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %940, i64 0, i32 2
  %942 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %941, align 8
  %943 = bitcast %"class.std::__1::vector"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %943) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %943, i8 0, i64 24, i1 false) #13
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %937, %"class.spvtools::opt::IRContext"* %942, i32 56, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %33) #13
  %944 = ptrtoint i8* %936 to i64
  %945 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 0, i32 0, i32 0
  %946 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %945, align 8
  %947 = icmp eq %"struct.spvtools::opt::Operand"* %946, null
  br i1 %947, label %978, label %948

948:                                              ; preds = %935
  %949 = bitcast %"struct.spvtools::opt::Operand"* %946 to i8*
  %950 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 0, i32 0, i32 1
  %951 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %950, align 8
  %952 = icmp eq %"struct.spvtools::opt::Operand"* %951, %946
  br i1 %952, label %976, label %953

953:                                              ; preds = %948, %971
  %954 = phi %"struct.spvtools::opt::Operand"* [ %955, %971 ], [ %951, %948 ]
  %955 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %954, i64 -1
  %956 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %954, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %956, align 8
  %957 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %954, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %958 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %957, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %957, align 8
  %959 = icmp eq %"class.std::__1::vector.3"* %958, null
  br i1 %959, label %971, label %960

960:                                              ; preds = %953
  %961 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %958, i64 0, i32 0, i32 0
  %962 = load i32*, i32** %961, align 8
  %963 = icmp eq i32* %962, null
  br i1 %963, label %969, label %964

964:                                              ; preds = %960
  %965 = ptrtoint i32* %962 to i64
  %966 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %958, i64 0, i32 0, i32 1
  %967 = bitcast i32** %966 to i64*
  store i64 %965, i64* %967, align 8
  %968 = bitcast i32* %962 to i8*
  call void @_ZdlPv(i8* %968) #12
  br label %969

969:                                              ; preds = %964, %960
  %970 = bitcast %"class.std::__1::vector.3"* %958 to i8*
  call void @_ZdlPv(i8* %970) #12
  br label %971

971:                                              ; preds = %969, %953
  %972 = icmp eq %"struct.spvtools::opt::Operand"* %955, %946
  br i1 %972, label %973, label %953

973:                                              ; preds = %971
  %974 = bitcast %"class.std::__1::vector"* %33 to i8**
  %975 = load i8*, i8** %974, align 8
  br label %976

976:                                              ; preds = %973, %948
  %977 = phi i8* [ %975, %973 ], [ %949, %948 ]
  store %"struct.spvtools::opt::Operand"* %946, %"struct.spvtools::opt::Operand"** %950, align 8
  call void @_ZdlPv(i8* %977) #12
  br label %978

978:                                              ; preds = %935, %976
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %943) #13
  %979 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %48, align 8
  %980 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %979, i64 0, i32 11
  %981 = load i32, i32* %980, align 8
  %982 = and i32 %981, 1
  %983 = icmp eq i32 %982, 0
  br i1 %983, label %984, label %1008

984:                                              ; preds = %978
  %985 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %979, i64 0, i32 4, i32 0, i32 0, i32 0
  %986 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %985, align 8
  %987 = call i8* @_Znwm(i64 104) #12
  %988 = bitcast i8* %987 to %"class.spvtools::opt::analysis::DefUseManager"*
  %989 = getelementptr inbounds i8, i8* %987, i64 32
  %990 = bitcast i8* %989 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %987, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %990, align 4
  %991 = getelementptr inbounds i8, i8* %987, i64 48
  %992 = getelementptr inbounds i8, i8* %987, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %991, i8 0, i64 16, i1 false) #13
  %993 = bitcast i8* %992 to i8**
  store i8* %991, i8** %993, align 8
  %994 = getelementptr inbounds i8, i8* %987, i64 64
  %995 = getelementptr inbounds i8, i8* %987, i64 96
  %996 = bitcast i8* %995 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %994, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %996, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %988, %"class.spvtools::opt::Module"* %986) #13
  %997 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %979, i64 0, i32 6
  %998 = ptrtoint i8* %987 to i64
  %999 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %997, i64 0, i32 0, i32 0, i32 0
  %1000 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %999, align 8
  %1001 = bitcast %"class.std::__1::unique_ptr.62"* %997 to i64*
  store i64 %998, i64* %1001, align 8
  %1002 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1000, null
  br i1 %1002, label %1005, label %1003

1003:                                             ; preds = %984
  %1004 = bitcast %"class.std::__1::unique_ptr.62"* %997 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %1004, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %1000) #13
  br label %1005

1005:                                             ; preds = %1003, %984
  %1006 = load i32, i32* %980, align 8
  %1007 = or i32 %1006, 1
  store i32 %1007, i32* %980, align 8
  br label %1008

1008:                                             ; preds = %978, %1005
  %1009 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %979, i64 0, i32 6, i32 0, i32 0, i32 0
  %1010 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1009, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %1010, %"class.spvtools::opt::Instruction"* nonnull %937) #13
  %1011 = getelementptr inbounds i8, i8* %381, i64 176
  %1012 = bitcast i8* %1011 to %"class.spvtools::opt::Instruction"**
  %1013 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1012, align 8
  %1014 = bitcast i8* %1011 to i64*
  store i64 %944, i64* %1014, align 8
  %1015 = icmp eq %"class.spvtools::opt::Instruction"* %1013, null
  br i1 %1015, label %1021, label %1016

1016:                                             ; preds = %1008
  %1017 = bitcast %"class.spvtools::opt::Instruction"* %1013 to void (%"class.spvtools::opt::Instruction"*)***
  %1018 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %1017, align 8
  %1019 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %1018, i64 1
  %1020 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %1019, align 8
  call void %1020(%"class.spvtools::opt::Instruction"* nonnull %1013) #13
  br label %1021

1021:                                             ; preds = %1008, %1016
  %1022 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %48, align 8
  %1023 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1022, i64 0, i32 4, i32 0, i32 0, i32 0
  %1024 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %1023, align 8
  %1025 = bitcast %"class.std::__1::unique_ptr.28"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1025) #13
  %1026 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %6, i64 0, i32 0, i32 0, i32 0
  %1027 = bitcast %"class.std::__1::unique_ptr.28"* %6 to i8**
  store i8* %381, i8** %1027, align 8
  %1028 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %1024, i64 0, i32 15, i32 0, i32 1
  %1029 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %1028, align 8
  %1030 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %1024, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %1031 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %1030, align 8
  %1032 = icmp ult %"class.std::__1::unique_ptr.28"* %1029, %1031
  br i1 %1032, label %1033, label %1038

1033:                                             ; preds = %1021
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %1026, align 8
  %1034 = bitcast %"class.std::__1::unique_ptr.28"* %1029 to i64*
  store i64 %398, i64* %1034, align 8
  %1035 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %1029, i64 1
  %1036 = ptrtoint %"class.std::__1::unique_ptr.28"* %1035 to i64
  %1037 = bitcast %"class.std::__1::unique_ptr.28"** %1028 to i64*
  store i64 %1036, i64* %1037, align 8
  br label %1040

1038:                                             ; preds = %1021
  %1039 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %1024, i64 0, i32 15
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt8FunctionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.26"* %1039, %"class.std::__1::unique_ptr.28"* nonnull dereferenceable(8) %6) #13
  br label %1040

1040:                                             ; preds = %1038, %1033
  %1041 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %1026, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %1026, align 8
  %1042 = icmp eq %"class.spvtools::opt::Function"* %1041, null
  br i1 %1042, label %1045, label %1043

1043:                                             ; preds = %1040
  call void @_ZN8spvtools3opt8FunctionD2Ev(%"class.spvtools::opt::Function"* nonnull %1041) #13
  %1044 = bitcast %"class.spvtools::opt::Function"* %1041 to i8*
  call void @_ZdlPv(i8* %1044) #12
  br label %1045

1045:                                             ; preds = %1043, %1040
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1025) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %466) #13
  %1046 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %447, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %447, align 8
  %1047 = icmp eq %"class.spvtools::opt::BasicBlock"* %1046, null
  br i1 %1047, label %1050, label %1048

1048:                                             ; preds = %1045
  %1049 = bitcast %"class.std::__1::unique_ptr.40"* %29 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %1049, %"class.spvtools::opt::BasicBlock"* nonnull %1046) #13
  br label %1050

1050:                                             ; preds = %1048, %1045
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %446) #13
  %1051 = load i32*, i32** %400, align 8
  %1052 = icmp eq i32* %1051, null
  br i1 %1052, label %1057, label %1053

1053:                                             ; preds = %1050
  %1054 = ptrtoint i32* %1051 to i64
  %1055 = bitcast i32** %401 to i64*
  store i64 %1054, i64* %1055, align 8
  %1056 = bitcast i32* %1051 to i8*
  call void @_ZdlPv(i8* %1056) #12
  br label %1057

1057:                                             ; preds = %1050, %1053
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %399) #13
  %1058 = getelementptr inbounds %"class.spvtools::opt::analysis::Function", %"class.spvtools::opt::analysis::Function"* %22, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1058, align 8
  %1059 = getelementptr inbounds %"class.spvtools::opt::analysis::Function", %"class.spvtools::opt::analysis::Function"* %22, i64 0, i32 2, i32 0, i32 0
  %1060 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %1059, align 8
  %1061 = icmp eq %"class.spvtools::opt::analysis::Type"** %1060, null
  br i1 %1061, label %1067, label %1062

1062:                                             ; preds = %1057
  %1063 = ptrtoint %"class.spvtools::opt::analysis::Type"** %1060 to i64
  %1064 = getelementptr inbounds %"class.spvtools::opt::analysis::Function", %"class.spvtools::opt::analysis::Function"* %22, i64 0, i32 2, i32 0, i32 1
  %1065 = bitcast %"class.spvtools::opt::analysis::Type"*** %1064 to i64*
  store i64 %1063, i64* %1065, align 8
  %1066 = bitcast %"class.spvtools::opt::analysis::Type"** %1060 to i8*
  call void @_ZdlPv(i8* %1066) #12
  br label %1067

1067:                                             ; preds = %1062, %1057
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1058, align 8
  %1068 = getelementptr inbounds %"class.spvtools::opt::analysis::Function", %"class.spvtools::opt::analysis::Function"* %22, i64 0, i32 0, i32 1
  %1069 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %1068, i64 0, i32 0, i32 0
  %1070 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %1069, align 8
  %1071 = icmp eq %"class.std::__1::vector.3"* %1070, null
  br i1 %1071, label %1095, label %1072

1072:                                             ; preds = %1067
  %1073 = bitcast %"class.std::__1::vector.3"* %1070 to i8*
  %1074 = getelementptr inbounds %"class.spvtools::opt::analysis::Function", %"class.spvtools::opt::analysis::Function"* %22, i64 0, i32 0, i32 1, i32 0, i32 1
  %1075 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %1074, align 8
  %1076 = icmp eq %"class.std::__1::vector.3"* %1075, %1070
  br i1 %1076, label %1093, label %1077

1077:                                             ; preds = %1072, %1088
  %1078 = phi %"class.std::__1::vector.3"* [ %1079, %1088 ], [ %1075, %1072 ]
  %1079 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1078, i64 -1
  %1080 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1079, i64 0, i32 0, i32 0
  %1081 = load i32*, i32** %1080, align 8
  %1082 = icmp eq i32* %1081, null
  br i1 %1082, label %1088, label %1083

1083:                                             ; preds = %1077
  %1084 = ptrtoint i32* %1081 to i64
  %1085 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1078, i64 -1, i32 0, i32 1
  %1086 = bitcast i32** %1085 to i64*
  store i64 %1084, i64* %1086, align 8
  %1087 = bitcast i32* %1081 to i8*
  call void @_ZdlPv(i8* %1087) #12
  br label %1088

1088:                                             ; preds = %1083, %1077
  %1089 = icmp eq %"class.std::__1::vector.3"* %1079, %1070
  br i1 %1089, label %1090, label %1077

1090:                                             ; preds = %1088
  %1091 = bitcast %"class.std::__1::vector.463"* %1068 to i8**
  %1092 = load i8*, i8** %1091, align 8
  br label %1093

1093:                                             ; preds = %1090, %1072
  %1094 = phi i8* [ %1092, %1090 ], [ %1073, %1072 ]
  store %"class.std::__1::vector.3"* %1070, %"class.std::__1::vector.3"** %1074, align 8
  call void @_ZdlPv(i8* %1094) #12
  br label %1095

1095:                                             ; preds = %1067, %1093
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %109) #13
  %1096 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %99, align 8
  %1097 = icmp eq %"class.spvtools::opt::analysis::Type"** %1096, null
  br i1 %1097, label %1102, label %1098

1098:                                             ; preds = %1095
  %1099 = ptrtoint %"class.spvtools::opt::analysis::Type"** %1096 to i64
  %1100 = bitcast %"class.spvtools::opt::analysis::Type"*** %100 to i64*
  store i64 %1099, i64* %1100, align 8
  %1101 = bitcast %"class.spvtools::opt::analysis::Type"** %1096 to i8*
  call void @_ZdlPv(i8* %1101) #12
  br label %1102

1102:                                             ; preds = %1095, %1098
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #13
  br label %1112

1103:                                             ; preds = %1103, %694
  %1104 = phi i64 [ 0, %694 ], [ %1107, %1103 ]
  %1105 = trunc i64 %1104 to i32
  %1106 = add i32 %1105, 7
  %1107 = add nuw nsw i64 %1104, 1
  %1108 = load i32*, i32** %400, align 8
  %1109 = getelementptr inbounds i32, i32* %1108, i64 %1107
  %1110 = load i32, i32* %1109, align 4
  call void @_ZN8spvtools3opt14InstrumentPass23GenDebugOutputFieldCodeEjjjPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %545, i32 %1106, i32 %1110, %"class.spvtools::opt::InstructionBuilder"* nonnull %30)
  %1111 = icmp eq i64 %1107, %695
  br i1 %1111, label %862, label %1103

1112:                                             ; preds = %1102, %3
  %1113 = bitcast %"class.std::__1::tuple.1146"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1113) #13
  %1114 = getelementptr inbounds %"class.std::__1::tuple.1146", %"class.std::__1::tuple.1146"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %20, i32** %1114, align 8
  %1115 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1115) #13
  %1116 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %36, i32* nonnull dereferenceable(4) %20, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1146"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %5) #13
  %1117 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %1116, 0
  %1118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %1117, i64 2
  %1119 = bitcast %"struct.std::__1::__hash_node_base.254"* %1118 to %"struct.std::__1::pair"*
  %1120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1119, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1115) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1113) #13
  %1121 = load i32, i32* %1120, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #13
  ret i32 %1121

1122:                                             ; preds = %317
  %1123 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %320, i64 0, i32 0, i32 0
  %1124 = load i32*, i32** %1123, align 8
  %1125 = icmp eq i32* %1124, null
  br i1 %1125, label %1131, label %1126

1126:                                             ; preds = %1122
  %1127 = ptrtoint i32* %1124 to i64
  %1128 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %320, i64 0, i32 0, i32 1
  %1129 = bitcast i32** %1128 to i64*
  store i64 %1127, i64* %1129, align 8
  %1130 = bitcast i32* %1124 to i8*
  call void @_ZdlPv(i8* %1130) #12
  br label %1131

1131:                                             ; preds = %1126, %1122
  %1132 = bitcast %"class.std::__1::vector.3"* %320 to i8*
  call void @_ZdlPv(i8* %1132) #12
  br label %1133

1133:                                             ; preds = %1131, %317
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %153, align 8
  %1134 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 4, i32 0, i32 0, i32 0
  %1135 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %1134, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %1134, align 8
  %1136 = icmp eq %"class.std::__1::vector.3"* %1135, null
  br i1 %1136, label %333, label %322
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPKjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPjEEE4typeES8_SA_SA_(%"class.std::__1::vector.3"*, i32*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i32* %2 to i8*
  %6 = bitcast i32* %1 to i8*
  %7 = ptrtoint i32* %1 to i64
  %8 = ptrtoint i32* %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint i32* %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 2
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %706

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = load i32*, i32** %18, align 8
  %20 = ptrtoint i32* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 2
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast i32** %18 to i64*
  br i1 %23, label %339, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 2
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %196

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %2, i64 %27
  %31 = icmp eq i32* %30, %3
  br i1 %31, label %191, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr i32, i32* %3, i64 %33
  %35 = ptrtoint i32* %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 2
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 8
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr i32, i32* %3, i64 %41
  %43 = ptrtoint i32* %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 2
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr i32, i32* %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add i64 %48, 1
  %50 = getelementptr i32, i32* %2, i64 %49
  %51 = icmp ult i32* %19, %50
  %52 = icmp ult i32* %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 9223372036854775800
  %56 = getelementptr i32, i32* %19, i64 %55
  %57 = getelementptr i32, i32* %30, i64 %55
  %58 = add nsw i64 %55, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 24
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i32, i32* %19, i64 %66
  %69 = getelementptr i32, i32* %30, i64 %66
  %70 = bitcast i32* %69 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 4, !alias.scope !12
  %72 = getelementptr i32, i32* %69, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !alias.scope !12
  %75 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %75, align 4, !alias.scope !15, !noalias !12
  %76 = getelementptr i32, i32* %68, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %77, align 4, !alias.scope !15, !noalias !12
  %78 = or i64 %66, 8
  %79 = getelementptr i32, i32* %19, i64 %78
  %80 = getelementptr i32, i32* %30, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4, !alias.scope !12
  %83 = getelementptr i32, i32* %80, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !alias.scope !12
  %86 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %86, align 4, !alias.scope !15, !noalias !12
  %87 = getelementptr i32, i32* %79, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %88, align 4, !alias.scope !15, !noalias !12
  %89 = or i64 %66, 16
  %90 = getelementptr i32, i32* %19, i64 %89
  %91 = getelementptr i32, i32* %30, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 4, !alias.scope !12
  %94 = getelementptr i32, i32* %91, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  %96 = load <4 x i32>, <4 x i32>* %95, align 4, !alias.scope !12
  %97 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4, !alias.scope !15, !noalias !12
  %98 = getelementptr i32, i32* %90, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %99, align 4, !alias.scope !15, !noalias !12
  %100 = or i64 %66, 24
  %101 = getelementptr i32, i32* %19, i64 %100
  %102 = getelementptr i32, i32* %30, i64 %100
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !12
  %105 = getelementptr i32, i32* %102, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  %107 = load <4 x i32>, <4 x i32>* %106, align 4, !alias.scope !12
  %108 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4, !alias.scope !15, !noalias !12
  %109 = getelementptr i32, i32* %101, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %107, <4 x i32>* %110, align 4, !alias.scope !15, !noalias !12
  %111 = add i64 %66, 32
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !17

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i32, i32* %19, i64 %118
  %121 = getelementptr i32, i32* %30, i64 %118
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !12
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !12
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !15, !noalias !12
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !15, !noalias !12
  %130 = add i64 %118, 8
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !19

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi i32* [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi i32* [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint i32* %137 to i64
  %139 = getelementptr i32, i32* %3, i64 -1
  %140 = ptrtoint i32* %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 2
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %135, %146
  %147 = phi i32* [ %152, %146 ], [ %136, %135 ]
  %148 = phi i32* [ %151, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %153, %146 ], [ %144, %135 ]
  %150 = load i32, i32* %148, align 4
  store i32 %150, i32* %147, align 4
  %151 = getelementptr inbounds i32, i32* %148, i64 1
  %152 = getelementptr inbounds i32, i32* %147, i64 1
  %153 = add i64 %149, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %146, !llvm.loop !20

155:                                              ; preds = %146, %135
  %156 = phi i32* [ undef, %135 ], [ %152, %146 ]
  %157 = phi i32* [ %136, %135 ], [ %152, %146 ]
  %158 = phi i32* [ %137, %135 ], [ %151, %146 ]
  %159 = icmp ult i64 %141, 28
  br i1 %159, label %188, label %160

160:                                              ; preds = %155, %160
  %161 = phi i32* [ %186, %160 ], [ %157, %155 ]
  %162 = phi i32* [ %185, %160 ], [ %158, %155 ]
  %163 = load i32, i32* %162, align 4
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds i32, i32* %162, i64 1
  %165 = getelementptr inbounds i32, i32* %161, i64 1
  %166 = load i32, i32* %164, align 4
  store i32 %166, i32* %165, align 4
  %167 = getelementptr inbounds i32, i32* %162, i64 2
  %168 = getelementptr inbounds i32, i32* %161, i64 2
  %169 = load i32, i32* %167, align 4
  store i32 %169, i32* %168, align 4
  %170 = getelementptr inbounds i32, i32* %162, i64 3
  %171 = getelementptr inbounds i32, i32* %161, i64 3
  %172 = load i32, i32* %170, align 4
  store i32 %172, i32* %171, align 4
  %173 = getelementptr inbounds i32, i32* %162, i64 4
  %174 = getelementptr inbounds i32, i32* %161, i64 4
  %175 = load i32, i32* %173, align 4
  store i32 %175, i32* %174, align 4
  %176 = getelementptr inbounds i32, i32* %162, i64 5
  %177 = getelementptr inbounds i32, i32* %161, i64 5
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %177, align 4
  %179 = getelementptr inbounds i32, i32* %162, i64 6
  %180 = getelementptr inbounds i32, i32* %161, i64 6
  %181 = load i32, i32* %179, align 4
  store i32 %181, i32* %180, align 4
  %182 = getelementptr inbounds i32, i32* %162, i64 7
  %183 = getelementptr inbounds i32, i32* %161, i64 7
  %184 = load i32, i32* %182, align 4
  store i32 %184, i32* %183, align 4
  %185 = getelementptr inbounds i32, i32* %162, i64 8
  %186 = getelementptr inbounds i32, i32* %161, i64 8
  %187 = icmp eq i32* %185, %3
  br i1 %187, label %188, label %160, !llvm.loop !21

188:                                              ; preds = %155, %160, %133
  %189 = phi i32* [ %56, %133 ], [ %156, %155 ], [ %186, %160 ]
  %190 = ptrtoint i32* %189 to i64
  br label %191

191:                                              ; preds = %188, %29
  %192 = phi i64 [ %20, %29 ], [ %190, %188 ]
  store i64 %192, i64* %24, align 8
  %193 = icmp sgt i64 %26, 0
  br i1 %193, label %194, label %706

194:                                              ; preds = %191
  %195 = inttoptr i64 %192 to i32*
  br label %196

196:                                              ; preds = %194, %25
  %197 = phi i64 [ %192, %194 ], [ %20, %25 ]
  %198 = phi i32* [ %195, %194 ], [ %19, %25 ]
  %199 = phi i32* [ %30, %194 ], [ %3, %25 ]
  %200 = getelementptr inbounds i32, i32* %1, i64 %12
  %201 = ptrtoint i32* %200 to i64
  %202 = sub i64 %197, %201
  %203 = ashr exact i64 %202, 2
  %204 = getelementptr inbounds i32, i32* %1, i64 %203
  %205 = icmp ult i32* %204, %19
  br i1 %205, label %206, label %319

206:                                              ; preds = %196
  %207 = sub nsw i64 0, %203
  %208 = getelementptr i32, i32* %19, i64 %207
  %209 = bitcast i32* %208 to i8*
  %210 = xor i64 %7, -1
  %211 = getelementptr i8, i8* %209, i64 %210
  %212 = ptrtoint i8* %211 to i64
  %213 = lshr i64 %212, 2
  %214 = add nuw nsw i64 %213, 1
  %215 = icmp ult i64 %214, 8
  br i1 %215, label %216, label %219

216:                                              ; preds = %314, %219, %206
  %217 = phi i32* [ %198, %219 ], [ %198, %206 ], [ %237, %314 ]
  %218 = phi i32* [ %204, %219 ], [ %204, %206 ], [ %238, %314 ]
  br label %327

219:                                              ; preds = %206
  %220 = sub nsw i64 0, %203
  %221 = getelementptr i32, i32* %19, i64 %220
  %222 = bitcast i32* %221 to i8*
  %223 = xor i64 %7, -1
  %224 = getelementptr i8, i8* %222, i64 %223
  %225 = ptrtoint i8* %224 to i64
  %226 = lshr i64 %225, 2
  %227 = add nuw nsw i64 %226, 1
  %228 = getelementptr i32, i32* %198, i64 %227
  %229 = add nsw i64 %203, %226
  %230 = add i64 %229, 1
  %231 = getelementptr i32, i32* %1, i64 %230
  %232 = icmp ult i32* %198, %231
  %233 = icmp ult i32* %204, %228
  %234 = and i1 %232, %233
  br i1 %234, label %216, label %235

235:                                              ; preds = %219
  %236 = and i64 %214, 9223372036854775800
  %237 = getelementptr i32, i32* %198, i64 %236
  %238 = getelementptr i32, i32* %204, i64 %236
  %239 = add nsw i64 %236, -8
  %240 = lshr exact i64 %239, 3
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp ult i64 %239, 24
  br i1 %243, label %295, label %244

244:                                              ; preds = %235
  %245 = sub nsw i64 %241, %242
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ 0, %244 ], [ %292, %246 ]
  %248 = phi i64 [ %245, %244 ], [ %293, %246 ]
  %249 = getelementptr i32, i32* %198, i64 %247
  %250 = getelementptr i32, i32* %204, i64 %247
  %251 = bitcast i32* %250 to <4 x i32>*
  %252 = load <4 x i32>, <4 x i32>* %251, align 4, !alias.scope !22
  %253 = getelementptr i32, i32* %250, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  %255 = load <4 x i32>, <4 x i32>* %254, align 4, !alias.scope !22
  %256 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %252, <4 x i32>* %256, align 4, !alias.scope !25, !noalias !22
  %257 = getelementptr i32, i32* %249, i64 4
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %258, align 4, !alias.scope !25, !noalias !22
  %259 = or i64 %247, 8
  %260 = getelementptr i32, i32* %198, i64 %259
  %261 = getelementptr i32, i32* %204, i64 %259
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !22
  %264 = getelementptr i32, i32* %261, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4, !alias.scope !22
  %267 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %267, align 4, !alias.scope !25, !noalias !22
  %268 = getelementptr i32, i32* %260, i64 4
  %269 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %266, <4 x i32>* %269, align 4, !alias.scope !25, !noalias !22
  %270 = or i64 %247, 16
  %271 = getelementptr i32, i32* %198, i64 %270
  %272 = getelementptr i32, i32* %204, i64 %270
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !22
  %275 = getelementptr i32, i32* %272, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4, !alias.scope !22
  %278 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %278, align 4, !alias.scope !25, !noalias !22
  %279 = getelementptr i32, i32* %271, i64 4
  %280 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %280, align 4, !alias.scope !25, !noalias !22
  %281 = or i64 %247, 24
  %282 = getelementptr i32, i32* %198, i64 %281
  %283 = getelementptr i32, i32* %204, i64 %281
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !22
  %286 = getelementptr i32, i32* %283, i64 4
  %287 = bitcast i32* %286 to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 4, !alias.scope !22
  %289 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %289, align 4, !alias.scope !25, !noalias !22
  %290 = getelementptr i32, i32* %282, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %288, <4 x i32>* %291, align 4, !alias.scope !25, !noalias !22
  %292 = add i64 %247, 32
  %293 = add i64 %248, -4
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %246, !llvm.loop !27

295:                                              ; preds = %246, %235
  %296 = phi i64 [ 0, %235 ], [ %292, %246 ]
  %297 = icmp eq i64 %242, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %295, %298
  %299 = phi i64 [ %311, %298 ], [ %296, %295 ]
  %300 = phi i64 [ %312, %298 ], [ %242, %295 ]
  %301 = getelementptr i32, i32* %198, i64 %299
  %302 = getelementptr i32, i32* %204, i64 %299
  %303 = bitcast i32* %302 to <4 x i32>*
  %304 = load <4 x i32>, <4 x i32>* %303, align 4, !alias.scope !22
  %305 = getelementptr i32, i32* %302, i64 4
  %306 = bitcast i32* %305 to <4 x i32>*
  %307 = load <4 x i32>, <4 x i32>* %306, align 4, !alias.scope !22
  %308 = bitcast i32* %301 to <4 x i32>*
  store <4 x i32> %304, <4 x i32>* %308, align 4, !alias.scope !25, !noalias !22
  %309 = getelementptr i32, i32* %301, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %307, <4 x i32>* %310, align 4, !alias.scope !25, !noalias !22
  %311 = add i64 %299, 8
  %312 = add i64 %300, -1
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %298, !llvm.loop !28

314:                                              ; preds = %298, %295
  %315 = icmp eq i64 %214, %236
  br i1 %315, label %316, label %216

316:                                              ; preds = %327, %314
  %317 = phi i32* [ %237, %314 ], [ %332, %327 ]
  %318 = ptrtoint i32* %317 to i64
  br label %319

319:                                              ; preds = %316, %196
  %320 = phi i64 [ %318, %316 ], [ %197, %196 ]
  store i64 %320, i64* %24, align 8
  %321 = icmp eq i64 %202, 0
  br i1 %321, label %334, label %322

322:                                              ; preds = %319
  %323 = sub nsw i64 0, %203
  %324 = getelementptr inbounds i32, i32* %198, i64 %323
  %325 = bitcast i32* %324 to i8*
  %326 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %325, i8* align 4 %326, i64 %202, i1 false) #13
  br label %334

327:                                              ; preds = %216, %327
  %328 = phi i32* [ %332, %327 ], [ %217, %216 ]
  %329 = phi i32* [ %331, %327 ], [ %218, %216 ]
  %330 = load i32, i32* %329, align 4
  store i32 %330, i32* %328, align 4
  %331 = getelementptr inbounds i32, i32* %329, i64 1
  %332 = getelementptr inbounds i32, i32* %328, i64 1
  %333 = icmp ult i32* %331, %19
  br i1 %333, label %327, label %316, !llvm.loop !29

334:                                              ; preds = %319, %322
  %335 = ptrtoint i32* %199 to i64
  %336 = sub i64 %335, %8
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %706, label %338

338:                                              ; preds = %334
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %5, i64 %336, i1 false) #13
  br label %706

339:                                              ; preds = %14
  %340 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = sub i64 %20, %341
  %343 = ashr exact i64 %342, 2
  %344 = add nsw i64 %343, %12
  %345 = icmp ugt i64 %344, 4611686018427387903
  br i1 %345, label %346, label %348

346:                                              ; preds = %339
  %347 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %347) #14
  unreachable

348:                                              ; preds = %339
  %349 = sub i64 %17, %341
  %350 = ashr exact i64 %349, 2
  %351 = icmp ult i64 %350, 2305843009213693951
  br i1 %351, label %355, label %352

352:                                              ; preds = %348
  %353 = sub i64 %7, %341
  %354 = ashr exact i64 %353, 2
  br label %365

355:                                              ; preds = %348
  %356 = ashr exact i64 %349, 1
  %357 = icmp ult i64 %356, %344
  %358 = select i1 %357, i64 %344, i64 %356
  %359 = sub i64 %7, %341
  %360 = ashr exact i64 %359, 2
  %361 = icmp eq i64 %358, 0
  br i1 %361, label %371, label %362

362:                                              ; preds = %355
  %363 = icmp ugt i64 %358, 4611686018427387903
  br i1 %363, label %364, label %365

364:                                              ; preds = %362
  tail call void @abort() #14
  unreachable

365:                                              ; preds = %352, %362
  %366 = phi i64 [ 4611686018427387903, %352 ], [ %358, %362 ]
  %367 = phi i64 [ %354, %352 ], [ %360, %362 ]
  %368 = shl i64 %366, 2
  %369 = tail call i8* @_Znwm(i64 %368) #12
  %370 = bitcast i8* %369 to i32*
  br label %371

371:                                              ; preds = %365, %355
  %372 = phi i64 [ %367, %365 ], [ %360, %355 ]
  %373 = phi i64 [ %366, %365 ], [ 0, %355 ]
  %374 = phi i32* [ %370, %365 ], [ null, %355 ]
  %375 = getelementptr inbounds i32, i32* %374, i64 %372
  %376 = getelementptr inbounds i32, i32* %374, i64 %373
  %377 = ptrtoint i32* %376 to i64
  %378 = getelementptr inbounds i32, i32* %375, i64 %12
  %379 = add i64 %11, -4
  %380 = lshr i64 %379, 2
  %381 = add nuw nsw i64 %380, 1
  %382 = icmp ult i64 %381, 8
  br i1 %382, label %475, label %383

383:                                              ; preds = %371
  %384 = add i64 %11, -4
  %385 = lshr i64 %384, 2
  %386 = add nsw i64 %372, %385
  %387 = add i64 %386, 1
  %388 = getelementptr i32, i32* %374, i64 %387
  %389 = add nuw nsw i64 %385, 1
  %390 = getelementptr i32, i32* %2, i64 %389
  %391 = icmp ult i32* %375, %390
  %392 = icmp ugt i32* %388, %2
  %393 = and i1 %391, %392
  br i1 %393, label %475, label %394

394:                                              ; preds = %383
  %395 = and i64 %381, 9223372036854775800
  %396 = getelementptr i32, i32* %375, i64 %395
  %397 = getelementptr i32, i32* %2, i64 %395
  %398 = add nsw i64 %395, -8
  %399 = lshr exact i64 %398, 3
  %400 = add nuw nsw i64 %399, 1
  %401 = and i64 %400, 3
  %402 = icmp ult i64 %398, 24
  br i1 %402, label %454, label %403

403:                                              ; preds = %394
  %404 = sub nsw i64 %400, %401
  br label %405

405:                                              ; preds = %405, %403
  %406 = phi i64 [ 0, %403 ], [ %451, %405 ]
  %407 = phi i64 [ %404, %403 ], [ %452, %405 ]
  %408 = getelementptr i32, i32* %375, i64 %406
  %409 = getelementptr i32, i32* %2, i64 %406
  %410 = bitcast i32* %409 to <4 x i32>*
  %411 = load <4 x i32>, <4 x i32>* %410, align 4, !alias.scope !30
  %412 = getelementptr i32, i32* %409, i64 4
  %413 = bitcast i32* %412 to <4 x i32>*
  %414 = load <4 x i32>, <4 x i32>* %413, align 4, !alias.scope !30
  %415 = bitcast i32* %408 to <4 x i32>*
  store <4 x i32> %411, <4 x i32>* %415, align 4, !alias.scope !33, !noalias !30
  %416 = getelementptr i32, i32* %408, i64 4
  %417 = bitcast i32* %416 to <4 x i32>*
  store <4 x i32> %414, <4 x i32>* %417, align 4, !alias.scope !33, !noalias !30
  %418 = or i64 %406, 8
  %419 = getelementptr i32, i32* %375, i64 %418
  %420 = getelementptr i32, i32* %2, i64 %418
  %421 = bitcast i32* %420 to <4 x i32>*
  %422 = load <4 x i32>, <4 x i32>* %421, align 4, !alias.scope !30
  %423 = getelementptr i32, i32* %420, i64 4
  %424 = bitcast i32* %423 to <4 x i32>*
  %425 = load <4 x i32>, <4 x i32>* %424, align 4, !alias.scope !30
  %426 = bitcast i32* %419 to <4 x i32>*
  store <4 x i32> %422, <4 x i32>* %426, align 4, !alias.scope !33, !noalias !30
  %427 = getelementptr i32, i32* %419, i64 4
  %428 = bitcast i32* %427 to <4 x i32>*
  store <4 x i32> %425, <4 x i32>* %428, align 4, !alias.scope !33, !noalias !30
  %429 = or i64 %406, 16
  %430 = getelementptr i32, i32* %375, i64 %429
  %431 = getelementptr i32, i32* %2, i64 %429
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4, !alias.scope !30
  %434 = getelementptr i32, i32* %431, i64 4
  %435 = bitcast i32* %434 to <4 x i32>*
  %436 = load <4 x i32>, <4 x i32>* %435, align 4, !alias.scope !30
  %437 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> %433, <4 x i32>* %437, align 4, !alias.scope !33, !noalias !30
  %438 = getelementptr i32, i32* %430, i64 4
  %439 = bitcast i32* %438 to <4 x i32>*
  store <4 x i32> %436, <4 x i32>* %439, align 4, !alias.scope !33, !noalias !30
  %440 = or i64 %406, 24
  %441 = getelementptr i32, i32* %375, i64 %440
  %442 = getelementptr i32, i32* %2, i64 %440
  %443 = bitcast i32* %442 to <4 x i32>*
  %444 = load <4 x i32>, <4 x i32>* %443, align 4, !alias.scope !30
  %445 = getelementptr i32, i32* %442, i64 4
  %446 = bitcast i32* %445 to <4 x i32>*
  %447 = load <4 x i32>, <4 x i32>* %446, align 4, !alias.scope !30
  %448 = bitcast i32* %441 to <4 x i32>*
  store <4 x i32> %444, <4 x i32>* %448, align 4, !alias.scope !33, !noalias !30
  %449 = getelementptr i32, i32* %441, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  store <4 x i32> %447, <4 x i32>* %450, align 4, !alias.scope !33, !noalias !30
  %451 = add i64 %406, 32
  %452 = add i64 %407, -4
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %454, label %405, !llvm.loop !35

454:                                              ; preds = %405, %394
  %455 = phi i64 [ 0, %394 ], [ %451, %405 ]
  %456 = icmp eq i64 %401, 0
  br i1 %456, label %473, label %457

457:                                              ; preds = %454, %457
  %458 = phi i64 [ %470, %457 ], [ %455, %454 ]
  %459 = phi i64 [ %471, %457 ], [ %401, %454 ]
  %460 = getelementptr i32, i32* %375, i64 %458
  %461 = getelementptr i32, i32* %2, i64 %458
  %462 = bitcast i32* %461 to <4 x i32>*
  %463 = load <4 x i32>, <4 x i32>* %462, align 4, !alias.scope !30
  %464 = getelementptr i32, i32* %461, i64 4
  %465 = bitcast i32* %464 to <4 x i32>*
  %466 = load <4 x i32>, <4 x i32>* %465, align 4, !alias.scope !30
  %467 = bitcast i32* %460 to <4 x i32>*
  store <4 x i32> %463, <4 x i32>* %467, align 4, !alias.scope !33, !noalias !30
  %468 = getelementptr i32, i32* %460, i64 4
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> %466, <4 x i32>* %469, align 4, !alias.scope !33, !noalias !30
  %470 = add i64 %458, 8
  %471 = add i64 %459, -1
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %457, !llvm.loop !36

473:                                              ; preds = %457, %454
  %474 = icmp eq i64 %381, %395
  br i1 %474, label %529, label %475

475:                                              ; preds = %473, %383, %371
  %476 = phi i32* [ %375, %383 ], [ %375, %371 ], [ %396, %473 ]
  %477 = phi i32* [ %2, %383 ], [ %2, %371 ], [ %397, %473 ]
  %478 = ptrtoint i32* %476 to i64
  %479 = add nsw i64 %372, %12
  %480 = add nsw i64 %479, -1
  %481 = getelementptr i32, i32* %374, i64 %480
  %482 = ptrtoint i32* %481 to i64
  %483 = sub i64 %482, %478
  %484 = lshr i64 %483, 2
  %485 = add nuw nsw i64 %484, 1
  %486 = and i64 %485, 7
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %497, label %488

488:                                              ; preds = %475, %488
  %489 = phi i32* [ %493, %488 ], [ %476, %475 ]
  %490 = phi i32* [ %494, %488 ], [ %477, %475 ]
  %491 = phi i64 [ %495, %488 ], [ %486, %475 ]
  %492 = load i32, i32* %490, align 4
  store i32 %492, i32* %489, align 4
  %493 = getelementptr inbounds i32, i32* %489, i64 1
  %494 = getelementptr inbounds i32, i32* %490, i64 1
  %495 = add i64 %491, -1
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %497, label %488, !llvm.loop !37

497:                                              ; preds = %488, %475
  %498 = phi i32* [ %476, %475 ], [ %493, %488 ]
  %499 = phi i32* [ %477, %475 ], [ %494, %488 ]
  %500 = icmp ult i64 %483, 28
  br i1 %500, label %529, label %501

501:                                              ; preds = %497, %501
  %502 = phi i32* [ %526, %501 ], [ %498, %497 ]
  %503 = phi i32* [ %527, %501 ], [ %499, %497 ]
  %504 = load i32, i32* %503, align 4
  store i32 %504, i32* %502, align 4
  %505 = getelementptr inbounds i32, i32* %502, i64 1
  %506 = getelementptr inbounds i32, i32* %503, i64 1
  %507 = load i32, i32* %506, align 4
  store i32 %507, i32* %505, align 4
  %508 = getelementptr inbounds i32, i32* %502, i64 2
  %509 = getelementptr inbounds i32, i32* %503, i64 2
  %510 = load i32, i32* %509, align 4
  store i32 %510, i32* %508, align 4
  %511 = getelementptr inbounds i32, i32* %502, i64 3
  %512 = getelementptr inbounds i32, i32* %503, i64 3
  %513 = load i32, i32* %512, align 4
  store i32 %513, i32* %511, align 4
  %514 = getelementptr inbounds i32, i32* %502, i64 4
  %515 = getelementptr inbounds i32, i32* %503, i64 4
  %516 = load i32, i32* %515, align 4
  store i32 %516, i32* %514, align 4
  %517 = getelementptr inbounds i32, i32* %502, i64 5
  %518 = getelementptr inbounds i32, i32* %503, i64 5
  %519 = load i32, i32* %518, align 4
  store i32 %519, i32* %517, align 4
  %520 = getelementptr inbounds i32, i32* %502, i64 6
  %521 = getelementptr inbounds i32, i32* %503, i64 6
  %522 = load i32, i32* %521, align 4
  store i32 %522, i32* %520, align 4
  %523 = getelementptr inbounds i32, i32* %502, i64 7
  %524 = getelementptr inbounds i32, i32* %503, i64 7
  %525 = load i32, i32* %524, align 4
  store i32 %525, i32* %523, align 4
  %526 = getelementptr inbounds i32, i32* %502, i64 8
  %527 = getelementptr inbounds i32, i32* %503, i64 8
  %528 = icmp eq i32* %378, %526
  br i1 %528, label %529, label %501, !llvm.loop !38

529:                                              ; preds = %497, %501, %473
  %530 = load i32*, i32** %9, align 8
  %531 = ptrtoint i32* %530 to i64
  %532 = sub i64 %7, %531
  %533 = ashr exact i64 %532, 2
  %534 = sub nsw i64 0, %533
  %535 = getelementptr inbounds i32, i32* %375, i64 %534
  %536 = ptrtoint i32* %535 to i64
  %537 = icmp sgt i64 %532, 0
  br i1 %537, label %538, label %541

538:                                              ; preds = %529
  %539 = bitcast i32* %535 to i8*
  %540 = bitcast i32* %530 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %539, i8* align 4 %540, i64 %532, i1 false) #13
  br label %541

541:                                              ; preds = %538, %529
  %542 = load i32*, i32** %18, align 8
  %543 = icmp eq i32* %542, %1
  br i1 %543, label %699, label %544

544:                                              ; preds = %541
  %545 = getelementptr i32, i32* %542, i64 -1
  %546 = ptrtoint i32* %545 to i64
  %547 = sub i64 %546, %7
  %548 = lshr i64 %547, 2
  %549 = add nuw nsw i64 %548, 1
  %550 = icmp ult i64 %549, 8
  br i1 %550, label %646, label %551

551:                                              ; preds = %544
  %552 = add nsw i64 %372, %12
  %553 = getelementptr i32, i32* %542, i64 -1
  %554 = ptrtoint i32* %553 to i64
  %555 = sub i64 %554, %7
  %556 = lshr i64 %555, 2
  %557 = add nsw i64 %552, %556
  %558 = add i64 %557, 1
  %559 = getelementptr i32, i32* %374, i64 %558
  %560 = add nuw nsw i64 %556, 1
  %561 = getelementptr i32, i32* %1, i64 %560
  %562 = icmp ult i32* %378, %561
  %563 = icmp ugt i32* %559, %1
  %564 = and i1 %562, %563
  br i1 %564, label %646, label %565

565:                                              ; preds = %551
  %566 = and i64 %549, 9223372036854775800
  %567 = getelementptr i32, i32* %378, i64 %566
  %568 = getelementptr i32, i32* %1, i64 %566
  %569 = add nsw i64 %566, -8
  %570 = lshr exact i64 %569, 3
  %571 = add nuw nsw i64 %570, 1
  %572 = and i64 %571, 3
  %573 = icmp ult i64 %569, 24
  br i1 %573, label %625, label %574

574:                                              ; preds = %565
  %575 = sub nsw i64 %571, %572
  br label %576

576:                                              ; preds = %576, %574
  %577 = phi i64 [ 0, %574 ], [ %622, %576 ]
  %578 = phi i64 [ %575, %574 ], [ %623, %576 ]
  %579 = getelementptr i32, i32* %378, i64 %577
  %580 = getelementptr i32, i32* %1, i64 %577
  %581 = bitcast i32* %580 to <4 x i32>*
  %582 = load <4 x i32>, <4 x i32>* %581, align 4, !alias.scope !39
  %583 = getelementptr i32, i32* %580, i64 4
  %584 = bitcast i32* %583 to <4 x i32>*
  %585 = load <4 x i32>, <4 x i32>* %584, align 4, !alias.scope !39
  %586 = bitcast i32* %579 to <4 x i32>*
  store <4 x i32> %582, <4 x i32>* %586, align 4, !alias.scope !42, !noalias !39
  %587 = getelementptr i32, i32* %579, i64 4
  %588 = bitcast i32* %587 to <4 x i32>*
  store <4 x i32> %585, <4 x i32>* %588, align 4, !alias.scope !42, !noalias !39
  %589 = or i64 %577, 8
  %590 = getelementptr i32, i32* %378, i64 %589
  %591 = getelementptr i32, i32* %1, i64 %589
  %592 = bitcast i32* %591 to <4 x i32>*
  %593 = load <4 x i32>, <4 x i32>* %592, align 4, !alias.scope !39
  %594 = getelementptr i32, i32* %591, i64 4
  %595 = bitcast i32* %594 to <4 x i32>*
  %596 = load <4 x i32>, <4 x i32>* %595, align 4, !alias.scope !39
  %597 = bitcast i32* %590 to <4 x i32>*
  store <4 x i32> %593, <4 x i32>* %597, align 4, !alias.scope !42, !noalias !39
  %598 = getelementptr i32, i32* %590, i64 4
  %599 = bitcast i32* %598 to <4 x i32>*
  store <4 x i32> %596, <4 x i32>* %599, align 4, !alias.scope !42, !noalias !39
  %600 = or i64 %577, 16
  %601 = getelementptr i32, i32* %378, i64 %600
  %602 = getelementptr i32, i32* %1, i64 %600
  %603 = bitcast i32* %602 to <4 x i32>*
  %604 = load <4 x i32>, <4 x i32>* %603, align 4, !alias.scope !39
  %605 = getelementptr i32, i32* %602, i64 4
  %606 = bitcast i32* %605 to <4 x i32>*
  %607 = load <4 x i32>, <4 x i32>* %606, align 4, !alias.scope !39
  %608 = bitcast i32* %601 to <4 x i32>*
  store <4 x i32> %604, <4 x i32>* %608, align 4, !alias.scope !42, !noalias !39
  %609 = getelementptr i32, i32* %601, i64 4
  %610 = bitcast i32* %609 to <4 x i32>*
  store <4 x i32> %607, <4 x i32>* %610, align 4, !alias.scope !42, !noalias !39
  %611 = or i64 %577, 24
  %612 = getelementptr i32, i32* %378, i64 %611
  %613 = getelementptr i32, i32* %1, i64 %611
  %614 = bitcast i32* %613 to <4 x i32>*
  %615 = load <4 x i32>, <4 x i32>* %614, align 4, !alias.scope !39
  %616 = getelementptr i32, i32* %613, i64 4
  %617 = bitcast i32* %616 to <4 x i32>*
  %618 = load <4 x i32>, <4 x i32>* %617, align 4, !alias.scope !39
  %619 = bitcast i32* %612 to <4 x i32>*
  store <4 x i32> %615, <4 x i32>* %619, align 4, !alias.scope !42, !noalias !39
  %620 = getelementptr i32, i32* %612, i64 4
  %621 = bitcast i32* %620 to <4 x i32>*
  store <4 x i32> %618, <4 x i32>* %621, align 4, !alias.scope !42, !noalias !39
  %622 = add i64 %577, 32
  %623 = add i64 %578, -4
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %625, label %576, !llvm.loop !44

625:                                              ; preds = %576, %565
  %626 = phi i64 [ 0, %565 ], [ %622, %576 ]
  %627 = icmp eq i64 %572, 0
  br i1 %627, label %644, label %628

628:                                              ; preds = %625, %628
  %629 = phi i64 [ %641, %628 ], [ %626, %625 ]
  %630 = phi i64 [ %642, %628 ], [ %572, %625 ]
  %631 = getelementptr i32, i32* %378, i64 %629
  %632 = getelementptr i32, i32* %1, i64 %629
  %633 = bitcast i32* %632 to <4 x i32>*
  %634 = load <4 x i32>, <4 x i32>* %633, align 4, !alias.scope !39
  %635 = getelementptr i32, i32* %632, i64 4
  %636 = bitcast i32* %635 to <4 x i32>*
  %637 = load <4 x i32>, <4 x i32>* %636, align 4, !alias.scope !39
  %638 = bitcast i32* %631 to <4 x i32>*
  store <4 x i32> %634, <4 x i32>* %638, align 4, !alias.scope !42, !noalias !39
  %639 = getelementptr i32, i32* %631, i64 4
  %640 = bitcast i32* %639 to <4 x i32>*
  store <4 x i32> %637, <4 x i32>* %640, align 4, !alias.scope !42, !noalias !39
  %641 = add i64 %629, 8
  %642 = add i64 %630, -1
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %644, label %628, !llvm.loop !45

644:                                              ; preds = %628, %625
  %645 = icmp eq i64 %549, %566
  br i1 %645, label %699, label %646

646:                                              ; preds = %644, %551, %544
  %647 = phi i32* [ %378, %551 ], [ %378, %544 ], [ %567, %644 ]
  %648 = phi i32* [ %1, %551 ], [ %1, %544 ], [ %568, %644 ]
  %649 = ptrtoint i32* %648 to i64
  %650 = getelementptr i32, i32* %542, i64 -1
  %651 = ptrtoint i32* %650 to i64
  %652 = sub i64 %651, %649
  %653 = lshr i64 %652, 2
  %654 = add nuw nsw i64 %653, 1
  %655 = and i64 %654, 7
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %666, label %657

657:                                              ; preds = %646, %657
  %658 = phi i32* [ %663, %657 ], [ %647, %646 ]
  %659 = phi i32* [ %662, %657 ], [ %648, %646 ]
  %660 = phi i64 [ %664, %657 ], [ %655, %646 ]
  %661 = load i32, i32* %659, align 4
  store i32 %661, i32* %658, align 4
  %662 = getelementptr inbounds i32, i32* %659, i64 1
  %663 = getelementptr inbounds i32, i32* %658, i64 1
  %664 = add i64 %660, -1
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %666, label %657, !llvm.loop !46

666:                                              ; preds = %657, %646
  %667 = phi i32* [ undef, %646 ], [ %663, %657 ]
  %668 = phi i32* [ %647, %646 ], [ %663, %657 ]
  %669 = phi i32* [ %648, %646 ], [ %662, %657 ]
  %670 = icmp ult i64 %652, 28
  br i1 %670, label %699, label %671

671:                                              ; preds = %666, %671
  %672 = phi i32* [ %697, %671 ], [ %668, %666 ]
  %673 = phi i32* [ %696, %671 ], [ %669, %666 ]
  %674 = load i32, i32* %673, align 4
  store i32 %674, i32* %672, align 4
  %675 = getelementptr inbounds i32, i32* %673, i64 1
  %676 = getelementptr inbounds i32, i32* %672, i64 1
  %677 = load i32, i32* %675, align 4
  store i32 %677, i32* %676, align 4
  %678 = getelementptr inbounds i32, i32* %673, i64 2
  %679 = getelementptr inbounds i32, i32* %672, i64 2
  %680 = load i32, i32* %678, align 4
  store i32 %680, i32* %679, align 4
  %681 = getelementptr inbounds i32, i32* %673, i64 3
  %682 = getelementptr inbounds i32, i32* %672, i64 3
  %683 = load i32, i32* %681, align 4
  store i32 %683, i32* %682, align 4
  %684 = getelementptr inbounds i32, i32* %673, i64 4
  %685 = getelementptr inbounds i32, i32* %672, i64 4
  %686 = load i32, i32* %684, align 4
  store i32 %686, i32* %685, align 4
  %687 = getelementptr inbounds i32, i32* %673, i64 5
  %688 = getelementptr inbounds i32, i32* %672, i64 5
  %689 = load i32, i32* %687, align 4
  store i32 %689, i32* %688, align 4
  %690 = getelementptr inbounds i32, i32* %673, i64 6
  %691 = getelementptr inbounds i32, i32* %672, i64 6
  %692 = load i32, i32* %690, align 4
  store i32 %692, i32* %691, align 4
  %693 = getelementptr inbounds i32, i32* %673, i64 7
  %694 = getelementptr inbounds i32, i32* %672, i64 7
  %695 = load i32, i32* %693, align 4
  store i32 %695, i32* %694, align 4
  %696 = getelementptr inbounds i32, i32* %673, i64 8
  %697 = getelementptr inbounds i32, i32* %672, i64 8
  %698 = icmp eq i32* %696, %542
  br i1 %698, label %699, label %671, !llvm.loop !47

699:                                              ; preds = %666, %671, %644, %541
  %700 = phi i32* [ %378, %541 ], [ %567, %644 ], [ %667, %666 ], [ %697, %671 ]
  %701 = ptrtoint i32* %700 to i64
  %702 = load i32*, i32** %9, align 8
  store i64 %536, i64* %340, align 8
  store i64 %701, i64* %24, align 8
  store i64 %377, i64* %16, align 8
  %703 = icmp eq i32* %702, null
  br i1 %703, label %706, label %704

704:                                              ; preds = %699
  %705 = bitcast i32* %702 to i8*
  tail call void @_ZdlPv(i8* %705) #12
  br label %706

706:                                              ; preds = %704, %699, %191, %334, %338, %4
  %707 = phi i32* [ %1, %4 ], [ %1, %338 ], [ %1, %334 ], [ %1, %191 ], [ %375, %699 ], [ %375, %704 ]
  ret i32* %707
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, %"class.std::__1::vector.3"* dereferenceable(24), i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"struct.spvtools::opt::Operand", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.std::__1::unique_ptr.21", align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #13
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.3"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %44, label %20

20:                                               ; preds = %5
  %21 = bitcast %"struct.spvtools::opt::Operand"* %7 to i8*
  %22 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  %24 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %27 = bitcast i32** %25 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.0"* %28 to i64*
  %30 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %26 to i32*
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1
  %33 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 1
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 2
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 3, i64 0
  %37 = bitcast i32** %35 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4
  %39 = bitcast %"class.std::__1::unique_ptr.0"* %38 to i64*
  %40 = bitcast %"struct.spvtools::opt::Operand"** %12 to i64*
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %52

44:                                               ; preds = %105, %5
  %45 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #13
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %46, align 8
  %47 = call i8* @_Znwm(i64 112) #12
  %48 = bitcast i8* %47 to %"class.spvtools::opt::Instruction"*
  %49 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %50 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %49, align 8
  %51 = icmp eq i32 %4, 0
  br i1 %51, label %112, label %129

52:                                               ; preds = %20, %105
  %53 = phi i64 [ %18, %20 ], [ %108, %105 ]
  %54 = phi i64 [ 0, %20 ], [ %106, %105 ]
  %55 = inttoptr i64 %53 to i32*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #13
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #13
  %56 = getelementptr inbounds i32, i32* %55, i64 %54
  %57 = load i32, i32* %56, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %26, %"struct.std::__1::aligned_storage<4, 4>::type"** %27, align 8
  store i64 0, i64* %29, align 8
  store i64 1, i64* %24, align 8
  store i32 %57, i32* %30, align 8
  store i32 1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  store i64 0, i64* %34, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %36, %"struct.std::__1::aligned_storage<4, 4>::type"** %37, align 8
  store i64 0, i64* %39, align 8
  %58 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %32, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #13
  %59 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %60 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %61 = icmp ult %"struct.spvtools::opt::Operand"* %59, %60
  br i1 %61, label %62, label %76

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 0
  %64 = load i32, i32* %31, align 8
  store i32 %64, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 1
  store i64 0, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 2
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 3, i64 0
  %70 = bitcast i32** %68 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %69, %"struct.std::__1::aligned_storage<4, 4>::type"** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 4
  %72 = bitcast %"class.std::__1::unique_ptr.0"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %32) #13
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 1
  %75 = ptrtoint %"struct.spvtools::opt::Operand"* %74 to i64
  store i64 %75, i64* %40, align 8
  br label %77

76:                                               ; preds = %52
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %6, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %7) #13
  br label %77

77:                                               ; preds = %62, %76
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %78 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %42, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %42, align 8
  %79 = icmp eq %"class.std::__1::vector.3"* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %78, i64 0, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = icmp eq i32* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint i32* %82 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %78, i64 0, i32 0, i32 1
  %87 = bitcast i32** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast i32* %82 to i8*
  call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %84, %80
  %90 = bitcast %"class.std::__1::vector.3"* %78 to i8*
  call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %77, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %43, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %43, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %91, %103
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #13
  %106 = add nuw i64 %54, 1
  %107 = load i64, i64* %15, align 8
  %108 = load i64, i64* %17, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 2
  %111 = icmp ult i64 %106, %110
  br i1 %111, label %52, label %44

112:                                              ; preds = %44
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %113, align 8
  %115 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %114) #13
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %129

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 2
  %119 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %119, i64 0, i32 2
  %121 = load i8, i8* %120, align 8, !range !6
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %129

123:                                              ; preds = %117
  %124 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %124, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %125 = getelementptr inbounds i8, i8* %124, i64 37
  store i8 0, i8* %125, align 1
  %126 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 1, i32 0
  %127 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %126, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 0
  call void %127(%"union.std::__1::__function::__policy_storage"* %128, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %124) #13
  call void @_ZdlPv(i8* nonnull %124) #12
  br label %129

129:                                              ; preds = %123, %117, %112, %44
  %130 = phi i32 [ %4, %44 ], [ %115, %112 ], [ 0, %117 ], [ 0, %123 ]
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %48, %"class.spvtools::opt::IRContext"* %50, i32 %2, i32 %1, i32 %130, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #13
  %131 = ptrtoint i8* %47 to i64
  %132 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i64*
  store i64 %131, i64* %132, align 8
  %133 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %9)
  %134 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %46, align 8
  %135 = icmp eq %"class.spvtools::opt::Instruction"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %129
  %137 = bitcast %"class.spvtools::opt::Instruction"* %134 to void (%"class.spvtools::opt::Instruction"*)***
  %138 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %138, i64 1
  %140 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %139, align 8
  call void %140(%"class.spvtools::opt::Instruction"* nonnull %134) #13
  br label %141

141:                                              ; preds = %129, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  %142 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %11, align 8
  %143 = icmp eq %"struct.spvtools::opt::Operand"* %142, null
  br i1 %143, label %173, label %144

144:                                              ; preds = %141
  %145 = bitcast %"struct.spvtools::opt::Operand"* %142 to i8*
  %146 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %146, %142
  br i1 %147, label %171, label %148

148:                                              ; preds = %144, %166
  %149 = phi %"struct.spvtools::opt::Operand"* [ %150, %166 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1
  %151 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %152, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %152, align 8
  %154 = icmp eq %"class.std::__1::vector.3"* %153, null
  br i1 %154, label %166, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = icmp eq i32* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i32* %157 to i64
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 1
  %162 = bitcast i32** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast i32* %157 to i8*
  call void @_ZdlPv(i8* %163) #12
  br label %164

164:                                              ; preds = %159, %155
  %165 = bitcast %"class.std::__1::vector.3"* %153 to i8*
  call void @_ZdlPv(i8* %165) #12
  br label %166

166:                                              ; preds = %164, %148
  %167 = icmp eq %"struct.spvtools::opt::Operand"* %150, %142
  br i1 %167, label %168, label %148

168:                                              ; preds = %166
  %169 = bitcast %"class.std::__1::vector"* %6 to i8**
  %170 = load i8*, i8** %169, align 8
  br label %171

171:                                              ; preds = %168, %144
  %172 = phi i8* [ %170, %168 ], [ %145, %144 ]
  store %"struct.spvtools::opt::Operand"* %142, %"struct.spvtools::opt::Operand"** %12, align 8
  call void @_ZdlPv(i8* %172) #12
  br label %173

173:                                              ; preds = %141, %171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  ret %"class.spvtools::opt::Instruction"* %133
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass9GetVoidIdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::analysis::Void", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 23
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %67

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = trunc i32 %10 to i16
  %12 = icmp slt i16 %11, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 5
  %15 = tail call i8* @_Znwm(i64 240) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %16, %"class.std::__1::function"* dereferenceable(32) %14, %"class.spvtools::opt::IRContext"* %8) #13
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.480"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %20) #13
  %24 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %13
  %26 = load i32, i32* %9, align 8
  %27 = or i32 %26, 32768
  store i32 %27, i32* %9, align 8
  br label %28

28:                                               ; preds = %6, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %29, align 8
  %31 = bitcast %"class.spvtools::opt::analysis::Void"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 40, i1 false)
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::Void", %"class.spvtools::opt::analysis::Void"* %2, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.spvtools::opt::analysis::Void", %"class.spvtools::opt::analysis::Void"* %2, i64 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::vector.463"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 28, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4VoidE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %35 = bitcast %"class.spvtools::opt::analysis::Void"* %2 to %"class.spvtools::opt::analysis::Type"*
  %36 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* nonnull %35) #13
  %37 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* %36) #13
  store i32 %37, i32* %3, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %33, i64 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %65, label %41

41:                                               ; preds = %28
  %42 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  %43 = getelementptr inbounds %"class.spvtools::opt::analysis::Void", %"class.spvtools::opt::analysis::Void"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %44 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %43, align 8
  %45 = icmp eq %"class.std::__1::vector.3"* %44, %39
  br i1 %45, label %62, label %46

46:                                               ; preds = %41, %57
  %47 = phi %"class.std::__1::vector.3"* [ %48, %57 ], [ %44, %41 ]
  %48 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %47, i64 -1
  %49 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %48, i64 0, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = icmp eq i32* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %46
  %53 = ptrtoint i32* %50 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %47, i64 -1, i32 0, i32 1
  %55 = bitcast i32** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = bitcast i32* %50 to i8*
  call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %52, %46
  %58 = icmp eq %"class.std::__1::vector.3"* %48, %39
  br i1 %58, label %59, label %46

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::vector.463"* %33 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %41
  %63 = phi i8* [ %61, %59 ], [ %42, %41 ]
  store %"class.std::__1::vector.3"* %39, %"class.std::__1::vector.3"** %43, align 8
  call void @_ZdlPv(i8* %63) #12
  %64 = load i32, i32* %3, align 4
  br label %65

65:                                               ; preds = %28, %62
  %66 = phi i32 [ %37, %28 ], [ %64, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #13
  br label %67

67:                                               ; preds = %65, %1
  %68 = phi i32 [ %66, %65 ], [ %4, %1 ]
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt14InstrumentPass11AllConstantERKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::opt::InstrumentPass"* nocapture readonly, %"class.std::__1::vector.3"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1, i64 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1, i64 0, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  br i1 %7, label %53, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  br label %12

10:                                               ; preds = %43
  %11 = icmp eq i32* %52, %6
  br i1 %11, label %53, label %12

12:                                               ; preds = %8, %10
  %13 = phi i32* [ %4, %8 ], [ %52, %10 ]
  %14 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 11
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %43

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %21 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %20, align 8
  %22 = tail call i8* @_Znwm(i64 104) #12
  %23 = bitcast i8* %22 to %"class.spvtools::opt::analysis::DefUseManager"*
  %24 = getelementptr inbounds i8, i8* %22, i64 32
  %25 = bitcast i8* %24 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %22, i64 48
  %27 = getelementptr inbounds i8, i8* %22, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %28 = bitcast i8* %27 to i8**
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %22, i64 64
  %30 = getelementptr inbounds i8, i8* %22, i64 96
  %31 = bitcast i8* %30 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %31, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %23, %"class.spvtools::opt::Module"* %21) #13
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 6
  %33 = ptrtoint i8* %22 to i64
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %34, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.62"* %32 to i64*
  store i64 %33, i64* %36, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %35, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %19
  %39 = bitcast %"class.std::__1::unique_ptr.62"* %32 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %39, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %35) #13
  br label %40

40:                                               ; preds = %38, %19
  %41 = load i32, i32* %15, align 8
  %42 = or i32 %41, 1
  store i32 %42, i32* %15, align 8
  br label %43

43:                                               ; preds = %12, %40
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 6, i32 0, i32 0, i32 0
  %45 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %44, align 8
  %46 = load i32, i32* %13, align 4
  %47 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %45, i32 %46) #13
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = tail call i32 @_Z19spvOpcodeIsConstant6SpvOp_(i32 %49) #13
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds i32, i32* %13, i64 1
  br i1 %51, label %53, label %10

53:                                               ; preds = %10, %43, %2
  %54 = phi i1 [ true, %2 ], [ false, %43 ], [ true, %10 ]
  ret i1 %54
}

declare i32 @_Z19spvOpcodeIsConstant6SpvOp_(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass18GenDebugDirectReadERKNSt3__16vectorIjNS2_9allocatorIjEEEEPNS0_18InstructionBuilderE(%"class.spvtools::opt::InstrumentPass"*, %"class.std::__1::vector.3"* nocapture readonly dereferenceable(24), %"class.spvtools::opt::InstructionBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.1196", align 8
  %5 = alloca %"class.std::__1::tuple.1061", align 1
  %6 = alloca %"class.std::__1::tuple.1196", align 8
  %7 = alloca %"class.std::__1::tuple.1061", align 1
  %8 = alloca %"class.std::__1::vector.3", align 8
  %9 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1, i64 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.3"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = lshr exact i64 %15, 2
  %17 = trunc i64 %16 to i32
  %18 = tail call i32 @_ZN8spvtools3opt14InstrumentPass23GetDirectReadFunctionIdEj(%"class.spvtools::opt::InstrumentPass"* %0, i32 %17)
  %19 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = tail call i8* @_Znwm(i64 4) #12
  %24 = bitcast i8* %23 to i32*
  %25 = bitcast %"class.std::__1::vector.3"* %8 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 4
  %27 = bitcast i32** %22 to i8**
  store i8* %26, i8** %27, align 8
  %28 = bitcast i32** %21 to i64*
  store i32 %18, i32* %24, align 4
  %29 = ptrtoint i8* %26 to i64
  store i64 %29, i64* %28, align 8
  %30 = bitcast i8* %26 to i32*
  %31 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1, i64 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = load i32*, i32** %10, align 8
  %34 = call i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPKjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPjEEE4typeES8_SA_SA_(%"class.std::__1::vector.3"* nonnull %8, i32* %30, i32* %32, i32* %33)
  %35 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 32
  %36 = load i8, i8* %35, align 8, !range !6
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %49, label %38

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 30, i32 0
  %40 = bitcast %"class.std::__1::tuple.1196"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.std::__1::tuple.1196", %"class.std::__1::tuple.1196"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::vector.3"* %8, %"class.std::__1::vector.3"** %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %42) #13
  %43 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEjEENS_22__unordered_map_hasherIS5_S6_N8spvtools3opt14InstrumentPass12vector_hash_ENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SD_SB_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %39, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1196"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %5) #13
  %44 = extractvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %43, 0
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %44, i64 5
  %46 = bitcast %"struct.std::__1::__hash_node_base.915"* %45 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %107

49:                                               ; preds = %3, %38
  %50 = bitcast %"class.spvtools::opt::InstructionBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #13
  %51 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %9, i64 0, i32 0
  %52 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %9, i64 0, i32 1
  %53 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %9, i64 0, i32 3
  %54 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %2, i64 0, i32 0
  %55 = bitcast %"class.spvtools::opt::InstructionBuilder"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 32, i1 false)
  %56 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %54, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %2, i64 0, i32 2
  %58 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %57 to i64*
  %59 = load i64, i64* %58, align 8, !noalias !48
  %60 = inttoptr i64 %59 to %"class.spvtools::opt::Instruction"*
  %61 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %2, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %56, %"class.spvtools::opt::Instruction"* %60) #13
  store %"class.spvtools::opt::IRContext"* %56, %"class.spvtools::opt::IRContext"** %51, align 8
  store %"class.spvtools::opt::BasicBlock"* %63, %"class.spvtools::opt::BasicBlock"** %52, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %9, i64 0, i32 2
  %65 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %64 to i64*
  store i64 %59, i64* %65, align 8
  store i32 %62, i32* %53, align 8
  %66 = load i8, i8* %35, align 8, !range !6
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %49
  %69 = call zeroext i1 @_ZN8spvtools3opt14InstrumentPass11AllConstantERKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::opt::InstrumentPass"* %0, %"class.std::__1::vector.3"* dereferenceable(24) %1)
  br i1 %69, label %70, label %83

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 31
  %72 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %71, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %72, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %75, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %76, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %78 = bitcast %"class.spvtools::opt::Instruction"** %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !51
  %80 = inttoptr i64 %79 to %"class.spvtools::opt::Instruction"*
  %81 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %51, align 8
  %82 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %81, %"class.spvtools::opt::Instruction"* %80) #13
  store %"class.spvtools::opt::BasicBlock"* %82, %"class.spvtools::opt::BasicBlock"** %52, align 8
  store i64 %79, i64* %65, align 8
  br label %83

83:                                               ; preds = %49, %70, %68
  %84 = phi i1 [ true, %70 ], [ false, %68 ], [ false, %49 ]
  %85 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %86 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %9, i32 %85, i32 57, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %8, i32 0)
  %87 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %86, i64 0, i32 4
  %88 = load i8, i8* %87, align 1, !range !6
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %86, i64 0, i32 3
  %92 = load i8, i8* %91, align 4, !range !6
  %93 = zext i8 %92 to i32
  %94 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %86, i32 %93) #13
  br label %95

95:                                               ; preds = %83, %90
  %96 = phi i32 [ %94, %90 ], [ 0, %83 ]
  br i1 %84, label %97, label %106

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 30, i32 0
  %99 = bitcast %"class.std::__1::tuple.1196"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #13
  %100 = getelementptr inbounds %"class.std::__1::tuple.1196", %"class.std::__1::tuple.1196"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::vector.3"* %8, %"class.std::__1::vector.3"** %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %101) #13
  %102 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEjEENS_22__unordered_map_hasherIS5_S6_N8spvtools3opt14InstrumentPass12vector_hash_ENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SD_SB_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %98, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1196"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %7) #13
  %103 = extractvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %102, 0
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %103, i64 5
  %105 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %101) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #13
  store i32 %96, i32* %105, align 4
  br label %106

106:                                              ; preds = %97, %95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #13
  br label %107

107:                                              ; preds = %38, %106
  %108 = phi i32 [ %96, %106 ], [ %47, %38 ]
  %109 = load i32*, i32** %20, align 8
  %110 = icmp eq i32* %109, null
  br i1 %110, label %114, label %111

111:                                              ; preds = %107
  %112 = ptrtoint i32* %109 to i64
  store i64 %112, i64* %28, align 8
  %113 = bitcast i32* %109 to i8*
  call void @_ZdlPv(i8* %113) #12
  br label %114

114:                                              ; preds = %107, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass23GetDirectReadFunctionIdEj(%"class.spvtools::opt::InstrumentPass"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1146", align 8
  %4 = alloca %"class.std::__1::tuple.1061", align 1
  %5 = alloca %"class.std::__1::unique_ptr.28", align 8
  %6 = alloca %"class.std::__1::unique_ptr.40", align 8
  %7 = alloca %"class.std::__1::unique_ptr.40", align 8
  %8 = alloca %"class.std::__1::unique_ptr.21", align 8
  %9 = alloca %"class.std::__1::tuple.1146", align 8
  %10 = alloca %"class.std::__1::tuple.1061", align 1
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__1::vector.956", align 8
  %13 = alloca %"class.spvtools::opt::analysis::Function", align 8
  %14 = alloca %"class.std::__1::vector", align 8
  %15 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %16 = alloca %"class.spvtools::utils::SmallVector", align 8
  %17 = alloca %"class.spvtools::utils::SmallVector", align 8
  %18 = alloca %"class.std::__1::vector.3", align 8
  %19 = alloca %"class.std::__1::vector", align 8
  %20 = alloca %"class.std::__1::unique_ptr.40", align 8
  %21 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %22 = alloca %"class.std::__1::unique_ptr.21", align 8
  %23 = alloca %"class.spvtools::opt::IRContext"*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %"class.std::initializer_list.973", align 8
  %28 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %29 = alloca %"class.spvtools::utils::SmallVector", align 8
  %30 = alloca %"class.std::__1::vector", align 8
  store i32 %1, i32* %11, align 4
  %31 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 13, i32 0
  %32 = bitcast %"class.std::__1::tuple.1146"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.std::__1::tuple.1146", %"class.std::__1::tuple.1146"* %9, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #13
  %35 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %31, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1146"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %10) #13
  %36 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %35, 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %36, i64 2
  %38 = bitcast %"struct.std::__1::__hash_node_base.254"* %37 to %"struct.std::__1::pair"*
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %979

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %44 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %43, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %45, align 8
  %47 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %46) #13
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 5, i32 0, i32 2
  %51 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %51, i64 0, i32 2
  %53 = load i8, i8* %52, align 8, !range !6
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %49
  %56 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %56, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %57 = getelementptr inbounds i8, i8* %56, i64 37
  store i8 0, i8* %57, align 1
  %58 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 5, i32 0, i32 1, i32 0
  %59 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 5, i32 0, i32 0
  call void %59(%"union.std::__1::__function::__policy_storage"* %60, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %56) #13
  call void @_ZdlPv(i8* nonnull %56) #12
  br label %61

61:                                               ; preds = %42, %49, %55
  %62 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %43, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %62, i64 0, i32 11
  %64 = load i32, i32* %63, align 8
  %65 = trunc i32 %64 to i16
  %66 = icmp slt i16 %65, 0
  br i1 %66, label %82, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %62, i64 0, i32 5
  %69 = call i8* @_Znwm(i64 240) #12
  %70 = bitcast i8* %69 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %70, %"class.std::__1::function"* dereferenceable(32) %68, %"class.spvtools::opt::IRContext"* %62) #13
  %71 = ptrtoint i8* %69 to i64
  %72 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %62, i64 0, i32 20
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %73, align 8
  %75 = bitcast %"class.std::__1::unique_ptr.480"* %72 to i64*
  store i64 %71, i64* %75, align 8
  %76 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %67
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %74) #13
  %78 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %74 to i8*
  call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %77, %67
  %80 = load i32, i32* %63, align 8
  %81 = or i32 %80, 32768
  store i32 %81, i32* %63, align 8
  br label %82

82:                                               ; preds = %61, %79
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %62, i64 0, i32 20, i32 0, i32 0, i32 0
  %84 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %83, align 8
  %85 = bitcast %"class.std::__1::vector.956"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #13
  %86 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %12, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %12, i64 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 24, i1 false) #13
  %89 = load i32, i32* %11, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %82
  %92 = bitcast %"class.spvtools::opt::analysis::Type"*** %87 to i64*
  %93 = bitcast %"class.std::__1::vector.956"* %12 to i64*
  %94 = bitcast %"class.spvtools::opt::analysis::Type"*** %88 to i64*
  br label %230

95:                                               ; preds = %287, %82
  %96 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 8
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %101

99:                                               ; preds = %95
  %100 = call i32 @_ZN8spvtools3opt14InstrumentPass11GetUint64IdEv(%"class.spvtools::opt::InstrumentPass"* %0) #13
  br label %103

101:                                              ; preds = %95
  %102 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0) #13
  br label %103

103:                                              ; preds = %99, %101
  %104 = phi i32 [ %100, %99 ], [ %102, %101 ]
  %105 = bitcast %"class.spvtools::opt::analysis::Function"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %105) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 72, i1 false)
  %106 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %84, i32 %104) #13
  call void @_ZN8spvtools3opt8analysis8FunctionC1EPKNS1_4TypeERNSt3__16vectorIS5_NS6_9allocatorIS5_EEEE(%"class.spvtools::opt::analysis::Function"* nonnull %13, %"class.spvtools::opt::analysis::Type"* %106, %"class.std::__1::vector.956"* nonnull dereferenceable(24) %12) #13
  %107 = bitcast %"class.spvtools::opt::analysis::Function"* %13 to %"class.spvtools::opt::analysis::Type"*
  %108 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %84, %"class.spvtools::opt::analysis::Type"* nonnull %107) #13
  %109 = call i8* @_Znwm(i64 112) #12
  %110 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %43, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %110, i64 0, i32 4, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %111, align 8
  %113 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %112, i64 0, i32 2
  %114 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %113, align 8
  %115 = bitcast %"class.std::__1::vector"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #13
  %116 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %116) #13
  %117 = bitcast %"class.spvtools::utils::SmallVector"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %117) #13
  %118 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %118, align 8
  %119 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 1
  %120 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 2
  %121 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 3, i64 0
  %122 = bitcast i32** %120 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %121, %"struct.std::__1::aligned_storage<4, 4>::type"** %122, align 8
  %123 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 4
  %124 = bitcast %"class.std::__1::unique_ptr.0"* %123 to i64*
  store i64 0, i64* %124, align 8
  %125 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %121 to i32*
  store i64 1, i64* %119, align 8
  store i32 0, i32* %125, align 8
  %126 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 0, i32 0
  store i32 6, i32* %126, align 8
  %127 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 0, i32 1
  %128 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %127, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  %129 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %129, align 8
  %130 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 0, i32 1, i32 2
  %131 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 0, i32 1, i32 3, i64 0
  %132 = bitcast i32** %130 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %131, %"struct.std::__1::aligned_storage<4, 4>::type"** %132, align 8
  %133 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 0, i32 1, i32 4
  %134 = bitcast %"class.std::__1::unique_ptr.0"* %133 to i64*
  store i64 0, i64* %134, align 8
  %135 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %127, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %16) #13
  %136 = bitcast %"class.spvtools::utils::SmallVector"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %136) #13
  %137 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %84, %"class.spvtools::opt::analysis::Type"* %108) #13
  %138 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8
  %139 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 1
  %140 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 2
  %141 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 3, i64 0
  %142 = bitcast i32** %140 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %141, %"struct.std::__1::aligned_storage<4, 4>::type"** %142, align 8
  %143 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 4
  %144 = bitcast %"class.std::__1::unique_ptr.0"* %143 to i64*
  store i64 0, i64* %144, align 8
  %145 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %141 to i32*
  store i64 1, i64* %139, align 8
  store i32 %137, i32* %145, align 8
  %146 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 1, i32 0
  store i32 1, i32* %146, align 8
  %147 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 1, i32 1
  %148 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %147, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %148, align 8
  %149 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %149, align 8
  %150 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 1, i32 1, i32 2
  %151 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 1, i32 1, i32 3, i64 0
  %152 = bitcast i32** %150 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %151, %"struct.std::__1::aligned_storage<4, 4>::type"** %152, align 8
  %153 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 1, i32 1, i32 4
  %154 = bitcast %"class.std::__1::unique_ptr.0"* %153 to i64*
  store i64 0, i64* %154, align 8
  %155 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %147, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %17) #13
  %156 = call i8* @_Znwm(i64 96) #12
  %157 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 1
  %158 = bitcast %"struct.spvtools::opt::Operand"** %157 to i8**
  store i8* %156, i8** %158, align 8
  %159 = bitcast %"class.std::__1::vector"* %14 to i8**
  store i8* %156, i8** %159, align 8
  %160 = getelementptr inbounds i8, i8* %156, i64 96
  %161 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %162 = bitcast %"struct.spvtools::opt::Operand"** %161 to i8**
  store i8* %160, i8** %162, align 8
  %163 = bitcast i8* %156 to i32*
  %164 = load i32, i32* %126, align 8
  store i32 %164, i32* %163, align 8
  %165 = getelementptr inbounds i8, i8* %156, i64 8
  %166 = bitcast i8* %165 to %"class.spvtools::utils::SmallVector"*
  %167 = bitcast i8* %165 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %167, align 8
  %168 = getelementptr inbounds i8, i8* %156, i64 16
  %169 = bitcast i8* %168 to i64*
  store i64 0, i64* %169, align 8
  %170 = getelementptr inbounds i8, i8* %156, i64 24
  %171 = getelementptr inbounds i8, i8* %156, i64 32
  %172 = bitcast i8* %170 to i8**
  store i8* %171, i8** %172, align 8
  %173 = getelementptr inbounds i8, i8* %156, i64 40
  %174 = bitcast i8* %173 to i64*
  store i64 0, i64* %174, align 8
  %175 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %166, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %127) #13
  %176 = getelementptr inbounds i8, i8* %156, i64 48
  %177 = bitcast i8* %176 to i32*
  %178 = load i32, i32* %146, align 8
  store i32 %178, i32* %177, align 8
  %179 = getelementptr inbounds i8, i8* %156, i64 56
  %180 = bitcast i8* %179 to %"class.spvtools::utils::SmallVector"*
  %181 = bitcast i8* %179 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %181, align 8
  %182 = getelementptr inbounds i8, i8* %156, i64 64
  %183 = bitcast i8* %182 to i64*
  store i64 0, i64* %183, align 8
  %184 = getelementptr inbounds i8, i8* %156, i64 72
  %185 = getelementptr inbounds i8, i8* %156, i64 80
  %186 = bitcast i8* %184 to i8**
  store i8* %185, i8** %186, align 8
  %187 = getelementptr inbounds i8, i8* %156, i64 88
  %188 = bitcast i8* %187 to i64*
  store i64 0, i64* %188, align 8
  %189 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %180, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %147) #13
  %190 = bitcast i8* %109 to %"class.spvtools::opt::Instruction"*
  %191 = bitcast %"struct.spvtools::opt::Operand"** %157 to i64*
  %192 = ptrtoint i8* %160 to i64
  store i64 %192, i64* %191, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %190, %"class.spvtools::opt::IRContext"* %114, i32 54, i32 %104, i32 %47, %"class.std::__1::vector"* nonnull dereferenceable(24) %14) #13
  %193 = ptrtoint i8* %109 to i64
  %194 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 0
  %195 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %194, align 8
  %196 = icmp eq %"struct.spvtools::opt::Operand"* %195, null
  br i1 %196, label %225, label %197

197:                                              ; preds = %103
  %198 = bitcast %"struct.spvtools::opt::Operand"* %195 to i8*
  %199 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %157, align 8
  %200 = icmp eq %"struct.spvtools::opt::Operand"* %199, %195
  br i1 %200, label %223, label %201

201:                                              ; preds = %197, %219
  %202 = phi %"struct.spvtools::opt::Operand"* [ %203, %219 ], [ %199, %197 ]
  %203 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %202, i64 -1
  %204 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %202, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %204, align 8
  %205 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %202, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %206 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %205, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %205, align 8
  %207 = icmp eq %"class.std::__1::vector.3"* %206, null
  br i1 %207, label %219, label %208

208:                                              ; preds = %201
  %209 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 0
  %210 = load i32*, i32** %209, align 8
  %211 = icmp eq i32* %210, null
  br i1 %211, label %217, label %212

212:                                              ; preds = %208
  %213 = ptrtoint i32* %210 to i64
  %214 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 1
  %215 = bitcast i32** %214 to i64*
  store i64 %213, i64* %215, align 8
  %216 = bitcast i32* %210 to i8*
  call void @_ZdlPv(i8* %216) #12
  br label %217

217:                                              ; preds = %212, %208
  %218 = bitcast %"class.std::__1::vector.3"* %206 to i8*
  call void @_ZdlPv(i8* %218) #12
  br label %219

219:                                              ; preds = %217, %201
  %220 = icmp eq %"struct.spvtools::opt::Operand"* %203, %195
  br i1 %220, label %221, label %201

221:                                              ; preds = %219
  %222 = load i8*, i8** %159, align 8
  br label %223

223:                                              ; preds = %221, %197
  %224 = phi i8* [ %222, %221 ], [ %198, %197 ]
  store %"struct.spvtools::opt::Operand"* %195, %"struct.spvtools::opt::Operand"** %157, align 8
  call void @_ZdlPv(i8* %224) #12
  br label %225

225:                                              ; preds = %103, %223
  %226 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %226, align 8
  %227 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %228 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %227, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %227, align 8
  %229 = icmp eq %"class.std::__1::vector.3"* %228, null
  br i1 %229, label %302, label %291

230:                                              ; preds = %91, %287
  %231 = phi i32 [ 0, %91 ], [ %288, %287 ]
  %232 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %233 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %84, i32 %232) #13
  %234 = ptrtoint %"class.spvtools::opt::analysis::Type"* %233 to i64
  %235 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %87, align 8
  %236 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %88, align 8
  %237 = icmp ult %"class.spvtools::opt::analysis::Type"** %235, %236
  %238 = ptrtoint %"class.spvtools::opt::analysis::Type"** %236 to i64
  br i1 %237, label %239, label %243

239:                                              ; preds = %230
  %240 = bitcast %"class.spvtools::opt::analysis::Type"** %235 to i64*
  store i64 %234, i64* %240, align 8
  %241 = getelementptr inbounds %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %235, i64 1
  %242 = ptrtoint %"class.spvtools::opt::analysis::Type"** %241 to i64
  store i64 %242, i64* %92, align 8
  br label %287

243:                                              ; preds = %230
  %244 = ptrtoint %"class.spvtools::opt::analysis::Type"** %235 to i64
  %245 = load i64, i64* %93, align 8
  %246 = sub i64 %244, %245
  %247 = ashr exact i64 %246, 3
  %248 = add nsw i64 %247, 1
  %249 = icmp ugt i64 %248, 2305843009213693951
  br i1 %249, label %250, label %252

250:                                              ; preds = %243
  %251 = bitcast %"class.std::__1::vector.956"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %251) #14
  unreachable

252:                                              ; preds = %243
  %253 = sub i64 %238, %245
  %254 = ashr exact i64 %253, 3
  %255 = icmp ult i64 %254, 1152921504606846975
  br i1 %255, label %256, label %264

256:                                              ; preds = %252
  %257 = ashr exact i64 %253, 2
  %258 = icmp ult i64 %257, %248
  %259 = select i1 %258, i64 %248, i64 %257
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %269, label %261

261:                                              ; preds = %256
  %262 = icmp ugt i64 %259, 2305843009213693951
  br i1 %262, label %263, label %264

263:                                              ; preds = %261
  call void @abort() #14
  unreachable

264:                                              ; preds = %261, %252
  %265 = phi i64 [ %259, %261 ], [ 2305843009213693951, %252 ]
  %266 = shl i64 %265, 3
  %267 = call i8* @_Znwm(i64 %266) #12
  %268 = bitcast i8* %267 to %"class.spvtools::opt::analysis::Type"**
  br label %269

269:                                              ; preds = %264, %256
  %270 = phi i64 [ %265, %264 ], [ 0, %256 ]
  %271 = phi i8* [ %267, %264 ], [ null, %256 ]
  %272 = phi %"class.spvtools::opt::analysis::Type"** [ %268, %264 ], [ null, %256 ]
  %273 = getelementptr inbounds %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %272, i64 %247
  %274 = getelementptr inbounds %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %272, i64 %270
  %275 = ptrtoint %"class.spvtools::opt::analysis::Type"** %274 to i64
  %276 = bitcast %"class.spvtools::opt::analysis::Type"** %273 to i64*
  store i64 %234, i64* %276, align 8
  %277 = getelementptr inbounds %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %273, i64 1
  %278 = ptrtoint %"class.spvtools::opt::analysis::Type"** %277 to i64
  %279 = ptrtoint %"class.spvtools::opt::analysis::Type"** %272 to i64
  %280 = icmp sgt i64 %246, 0
  br i1 %280, label %281, label %283

281:                                              ; preds = %269
  %282 = inttoptr i64 %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %282, i64 %246, i1 false) #13
  br label %283

283:                                              ; preds = %281, %269
  store i64 %279, i64* %93, align 8
  store i64 %278, i64* %92, align 8
  store i64 %275, i64* %94, align 8
  %284 = icmp eq i64 %245, 0
  br i1 %284, label %287, label %285

285:                                              ; preds = %283
  %286 = inttoptr i64 %245 to i8*
  call void @_ZdlPv(i8* %286) #12
  br label %287

287:                                              ; preds = %239, %283, %285
  %288 = add nuw i32 %231, 1
  %289 = load i32, i32* %11, align 4
  %290 = icmp ult i32 %288, %289
  br i1 %290, label %230, label %95

291:                                              ; preds = %225
  %292 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %228, i64 0, i32 0, i32 0
  %293 = load i32*, i32** %292, align 8
  %294 = icmp eq i32* %293, null
  br i1 %294, label %300, label %295

295:                                              ; preds = %291
  %296 = ptrtoint i32* %293 to i64
  %297 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %228, i64 0, i32 0, i32 1
  %298 = bitcast i32** %297 to i64*
  store i64 %296, i64* %298, align 8
  %299 = bitcast i32* %293 to i8*
  call void @_ZdlPv(i8* %299) #12
  br label %300

300:                                              ; preds = %295, %291
  %301 = bitcast %"class.std::__1::vector.3"* %228 to i8*
  call void @_ZdlPv(i8* %301) #12
  br label %302

302:                                              ; preds = %225, %300
  %303 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %303, align 8
  %304 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %15, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %305 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %304, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %304, align 8
  %306 = icmp eq %"class.std::__1::vector.3"* %305, null
  br i1 %306, label %992, label %981

307:                                              ; preds = %992
  %308 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %994, i64 0, i32 0, i32 0
  %309 = load i32*, i32** %308, align 8
  %310 = icmp eq i32* %309, null
  br i1 %310, label %316, label %311

311:                                              ; preds = %307
  %312 = ptrtoint i32* %309 to i64
  %313 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %994, i64 0, i32 0, i32 1
  %314 = bitcast i32** %313 to i64*
  store i64 %312, i64* %314, align 8
  %315 = bitcast i32* %309 to i8*
  call void @_ZdlPv(i8* %315) #12
  br label %316

316:                                              ; preds = %311, %307
  %317 = bitcast %"class.std::__1::vector.3"* %994 to i8*
  call void @_ZdlPv(i8* %317) #12
  br label %318

318:                                              ; preds = %992, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %136) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %118, align 8
  %319 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %320 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %319, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %319, align 8
  %321 = icmp eq %"class.std::__1::vector.3"* %320, null
  br i1 %321, label %333, label %322

322:                                              ; preds = %318
  %323 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %320, i64 0, i32 0, i32 0
  %324 = load i32*, i32** %323, align 8
  %325 = icmp eq i32* %324, null
  br i1 %325, label %331, label %326

326:                                              ; preds = %322
  %327 = ptrtoint i32* %324 to i64
  %328 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %320, i64 0, i32 0, i32 1
  %329 = bitcast i32** %328 to i64*
  store i64 %327, i64* %329, align 8
  %330 = bitcast i32* %324 to i8*
  call void @_ZdlPv(i8* %330) #12
  br label %331

331:                                              ; preds = %326, %322
  %332 = bitcast %"class.std::__1::vector.3"* %320 to i8*
  call void @_ZdlPv(i8* %332) #12
  br label %333

333:                                              ; preds = %318, %331
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %117) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %116) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #13
  %334 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %43, align 8
  %335 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %334, i64 0, i32 11
  %336 = load i32, i32* %335, align 8
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %363

339:                                              ; preds = %333
  %340 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %334, i64 0, i32 4, i32 0, i32 0, i32 0
  %341 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %340, align 8
  %342 = call i8* @_Znwm(i64 104) #12
  %343 = bitcast i8* %342 to %"class.spvtools::opt::analysis::DefUseManager"*
  %344 = getelementptr inbounds i8, i8* %342, i64 32
  %345 = bitcast i8* %344 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %342, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %345, align 4
  %346 = getelementptr inbounds i8, i8* %342, i64 48
  %347 = getelementptr inbounds i8, i8* %342, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %346, i8 0, i64 16, i1 false) #13
  %348 = bitcast i8* %347 to i8**
  store i8* %346, i8** %348, align 8
  %349 = getelementptr inbounds i8, i8* %342, i64 64
  %350 = getelementptr inbounds i8, i8* %342, i64 96
  %351 = bitcast i8* %350 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %349, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %351, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %343, %"class.spvtools::opt::Module"* %341) #13
  %352 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %334, i64 0, i32 6
  %353 = ptrtoint i8* %342 to i64
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %352, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %354, align 8
  %356 = bitcast %"class.std::__1::unique_ptr.62"* %352 to i64*
  store i64 %353, i64* %356, align 8
  %357 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %355, null
  br i1 %357, label %360, label %358

358:                                              ; preds = %339
  %359 = bitcast %"class.std::__1::unique_ptr.62"* %352 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %359, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %355) #13
  br label %360

360:                                              ; preds = %358, %339
  %361 = load i32, i32* %335, align 8
  %362 = or i32 %361, 1
  store i32 %362, i32* %335, align 8
  br label %363

363:                                              ; preds = %333, %360
  %364 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %334, i64 0, i32 6, i32 0, i32 0, i32 0
  %365 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %364, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %365, %"class.spvtools::opt::Instruction"* nonnull %190) #13
  %366 = call i8* @_Znwm(i64 208) #12
  %367 = bitcast i8* %366 to i64*
  store i64 %193, i64* %367, align 8
  %368 = getelementptr inbounds i8, i8* %366, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %368, i8 0, i64 24, i1 false) #13
  %369 = getelementptr inbounds i8, i8* %366, i64 32
  %370 = bitcast i8* %369 to i32 (...)***
  %371 = getelementptr inbounds i8, i8* %366, i64 40
  %372 = bitcast i8* %371 to i32 (...)***
  %373 = getelementptr inbounds i8, i8* %366, i64 48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %372, align 8
  %374 = getelementptr inbounds i8, i8* %366, i64 72
  %375 = getelementptr inbounds i8, i8* %366, i64 88
  %376 = bitcast i8* %375 to i32*
  store i32 0, i32* %376, align 8
  %377 = getelementptr inbounds i8, i8* %366, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 8 %374, i8 0, i64 14, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %377, i8 0, i64 56, i1 false) #13
  %378 = bitcast i8* %373 to i8**
  store i8* %371, i8** %378, align 8
  %379 = getelementptr inbounds i8, i8* %366, i64 56
  %380 = bitcast i8* %379 to i8**
  store i8* %371, i8** %380, align 8
  %381 = getelementptr inbounds i8, i8* %366, i64 64
  store i8 1, i8* %381, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %370, align 8
  %382 = getelementptr inbounds i8, i8* %366, i64 152
  call void @llvm.memset.p0i8.i64(i8* align 8 %382, i8 0, i64 56, i1 false) #13
  %383 = ptrtoint i8* %366 to i64
  %384 = bitcast %"class.std::__1::vector.3"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %384) #13
  %385 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %18, i64 0, i32 0, i32 0
  %386 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %18, i64 0, i32 0, i32 1
  %387 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %384, i8 0, i64 24, i1 false) #13
  %388 = load i32, i32* %11, align 4
  %389 = icmp eq i32 %388, 0
  %390 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %43, align 8
  %391 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %390, i64 0, i32 4, i32 0, i32 0, i32 0
  %392 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %391, align 8
  %393 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %392) #13
  %394 = icmp eq i32 %393, 0
  br i1 %389, label %412, label %395

395:                                              ; preds = %363
  %396 = bitcast i32** %386 to i64*
  %397 = bitcast %"class.std::__1::vector.3"* %18 to i64*
  %398 = bitcast i32** %387 to i64*
  %399 = bitcast %"class.std::__1::vector"* %19 to i8*
  %400 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 0
  %401 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 1
  %402 = bitcast %"class.std::__1::vector"* %19 to i8**
  %403 = bitcast %"class.std::__1::unique_ptr.21"* %8 to i8*
  %404 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %8, i64 0, i32 0, i32 0, i32 0
  %405 = bitcast %"class.std::__1::unique_ptr.21"* %8 to i8**
  %406 = getelementptr inbounds i8, i8* %366, i64 16
  %407 = bitcast i8* %406 to %"class.std::__1::unique_ptr.21"**
  %408 = getelementptr inbounds i8, i8* %366, i64 24
  %409 = bitcast i8* %408 to %"class.std::__1::unique_ptr.21"**
  %410 = bitcast i8* %368 to %"class.std::__1::vector.31"*
  %411 = bitcast i8* %406 to i64*
  br label %465

412:                                              ; preds = %622, %363
  %413 = phi %"class.spvtools::opt::IRContext"* [ %390, %363 ], [ %626, %622 ]
  %414 = phi i32 [ %393, %363 ], [ %629, %622 ]
  %415 = phi i1 [ %394, %363 ], [ %630, %622 ]
  br i1 %415, label %416, label %428

416:                                              ; preds = %412
  %417 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %413, i64 0, i32 5, i32 0, i32 2
  %418 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %417, align 8
  %419 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %418, i64 0, i32 2
  %420 = load i8, i8* %419, align 8, !range !6
  %421 = icmp eq i8 %420, 0
  br i1 %421, label %422, label %428

422:                                              ; preds = %416
  %423 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %423, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %424 = getelementptr inbounds i8, i8* %423, i64 37
  store i8 0, i8* %424, align 1
  %425 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %413, i64 0, i32 5, i32 0, i32 1, i32 0
  %426 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %425, align 8
  %427 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %413, i64 0, i32 5, i32 0, i32 0
  call void %426(%"union.std::__1::__function::__policy_storage"* %427, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %423) #13
  call void @_ZdlPv(i8* nonnull %423) #12
  br label %428

428:                                              ; preds = %412, %416, %422
  %429 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt14InstrumentPass8NewLabelEj(%"class.spvtools::opt::InstrumentPass"* %0, i32 %414)
  %430 = ptrtoint %"class.spvtools::opt::Instruction"* %429 to i64
  %431 = bitcast %"class.std::__1::unique_ptr.40"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %431) #13
  %432 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %20, i64 0, i32 0, i32 0, i32 0
  %433 = call i8* @_Znwm(i64 136) #12
  %434 = bitcast i8* %433 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %434, align 8
  %435 = getelementptr inbounds i8, i8* %433, i64 8
  %436 = bitcast i8* %435 to i64*
  store i64 %430, i64* %436, align 8
  %437 = getelementptr inbounds i8, i8* %433, i64 16
  %438 = bitcast i8* %437 to i32 (...)***
  %439 = getelementptr inbounds i8, i8* %433, i64 24
  %440 = bitcast i8* %439 to i32 (...)***
  %441 = getelementptr inbounds i8, i8* %433, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %440, align 8
  %442 = getelementptr inbounds i8, i8* %433, i64 56
  %443 = getelementptr inbounds i8, i8* %433, i64 72
  %444 = bitcast i8* %443 to i32*
  store i32 0, i32* %444, align 8
  %445 = getelementptr inbounds i8, i8* %433, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %442, i8 0, i64 14, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %445, i8 0, i64 56, i1 false) #13
  %446 = bitcast i8* %441 to i8**
  store i8* %439, i8** %446, align 8
  %447 = getelementptr inbounds i8, i8* %433, i64 40
  %448 = bitcast i8* %447 to i8**
  store i8* %439, i8** %448, align 8
  %449 = getelementptr inbounds i8, i8* %433, i64 48
  store i8 1, i8* %449, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %438, align 8
  %450 = bitcast %"class.std::__1::unique_ptr.40"* %20 to i8**
  store i8* %433, i8** %450, align 8
  %451 = bitcast %"class.spvtools::opt::InstructionBuilder"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %451) #13
  %452 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %21, i64 0, i32 1
  %453 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %21, i64 0, i32 3
  %454 = bitcast %"class.spvtools::opt::IRContext"** %43 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %451, i8 -86, i64 32, i1 false)
  %455 = load i64, i64* %454, align 8
  %456 = ptrtoint i8* %439 to i64
  %457 = bitcast %"class.spvtools::opt::InstructionBuilder"* %21 to i64*
  store i64 %455, i64* %457, align 8
  %458 = bitcast %"class.spvtools::opt::BasicBlock"** %452 to i8**
  store i8* %433, i8** %458, align 8
  %459 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %21, i64 0, i32 2
  %460 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %459 to i64*
  store i64 %456, i64* %460, align 8
  store i32 3, i32* %453, align 8
  %461 = call i32 @_ZN8spvtools3opt14InstrumentPass16GetInputBufferIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %462 = call i32 @_ZN8spvtools3opt14InstrumentPass19GetInputBufferPtrIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %463 = load i32, i32* %11, align 4
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %631, label %679

465:                                              ; preds = %395, %622
  %466 = phi i1 [ %394, %395 ], [ %630, %622 ]
  %467 = phi i32 [ %393, %395 ], [ %629, %622 ]
  %468 = phi %"class.spvtools::opt::IRContext"* [ %390, %395 ], [ %626, %622 ]
  %469 = phi i32 [ 0, %395 ], [ %623, %622 ]
  br i1 %466, label %470, label %482

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %468, i64 0, i32 5, i32 0, i32 2
  %472 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %471, align 8
  %473 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %472, i64 0, i32 2
  %474 = load i8, i8* %473, align 8, !range !6
  %475 = icmp eq i8 %474, 0
  br i1 %475, label %476, label %482

476:                                              ; preds = %470
  %477 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %477, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %478 = getelementptr inbounds i8, i8* %477, i64 37
  store i8 0, i8* %478, align 1
  %479 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %468, i64 0, i32 5, i32 0, i32 1, i32 0
  %480 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %479, align 8
  %481 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %468, i64 0, i32 5, i32 0, i32 0
  call void %480(%"union.std::__1::__function::__policy_storage"* %481, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %477) #13
  call void @_ZdlPv(i8* nonnull %477) #12
  br label %482

482:                                              ; preds = %465, %470, %476
  %483 = load i32*, i32** %386, align 8
  %484 = load i32*, i32** %387, align 8
  %485 = icmp eq i32* %483, %484
  %486 = ptrtoint i32* %484 to i64
  br i1 %485, label %490, label %487

487:                                              ; preds = %482
  store i32 %467, i32* %483, align 4
  %488 = getelementptr inbounds i32, i32* %483, i64 1
  %489 = ptrtoint i32* %488 to i64
  store i64 %489, i64* %396, align 8
  br label %533

490:                                              ; preds = %482
  %491 = ptrtoint i32* %483 to i64
  %492 = load i64, i64* %397, align 8
  %493 = sub i64 %491, %492
  %494 = ashr exact i64 %493, 2
  %495 = add nsw i64 %494, 1
  %496 = icmp ugt i64 %495, 4611686018427387903
  br i1 %496, label %497, label %499

497:                                              ; preds = %490
  %498 = bitcast %"class.std::__1::vector.3"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %498) #14
  unreachable

499:                                              ; preds = %490
  %500 = sub i64 %486, %492
  %501 = ashr exact i64 %500, 2
  %502 = icmp ult i64 %501, 2305843009213693951
  br i1 %502, label %503, label %511

503:                                              ; preds = %499
  %504 = ashr exact i64 %500, 1
  %505 = icmp ult i64 %504, %495
  %506 = select i1 %505, i64 %495, i64 %504
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %516, label %508

508:                                              ; preds = %503
  %509 = icmp ugt i64 %506, 4611686018427387903
  br i1 %509, label %510, label %511

510:                                              ; preds = %508
  call void @abort() #14
  unreachable

511:                                              ; preds = %508, %499
  %512 = phi i64 [ %506, %508 ], [ 4611686018427387903, %499 ]
  %513 = shl i64 %512, 2
  %514 = call i8* @_Znwm(i64 %513) #12
  %515 = bitcast i8* %514 to i32*
  br label %516

516:                                              ; preds = %511, %503
  %517 = phi i64 [ %512, %511 ], [ 0, %503 ]
  %518 = phi i8* [ %514, %511 ], [ null, %503 ]
  %519 = phi i32* [ %515, %511 ], [ null, %503 ]
  %520 = getelementptr inbounds i32, i32* %519, i64 %494
  %521 = getelementptr inbounds i32, i32* %519, i64 %517
  %522 = ptrtoint i32* %521 to i64
  store i32 %467, i32* %520, align 4
  %523 = getelementptr inbounds i32, i32* %520, i64 1
  %524 = ptrtoint i32* %523 to i64
  %525 = ptrtoint i32* %519 to i64
  %526 = icmp sgt i64 %493, 0
  br i1 %526, label %527, label %529

527:                                              ; preds = %516
  %528 = inttoptr i64 %492 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %518, i8* align 4 %528, i64 %493, i1 false) #13
  br label %529

529:                                              ; preds = %527, %516
  store i64 %525, i64* %397, align 8
  store i64 %524, i64* %396, align 8
  store i64 %522, i64* %398, align 8
  %530 = icmp eq i64 %492, 0
  br i1 %530, label %533, label %531

531:                                              ; preds = %529
  %532 = inttoptr i64 %492 to i8*
  call void @_ZdlPv(i8* %532) #12
  br label %533

533:                                              ; preds = %487, %529, %531
  %534 = call i8* @_Znwm(i64 112) #12
  %535 = bitcast i8* %534 to %"class.spvtools::opt::Instruction"*
  %536 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %43, align 8
  %537 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %536, i64 0, i32 4, i32 0, i32 0, i32 0
  %538 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %537, align 8
  %539 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %538, i64 0, i32 2
  %540 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %539, align 8
  %541 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %399) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %399, i8 0, i64 24, i1 false) #13
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %535, %"class.spvtools::opt::IRContext"* %540, i32 55, i32 %541, i32 %467, %"class.std::__1::vector"* nonnull dereferenceable(24) %19) #13
  %542 = ptrtoint i8* %534 to i64
  %543 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %400, align 8
  %544 = icmp eq %"struct.spvtools::opt::Operand"* %543, null
  br i1 %544, label %573, label %545

545:                                              ; preds = %533
  %546 = bitcast %"struct.spvtools::opt::Operand"* %543 to i8*
  %547 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %401, align 8
  %548 = icmp eq %"struct.spvtools::opt::Operand"* %547, %543
  br i1 %548, label %571, label %549

549:                                              ; preds = %545, %567
  %550 = phi %"struct.spvtools::opt::Operand"* [ %551, %567 ], [ %547, %545 ]
  %551 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %550, i64 -1
  %552 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %550, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %552, align 8
  %553 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %550, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %554 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %553, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %553, align 8
  %555 = icmp eq %"class.std::__1::vector.3"* %554, null
  br i1 %555, label %567, label %556

556:                                              ; preds = %549
  %557 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %554, i64 0, i32 0, i32 0
  %558 = load i32*, i32** %557, align 8
  %559 = icmp eq i32* %558, null
  br i1 %559, label %565, label %560

560:                                              ; preds = %556
  %561 = ptrtoint i32* %558 to i64
  %562 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %554, i64 0, i32 0, i32 1
  %563 = bitcast i32** %562 to i64*
  store i64 %561, i64* %563, align 8
  %564 = bitcast i32* %558 to i8*
  call void @_ZdlPv(i8* %564) #12
  br label %565

565:                                              ; preds = %560, %556
  %566 = bitcast %"class.std::__1::vector.3"* %554 to i8*
  call void @_ZdlPv(i8* %566) #12
  br label %567

567:                                              ; preds = %565, %549
  %568 = icmp eq %"struct.spvtools::opt::Operand"* %551, %543
  br i1 %568, label %569, label %549

569:                                              ; preds = %567
  %570 = load i8*, i8** %402, align 8
  br label %571

571:                                              ; preds = %569, %545
  %572 = phi i8* [ %570, %569 ], [ %546, %545 ]
  store %"struct.spvtools::opt::Operand"* %543, %"struct.spvtools::opt::Operand"** %401, align 8
  call void @_ZdlPv(i8* %572) #12
  br label %573

573:                                              ; preds = %533, %571
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %399) #13
  %574 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %43, align 8
  %575 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %574, i64 0, i32 11
  %576 = load i32, i32* %575, align 8
  %577 = and i32 %576, 1
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %579, label %603

579:                                              ; preds = %573
  %580 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %574, i64 0, i32 4, i32 0, i32 0, i32 0
  %581 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %580, align 8
  %582 = call i8* @_Znwm(i64 104) #12
  %583 = bitcast i8* %582 to %"class.spvtools::opt::analysis::DefUseManager"*
  %584 = getelementptr inbounds i8, i8* %582, i64 32
  %585 = bitcast i8* %584 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %582, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %585, align 4
  %586 = getelementptr inbounds i8, i8* %582, i64 48
  %587 = getelementptr inbounds i8, i8* %582, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %586, i8 0, i64 16, i1 false) #13
  %588 = bitcast i8* %587 to i8**
  store i8* %586, i8** %588, align 8
  %589 = getelementptr inbounds i8, i8* %582, i64 64
  %590 = getelementptr inbounds i8, i8* %582, i64 96
  %591 = bitcast i8* %590 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %589, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %591, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %583, %"class.spvtools::opt::Module"* %581) #13
  %592 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %574, i64 0, i32 6
  %593 = ptrtoint i8* %582 to i64
  %594 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %592, i64 0, i32 0, i32 0, i32 0
  %595 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %594, align 8
  %596 = bitcast %"class.std::__1::unique_ptr.62"* %592 to i64*
  store i64 %593, i64* %596, align 8
  %597 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %595, null
  br i1 %597, label %600, label %598

598:                                              ; preds = %579
  %599 = bitcast %"class.std::__1::unique_ptr.62"* %592 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %599, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %595) #13
  br label %600

600:                                              ; preds = %598, %579
  %601 = load i32, i32* %575, align 8
  %602 = or i32 %601, 1
  store i32 %602, i32* %575, align 8
  br label %603

603:                                              ; preds = %573, %600
  %604 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %574, i64 0, i32 6, i32 0, i32 0, i32 0
  %605 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %604, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %605, %"class.spvtools::opt::Instruction"* nonnull %535) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %403)
  store i8* %534, i8** %405, align 8
  %606 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %407, align 8
  %607 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %409, align 8
  %608 = icmp ult %"class.std::__1::unique_ptr.21"* %606, %607
  br i1 %608, label %609, label %613

609:                                              ; preds = %603
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %404, align 8
  %610 = bitcast %"class.std::__1::unique_ptr.21"* %606 to i64*
  store i64 %542, i64* %610, align 8
  %611 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %606, i64 1
  %612 = ptrtoint %"class.std::__1::unique_ptr.21"* %611 to i64
  store i64 %612, i64* %411, align 8
  br label %614

613:                                              ; preds = %603
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.31"* %410, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %8) #13
  br label %614

614:                                              ; preds = %613, %609
  %615 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %404, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %404, align 8
  %616 = icmp eq %"class.spvtools::opt::Instruction"* %615, null
  br i1 %616, label %622, label %617

617:                                              ; preds = %614
  %618 = bitcast %"class.spvtools::opt::Instruction"* %615 to void (%"class.spvtools::opt::Instruction"*)***
  %619 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %618, align 8
  %620 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %619, i64 1
  %621 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %620, align 8
  call void %621(%"class.spvtools::opt::Instruction"* nonnull %615) #13
  br label %622

622:                                              ; preds = %617, %614
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %403)
  %623 = add nuw i32 %469, 1
  %624 = load i32, i32* %11, align 4
  %625 = icmp ult i32 %623, %624
  %626 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %43, align 8
  %627 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %626, i64 0, i32 4, i32 0, i32 0, i32 0
  %628 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %627, align 8
  %629 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %628) #13
  %630 = icmp eq i32 %629, 0
  br i1 %625, label %465, label %412

631:                                              ; preds = %748, %428
  %632 = phi i32 [ 0, %428 ], [ %749, %748 ]
  %633 = bitcast %"class.std::__1::unique_ptr.21"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %633) #13
  %634 = bitcast %"class.spvtools::opt::IRContext"** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %634) #13
  %635 = load i64, i64* %454, align 8
  %636 = bitcast %"class.spvtools::opt::IRContext"** %23 to i64*
  store i64 %635, i64* %636, align 8
  %637 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %637) #13
  store i32 254, i32* %24, align 4
  %638 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %638) #13
  store i32 0, i32* %25, align 4
  %639 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %639) #13
  store i32 0, i32* %26, align 4
  %640 = bitcast %"class.std::initializer_list.973"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %640) #13
  %641 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %641) #13
  %642 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %28, i64 0, i64 0
  %643 = bitcast %"class.spvtools::utils::SmallVector"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %643) #13
  %644 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %29, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %644, align 8
  %645 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %29, i64 0, i32 1
  %646 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %29, i64 0, i32 2
  %647 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %29, i64 0, i32 3, i64 0
  %648 = bitcast i32** %646 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %647, %"struct.std::__1::aligned_storage<4, 4>::type"** %648, align 8
  %649 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %29, i64 0, i32 4
  %650 = bitcast %"class.std::__1::unique_ptr.0"* %649 to i64*
  store i64 0, i64* %650, align 8
  %651 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %647 to i32*
  store i64 1, i64* %645, align 8
  store i32 %632, i32* %651, align 8
  %652 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %28, i64 0, i64 0, i32 0
  store i32 1, i32* %652, align 8
  %653 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %28, i64 0, i64 0, i32 1
  %654 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %653, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %654, align 8
  %655 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %28, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %655, align 8
  %656 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %28, i64 0, i64 0, i32 1, i32 2
  %657 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %28, i64 0, i64 0, i32 1, i32 3, i64 0
  %658 = bitcast i32** %656 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %657, %"struct.std::__1::aligned_storage<4, 4>::type"** %658, align 8
  %659 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %28, i64 0, i64 0, i32 1, i32 4
  %660 = bitcast %"class.std::__1::unique_ptr.0"* %659 to i64*
  store i64 0, i64* %660, align 8
  %661 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %653, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %29) #13
  %662 = getelementptr inbounds %"class.std::initializer_list.973", %"class.std::initializer_list.973"* %27, i64 0, i32 0
  store %"struct.spvtools::opt::Operand"* %642, %"struct.spvtools::opt::Operand"** %662, align 8
  %663 = getelementptr inbounds %"class.std::initializer_list.973", %"class.std::initializer_list.973"* %27, i64 0, i32 1
  store i64 1, i64* %663, align 8
  %664 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** nonnull dereferenceable(8) %23, i32* nonnull dereferenceable(4) %24, i32* nonnull dereferenceable(4) %25, i32* nonnull dereferenceable(4) %26, %"class.std::initializer_list.973"* nonnull dereferenceable(16) %27)
  %665 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %22, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* %664, %"class.spvtools::opt::Instruction"** %665, align 8
  %666 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* nonnull %21, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %22)
  %667 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %665, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %665, align 8
  %668 = icmp eq %"class.spvtools::opt::Instruction"* %667, null
  br i1 %668, label %674, label %669

669:                                              ; preds = %631
  %670 = bitcast %"class.spvtools::opt::Instruction"* %667 to void (%"class.spvtools::opt::Instruction"*)***
  %671 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %670, align 8
  %672 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %671, i64 1
  %673 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %672, align 8
  call void %673(%"class.spvtools::opt::Instruction"* nonnull %667) #13
  br label %674

674:                                              ; preds = %631, %669
  %675 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %28, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %675, align 8
  %676 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %28, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %677 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %676, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %676, align 8
  %678 = icmp eq %"class.std::__1::vector.3"* %677, null
  br i1 %678, label %765, label %754

679:                                              ; preds = %428, %748
  %680 = phi i64 [ %750, %748 ], [ 0, %428 ]
  %681 = phi i32 [ %749, %748 ], [ 0, %428 ]
  %682 = icmp eq i64 %680, 0
  br i1 %682, label %683, label %686

683:                                              ; preds = %679
  %684 = load i32*, i32** %385, align 8
  %685 = load i32, i32* %684, align 4
  br label %715

686:                                              ; preds = %679
  %687 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %688 = icmp eq i32 %104, %687
  br i1 %688, label %700, label %689

689:                                              ; preds = %686
  %690 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %691 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"* nonnull %21, i32 %690, i32 113, i32 %681)
  %692 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %691, i64 0, i32 4
  %693 = load i8, i8* %692, align 1, !range !6
  %694 = icmp eq i8 %693, 0
  br i1 %694, label %700, label %695

695:                                              ; preds = %689
  %696 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %691, i64 0, i32 3
  %697 = load i8, i8* %696, align 4, !range !6
  %698 = zext i8 %697 to i32
  %699 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %691, i32 %698) #13
  br label %700

700:                                              ; preds = %695, %689, %686
  %701 = phi i32 [ %681, %686 ], [ %699, %695 ], [ 0, %689 ]
  %702 = call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %703 = load i32*, i32** %385, align 8
  %704 = getelementptr inbounds i32, i32* %703, i64 %680
  %705 = load i32, i32* %704, align 4
  %706 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddBinaryOpEj6SpvOp_jj(%"class.spvtools::opt::InstructionBuilder"* nonnull %21, i32 %702, i32 128, i32 %701, i32 %705)
  %707 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %706, i64 0, i32 4
  %708 = load i8, i8* %707, align 1, !range !6
  %709 = icmp eq i8 %708, 0
  br i1 %709, label %715, label %710

710:                                              ; preds = %700
  %711 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %706, i64 0, i32 3
  %712 = load i8, i8* %711, align 4, !range !6
  %713 = zext i8 %712 to i32
  %714 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %706, i32 %713) #13
  br label %715

715:                                              ; preds = %710, %700, %683
  %716 = phi i32 [ %685, %683 ], [ %714, %710 ], [ 0, %700 ]
  %717 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %21, i32 0, i1 zeroext false) #13
  %718 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %717, i64 0, i32 4
  %719 = load i8, i8* %718, align 1, !range !6
  %720 = icmp eq i8 %719, 0
  br i1 %720, label %726, label %721

721:                                              ; preds = %715
  %722 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %717, i64 0, i32 3
  %723 = load i8, i8* %722, align 4, !range !6
  %724 = zext i8 %723 to i32
  %725 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %717, i32 %724) #13
  br label %726

726:                                              ; preds = %715, %721
  %727 = phi i32 [ %725, %721 ], [ 0, %715 ]
  %728 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder12AddTernaryOpEj6SpvOp_jjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %21, i32 %462, i32 65, i32 %461, i32 %727, i32 %716)
  %729 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %728, i64 0, i32 4
  %730 = load i8, i8* %729, align 1, !range !6
  %731 = icmp eq i8 %730, 0
  br i1 %731, label %737, label %732

732:                                              ; preds = %726
  %733 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %728, i64 0, i32 3
  %734 = load i8, i8* %733, align 4, !range !6
  %735 = zext i8 %734 to i32
  %736 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %728, i32 %735) #13
  br label %737

737:                                              ; preds = %726, %732
  %738 = phi i32 [ %736, %732 ], [ 0, %726 ]
  %739 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder10AddUnaryOpEj6SpvOp_j(%"class.spvtools::opt::InstructionBuilder"* nonnull %21, i32 %104, i32 61, i32 %738)
  %740 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %739, i64 0, i32 4
  %741 = load i8, i8* %740, align 1, !range !6
  %742 = icmp eq i8 %741, 0
  br i1 %742, label %748, label %743

743:                                              ; preds = %737
  %744 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %739, i64 0, i32 3
  %745 = load i8, i8* %744, align 4, !range !6
  %746 = zext i8 %745 to i32
  %747 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %739, i32 %746) #13
  br label %748

748:                                              ; preds = %737, %743
  %749 = phi i32 [ %747, %743 ], [ 0, %737 ]
  %750 = add nuw nsw i64 %680, 1
  %751 = load i32, i32* %11, align 4
  %752 = zext i32 %751 to i64
  %753 = icmp ult i64 %750, %752
  br i1 %753, label %679, label %631

754:                                              ; preds = %674
  %755 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %677, i64 0, i32 0, i32 0
  %756 = load i32*, i32** %755, align 8
  %757 = icmp eq i32* %756, null
  br i1 %757, label %763, label %758

758:                                              ; preds = %754
  %759 = ptrtoint i32* %756 to i64
  %760 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %677, i64 0, i32 0, i32 1
  %761 = bitcast i32** %760 to i64*
  store i64 %759, i64* %761, align 8
  %762 = bitcast i32* %756 to i8*
  call void @_ZdlPv(i8* %762) #12
  br label %763

763:                                              ; preds = %758, %754
  %764 = bitcast %"class.std::__1::vector.3"* %677 to i8*
  call void @_ZdlPv(i8* %764) #12
  br label %765

765:                                              ; preds = %674, %763
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %644, align 8
  %766 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %29, i64 0, i32 4, i32 0, i32 0, i32 0
  %767 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %766, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %766, align 8
  %768 = icmp eq %"class.std::__1::vector.3"* %767, null
  br i1 %768, label %780, label %769

769:                                              ; preds = %765
  %770 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %767, i64 0, i32 0, i32 0
  %771 = load i32*, i32** %770, align 8
  %772 = icmp eq i32* %771, null
  br i1 %772, label %778, label %773

773:                                              ; preds = %769
  %774 = ptrtoint i32* %771 to i64
  %775 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %767, i64 0, i32 0, i32 1
  %776 = bitcast i32** %775 to i64*
  store i64 %774, i64* %776, align 8
  %777 = bitcast i32* %771 to i8*
  call void @_ZdlPv(i8* %777) #12
  br label %778

778:                                              ; preds = %773, %769
  %779 = bitcast %"class.std::__1::vector.3"* %767 to i8*
  call void @_ZdlPv(i8* %779) #12
  br label %780

780:                                              ; preds = %765, %778
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %643) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %641) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %640) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %639) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %638) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %637) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %634) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %633) #13
  %781 = bitcast %"class.std::__1::unique_ptr.40"* %20 to i64*
  %782 = load i64, i64* %781, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %432, align 8
  %783 = bitcast %"class.std::__1::unique_ptr.40"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %783)
  %784 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %784, align 8
  %785 = bitcast i8* %382 to %"class.std::__1::vector.38"*
  %786 = getelementptr inbounds i8, i8* %366, i64 160
  %787 = bitcast i8* %786 to %"class.std::__1::unique_ptr.40"**
  %788 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %787, align 8
  %789 = inttoptr i64 %782 to i8**
  store i8* %366, i8** %789, align 8
  %790 = bitcast %"class.std::__1::unique_ptr.40"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %790) #13
  %791 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %6, i64 0, i32 0, i32 0, i32 0
  %792 = bitcast %"class.std::__1::unique_ptr.40"* %6 to i64*
  store i64 %782, i64* %792, align 8
  %793 = call %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"* %785, %"class.std::__1::unique_ptr.40"* %788, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %6) #13
  %794 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %791, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %791, align 8
  %795 = icmp eq %"class.spvtools::opt::BasicBlock"* %794, null
  br i1 %795, label %796, label %797

796:                                              ; preds = %780
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %790) #13
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %784, align 8
  br label %803

797:                                              ; preds = %780
  %798 = bitcast %"class.std::__1::unique_ptr.40"* %6 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %798, %"class.spvtools::opt::BasicBlock"* nonnull %794) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %790) #13
  %799 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %784, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %784, align 8
  %800 = icmp eq %"class.spvtools::opt::BasicBlock"* %799, null
  br i1 %800, label %803, label %801

801:                                              ; preds = %797
  %802 = bitcast %"class.std::__1::unique_ptr.40"* %7 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %802, %"class.spvtools::opt::BasicBlock"* nonnull %799) #13
  br label %803

803:                                              ; preds = %796, %797, %801
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %783)
  %804 = call i8* @_Znwm(i64 112) #12
  %805 = bitcast i8* %804 to %"class.spvtools::opt::Instruction"*
  %806 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %43, align 8
  %807 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %806, i64 0, i32 4, i32 0, i32 0, i32 0
  %808 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %807, align 8
  %809 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %808, i64 0, i32 2
  %810 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %809, align 8
  %811 = bitcast %"class.std::__1::vector"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %811) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %811, i8 0, i64 24, i1 false) #13
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %805, %"class.spvtools::opt::IRContext"* %810, i32 56, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %30) #13
  %812 = ptrtoint i8* %804 to i64
  %813 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 0
  %814 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %813, align 8
  %815 = icmp eq %"struct.spvtools::opt::Operand"* %814, null
  br i1 %815, label %846, label %816

816:                                              ; preds = %803
  %817 = bitcast %"struct.spvtools::opt::Operand"* %814 to i8*
  %818 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 1
  %819 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %818, align 8
  %820 = icmp eq %"struct.spvtools::opt::Operand"* %819, %814
  br i1 %820, label %844, label %821

821:                                              ; preds = %816, %839
  %822 = phi %"struct.spvtools::opt::Operand"* [ %823, %839 ], [ %819, %816 ]
  %823 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %822, i64 -1
  %824 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %822, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %824, align 8
  %825 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %822, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %826 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %825, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %825, align 8
  %827 = icmp eq %"class.std::__1::vector.3"* %826, null
  br i1 %827, label %839, label %828

828:                                              ; preds = %821
  %829 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %826, i64 0, i32 0, i32 0
  %830 = load i32*, i32** %829, align 8
  %831 = icmp eq i32* %830, null
  br i1 %831, label %837, label %832

832:                                              ; preds = %828
  %833 = ptrtoint i32* %830 to i64
  %834 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %826, i64 0, i32 0, i32 1
  %835 = bitcast i32** %834 to i64*
  store i64 %833, i64* %835, align 8
  %836 = bitcast i32* %830 to i8*
  call void @_ZdlPv(i8* %836) #12
  br label %837

837:                                              ; preds = %832, %828
  %838 = bitcast %"class.std::__1::vector.3"* %826 to i8*
  call void @_ZdlPv(i8* %838) #12
  br label %839

839:                                              ; preds = %837, %821
  %840 = icmp eq %"struct.spvtools::opt::Operand"* %823, %814
  br i1 %840, label %841, label %821

841:                                              ; preds = %839
  %842 = bitcast %"class.std::__1::vector"* %30 to i8**
  %843 = load i8*, i8** %842, align 8
  br label %844

844:                                              ; preds = %841, %816
  %845 = phi i8* [ %843, %841 ], [ %817, %816 ]
  store %"struct.spvtools::opt::Operand"* %814, %"struct.spvtools::opt::Operand"** %818, align 8
  call void @_ZdlPv(i8* %845) #12
  br label %846

846:                                              ; preds = %803, %844
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %811) #13
  %847 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %43, align 8
  %848 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %847, i64 0, i32 11
  %849 = load i32, i32* %848, align 8
  %850 = and i32 %849, 1
  %851 = icmp eq i32 %850, 0
  br i1 %851, label %852, label %876

852:                                              ; preds = %846
  %853 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %847, i64 0, i32 4, i32 0, i32 0, i32 0
  %854 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %853, align 8
  %855 = call i8* @_Znwm(i64 104) #12
  %856 = bitcast i8* %855 to %"class.spvtools::opt::analysis::DefUseManager"*
  %857 = getelementptr inbounds i8, i8* %855, i64 32
  %858 = bitcast i8* %857 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %855, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %858, align 4
  %859 = getelementptr inbounds i8, i8* %855, i64 48
  %860 = getelementptr inbounds i8, i8* %855, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %859, i8 0, i64 16, i1 false) #13
  %861 = bitcast i8* %860 to i8**
  store i8* %859, i8** %861, align 8
  %862 = getelementptr inbounds i8, i8* %855, i64 64
  %863 = getelementptr inbounds i8, i8* %855, i64 96
  %864 = bitcast i8* %863 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %862, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %864, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %856, %"class.spvtools::opt::Module"* %854) #13
  %865 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %847, i64 0, i32 6
  %866 = ptrtoint i8* %855 to i64
  %867 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %865, i64 0, i32 0, i32 0, i32 0
  %868 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %867, align 8
  %869 = bitcast %"class.std::__1::unique_ptr.62"* %865 to i64*
  store i64 %866, i64* %869, align 8
  %870 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %868, null
  br i1 %870, label %873, label %871

871:                                              ; preds = %852
  %872 = bitcast %"class.std::__1::unique_ptr.62"* %865 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %872, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %868) #13
  br label %873

873:                                              ; preds = %871, %852
  %874 = load i32, i32* %848, align 8
  %875 = or i32 %874, 1
  store i32 %875, i32* %848, align 8
  br label %876

876:                                              ; preds = %846, %873
  %877 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %847, i64 0, i32 6, i32 0, i32 0, i32 0
  %878 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %877, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %878, %"class.spvtools::opt::Instruction"* nonnull %805) #13
  %879 = getelementptr inbounds i8, i8* %366, i64 176
  %880 = bitcast i8* %879 to %"class.spvtools::opt::Instruction"**
  %881 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %880, align 8
  %882 = bitcast i8* %879 to i64*
  store i64 %812, i64* %882, align 8
  %883 = icmp eq %"class.spvtools::opt::Instruction"* %881, null
  br i1 %883, label %889, label %884

884:                                              ; preds = %876
  %885 = bitcast %"class.spvtools::opt::Instruction"* %881 to void (%"class.spvtools::opt::Instruction"*)***
  %886 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %885, align 8
  %887 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %886, i64 1
  %888 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %887, align 8
  call void %888(%"class.spvtools::opt::Instruction"* nonnull %881) #13
  br label %889

889:                                              ; preds = %876, %884
  %890 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %43, align 8
  %891 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %890, i64 0, i32 4, i32 0, i32 0, i32 0
  %892 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %891, align 8
  %893 = bitcast %"class.std::__1::unique_ptr.28"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %893) #13
  %894 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %5, i64 0, i32 0, i32 0, i32 0
  %895 = bitcast %"class.std::__1::unique_ptr.28"* %5 to i8**
  store i8* %366, i8** %895, align 8
  %896 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %892, i64 0, i32 15, i32 0, i32 1
  %897 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %896, align 8
  %898 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %892, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %899 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %898, align 8
  %900 = icmp ult %"class.std::__1::unique_ptr.28"* %897, %899
  br i1 %900, label %901, label %906

901:                                              ; preds = %889
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %894, align 8
  %902 = bitcast %"class.std::__1::unique_ptr.28"* %897 to i64*
  store i64 %383, i64* %902, align 8
  %903 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %897, i64 1
  %904 = ptrtoint %"class.std::__1::unique_ptr.28"* %903 to i64
  %905 = bitcast %"class.std::__1::unique_ptr.28"** %896 to i64*
  store i64 %904, i64* %905, align 8
  br label %908

906:                                              ; preds = %889
  %907 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %892, i64 0, i32 15
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt8FunctionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.26"* %907, %"class.std::__1::unique_ptr.28"* nonnull dereferenceable(8) %5) #13
  br label %908

908:                                              ; preds = %906, %901
  %909 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %894, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %894, align 8
  %910 = icmp eq %"class.spvtools::opt::Function"* %909, null
  br i1 %910, label %913, label %911

911:                                              ; preds = %908
  call void @_ZN8spvtools3opt8FunctionD2Ev(%"class.spvtools::opt::Function"* nonnull %909) #13
  %912 = bitcast %"class.spvtools::opt::Function"* %909 to i8*
  call void @_ZdlPv(i8* %912) #12
  br label %913

913:                                              ; preds = %911, %908
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %893) #13
  %914 = bitcast %"class.std::__1::tuple.1146"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %914) #13
  %915 = getelementptr inbounds %"class.std::__1::tuple.1146", %"class.std::__1::tuple.1146"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %915, align 8
  %916 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %916) #13
  %917 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %31, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1146"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %4) #13
  %918 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %917, 0
  %919 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %918, i64 2
  %920 = bitcast %"struct.std::__1::__hash_node_base.254"* %919 to %"struct.std::__1::pair"*
  %921 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %920, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %916) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %914) #13
  store i32 %47, i32* %921, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %451) #13
  %922 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %432, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %432, align 8
  %923 = icmp eq %"class.spvtools::opt::BasicBlock"* %922, null
  br i1 %923, label %926, label %924

924:                                              ; preds = %913
  %925 = bitcast %"class.std::__1::unique_ptr.40"* %20 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %925, %"class.spvtools::opt::BasicBlock"* nonnull %922) #13
  br label %926

926:                                              ; preds = %924, %913
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %431) #13
  %927 = load i32*, i32** %385, align 8
  %928 = icmp eq i32* %927, null
  br i1 %928, label %933, label %929

929:                                              ; preds = %926
  %930 = ptrtoint i32* %927 to i64
  %931 = bitcast i32** %386 to i64*
  store i64 %930, i64* %931, align 8
  %932 = bitcast i32* %927 to i8*
  call void @_ZdlPv(i8* %932) #12
  br label %933

933:                                              ; preds = %926, %929
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %384) #13
  %934 = getelementptr inbounds %"class.spvtools::opt::analysis::Function", %"class.spvtools::opt::analysis::Function"* %13, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %934, align 8
  %935 = getelementptr inbounds %"class.spvtools::opt::analysis::Function", %"class.spvtools::opt::analysis::Function"* %13, i64 0, i32 2, i32 0, i32 0
  %936 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %935, align 8
  %937 = icmp eq %"class.spvtools::opt::analysis::Type"** %936, null
  br i1 %937, label %943, label %938

938:                                              ; preds = %933
  %939 = ptrtoint %"class.spvtools::opt::analysis::Type"** %936 to i64
  %940 = getelementptr inbounds %"class.spvtools::opt::analysis::Function", %"class.spvtools::opt::analysis::Function"* %13, i64 0, i32 2, i32 0, i32 1
  %941 = bitcast %"class.spvtools::opt::analysis::Type"*** %940 to i64*
  store i64 %939, i64* %941, align 8
  %942 = bitcast %"class.spvtools::opt::analysis::Type"** %936 to i8*
  call void @_ZdlPv(i8* %942) #12
  br label %943

943:                                              ; preds = %938, %933
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %934, align 8
  %944 = getelementptr inbounds %"class.spvtools::opt::analysis::Function", %"class.spvtools::opt::analysis::Function"* %13, i64 0, i32 0, i32 1
  %945 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %944, i64 0, i32 0, i32 0
  %946 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %945, align 8
  %947 = icmp eq %"class.std::__1::vector.3"* %946, null
  br i1 %947, label %971, label %948

948:                                              ; preds = %943
  %949 = bitcast %"class.std::__1::vector.3"* %946 to i8*
  %950 = getelementptr inbounds %"class.spvtools::opt::analysis::Function", %"class.spvtools::opt::analysis::Function"* %13, i64 0, i32 0, i32 1, i32 0, i32 1
  %951 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %950, align 8
  %952 = icmp eq %"class.std::__1::vector.3"* %951, %946
  br i1 %952, label %969, label %953

953:                                              ; preds = %948, %964
  %954 = phi %"class.std::__1::vector.3"* [ %955, %964 ], [ %951, %948 ]
  %955 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %954, i64 -1
  %956 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %955, i64 0, i32 0, i32 0
  %957 = load i32*, i32** %956, align 8
  %958 = icmp eq i32* %957, null
  br i1 %958, label %964, label %959

959:                                              ; preds = %953
  %960 = ptrtoint i32* %957 to i64
  %961 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %954, i64 -1, i32 0, i32 1
  %962 = bitcast i32** %961 to i64*
  store i64 %960, i64* %962, align 8
  %963 = bitcast i32* %957 to i8*
  call void @_ZdlPv(i8* %963) #12
  br label %964

964:                                              ; preds = %959, %953
  %965 = icmp eq %"class.std::__1::vector.3"* %955, %946
  br i1 %965, label %966, label %953

966:                                              ; preds = %964
  %967 = bitcast %"class.std::__1::vector.463"* %944 to i8**
  %968 = load i8*, i8** %967, align 8
  br label %969

969:                                              ; preds = %966, %948
  %970 = phi i8* [ %968, %966 ], [ %949, %948 ]
  store %"class.std::__1::vector.3"* %946, %"class.std::__1::vector.3"** %950, align 8
  call void @_ZdlPv(i8* %970) #12
  br label %971

971:                                              ; preds = %943, %969
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %105) #13
  %972 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %86, align 8
  %973 = icmp eq %"class.spvtools::opt::analysis::Type"** %972, null
  br i1 %973, label %978, label %974

974:                                              ; preds = %971
  %975 = ptrtoint %"class.spvtools::opt::analysis::Type"** %972 to i64
  %976 = bitcast %"class.spvtools::opt::analysis::Type"*** %87 to i64*
  store i64 %975, i64* %976, align 8
  %977 = bitcast %"class.spvtools::opt::analysis::Type"** %972 to i8*
  call void @_ZdlPv(i8* %977) #12
  br label %978

978:                                              ; preds = %971, %974
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #13
  br label %979

979:                                              ; preds = %2, %978
  %980 = phi i32 [ %47, %978 ], [ %40, %2 ]
  ret i32 %980

981:                                              ; preds = %302
  %982 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %305, i64 0, i32 0, i32 0
  %983 = load i32*, i32** %982, align 8
  %984 = icmp eq i32* %983, null
  br i1 %984, label %990, label %985

985:                                              ; preds = %981
  %986 = ptrtoint i32* %983 to i64
  %987 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %305, i64 0, i32 0, i32 1
  %988 = bitcast i32** %987 to i64*
  store i64 %986, i64* %988, align 8
  %989 = bitcast i32* %983 to i8*
  call void @_ZdlPv(i8* %989) #12
  br label %990

990:                                              ; preds = %985, %981
  %991 = bitcast %"class.std::__1::vector.3"* %305 to i8*
  call void @_ZdlPv(i8* %991) #12
  br label %992

992:                                              ; preds = %990, %302
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8
  %993 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 4, i32 0, i32 0, i32 0
  %994 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %993, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %993, align 8
  %995 = icmp eq %"class.std::__1::vector.3"* %994, null
  br i1 %995, label %318, label %307
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNSt3__16vectorINS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEE(%"class.spvtools::opt::InstrumentPass"*, %"class.std::__1::vector.38"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::function.944", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %8, align 8
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #13
  store i32 -1431655766, i32* %3, align 4
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %7, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 4
  %16 = load i8, i8* %15, align 1, !range !6
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 3
  %20 = load i8, i8* %19, align 4, !range !6
  %21 = zext i8 %20 to i32
  %22 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %14, i32 %21) #13
  br label %23

23:                                               ; preds = %2, %18
  %24 = phi i32 [ %22, %18 ], [ 0, %2 ]
  store i32 %24, i32* %3, align 4
  %25 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #13
  store i32 -1431655766, i32* %4, align 4
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %9, i64 -1, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 4
  %31 = load i8, i8* %30, align 1, !range !6
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 3
  %35 = load i8, i8* %34, align 4, !range !6
  %36 = zext i8 %35 to i32
  %37 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %29, i32 %36) #13
  %38 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %26, align 8
  br label %39

39:                                               ; preds = %23, %33
  %40 = phi %"class.spvtools::opt::BasicBlock"* [ %38, %33 ], [ %27, %23 ]
  %41 = phi i32 [ %37, %33 ], [ 0, %23 ]
  store i32 %41, i32* %4, align 4
  %42 = bitcast %"class.std::__1::function.944"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #13
  %43 = getelementptr inbounds %"class.std::__1::function.944", %"class.std::__1::function.944"* %5, i64 0, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.std::__1::function.944", %"class.std::__1::function.944"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS7_10BasicBlockENS_14default_deleteISB_EEEENS_9allocatorISE_EEEEE3$_1S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %43, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_1FvjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %44, align 8
  %45 = tail call i8* @_Znwm(i64 24) #12, !noalias !54
  %46 = bitcast i8* %45 to i32**
  store i32* %3, i32** %46, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 8
  %48 = bitcast i8* %47 to i32**
  store i32* %4, i32** %48, align 8
  %49 = getelementptr inbounds i8, i8* %45, i64 16
  %50 = bitcast i8* %49 to %"class.spvtools::opt::InstrumentPass"**
  store %"class.spvtools::opt::InstrumentPass"* %0, %"class.spvtools::opt::InstrumentPass"** %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::function.944", %"class.std::__1::function.944"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %45, i8** %51, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %40, %"class.std::__1::function.944"* nonnull dereferenceable(32) %5) #13
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %44, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %39
  %57 = load i8*, i8** %51, align 8
  call void %54(i8* %57) #13
  br label %58

58:                                               ; preds = %39, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  ret void
}

declare void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.944"* dereferenceable(32)) local_unnamed_addr #4

declare i32 @_ZN8spvtools3opt8analysis11TypeManager17FindPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass20GetInputBufferTypeIdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call i32 @_ZN8spvtools3opt14InstrumentPass11GetUint64IdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  br label %9

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0)
  br label %9

9:                                                ; preds = %7, %5
  %10 = phi i32 [ %6, %5 ], [ %8, %7 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass11GetUint64IdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 20
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %70

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = trunc i32 %10 to i16
  %12 = icmp slt i16 %11, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 5
  %15 = tail call i8* @_Znwm(i64 240) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %16, %"class.std::__1::function"* dereferenceable(32) %14, %"class.spvtools::opt::IRContext"* %8) #13
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.480"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %20) #13
  %24 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %13
  %26 = load i32, i32* %9, align 8
  %27 = or i32 %26, 32768
  store i32 %27, i32* %9, align 8
  br label %28

28:                                               ; preds = %6, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %29, align 8
  %31 = bitcast %"class.spvtools::opt::analysis::Integer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 48, i1 false)
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::vector.463"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #13
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 2
  store i32 2, i32* %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 1
  store i32 64, i32* %36, align 4
  %37 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 2
  store i8 0, i8* %37, align 8
  %38 = bitcast %"class.spvtools::opt::analysis::Integer"* %2 to %"class.spvtools::opt::analysis::Type"*
  %39 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* nonnull %38) #13
  %40 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* %39) #13
  store i32 %40, i32* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %33, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %41, align 8
  %43 = icmp eq %"class.std::__1::vector.3"* %42, null
  br i1 %43, label %68, label %44

44:                                               ; preds = %28
  %45 = bitcast %"class.std::__1::vector.3"* %42 to i8*
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %47 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %46, align 8
  %48 = icmp eq %"class.std::__1::vector.3"* %47, %42
  br i1 %48, label %65, label %49

49:                                               ; preds = %44, %60
  %50 = phi %"class.std::__1::vector.3"* [ %51, %60 ], [ %47, %44 ]
  %51 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 -1
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %51, i64 0, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = icmp eq i32* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %49
  %56 = ptrtoint i32* %53 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 -1, i32 0, i32 1
  %58 = bitcast i32** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast i32* %53 to i8*
  call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %55, %49
  %61 = icmp eq %"class.std::__1::vector.3"* %51, %42
  br i1 %61, label %62, label %49

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::vector.463"* %33 to i8**
  %64 = load i8*, i8** %63, align 8
  br label %65

65:                                               ; preds = %62, %44
  %66 = phi i8* [ %64, %62 ], [ %45, %44 ]
  store %"class.std::__1::vector.3"* %42, %"class.std::__1::vector.3"** %46, align 8
  call void @_ZdlPv(i8* %66) #12
  %67 = load i32, i32* %3, align 8
  br label %68

68:                                               ; preds = %28, %65
  %69 = phi i32 [ %40, %28 ], [ %67, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #13
  br label %70

70:                                               ; preds = %68, %1
  %71 = phi i32 [ %69, %68 ], [ %4, %1 ]
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass19GetInputBufferPtrIdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %40

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = trunc i32 %9 to i16
  %11 = icmp slt i16 %10, 0
  br i1 %11, label %27, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 5
  %14 = tail call i8* @_Znwm(i64 240) #12
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %15, %"class.std::__1::function"* dereferenceable(32) %13, %"class.spvtools::opt::IRContext"* %7) #13
  %16 = ptrtoint i8* %14 to i64
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 20
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.480"* %17 to i64*
  store i64 %16, i64* %20, align 8
  %21 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %12
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %19) #13
  %23 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %19 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %22, %12
  %25 = load i32, i32* %8, align 8
  %26 = or i32 %25, 32768
  store i32 %26, i32* %8, align 8
  br label %27

27:                                               ; preds = %5, %24
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 20, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 8
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = tail call i32 @_ZN8spvtools3opt14InstrumentPass11GetUint64IdEv(%"class.spvtools::opt::InstrumentPass"* %0) #13
  br label %37

35:                                               ; preds = %27
  %36 = tail call i32 @_ZN8spvtools3opt14InstrumentPass9GetUintIdEv(%"class.spvtools::opt::InstrumentPass"* %0) #13
  br label %37

37:                                               ; preds = %33, %35
  %38 = phi i32 [ %34, %33 ], [ %36, %35 ]
  %39 = tail call i32 @_ZN8spvtools3opt8analysis11TypeManager17FindPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"* %29, i32 %38, i32 12) #13
  store i32 %39, i32* %2, align 4
  br label %40

40:                                               ; preds = %37, %1
  %41 = phi i32 [ %39, %37 ], [ %3, %1 ]
  ret i32 %41
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass22GetOutputBufferBindingEv(%"class.spvtools::opt::InstrumentPass"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  %5 = select i1 %4, i32 3, i32 0
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass21GetInputBufferBindingEv(%"class.spvtools::opt::InstrumentPass"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  %5 = select i1 %4, i32 2, i32 0
  %6 = icmp eq i32 %3, 0
  %7 = select i1 %6, i32 1, i32 %5
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt14InstrumentPass24GetUintXRuntimeArrayTypeEjPPNS0_8analysis4TypeE(%"class.spvtools::opt::InstrumentPass"* nocapture readonly, i32, %"class.spvtools::opt::analysis::Type"** nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %5 = alloca %"class.spvtools::opt::analysis::RuntimeArray", align 8
  %6 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %2, align 8
  %7 = icmp eq %"class.spvtools::opt::analysis::Type"* %6, null
  br i1 %7, label %8, label %136

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %39

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = bitcast %"class.spvtools::opt::Module"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call i8* @_Znwm(i64 48) #12
  %20 = bitcast i8* %19 to %"class.spvtools::opt::analysis::DecorationManager"*
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 40
  %24 = bitcast i8* %23 to i64*
  store i64 %18, i64* %24, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %20) #13
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 7
  %26 = ptrtoint i8* %19 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %25, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.122"* %25 to i64*
  store i64 %26, i64* %29, align 8
  %30 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %15
  %32 = bitcast %"class.std::__1::unique_ptr.122"* %25 to %"struct.std::__1::default_delete.150"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %32, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %28) #13
  br label %33

33:                                               ; preds = %31, %15
  %34 = load i32, i32* %11, align 8
  %35 = or i32 %34, 4
  store i32 %35, i32* %11, align 8
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %8, %33
  %40 = phi i32 [ %12, %8 ], [ %38, %33 ]
  %41 = phi %"class.spvtools::opt::IRContext"* [ %10, %8 ], [ %36, %33 ]
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 7, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %42, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 11
  %45 = trunc i32 %40 to i16
  %46 = icmp slt i16 %45, 0
  br i1 %46, label %62, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 5
  %49 = tail call i8* @_Znwm(i64 240) #12
  %50 = bitcast i8* %49 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %50, %"class.std::__1::function"* dereferenceable(32) %48, %"class.spvtools::opt::IRContext"* %41) #13
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 20
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %53, align 8
  %55 = bitcast %"class.std::__1::unique_ptr.480"* %52 to i64*
  store i64 %51, i64* %55, align 8
  %56 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %54, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %47
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %54) #13
  %58 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %54 to i8*
  tail call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %57, %47
  %60 = load i32, i32* %44, align 8
  %61 = or i32 %60, 32768
  store i32 %61, i32* %44, align 8
  br label %62

62:                                               ; preds = %39, %59
  %63 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 20, i32 0, i32 0, i32 0
  %64 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %63, align 8
  %65 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %65) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 48, i1 false)
  %66 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1
  %68 = bitcast %"class.std::__1::vector.463"* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #13
  %69 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 2
  store i32 2, i32* %69, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 1
  store i32 %1, i32* %70, align 4
  %71 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 2
  store i8 0, i8* %71, align 8
  %72 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to %"class.spvtools::opt::analysis::Type"*
  %73 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %64, %"class.spvtools::opt::analysis::Type"* nonnull %72) #13
  %74 = bitcast %"class.spvtools::opt::analysis::RuntimeArray"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %74) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 48, i1 false)
  call void @_ZN8spvtools3opt8analysis12RuntimeArrayC1EPKNS1_4TypeE(%"class.spvtools::opt::analysis::RuntimeArray"* nonnull %5, %"class.spvtools::opt::analysis::Type"* %73) #13
  %75 = bitcast %"class.spvtools::opt::analysis::RuntimeArray"* %5 to %"class.spvtools::opt::analysis::Type"*
  %76 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %64, %"class.spvtools::opt::analysis::Type"* nonnull %75) #13
  store %"class.spvtools::opt::analysis::Type"* %76, %"class.spvtools::opt::analysis::Type"** %2, align 8
  %77 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %64, %"class.spvtools::opt::analysis::Type"* %76) #13
  %78 = lshr i32 %1, 3
  call void @_ZN8spvtools3opt8analysis17DecorationManager16AddDecorationValEjjj(%"class.spvtools::opt::analysis::DecorationManager"* %43, i32 %77, i32 6, i32 %78) #13
  %79 = getelementptr inbounds %"class.spvtools::opt::analysis::RuntimeArray", %"class.spvtools::opt::analysis::RuntimeArray"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::analysis::RuntimeArray", %"class.spvtools::opt::analysis::RuntimeArray"* %5, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %81, align 8
  %83 = icmp eq %"class.std::__1::vector.3"* %82, null
  br i1 %83, label %107, label %84

84:                                               ; preds = %62
  %85 = bitcast %"class.std::__1::vector.3"* %82 to i8*
  %86 = getelementptr inbounds %"class.spvtools::opt::analysis::RuntimeArray", %"class.spvtools::opt::analysis::RuntimeArray"* %5, i64 0, i32 0, i32 1, i32 0, i32 1
  %87 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %86, align 8
  %88 = icmp eq %"class.std::__1::vector.3"* %87, %82
  br i1 %88, label %105, label %89

89:                                               ; preds = %84, %100
  %90 = phi %"class.std::__1::vector.3"* [ %91, %100 ], [ %87, %84 ]
  %91 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %90, i64 -1
  %92 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %91, i64 0, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = icmp eq i32* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %89
  %96 = ptrtoint i32* %93 to i64
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %90, i64 -1, i32 0, i32 1
  %98 = bitcast i32** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = bitcast i32* %93 to i8*
  call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %95, %89
  %101 = icmp eq %"class.std::__1::vector.3"* %91, %82
  br i1 %101, label %102, label %89

102:                                              ; preds = %100
  %103 = bitcast %"class.std::__1::vector.463"* %80 to i8**
  %104 = load i8*, i8** %103, align 8
  br label %105

105:                                              ; preds = %102, %84
  %106 = phi i8* [ %104, %102 ], [ %85, %84 ]
  store %"class.std::__1::vector.3"* %82, %"class.std::__1::vector.3"** %86, align 8
  call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %62, %105
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %74) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %108 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %67, i64 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %134, label %111

111:                                              ; preds = %107
  %112 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  %113 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %114 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %113, align 8
  %115 = icmp eq %"class.std::__1::vector.3"* %114, %109
  br i1 %115, label %132, label %116

116:                                              ; preds = %111, %127
  %117 = phi %"class.std::__1::vector.3"* [ %118, %127 ], [ %114, %111 ]
  %118 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %117, i64 -1
  %119 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %118, i64 0, i32 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %116
  %123 = ptrtoint i32* %120 to i64
  %124 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %117, i64 -1, i32 0, i32 1
  %125 = bitcast i32** %124 to i64*
  store i64 %123, i64* %125, align 8
  %126 = bitcast i32* %120 to i8*
  call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %122, %116
  %128 = icmp eq %"class.std::__1::vector.3"* %118, %109
  br i1 %128, label %129, label %116

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector.463"* %67 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %111
  %133 = phi i8* [ %131, %129 ], [ %112, %111 ]
  store %"class.std::__1::vector.3"* %109, %"class.std::__1::vector.3"** %113, align 8
  call void @_ZdlPv(i8* %133) #12
  br label %134

134:                                              ; preds = %107, %132
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %65) #13
  %135 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %2, align 8
  br label %136

136:                                              ; preds = %134, %3
  %137 = phi %"class.spvtools::opt::analysis::Type"* [ %135, %134 ], [ %6, %3 ]
  ret %"class.spvtools::opt::analysis::Type"* %137
}

declare void @_ZN8spvtools3opt8analysis12RuntimeArrayC1EPKNS1_4TypeE(%"class.spvtools::opt::analysis::RuntimeArray"*, %"class.spvtools::opt::analysis::Type"*) unnamed_addr #4

declare i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis17DecorationManager16AddDecorationValEjjj(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt14InstrumentPass23GetUintRuntimeArrayTypeEj(%"class.spvtools::opt::InstrumentPass"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 64
  %4 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 26
  %5 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 27
  %6 = select i1 %3, %"class.spvtools::opt::analysis::Type"** %4, %"class.spvtools::opt::analysis::Type"** %5
  %7 = tail call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt14InstrumentPass24GetUintXRuntimeArrayTypeEjPPNS0_8analysis4TypeE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %1, %"class.spvtools::opt::analysis::Type"** %6)
  ret %"class.spvtools::opt::analysis::Type"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14InstrumentPass19AddStorageBufferExtEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 24
  %4 = load i8, i8* %3, align 8, !range !6
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %98

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %10, align 8
  %12 = icmp eq %"class.spvtools::opt::FeatureManager"* %11, null
  br i1 %12, label %13, label %51

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 1
  %15 = tail call i8* @_Znwm(i64 48) #12
  %16 = bitcast i8* %15 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %14, %"class.spvtools::AssemblyGrammar"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 40, i1 false) #13
  %18 = ptrtoint i8* %15 to i64
  %19 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %10, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.152"* %9 to i64*
  store i64 %18, i64* %20, align 8
  %21 = icmp eq %"class.spvtools::opt::FeatureManager"* %19, null
  %22 = bitcast i8* %15 to %"class.spvtools::opt::FeatureManager"*
  br i1 %21, label %46, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %19, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %25 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %24, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %24, align 8
  %26 = icmp eq %"class.std::__1::set.158"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %25, i64 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %25, i64 0, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node.1091"**
  %31 = load %"class.std::__1::__tree_node.1091"*, %"class.std::__1::__tree_node.1091"** %30, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %28, %"class.std::__1::__tree_node.1091"* %31) #13
  %32 = bitcast %"class.std::__1::set.158"* %25 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %27, %23
  %34 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %19, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %34, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %34, align 8
  %36 = icmp eq %"class.std::__1::set.158"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %35, i64 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %35, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node.1091"**
  %41 = load %"class.std::__1::__tree_node.1091"*, %"class.std::__1::__tree_node.1091"** %40, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %38, %"class.std::__1::__tree_node.1091"* %41) #13
  %42 = bitcast %"class.std::__1::set.158"* %35 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %37, %33
  %44 = bitcast %"class.spvtools::opt::FeatureManager"* %19 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  %45 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %10, align 8
  br label %46

46:                                               ; preds = %43, %13
  %47 = phi %"class.spvtools::opt::FeatureManager"* [ %45, %43 ], [ %22, %13 ]
  %48 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %48, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* %47, %"class.spvtools::opt::Module"* %49) #13
  %50 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %10, align 8
  br label %51

51:                                               ; preds = %6, %46
  %52 = phi %"class.spvtools::opt::FeatureManager"* [ %11, %6 ], [ %50, %46 ]
  %53 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %52, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %54 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %53, align 8
  %55 = icmp eq %"class.std::__1::set.158"* %54, null
  br i1 %55, label %82, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %54, i64 0, i32 0, i32 1, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.std::__1::__tree_node.1091"**
  %59 = load %"class.std::__1::__tree_node.1091"*, %"class.std::__1::__tree_node.1091"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node.1091"* %59, null
  br i1 %60, label %82, label %61

61:                                               ; preds = %56, %61
  %62 = phi %"class.std::__1::__tree_end_node"* [ %72, %61 ], [ %57, %56 ]
  %63 = phi %"class.std::__1::__tree_node.1091"* [ %73, %61 ], [ %59, %56 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.1091", %"class.std::__1::__tree_node.1091"* %63, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp ult i32 %65, 66
  %67 = getelementptr inbounds %"class.std::__1::__tree_node.1091", %"class.std::__1::__tree_node.1091"* %63, i64 0, i32 0, i32 1
  %68 = bitcast %"class.std::__1::__tree_node_base"** %67 to %"class.std::__1::__tree_node.1091"**
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.1091", %"class.std::__1::__tree_node.1091"* %63, i64 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::__tree_node.1091"* %63 to %"class.std::__1::__tree_node.1091"**
  %71 = select i1 %66, %"class.std::__1::__tree_node.1091"** %68, %"class.std::__1::__tree_node.1091"** %70
  %72 = select i1 %66, %"class.std::__1::__tree_end_node"* %62, %"class.std::__1::__tree_end_node"* %69
  %73 = load %"class.std::__1::__tree_node.1091"*, %"class.std::__1::__tree_node.1091"** %71, align 8
  %74 = icmp eq %"class.std::__1::__tree_node.1091"* %73, null
  br i1 %74, label %75, label %61

75:                                               ; preds = %61
  %76 = icmp eq %"class.std::__1::__tree_end_node"* %72, %57
  br i1 %76, label %82, label %77

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node.1091"*
  %79 = getelementptr inbounds %"class.std::__1::__tree_node.1091", %"class.std::__1::__tree_node.1091"* %78, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp ult i32 %80, 67
  br i1 %81, label %97, label %82

82:                                               ; preds = %77, %75, %56, %51
  %83 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %84 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #13
  %85 = tail call i8* @_Znwm(i64 48) #12
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %85, i8** %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %88, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %85, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i64 36, i1 false) #13
  %89 = getelementptr inbounds i8, i8* %85, i64 36
  store i8 0, i8* %89, align 1
  call void @_ZN8spvtools3opt9IRContext12AddExtensionERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::IRContext"* %83, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2)
  %90 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %82
  %95 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %82, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #13
  br label %97

97:                                               ; preds = %77, %96
  store i8 1, i8* %3, align 8
  br label %98

98:                                               ; preds = %1, %97
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext12AddExtensionERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.spvtools::opt::IRContext"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = add i64 %13, 4
  %15 = lshr i64 %14, 2
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %2
  %18 = and i64 %14, -4
  %19 = tail call i8* @_Znwm(i64 %18) #12
  %20 = bitcast i8* %19 to i32*
  %21 = getelementptr inbounds i32, i32* %20, i64 %15
  %22 = add i64 %13, 4
  %23 = and i64 %22, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 0, i64 %23, i1 false)
  %24 = ptrtoint i8* %19 to i64
  %25 = ptrtoint i32* %21 to i64
  br label %26

26:                                               ; preds = %2, %17
  %27 = phi i64 [ 0, %2 ], [ %25, %17 ]
  %28 = phi i64 [ 0, %2 ], [ %24, %17 ]
  %29 = inttoptr i64 %28 to i32*
  %30 = inttoptr i64 %28 to i8*
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %34 = select i1 %9, i8* %32, i8* %33
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 1 %34, i64 %13, i1 false)
  %35 = tail call i8* @_Znwm(i64 112) #12
  %36 = bitcast i8* %35 to %"class.spvtools::opt::Instruction"*
  %37 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13
  %38 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %38) #13
  %39 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %44 = bitcast i32** %42 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %43, %"struct.std::__1::aligned_storage<4, 4>::type"** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %46 = bitcast %"class.std::__1::unique_ptr.0"* %45 to i64*
  store i64 0, i64* %46, align 8
  %47 = sub i64 %27, %28
  %48 = ashr exact i64 %47, 2
  %49 = icmp ugt i64 %48, 2
  %50 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %43 to i32*
  br i1 %49, label %51, label %78

51:                                               ; preds = %26
  %52 = call i8* @_Znwm(i64 24) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #13
  %53 = icmp eq i64 %47, 0
  br i1 %53, label %76, label %54

54:                                               ; preds = %51
  %55 = icmp ugt i64 %48, 4611686018427387903
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = bitcast i8* %52 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %57) #14
  unreachable

58:                                               ; preds = %54
  %59 = call i8* @_Znwm(i64 %47) #12
  %60 = bitcast i8* %59 to i32*
  %61 = getelementptr inbounds i8, i8* %52, i64 8
  %62 = bitcast i8* %61 to i8**
  store i8* %59, i8** %62, align 8
  %63 = bitcast i8* %52 to i8**
  store i8* %59, i8** %63, align 8
  %64 = getelementptr inbounds i32, i32* %60, i64 %48
  %65 = getelementptr inbounds i8, i8* %52, i64 16
  %66 = bitcast i8* %65 to i32**
  store i32* %64, i32** %66, align 8
  %67 = bitcast i8* %61 to i64*
  %68 = ptrtoint i8* %59 to i64
  %69 = icmp sgt i64 %47, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %58
  %71 = lshr exact i64 %47, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %59, i8* align 4 %30, i64 %47, i1 false) #13
  %72 = getelementptr inbounds i32, i32* %60, i64 %71
  %73 = ptrtoint i32* %72 to i64
  br label %74

74:                                               ; preds = %70, %58
  %75 = phi i64 [ %73, %70 ], [ %68, %58 ]
  store i64 %75, i64* %67, align 8
  br label %76

76:                                               ; preds = %74, %51
  %77 = ptrtoint i8* %52 to i64
  store i64 %77, i64* %46, align 8
  br label %101

78:                                               ; preds = %26
  store i64 %48, i64* %41, align 8
  %79 = icmp eq i64 %47, 0
  br i1 %79, label %101, label %80

80:                                               ; preds = %78
  %81 = load i32, i32* %29, align 4
  store i32 %81, i32* %50, align 8
  %82 = icmp ugt i64 %48, 1
  br i1 %82, label %83, label %101

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 1
  %85 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %84 to i32*
  %86 = getelementptr inbounds i32, i32* %29, i64 1
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %85, align 4
  %88 = load i64, i64* %41, align 8
  %89 = icmp ugt i64 %88, 2
  br i1 %89, label %90, label %101

90:                                               ; preds = %83, %90
  %91 = phi i64 [ %98, %90 ], [ 2, %83 ]
  %92 = phi i32 [ %97, %90 ], [ 2, %83 ]
  %93 = load i32*, i32** %42, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 %91
  %95 = getelementptr inbounds i32, i32* %29, i64 %91
  %96 = load i32, i32* %95, align 4
  store i32 %96, i32* %94, align 4
  %97 = add i32 %92, 1
  %98 = zext i32 %97 to i64
  %99 = load i64, i64* %41, align 8
  %100 = icmp ugt i64 %99, %98
  br i1 %100, label %90, label %101

101:                                              ; preds = %90, %83, %80, %76, %78
  %102 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 0
  store i32 10, i32* %102, align 8
  %103 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1
  %104 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %103, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %104, align 8
  %105 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %105, align 8
  %106 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1, i32 2
  %107 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1, i32 3, i64 0
  %108 = bitcast i32** %106 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %107, %"struct.std::__1::aligned_storage<4, 4>::type"** %108, align 8
  %109 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1, i32 4
  %110 = bitcast %"class.std::__1::unique_ptr.0"* %109 to i64*
  store i64 0, i64* %110, align 8
  %111 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %103, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #13
  %112 = call i8* @_Znwm(i64 48) #12
  %113 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %114 = bitcast %"class.std::__1::vector"* %3 to i8**
  store i8* %112, i8** %114, align 8
  %115 = getelementptr inbounds i8, i8* %112, i64 48
  %116 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %117 = bitcast %"struct.spvtools::opt::Operand"** %116 to i8**
  store i8* %115, i8** %117, align 8
  %118 = bitcast i8* %112 to i32*
  %119 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 0
  %120 = load i32, i32* %119, align 8
  store i32 %120, i32* %118, align 8
  %121 = getelementptr inbounds i8, i8* %112, i64 8
  %122 = bitcast i8* %121 to %"class.spvtools::utils::SmallVector"*
  %123 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1
  %124 = bitcast i8* %121 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %124, align 8
  %125 = getelementptr inbounds i8, i8* %112, i64 16
  %126 = bitcast i8* %125 to i64*
  store i64 0, i64* %126, align 8
  %127 = getelementptr inbounds i8, i8* %112, i64 24
  %128 = getelementptr inbounds i8, i8* %112, i64 32
  %129 = bitcast i8* %127 to i8**
  store i8* %128, i8** %129, align 8
  %130 = getelementptr inbounds i8, i8* %112, i64 40
  %131 = bitcast i8* %130 to i64*
  store i64 0, i64* %131, align 8
  %132 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %122, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %123) #13
  %133 = getelementptr inbounds i8, i8* %112, i64 48
  %134 = bitcast %"struct.spvtools::opt::Operand"** %113 to i64*
  %135 = ptrtoint i8* %133 to i64
  store i64 %135, i64* %134, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %36, %"class.spvtools::opt::IRContext"* %0, i32 10, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %3) #13
  %136 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %137 = load i32, i32* %136, align 8
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %101
  %141 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %142 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %141, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %142, %"class.spvtools::opt::Instruction"* nonnull %36) #13
  br label %143

143:                                              ; preds = %140, %101
  %144 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %145 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %144, align 8
  %146 = icmp eq %"class.spvtools::opt::FeatureManager"* %145, null
  br i1 %146, label %148, label %147

147:                                              ; preds = %143
  call void @_ZN8spvtools3opt14FeatureManager12AddExtensionEPNS0_11InstructionE(%"class.spvtools::opt::FeatureManager"* nonnull %145, %"class.spvtools::opt::Instruction"* nonnull %36) #13
  br label %148

148:                                              ; preds = %147, %143
  %149 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %149, align 8
  %151 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %150, i64 0, i32 4, i32 0, i32 1
  %152 = getelementptr inbounds i8, i8* %35, i64 8
  %153 = bitcast i8* %152 to %"class.spvtools::opt::Instruction"**
  %154 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %153, align 8
  %155 = icmp eq %"class.spvtools::opt::Instruction"* %154, null
  br i1 %155, label %168, label %156

156:                                              ; preds = %148
  %157 = getelementptr inbounds i8, i8* %35, i64 16
  %158 = bitcast i8* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %154, i64 0, i32 0, i32 2
  %161 = bitcast %"class.spvtools::opt::Instruction"** %160 to i64*
  store i64 %159, i64* %161, align 8
  %162 = bitcast i8* %152 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast i8* %157 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %165 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %164, align 8
  %166 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %165, i64 0, i32 1
  %167 = bitcast %"class.spvtools::opt::Instruction"** %166 to i64*
  store i64 %163, i64* %167, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 16, i1 false) #13
  br label %168

168:                                              ; preds = %148, %156
  store %"class.spvtools::opt::Instruction"* %151, %"class.spvtools::opt::Instruction"** %153, align 8
  %169 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %150, i64 0, i32 4, i32 0, i32 1, i32 0, i32 2
  %170 = bitcast %"class.spvtools::opt::Instruction"** %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds i8, i8* %35, i64 16
  %173 = bitcast i8* %172 to i64*
  store i64 %171, i64* %173, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %169 to i8**
  store i8* %35, i8** %174, align 8
  %175 = bitcast i8* %172 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %176 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %175, align 8
  %177 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %176, i64 0, i32 1
  %178 = bitcast %"class.spvtools::opt::Instruction"** %177 to i8**
  store i8* %35, i8** %178, align 8
  %179 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %180 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %179, align 8
  %181 = icmp eq %"struct.spvtools::opt::Operand"* %180, null
  br i1 %181, label %210, label %182

182:                                              ; preds = %168
  %183 = bitcast %"struct.spvtools::opt::Operand"* %180 to i8*
  %184 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %113, align 8
  %185 = icmp eq %"struct.spvtools::opt::Operand"* %184, %180
  br i1 %185, label %208, label %186

186:                                              ; preds = %182, %204
  %187 = phi %"struct.spvtools::opt::Operand"* [ %188, %204 ], [ %184, %182 ]
  %188 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %187, i64 -1
  %189 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %187, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %189, align 8
  %190 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %187, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %191 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %190, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %190, align 8
  %192 = icmp eq %"class.std::__1::vector.3"* %191, null
  br i1 %192, label %204, label %193

193:                                              ; preds = %186
  %194 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %191, i64 0, i32 0, i32 0
  %195 = load i32*, i32** %194, align 8
  %196 = icmp eq i32* %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %193
  %198 = ptrtoint i32* %195 to i64
  %199 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %191, i64 0, i32 0, i32 1
  %200 = bitcast i32** %199 to i64*
  store i64 %198, i64* %200, align 8
  %201 = bitcast i32* %195 to i8*
  call void @_ZdlPv(i8* %201) #12
  br label %202

202:                                              ; preds = %197, %193
  %203 = bitcast %"class.std::__1::vector.3"* %191 to i8*
  call void @_ZdlPv(i8* %203) #12
  br label %204

204:                                              ; preds = %202, %186
  %205 = icmp eq %"struct.spvtools::opt::Operand"* %188, %180
  br i1 %205, label %206, label %186

206:                                              ; preds = %204
  %207 = load i8*, i8** %114, align 8
  br label %208

208:                                              ; preds = %206, %182
  %209 = phi i8* [ %207, %206 ], [ %183, %182 ]
  store %"struct.spvtools::opt::Operand"* %180, %"struct.spvtools::opt::Operand"** %113, align 8
  call void @_ZdlPv(i8* %209) #12
  br label %210

210:                                              ; preds = %168, %208
  %211 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %211, align 8
  %212 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %213 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %212, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %212, align 8
  %214 = icmp eq %"class.std::__1::vector.3"* %213, null
  br i1 %214, label %226, label %215

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %213, i64 0, i32 0, i32 0
  %217 = load i32*, i32** %216, align 8
  %218 = icmp eq i32* %217, null
  br i1 %218, label %224, label %219

219:                                              ; preds = %215
  %220 = ptrtoint i32* %217 to i64
  %221 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %213, i64 0, i32 0, i32 1
  %222 = bitcast i32** %221 to i64*
  store i64 %220, i64* %222, align 8
  %223 = bitcast i32* %217 to i8*
  call void @_ZdlPv(i8* %223) #12
  br label %224

224:                                              ; preds = %219, %215
  %225 = bitcast %"class.std::__1::vector.3"* %213 to i8*
  call void @_ZdlPv(i8* %225) #12
  br label %226

226:                                              ; preds = %210, %224
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %227 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %228 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %227, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %227, align 8
  %229 = icmp eq %"class.std::__1::vector.3"* %228, null
  br i1 %229, label %241, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %228, i64 0, i32 0, i32 0
  %232 = load i32*, i32** %231, align 8
  %233 = icmp eq i32* %232, null
  br i1 %233, label %239, label %234

234:                                              ; preds = %230
  %235 = ptrtoint i32* %232 to i64
  %236 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %228, i64 0, i32 0, i32 1
  %237 = bitcast i32** %236 to i64*
  store i64 %235, i64* %237, align 8
  %238 = bitcast i32* %232 to i8*
  call void @_ZdlPv(i8* %238) #12
  br label %239

239:                                              ; preds = %234, %230
  %240 = bitcast %"class.std::__1::vector.3"* %228 to i8*
  call void @_ZdlPv(i8* %240) #12
  br label %241

241:                                              ; preds = %226, %239
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13
  %242 = icmp eq i64 %28, 0
  br i1 %242, label %244, label %243

243:                                              ; preds = %241
  call void @_ZdlPv(i8* %30) #12
  br label %244

244:                                              ; preds = %241, %243
  ret void
}

declare void @_ZN8spvtools3opt8analysis6StructC1ERKNSt3__16vectorIPKNS1_4TypeENS3_9allocatorIS7_EEEE(%"class.spvtools::opt::analysis::Struct"*, %"class.std::__1::vector.956"* dereferenceable(24)) unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis17DecorationManager13AddDecorationEjj(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis17DecorationManager19AddMemberDecorationEjjjj(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

declare void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass16GetInputBufferIdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::analysis::Struct", align 8
  %3 = alloca %"class.std::__1::vector.956", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"struct.spvtools::opt::Operand", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 14
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %420

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %14 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 11
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %43

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %21 = bitcast %"class.spvtools::opt::Module"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = tail call i8* @_Znwm(i64 48) #12
  %24 = bitcast i8* %23 to %"class.spvtools::opt::analysis::DecorationManager"*
  %25 = getelementptr inbounds i8, i8* %23, i64 32
  %26 = bitcast i8* %25 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %23, i64 40
  %28 = bitcast i8* %27 to i64*
  store i64 %22, i64* %28, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %24) #13
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 7
  %30 = ptrtoint i8* %23 to i64
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %29, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.122"* %29 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %32, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %19
  %36 = bitcast %"class.std::__1::unique_ptr.122"* %29 to %"struct.std::__1::default_delete.150"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %36, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %32) #13
  br label %37

37:                                               ; preds = %35, %19
  %38 = load i32, i32* %15, align 8
  %39 = or i32 %38, 4
  store i32 %39, i32* %15, align 8
  %40 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 11
  %42 = load i32, i32* %41, align 8
  br label %43

43:                                               ; preds = %12, %37
  %44 = phi i32 [ %16, %12 ], [ %42, %37 ]
  %45 = phi %"class.spvtools::opt::IRContext"* [ %14, %12 ], [ %40, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 7, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %46, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 11
  %49 = trunc i32 %44 to i16
  %50 = icmp slt i16 %49, 0
  br i1 %50, label %66, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 5
  %53 = tail call i8* @_Znwm(i64 240) #12
  %54 = bitcast i8* %53 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %54, %"class.std::__1::function"* dereferenceable(32) %52, %"class.spvtools::opt::IRContext"* %45) #13
  %55 = ptrtoint i8* %53 to i64
  %56 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 20
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %57, align 8
  %59 = bitcast %"class.std::__1::unique_ptr.480"* %56 to i64*
  store i64 %55, i64* %59, align 8
  %60 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %58, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %51
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %58) #13
  %62 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %58 to i8*
  tail call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %61, %51
  %64 = load i32, i32* %48, align 8
  %65 = or i32 %64, 32768
  store i32 %65, i32* %48, align 8
  br label %66

66:                                               ; preds = %43, %63
  %67 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 20, i32 0, i32 0, i32 0
  %68 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 8
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 1
  %72 = select i1 %71, i32 64, i32 32
  %73 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 26
  %74 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 27
  %75 = select i1 %71, %"class.spvtools::opt::analysis::Type"** %73, %"class.spvtools::opt::analysis::Type"** %74
  %76 = tail call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt14InstrumentPass24GetUintXRuntimeArrayTypeEjPPNS0_8analysis4TypeE(%"class.spvtools::opt::InstrumentPass"* %0, i32 %72, %"class.spvtools::opt::analysis::Type"** %75) #13
  %77 = bitcast %"class.spvtools::opt::analysis::Struct"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %77) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 88, i1 false)
  %78 = bitcast %"class.std::__1::vector.956"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #13
  %79 = tail call i8* @_Znwm(i64 8) #12
  %80 = bitcast i8* %79 to %"class.spvtools::opt::analysis::Type"**
  %81 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %3, i64 0, i32 0, i32 1
  %82 = bitcast %"class.std::__1::vector.956"* %3 to i8**
  store i8* %79, i8** %82, align 8
  %83 = getelementptr inbounds i8, i8* %79, i64 8
  %84 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %85 = bitcast %"class.spvtools::opt::analysis::Type"*** %84 to i8**
  store i8* %83, i8** %85, align 8
  %86 = bitcast %"class.spvtools::opt::analysis::Type"*** %81 to i64*
  store %"class.spvtools::opt::analysis::Type"* %76, %"class.spvtools::opt::analysis::Type"** %80, align 8
  %87 = ptrtoint i8* %83 to i64
  store i64 %87, i64* %86, align 8
  call void @_ZN8spvtools3opt8analysis6StructC1ERKNSt3__16vectorIPKNS1_4TypeENS3_9allocatorIS7_EEEE(%"class.spvtools::opt::analysis::Struct"* nonnull %2, %"class.std::__1::vector.956"* nonnull dereferenceable(24) %3) #13
  %88 = getelementptr inbounds %"class.std::__1::vector.956", %"class.std::__1::vector.956"* %3, i64 0, i32 0, i32 0
  %89 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %88, align 8
  %90 = icmp eq %"class.spvtools::opt::analysis::Type"** %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %66
  %92 = ptrtoint %"class.spvtools::opt::analysis::Type"** %89 to i64
  store i64 %92, i64* %86, align 8
  %93 = bitcast %"class.spvtools::opt::analysis::Type"** %89 to i8*
  call void @_ZdlPv(i8* %93) #12
  br label %94

94:                                               ; preds = %66, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #13
  %95 = bitcast %"class.spvtools::opt::analysis::Struct"* %2 to %"class.spvtools::opt::analysis::Type"*
  %96 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %68, %"class.spvtools::opt::analysis::Type"* nonnull %95) #13
  %97 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %68, %"class.spvtools::opt::analysis::Type"* %96) #13
  call void @_ZN8spvtools3opt8analysis17DecorationManager13AddDecorationEjj(%"class.spvtools::opt::analysis::DecorationManager"* %47, i32 %97, i32 2) #13
  call void @_ZN8spvtools3opt8analysis17DecorationManager19AddMemberDecorationEjjjj(%"class.spvtools::opt::analysis::DecorationManager"* %47, i32 %97, i32 0, i32 35, i32 0) #13
  %98 = call i32 @_ZN8spvtools3opt8analysis11TypeManager17FindPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"* %68, i32 %97, i32 12) #13
  %99 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %100 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %99, i64 0, i32 4, i32 0, i32 0, i32 0
  %101 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %100, align 8
  %102 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %101) #13
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %116

104:                                              ; preds = %94
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %99, i64 0, i32 5, i32 0, i32 2
  %106 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %106, i64 0, i32 2
  %108 = load i8, i8* %107, align 8, !range !6
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %116

110:                                              ; preds = %104
  %111 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %111, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %112 = getelementptr inbounds i8, i8* %111, i64 37
  store i8 0, i8* %112, align 1
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %99, i64 0, i32 5, i32 0, i32 1, i32 0
  %114 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %113, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %99, i64 0, i32 5, i32 0, i32 0
  call void %114(%"union.std::__1::__function::__policy_storage"* %115, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %111) #13
  call void @_ZdlPv(i8* nonnull %111) #12
  br label %116

116:                                              ; preds = %94, %104, %110
  store i32 %102, i32* %9, align 8
  %117 = call i8* @_Znwm(i64 112) #12
  %118 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %119 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #13
  %120 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %120) #13
  %121 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %121) #13
  %122 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %122, align 8
  %123 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %124 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %125 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %126 = bitcast i32** %124 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %125, %"struct.std::__1::aligned_storage<4, 4>::type"** %126, align 8
  %127 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %128 = bitcast %"class.std::__1::unique_ptr.0"* %127 to i64*
  store i64 0, i64* %128, align 8
  %129 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %125 to i32*
  store i64 1, i64* %123, align 8
  store i32 12, i32* %129, align 8
  %130 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  store i32 6, i32* %130, align 8
  %131 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %132 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %131, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %132, align 8
  %133 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %133, align 8
  %134 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 2
  %135 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 3, i64 0
  %136 = bitcast i32** %134 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %135, %"struct.std::__1::aligned_storage<4, 4>::type"** %136, align 8
  %137 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4
  %138 = bitcast %"class.std::__1::unique_ptr.0"* %137 to i64*
  store i64 0, i64* %138, align 8
  %139 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %131, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #13
  %140 = call i8* @_Znwm(i64 48) #12
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %142 = bitcast %"struct.spvtools::opt::Operand"** %141 to i8**
  store i8* %140, i8** %142, align 8
  %143 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %140, i8** %143, align 8
  %144 = getelementptr inbounds i8, i8* %140, i64 48
  %145 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %146 = bitcast %"struct.spvtools::opt::Operand"** %145 to i8**
  store i8* %144, i8** %146, align 8
  %147 = bitcast i8* %140 to i32*
  %148 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  %149 = load i32, i32* %148, align 8
  store i32 %149, i32* %147, align 8
  %150 = getelementptr inbounds i8, i8* %140, i64 8
  %151 = bitcast i8* %150 to %"class.spvtools::utils::SmallVector"*
  %152 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %153 = bitcast i8* %150 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %153, align 8
  %154 = getelementptr inbounds i8, i8* %140, i64 16
  %155 = bitcast i8* %154 to i64*
  store i64 0, i64* %155, align 8
  %156 = getelementptr inbounds i8, i8* %140, i64 24
  %157 = getelementptr inbounds i8, i8* %140, i64 32
  %158 = bitcast i8* %156 to i8**
  store i8* %157, i8** %158, align 8
  %159 = getelementptr inbounds i8, i8* %140, i64 40
  %160 = bitcast i8* %159 to i64*
  store i64 0, i64* %160, align 8
  %161 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %151, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %152) #13
  %162 = getelementptr inbounds i8, i8* %140, i64 48
  %163 = bitcast i8* %117 to %"class.spvtools::opt::Instruction"*
  %164 = bitcast %"struct.spvtools::opt::Operand"** %141 to i64*
  %165 = ptrtoint i8* %162 to i64
  store i64 %165, i64* %164, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %163, %"class.spvtools::opt::IRContext"* %118, i32 59, i32 %98, i32 %102, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #13
  %166 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %167 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %166, align 8
  %168 = icmp eq %"struct.spvtools::opt::Operand"* %167, null
  br i1 %168, label %197, label %169

169:                                              ; preds = %116
  %170 = bitcast %"struct.spvtools::opt::Operand"* %167 to i8*
  %171 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %172 = icmp eq %"struct.spvtools::opt::Operand"* %171, %167
  br i1 %172, label %195, label %173

173:                                              ; preds = %169, %191
  %174 = phi %"struct.spvtools::opt::Operand"* [ %175, %191 ], [ %171, %169 ]
  %175 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %174, i64 -1
  %176 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %174, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %176, align 8
  %177 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %174, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %178 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %177, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %177, align 8
  %179 = icmp eq %"class.std::__1::vector.3"* %178, null
  br i1 %179, label %191, label %180

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %178, i64 0, i32 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = icmp eq i32* %182, null
  br i1 %183, label %189, label %184

184:                                              ; preds = %180
  %185 = ptrtoint i32* %182 to i64
  %186 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %178, i64 0, i32 0, i32 1
  %187 = bitcast i32** %186 to i64*
  store i64 %185, i64* %187, align 8
  %188 = bitcast i32* %182 to i8*
  call void @_ZdlPv(i8* %188) #12
  br label %189

189:                                              ; preds = %184, %180
  %190 = bitcast %"class.std::__1::vector.3"* %178 to i8*
  call void @_ZdlPv(i8* %190) #12
  br label %191

191:                                              ; preds = %189, %173
  %192 = icmp eq %"struct.spvtools::opt::Operand"* %175, %167
  br i1 %192, label %193, label %173

193:                                              ; preds = %191
  %194 = load i8*, i8** %143, align 8
  br label %195

195:                                              ; preds = %193, %169
  %196 = phi i8* [ %194, %193 ], [ %170, %169 ]
  store %"struct.spvtools::opt::Operand"* %167, %"struct.spvtools::opt::Operand"** %141, align 8
  call void @_ZdlPv(i8* %196) #12
  br label %197

197:                                              ; preds = %116, %195
  %198 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %198, align 8
  %199 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %200 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %199, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %199, align 8
  %201 = icmp eq %"class.std::__1::vector.3"* %200, null
  br i1 %201, label %213, label %202

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %200, i64 0, i32 0, i32 0
  %204 = load i32*, i32** %203, align 8
  %205 = icmp eq i32* %204, null
  br i1 %205, label %211, label %206

206:                                              ; preds = %202
  %207 = ptrtoint i32* %204 to i64
  %208 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %200, i64 0, i32 0, i32 1
  %209 = bitcast i32** %208 to i64*
  store i64 %207, i64* %209, align 8
  %210 = bitcast i32* %204 to i8*
  call void @_ZdlPv(i8* %210) #12
  br label %211

211:                                              ; preds = %206, %202
  %212 = bitcast %"class.std::__1::vector.3"* %200 to i8*
  call void @_ZdlPv(i8* %212) #12
  br label %213

213:                                              ; preds = %197, %211
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %122, align 8
  %214 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %215 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %214, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %214, align 8
  %216 = icmp eq %"class.std::__1::vector.3"* %215, null
  br i1 %216, label %228, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %215, i64 0, i32 0, i32 0
  %219 = load i32*, i32** %218, align 8
  %220 = icmp eq i32* %219, null
  br i1 %220, label %226, label %221

221:                                              ; preds = %217
  %222 = ptrtoint i32* %219 to i64
  %223 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %215, i64 0, i32 0, i32 1
  %224 = bitcast i32** %223 to i64*
  store i64 %222, i64* %224, align 8
  %225 = bitcast i32* %219 to i8*
  call void @_ZdlPv(i8* %225) #12
  br label %226

226:                                              ; preds = %221, %217
  %227 = bitcast %"class.std::__1::vector.3"* %215 to i8*
  call void @_ZdlPv(i8* %227) #12
  br label %228

228:                                              ; preds = %213, %226
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %121) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %120) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #13
  %229 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %230 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %229, i64 0, i32 11
  %231 = load i32, i32* %230, align 8
  %232 = and i32 %231, 1
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %237, label %234

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %229, i64 0, i32 6, i32 0, i32 0, i32 0
  %236 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %235, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %236, %"class.spvtools::opt::Instruction"* nonnull %163) #13
  br label %237

237:                                              ; preds = %234, %228
  %238 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %229, i64 0, i32 4, i32 0, i32 0, i32 0
  %239 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %238, align 8
  %240 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %239, i64 0, i32 14, i32 0, i32 1
  %241 = getelementptr inbounds i8, i8* %117, i64 8
  %242 = bitcast i8* %241 to %"class.spvtools::opt::Instruction"**
  %243 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %242, align 8
  %244 = icmp eq %"class.spvtools::opt::Instruction"* %243, null
  br i1 %244, label %257, label %245

245:                                              ; preds = %237
  %246 = getelementptr inbounds i8, i8* %117, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %243, i64 0, i32 0, i32 2
  %250 = bitcast %"class.spvtools::opt::Instruction"** %249 to i64*
  store i64 %248, i64* %250, align 8
  %251 = bitcast i8* %241 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast i8* %246 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %254 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %253, align 8
  %255 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %254, i64 0, i32 1
  %256 = bitcast %"class.spvtools::opt::Instruction"** %255 to i64*
  store i64 %252, i64* %256, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %241, i8 0, i64 16, i1 false) #13
  br label %257

257:                                              ; preds = %237, %245
  store %"class.spvtools::opt::Instruction"* %240, %"class.spvtools::opt::Instruction"** %242, align 8
  %258 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %239, i64 0, i32 14, i32 0, i32 1, i32 0, i32 2
  %259 = bitcast %"class.spvtools::opt::Instruction"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = getelementptr inbounds i8, i8* %117, i64 16
  %262 = bitcast i8* %261 to i64*
  store i64 %260, i64* %262, align 8
  %263 = bitcast %"class.spvtools::opt::Instruction"** %258 to i8**
  store i8* %117, i8** %263, align 8
  %264 = bitcast i8* %261 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %265 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %264, align 8
  %266 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %265, i64 0, i32 1
  %267 = bitcast %"class.spvtools::opt::Instruction"** %266 to i8**
  store i8* %117, i8** %267, align 8
  %268 = load i32, i32* %9, align 8
  %269 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 2
  %270 = load i32, i32* %269, align 4
  call void @_ZN8spvtools3opt8analysis17DecorationManager16AddDecorationValEjjj(%"class.spvtools::opt::analysis::DecorationManager"* %47, i32 %268, i32 34, i32 %270) #13
  %271 = load i32, i32* %9, align 8
  %272 = load i32, i32* %69, align 8
  %273 = icmp eq i32 %272, 1
  %274 = select i1 %273, i32 2, i32 0
  %275 = icmp eq i32 %272, 0
  %276 = select i1 %275, i32 1, i32 %274
  call void @_ZN8spvtools3opt8analysis17DecorationManager16AddDecorationValEjjj(%"class.spvtools::opt::analysis::DecorationManager"* %47, i32 %271, i32 33, i32 %276) #13
  call void @_ZN8spvtools3opt14InstrumentPass19AddStorageBufferExtEv(%"class.spvtools::opt::InstrumentPass"* %0)
  %277 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %278 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %277, i64 0, i32 4, i32 0, i32 0, i32 0
  %279 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %278, align 8
  %280 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %279, i64 0, i32 0, i32 1
  %281 = load i32, i32* %280, align 4
  %282 = icmp ugt i32 %281, 66559
  br i1 %282, label %283, label %376

283:                                              ; preds = %257
  %284 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %279, i64 0, i32 7, i32 0, i32 1, i32 0, i32 1
  %285 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %279, i64 0, i32 7, i32 0, i32 1
  %286 = bitcast %"class.spvtools::opt::Instruction"** %284 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = inttoptr i64 %287 to %"class.spvtools::opt::Instruction"*
  %289 = icmp eq %"class.spvtools::opt::Instruction"* %285, %288
  br i1 %289, label %376, label %290

290:                                              ; preds = %283
  %291 = bitcast %"struct.spvtools::opt::Operand"* %7 to i8*
  %292 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  %293 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  %294 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %295 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %296 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %297 = bitcast i32** %295 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %298 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %299 = bitcast %"class.std::__1::unique_ptr.0"* %298 to i64*
  %300 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %296 to i32*
  %301 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 0
  %302 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1
  %303 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %302, i64 0, i32 0
  %304 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 1
  %305 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 2
  %306 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 3, i64 0
  %307 = bitcast i32** %305 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %308 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4
  %309 = bitcast %"class.std::__1::unique_ptr.0"* %308 to i64*
  %310 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 0
  %311 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %312 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %313

313:                                              ; preds = %290, %368
  %314 = phi %"class.spvtools::opt::Instruction"* [ %288, %290 ], [ %374, %368 ]
  %315 = phi i64 [ %287, %290 ], [ %373, %368 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %291) #13
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %292) #13
  %316 = load i32, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %293, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %296, %"struct.std::__1::aligned_storage<4, 4>::type"** %297, align 8
  store i64 0, i64* %299, align 8
  store i64 1, i64* %294, align 8
  store i32 %316, i32* %300, align 8
  store i32 1, i32* %301, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %303, align 8
  store i64 0, i64* %304, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %306, %"struct.std::__1::aligned_storage<4, 4>::type"** %307, align 8
  store i64 0, i64* %309, align 8
  %317 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %302, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #13
  %318 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %314, i64 0, i32 6, i32 0, i32 1
  %319 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %318, align 8
  %320 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %314, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %321 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %320, align 8
  %322 = icmp ult %"struct.spvtools::opt::Operand"* %319, %321
  br i1 %322, label %323, label %338

323:                                              ; preds = %313
  %324 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %319, i64 0, i32 0
  %325 = load i32, i32* %301, align 8
  store i32 %325, i32* %324, align 8
  %326 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %319, i64 0, i32 1
  %327 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %326, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %327, align 8
  %328 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %319, i64 0, i32 1, i32 1
  store i64 0, i64* %328, align 8
  %329 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %319, i64 0, i32 1, i32 2
  %330 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %319, i64 0, i32 1, i32 3, i64 0
  %331 = bitcast i32** %329 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %330, %"struct.std::__1::aligned_storage<4, 4>::type"** %331, align 8
  %332 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %319, i64 0, i32 1, i32 4
  %333 = bitcast %"class.std::__1::unique_ptr.0"* %332 to i64*
  store i64 0, i64* %333, align 8
  %334 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %326, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %302) #13
  %335 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %319, i64 1
  %336 = ptrtoint %"struct.spvtools::opt::Operand"* %335 to i64
  %337 = bitcast %"struct.spvtools::opt::Operand"** %318 to i64*
  store i64 %336, i64* %337, align 8
  br label %340

338:                                              ; preds = %313
  %339 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %314, i64 0, i32 6
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %339, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %7) #13
  br label %340

340:                                              ; preds = %323, %338
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %310, align 8
  %341 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %311, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %311, align 8
  %342 = icmp eq %"class.std::__1::vector.3"* %341, null
  br i1 %342, label %354, label %343

343:                                              ; preds = %340
  %344 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %341, i64 0, i32 0, i32 0
  %345 = load i32*, i32** %344, align 8
  %346 = icmp eq i32* %345, null
  br i1 %346, label %352, label %347

347:                                              ; preds = %343
  %348 = ptrtoint i32* %345 to i64
  %349 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %341, i64 0, i32 0, i32 1
  %350 = bitcast i32** %349 to i64*
  store i64 %348, i64* %350, align 8
  %351 = bitcast i32* %345 to i8*
  call void @_ZdlPv(i8* %351) #12
  br label %352

352:                                              ; preds = %347, %343
  %353 = bitcast %"class.std::__1::vector.3"* %341 to i8*
  call void @_ZdlPv(i8* %353) #12
  br label %354

354:                                              ; preds = %340, %352
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %293, align 8
  %355 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %312, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %312, align 8
  %356 = icmp eq %"class.std::__1::vector.3"* %355, null
  br i1 %356, label %368, label %357

357:                                              ; preds = %354
  %358 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %355, i64 0, i32 0, i32 0
  %359 = load i32*, i32** %358, align 8
  %360 = icmp eq i32* %359, null
  br i1 %360, label %366, label %361

361:                                              ; preds = %357
  %362 = ptrtoint i32* %359 to i64
  %363 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %355, i64 0, i32 0, i32 1
  %364 = bitcast i32** %363 to i64*
  store i64 %362, i64* %364, align 8
  %365 = bitcast i32* %359 to i8*
  call void @_ZdlPv(i8* %365) #12
  br label %366

366:                                              ; preds = %361, %357
  %367 = bitcast %"class.std::__1::vector.3"* %355 to i8*
  call void @_ZdlPv(i8* %367) #12
  br label %368

368:                                              ; preds = %354, %366
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %292) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %291) #13
  %369 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %369, %"class.spvtools::opt::Instruction"* %314) #13
  %370 = inttoptr i64 %315 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %371 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %370, i64 0, i32 1
  %372 = bitcast %"class.spvtools::opt::Instruction"** %371 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = inttoptr i64 %373 to %"class.spvtools::opt::Instruction"*
  %375 = icmp eq %"class.spvtools::opt::Instruction"* %285, %374
  br i1 %375, label %376, label %313

376:                                              ; preds = %368, %283, %257
  %377 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis6StructE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %377, align 8
  %378 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %2, i64 0, i32 2, i32 0
  %379 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %2, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %380 = bitcast %"class.std::__1::__tree_end_node"* %379 to %"class.std::__1::__tree_node.1092"**
  %381 = load %"class.std::__1::__tree_node.1092"*, %"class.std::__1::__tree_node.1092"** %380, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorINS2_IjNS_9allocatorIjEEEENS3_IS5_EEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS3_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.964"* %378, %"class.std::__1::__tree_node.1092"* %381) #13
  %382 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %2, i64 0, i32 1, i32 0, i32 0
  %383 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %382, align 8
  %384 = icmp eq %"class.spvtools::opt::analysis::Type"** %383, null
  br i1 %384, label %390, label %385

385:                                              ; preds = %376
  %386 = ptrtoint %"class.spvtools::opt::analysis::Type"** %383 to i64
  %387 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %2, i64 0, i32 1, i32 0, i32 1
  %388 = bitcast %"class.spvtools::opt::analysis::Type"*** %387 to i64*
  store i64 %386, i64* %388, align 8
  %389 = bitcast %"class.spvtools::opt::analysis::Type"** %383 to i8*
  call void @_ZdlPv(i8* %389) #12
  br label %390

390:                                              ; preds = %385, %376
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %377, align 8
  %391 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %2, i64 0, i32 0, i32 1
  %392 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %391, i64 0, i32 0, i32 0
  %393 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %392, align 8
  %394 = icmp eq %"class.std::__1::vector.3"* %393, null
  br i1 %394, label %418, label %395

395:                                              ; preds = %390
  %396 = bitcast %"class.std::__1::vector.3"* %393 to i8*
  %397 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %398 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %397, align 8
  %399 = icmp eq %"class.std::__1::vector.3"* %398, %393
  br i1 %399, label %416, label %400

400:                                              ; preds = %395, %411
  %401 = phi %"class.std::__1::vector.3"* [ %402, %411 ], [ %398, %395 ]
  %402 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %401, i64 -1
  %403 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %402, i64 0, i32 0, i32 0
  %404 = load i32*, i32** %403, align 8
  %405 = icmp eq i32* %404, null
  br i1 %405, label %411, label %406

406:                                              ; preds = %400
  %407 = ptrtoint i32* %404 to i64
  %408 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %401, i64 -1, i32 0, i32 1
  %409 = bitcast i32** %408 to i64*
  store i64 %407, i64* %409, align 8
  %410 = bitcast i32* %404 to i8*
  call void @_ZdlPv(i8* %410) #12
  br label %411

411:                                              ; preds = %406, %400
  %412 = icmp eq %"class.std::__1::vector.3"* %402, %393
  br i1 %412, label %413, label %400

413:                                              ; preds = %411
  %414 = bitcast %"class.std::__1::vector.463"* %391 to i8**
  %415 = load i8*, i8** %414, align 8
  br label %416

416:                                              ; preds = %413, %395
  %417 = phi i8* [ %415, %413 ], [ %396, %395 ]
  store %"class.std::__1::vector.3"* %393, %"class.std::__1::vector.3"** %397, align 8
  call void @_ZdlPv(i8* %417) #12
  br label %418

418:                                              ; preds = %390, %416
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %77) #13
  %419 = load i32, i32* %9, align 8
  br label %420

420:                                              ; preds = %418, %1
  %421 = phi i32 [ %419, %418 ], [ %10, %1 ]
  ret i32 %421
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass10GetFloatIdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::analysis::Float", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 15
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %69

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = trunc i32 %10 to i16
  %12 = icmp slt i16 %11, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 5
  %15 = tail call i8* @_Znwm(i64 240) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %16, %"class.std::__1::function"* dereferenceable(32) %14, %"class.spvtools::opt::IRContext"* %8) #13
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.480"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %20) #13
  %24 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %13
  %26 = load i32, i32* %9, align 8
  %27 = or i32 %26, 32768
  store i32 %27, i32* %9, align 8
  br label %28

28:                                               ; preds = %6, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %29, align 8
  %31 = bitcast %"class.spvtools::opt::analysis::Float"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %2, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %2, i64 0, i32 0, i32 2
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %2, i64 0, i32 1
  %36 = getelementptr inbounds %"class.spvtools::opt::analysis::Float", %"class.spvtools::opt::analysis::Float"* %2, i64 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::vector.463"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #13
  store i32 3, i32* %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis5FloatE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  store i32 32, i32* %35, align 4
  %38 = bitcast %"class.spvtools::opt::analysis::Float"* %2 to %"class.spvtools::opt::analysis::Type"*
  %39 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* nonnull %38) #13
  %40 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* %39) #13
  store i32 %40, i32* %3, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %36, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %41, align 8
  %43 = icmp eq %"class.std::__1::vector.3"* %42, null
  br i1 %43, label %67, label %44

44:                                               ; preds = %28
  %45 = bitcast %"class.std::__1::vector.3"* %42 to i8*
  %46 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %33, align 8
  %47 = icmp eq %"class.std::__1::vector.3"* %46, %42
  br i1 %47, label %64, label %48

48:                                               ; preds = %44, %59
  %49 = phi %"class.std::__1::vector.3"* [ %50, %59 ], [ %46, %44 ]
  %50 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 0, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = icmp eq i32* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %48
  %55 = ptrtoint i32* %52 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 -1, i32 0, i32 1
  %57 = bitcast i32** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = bitcast i32* %52 to i8*
  call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %54, %48
  %60 = icmp eq %"class.std::__1::vector.3"* %50, %42
  br i1 %60, label %61, label %48

61:                                               ; preds = %59
  %62 = bitcast %"class.std::__1::vector.463"* %36 to i8**
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %61, %44
  %65 = phi i8* [ %63, %61 ], [ %45, %44 ]
  store %"class.std::__1::vector.3"* %42, %"class.std::__1::vector.3"** %33, align 8
  call void @_ZdlPv(i8* %65) #12
  %66 = load i32, i32* %3, align 4
  br label %67

67:                                               ; preds = %28, %64
  %68 = phi i32 [ %40, %28 ], [ %66, %64 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #13
  br label %69

69:                                               ; preds = %67, %1
  %70 = phi i32 [ %68, %67 ], [ %4, %1 ]
  ret i32 %70
}

declare void @_ZN8spvtools3opt8analysis6VectorC1EPKNS1_4TypeEj(%"class.spvtools::opt::analysis::Vector"*, %"class.spvtools::opt::analysis::Type"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass10GetUint8IdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 21
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %70

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = trunc i32 %10 to i16
  %12 = icmp slt i16 %11, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 5
  %15 = tail call i8* @_Znwm(i64 240) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %16, %"class.std::__1::function"* dereferenceable(32) %14, %"class.spvtools::opt::IRContext"* %8) #13
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.480"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %20) #13
  %24 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %13
  %26 = load i32, i32* %9, align 8
  %27 = or i32 %26, 32768
  store i32 %27, i32* %9, align 8
  br label %28

28:                                               ; preds = %6, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %29, align 8
  %31 = bitcast %"class.spvtools::opt::analysis::Integer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 48, i1 false)
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::vector.463"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #13
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 2
  store i32 2, i32* %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 1
  store i32 8, i32* %36, align 4
  %37 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 2
  store i8 0, i8* %37, align 8
  %38 = bitcast %"class.spvtools::opt::analysis::Integer"* %2 to %"class.spvtools::opt::analysis::Type"*
  %39 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* nonnull %38) #13
  %40 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* %39) #13
  store i32 %40, i32* %3, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %33, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %41, align 8
  %43 = icmp eq %"class.std::__1::vector.3"* %42, null
  br i1 %43, label %68, label %44

44:                                               ; preds = %28
  %45 = bitcast %"class.std::__1::vector.3"* %42 to i8*
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %47 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %46, align 8
  %48 = icmp eq %"class.std::__1::vector.3"* %47, %42
  br i1 %48, label %65, label %49

49:                                               ; preds = %44, %60
  %50 = phi %"class.std::__1::vector.3"* [ %51, %60 ], [ %47, %44 ]
  %51 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 -1
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %51, i64 0, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = icmp eq i32* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %49
  %56 = ptrtoint i32* %53 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 -1, i32 0, i32 1
  %58 = bitcast i32** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast i32* %53 to i8*
  call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %55, %49
  %61 = icmp eq %"class.std::__1::vector.3"* %51, %42
  br i1 %61, label %62, label %49

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::vector.463"* %33 to i8**
  %64 = load i8*, i8** %63, align 8
  br label %65

65:                                               ; preds = %62, %44
  %66 = phi i8* [ %64, %62 ], [ %45, %44 ]
  store %"class.std::__1::vector.3"* %42, %"class.std::__1::vector.3"** %46, align 8
  call void @_ZdlPv(i8* %66) #12
  %67 = load i32, i32* %3, align 4
  br label %68

68:                                               ; preds = %28, %65
  %69 = phi i32 [ %40, %28 ], [ %67, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #13
  br label %70

70:                                               ; preds = %68, %1
  %71 = phi i32 [ %69, %68 ], [ %4, %1 ]
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass12GetVecUintIdEj(%"class.spvtools::opt::InstrumentPass"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %4 = alloca %"class.spvtools::opt::analysis::Vector", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = trunc i32 %8 to i16
  %10 = icmp slt i16 %9, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 5
  %13 = tail call i8* @_Znwm(i64 240) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %14, %"class.std::__1::function"* dereferenceable(32) %12, %"class.spvtools::opt::IRContext"* %6) #13
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 20
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.480"* %16 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %11
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %18) #13
  %22 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %18 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %21, %11
  %24 = load i32, i32* %7, align 8
  %25 = or i32 %24, 32768
  store i32 %25, i32* %7, align 8
  br label %26

26:                                               ; preds = %2, %23
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 20, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %27, align 8
  %29 = bitcast %"class.spvtools::opt::analysis::Integer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 48, i1 false)
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::vector.463"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #13
  %33 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 2
  store i32 2, i32* %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 1
  store i32 32, i32* %34, align 4
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 2
  store i8 0, i8* %35, align 8
  %36 = bitcast %"class.spvtools::opt::analysis::Integer"* %3 to %"class.spvtools::opt::analysis::Type"*
  %37 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %28, %"class.spvtools::opt::analysis::Type"* nonnull %36) #13
  %38 = bitcast %"class.spvtools::opt::analysis::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %38) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 56, i1 false)
  call void @_ZN8spvtools3opt8analysis6VectorC1EPKNS1_4TypeEj(%"class.spvtools::opt::analysis::Vector"* nonnull %4, %"class.spvtools::opt::analysis::Type"* %37, i32 %1) #13
  %39 = bitcast %"class.spvtools::opt::analysis::Vector"* %4 to %"class.spvtools::opt::analysis::Type"*
  %40 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %28, %"class.spvtools::opt::analysis::Type"* nonnull %39) #13
  %41 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %28, %"class.spvtools::opt::analysis::Type"* %40) #13
  %42 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %4, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %44, align 8
  %46 = icmp eq %"class.std::__1::vector.3"* %45, null
  br i1 %46, label %70, label %47

47:                                               ; preds = %26
  %48 = bitcast %"class.std::__1::vector.3"* %45 to i8*
  %49 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %50 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %49, align 8
  %51 = icmp eq %"class.std::__1::vector.3"* %50, %45
  br i1 %51, label %68, label %52

52:                                               ; preds = %47, %63
  %53 = phi %"class.std::__1::vector.3"* [ %54, %63 ], [ %50, %47 ]
  %54 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %53, i64 -1
  %55 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %54, i64 0, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = icmp eq i32* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %52
  %59 = ptrtoint i32* %56 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %53, i64 -1, i32 0, i32 1
  %61 = bitcast i32** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = bitcast i32* %56 to i8*
  call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %58, %52
  %64 = icmp eq %"class.std::__1::vector.3"* %54, %45
  br i1 %64, label %65, label %52

65:                                               ; preds = %63
  %66 = bitcast %"class.std::__1::vector.463"* %43 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %65, %47
  %69 = phi i8* [ %67, %65 ], [ %48, %47 ]
  store %"class.std::__1::vector.3"* %45, %"class.std::__1::vector.3"** %49, align 8
  call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %26, %68
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %38) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %71 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %31, i64 0, i32 0, i32 0
  %72 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %71, align 8
  %73 = icmp eq %"class.std::__1::vector.3"* %72, null
  br i1 %73, label %97, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.std::__1::vector.3"* %72 to i8*
  %76 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %77 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %76, align 8
  %78 = icmp eq %"class.std::__1::vector.3"* %77, %72
  br i1 %78, label %95, label %79

79:                                               ; preds = %74, %90
  %80 = phi %"class.std::__1::vector.3"* [ %81, %90 ], [ %77, %74 ]
  %81 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %80, i64 -1
  %82 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %81, i64 0, i32 0, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = icmp eq i32* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %79
  %86 = ptrtoint i32* %83 to i64
  %87 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %80, i64 -1, i32 0, i32 1
  %88 = bitcast i32** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = bitcast i32* %83 to i8*
  call void @_ZdlPv(i8* %89) #12
  br label %90

90:                                               ; preds = %85, %79
  %91 = icmp eq %"class.std::__1::vector.3"* %81, %72
  br i1 %91, label %92, label %79

92:                                               ; preds = %90
  %93 = bitcast %"class.std::__1::vector.463"* %31 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %92, %74
  %96 = phi i8* [ %94, %92 ], [ %75, %74 ]
  store %"class.std::__1::vector.3"* %72, %"class.std::__1::vector.3"** %76, align 8
  call void @_ZdlPv(i8* %96) #12
  br label %97

97:                                               ; preds = %70, %95
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #13
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt14InstrumentPass9GetBoolIdEv(%"class.spvtools::opt::InstrumentPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::analysis::Bool", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 22
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %68

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = trunc i32 %10 to i16
  %12 = icmp slt i16 %11, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 5
  %15 = tail call i8* @_Znwm(i64 240) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %16, %"class.std::__1::function"* dereferenceable(32) %14, %"class.spvtools::opt::IRContext"* %8) #13
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.480"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %20) #13
  %24 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %13
  %26 = load i32, i32* %9, align 8
  %27 = or i32 %26, 32768
  store i32 %27, i32* %9, align 8
  br label %28

28:                                               ; preds = %6, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 20, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %29, align 8
  %31 = bitcast %"class.spvtools::opt::analysis::Bool"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 40, i1 false)
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %2, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %2, i64 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::vector.463"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #13
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %2, i64 0, i32 0, i32 2
  store i32 1, i32* %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4BoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %36 = bitcast %"class.spvtools::opt::analysis::Bool"* %2 to %"class.spvtools::opt::analysis::Type"*
  %37 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* nonnull %36) #13
  %38 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* %37) #13
  store i32 %38, i32* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %39 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %33, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %39, align 8
  %41 = icmp eq %"class.std::__1::vector.3"* %40, null
  br i1 %41, label %66, label %42

42:                                               ; preds = %28
  %43 = bitcast %"class.std::__1::vector.3"* %40 to i8*
  %44 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %45 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %44, align 8
  %46 = icmp eq %"class.std::__1::vector.3"* %45, %40
  br i1 %46, label %63, label %47

47:                                               ; preds = %42, %58
  %48 = phi %"class.std::__1::vector.3"* [ %49, %58 ], [ %45, %42 ]
  %49 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %48, i64 -1
  %50 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 0, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = icmp eq i32* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %47
  %54 = ptrtoint i32* %51 to i64
  %55 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %48, i64 -1, i32 0, i32 1
  %56 = bitcast i32** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast i32* %51 to i8*
  call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %53, %47
  %59 = icmp eq %"class.std::__1::vector.3"* %49, %40
  br i1 %59, label %60, label %47

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::vector.463"* %33 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %42
  %64 = phi i8* [ %62, %60 ], [ %43, %42 ]
  store %"class.std::__1::vector.3"* %40, %"class.std::__1::vector.3"** %44, align 8
  call void @_ZdlPv(i8* %64) #12
  %65 = load i32, i32* %3, align 8
  br label %66

66:                                               ; preds = %28, %63
  %67 = phi i32 [ %38, %28 ], [ %65, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #13
  br label %68

68:                                               ; preds = %66, %1
  %69 = phi i32 [ %67, %66 ], [ %4, %1 ]
  ret i32 %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD2Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

declare void @_ZN8spvtools3opt8analysis8FunctionC1EPKNS1_4TypeERNSt3__16vectorIS5_NS6_9allocatorIS5_EEEE(%"class.spvtools::opt::analysis::Function"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.956"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddQuadOpEj6SpvOp_jjjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.std::__1::unique_ptr.21", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca [4 x %"struct.spvtools::opt::Operand"], align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.spvtools::utils::SmallVector", align 8
  %13 = alloca %"class.spvtools::utils::SmallVector", align 8
  %14 = alloca %"class.spvtools::utils::SmallVector", align 8
  %15 = icmp eq i32 %1, 0
  br i1 %15, label %35, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %18 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %19, align 8
  %21 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %20) #13
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 5, i32 0, i32 2
  %25 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %25, i64 0, i32 2
  %27 = load i8, i8* %26, align 8, !range !6
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %314

29:                                               ; preds = %23
  %30 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %30, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %31 = getelementptr inbounds i8, i8* %30, i64 37
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 5, i32 0, i32 1, i32 0
  %33 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 5, i32 0, i32 0
  tail call void %33(%"union.std::__1::__function::__policy_storage"* %34, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %30) #13
  tail call void @_ZdlPv(i8* nonnull %30) #12
  br label %314

35:                                               ; preds = %16, %7
  %36 = phi i32 [ 0, %7 ], [ %21, %16 ]
  %37 = bitcast %"class.std::__1::unique_ptr.21"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %38, align 8
  %39 = tail call i8* @_Znwm(i64 112) #12
  %40 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %41 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %40, align 8
  %42 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #13
  %43 = bitcast [4 x %"struct.spvtools::opt::Operand"]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %43) #13
  %44 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #13
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %48 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %49 = bitcast i32** %47 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %48, %"struct.std::__1::aligned_storage<4, 4>::type"** %49, align 8
  %50 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %51 = bitcast %"class.std::__1::unique_ptr.0"* %50 to i64*
  store i64 0, i64* %51, align 8
  %52 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %48 to i32*
  store i64 1, i64* %46, align 8
  store i32 %3, i32* %52, align 8
  %53 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 0
  store i32 1, i32* %53, align 8
  %54 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1
  %55 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %54, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 2
  %58 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 3, i64 0
  %59 = bitcast i32** %57 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %58, %"struct.std::__1::aligned_storage<4, 4>::type"** %59, align 8
  %60 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 4
  %61 = bitcast %"class.std::__1::unique_ptr.0"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %54, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #13
  %63 = bitcast %"class.spvtools::utils::SmallVector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 1
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 2
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 3, i64 0
  %68 = bitcast i32** %66 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %67, %"struct.std::__1::aligned_storage<4, 4>::type"** %68, align 8
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4
  %70 = bitcast %"class.std::__1::unique_ptr.0"* %69 to i64*
  store i64 0, i64* %70, align 8
  %71 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %67 to i32*
  store i64 1, i64* %65, align 8
  store i32 %4, i32* %71, align 8
  %72 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 0
  store i32 1, i32* %72, align 8
  %73 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %73, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %75 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %75, align 8
  %76 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1, i32 2
  %77 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1, i32 3, i64 0
  %78 = bitcast i32** %76 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %77, %"struct.std::__1::aligned_storage<4, 4>::type"** %78, align 8
  %79 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1, i32 4
  %80 = bitcast %"class.std::__1::unique_ptr.0"* %79 to i64*
  store i64 0, i64* %80, align 8
  %81 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %73, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %12) #13
  %82 = bitcast %"class.spvtools::utils::SmallVector"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %82) #13
  %83 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 1
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 2
  %86 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 3, i64 0
  %87 = bitcast i32** %85 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %86, %"struct.std::__1::aligned_storage<4, 4>::type"** %87, align 8
  %88 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 4
  %89 = bitcast %"class.std::__1::unique_ptr.0"* %88 to i64*
  store i64 0, i64* %89, align 8
  %90 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %86 to i32*
  store i64 1, i64* %84, align 8
  store i32 %5, i32* %90, align 8
  %91 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 2, i32 0
  store i32 1, i32* %91, align 8
  %92 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 2, i32 1
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %92, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %94 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 2, i32 1, i32 1
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 2, i32 1, i32 2
  %96 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 2, i32 1, i32 3, i64 0
  %97 = bitcast i32** %95 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %96, %"struct.std::__1::aligned_storage<4, 4>::type"** %97, align 8
  %98 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 2, i32 1, i32 4
  %99 = bitcast %"class.std::__1::unique_ptr.0"* %98 to i64*
  store i64 0, i64* %99, align 8
  %100 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %92, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %13) #13
  %101 = bitcast %"class.spvtools::utils::SmallVector"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %101) #13
  %102 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 1
  %104 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 2
  %105 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 3, i64 0
  %106 = bitcast i32** %104 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %105, %"struct.std::__1::aligned_storage<4, 4>::type"** %106, align 8
  %107 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4
  %108 = bitcast %"class.std::__1::unique_ptr.0"* %107 to i64*
  store i64 0, i64* %108, align 8
  %109 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %105 to i32*
  store i64 1, i64* %103, align 8
  store i32 %6, i32* %109, align 8
  %110 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 3, i32 0
  store i32 1, i32* %110, align 8
  %111 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 3, i32 1
  %112 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %111, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %113 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 3, i32 1, i32 1
  store i64 0, i64* %113, align 8
  %114 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 3, i32 1, i32 2
  %115 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 3, i32 1, i32 3, i64 0
  %116 = bitcast i32** %114 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %115, %"struct.std::__1::aligned_storage<4, 4>::type"** %116, align 8
  %117 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 3, i32 1, i32 4
  %118 = bitcast %"class.std::__1::unique_ptr.0"* %117 to i64*
  store i64 0, i64* %118, align 8
  %119 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %111, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %14) #13
  %120 = call i8* @_Znwm(i64 192) #12
  %121 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %122 = bitcast %"struct.spvtools::opt::Operand"** %121 to i8**
  store i8* %120, i8** %122, align 8
  %123 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %120, i8** %123, align 8
  %124 = getelementptr inbounds i8, i8* %120, i64 192
  %125 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %126 = bitcast %"struct.spvtools::opt::Operand"** %125 to i8**
  store i8* %124, i8** %126, align 8
  %127 = bitcast i8* %120 to i32*
  %128 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 0
  %129 = load i32, i32* %128, align 8
  store i32 %129, i32* %127, align 8
  %130 = getelementptr inbounds i8, i8* %120, i64 8
  %131 = bitcast i8* %130 to %"class.spvtools::utils::SmallVector"*
  %132 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1
  %133 = bitcast i8* %130 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8
  %134 = getelementptr inbounds i8, i8* %120, i64 16
  %135 = bitcast i8* %134 to i64*
  store i64 0, i64* %135, align 8
  %136 = getelementptr inbounds i8, i8* %120, i64 24
  %137 = getelementptr inbounds i8, i8* %120, i64 32
  %138 = bitcast i8* %136 to i8**
  store i8* %137, i8** %138, align 8
  %139 = getelementptr inbounds i8, i8* %120, i64 40
  %140 = bitcast i8* %139 to i64*
  store i64 0, i64* %140, align 8
  %141 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %131, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %132) #13
  %142 = getelementptr inbounds i8, i8* %120, i64 48
  %143 = bitcast i8* %142 to i32*
  %144 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 0
  %145 = load i32, i32* %144, align 8
  store i32 %145, i32* %143, align 8
  %146 = getelementptr inbounds i8, i8* %120, i64 56
  %147 = bitcast i8* %146 to %"class.spvtools::utils::SmallVector"*
  %148 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1
  %149 = bitcast i8* %146 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %149, align 8
  %150 = getelementptr inbounds i8, i8* %120, i64 64
  %151 = bitcast i8* %150 to i64*
  store i64 0, i64* %151, align 8
  %152 = getelementptr inbounds i8, i8* %120, i64 72
  %153 = getelementptr inbounds i8, i8* %120, i64 80
  %154 = bitcast i8* %152 to i8**
  store i8* %153, i8** %154, align 8
  %155 = getelementptr inbounds i8, i8* %120, i64 88
  %156 = bitcast i8* %155 to i64*
  store i64 0, i64* %156, align 8
  %157 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %147, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %148) #13
  %158 = getelementptr inbounds i8, i8* %120, i64 96
  %159 = bitcast i8* %158 to i32*
  %160 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 2, i32 0
  %161 = load i32, i32* %160, align 8
  store i32 %161, i32* %159, align 8
  %162 = getelementptr inbounds i8, i8* %120, i64 104
  %163 = bitcast i8* %162 to %"class.spvtools::utils::SmallVector"*
  %164 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 2, i32 1
  %165 = bitcast i8* %162 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %165, align 8
  %166 = getelementptr inbounds i8, i8* %120, i64 112
  %167 = bitcast i8* %166 to i64*
  store i64 0, i64* %167, align 8
  %168 = getelementptr inbounds i8, i8* %120, i64 120
  %169 = getelementptr inbounds i8, i8* %120, i64 128
  %170 = bitcast i8* %168 to i8**
  store i8* %169, i8** %170, align 8
  %171 = getelementptr inbounds i8, i8* %120, i64 136
  %172 = bitcast i8* %171 to i64*
  store i64 0, i64* %172, align 8
  %173 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %163, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %164) #13
  %174 = getelementptr inbounds i8, i8* %120, i64 144
  %175 = bitcast i8* %174 to i32*
  %176 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 3, i32 0
  %177 = load i32, i32* %176, align 8
  store i32 %177, i32* %175, align 8
  %178 = getelementptr inbounds i8, i8* %120, i64 152
  %179 = bitcast i8* %178 to %"class.spvtools::utils::SmallVector"*
  %180 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 3, i32 1
  %181 = bitcast i8* %178 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %181, align 8
  %182 = getelementptr inbounds i8, i8* %120, i64 160
  %183 = bitcast i8* %182 to i64*
  store i64 0, i64* %183, align 8
  %184 = getelementptr inbounds i8, i8* %120, i64 168
  %185 = getelementptr inbounds i8, i8* %120, i64 176
  %186 = bitcast i8* %184 to i8**
  store i8* %185, i8** %186, align 8
  %187 = getelementptr inbounds i8, i8* %120, i64 184
  %188 = bitcast i8* %187 to i64*
  store i64 0, i64* %188, align 8
  %189 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %179, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %180) #13
  %190 = getelementptr inbounds i8, i8* %120, i64 192
  %191 = bitcast i8* %39 to %"class.spvtools::opt::Instruction"*
  %192 = bitcast %"struct.spvtools::opt::Operand"** %121 to i64*
  %193 = ptrtoint i8* %190 to i64
  store i64 %193, i64* %192, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %191, %"class.spvtools::opt::IRContext"* %41, i32 %2, i32 %1, i32 %36, %"class.std::__1::vector"* nonnull dereferenceable(24) %9) #13
  %194 = ptrtoint i8* %39 to i64
  %195 = bitcast %"class.std::__1::unique_ptr.21"* %8 to i64*
  store i64 %194, i64* %195, align 8
  %196 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %197 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %196, align 8
  %198 = icmp eq %"struct.spvtools::opt::Operand"* %197, null
  br i1 %198, label %227, label %199

199:                                              ; preds = %35
  %200 = bitcast %"struct.spvtools::opt::Operand"* %197 to i8*
  %201 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %121, align 8
  %202 = icmp eq %"struct.spvtools::opt::Operand"* %201, %197
  br i1 %202, label %225, label %203

203:                                              ; preds = %199, %221
  %204 = phi %"struct.spvtools::opt::Operand"* [ %205, %221 ], [ %201, %199 ]
  %205 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %204, i64 -1
  %206 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %204, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %206, align 8
  %207 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %204, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %208 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %207, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %207, align 8
  %209 = icmp eq %"class.std::__1::vector.3"* %208, null
  br i1 %209, label %221, label %210

210:                                              ; preds = %203
  %211 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %208, i64 0, i32 0, i32 0
  %212 = load i32*, i32** %211, align 8
  %213 = icmp eq i32* %212, null
  br i1 %213, label %219, label %214

214:                                              ; preds = %210
  %215 = ptrtoint i32* %212 to i64
  %216 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %208, i64 0, i32 0, i32 1
  %217 = bitcast i32** %216 to i64*
  store i64 %215, i64* %217, align 8
  %218 = bitcast i32* %212 to i8*
  call void @_ZdlPv(i8* %218) #12
  br label %219

219:                                              ; preds = %214, %210
  %220 = bitcast %"class.std::__1::vector.3"* %208 to i8*
  call void @_ZdlPv(i8* %220) #12
  br label %221

221:                                              ; preds = %219, %203
  %222 = icmp eq %"struct.spvtools::opt::Operand"* %205, %197
  br i1 %222, label %223, label %203

223:                                              ; preds = %221
  %224 = load i8*, i8** %123, align 8
  br label %225

225:                                              ; preds = %223, %199
  %226 = phi i8* [ %224, %223 ], [ %200, %199 ]
  store %"struct.spvtools::opt::Operand"* %197, %"struct.spvtools::opt::Operand"** %121, align 8
  call void @_ZdlPv(i8* %226) #12
  br label %227

227:                                              ; preds = %35, %225
  %228 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 3, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %228, align 8
  %229 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 3, i32 1, i32 4, i32 0, i32 0, i32 0
  %230 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %229, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %229, align 8
  %231 = icmp eq %"class.std::__1::vector.3"* %230, null
  br i1 %231, label %243, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %230, i64 0, i32 0, i32 0
  %234 = load i32*, i32** %233, align 8
  %235 = icmp eq i32* %234, null
  br i1 %235, label %241, label %236

236:                                              ; preds = %232
  %237 = ptrtoint i32* %234 to i64
  %238 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %230, i64 0, i32 0, i32 1
  %239 = bitcast i32** %238 to i64*
  store i64 %237, i64* %239, align 8
  %240 = bitcast i32* %234 to i8*
  call void @_ZdlPv(i8* %240) #12
  br label %241

241:                                              ; preds = %236, %232
  %242 = bitcast %"class.std::__1::vector.3"* %230 to i8*
  call void @_ZdlPv(i8* %242) #12
  br label %243

243:                                              ; preds = %227, %241
  %244 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %244, align 8
  %245 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 2, i32 1, i32 4, i32 0, i32 0, i32 0
  %246 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %245, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %245, align 8
  %247 = icmp eq %"class.std::__1::vector.3"* %246, null
  br i1 %247, label %327, label %316

248:                                              ; preds = %359
  %249 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %361, i64 0, i32 0, i32 0
  %250 = load i32*, i32** %249, align 8
  %251 = icmp eq i32* %250, null
  br i1 %251, label %257, label %252

252:                                              ; preds = %248
  %253 = ptrtoint i32* %250 to i64
  %254 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %361, i64 0, i32 0, i32 1
  %255 = bitcast i32** %254 to i64*
  store i64 %253, i64* %255, align 8
  %256 = bitcast i32* %250 to i8*
  call void @_ZdlPv(i8* %256) #12
  br label %257

257:                                              ; preds = %252, %248
  %258 = bitcast %"class.std::__1::vector.3"* %361 to i8*
  call void @_ZdlPv(i8* %258) #12
  br label %259

259:                                              ; preds = %359, %257
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %101) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %260 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 4, i32 0, i32 0, i32 0
  %261 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %260, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %260, align 8
  %262 = icmp eq %"class.std::__1::vector.3"* %261, null
  br i1 %262, label %274, label %263

263:                                              ; preds = %259
  %264 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %261, i64 0, i32 0, i32 0
  %265 = load i32*, i32** %264, align 8
  %266 = icmp eq i32* %265, null
  br i1 %266, label %272, label %267

267:                                              ; preds = %263
  %268 = ptrtoint i32* %265 to i64
  %269 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %261, i64 0, i32 0, i32 1
  %270 = bitcast i32** %269 to i64*
  store i64 %268, i64* %270, align 8
  %271 = bitcast i32* %265 to i8*
  call void @_ZdlPv(i8* %271) #12
  br label %272

272:                                              ; preds = %267, %263
  %273 = bitcast %"class.std::__1::vector.3"* %261 to i8*
  call void @_ZdlPv(i8* %273) #12
  br label %274

274:                                              ; preds = %259, %272
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %82) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %275 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %276 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %275, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %275, align 8
  %277 = icmp eq %"class.std::__1::vector.3"* %276, null
  br i1 %277, label %289, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %276, i64 0, i32 0, i32 0
  %280 = load i32*, i32** %279, align 8
  %281 = icmp eq i32* %280, null
  br i1 %281, label %287, label %282

282:                                              ; preds = %278
  %283 = ptrtoint i32* %280 to i64
  %284 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %276, i64 0, i32 0, i32 1
  %285 = bitcast i32** %284 to i64*
  store i64 %283, i64* %285, align 8
  %286 = bitcast i32* %280 to i8*
  call void @_ZdlPv(i8* %286) #12
  br label %287

287:                                              ; preds = %282, %278
  %288 = bitcast %"class.std::__1::vector.3"* %276 to i8*
  call void @_ZdlPv(i8* %288) #12
  br label %289

289:                                              ; preds = %274, %287
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %290 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %291 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %290, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %290, align 8
  %292 = icmp eq %"class.std::__1::vector.3"* %291, null
  br i1 %292, label %304, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %291, i64 0, i32 0, i32 0
  %295 = load i32*, i32** %294, align 8
  %296 = icmp eq i32* %295, null
  br i1 %296, label %302, label %297

297:                                              ; preds = %293
  %298 = ptrtoint i32* %295 to i64
  %299 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %291, i64 0, i32 0, i32 1
  %300 = bitcast i32** %299 to i64*
  store i64 %298, i64* %300, align 8
  %301 = bitcast i32* %295 to i8*
  call void @_ZdlPv(i8* %301) #12
  br label %302

302:                                              ; preds = %297, %293
  %303 = bitcast %"class.std::__1::vector.3"* %291 to i8*
  call void @_ZdlPv(i8* %303) #12
  br label %304

304:                                              ; preds = %289, %302
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #13
  %305 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %8)
  %306 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %38, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %38, align 8
  %307 = icmp eq %"class.spvtools::opt::Instruction"* %306, null
  br i1 %307, label %313, label %308

308:                                              ; preds = %304
  %309 = bitcast %"class.spvtools::opt::Instruction"* %306 to void (%"class.spvtools::opt::Instruction"*)***
  %310 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %309, align 8
  %311 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %310, i64 1
  %312 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %311, align 8
  call void %312(%"class.spvtools::opt::Instruction"* nonnull %306) #13
  br label %313

313:                                              ; preds = %304, %308
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  br label %314

314:                                              ; preds = %29, %23, %313
  %315 = phi %"class.spvtools::opt::Instruction"* [ %305, %313 ], [ null, %23 ], [ null, %29 ]
  ret %"class.spvtools::opt::Instruction"* %315

316:                                              ; preds = %243
  %317 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %246, i64 0, i32 0, i32 0
  %318 = load i32*, i32** %317, align 8
  %319 = icmp eq i32* %318, null
  br i1 %319, label %325, label %320

320:                                              ; preds = %316
  %321 = ptrtoint i32* %318 to i64
  %322 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %246, i64 0, i32 0, i32 1
  %323 = bitcast i32** %322 to i64*
  store i64 %321, i64* %323, align 8
  %324 = bitcast i32* %318 to i8*
  call void @_ZdlPv(i8* %324) #12
  br label %325

325:                                              ; preds = %320, %316
  %326 = bitcast %"class.std::__1::vector.3"* %246 to i8*
  call void @_ZdlPv(i8* %326) #12
  br label %327

327:                                              ; preds = %325, %243
  %328 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %328, align 8
  %329 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %330 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %329, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %329, align 8
  %331 = icmp eq %"class.std::__1::vector.3"* %330, null
  br i1 %331, label %343, label %332

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %330, i64 0, i32 0, i32 0
  %334 = load i32*, i32** %333, align 8
  %335 = icmp eq i32* %334, null
  br i1 %335, label %341, label %336

336:                                              ; preds = %332
  %337 = ptrtoint i32* %334 to i64
  %338 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %330, i64 0, i32 0, i32 1
  %339 = bitcast i32** %338 to i64*
  store i64 %337, i64* %339, align 8
  %340 = bitcast i32* %334 to i8*
  call void @_ZdlPv(i8* %340) #12
  br label %341

341:                                              ; preds = %336, %332
  %342 = bitcast %"class.std::__1::vector.3"* %330 to i8*
  call void @_ZdlPv(i8* %342) #12
  br label %343

343:                                              ; preds = %341, %327
  %344 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %344, align 8
  %345 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %346 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %345, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %345, align 8
  %347 = icmp eq %"class.std::__1::vector.3"* %346, null
  br i1 %347, label %359, label %348

348:                                              ; preds = %343
  %349 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %346, i64 0, i32 0, i32 0
  %350 = load i32*, i32** %349, align 8
  %351 = icmp eq i32* %350, null
  br i1 %351, label %357, label %352

352:                                              ; preds = %348
  %353 = ptrtoint i32* %350 to i64
  %354 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %346, i64 0, i32 0, i32 1
  %355 = bitcast i32** %354 to i64*
  store i64 %353, i64* %355, align 8
  %356 = bitcast i32* %350 to i8*
  call void @_ZdlPv(i8* %356) #12
  br label %357

357:                                              ; preds = %352, %348
  %358 = bitcast %"class.std::__1::vector.3"* %346 to i8*
  call void @_ZdlPv(i8* %358) #12
  br label %359

359:                                              ; preds = %357, %343
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %360 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %361 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %360, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %360, align 8
  %362 = icmp eq %"class.std::__1::vector.3"* %361, null
  br i1 %362, label %259, label %248
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.21", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca [3 x %"struct.spvtools::opt::Operand"], align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.spvtools::utils::SmallVector", align 8
  %13 = icmp eq i32 %4, -1
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj(%"class.spvtools::opt::InstructionBuilder"* %0, i32 %4, i32 %5)
  br label %16

16:                                               ; preds = %6, %14
  %17 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %18, align 8
  %19 = tail call i8* @_Znwm(i64 112) #12
  %20 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %21 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #13
  %23 = bitcast [3 x %"struct.spvtools::opt::Operand"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %23) #13
  %24 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %29 = bitcast i32** %27 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %28, %"struct.std::__1::aligned_storage<4, 4>::type"** %29, align 8
  %30 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %28 to i32*
  store i64 1, i64* %26, align 8
  store i32 %1, i32* %32, align 8
  %33 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  store i32 1, i32* %33, align 8
  %34 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %35 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %34, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 2
  %38 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 3, i64 0
  %39 = bitcast i32** %37 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %38, %"struct.std::__1::aligned_storage<4, 4>::type"** %39, align 8
  %40 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4
  %41 = bitcast %"class.std::__1::unique_ptr.0"* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %34, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #13
  %43 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43) #13
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %48 = bitcast i32** %46 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %47, %"struct.std::__1::aligned_storage<4, 4>::type"** %48, align 8
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %50 = bitcast %"class.std::__1::unique_ptr.0"* %49 to i64*
  store i64 0, i64* %50, align 8
  %51 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %47 to i32*
  store i64 1, i64* %45, align 8
  store i32 %2, i32* %51, align 8
  %52 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  store i32 1, i32* %52, align 8
  %53 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %54 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %53, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 2
  %57 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 3, i64 0
  %58 = bitcast i32** %56 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %57, %"struct.std::__1::aligned_storage<4, 4>::type"** %58, align 8
  %59 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4
  %60 = bitcast %"class.std::__1::unique_ptr.0"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %53, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #13
  %62 = bitcast %"class.spvtools::utils::SmallVector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #13
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 1
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 2
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 3, i64 0
  %67 = bitcast i32** %65 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %66, %"struct.std::__1::aligned_storage<4, 4>::type"** %67, align 8
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4
  %69 = bitcast %"class.std::__1::unique_ptr.0"* %68 to i64*
  store i64 0, i64* %69, align 8
  %70 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %66 to i32*
  store i64 1, i64* %64, align 8
  store i32 %3, i32* %70, align 8
  %71 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 0
  store i32 1, i32* %71, align 8
  %72 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %72, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 1
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 2
  %76 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 3, i64 0
  %77 = bitcast i32** %75 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %76, %"struct.std::__1::aligned_storage<4, 4>::type"** %77, align 8
  %78 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 4
  %79 = bitcast %"class.std::__1::unique_ptr.0"* %78 to i64*
  store i64 0, i64* %79, align 8
  %80 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %72, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %12) #13
  %81 = call i8* @_Znwm(i64 144) #12
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %83 = bitcast %"struct.spvtools::opt::Operand"** %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %81, i8** %84, align 8
  %85 = getelementptr inbounds i8, i8* %81, i64 144
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"struct.spvtools::opt::Operand"** %86 to i8**
  store i8* %85, i8** %87, align 8
  %88 = bitcast i8* %81 to i32*
  %89 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %88, align 8
  %91 = getelementptr inbounds i8, i8* %81, i64 8
  %92 = bitcast i8* %91 to %"class.spvtools::utils::SmallVector"*
  %93 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %94 = bitcast i8* %91 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds i8, i8* %81, i64 16
  %96 = bitcast i8* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %81, i64 24
  %98 = getelementptr inbounds i8, i8* %81, i64 32
  %99 = bitcast i8* %97 to i8**
  store i8* %98, i8** %99, align 8
  %100 = getelementptr inbounds i8, i8* %81, i64 40
  %101 = bitcast i8* %100 to i64*
  store i64 0, i64* %101, align 8
  %102 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %92, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %93) #13
  %103 = getelementptr inbounds i8, i8* %81, i64 48
  %104 = bitcast i8* %103 to i32*
  %105 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  %106 = load i32, i32* %105, align 8
  store i32 %106, i32* %104, align 8
  %107 = getelementptr inbounds i8, i8* %81, i64 56
  %108 = bitcast i8* %107 to %"class.spvtools::utils::SmallVector"*
  %109 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %110 = bitcast i8* %107 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %111 = getelementptr inbounds i8, i8* %81, i64 64
  %112 = bitcast i8* %111 to i64*
  store i64 0, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %81, i64 72
  %114 = getelementptr inbounds i8, i8* %81, i64 80
  %115 = bitcast i8* %113 to i8**
  store i8* %114, i8** %115, align 8
  %116 = getelementptr inbounds i8, i8* %81, i64 88
  %117 = bitcast i8* %116 to i64*
  store i64 0, i64* %117, align 8
  %118 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %108, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %109) #13
  %119 = getelementptr inbounds i8, i8* %81, i64 96
  %120 = bitcast i8* %119 to i32*
  %121 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 0
  %122 = load i32, i32* %121, align 8
  store i32 %122, i32* %120, align 8
  %123 = getelementptr inbounds i8, i8* %81, i64 104
  %124 = bitcast i8* %123 to %"class.spvtools::utils::SmallVector"*
  %125 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1
  %126 = bitcast i8* %123 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %127 = getelementptr inbounds i8, i8* %81, i64 112
  %128 = bitcast i8* %127 to i64*
  store i64 0, i64* %128, align 8
  %129 = getelementptr inbounds i8, i8* %81, i64 120
  %130 = getelementptr inbounds i8, i8* %81, i64 128
  %131 = bitcast i8* %129 to i8**
  store i8* %130, i8** %131, align 8
  %132 = getelementptr inbounds i8, i8* %81, i64 136
  %133 = bitcast i8* %132 to i64*
  store i64 0, i64* %133, align 8
  %134 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %124, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %125) #13
  %135 = getelementptr inbounds i8, i8* %81, i64 144
  %136 = bitcast i8* %19 to %"class.spvtools::opt::Instruction"*
  %137 = bitcast %"struct.spvtools::opt::Operand"** %82 to i64*
  %138 = ptrtoint i8* %135 to i64
  store i64 %138, i64* %137, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %136, %"class.spvtools::opt::IRContext"* %21, i32 250, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #13
  %139 = ptrtoint i8* %19 to i64
  %140 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %142 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %143 = icmp eq %"struct.spvtools::opt::Operand"* %142, null
  br i1 %143, label %172, label %144

144:                                              ; preds = %16
  %145 = bitcast %"struct.spvtools::opt::Operand"* %142 to i8*
  %146 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %82, align 8
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %146, %142
  br i1 %147, label %170, label %148

148:                                              ; preds = %144, %166
  %149 = phi %"struct.spvtools::opt::Operand"* [ %150, %166 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1
  %151 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %152, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %152, align 8
  %154 = icmp eq %"class.std::__1::vector.3"* %153, null
  br i1 %154, label %166, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = icmp eq i32* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i32* %157 to i64
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 1
  %162 = bitcast i32** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast i32* %157 to i8*
  call void @_ZdlPv(i8* %163) #12
  br label %164

164:                                              ; preds = %159, %155
  %165 = bitcast %"class.std::__1::vector.3"* %153 to i8*
  call void @_ZdlPv(i8* %165) #12
  br label %166

166:                                              ; preds = %164, %148
  %167 = icmp eq %"struct.spvtools::opt::Operand"* %150, %142
  br i1 %167, label %168, label %148

168:                                              ; preds = %166
  %169 = load i8*, i8** %84, align 8
  br label %170

170:                                              ; preds = %168, %144
  %171 = phi i8* [ %169, %168 ], [ %145, %144 ]
  store %"struct.spvtools::opt::Operand"* %142, %"struct.spvtools::opt::Operand"** %82, align 8
  call void @_ZdlPv(i8* %171) #12
  br label %172

172:                                              ; preds = %16, %170
  %173 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %173, align 8
  %174 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 4, i32 0, i32 0, i32 0
  %175 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %174, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %174, align 8
  %176 = icmp eq %"class.std::__1::vector.3"* %175, null
  br i1 %176, label %188, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %175, i64 0, i32 0, i32 0
  %179 = load i32*, i32** %178, align 8
  %180 = icmp eq i32* %179, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %177
  %182 = ptrtoint i32* %179 to i64
  %183 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %175, i64 0, i32 0, i32 1
  %184 = bitcast i32** %183 to i64*
  store i64 %182, i64* %184, align 8
  %185 = bitcast i32* %179 to i8*
  call void @_ZdlPv(i8* %185) #12
  br label %186

186:                                              ; preds = %181, %177
  %187 = bitcast %"class.std::__1::vector.3"* %175 to i8*
  call void @_ZdlPv(i8* %187) #12
  br label %188

188:                                              ; preds = %172, %186
  %189 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %189, align 8
  %190 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %191 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %190, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %190, align 8
  %192 = icmp eq %"class.std::__1::vector.3"* %191, null
  br i1 %192, label %255, label %244

193:                                              ; preds = %271
  %194 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %273, i64 0, i32 0, i32 0
  %195 = load i32*, i32** %194, align 8
  %196 = icmp eq i32* %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %193
  %198 = ptrtoint i32* %195 to i64
  %199 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %273, i64 0, i32 0, i32 1
  %200 = bitcast i32** %199 to i64*
  store i64 %198, i64* %200, align 8
  %201 = bitcast i32* %195 to i8*
  call void @_ZdlPv(i8* %201) #12
  br label %202

202:                                              ; preds = %197, %193
  %203 = bitcast %"class.std::__1::vector.3"* %273 to i8*
  call void @_ZdlPv(i8* %203) #12
  br label %204

204:                                              ; preds = %271, %202
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %205 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %206 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %205, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %205, align 8
  %207 = icmp eq %"class.std::__1::vector.3"* %206, null
  br i1 %207, label %219, label %208

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 0
  %210 = load i32*, i32** %209, align 8
  %211 = icmp eq i32* %210, null
  br i1 %211, label %217, label %212

212:                                              ; preds = %208
  %213 = ptrtoint i32* %210 to i64
  %214 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 1
  %215 = bitcast i32** %214 to i64*
  store i64 %213, i64* %215, align 8
  %216 = bitcast i32* %210 to i8*
  call void @_ZdlPv(i8* %216) #12
  br label %217

217:                                              ; preds = %212, %208
  %218 = bitcast %"class.std::__1::vector.3"* %206 to i8*
  call void @_ZdlPv(i8* %218) #12
  br label %219

219:                                              ; preds = %204, %217
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %220 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %221 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %220, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %220, align 8
  %222 = icmp eq %"class.std::__1::vector.3"* %221, null
  br i1 %222, label %234, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 0
  %225 = load i32*, i32** %224, align 8
  %226 = icmp eq i32* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %223
  %228 = ptrtoint i32* %225 to i64
  %229 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 1
  %230 = bitcast i32** %229 to i64*
  store i64 %228, i64* %230, align 8
  %231 = bitcast i32* %225 to i8*
  call void @_ZdlPv(i8* %231) #12
  br label %232

232:                                              ; preds = %227, %223
  %233 = bitcast %"class.std::__1::vector.3"* %221 to i8*
  call void @_ZdlPv(i8* %233) #12
  br label %234

234:                                              ; preds = %219, %232
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #13
  %235 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %7)
  %236 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %18, align 8
  %237 = icmp eq %"class.spvtools::opt::Instruction"* %236, null
  br i1 %237, label %243, label %238

238:                                              ; preds = %234
  %239 = bitcast %"class.spvtools::opt::Instruction"* %236 to void (%"class.spvtools::opt::Instruction"*)***
  %240 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %240, i64 1
  %242 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %241, align 8
  call void %242(%"class.spvtools::opt::Instruction"* nonnull %236) #13
  br label %243

243:                                              ; preds = %234, %238
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  ret %"class.spvtools::opt::Instruction"* %235

244:                                              ; preds = %188
  %245 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %191, i64 0, i32 0, i32 0
  %246 = load i32*, i32** %245, align 8
  %247 = icmp eq i32* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %244
  %249 = ptrtoint i32* %246 to i64
  %250 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %191, i64 0, i32 0, i32 1
  %251 = bitcast i32** %250 to i64*
  store i64 %249, i64* %251, align 8
  %252 = bitcast i32* %246 to i8*
  call void @_ZdlPv(i8* %252) #12
  br label %253

253:                                              ; preds = %248, %244
  %254 = bitcast %"class.std::__1::vector.3"* %191 to i8*
  call void @_ZdlPv(i8* %254) #12
  br label %255

255:                                              ; preds = %253, %188
  %256 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %256, align 8
  %257 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %258 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %257, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %257, align 8
  %259 = icmp eq %"class.std::__1::vector.3"* %258, null
  br i1 %259, label %271, label %260

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %258, i64 0, i32 0, i32 0
  %262 = load i32*, i32** %261, align 8
  %263 = icmp eq i32* %262, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %260
  %265 = ptrtoint i32* %262 to i64
  %266 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %258, i64 0, i32 0, i32 1
  %267 = bitcast i32** %266 to i64*
  store i64 %265, i64* %267, align 8
  %268 = bitcast i32* %262 to i8*
  call void @_ZdlPv(i8* %268) #12
  br label %269

269:                                              ; preds = %264, %260
  %270 = bitcast %"class.std::__1::vector.3"* %258 to i8*
  call void @_ZdlPv(i8* %270) #12
  br label %271

271:                                              ; preds = %269, %255
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %272 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %273 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %272, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %272, align 8
  %274 = icmp eq %"class.std::__1::vector.3"* %273, null
  br i1 %274, label %204, label %193
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.21", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 112) #12
  %10 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #13
  %13 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #13
  %14 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %19 = bitcast i32** %17 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %18, %"struct.std::__1::aligned_storage<4, 4>::type"** %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %21 = bitcast %"class.std::__1::unique_ptr.0"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %18 to i32*
  store i64 1, i64* %16, align 8
  store i32 %1, i32* %22, align 8
  %23 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %24, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 2
  %28 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 3, i64 0
  %29 = bitcast i32** %27 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %28, %"struct.std::__1::aligned_storage<4, 4>::type"** %29, align 8
  %30 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %24, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #13
  %33 = call i8* @_Znwm(i64 48) #12
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %33, i64 48
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"struct.spvtools::opt::Operand"** %37 to i8**
  store i8* %36, i8** %38, align 8
  %39 = bitcast i8* %33 to i32*
  %40 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %39, align 8
  %42 = getelementptr inbounds i8, i8* %33, i64 8
  %43 = bitcast i8* %42 to %"class.spvtools::utils::SmallVector"*
  %44 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %45 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds i8, i8* %33, i64 16
  %47 = bitcast i8* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %33, i64 24
  %49 = getelementptr inbounds i8, i8* %33, i64 32
  %50 = bitcast i8* %48 to i8**
  store i8* %49, i8** %50, align 8
  %51 = getelementptr inbounds i8, i8* %33, i64 40
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %43, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %44) #13
  %54 = getelementptr inbounds i8, i8* %33, i64 48
  %55 = bitcast i8* %9 to %"class.spvtools::opt::Instruction"*
  %56 = bitcast %"struct.spvtools::opt::Operand"** %34 to i64*
  %57 = ptrtoint i8* %54 to i64
  store i64 %57, i64* %56, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %55, %"class.spvtools::opt::IRContext"* %11, i32 249, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #13
  %58 = ptrtoint i8* %9 to i64
  %59 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %61 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %60, align 8
  %62 = icmp eq %"struct.spvtools::opt::Operand"* %61, null
  br i1 %62, label %91, label %63

63:                                               ; preds = %2
  %64 = bitcast %"struct.spvtools::opt::Operand"* %61 to i8*
  %65 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %34, align 8
  %66 = icmp eq %"struct.spvtools::opt::Operand"* %65, %61
  br i1 %66, label %89, label %67

67:                                               ; preds = %63, %85
  %68 = phi %"struct.spvtools::opt::Operand"* [ %69, %85 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %71, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %71, align 8
  %73 = icmp eq %"class.std::__1::vector.3"* %72, null
  br i1 %73, label %85, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = ptrtoint i32* %76 to i64
  %80 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 1
  %81 = bitcast i32** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast i32* %76 to i8*
  call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %78, %74
  %84 = bitcast %"class.std::__1::vector.3"* %72 to i8*
  call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %83, %67
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %69, %61
  br i1 %86, label %87, label %67

87:                                               ; preds = %85
  %88 = load i8*, i8** %35, align 8
  br label %89

89:                                               ; preds = %87, %63
  %90 = phi i8* [ %88, %87 ], [ %64, %63 ]
  store %"struct.spvtools::opt::Operand"* %61, %"struct.spvtools::opt::Operand"** %34, align 8
  call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %2, %89
  %92 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %94 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %93, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %93, align 8
  %95 = icmp eq %"class.std::__1::vector.3"* %94, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint i32* %98 to i64
  %102 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 1
  %103 = bitcast i32** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %100, %96
  %106 = bitcast %"class.std::__1::vector.3"* %94 to i8*
  call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %91, %105
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %108 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %115, %111
  %121 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %107, %120
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #13
  %123 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %3)
  %124 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %8, align 8
  %125 = icmp eq %"class.spvtools::opt::Instruction"* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.spvtools::opt::Instruction"* %124 to void (%"class.spvtools::opt::Instruction"*)***
  %128 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %128, i64 1
  %130 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %129, align 8
  call void %130(%"class.spvtools::opt::Instruction"* nonnull %124) #13
  br label %131

131:                                              ; preds = %122, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret %"class.spvtools::opt::Instruction"* %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder12AddNullaryOpEj6SpvOp_(%"class.spvtools::opt::InstructionBuilder"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.21", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %10, align 8
  %12 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %11) #13
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 5, i32 0, i32 2
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 2
  %18 = load i8, i8* %17, align 8, !range !6
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %80

20:                                               ; preds = %14
  %21 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %22 = getelementptr inbounds i8, i8* %21, i64 37
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 5, i32 0, i32 1, i32 0
  %24 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 5, i32 0, i32 0
  tail call void %24(%"union.std::__1::__function::__policy_storage"* %25, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %21) #13
  tail call void @_ZdlPv(i8* nonnull %21) #12
  br label %80

26:                                               ; preds = %7, %3
  %27 = phi i32 [ 0, %3 ], [ %12, %7 ]
  %28 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %4, i64 0, i32 0, i32 0, i32 0
  %30 = tail call i8* @_Znwm(i64 112) #12
  %31 = bitcast i8* %30 to %"class.spvtools::opt::Instruction"*
  %32 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %33 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #13
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %31, %"class.spvtools::opt::IRContext"* %33, i32 %2, i32 %1, i32 %27, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #13
  %35 = ptrtoint i8* %30 to i64
  %36 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %38 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %37, align 8
  %39 = icmp eq %"struct.spvtools::opt::Operand"* %38, null
  br i1 %39, label %70, label %40

40:                                               ; preds = %26
  %41 = bitcast %"struct.spvtools::opt::Operand"* %38 to i8*
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %43 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %42, align 8
  %44 = icmp eq %"struct.spvtools::opt::Operand"* %43, %38
  br i1 %44, label %68, label %45

45:                                               ; preds = %40, %63
  %46 = phi %"struct.spvtools::opt::Operand"* [ %47, %63 ], [ %43, %40 ]
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %46, i64 -1
  %48 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %46, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %46, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %49, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %49, align 8
  %51 = icmp eq %"class.std::__1::vector.3"* %50, null
  br i1 %51, label %63, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 0, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = icmp eq i32* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = ptrtoint i32* %54 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 0, i32 0, i32 1
  %59 = bitcast i32** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast i32* %54 to i8*
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %56, %52
  %62 = bitcast %"class.std::__1::vector.3"* %50 to i8*
  call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %61, %45
  %64 = icmp eq %"struct.spvtools::opt::Operand"* %47, %38
  br i1 %64, label %65, label %45

65:                                               ; preds = %63
  %66 = bitcast %"class.std::__1::vector"* %5 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %65, %40
  %69 = phi i8* [ %67, %65 ], [ %41, %40 ]
  store %"struct.spvtools::opt::Operand"* %38, %"struct.spvtools::opt::Operand"** %42, align 8
  call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %26, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #13
  %71 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %4)
  %72 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %29, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %29, align 8
  %73 = icmp eq %"class.spvtools::opt::Instruction"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.spvtools::opt::Instruction"* %72 to void (%"class.spvtools::opt::Instruction"*)***
  %76 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %76, i64 1
  %78 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, align 8
  call void %78(%"class.spvtools::opt::Instruction"* nonnull %72) #13
  br label %79

79:                                               ; preds = %70, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %80

80:                                               ; preds = %20, %14, %79
  %81 = phi %"class.spvtools::opt::Instruction"* [ %71, %79 ], [ null, %14 ], [ null, %20 ]
  ret %"class.spvtools::opt::Instruction"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1061", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 2
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %6, %"class.spvtools::opt::InstructionList::iterator"* %8, %"class.std::__1::unique_ptr.21"* dereferenceable(8) %1) #13
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 1
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::BasicBlock"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  store %"class.spvtools::opt::Instruction"* %10, %"class.spvtools::opt::Instruction"** %5, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 9, i32 0
  %29 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #13
  %32 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %28, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %4) #13
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %33, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.178"* %34 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  store %"class.spvtools::opt::BasicBlock"* %24, %"class.spvtools::opt::BasicBlock"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %2, %17, %22, %26
  %40 = phi i32 [ %14, %2 ], [ %14, %17 ], [ %14, %22 ], [ %38, %26 ]
  %41 = phi %"class.spvtools::opt::IRContext"* [ %12, %2 ], [ %12, %17 ], [ %12, %22 ], [ %36, %26 ]
  %42 = and i32 %40, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 6, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %50, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %51, %"class.spvtools::opt::Instruction"* %10) #13
  br label %52

52:                                               ; preds = %39, %44, %49
  ret %"class.spvtools::opt::Instruction"* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.std::initializer_list.973"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = tail call i8* @_Znwm(i64 112) #12
  %8 = bitcast i8* %7 to %"class.spvtools::opt::Instruction"*
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %0, align 8
  %10 = load i32, i32* %1, align 4
  %11 = load i32, i32* %2, align 4
  %12 = load i32, i32* %3, align 4
  %13 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.std::initializer_list.973", %"class.std::initializer_list.973"* %4, i64 0, i32 0
  %15 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %14, align 8
  %16 = getelementptr inbounds %"class.std::initializer_list.973", %"class.std::initializer_list.973"* %4, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #13
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %55, label %19

19:                                               ; preds = %5
  %20 = icmp ugt i64 %17, 384307168202282325
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #14
  unreachable

23:                                               ; preds = %19
  %24 = mul i64 %17, 48
  %25 = tail call i8* @_Znwm(i64 %24) #12
  %26 = bitcast i8* %25 to %"struct.spvtools::opt::Operand"*
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %28 = bitcast %"struct.spvtools::opt::Operand"** %27 to i8**
  store i8* %25, i8** %28, align 8
  %29 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %25, i8** %29, align 8
  %30 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %26, i64 %17
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.spvtools::opt::Operand"* %30, %"struct.spvtools::opt::Operand"** %31, align 8
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 %17
  br label %33

33:                                               ; preds = %33, %23
  %34 = phi %"struct.spvtools::opt::Operand"* [ %50, %33 ], [ %26, %23 ]
  %35 = phi %"struct.spvtools::opt::Operand"* [ %49, %33 ], [ %15, %23 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %36, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 1
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %39, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 1
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 2
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 3, i64 0
  %45 = bitcast i32** %43 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %44, %"struct.std::__1::aligned_storage<4, 4>::type"** %45, align 8
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 4
  %47 = bitcast %"class.std::__1::unique_ptr.0"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %39, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %40) #13
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 1
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = icmp eq %"struct.spvtools::opt::Operand"* %49, %32
  br i1 %51, label %52, label %33

52:                                               ; preds = %33
  %53 = bitcast %"struct.spvtools::opt::Operand"** %27 to i64*
  %54 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  store i64 %54, i64* %53, align 8
  br label %55

55:                                               ; preds = %5, %52
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %8, %"class.spvtools::opt::IRContext"* %9, i32 %10, i32 %11, i32 %12, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #13
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %57 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %56, align 8
  %58 = icmp eq %"struct.spvtools::opt::Operand"* %57, null
  br i1 %58, label %89, label %59

59:                                               ; preds = %55
  %60 = bitcast %"struct.spvtools::opt::Operand"* %57 to i8*
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %62 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %61, align 8
  %63 = icmp eq %"struct.spvtools::opt::Operand"* %62, %57
  br i1 %63, label %87, label %64

64:                                               ; preds = %59, %82
  %65 = phi %"struct.spvtools::opt::Operand"* [ %66, %82 ], [ %62, %59 ]
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %68, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %68, align 8
  %70 = icmp eq %"class.std::__1::vector.3"* %69, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %69, i64 0, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = icmp eq i32* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = ptrtoint i32* %73 to i64
  %77 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %69, i64 0, i32 0, i32 1
  %78 = bitcast i32** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast i32* %73 to i8*
  call void @_ZdlPv(i8* %79) #12
  br label %80

80:                                               ; preds = %75, %71
  %81 = bitcast %"class.std::__1::vector.3"* %69 to i8*
  call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %80, %64
  %83 = icmp eq %"struct.spvtools::opt::Operand"* %66, %57
  br i1 %83, label %84, label %64

84:                                               ; preds = %82
  %85 = bitcast %"class.std::__1::vector"* %6 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %84, %59
  %88 = phi i8* [ %86, %84 ], [ %60, %59 ]
  store %"struct.spvtools::opt::Operand"* %57, %"struct.spvtools::opt::Operand"** %61, align 8
  call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %55, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  ret %"class.spvtools::opt::Instruction"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14InstrumentPass10SplitBlockENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPNSt3__16vectorINS7_10unique_ptrIS5_NS7_14default_deleteIS5_EEEENS7_9allocatorISC_EEEE(%"class.spvtools::opt::InstrumentPass"*, %"class.spvtools::opt::InstructionList::iterator"* nocapture readonly, %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::vector.38"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.40", align 8
  %7 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %8 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %9 = alloca %"class.std::__1::unique_ptr.40", align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %40

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %17, align 8
  %19 = tail call i8* @_Znwm(i64 104) #12
  %20 = bitcast i8* %19 to %"class.spvtools::opt::analysis::DefUseManager"*
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 48
  %24 = getelementptr inbounds i8, i8* %19, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #13
  %25 = bitcast i8* %24 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 64
  %27 = getelementptr inbounds i8, i8* %19, i64 96
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %28, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %20, %"class.spvtools::opt::Module"* %18) #13
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 6
  %30 = ptrtoint i8* %19 to i64
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %29, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.62"* %29 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %32, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %16
  %36 = bitcast %"class.std::__1::unique_ptr.62"* %29 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %36, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %32) #13
  br label %37

37:                                               ; preds = %35, %16
  %38 = load i32, i32* %12, align 8
  %39 = or i32 %38, 1
  store i32 %39, i32* %12, align 8
  br label %40

40:                                               ; preds = %5, %37
  %41 = bitcast %"class.std::__1::unique_ptr.40"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #13
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %6, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.std::__1::unique_ptr.40"* %6 to i64*
  store i64 0, i64* %43, align 8
  %44 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %1 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %7 to i64*
  store i64 %45, i64* %46, align 8
  call void @_ZN8spvtools3opt14InstrumentPass15MovePreludeCodeENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPNSt3__110unique_ptrIS5_NS7_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstrumentPass"* %0, %"class.spvtools::opt::InstructionList::iterator"* nonnull %7, %"class.std::__1::vector.38"* %2, %"class.std::__1::unique_ptr.40"* %3, %"class.std::__1::unique_ptr.40"* nonnull %6)
  %47 = bitcast %"class.spvtools::opt::InstructionBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #13
  %48 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %8, i64 0, i32 0
  %49 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %8, i64 0, i32 1
  %50 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %8, i64 0, i32 3
  %51 = bitcast %"class.spvtools::opt::InstructionBuilder"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 32, i1 false)
  %52 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %53 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %42, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %53, i64 0, i32 2, i32 0, i32 1
  %55 = ptrtoint %"class.spvtools::opt::Instruction"* %54 to i64
  store %"class.spvtools::opt::IRContext"* %52, %"class.spvtools::opt::IRContext"** %48, align 8
  store %"class.spvtools::opt::BasicBlock"* %53, %"class.spvtools::opt::BasicBlock"** %49, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %8, i64 0, i32 2
  %57 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %56 to i64*
  store i64 %55, i64* %57, align 8
  store i32 3, i32* %50, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %52, i64 0, i32 4, i32 0, i32 0, i32 0
  %59 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %58, align 8
  %60 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %59) #13
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %40
  %63 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %52, i64 0, i32 5, i32 0, i32 2
  %64 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %64, i64 0, i32 2
  %66 = load i8, i8* %65, align 8, !range !6
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %74

68:                                               ; preds = %62
  %69 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %69, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %70 = getelementptr inbounds i8, i8* %69, i64 37
  store i8 0, i8* %70, align 1
  %71 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %52, i64 0, i32 5, i32 0, i32 1, i32 0
  %72 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %71, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %52, i64 0, i32 5, i32 0, i32 0
  call void %72(%"union.std::__1::__function::__policy_storage"* %73, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %69) #13
  call void @_ZdlPv(i8* nonnull %69) #12
  br label %74

74:                                               ; preds = %40, %62, %68
  %75 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt14InstrumentPass8NewLabelEj(%"class.spvtools::opt::InstrumentPass"* %0, i32 %60)
  %76 = ptrtoint %"class.spvtools::opt::Instruction"* %75 to i64
  %77 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %8, i32 %60)
  %78 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %4, i64 0, i32 0, i32 1
  %79 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %81 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %80, align 8
  %82 = icmp ult %"class.std::__1::unique_ptr.40"* %79, %81
  br i1 %82, label %83, label %89

83:                                               ; preds = %74
  %84 = load i64, i64* %43, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %42, align 8
  %85 = bitcast %"class.std::__1::unique_ptr.40"* %79 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %79, i64 1
  %87 = ptrtoint %"class.std::__1::unique_ptr.40"* %86 to i64
  %88 = bitcast %"class.std::__1::unique_ptr.40"** %78 to i64*
  store i64 %87, i64* %88, align 8
  br label %90

89:                                               ; preds = %74
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %4, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %6) #13
  br label %90

90:                                               ; preds = %83, %89
  %91 = bitcast %"class.std::__1::unique_ptr.40"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #13
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %9, i64 0, i32 0, i32 0, i32 0
  %93 = call i8* @_Znwm(i64 136) #12
  %94 = bitcast i8* %93 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %94, align 8
  %95 = getelementptr inbounds i8, i8* %93, i64 8
  %96 = bitcast i8* %95 to i64*
  store i64 %76, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %93, i64 16
  %98 = bitcast i8* %97 to i32 (...)***
  %99 = getelementptr inbounds i8, i8* %93, i64 24
  %100 = bitcast i8* %99 to i32 (...)***
  %101 = getelementptr inbounds i8, i8* %93, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %100, align 8
  %102 = getelementptr inbounds i8, i8* %93, i64 56
  %103 = getelementptr inbounds i8, i8* %93, i64 72
  %104 = bitcast i8* %103 to i32*
  store i32 0, i32* %104, align 8
  %105 = getelementptr inbounds i8, i8* %93, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 14, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 56, i1 false) #13
  %106 = bitcast i8* %101 to i8**
  store i8* %99, i8** %106, align 8
  %107 = getelementptr inbounds i8, i8* %93, i64 40
  %108 = bitcast i8* %107 to i8**
  store i8* %99, i8** %108, align 8
  %109 = getelementptr inbounds i8, i8* %93, i64 48
  store i8 1, i8* %109, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %110 = ptrtoint i8* %93 to i64
  %111 = bitcast %"class.std::__1::unique_ptr.40"* %9 to i64*
  store i64 %110, i64* %111, align 8
  %112 = bitcast i8* %93 to %"class.spvtools::opt::BasicBlock"*
  call void @_ZN8spvtools3opt14InstrumentPass16MovePostludeCodeENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPS3_(%"class.spvtools::opt::InstrumentPass"* %0, %"class.std::__1::vector.38"* %2, %"class.std::__1::unique_ptr.40"* %3, %"class.spvtools::opt::BasicBlock"* nonnull %112)
  %113 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %78, align 8
  %114 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %80, align 8
  %115 = icmp ult %"class.std::__1::unique_ptr.40"* %113, %114
  br i1 %115, label %116, label %121

116:                                              ; preds = %90
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %92, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.40"* %113 to i64*
  store i64 %110, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %113, i64 1
  %119 = ptrtoint %"class.std::__1::unique_ptr.40"* %118 to i64
  %120 = bitcast %"class.std::__1::unique_ptr.40"** %78 to i64*
  store i64 %119, i64* %120, align 8
  br label %122

121:                                              ; preds = %90
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %4, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %9) #13
  br label %122

122:                                              ; preds = %116, %121
  %123 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %92, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %92, align 8
  %124 = icmp eq %"class.spvtools::opt::BasicBlock"* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %122
  %126 = bitcast %"class.std::__1::unique_ptr.40"* %9 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %126, %"class.spvtools::opt::BasicBlock"* nonnull %123) #13
  br label %127

127:                                              ; preds = %125, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #13
  %128 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %42, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %42, align 8
  %129 = icmp eq %"class.spvtools::opt::BasicBlock"* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = bitcast %"class.std::__1::unique_ptr.40"* %6 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %131, %"class.spvtools::opt::BasicBlock"* nonnull %128) #13
  br label %132

132:                                              ; preds = %127, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt14InstrumentPass18InstrumentFunctionEPNS0_8FunctionEjRNSt3__18functionIFvNS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNS4_6vectorINS4_10unique_ptrIS9_NS4_14default_deleteIS9_EEEENS4_9allocatorISF_EEEEEEE(%"class.spvtools::opt::InstrumentPass"*, %"class.spvtools::opt::Function"*, i32, %"class.std::__1::function.974"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.spvtools::opt::UptrVectorIterator", align 8
  %6 = alloca %"class.std::__1::tuple.1174", align 8
  %7 = alloca %"class.std::__1::tuple.1061", align 1
  %8 = alloca %"class.std::__1::vector.38", align 8
  %9 = alloca %"class.spvtools::opt::UptrVectorIterator", align 8
  %10 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %11 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %12 = alloca i32, align 4
  %13 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 31
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 30, i32 0, i32 2, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %77, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 30, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.915"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.915"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %22, i64 2
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %22, i64 3
  %32 = bitcast %"struct.std::__1::__hash_node_base.915"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  %36 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %18, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %59, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = add i64 %39, -1
  %44 = and i64 %39, 3
  %45 = icmp ult i64 %43, 3
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = sub i64 %39, %44
  br label %60

48:                                               ; preds = %60, %41
  %49 = phi i64 [ 0, %41 ], [ %74, %60 ]
  %50 = icmp eq i64 %44, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %48, %51
  %52 = phi i64 [ %56, %51 ], [ %49, %48 ]
  %53 = phi i64 [ %57, %51 ], [ %44, %48 ]
  %54 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %42, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %54, i64 %52
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %55, align 8
  %56 = add nuw i64 %52, 1
  %57 = add i64 %53, -1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %51, !llvm.loop !59

59:                                               ; preds = %48, %51, %37
  store i64 0, i64* %14, align 8
  br label %77

60:                                               ; preds = %60, %46
  %61 = phi i64 [ 0, %46 ], [ %74, %60 ]
  %62 = phi i64 [ %47, %46 ], [ %75, %60 ]
  %63 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %42, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %63, i64 %61
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %64, align 8
  %65 = or i64 %61, 1
  %66 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %42, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %66, i64 %65
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %67, align 8
  %68 = or i64 %61, 2
  %69 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %42, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %69, i64 %68
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %70, align 8
  %71 = or i64 %61, 3
  %72 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %42, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %74 = add nuw i64 %61, 4
  %75 = add i64 %62, -4
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %48, label %60

77:                                               ; preds = %4, %59
  %78 = bitcast %"class.std::__1::vector.38"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #13
  %79 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %8, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 24, i1 false) #13
  %81 = bitcast %"class.spvtools::opt::UptrVectorIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #13
  %82 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %9, i64 0, i32 0
  %83 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %9, i64 0, i32 1, i32 0
  %84 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3
  %85 = bitcast %"class.std::__1::vector.38"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.std::__1::vector.38"* %84, %"class.std::__1::vector.38"** %82, align 8
  %87 = bitcast %"class.std::__1::unique_ptr.40"** %83 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %89 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %88, align 8
  %90 = inttoptr i64 %86 to %"class.std::__1::unique_ptr.40"*
  %91 = icmp eq %"class.std::__1::unique_ptr.40"* %89, %90
  br i1 %91, label %92, label %93

92:                                               ; preds = %77
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  br label %135

93:                                               ; preds = %77
  %94 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 32
  %95 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %11 to i64*
  %96 = bitcast %"class.spvtools::opt::UptrVectorIterator"* %9 to i64*
  %97 = bitcast %"class.spvtools::opt::UptrVectorIterator"* %5 to i8*
  %98 = bitcast %"class.spvtools::opt::UptrVectorIterator"* %5 to i64*
  %99 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %5, i64 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.std::__1::function.974", %"class.std::__1::function.974"* %3, i64 0, i32 0, i32 1, i32 0
  %101 = getelementptr inbounds %"class.std::__1::function.974", %"class.std::__1::function.974"* %3, i64 0, i32 0, i32 0
  %102 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %10 to i64*
  %103 = bitcast %"class.std::__1::unique_ptr.40"** %80 to i64*
  %104 = bitcast %"class.std::__1::vector.38"* %8 to i64*
  %105 = bitcast i32* %12 to i8*
  %106 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 6, i32 0
  %107 = bitcast %"class.std::__1::tuple.1174"* %6 to i8*
  %108 = getelementptr inbounds %"class.std::__1::tuple.1174", %"class.std::__1::tuple.1174"* %6, i64 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %7, i64 0, i32 0
  %110 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %9, i64 0, i32 1
  %111 = bitcast %"class.std::__1::__wrap_iter"* %110 to i64*
  br label %137

112:                                              ; preds = %158
  %113 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %79, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  %114 = and i8 %160, 1
  %115 = icmp ne i8 %114, 0
  %116 = icmp eq %"class.std::__1::unique_ptr.40"* %113, null
  br i1 %116, label %135, label %117

117:                                              ; preds = %112
  %118 = bitcast %"class.std::__1::unique_ptr.40"* %113 to i8*
  %119 = icmp eq %"class.std::__1::unique_ptr.40"* %159, %113
  br i1 %119, label %133, label %120

120:                                              ; preds = %117, %128
  %121 = phi %"class.std::__1::unique_ptr.40"* [ %122, %128 ], [ %159, %117 ]
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %121, i64 -1
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %123, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %123, align 8
  %125 = icmp eq %"class.spvtools::opt::BasicBlock"* %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %120
  %127 = bitcast %"class.std::__1::unique_ptr.40"* %122 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %127, %"class.spvtools::opt::BasicBlock"* nonnull %124) #13
  br label %128

128:                                              ; preds = %126, %120
  %129 = icmp eq %"class.std::__1::unique_ptr.40"* %122, %113
  br i1 %129, label %130, label %120

130:                                              ; preds = %128
  %131 = bitcast %"class.std::__1::vector.38"* %8 to i8**
  %132 = load i8*, i8** %131, align 8
  br label %133

133:                                              ; preds = %130, %117
  %134 = phi i8* [ %132, %130 ], [ %118, %117 ]
  store %"class.std::__1::unique_ptr.40"* %113, %"class.std::__1::unique_ptr.40"** %80, align 8
  call void @_ZdlPv(i8* %134) #12
  br label %135

135:                                              ; preds = %92, %112, %133
  %136 = phi i1 [ false, %92 ], [ %115, %112 ], [ %115, %133 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #13
  ret i1 %136

137:                                              ; preds = %93, %158
  %138 = phi %"class.std::__1::unique_ptr.40"* [ null, %93 ], [ %159, %158 ]
  %139 = phi %"class.std::__1::unique_ptr.40"* [ %90, %93 ], [ %163, %158 ]
  %140 = phi i8 [ 0, %93 ], [ %161, %158 ]
  %141 = phi i8 [ 0, %93 ], [ %160, %158 ]
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %142, align 8
  %144 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %143, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %145 = bitcast %"class.spvtools::opt::Instruction"** %144 to i64*
  %146 = load i64, i64* %145, align 8, !noalias !60
  %147 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %143, i64 0, i32 2, i32 0, i32 1
  %148 = inttoptr i64 %146 to %"class.spvtools::opt::Instruction"*
  %149 = icmp eq %"class.spvtools::opt::Instruction"* %147, %148
  br i1 %149, label %158, label %150

150:                                              ; preds = %137, %377
  %151 = phi %"class.spvtools::opt::Instruction"* [ %382, %377 ], [ %148, %137 ]
  %152 = phi %"class.std::__1::unique_ptr.40"* [ %378, %377 ], [ %139, %137 ]
  %153 = phi i8 [ %189, %377 ], [ %140, %137 ]
  %154 = phi i8 [ 1, %377 ], [ %141, %137 ]
  %155 = phi i64 [ %361, %377 ], [ %146, %137 ]
  br label %169

156:                                              ; preds = %193
  %157 = inttoptr i64 %190 to %"class.std::__1::unique_ptr.40"*
  br label %158

158:                                              ; preds = %377, %156, %137
  %159 = phi %"class.std::__1::unique_ptr.40"* [ %138, %137 ], [ %157, %156 ], [ %362, %377 ]
  %160 = phi i8 [ %141, %137 ], [ %154, %156 ], [ 1, %377 ]
  %161 = phi i8 [ %140, %137 ], [ %189, %156 ], [ %189, %377 ]
  %162 = phi %"class.std::__1::unique_ptr.40"* [ %139, %137 ], [ %198, %156 ], [ %378, %377 ]
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %162, i64 1
  store %"class.std::__1::unique_ptr.40"* %163, %"class.std::__1::unique_ptr.40"** %83, align 8
  %164 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %88, align 8
  %165 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %82, align 8
  %166 = icmp ne %"class.std::__1::vector.38"* %165, %84
  %167 = icmp ne %"class.std::__1::unique_ptr.40"* %163, %164
  %168 = or i1 %166, %167
  br i1 %168, label %137, label %112

169:                                              ; preds = %150, %193
  %170 = phi %"class.spvtools::opt::Instruction"* [ %151, %150 ], [ %202, %193 ]
  %171 = phi %"class.std::__1::unique_ptr.40"* [ %152, %150 ], [ %198, %193 ]
  %172 = phi i8 [ %153, %150 ], [ %189, %193 ]
  %173 = phi i64 [ %155, %150 ], [ %197, %193 ]
  %174 = load i8, i8* %94, align 8, !range !6
  %175 = icmp ne i8 %174, 0
  %176 = and i8 %172, 1
  %177 = icmp eq i8 %176, 0
  %178 = and i1 %177, %175
  br i1 %178, label %179, label %185

179:                                              ; preds = %169
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %170, i64 0, i32 2
  %181 = load i32, i32* %180, align 8
  %182 = icmp eq i32 %181, 59
  br i1 %182, label %188, label %183

183:                                              ; preds = %179
  store i64 %173, i64* %102, align 8
  %184 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %82, align 8
  call void @_ZN8spvtools3opt14InstrumentPass10SplitBlockENS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEPNSt3__16vectorINS7_10unique_ptrIS5_NS7_14default_deleteIS5_EEEENS7_9allocatorISC_EEEE(%"class.spvtools::opt::InstrumentPass"* %0, %"class.spvtools::opt::InstructionList::iterator"* nonnull %10, %"class.std::__1::vector.38"* %184, %"class.std::__1::unique_ptr.40"* %171, %"class.std::__1::vector.38"* nonnull %8)
  br label %188

185:                                              ; preds = %169
  store i64 %173, i64* %95, align 8
  %186 = load i64, i64* %96, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97)
  store i64 %186, i64* %98, align 8
  store %"class.std::__1::unique_ptr.40"* %171, %"class.std::__1::unique_ptr.40"** %99, align 8
  %187 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::InstructionList::iterator"*, %"class.spvtools::opt::UptrVectorIterator"*, i32, %"class.std::__1::vector.38"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::InstructionList::iterator"*, %"class.spvtools::opt::UptrVectorIterator"*, i32, %"class.std::__1::vector.38"*)** %100, align 8
  call void %187(%"union.std::__1::__function::__policy_storage"* %101, %"class.spvtools::opt::InstructionList::iterator"* nonnull dereferenceable(8) %11, %"class.spvtools::opt::UptrVectorIterator"* nonnull dereferenceable(16) %5, i32 %2, %"class.std::__1::vector.38"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97)
  br label %188

188:                                              ; preds = %179, %183, %185
  %189 = phi i8 [ %172, %185 ], [ 1, %183 ], [ %172, %179 ]
  %190 = load i64, i64* %103, align 8
  %191 = load i64, i64* %104, align 8
  %192 = icmp eq i64 %190, %191
  br i1 %192, label %193, label %204

193:                                              ; preds = %188
  %194 = inttoptr i64 %173 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %195 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %194, i64 0, i32 1
  %196 = bitcast %"class.spvtools::opt::Instruction"** %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %83, align 8
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %198, i64 0, i32 0, i32 0, i32 0
  %200 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %199, align 8
  %201 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %200, i64 0, i32 2, i32 0, i32 1
  %202 = inttoptr i64 %197 to %"class.spvtools::opt::Instruction"*
  %203 = icmp eq %"class.spvtools::opt::Instruction"* %201, %202
  br i1 %203, label %156, label %169

204:                                              ; preds = %188
  %205 = inttoptr i64 %191 to %"class.std::__1::unique_ptr.40"*
  %206 = inttoptr i64 %190 to %"class.std::__1::unique_ptr.40"*
  %207 = icmp eq %"class.std::__1::unique_ptr.40"* %205, %206
  br i1 %207, label %211, label %289

208:                                              ; preds = %303
  %209 = load i64, i64* %103, align 8
  %210 = load i64, i64* %104, align 8
  br label %211

211:                                              ; preds = %208, %204
  %212 = phi i64 [ %210, %208 ], [ %191, %204 ]
  %213 = phi i64 [ %209, %208 ], [ %190, %204 ]
  %214 = sub i64 %213, %212
  %215 = ashr exact i64 %214, 3
  call void @_ZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNSt3__16vectorINS2_10unique_ptrINS0_10BasicBlockENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEE(%"class.spvtools::opt::InstrumentPass"* %0, %"class.std::__1::vector.38"* nonnull dereferenceable(24) %8)
  %216 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %82, align 8
  %217 = bitcast %"class.std::__1::vector.38"* %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = load i64, i64* %111, align 8
  %220 = sub i64 %219, %218
  %221 = ashr exact i64 %220, 3
  %222 = inttoptr i64 %219 to %"class.std::__1::unique_ptr.40"*
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %222, i64 1
  %224 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %216, i64 0, i32 0, i32 1
  %225 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %224, align 8
  %226 = icmp eq %"class.std::__1::unique_ptr.40"* %223, %225
  br i1 %226, label %246, label %227

227:                                              ; preds = %211, %239
  %228 = phi %"class.std::__1::unique_ptr.40"* [ %241, %239 ], [ %222, %211 ]
  %229 = phi %"class.std::__1::unique_ptr.40"* [ %240, %239 ], [ %223, %211 ]
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = bitcast %"class.std::__1::unique_ptr.40"* %229 to i64*
  %232 = load i64, i64* %231, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %230, align 8
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %228, i64 0, i32 0, i32 0, i32 0
  %234 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %233, align 8
  %235 = bitcast %"class.std::__1::unique_ptr.40"* %228 to i64*
  store i64 %232, i64* %235, align 8
  %236 = icmp eq %"class.spvtools::opt::BasicBlock"* %234, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %227
  %238 = bitcast %"class.std::__1::unique_ptr.40"* %228 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %238, %"class.spvtools::opt::BasicBlock"* nonnull %234) #13
  br label %239

239:                                              ; preds = %237, %227
  %240 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %229, i64 1
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %228, i64 1
  %242 = icmp eq %"class.std::__1::unique_ptr.40"* %240, %225
  br i1 %242, label %243, label %227

243:                                              ; preds = %239
  %244 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %224, align 8
  %245 = icmp eq %"class.std::__1::unique_ptr.40"* %244, %241
  br i1 %245, label %259, label %246

246:                                              ; preds = %243, %211
  %247 = phi %"class.std::__1::unique_ptr.40"* [ %241, %243 ], [ %222, %211 ]
  %248 = phi %"class.std::__1::unique_ptr.40"* [ %244, %243 ], [ %223, %211 ]
  br label %249

249:                                              ; preds = %257, %246
  %250 = phi %"class.std::__1::unique_ptr.40"* [ %251, %257 ], [ %248, %246 ]
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %250, i64 -1
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %251, i64 0, i32 0, i32 0, i32 0
  %253 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %252, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %252, align 8
  %254 = icmp eq %"class.spvtools::opt::BasicBlock"* %253, null
  br i1 %254, label %257, label %255

255:                                              ; preds = %249
  %256 = bitcast %"class.std::__1::unique_ptr.40"* %251 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %256, %"class.spvtools::opt::BasicBlock"* nonnull %253) #13
  br label %257

257:                                              ; preds = %255, %249
  %258 = icmp eq %"class.std::__1::unique_ptr.40"* %251, %247
  br i1 %258, label %259, label %249

259:                                              ; preds = %257, %243
  %260 = phi %"class.std::__1::unique_ptr.40"* [ %241, %243 ], [ %247, %257 ]
  store %"class.std::__1::unique_ptr.40"* %260, %"class.std::__1::unique_ptr.40"** %224, align 8
  %261 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %82, align 8
  %262 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %261, i64 0, i32 0, i32 0
  %263 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %262, align 8
  %264 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %263, i64 %221
  store %"class.std::__1::unique_ptr.40"* %264, %"class.std::__1::unique_ptr.40"** %83, align 8
  %265 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %79, align 8
  %266 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %80, align 8
  %267 = icmp eq %"class.std::__1::unique_ptr.40"* %265, %266
  br i1 %267, label %311, label %268

268:                                              ; preds = %259
  %269 = ptrtoint %"class.std::__1::unique_ptr.40"* %265 to i64
  %270 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %266, i64 -1
  %271 = ptrtoint %"class.std::__1::unique_ptr.40"* %270 to i64
  %272 = sub i64 %271, %269
  %273 = lshr i64 %272, 3
  %274 = add nuw nsw i64 %273, 1
  %275 = and i64 %274, 7
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %286, label %277

277:                                              ; preds = %268, %277
  %278 = phi %"class.std::__1::unique_ptr.40"* [ %283, %277 ], [ %265, %268 ]
  %279 = phi i64 [ %284, %277 ], [ %275, %268 ]
  %280 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %278, i64 0, i32 0, i32 0, i32 0
  %281 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %280, align 8
  %282 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %281, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %282, align 8
  %283 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %278, i64 1
  %284 = add i64 %279, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %277, !llvm.loop !67

286:                                              ; preds = %277, %268
  %287 = phi %"class.std::__1::unique_ptr.40"* [ %265, %268 ], [ %283, %277 ]
  %288 = icmp ult i64 %272, 56
  br i1 %288, label %311, label %327

289:                                              ; preds = %204, %303
  %290 = phi %"class.std::__1::unique_ptr.40"* [ %309, %303 ], [ %205, %204 ]
  %291 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %290, i64 0, i32 0, i32 0, i32 0
  %292 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %291, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105) #13
  %293 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %292, i64 0, i32 1, i32 0, i32 0, i32 0
  %294 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %293, align 8
  %295 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %294, i64 0, i32 4
  %296 = load i8, i8* %295, align 1, !range !6
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %303, label %298

298:                                              ; preds = %289
  %299 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %294, i64 0, i32 3
  %300 = load i8, i8* %299, align 4, !range !6
  %301 = zext i8 %300 to i32
  %302 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %294, i32 %301) #13
  br label %303

303:                                              ; preds = %289, %298
  %304 = phi i32 [ %302, %298 ], [ 0, %289 ]
  store i32 %304, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #13
  store i32* %12, i32** %108, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %109) #13
  %305 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %106, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1174"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %7) #13
  %306 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %305, 0
  %307 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %306, i64 3
  %308 = bitcast %"struct.std::__1::__hash_node_base.333"* %307 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %109) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #13
  store %"class.spvtools::opt::BasicBlock"* %292, %"class.spvtools::opt::BasicBlock"** %308, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #13
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %290, i64 1
  %310 = icmp eq %"class.std::__1::unique_ptr.40"* %309, %206
  br i1 %310, label %208, label %289

311:                                              ; preds = %286, %327, %259
  %312 = call { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } @_ZN8spvtools3opt18UptrVectorIteratorINS0_10BasicBlockELb0EE12InsertBeforeILb0EEENSt3__19enable_ifIXntT_ES3_E4typeEPNS5_6vectorINS5_10unique_ptrIS2_NS5_14default_deleteIS2_EEEENS5_9allocatorISD_EEEE(%"class.spvtools::opt::UptrVectorIterator"* nonnull %9, %"class.std::__1::vector.38"* nonnull %8)
  %313 = extractvalue { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } %312, 0
  %314 = extractvalue { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } %312, 1
  store %"class.std::__1::vector.38"* %313, %"class.std::__1::vector.38"** %82, align 8
  %315 = icmp eq i64 %214, 8
  %316 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 -1
  %317 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 %215
  %318 = select i1 %315, %"class.std::__1::unique_ptr.40"* %314, %"class.std::__1::unique_ptr.40"* %317
  store %"class.std::__1::unique_ptr.40"* %318, %"class.std::__1::unique_ptr.40"** %83, align 8
  %319 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %318, i64 0, i32 0, i32 0, i32 0
  %320 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %319, align 8
  %321 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %320, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %322 = bitcast %"class.spvtools::opt::Instruction"** %321 to i64*
  %323 = load i64, i64* %322, align 8, !noalias !68
  %324 = inttoptr i64 %323 to %"class.spvtools::opt::Instruction"*
  %325 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %324, i64 0, i32 2
  %326 = load i32, i32* %325, align 8
  switch i32 %326, label %360 [
    i32 245, label %355
    i32 83, label %355
  ]

327:                                              ; preds = %286, %327
  %328 = phi %"class.std::__1::unique_ptr.40"* [ %353, %327 ], [ %287, %286 ]
  %329 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %328, i64 0, i32 0, i32 0, i32 0
  %330 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %329, align 8
  %331 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %330, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %331, align 8
  %332 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %328, i64 1, i32 0, i32 0, i32 0
  %333 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %332, align 8
  %334 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %333, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %334, align 8
  %335 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %328, i64 2, i32 0, i32 0, i32 0
  %336 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %335, align 8
  %337 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %336, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %337, align 8
  %338 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %328, i64 3, i32 0, i32 0, i32 0
  %339 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %338, align 8
  %340 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %339, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %340, align 8
  %341 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %328, i64 4, i32 0, i32 0, i32 0
  %342 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %341, align 8
  %343 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %342, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %343, align 8
  %344 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %328, i64 5, i32 0, i32 0, i32 0
  %345 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %344, align 8
  %346 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %345, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %346, align 8
  %347 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %328, i64 6, i32 0, i32 0, i32 0
  %348 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %347, align 8
  %349 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %348, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %349, align 8
  %350 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %328, i64 7, i32 0, i32 0, i32 0
  %351 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %350, align 8
  %352 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %351, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %352, align 8
  %353 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %328, i64 8
  %354 = icmp eq %"class.std::__1::unique_ptr.40"* %353, %266
  br i1 %354, label %311, label %327

355:                                              ; preds = %311, %311
  %356 = inttoptr i64 %323 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %357 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %356, i64 0, i32 1
  %358 = bitcast %"class.spvtools::opt::Instruction"** %357 to i64*
  %359 = load i64, i64* %358, align 8
  br label %360

360:                                              ; preds = %311, %355
  %361 = phi i64 [ %359, %355 ], [ %323, %311 ]
  %362 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %79, align 8
  %363 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %80, align 8
  %364 = icmp eq %"class.std::__1::unique_ptr.40"* %363, %362
  br i1 %364, label %377, label %365

365:                                              ; preds = %360, %373
  %366 = phi %"class.std::__1::unique_ptr.40"* [ %367, %373 ], [ %363, %360 ]
  %367 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %366, i64 -1
  %368 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %367, i64 0, i32 0, i32 0, i32 0
  %369 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %368, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %368, align 8
  %370 = icmp eq %"class.spvtools::opt::BasicBlock"* %369, null
  br i1 %370, label %373, label %371

371:                                              ; preds = %365
  %372 = bitcast %"class.std::__1::unique_ptr.40"* %367 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %372, %"class.spvtools::opt::BasicBlock"* nonnull %369) #13
  br label %373

373:                                              ; preds = %371, %365
  %374 = icmp eq %"class.std::__1::unique_ptr.40"* %367, %362
  br i1 %374, label %375, label %365

375:                                              ; preds = %373
  %376 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %83, align 8
  br label %377

377:                                              ; preds = %375, %360
  %378 = phi %"class.std::__1::unique_ptr.40"* [ %376, %375 ], [ %318, %360 ]
  store %"class.std::__1::unique_ptr.40"* %362, %"class.std::__1::unique_ptr.40"** %80, align 8
  %379 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %378, i64 0, i32 0, i32 0, i32 0
  %380 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %379, align 8
  %381 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %380, i64 0, i32 2, i32 0, i32 1
  %382 = inttoptr i64 %361 to %"class.spvtools::opt::Instruction"*
  %383 = icmp eq %"class.spvtools::opt::Instruction"* %381, %382
  br i1 %383, label %158, label %150
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } @_ZN8spvtools3opt18UptrVectorIteratorINS0_10BasicBlockELb0EE12InsertBeforeILb0EEENSt3__19enable_ifIXntT_ES3_E4typeEPNS5_6vectorINS5_10unique_ptrIS2_NS5_14default_deleteIS2_EEEENS5_9allocatorISD_EEEE(%"class.spvtools::opt::UptrVectorIterator"*, %"class.std::__1::vector.38"*) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %0, i64 0, i32 0
  %5 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %4, align 8
  %6 = bitcast %"class.std::__1::vector.38"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::__wrap_iter"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %7
  %11 = ashr exact i64 %10, 3
  %12 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %5, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.40"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %7
  %16 = ashr exact i64 %15, 3
  %17 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::unique_ptr.40"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.38"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, %16
  %25 = icmp ult i64 %16, %24
  %26 = inttoptr i64 %7 to %"class.std::__1::unique_ptr.40"*
  %27 = inttoptr i64 %14 to %"class.std::__1::unique_ptr.40"*
  br i1 %25, label %28, label %29

28:                                               ; preds = %2
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm(%"class.std::__1::vector.38"* %5, i64 %23) #13
  br label %45

29:                                               ; preds = %2
  %30 = icmp ugt i64 %16, %24
  br i1 %30, label %31, label %45

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %26, i64 %24
  %33 = icmp eq %"class.std::__1::unique_ptr.40"* %32, %27
  br i1 %33, label %44, label %34

34:                                               ; preds = %31, %42
  %35 = phi %"class.std::__1::unique_ptr.40"* [ %36, %42 ], [ %27, %31 ]
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %35, i64 -1
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %37, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %37, align 8
  %39 = icmp eq %"class.spvtools::opt::BasicBlock"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.std::__1::unique_ptr.40"* %36 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %41, %"class.spvtools::opt::BasicBlock"* nonnull %38) #13
  br label %42

42:                                               ; preds = %40, %34
  %43 = icmp eq %"class.std::__1::unique_ptr.40"* %36, %32
  br i1 %43, label %44, label %34

44:                                               ; preds = %42, %31
  store %"class.std::__1::unique_ptr.40"* %32, %"class.std::__1::unique_ptr.40"** %12, align 8
  br label %45

45:                                               ; preds = %28, %29, %44
  %46 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %4, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %48, i64 %11
  %50 = icmp eq i64 %16, %11
  br i1 %50, label %75, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %46, i64 0, i32 0, i32 1
  %53 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %48, i64 %16
  br label %55

55:                                               ; preds = %51, %69
  %56 = phi %"class.std::__1::unique_ptr.40"* [ %59, %69 ], [ %53, %51 ]
  %57 = phi %"class.std::__1::unique_ptr.40"* [ %58, %69 ], [ %54, %51 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 -1
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %56, i64 -1
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::unique_ptr.40"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %60, align 8
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %59, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %63, align 8
  %65 = bitcast %"class.std::__1::unique_ptr.40"* %59 to i64*
  store i64 %62, i64* %65, align 8
  %66 = icmp eq %"class.spvtools::opt::BasicBlock"* %64, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %55
  %68 = bitcast %"class.std::__1::unique_ptr.40"* %59 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %68, %"class.spvtools::opt::BasicBlock"* nonnull %64) #13
  br label %69

69:                                               ; preds = %67, %55
  %70 = icmp eq %"class.std::__1::unique_ptr.40"* %58, %49
  br i1 %70, label %71, label %55

71:                                               ; preds = %69
  %72 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %4, align 8
  %73 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %73, align 8
  br label %75

75:                                               ; preds = %71, %45
  %76 = phi %"class.std::__1::unique_ptr.40"* [ %74, %71 ], [ %48, %45 ]
  %77 = phi %"class.std::__1::vector.38"* [ %72, %71 ], [ %46, %45 ]
  %78 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 0
  %79 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %78, align 8
  %80 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %17, align 8
  %81 = icmp eq %"class.std::__1::unique_ptr.40"* %79, %80
  br i1 %81, label %104, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %76, i64 %11
  br label %84

84:                                               ; preds = %82, %96
  %85 = phi %"class.std::__1::unique_ptr.40"* [ %98, %96 ], [ %83, %82 ]
  %86 = phi %"class.std::__1::unique_ptr.40"* [ %97, %96 ], [ %79, %82 ]
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %87, align 8
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %85, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %90, align 8
  %92 = bitcast %"class.std::__1::unique_ptr.40"* %85 to i64*
  store i64 %89, i64* %92, align 8
  %93 = icmp eq %"class.spvtools::opt::BasicBlock"* %91, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %84
  %95 = bitcast %"class.std::__1::unique_ptr.40"* %85 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %95, %"class.spvtools::opt::BasicBlock"* nonnull %91) #13
  br label %96

96:                                               ; preds = %94, %84
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %86, i64 1
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %85, i64 1
  %99 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %80
  br i1 %99, label %100, label %84

100:                                              ; preds = %96
  %101 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %4, align 8
  %102 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %102, align 8
  br label %104

104:                                              ; preds = %100, %75
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %103, %100 ], [ %76, %75 ]
  %106 = phi %"class.std::__1::vector.38"* [ %101, %100 ], [ %77, %75 ]
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 %11
  %108 = insertvalue { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } undef, %"class.std::__1::vector.38"* %106, 0
  %109 = insertvalue { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } %108, %"class.std::__1::unique_ptr.40"* %107, 1
  ret { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } %109
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt14InstrumentPass28InstProcessCallTreeFromRootsERNSt3__18functionIFvNS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNS2_6vectorINS2_10unique_ptrIS7_NS2_14default_deleteIS7_EEEENS2_9allocatorISD_EEEEEEEPNS2_5queueIjNS2_5dequeIjNSE_IjEEEEEEj(%"class.spvtools::opt::InstrumentPass"*, %"class.std::__1::function.974"* dereferenceable(32), %"class.std::__1::queue"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unordered_set.985", align 8
  %6 = alloca i32, align 4
  %7 = bitcast %"class.std::__1::unordered_set.985"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.std::__1::unordered_set.985", %"class.std::__1::unordered_set.985"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::unordered_set.985", %"class.std::__1::unordered_set.985"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::unordered_set.985", %"class.std::__1::unordered_set.985"* %5, i64 0, i32 0, i32 4, i64 0
  %11 = getelementptr inbounds %"class.std::__1::unordered_set.985", %"class.std::__1::unordered_set.985"* %5, i64 0, i32 0, i32 3
  %12 = bitcast %"class.std::__1::__compressed_pair.1004"* %11 to i32*
  %13 = bitcast i8* %10 to i32*
  store i32 -1431655766, i32* %13, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = bitcast %"struct.std::__1::__hash_node_base.254"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.std::__1::unordered_set.985", %"class.std::__1::unordered_set.985"* %5, i64 0, i32 0
  br label %27

20:                                               ; preds = %27, %4
  %21 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = bitcast %"struct.std::__1::__hash_node_base.254"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.std::__1::unordered_set.985", %"class.std::__1::unordered_set.985"* %5, i64 0, i32 0
  br label %47

27:                                               ; preds = %18, %27
  %28 = phi i64 [ %16, %18 ], [ %33, %27 ]
  %29 = inttoptr i64 %28 to %"struct.std::__1::__hash_node.1150"*
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node.1150", %"struct.std::__1::__hash_node.1150"* %29, i64 0, i32 2, i32 0, i32 1
  %31 = call { %"struct.std::__1::__hash_node_base.990"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.986"* nonnull %19, i32* dereferenceable(4) %30, i32* dereferenceable(4) %30) #13
  %32 = inttoptr i64 %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %20, label %27

35:                                               ; preds = %47, %20
  %36 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %148, label %39

39:                                               ; preds = %35
  %40 = bitcast i32* %6 to i8*
  %41 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %2, i64 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::unordered_set.985", %"class.std::__1::unordered_set.985"* %5, i64 0, i32 0
  %44 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  br label %55

47:                                               ; preds = %25, %47
  %48 = phi i64 [ %23, %25 ], [ %53, %47 ]
  %49 = inttoptr i64 %48 to %"struct.std::__1::__hash_node.1150"*
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node.1150", %"struct.std::__1::__hash_node.1150"* %49, i64 0, i32 2, i32 0, i32 1
  %51 = call { %"struct.std::__1::__hash_node_base.990"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.986"* nonnull %26, i32* dereferenceable(4) %50, i32* dereferenceable(4) %50) #13
  %52 = inttoptr i64 %48 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %35, label %47

55:                                               ; preds = %39, %144
  %56 = phi i64 [ %37, %39 ], [ %146, %144 ]
  %57 = phi i8 [ 0, %39 ], [ %145, %144 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #13
  store i32 -1431655766, i32* %6, align 4
  %58 = load i32**, i32*** %41, align 8
  %59 = load i64, i64* %42, align 8
  %60 = lshr i64 %59, 10
  %61 = getelementptr inbounds i32*, i32** %58, i64 %60
  %62 = load i32*, i32** %61, align 8
  %63 = and i64 %59, 1023
  %64 = getelementptr inbounds i32, i32* %62, i64 %63
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %6, align 4
  %66 = add i64 %56, -1
  store i64 %66, i64* %36, align 8
  %67 = add i64 %59, 1
  store i64 %67, i64* %42, align 8
  %68 = icmp ult i64 %67, 2048
  br i1 %68, label %76, label %69

69:                                               ; preds = %55
  %70 = bitcast i32** %58 to i8**
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #12
  %72 = load i32**, i32*** %41, align 8
  %73 = getelementptr inbounds i32*, i32** %72, i64 1
  store i32** %73, i32*** %41, align 8
  %74 = load i64, i64* %42, align 8
  %75 = add i64 %74, -1024
  store i64 %75, i64* %42, align 8
  br label %76

76:                                               ; preds = %55, %69
  %77 = call { %"struct.std::__1::__hash_node_base.990"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.986"* nonnull %43, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %6) #13
  %78 = extractvalue { %"struct.std::__1::__hash_node_base.990"*, i8 } %77, 1
  %79 = and i8 %78, 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %144, label %81

81:                                               ; preds = %76
  %82 = load i32, i32* %6, align 4
  %83 = zext i32 %82 to i64
  %84 = load i64, i64* %44, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %133, label %86

86:                                               ; preds = %81
  %87 = call i64 @llvm.ctpop.i64(i64 %84) #13, !range !75
  %88 = icmp ugt i64 %87, 1
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = add i64 %84, 4294967295
  %91 = and i64 %90, %83
  br label %96

92:                                               ; preds = %86
  %93 = icmp ugt i64 %84, %83
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = urem i64 %83, %84
  br label %96

96:                                               ; preds = %94, %92, %89
  %97 = phi i64 [ %91, %89 ], [ %95, %94 ], [ %83, %92 ]
  %98 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %45, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %98, i64 %97
  %100 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.206"* %100, null
  br i1 %101, label %133, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %100, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.206"* %104, null
  br i1 %105, label %133, label %106

106:                                              ; preds = %102
  %107 = add i64 %84, -1
  br label %108

108:                                              ; preds = %129, %106
  %109 = phi %"struct.std::__1::__hash_node_base.206"* [ %104, %106 ], [ %131, %129 ]
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %109, i64 1
  %111 = bitcast %"struct.std::__1::__hash_node_base.206"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, %83
  br i1 %113, label %124, label %114

114:                                              ; preds = %108
  br i1 %88, label %117, label %115

115:                                              ; preds = %114
  %116 = and i64 %112, %107
  br label %121

117:                                              ; preds = %114
  %118 = icmp ult i64 %112, %84
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = urem i64 %112, %84
  br label %121

121:                                              ; preds = %119, %117, %115
  %122 = phi i64 [ %116, %115 ], [ %120, %119 ], [ %112, %117 ]
  %123 = icmp eq i64 %122, %97
  br i1 %123, label %129, label %133

124:                                              ; preds = %108
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %109, i64 2
  %126 = bitcast %"struct.std::__1::__hash_node_base.206"* %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, %82
  br i1 %128, label %134, label %129

129:                                              ; preds = %124, %121
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %109, i64 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.206"* %131, null
  br i1 %132, label %133, label %108

133:                                              ; preds = %102, %96, %81, %129, %121
  call void @abort() #14
  unreachable

134:                                              ; preds = %124
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %109, i64 3
  %136 = bitcast %"struct.std::__1::__hash_node_base.206"* %135 to %"class.spvtools::opt::Function"**
  %137 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %136, align 8
  %138 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %46, align 8
  call void @_ZN8spvtools3opt9IRContext8AddCallsEPKNS0_8FunctionEPNSt3__15queueIjNS5_5dequeIjNS5_9allocatorIjEEEEEE(%"class.spvtools::opt::IRContext"* %138, %"class.spvtools::opt::Function"* %137, %"class.std::__1::queue"* %2) #13
  %139 = call zeroext i1 @_ZN8spvtools3opt14InstrumentPass18InstrumentFunctionEPNS0_8FunctionEjRNSt3__18functionIFvNS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNS4_6vectorINS4_10unique_ptrIS9_NS4_14default_deleteIS9_EEEENS4_9allocatorISF_EEEEEEE(%"class.spvtools::opt::InstrumentPass"* %0, %"class.spvtools::opt::Function"* %137, i32 %3, %"class.std::__1::function.974"* dereferenceable(32) %1)
  %140 = and i8 %57, 1
  %141 = icmp ne i8 %140, 0
  %142 = or i1 %141, %139
  %143 = zext i1 %142 to i8
  br label %144

144:                                              ; preds = %76, %134
  %145 = phi i8 [ %143, %134 ], [ %57, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #13
  %146 = load i64, i64* %36, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %55

148:                                              ; preds = %144, %35
  %149 = phi i8 [ 0, %35 ], [ %145, %144 ]
  %150 = and i8 %149, 1
  %151 = icmp ne i8 %150, 0
  %152 = load %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %9, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.990"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %148, %154
  %155 = phi %"struct.std::__1::__hash_node_base.990"* [ %157, %154 ], [ %152, %148 ]
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %155, i64 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %156, align 8
  %158 = bitcast %"struct.std::__1::__hash_node_base.990"* %155 to i8*
  call void @_ZdlPv(i8* %158) #12
  %159 = icmp eq %"struct.std::__1::__hash_node_base.990"* %157, null
  br i1 %159, label %160, label %154

160:                                              ; preds = %154, %148
  %161 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %8, align 8
  store %"struct.std::__1::__hash_node_base.990"** null, %"struct.std::__1::__hash_node_base.990"*** %8, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base.990"** %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %160
  %164 = bitcast %"struct.std::__1::__hash_node_base.990"** %161 to i8*
  call void @_ZdlPv(i8* %164) #12
  br label %165

165:                                              ; preds = %160, %163
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #13
  ret i1 %151
}

declare void @_ZN8spvtools3opt9IRContext8AddCallsEPKNS0_8FunctionEPNSt3__15queueIjNS5_5dequeIjNS5_9allocatorIjEEEEEE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*, %"class.std::__1::queue"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt14InstrumentPass29InstProcessEntryPointCallTreeERNSt3__18functionIFvNS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNS2_6vectorINS2_10unique_ptrIS7_NS2_14default_deleteIS7_EEEENS2_9allocatorISD_EEEEEEE(%"class.spvtools::opt::InstrumentPass"*, %"class.std::__1::function.974"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::queue", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %7, i64 0, i32 7, i32 0, i32 1, i32 0, i32 1
  %9 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %7, i64 0, i32 7, i32 0, i32 1
  %10 = bitcast %"class.spvtools::opt::Instruction"** %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = inttoptr i64 %11 to %"class.spvtools::opt::Instruction"*
  %13 = icmp eq %"class.spvtools::opt::Instruction"* %9, %12
  br i1 %13, label %55, label %14

14:                                               ; preds = %2, %45
  %15 = phi %"class.spvtools::opt::Instruction"* [ %52, %45 ], [ %12, %2 ]
  %16 = phi i64 [ %51, %45 ], [ %11, %2 ]
  %17 = phi i32 [ %47, %45 ], [ 0, %2 ]
  %18 = phi i32 [ %46, %45 ], [ 2147483647, %2 ]
  %19 = icmp eq i32 %17, 0
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %15, i64 0, i32 3
  %21 = load i8, i8* %20, align 4, !range !6
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %15, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !6
  %25 = icmp eq i8 %24, 0
  %26 = select i1 %25, i32 1, i32 2
  %27 = xor i1 %25, true
  %28 = zext i1 %27 to i32
  %29 = select i1 %22, i32 %28, i32 %26
  %30 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %15, i32 %29) #13
  br i1 %19, label %45, label %31

31:                                               ; preds = %14
  %32 = icmp eq i32 %30, %18
  br i1 %32, label %45, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %35 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %35, i64 0, i32 2
  %37 = load i8, i8* %36, align 8, !range !6
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %233

39:                                               ; preds = %33
  %40 = tail call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* align 1 getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i64 39, i1 false) #13
  %41 = getelementptr inbounds i8, i8* %40, i64 39
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %43 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %42, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void %43(%"union.std::__1::__function::__policy_storage"* %44, i32 2, i8* null, %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.5, i8* nonnull %40) #13
  call void @_ZdlPv(i8* nonnull %40) #12
  br label %233

45:                                               ; preds = %14, %31
  %46 = phi i32 [ %18, %31 ], [ %30, %14 ]
  %47 = add i32 %17, 1
  %48 = inttoptr i64 %16 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %49 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %48, i64 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = inttoptr i64 %51 to %"class.spvtools::opt::Instruction"*
  %53 = icmp eq %"class.spvtools::opt::Instruction"* %9, %52
  br i1 %53, label %54, label %14

54:                                               ; preds = %45
  switch i32 %46, label %55 [
    i32 5318, label %67
    i32 5317, label %67
    i32 5316, label %67
    i32 5315, label %67
    i32 5314, label %67
    i32 5313, label %67
    i32 5268, label %67
    i32 5267, label %67
    i32 5, label %67
    i32 4, label %67
    i32 3, label %67
    i32 2, label %67
    i32 1, label %67
    i32 0, label %67
  ]

55:                                               ; preds = %2, %54
  %56 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %57 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %57, i64 0, i32 2
  %59 = load i8, i8* %58, align 8, !range !6
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %233

61:                                               ; preds = %55
  %62 = tail call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %62, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i64 38, i1 false) #13
  %63 = getelementptr inbounds i8, i8* %62, i64 38
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %65 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void %65(%"union.std::__1::__function::__policy_storage"* %66, i32 2, i8* null, %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.7, i8* nonnull %62) #13
  call void @_ZdlPv(i8* nonnull %62) #12
  br label %233

67:                                               ; preds = %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54
  %68 = bitcast %"class.std::__1::queue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %68) #13
  %69 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %72 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 48, i1 false) #13
  %74 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %74, i64 0, i32 4, i32 0, i32 0, i32 0
  %76 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %75, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %76, i64 0, i32 7, i32 0, i32 1, i32 0, i32 1
  %78 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %76, i64 0, i32 7, i32 0, i32 1
  %79 = bitcast %"class.spvtools::opt::Instruction"** %77 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = inttoptr i64 %80 to %"class.spvtools::opt::Instruction"*
  %82 = icmp eq %"class.spvtools::opt::Instruction"* %78, %81
  br i1 %82, label %87, label %83

83:                                               ; preds = %67
  %84 = bitcast i32*** %71 to i64*
  %85 = bitcast i32*** %70 to i64*
  %86 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0
  br label %178

87:                                               ; preds = %223, %67
  %88 = call zeroext i1 @_ZN8spvtools3opt14InstrumentPass28InstProcessCallTreeFromRootsERNSt3__18functionIFvNS0_15InstructionList8iteratorENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEEjPNS2_6vectorINS2_10unique_ptrIS7_NS2_14default_deleteIS7_EEEENS2_9allocatorISD_EEEEEEEPNS2_5queueIjNS2_5dequeIjNSE_IjEEEEEEj(%"class.spvtools::opt::InstrumentPass"* %0, %"class.std::__1::function.974"* dereferenceable(32) %1, %"class.std::__1::queue"* nonnull %3, i32 %46)
  %89 = load i32**, i32*** %70, align 8
  %90 = load i64, i64* %72, align 8
  %91 = lshr i64 %90, 10
  %92 = getelementptr inbounds i32*, i32** %89, i64 %91
  %93 = load i32**, i32*** %71, align 8
  %94 = icmp eq i32** %93, %89
  %95 = ptrtoint i32** %93 to i64
  %96 = ptrtoint i32** %89 to i64
  br i1 %94, label %109, label %97

97:                                               ; preds = %87
  %98 = load i32*, i32** %92, align 8
  %99 = and i64 %90, 1023
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = load i64, i64* %73, align 8
  %102 = add i64 %101, %90
  %103 = lshr i64 %102, 10
  %104 = getelementptr inbounds i32*, i32** %89, i64 %103
  %105 = load i32*, i32** %104, align 8
  %106 = and i64 %102, 1023
  %107 = getelementptr inbounds i32, i32* %105, i64 %106
  %108 = icmp eq i32* %107, %100
  br i1 %108, label %109, label %114

109:                                              ; preds = %127, %87, %97
  store i64 0, i64* %73, align 8
  %110 = bitcast i32*** %71 to i64*
  %111 = sub i64 %95, %96
  %112 = ashr exact i64 %111, 3
  %113 = icmp ugt i64 %112, 2
  br i1 %113, label %132, label %145

114:                                              ; preds = %97, %127
  %115 = phi i32* [ %130, %127 ], [ %100, %97 ]
  %116 = phi i32** [ %129, %127 ], [ %92, %97 ]
  %117 = getelementptr inbounds i32, i32* %115, i64 1
  %118 = ptrtoint i32* %117 to i64
  %119 = bitcast i32** %116 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %118, %120
  %122 = icmp eq i64 %121, 4096
  br i1 %122, label %123, label %127

123:                                              ; preds = %114
  %124 = getelementptr inbounds i32*, i32** %116, i64 1
  %125 = bitcast i32** %124 to i64*
  %126 = load i64, i64* %125, align 8
  br label %127

127:                                              ; preds = %123, %114
  %128 = phi i64 [ %126, %123 ], [ %118, %114 ]
  %129 = phi i32** [ %124, %123 ], [ %116, %114 ]
  %130 = inttoptr i64 %128 to i32*
  %131 = icmp eq i32* %107, %130
  br i1 %131, label %109, label %114

132:                                              ; preds = %109, %132
  %133 = phi i32** [ %137, %132 ], [ %89, %109 ]
  %134 = bitcast i32** %133 to i8**
  %135 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %135) #12
  %136 = load i32**, i32*** %70, align 8
  %137 = getelementptr inbounds i32*, i32** %136, i64 1
  store i32** %137, i32*** %70, align 8
  %138 = load i64, i64* %110, align 8
  %139 = ptrtoint i32** %137 to i64
  %140 = sub i64 %138, %139
  %141 = ashr exact i64 %140, 3
  %142 = icmp ugt i64 %141, 2
  br i1 %142, label %132, label %143

143:                                              ; preds = %132
  %144 = inttoptr i64 %138 to i32**
  br label %145

145:                                              ; preds = %143, %109
  %146 = phi i32** [ %93, %109 ], [ %144, %143 ]
  %147 = phi i32** [ %89, %109 ], [ %137, %143 ]
  %148 = phi i64 [ %112, %109 ], [ %141, %143 ]
  switch i64 %148, label %152 [
    i64 1, label %150
    i64 2, label %149
  ]

149:                                              ; preds = %145
  br label %150

150:                                              ; preds = %145, %149
  %151 = phi i64 [ 1024, %149 ], [ 512, %145 ]
  store i64 %151, i64* %72, align 8
  br label %152

152:                                              ; preds = %150, %145
  %153 = icmp eq i32** %147, %146
  br i1 %153, label %172, label %154

154:                                              ; preds = %152, %154
  %155 = phi i32** [ %158, %154 ], [ %147, %152 ]
  %156 = bitcast i32** %155 to i8**
  %157 = load i8*, i8** %156, align 8
  call void @_ZdlPv(i8* %157) #12
  %158 = getelementptr inbounds i32*, i32** %155, i64 1
  %159 = icmp eq i32** %158, %146
  br i1 %159, label %160, label %154

160:                                              ; preds = %154
  %161 = load i32**, i32*** %70, align 8
  %162 = load i32**, i32*** %71, align 8
  %163 = icmp eq i32** %162, %161
  br i1 %163, label %172, label %164

164:                                              ; preds = %160
  %165 = ptrtoint i32** %161 to i64
  %166 = getelementptr i32*, i32** %162, i64 -1
  %167 = ptrtoint i32** %166 to i64
  %168 = sub i64 %167, %165
  %169 = lshr i64 %168, 3
  %170 = xor i64 %169, -1
  %171 = getelementptr i32*, i32** %162, i64 %170
  store i32** %171, i32*** %71, align 8
  br label %172

172:                                              ; preds = %164, %160, %152
  %173 = load i32**, i32*** %69, align 8
  %174 = icmp eq i32** %173, null
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = bitcast i32** %173 to i8*
  call void @_ZdlPv(i8* %176) #12
  br label %177

177:                                              ; preds = %172, %175
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %68) #13
  br label %233

178:                                              ; preds = %83, %223
  %179 = phi %"class.spvtools::opt::Instruction"* [ %81, %83 ], [ %231, %223 ]
  %180 = phi i64 [ %80, %83 ], [ %230, %223 ]
  %181 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 3
  %182 = load i8, i8* %181, align 4, !range !6
  %183 = icmp eq i8 %182, 0
  %184 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 4
  %185 = load i8, i8* %184, align 1, !range !6
  %186 = icmp eq i8 %185, 0
  %187 = select i1 %186, i32 1, i32 2
  %188 = xor i1 %186, true
  %189 = zext i1 %188 to i32
  %190 = select i1 %183, i32 %189, i32 %187
  %191 = add nuw nsw i32 %190, 1
  %192 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %179, i32 %191) #13
  %193 = load i64, i64* %84, align 8
  %194 = load i64, i64* %85, align 8
  %195 = sub i64 %193, %194
  %196 = icmp eq i64 %195, 0
  %197 = shl i64 %195, 7
  %198 = add i64 %197, -1
  %199 = select i1 %196, i64 0, i64 %198
  %200 = load i64, i64* %72, align 8
  %201 = load i64, i64* %73, align 8
  %202 = add i64 %201, %200
  %203 = icmp eq i64 %199, %202
  %204 = inttoptr i64 %194 to i32**
  %205 = inttoptr i64 %193 to i32**
  br i1 %203, label %206, label %212

206:                                              ; preds = %178
  call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %86) #13
  %207 = load i64, i64* %73, align 8
  %208 = load i64, i64* %72, align 8
  %209 = load i32**, i32*** %70, align 8
  %210 = load i32**, i32*** %71, align 8
  %211 = add i64 %208, %207
  br label %212

212:                                              ; preds = %206, %178
  %213 = phi i64 [ %211, %206 ], [ %202, %178 ]
  %214 = phi i32** [ %210, %206 ], [ %205, %178 ]
  %215 = phi i32** [ %209, %206 ], [ %204, %178 ]
  %216 = icmp eq i32** %214, %215
  br i1 %216, label %223, label %217

217:                                              ; preds = %212
  %218 = lshr i64 %213, 10
  %219 = getelementptr inbounds i32*, i32** %215, i64 %218
  %220 = load i32*, i32** %219, align 8
  %221 = and i64 %213, 1023
  %222 = getelementptr inbounds i32, i32* %220, i64 %221
  br label %223

223:                                              ; preds = %212, %217
  %224 = phi i32* [ %222, %217 ], [ null, %212 ]
  store i32 %192, i32* %224, align 4
  %225 = load i64, i64* %73, align 8
  %226 = add i64 %225, 1
  store i64 %226, i64* %73, align 8
  %227 = inttoptr i64 %180 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %228 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %227, i64 0, i32 1
  %229 = bitcast %"class.spvtools::opt::Instruction"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = inttoptr i64 %230 to %"class.spvtools::opt::Instruction"*
  %232 = icmp eq %"class.spvtools::opt::Instruction"* %78, %231
  br i1 %232, label %87, label %178

233:                                              ; preds = %33, %39, %55, %61, %177
  %234 = phi i1 [ %88, %177 ], [ false, %61 ], [ false, %55 ], [ false, %39 ], [ false, %33 ]
  ret i1 %234
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14InstrumentPass20InitializeInstrumentEv(%"class.spvtools::opt::InstrumentPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple.1174", align 8
  %3 = alloca %"class.std::__1::tuple.1061", align 1
  %4 = alloca %"class.std::__1::tuple.1174", align 8
  %5 = alloca %"class.std::__1::tuple.1061", align 1
  %6 = alloca %"class.std::__1::tuple.1174", align 8
  %7 = alloca %"class.std::__1::tuple.1061", align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::__1::function.1010", align 8
  %12 = alloca i32, align 4
  %13 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 9
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 10
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 11
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 14
  %17 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 26
  %18 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast i32* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 41, i1 false)
  %21 = bitcast %"class.spvtools::opt::analysis::Type"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  %22 = load i64, i64* %19, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %74, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.206"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %24, %28
  %29 = phi %"struct.std::__1::__hash_node_base.206"* [ %31, %28 ], [ %26, %24 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %30, align 8
  %32 = bitcast %"struct.std::__1::__hash_node_base.206"* %29 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  %33 = icmp eq %"struct.std::__1::__hash_node_base.206"* %31, null
  br i1 %33, label %34, label %28

34:                                               ; preds = %28, %24
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %25, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.std::__1::unordered_map.201", %"class.std::__1::unordered_map.201"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = add i64 %36, -1
  %41 = and i64 %36, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = sub i64 %36, %41
  br label %57

45:                                               ; preds = %57, %38
  %46 = phi i64 [ 0, %38 ], [ %71, %57 ]
  %47 = icmp eq i64 %41, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %45, %48
  %49 = phi i64 [ %53, %48 ], [ %46, %45 ]
  %50 = phi i64 [ %54, %48 ], [ %41, %45 ]
  %51 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %39, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %51, i64 %49
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %52, align 8
  %53 = add nuw i64 %49, 1
  %54 = add i64 %50, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %48, !llvm.loop !76

56:                                               ; preds = %45, %48, %34
  store i64 0, i64* %19, align 8
  br label %74

57:                                               ; preds = %57, %43
  %58 = phi i64 [ 0, %43 ], [ %71, %57 ]
  %59 = phi i64 [ %44, %43 ], [ %72, %57 ]
  %60 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %39, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %60, i64 %58
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %61, align 8
  %62 = or i64 %58, 1
  %63 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %39, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %63, i64 %62
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %64, align 8
  %65 = or i64 %58, 2
  %66 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %39, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %66, i64 %65
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %67, align 8
  %68 = or i64 %58, 3
  %69 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %39, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %69, i64 %68
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %70, align 8
  %71 = add nuw i64 %58, 4
  %72 = add i64 %59, -4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %45, label %57

74:                                               ; preds = %1, %56
  %75 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 6
  %76 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %129, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %80, align 8
  %82 = icmp eq %"struct.std::__1::__hash_node_base.333"* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"struct.std::__1::__hash_node_base.333"* [ %86, %83 ], [ %81, %79 ]
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %84, i64 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %85, align 8
  %87 = bitcast %"struct.std::__1::__hash_node_base.333"* %84 to i8*
  tail call void @_ZdlPv(i8* %87) #12
  %88 = icmp eq %"struct.std::__1::__hash_node_base.333"* %86, null
  br i1 %88, label %89, label %83

89:                                               ; preds = %83, %79
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %80, align 8
  %90 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %111, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.328"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = add i64 %91, -1
  %96 = and i64 %91, 3
  %97 = icmp ult i64 %95, 3
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = sub i64 %91, %96
  br label %112

100:                                              ; preds = %112, %93
  %101 = phi i64 [ 0, %93 ], [ %126, %112 ]
  %102 = icmp eq i64 %96, 0
  br i1 %102, label %111, label %103

103:                                              ; preds = %100, %103
  %104 = phi i64 [ %108, %103 ], [ %101, %100 ]
  %105 = phi i64 [ %109, %103 ], [ %96, %100 ]
  %106 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %94, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, i64 %104
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %107, align 8
  %108 = add nuw i64 %104, 1
  %109 = add i64 %105, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %103, !llvm.loop !77

111:                                              ; preds = %100, %103, %89
  store i64 0, i64* %76, align 8
  br label %129

112:                                              ; preds = %112, %98
  %113 = phi i64 [ 0, %98 ], [ %126, %112 ]
  %114 = phi i64 [ %99, %98 ], [ %127, %112 ]
  %115 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %94, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %115, i64 %113
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %116, align 8
  %117 = or i64 %113, 1
  %118 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %94, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %118, i64 %117
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %119, align 8
  %120 = or i64 %113, 2
  %121 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %94, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %121, i64 %120
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %122, align 8
  %123 = or i64 %113, 3
  %124 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %94, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %124, i64 %123
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %125, align 8
  %126 = add nuw i64 %113, 4
  %127 = add i64 %114, -4
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %100, label %112

129:                                              ; preds = %74, %111
  %130 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %183, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.254"* %135, null
  br i1 %136, label %143, label %137

137:                                              ; preds = %133, %137
  %138 = phi %"struct.std::__1::__hash_node_base.254"* [ %140, %137 ], [ %135, %133 ]
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %138, i64 0, i32 0
  %140 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %139, align 8
  %141 = bitcast %"struct.std::__1::__hash_node_base.254"* %138 to i8*
  tail call void @_ZdlPv(i8* %141) #12
  %142 = icmp eq %"struct.std::__1::__hash_node_base.254"* %140, null
  br i1 %142, label %143, label %137

143:                                              ; preds = %137, %133
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %134, align 8
  %144 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %165, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = add i64 %145, -1
  %150 = and i64 %145, 3
  %151 = icmp ult i64 %149, 3
  br i1 %151, label %154, label %152

152:                                              ; preds = %147
  %153 = sub i64 %145, %150
  br label %166

154:                                              ; preds = %166, %147
  %155 = phi i64 [ 0, %147 ], [ %180, %166 ]
  %156 = icmp eq i64 %150, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %154, %157
  %158 = phi i64 [ %162, %157 ], [ %155, %154 ]
  %159 = phi i64 [ %163, %157 ], [ %150, %154 ]
  %160 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %148, align 8
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %160, i64 %158
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %161, align 8
  %162 = add nuw i64 %158, 1
  %163 = add i64 %159, -1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %157, !llvm.loop !78

165:                                              ; preds = %154, %157, %143
  store i64 0, i64* %130, align 8
  br label %183

166:                                              ; preds = %166, %152
  %167 = phi i64 [ 0, %152 ], [ %180, %166 ]
  %168 = phi i64 [ %153, %152 ], [ %181, %166 ]
  %169 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %148, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %169, i64 %167
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %170, align 8
  %171 = or i64 %167, 1
  %172 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %148, align 8
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %172, i64 %171
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %173, align 8
  %174 = or i64 %167, 2
  %175 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %148, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %175, i64 %174
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %176, align 8
  %177 = or i64 %167, 3
  %178 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %148, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %178, i64 %177
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %179, align 8
  %180 = add nuw i64 %167, 4
  %181 = add i64 %168, -4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %154, label %166

183:                                              ; preds = %129, %165
  %184 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %185 = load i64, i64* %184, align 8
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %237, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %189 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %188, align 8
  %190 = icmp eq %"struct.std::__1::__hash_node_base.254"* %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %187, %191
  %192 = phi %"struct.std::__1::__hash_node_base.254"* [ %194, %191 ], [ %189, %187 ]
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %192, i64 0, i32 0
  %194 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %193, align 8
  %195 = bitcast %"struct.std::__1::__hash_node_base.254"* %192 to i8*
  tail call void @_ZdlPv(i8* %195) #12
  %196 = icmp eq %"struct.std::__1::__hash_node_base.254"* %194, null
  br i1 %196, label %197, label %191

197:                                              ; preds = %191, %187
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %188, align 8
  %198 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %199 = load i64, i64* %198, align 8
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %219, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = add i64 %199, -1
  %204 = and i64 %199, 3
  %205 = icmp ult i64 %203, 3
  br i1 %205, label %208, label %206

206:                                              ; preds = %201
  %207 = sub i64 %199, %204
  br label %220

208:                                              ; preds = %220, %201
  %209 = phi i64 [ 0, %201 ], [ %234, %220 ]
  %210 = icmp eq i64 %204, 0
  br i1 %210, label %219, label %211

211:                                              ; preds = %208, %211
  %212 = phi i64 [ %216, %211 ], [ %209, %208 ]
  %213 = phi i64 [ %217, %211 ], [ %204, %208 ]
  %214 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %202, align 8
  %215 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %214, i64 %212
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %215, align 8
  %216 = add nuw i64 %212, 1
  %217 = add i64 %213, -1
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %219, label %211, !llvm.loop !79

219:                                              ; preds = %208, %211, %197
  store i64 0, i64* %184, align 8
  br label %237

220:                                              ; preds = %220, %206
  %221 = phi i64 [ 0, %206 ], [ %234, %220 ]
  %222 = phi i64 [ %207, %206 ], [ %235, %220 ]
  %223 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %202, align 8
  %224 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %223, i64 %221
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %224, align 8
  %225 = or i64 %221, 1
  %226 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %202, align 8
  %227 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %226, i64 %225
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %227, align 8
  %228 = or i64 %221, 2
  %229 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %202, align 8
  %230 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %229, i64 %228
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %230, align 8
  %231 = or i64 %221, 3
  %232 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %202, align 8
  %233 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %232, i64 %231
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %233, align 8
  %234 = add nuw i64 %221, 4
  %235 = add i64 %222, -4
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %208, label %220

237:                                              ; preds = %183, %219
  %238 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 0, i32 2
  %239 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %238, align 8
  %240 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %239, i64 0, i32 4, i32 0, i32 0, i32 0
  %241 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %240, align 8
  %242 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %241, i64 0, i32 15, i32 0, i32 0
  %243 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %242, align 8
  %244 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %241, i64 0, i32 15, i32 0, i32 1
  %245 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %244, align 8
  %246 = icmp eq %"class.std::__1::unique_ptr.28"* %243, %245
  br i1 %246, label %262, label %247

247:                                              ; preds = %237
  %248 = bitcast i32* %8 to i8*
  %249 = getelementptr inbounds %"class.std::__1::unordered_map.201", %"class.std::__1::unordered_map.201"* %18, i64 0, i32 0
  %250 = bitcast %"class.std::__1::tuple.1174"* %2 to i8*
  %251 = getelementptr inbounds %"class.std::__1::tuple.1174", %"class.std::__1::tuple.1174"* %2, i64 0, i32 0, i32 0, i32 0
  %252 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %3, i64 0, i32 0
  %253 = bitcast i32* %9 to i8*
  %254 = getelementptr inbounds %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.328"* %75, i64 0, i32 0
  %255 = bitcast %"class.std::__1::tuple.1174"* %4 to i8*
  %256 = getelementptr inbounds %"class.std::__1::tuple.1174", %"class.std::__1::tuple.1174"* %4, i64 0, i32 0, i32 0, i32 0
  %257 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %5, i64 0, i32 0
  br label %271

258:                                              ; preds = %296
  %259 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %238, align 8
  %260 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %259, i64 0, i32 4, i32 0, i32 0, i32 0
  %261 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %260, align 8
  br label %262

262:                                              ; preds = %258, %237
  %263 = phi %"class.spvtools::opt::Module"* [ %261, %258 ], [ %241, %237 ]
  %264 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %264) #13
  store i32 0, i32* %10, align 4
  %265 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %266 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 3, i32 0, i32 1
  %267 = bitcast %"class.spvtools::opt::Instruction"** %265 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = inttoptr i64 %268 to %"class.spvtools::opt::Instruction"*
  %270 = icmp eq %"class.spvtools::opt::Instruction"* %266, %269
  br i1 %270, label %322, label %330

271:                                              ; preds = %247, %296
  %272 = phi %"class.std::__1::unique_ptr.28"* [ %243, %247 ], [ %297, %296 ]
  %273 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %272, i64 0, i32 0, i32 0, i32 0
  %274 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %273, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %248) #13
  %275 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %274, i64 0, i32 0, i32 0, i32 0, i32 0
  %276 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %275, align 8
  %277 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %276, i64 0, i32 4
  %278 = load i8, i8* %277, align 1, !range !6
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %285, label %280

280:                                              ; preds = %271
  %281 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %276, i64 0, i32 3
  %282 = load i8, i8* %281, align 4, !range !6
  %283 = zext i8 %282 to i32
  %284 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %276, i32 %283) #13
  br label %285

285:                                              ; preds = %271, %280
  %286 = phi i32 [ %284, %280 ], [ 0, %271 ]
  store i32 %286, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #13
  store i32* %8, i32** %251, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %252) #13
  %287 = call { %"struct.std::__1::__hash_node_base.206"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.202"* %249, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1174"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %3) #13
  %288 = extractvalue { %"struct.std::__1::__hash_node_base.206"*, i8 } %287, 0
  %289 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %288, i64 3
  %290 = bitcast %"struct.std::__1::__hash_node_base.206"* %289 to %"class.spvtools::opt::Function"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %252) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #13
  store %"class.spvtools::opt::Function"* %274, %"class.spvtools::opt::Function"** %290, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %248) #13
  %291 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %274, i64 0, i32 3, i32 0, i32 0
  %292 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %291, align 8
  %293 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %274, i64 0, i32 3, i32 0, i32 1
  %294 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %293, align 8
  %295 = icmp eq %"class.std::__1::unique_ptr.40"* %292, %294
  br i1 %295, label %296, label %299

296:                                              ; preds = %313, %285
  %297 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %272, i64 1
  %298 = icmp eq %"class.std::__1::unique_ptr.28"* %297, %245
  br i1 %298, label %258, label %271

299:                                              ; preds = %285, %313
  %300 = phi %"class.std::__1::unique_ptr.40"* [ %319, %313 ], [ %292, %285 ]
  %301 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %300, i64 0, i32 0, i32 0, i32 0
  %302 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %301, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %253) #13
  %303 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %302, i64 0, i32 1, i32 0, i32 0, i32 0
  %304 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %303, align 8
  %305 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %304, i64 0, i32 4
  %306 = load i8, i8* %305, align 1, !range !6
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %313, label %308

308:                                              ; preds = %299
  %309 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %304, i64 0, i32 3
  %310 = load i8, i8* %309, align 4, !range !6
  %311 = zext i8 %310 to i32
  %312 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %304, i32 %311) #13
  br label %313

313:                                              ; preds = %299, %308
  %314 = phi i32 [ %312, %308 ], [ 0, %299 ]
  store i32 %314, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #13
  store i32* %9, i32** %256, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %257) #13
  %315 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %254, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1174"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %5) #13
  %316 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %315, 0
  %317 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %316, i64 3
  %318 = bitcast %"struct.std::__1::__hash_node_base.333"* %317 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %257) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #13
  store %"class.spvtools::opt::BasicBlock"* %302, %"class.spvtools::opt::BasicBlock"** %318, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %253) #13
  %319 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %300, i64 1
  %320 = icmp eq %"class.std::__1::unique_ptr.40"* %319, %294
  br i1 %320, label %296, label %299

321:                                              ; preds = %330
  store i32 %333, i32* %10, align 4
  br label %322

322:                                              ; preds = %321, %262
  %323 = phi i32 [ %333, %321 ], [ 0, %262 ]
  %324 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %325 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 4, i32 0, i32 1
  %326 = bitcast %"class.spvtools::opt::Instruction"** %324 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = inttoptr i64 %327 to %"class.spvtools::opt::Instruction"*
  %329 = icmp eq %"class.spvtools::opt::Instruction"* %325, %328
  br i1 %329, label %341, label %350

330:                                              ; preds = %262, %330
  %331 = phi i32 [ %333, %330 ], [ 0, %262 ]
  %332 = phi i64 [ %337, %330 ], [ %268, %262 ]
  %333 = add i32 %331, 1
  %334 = inttoptr i64 %332 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %335 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %334, i64 0, i32 1
  %336 = bitcast %"class.spvtools::opt::Instruction"** %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = inttoptr i64 %337 to %"class.spvtools::opt::Instruction"*
  %339 = icmp eq %"class.spvtools::opt::Instruction"* %266, %338
  br i1 %339, label %321, label %330

340:                                              ; preds = %350
  store i32 %353, i32* %10, align 4
  br label %341

341:                                              ; preds = %340, %322
  %342 = phi i32 [ %353, %340 ], [ %323, %322 ]
  %343 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 5, i32 0, i32 1, i32 0, i32 1
  %344 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 5, i32 0, i32 1
  %345 = bitcast %"class.spvtools::opt::Instruction"** %343 to i64*
  %346 = load i64, i64* %345, align 8
  %347 = inttoptr i64 %346 to %"class.spvtools::opt::Instruction"*
  %348 = icmp eq %"class.spvtools::opt::Instruction"* %344, %347
  %349 = add i32 %342, 1
  store i32 %349, i32* %10, align 4
  br i1 %348, label %361, label %369

350:                                              ; preds = %322, %350
  %351 = phi i32 [ %353, %350 ], [ %323, %322 ]
  %352 = phi i64 [ %357, %350 ], [ %327, %322 ]
  %353 = add i32 %351, 1
  %354 = inttoptr i64 %352 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %355 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %354, i64 0, i32 1
  %356 = bitcast %"class.spvtools::opt::Instruction"** %355 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = inttoptr i64 %357 to %"class.spvtools::opt::Instruction"*
  %359 = icmp eq %"class.spvtools::opt::Instruction"* %325, %358
  br i1 %359, label %340, label %350

360:                                              ; preds = %369
  store i32 %378, i32* %10, align 4
  br label %361

361:                                              ; preds = %360, %341
  %362 = phi i32 [ %378, %360 ], [ %349, %341 ]
  %363 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 7, i32 0, i32 1, i32 0, i32 1
  %364 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 7, i32 0, i32 1
  %365 = bitcast %"class.spvtools::opt::Instruction"** %363 to i64*
  %366 = load i64, i64* %365, align 8
  %367 = inttoptr i64 %366 to %"class.spvtools::opt::Instruction"*
  %368 = icmp eq %"class.spvtools::opt::Instruction"* %364, %367
  br i1 %368, label %380, label %388

369:                                              ; preds = %341, %369
  %370 = phi i32 [ %378, %369 ], [ %349, %341 ]
  %371 = phi i64 [ %375, %369 ], [ %346, %341 ]
  %372 = inttoptr i64 %371 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %373 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %372, i64 0, i32 1
  %374 = bitcast %"class.spvtools::opt::Instruction"** %373 to i64*
  %375 = load i64, i64* %374, align 8
  %376 = inttoptr i64 %375 to %"class.spvtools::opt::Instruction"*
  %377 = icmp eq %"class.spvtools::opt::Instruction"* %344, %376
  %378 = add i32 %370, 1
  br i1 %377, label %360, label %369

379:                                              ; preds = %388
  store i32 %391, i32* %10, align 4
  br label %380

380:                                              ; preds = %379, %361
  %381 = phi i32 [ %391, %379 ], [ %362, %361 ]
  %382 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 8, i32 0, i32 1, i32 0, i32 1
  %383 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 8, i32 0, i32 1
  %384 = bitcast %"class.spvtools::opt::Instruction"** %382 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = inttoptr i64 %385 to %"class.spvtools::opt::Instruction"*
  %387 = icmp eq %"class.spvtools::opt::Instruction"* %383, %386
  br i1 %387, label %399, label %407

388:                                              ; preds = %361, %388
  %389 = phi i32 [ %391, %388 ], [ %362, %361 ]
  %390 = phi i64 [ %395, %388 ], [ %366, %361 ]
  %391 = add i32 %389, 1
  %392 = inttoptr i64 %390 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %393 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %392, i64 0, i32 1
  %394 = bitcast %"class.spvtools::opt::Instruction"** %393 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = inttoptr i64 %395 to %"class.spvtools::opt::Instruction"*
  %397 = icmp eq %"class.spvtools::opt::Instruction"* %364, %396
  br i1 %397, label %379, label %388

398:                                              ; preds = %407
  store i32 %410, i32* %10, align 4
  br label %399

399:                                              ; preds = %398, %380
  %400 = phi i32 [ %410, %398 ], [ %381, %380 ]
  %401 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 9, i32 0, i32 1, i32 0, i32 1
  %402 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 9, i32 0, i32 1
  %403 = bitcast %"class.spvtools::opt::Instruction"** %401 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = inttoptr i64 %404 to %"class.spvtools::opt::Instruction"*
  %406 = icmp eq %"class.spvtools::opt::Instruction"* %402, %405
  br i1 %406, label %418, label %426

407:                                              ; preds = %380, %407
  %408 = phi i32 [ %410, %407 ], [ %381, %380 ]
  %409 = phi i64 [ %414, %407 ], [ %385, %380 ]
  %410 = add i32 %408, 1
  %411 = inttoptr i64 %409 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %412 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %411, i64 0, i32 1
  %413 = bitcast %"class.spvtools::opt::Instruction"** %412 to i64*
  %414 = load i64, i64* %413, align 8
  %415 = inttoptr i64 %414 to %"class.spvtools::opt::Instruction"*
  %416 = icmp eq %"class.spvtools::opt::Instruction"* %383, %415
  br i1 %416, label %398, label %407

417:                                              ; preds = %426
  store i32 %429, i32* %10, align 4
  br label %418

418:                                              ; preds = %417, %399
  %419 = phi i32 [ %429, %417 ], [ %400, %399 ]
  %420 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 10, i32 0, i32 1, i32 0, i32 1
  %421 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 10, i32 0, i32 1
  %422 = bitcast %"class.spvtools::opt::Instruction"** %420 to i64*
  %423 = load i64, i64* %422, align 8
  %424 = inttoptr i64 %423 to %"class.spvtools::opt::Instruction"*
  %425 = icmp eq %"class.spvtools::opt::Instruction"* %421, %424
  br i1 %425, label %437, label %445

426:                                              ; preds = %399, %426
  %427 = phi i32 [ %429, %426 ], [ %400, %399 ]
  %428 = phi i64 [ %433, %426 ], [ %404, %399 ]
  %429 = add i32 %427, 1
  %430 = inttoptr i64 %428 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %431 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %430, i64 0, i32 1
  %432 = bitcast %"class.spvtools::opt::Instruction"** %431 to i64*
  %433 = load i64, i64* %432, align 8
  %434 = inttoptr i64 %433 to %"class.spvtools::opt::Instruction"*
  %435 = icmp eq %"class.spvtools::opt::Instruction"* %402, %434
  br i1 %435, label %417, label %426

436:                                              ; preds = %445
  store i32 %448, i32* %10, align 4
  br label %437

437:                                              ; preds = %436, %418
  %438 = phi i32 [ %448, %436 ], [ %419, %418 ]
  %439 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 11, i32 0, i32 1, i32 0, i32 1
  %440 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 11, i32 0, i32 1
  %441 = bitcast %"class.spvtools::opt::Instruction"** %439 to i64*
  %442 = load i64, i64* %441, align 8
  %443 = inttoptr i64 %442 to %"class.spvtools::opt::Instruction"*
  %444 = icmp eq %"class.spvtools::opt::Instruction"* %440, %443
  br i1 %444, label %456, label %464

445:                                              ; preds = %418, %445
  %446 = phi i32 [ %448, %445 ], [ %419, %418 ]
  %447 = phi i64 [ %452, %445 ], [ %423, %418 ]
  %448 = add i32 %446, 1
  %449 = inttoptr i64 %447 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %450 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %449, i64 0, i32 1
  %451 = bitcast %"class.spvtools::opt::Instruction"** %450 to i64*
  %452 = load i64, i64* %451, align 8
  %453 = inttoptr i64 %452 to %"class.spvtools::opt::Instruction"*
  %454 = icmp eq %"class.spvtools::opt::Instruction"* %421, %453
  br i1 %454, label %436, label %445

455:                                              ; preds = %464
  store i32 %467, i32* %10, align 4
  br label %456

456:                                              ; preds = %455, %437
  %457 = phi i32 [ %467, %455 ], [ %438, %437 ]
  %458 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 12, i32 0, i32 1, i32 0, i32 1
  %459 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 12, i32 0, i32 1
  %460 = bitcast %"class.spvtools::opt::Instruction"** %458 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = inttoptr i64 %461 to %"class.spvtools::opt::Instruction"*
  %463 = icmp eq %"class.spvtools::opt::Instruction"* %459, %462
  br i1 %463, label %475, label %483

464:                                              ; preds = %437, %464
  %465 = phi i32 [ %467, %464 ], [ %438, %437 ]
  %466 = phi i64 [ %471, %464 ], [ %442, %437 ]
  %467 = add i32 %465, 1
  %468 = inttoptr i64 %466 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %469 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %468, i64 0, i32 1
  %470 = bitcast %"class.spvtools::opt::Instruction"** %469 to i64*
  %471 = load i64, i64* %470, align 8
  %472 = inttoptr i64 %471 to %"class.spvtools::opt::Instruction"*
  %473 = icmp eq %"class.spvtools::opt::Instruction"* %440, %472
  br i1 %473, label %455, label %464

474:                                              ; preds = %483
  store i32 %486, i32* %10, align 4
  br label %475

475:                                              ; preds = %474, %456
  %476 = phi i32 [ %486, %474 ], [ %457, %456 ]
  %477 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 13, i32 0, i32 1, i32 0, i32 1
  %478 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 13, i32 0, i32 1
  %479 = bitcast %"class.spvtools::opt::Instruction"** %477 to i64*
  %480 = load i64, i64* %479, align 8
  %481 = inttoptr i64 %480 to %"class.spvtools::opt::Instruction"*
  %482 = icmp eq %"class.spvtools::opt::Instruction"* %478, %481
  br i1 %482, label %494, label %502

483:                                              ; preds = %456, %483
  %484 = phi i32 [ %486, %483 ], [ %457, %456 ]
  %485 = phi i64 [ %490, %483 ], [ %461, %456 ]
  %486 = add i32 %484, 1
  %487 = inttoptr i64 %485 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %488 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %487, i64 0, i32 1
  %489 = bitcast %"class.spvtools::opt::Instruction"** %488 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = inttoptr i64 %490 to %"class.spvtools::opt::Instruction"*
  %492 = icmp eq %"class.spvtools::opt::Instruction"* %459, %491
  br i1 %492, label %474, label %483

493:                                              ; preds = %502
  store i32 %505, i32* %10, align 4
  br label %494

494:                                              ; preds = %493, %475
  %495 = phi i32 [ %505, %493 ], [ %476, %475 ]
  %496 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 14, i32 0, i32 1, i32 0, i32 1
  %497 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 14, i32 0, i32 1
  %498 = bitcast %"class.spvtools::opt::Instruction"** %496 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = inttoptr i64 %499 to %"class.spvtools::opt::Instruction"*
  %501 = icmp eq %"class.spvtools::opt::Instruction"* %497, %500
  br i1 %501, label %513, label %532

502:                                              ; preds = %475, %502
  %503 = phi i32 [ %505, %502 ], [ %476, %475 ]
  %504 = phi i64 [ %509, %502 ], [ %480, %475 ]
  %505 = add i32 %503, 1
  %506 = inttoptr i64 %504 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %507 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %506, i64 0, i32 1
  %508 = bitcast %"class.spvtools::opt::Instruction"** %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = inttoptr i64 %509 to %"class.spvtools::opt::Instruction"*
  %511 = icmp eq %"class.spvtools::opt::Instruction"* %478, %510
  br i1 %511, label %493, label %502

512:                                              ; preds = %532
  store i32 %546, i32* %10, align 4
  br label %513

513:                                              ; preds = %512, %494
  %514 = phi i32 [ %546, %512 ], [ %495, %494 ]
  %515 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 15, i32 0, i32 0
  %516 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %515, align 8
  %517 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %263, i64 0, i32 15, i32 0, i32 1
  %518 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %517, align 8
  %519 = icmp eq %"class.std::__1::unique_ptr.28"* %516, %518
  br i1 %519, label %630, label %520

520:                                              ; preds = %513
  %521 = bitcast %"class.std::__1::function.1010"* %11 to i8*
  %522 = ptrtoint i32* %10 to i64
  %523 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %11, i64 0, i32 0, i32 1, i32 0
  %524 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %11, i64 0, i32 0, i32 2
  %525 = bitcast %"class.std::__1::function.1010"* %11 to i64*
  %526 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %11, i64 0, i32 0, i32 0, i32 0
  %527 = bitcast i32* %12 to i8*
  %528 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %0, i64 0, i32 7, i32 0
  %529 = bitcast %"class.std::__1::tuple.1174"* %6 to i8*
  %530 = getelementptr inbounds %"class.std::__1::tuple.1174", %"class.std::__1::tuple.1174"* %6, i64 0, i32 0, i32 0, i32 0
  %531 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %7, i64 0, i32 0
  br label %553

532:                                              ; preds = %494, %532
  %533 = phi i32 [ %546, %532 ], [ %495, %494 ]
  %534 = phi %"class.spvtools::opt::Instruction"* [ %551, %532 ], [ %500, %494 ]
  %535 = phi i64 [ %550, %532 ], [ %499, %494 ]
  %536 = add i32 %533, 1
  %537 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %534, i64 0, i32 7
  %538 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %534, i64 0, i32 7, i32 0, i32 1
  %539 = bitcast %"class.spvtools::opt::Instruction"** %538 to i64*
  %540 = load i64, i64* %539, align 8
  %541 = bitcast %"class.std::__1::vector.14"* %537 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = sub i64 %540, %542
  %544 = sdiv exact i64 %543, 112
  %545 = trunc i64 %544 to i32
  %546 = add i32 %536, %545
  %547 = inttoptr i64 %535 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %548 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %547, i64 0, i32 1
  %549 = bitcast %"class.spvtools::opt::Instruction"** %548 to i64*
  %550 = load i64, i64* %549, align 8
  %551 = inttoptr i64 %550 to %"class.spvtools::opt::Instruction"*
  %552 = icmp eq %"class.spvtools::opt::Instruction"* %497, %551
  br i1 %552, label %512, label %532

553:                                              ; preds = %520, %573
  %554 = phi i32 [ %514, %520 ], [ %575, %573 ]
  %555 = phi %"class.std::__1::unique_ptr.28"* [ %516, %520 ], [ %576, %573 ]
  %556 = add i32 %554, 1
  store i32 %556, i32* %10, align 4
  %557 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %555, i64 0, i32 0, i32 0, i32 0
  %558 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %557, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %521) #13
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_14InstrumentPass20InitializeInstrumentEvE3$_2S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %523, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20InitializeInstrumentEvE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %524, align 8
  store i64 %522, i64* %525, align 8
  call void @_ZN8spvtools3opt8Function12ForEachParamERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Function"* %558, %"class.std::__1::function.1010"* nonnull dereferenceable(32) %11, i1 zeroext true) #13
  %559 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %524, align 8
  %560 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %559, i64 0, i32 1
  %561 = load void (i8*)*, void (i8*)** %560, align 8
  %562 = icmp eq void (i8*)* %561, null
  br i1 %562, label %565, label %563

563:                                              ; preds = %553
  %564 = load i8*, i8** %526, align 8
  call void %561(i8* %564) #13
  br label %565

565:                                              ; preds = %553, %563
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %521) #13
  %566 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %557, align 8
  %567 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %566, i64 0, i32 3, i32 0, i32 0
  %568 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %567, align 8
  %569 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %566, i64 0, i32 3, i32 0, i32 1
  %570 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %569, align 8
  %571 = icmp eq %"class.std::__1::unique_ptr.40"* %568, %570
  %572 = load i32, i32* %10, align 4
  br i1 %571, label %573, label %585

573:                                              ; preds = %597, %565
  %574 = phi i32 [ %572, %565 ], [ %598, %597 ]
  %575 = add i32 %574, 1
  store i32 %575, i32* %10, align 4
  %576 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %555, i64 1
  %577 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %238, align 8
  %578 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %577, i64 0, i32 4, i32 0, i32 0, i32 0
  %579 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %578, align 8
  %580 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %579, i64 0, i32 15, i32 0, i32 1
  %581 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %580, align 8
  %582 = icmp ne %"class.spvtools::opt::Module"* %263, %579
  %583 = icmp ne %"class.std::__1::unique_ptr.28"* %576, %581
  %584 = or i1 %582, %583
  br i1 %584, label %553, label %630

585:                                              ; preds = %565, %597
  %586 = phi i32 [ %598, %597 ], [ %572, %565 ]
  %587 = phi %"class.std::__1::unique_ptr.40"* [ %599, %597 ], [ %568, %565 ]
  %588 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %587, i64 0, i32 0, i32 0, i32 0
  %589 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %588, align 8
  %590 = add i32 %586, 1
  store i32 %590, i32* %10, align 4
  %591 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %589, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %592 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %589, i64 0, i32 2, i32 0, i32 1
  %593 = bitcast %"class.spvtools::opt::Instruction"** %591 to i64*
  %594 = load i64, i64* %593, align 8
  %595 = inttoptr i64 %594 to %"class.spvtools::opt::Instruction"*
  %596 = icmp eq %"class.spvtools::opt::Instruction"* %592, %595
  br i1 %596, label %597, label %601

597:                                              ; preds = %601, %585
  %598 = phi i32 [ %590, %585 ], [ %623, %601 ]
  %599 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %587, i64 1
  %600 = icmp eq %"class.std::__1::unique_ptr.40"* %599, %570
  br i1 %600, label %573, label %585

601:                                              ; preds = %585, %601
  %602 = phi i32 [ %623, %601 ], [ %590, %585 ]
  %603 = phi %"class.spvtools::opt::Instruction"* [ %628, %601 ], [ %595, %585 ]
  %604 = phi i64 [ %627, %601 ], [ %594, %585 ]
  %605 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %603, i64 0, i32 7
  %606 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %603, i64 0, i32 7, i32 0, i32 1
  %607 = bitcast %"class.spvtools::opt::Instruction"** %606 to i64*
  %608 = load i64, i64* %607, align 8
  %609 = bitcast %"class.std::__1::vector.14"* %605 to i64*
  %610 = load i64, i64* %609, align 8
  %611 = sub i64 %608, %610
  %612 = sdiv exact i64 %611, 112
  %613 = trunc i64 %612 to i32
  %614 = add i32 %602, %613
  store i32 %614, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %527) #13
  %615 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %603, i64 0, i32 5
  %616 = load i32, i32* %615, align 8
  store i32 %616, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %529) #13
  store i32* %12, i32** %530, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %531) #13
  %617 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %528, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1174"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %7) #13
  %618 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %617, 0
  %619 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %618, i64 2
  %620 = bitcast %"struct.std::__1::__hash_node_base.254"* %619 to %"struct.std::__1::pair"*
  %621 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %620, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %531) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %529) #13
  store i32 %614, i32* %621, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %527) #13
  %622 = load i32, i32* %10, align 4
  %623 = add i32 %622, 1
  store i32 %623, i32* %10, align 4
  %624 = inttoptr i64 %604 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %625 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %624, i64 0, i32 1
  %626 = bitcast %"class.spvtools::opt::Instruction"** %625 to i64*
  %627 = load i64, i64* %626, align 8
  %628 = inttoptr i64 %627 to %"class.spvtools::opt::Instruction"*
  %629 = icmp eq %"class.spvtools::opt::Instruction"* %592, %628
  br i1 %629, label %597, label %601

630:                                              ; preds = %573, %513
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %264) #13
  ret void
}

declare void @_ZN8spvtools3opt8Function12ForEachParamERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Function"*, %"class.std::__1::function.1010"* dereferenceable(32), i1 zeroext) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !6
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #13
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !6
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !6
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #13
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !6
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !6
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #13
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !6
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !6
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #13
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !6
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #13
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !6
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !6
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !6
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !6
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #13
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #13
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #13
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #13
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #13
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #12
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #12
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #12
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #12
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD0Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZN8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZN8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZN8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZN8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZN8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZNK8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZN8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZN8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZNK8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZN8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZN8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZNK8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZN8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZN8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::vector.3"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %13, %7
  %19 = icmp eq %"class.std::__1::vector.3"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.std::__1::vector.3"* %3, %"class.std::__1::vector.3"** %4, align 8
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %5 = alloca %"class.std::__1::vector.3", align 8
  %6 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  %7 = zext i1 %2 to i8
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector.463"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #13
  %11 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 2
  store i32 2, i32* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 1
  store i32 32, i32* %12, align 4
  %13 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 2
  store i8 %7, i8* %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 11
  %17 = load i32, i32* %16, align 8
  %18 = trunc i32 %17 to i16
  %19 = icmp slt i16 %18, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 5
  %22 = tail call i8* @_Znwm(i64 240) #12
  %23 = bitcast i8* %22 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %23, %"class.std::__1::function"* dereferenceable(32) %21, %"class.spvtools::opt::IRContext"* %15) #13
  %24 = ptrtoint i8* %22 to i64
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.480"* %25 to i64*
  store i64 %24, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %27) #13
  %31 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %27 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %30, %20
  %33 = load i32, i32* %16, align 8
  %34 = or i32 %33, 32768
  store i32 %34, i32* %16, align 8
  br label %35

35:                                               ; preds = %3, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %36, align 8
  %38 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to %"class.spvtools::opt::analysis::Type"*
  %39 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %37, %"class.spvtools::opt::analysis::Type"* nonnull %38) #13
  %40 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 11
  %42 = load i32, i32* %41, align 8
  %43 = trunc i32 %42 to i16
  %44 = icmp slt i16 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 5
  %47 = call i8* @_Znwm(i64 240) #12
  %48 = bitcast i8* %47 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %48, %"class.std::__1::function"* dereferenceable(32) %46, %"class.spvtools::opt::IRContext"* %40) #13
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.480"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %52, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %45
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %52) #13
  %56 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %52 to i8*
  call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %55, %45
  %58 = load i32, i32* %41, align 8
  %59 = or i32 %58, 32768
  store i32 %59, i32* %41, align 8
  br label %60

60:                                               ; preds = %35, %57
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %61, align 8
  %63 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %62, i32 %39) #13
  %64 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 11
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 16384
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %83

69:                                               ; preds = %60
  %70 = call i8* @_Znwm(i64 136) #12
  %71 = bitcast i8* %70 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %71, %"class.spvtools::opt::IRContext"* %64) #13
  %72 = ptrtoint i8* %70 to i64
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.400"* %73 to i64*
  store i64 %72, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %69
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %75) #13
  %79 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %75 to i8*
  call void @_ZdlPv(i8* %79) #12
  br label %80

80:                                               ; preds = %78, %69
  %81 = load i32, i32* %65, align 8
  %82 = or i32 %81, 16384
  store i32 %82, i32* %65, align 8
  br label %83

83:                                               ; preds = %60, %80
  %84 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %84, align 8
  %86 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #13
  %87 = call i8* @_Znwm(i64 4) #12
  %88 = bitcast i8* %87 to i32*
  %89 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %90 = bitcast %"class.std::__1::vector.3"* %5 to i8**
  store i8* %87, i8** %90, align 8
  %91 = getelementptr inbounds i8, i8* %87, i64 4
  %92 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast i32** %92 to i8**
  store i8* %91, i8** %93, align 8
  %94 = bitcast i32** %89 to i64*
  store i32 %1, i32* %88, align 4
  %95 = ptrtoint i8* %91 to i64
  store i64 %95, i64* %94, align 8
  %96 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %85, %"class.spvtools::opt::analysis::Type"* %63, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %5) #13
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %83
  %101 = ptrtoint i32* %98 to i64
  store i64 %101, i64* %94, align 8
  %102 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %83, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  %104 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 11
  %106 = load i32, i32* %105, align 8
  %107 = and i32 %106, 16384
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %123

109:                                              ; preds = %103
  %110 = call i8* @_Znwm(i64 136) #12
  %111 = bitcast i8* %110 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %111, %"class.spvtools::opt::IRContext"* %104) #13
  %112 = ptrtoint i8* %110 to i64
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %114, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.400"* %113 to i64*
  store i64 %112, i64* %116, align 8
  %117 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %115, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %109
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %115) #13
  %119 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %115 to i8*
  call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %118, %109
  %121 = load i32, i32* %105, align 8
  %122 = or i32 %121, 16384
  store i32 %122, i32* %105, align 8
  br label %123

123:                                              ; preds = %103, %120
  %124 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19, i32 0, i32 0, i32 0
  %125 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %124, align 8
  %126 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %125, %"class.spvtools::opt::analysis::Constant"* %96, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %127 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %9, i64 0, i32 0, i32 0
  %128 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %127, align 8
  %129 = icmp eq %"class.std::__1::vector.3"* %128, null
  br i1 %129, label %153, label %130

130:                                              ; preds = %123
  %131 = bitcast %"class.std::__1::vector.3"* %128 to i8*
  %132 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %133 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %132, align 8
  %134 = icmp eq %"class.std::__1::vector.3"* %133, %128
  br i1 %134, label %151, label %135

135:                                              ; preds = %130, %146
  %136 = phi %"class.std::__1::vector.3"* [ %137, %146 ], [ %133, %130 ]
  %137 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1
  %138 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %137, i64 0, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = icmp eq i32* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %135
  %142 = ptrtoint i32* %139 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1, i32 0, i32 1
  %144 = bitcast i32** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast i32* %139 to i8*
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %141, %135
  %147 = icmp eq %"class.std::__1::vector.3"* %137, %128
  br i1 %147, label %148, label %135

148:                                              ; preds = %146
  %149 = bitcast %"class.std::__1::vector.463"* %9 to i8**
  %150 = load i8*, i8** %149, align 8
  br label %151

151:                                              ; preds = %148, %130
  %152 = phi i8* [ %150, %148 ], [ %131, %130 ]
  store %"class.std::__1::vector.3"* %128, %"class.std::__1::vector.3"** %132, align 8
  call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %123, %151
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #13
  ret %"class.spvtools::opt::Instruction"* %126
}

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #4

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Constant"*, i32, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.460"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.460"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.460"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.460"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #13
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.460"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.458"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.460"* %4, %"class.std::__1::unique_ptr.460"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.441"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.441"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.441"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  %38 = icmp eq %"struct.std::__1::__hash_node_base.441"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.441"** null, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.441"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.441"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node"**
  %49 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %46, %"class.std::__1::__tree_node"* %49) #13
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.408"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.408"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.408"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  %58 = icmp eq %"struct.std::__1::__hash_node_base.408"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.408"** null, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.408"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.408"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #13
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #13
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node.1038"**
  %34 = load %"class.std::__1::__tree_node.1038"*, %"class.std::__1::__tree_node.1038"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node.1038"* %34) #13
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.1038"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1038"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1038"* %1 to %"class.std::__1::__tree_node.1038"**
  %6 = load %"class.std::__1::__tree_node.1038"*, %"class.std::__1::__tree_node.1038"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1038"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1038", %"class.std::__1::__tree_node.1038"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1038"**
  %9 = load %"class.std::__1::__tree_node.1038"*, %"class.std::__1::__tree_node.1038"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1038"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node.1038"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #13, !range !75
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.178"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.178"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.178"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.178"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.178"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.178"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.178"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1061", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.1049", align 8
  %6 = alloca %"class.std::__1::function.1010", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !80

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.1010"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.1010"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.1049"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.1010"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.1049"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #13
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #13
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #13
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #13
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %3) #13
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #13
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !6
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !6
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #13
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #13
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #13
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #13
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #13
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1010"**
  %4 = load %"class.std::__1::function.1010"*, %"class.std::__1::function.1010"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #13
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1061", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #13
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %4) #13
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1061"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !75
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !81
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !81
  %75 = load i64, i64* %74, align 8, !noalias !81
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !81
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !81
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !81
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !81
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !75
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #13
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #13, !range !75
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #13, !range !75
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !75
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !75
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !75
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !84

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !75
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.938"**
  %4 = load %"class.std::__1::function.938"*, %"class.std::__1::function.938"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #13
  ret i1 true
}

declare void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"*, %"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.130"* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %4, %41
  %9 = phi %"struct.std::__1::__hash_node_base.130"* [ %11, %41 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 9
  %13 = bitcast %"struct.std::__1::__hash_node_base.130"* %12 to %"class.spvtools::opt::Instruction"***
  %14 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %15 = icmp eq %"class.spvtools::opt::Instruction"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint %"class.spvtools::opt::Instruction"** %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 10
  %19 = bitcast %"struct.std::__1::__hash_node_base.130"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 6
  %23 = bitcast %"struct.std::__1::__hash_node_base.130"* %22 to %"class.spvtools::opt::Instruction"***
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = ptrtoint %"class.spvtools::opt::Instruction"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 7
  %29 = bitcast %"struct.std::__1::__hash_node_base.130"* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"** %24 to i8*
  tail call void @_ZdlPv(i8* %30) #12
  br label %31

31:                                               ; preds = %26, %21
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base.130"* %32 to %"class.spvtools::opt::Instruction"***
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"** %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 4
  %39 = bitcast %"struct.std::__1::__hash_node_base.130"* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %36, %31
  %42 = bitcast %"struct.std::__1::__hash_node_base.130"* %9 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base.130"* %11, null
  br i1 %43, label %44, label %8

44:                                               ; preds = %41, %4
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.130"**, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.130"** null, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.130"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.130"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DecorationManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

declare void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"*, %"class.std::__1::__tree_node.1091"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1091"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1091"* %1 to %"class.std::__1::__tree_node.1091"**
  %6 = load %"class.std::__1::__tree_node.1091"*, %"class.std::__1::__tree_node.1091"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node.1091"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1091", %"class.std::__1::__tree_node.1091"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1091"**
  %9 = load %"class.std::__1::__tree_node.1091"*, %"class.std::__1::__tree_node.1091"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node.1091"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node.1091"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN8spvtools3opt14FeatureManager12AddExtensionEPNS0_11InstructionE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorINS2_IjNS_9allocatorIjEEEENS3_IS5_EEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS3_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.964"*, %"class.std::__1::__tree_node.1092"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1092"* %1, null
  br i1 %3, label %39, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1092"* %1 to %"class.std::__1::__tree_node.1092"**
  %6 = load %"class.std::__1::__tree_node.1092"*, %"class.std::__1::__tree_node.1092"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorINS2_IjNS_9allocatorIjEEEENS3_IS5_EEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS3_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.964"* %0, %"class.std::__1::__tree_node.1092"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1092", %"class.std::__1::__tree_node.1092"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1092"**
  %9 = load %"class.std::__1::__tree_node.1092"*, %"class.std::__1::__tree_node.1092"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorINS2_IjNS_9allocatorIjEEEENS3_IS5_EEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS3_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.964"* %0, %"class.std::__1::__tree_node.1092"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1092", %"class.std::__1::__tree_node.1092"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %11, align 8
  %13 = icmp eq %"class.std::__1::vector.3"* %12, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::vector.3"* %12 to i8*
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.1092", %"class.std::__1::__tree_node.1092"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %17 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %16, align 8
  %18 = icmp eq %"class.std::__1::vector.3"* %17, %12
  br i1 %18, label %35, label %19

19:                                               ; preds = %14, %30
  %20 = phi %"class.std::__1::vector.3"* [ %21, %30 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %20, i64 -1
  %22 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %21, i64 0, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = icmp eq i32* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %19
  %26 = ptrtoint i32* %23 to i64
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %20, i64 -1, i32 0, i32 1
  %28 = bitcast i32** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast i32* %23 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %25, %19
  %31 = icmp eq %"class.std::__1::vector.3"* %21, %12
  br i1 %31, label %32, label %19

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector.463"* %10 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %14
  %36 = phi i8* [ %34, %32 ], [ %15, %14 ]
  store %"class.std::__1::vector.3"* %12, %"class.std::__1::vector.3"** %16, align 8
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %4, %35
  %38 = bitcast %"class.std::__1::__tree_node.1092"* %1 to i8*
  tail call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4BoolD0Ev(%"class.spvtools::opt::analysis::Bool"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.spvtools::opt::analysis::Bool"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Bool10IsSameImplEPKNS1_4TypeEPNSt3__13setINS6_4pairIPKNS1_7PointerESB_EENS6_4lessISC_EENS6_9allocatorISC_EEEE(%"class.spvtools::opt::analysis::Bool"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::set.1095"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.spvtools::opt::analysis::Type"* %1 to %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)***
  %5 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %5, i64 9
  %7 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %6, align 8
  %8 = tail call %"class.spvtools::opt::analysis::Bool"* %7(%"class.spvtools::opt::analysis::Type"* %1) #13
  %9 = icmp eq %"class.spvtools::opt::analysis::Bool"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.spvtools::opt::analysis::Bool"* %0 to %"class.spvtools::opt::analysis::Type"*
  %12 = tail call zeroext i1 @_ZNK8spvtools3opt8analysis4Type18HasSameDecorationsEPKS2_(%"class.spvtools::opt::analysis::Type"* %11, %"class.spvtools::opt::analysis::Type"* %1) #13
  br label %13

13:                                               ; preds = %3, %10
  %14 = phi i1 [ false, %3 ], [ %12, %10 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8spvtools3opt8analysis4Bool3strEv(%"class.std::__1::basic_string"* noalias sret, %"class.spvtools::opt::analysis::Bool"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 4, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1819242338, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 4
  store i8 0, i8* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8spvtools3opt8analysis4Bool17GetExtraHashWordsEPNSt3__16vectorIjNS3_9allocatorIjEEEEPNS3_13unordered_setIPKNS1_4TypeENS3_4hashISC_EENS3_8equal_toISC_EENS5_ISC_EEEE(%"class.spvtools::opt::analysis::Bool"*, %"class.std::__1::vector.3"*, %"class.std::__1::unordered_set.1105"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZN8spvtools3opt8analysis4Bool6AsBoolEv(%"class.spvtools::opt::analysis::Bool"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZNK8spvtools3opt8analysis4Bool6AsBoolEv(%"class.spvtools::opt::analysis::Bool"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* %0
}

declare zeroext i1 @_ZNK8spvtools3opt8analysis4Type18HasSameDecorationsEPKS2_(%"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4VoidD0Ev(%"class.spvtools::opt::analysis::Void"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Void", %"class.spvtools::opt::analysis::Void"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Void", %"class.spvtools::opt::analysis::Void"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Void", %"class.spvtools::opt::analysis::Void"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.spvtools::opt::analysis::Void"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Void10IsSameImplEPKNS1_4TypeEPNSt3__13setINS6_4pairIPKNS1_7PointerESB_EENS6_4lessISC_EENS6_9allocatorISC_EEEE(%"class.spvtools::opt::analysis::Void"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::set.1095"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.spvtools::opt::analysis::Type"* %1 to %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)***
  %5 = load %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)** %5, i64 7
  %7 = load %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)** %6, align 8
  %8 = tail call %"class.spvtools::opt::analysis::Void"* %7(%"class.spvtools::opt::analysis::Type"* %1) #13
  %9 = icmp eq %"class.spvtools::opt::analysis::Void"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.spvtools::opt::analysis::Void"* %0 to %"class.spvtools::opt::analysis::Type"*
  %12 = tail call zeroext i1 @_ZNK8spvtools3opt8analysis4Type18HasSameDecorationsEPKS2_(%"class.spvtools::opt::analysis::Type"* %11, %"class.spvtools::opt::analysis::Type"* %1) #13
  br label %13

13:                                               ; preds = %3, %10
  %14 = phi i1 [ false, %3 ], [ %12, %10 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8spvtools3opt8analysis4Void3strEv(%"class.std::__1::basic_string"* noalias sret, %"class.spvtools::opt::analysis::Void"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 4, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1684631414, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 4
  store i8 0, i8* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8spvtools3opt8analysis4Void17GetExtraHashWordsEPNSt3__16vectorIjNS3_9allocatorIjEEEEPNS3_13unordered_setIPKNS1_4TypeENS3_4hashISC_EENS3_8equal_toISC_EENS5_ISC_EEEE(%"class.spvtools::opt::analysis::Void"*, %"class.std::__1::vector.3"*, %"class.std::__1::unordered_set.1105"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZN8spvtools3opt8analysis4Void6AsVoidEv(%"class.spvtools::opt::analysis::Void"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZNK8spvtools3opt8analysis4Void6AsVoidEv(%"class.spvtools::opt::analysis::Void"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt11InstructionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.31"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.21"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.31"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.31"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.21"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.21"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.21"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.21"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.21"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.21"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.21"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.21"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.21"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spvtools::opt::Instruction"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.21"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.21"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.21"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.21"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !85

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.21"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.21"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.21"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.21"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.21"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.21"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.21"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.21"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.21"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.21"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.21"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.21"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.21"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.21"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.21"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.21"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.21"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.21"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.21"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.21"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.21"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.21"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.21"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.21"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.21"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.21"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.21"*
  %138 = icmp eq %"class.std::__1::unique_ptr.21"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.21"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %142, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %142, align 8
  %144 = icmp eq %"class.spvtools::opt::Instruction"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.spvtools::opt::Instruction"* %143 to void (%"class.spvtools::opt::Instruction"*)***
  %147 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, i64 1
  %149 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %148, align 8
  tail call void %149(%"class.spvtools::opt::Instruction"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.21"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.21", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %10, align 8
  %11 = tail call i8* @_Znwm(i64 112) #12
  %12 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  %15 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %15) #13
  %16 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %21 = bitcast i32** %19 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %20, %"struct.std::__1::aligned_storage<4, 4>::type"** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %23 = bitcast %"class.std::__1::unique_ptr.0"* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %20 to i32*
  store i64 1, i64* %18, align 8
  store i32 %1, i32* %24, align 8
  %25 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 3, i64 0
  %31 = bitcast i32** %29 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %30, %"struct.std::__1::aligned_storage<4, 4>::type"** %31, align 8
  %32 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4
  %33 = bitcast %"class.std::__1::unique_ptr.0"* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %26, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #13
  %35 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #13
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %40 = bitcast i32** %38 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %39, %"struct.std::__1::aligned_storage<4, 4>::type"** %40, align 8
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %42 = bitcast %"class.std::__1::unique_ptr.0"* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %39 to i32*
  store i64 1, i64* %37, align 8
  store i32 %2, i32* %43, align 8
  %44 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  store i32 39, i32* %44, align 8
  %45 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 2
  %49 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 3, i64 0
  %50 = bitcast i32** %48 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %49, %"struct.std::__1::aligned_storage<4, 4>::type"** %50, align 8
  %51 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4
  %52 = bitcast %"class.std::__1::unique_ptr.0"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #13
  %54 = call i8* @_Znwm(i64 96) #12
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds i8, i8* %54, i64 96
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"struct.spvtools::opt::Operand"** %58 to i8**
  store i8* %57, i8** %59, align 8
  %60 = bitcast i8* %54 to i32*
  %61 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  store i32 %62, i32* %60, align 8
  %63 = getelementptr inbounds i8, i8* %54, i64 8
  %64 = bitcast i8* %63 to %"class.spvtools::utils::SmallVector"*
  %65 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %66 = bitcast i8* %63 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds i8, i8* %54, i64 16
  %68 = bitcast i8* %67 to i64*
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %54, i64 24
  %70 = getelementptr inbounds i8, i8* %54, i64 32
  %71 = bitcast i8* %69 to i8**
  store i8* %70, i8** %71, align 8
  %72 = getelementptr inbounds i8, i8* %54, i64 40
  %73 = bitcast i8* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %64, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %65) #13
  %75 = getelementptr inbounds i8, i8* %54, i64 48
  %76 = bitcast i8* %75 to i32*
  %77 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  %78 = load i32, i32* %77, align 8
  store i32 %78, i32* %76, align 8
  %79 = getelementptr inbounds i8, i8* %54, i64 56
  %80 = bitcast i8* %79 to %"class.spvtools::utils::SmallVector"*
  %81 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %82 = bitcast i8* %79 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %83 = getelementptr inbounds i8, i8* %54, i64 64
  %84 = bitcast i8* %83 to i64*
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %54, i64 72
  %86 = getelementptr inbounds i8, i8* %54, i64 80
  %87 = bitcast i8* %85 to i8**
  store i8* %86, i8** %87, align 8
  %88 = getelementptr inbounds i8, i8* %54, i64 88
  %89 = bitcast i8* %88 to i64*
  store i64 0, i64* %89, align 8
  %90 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %80, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %81) #13
  %91 = getelementptr inbounds i8, i8* %54, i64 96
  %92 = bitcast i8* %11 to %"class.spvtools::opt::Instruction"*
  %93 = bitcast %"struct.spvtools::opt::Operand"** %55 to i64*
  %94 = ptrtoint i8* %91 to i64
  store i64 %94, i64* %93, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %92, %"class.spvtools::opt::IRContext"* %13, i32 247, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #13
  %95 = ptrtoint i8* %11 to i64
  %96 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %98 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %97, align 8
  %99 = icmp eq %"struct.spvtools::opt::Operand"* %98, null
  br i1 %99, label %128, label %100

100:                                              ; preds = %3
  %101 = bitcast %"struct.spvtools::opt::Operand"* %98 to i8*
  %102 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %55, align 8
  %103 = icmp eq %"struct.spvtools::opt::Operand"* %102, %98
  br i1 %103, label %126, label %104

104:                                              ; preds = %100, %122
  %105 = phi %"struct.spvtools::opt::Operand"* [ %106, %122 ], [ %102, %100 ]
  %106 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %115, %111
  %121 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %120, %104
  %123 = icmp eq %"struct.spvtools::opt::Operand"* %106, %98
  br i1 %123, label %124, label %104

124:                                              ; preds = %122
  %125 = load i8*, i8** %56, align 8
  br label %126

126:                                              ; preds = %124, %100
  %127 = phi i8* [ %125, %124 ], [ %101, %100 ]
  store %"struct.spvtools::opt::Operand"* %98, %"struct.spvtools::opt::Operand"** %55, align 8
  call void @_ZdlPv(i8* %127) #12
  br label %128

128:                                              ; preds = %3, %126
  %129 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  %130 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %130, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %130, align 8
  %132 = icmp eq %"class.std::__1::vector.3"* %131, null
  br i1 %132, label %144, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %131, i64 0, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = icmp eq i32* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = ptrtoint i32* %135 to i64
  %139 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %131, i64 0, i32 0, i32 1
  %140 = bitcast i32** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast i32* %135 to i8*
  call void @_ZdlPv(i8* %141) #12
  br label %142

142:                                              ; preds = %137, %133
  %143 = bitcast %"class.std::__1::vector.3"* %131 to i8*
  call void @_ZdlPv(i8* %143) #12
  br label %144

144:                                              ; preds = %128, %142
  %145 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %146 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %146, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %146, align 8
  %148 = icmp eq %"class.std::__1::vector.3"* %147, null
  br i1 %148, label %196, label %185

149:                                              ; preds = %196
  %150 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %198, i64 0, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = icmp eq i32* %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %149
  %154 = ptrtoint i32* %151 to i64
  %155 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %198, i64 0, i32 0, i32 1
  %156 = bitcast i32** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = bitcast i32* %151 to i8*
  call void @_ZdlPv(i8* %157) #12
  br label %158

158:                                              ; preds = %153, %149
  %159 = bitcast %"class.std::__1::vector.3"* %198 to i8*
  call void @_ZdlPv(i8* %159) #12
  br label %160

160:                                              ; preds = %196, %158
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %162 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %161, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %161, align 8
  %163 = icmp eq %"class.std::__1::vector.3"* %162, null
  br i1 %163, label %175, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %162, i64 0, i32 0, i32 0
  %166 = load i32*, i32** %165, align 8
  %167 = icmp eq i32* %166, null
  br i1 %167, label %173, label %168

168:                                              ; preds = %164
  %169 = ptrtoint i32* %166 to i64
  %170 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %162, i64 0, i32 0, i32 1
  %171 = bitcast i32** %170 to i64*
  store i64 %169, i64* %171, align 8
  %172 = bitcast i32* %166 to i8*
  call void @_ZdlPv(i8* %172) #12
  br label %173

173:                                              ; preds = %168, %164
  %174 = bitcast %"class.std::__1::vector.3"* %162 to i8*
  call void @_ZdlPv(i8* %174) #12
  br label %175

175:                                              ; preds = %160, %173
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  %176 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %4)
  %177 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %10, align 8
  %178 = icmp eq %"class.spvtools::opt::Instruction"* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = bitcast %"class.spvtools::opt::Instruction"* %177 to void (%"class.spvtools::opt::Instruction"*)***
  %181 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %181, i64 1
  %183 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %182, align 8
  call void %183(%"class.spvtools::opt::Instruction"* nonnull %177) #13
  br label %184

184:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret %"class.spvtools::opt::Instruction"* %176

185:                                              ; preds = %144
  %186 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 0, i32 0, i32 0
  %187 = load i32*, i32** %186, align 8
  %188 = icmp eq i32* %187, null
  br i1 %188, label %194, label %189

189:                                              ; preds = %185
  %190 = ptrtoint i32* %187 to i64
  %191 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 0, i32 0, i32 1
  %192 = bitcast i32** %191 to i64*
  store i64 %190, i64* %192, align 8
  %193 = bitcast i32* %187 to i8*
  call void @_ZdlPv(i8* %193) #12
  br label %194

194:                                              ; preds = %189, %185
  %195 = bitcast %"class.std::__1::vector.3"* %147 to i8*
  call void @_ZdlPv(i8* %195) #12
  br label %196

196:                                              ; preds = %194, %144
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %197 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %198 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %197, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %197, align 8
  %199 = icmp eq %"class.std::__1::vector.3"* %198, null
  br i1 %199, label %160, label %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::unique_ptr.40"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.1135", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %11 = icmp ult %"class.std::__1::unique_ptr.40"* %8, %10
  %12 = ptrtoint %"class.std::__1::unique_ptr.40"* %8 to i64
  %13 = ptrtoint %"class.std::__1::unique_ptr.40"* %10 to i64
  br i1 %11, label %14, label %144

14:                                               ; preds = %3
  %15 = icmp eq %"class.std::__1::unique_ptr.40"* %8, %1
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.40"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %17, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 1
  %22 = ptrtoint %"class.std::__1::unique_ptr.40"* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %373

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.40"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 %28
  %30 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  %31 = icmp ult %"class.std::__1::unique_ptr.40"* %29, %8
  br i1 %31, label %32, label %63

32:                                               ; preds = %24
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %8, i64 %33, i32 0, i32 0, i32 0
  %35 = bitcast %"class.spvtools::opt::BasicBlock"** %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %32, %43
  %44 = phi %"class.std::__1::unique_ptr.40"* [ %52, %43 ], [ %8, %32 ]
  %45 = phi %"class.std::__1::unique_ptr.40"* [ %51, %43 ], [ %29, %32 ]
  %46 = phi i64 [ %53, %43 ], [ %41, %32 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr.40"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %47, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.40"* %44 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %45, i64 1
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %44, i64 1
  %53 = add i64 %46, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %43, !llvm.loop !86

55:                                               ; preds = %43, %32
  %56 = phi %"class.std::__1::unique_ptr.40"* [ %8, %32 ], [ %52, %43 ]
  %57 = phi %"class.std::__1::unique_ptr.40"* [ %29, %32 ], [ %51, %43 ]
  %58 = phi %"class.std::__1::unique_ptr.40"* [ undef, %32 ], [ %52, %43 ]
  %59 = icmp ult i8* %37, inttoptr (i64 56 to i8*)
  br i1 %59, label %60, label %82

60:                                               ; preds = %82, %55
  %61 = phi %"class.std::__1::unique_ptr.40"* [ %58, %55 ], [ %132, %82 ]
  %62 = ptrtoint %"class.std::__1::unique_ptr.40"* %61 to i64
  br label %63

63:                                               ; preds = %60, %24
  %64 = phi i64 [ %62, %60 ], [ %12, %24 ]
  store i64 %64, i64* %30, align 8
  %65 = icmp eq i64 %27, 0
  br i1 %65, label %134, label %66

66:                                               ; preds = %63, %80
  %67 = phi %"class.std::__1::unique_ptr.40"* [ %70, %80 ], [ %8, %63 ]
  %68 = phi %"class.std::__1::unique_ptr.40"* [ %69, %80 ], [ %29, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %67, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.40"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.40"* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::BasicBlock"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %66
  %79 = bitcast %"class.std::__1::unique_ptr.40"* %70 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %79, %"class.spvtools::opt::BasicBlock"* nonnull %75) #13
  br label %80

80:                                               ; preds = %78, %66
  %81 = icmp eq %"class.std::__1::unique_ptr.40"* %69, %1
  br i1 %81, label %134, label %66

82:                                               ; preds = %55, %82
  %83 = phi %"class.std::__1::unique_ptr.40"* [ %132, %82 ], [ %56, %55 ]
  %84 = phi %"class.std::__1::unique_ptr.40"* [ %131, %82 ], [ %57, %55 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.40"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 1
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %89, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.40"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.40"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 2
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 2
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %95, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.std::__1::unique_ptr.40"* %95 to i64*
  %99 = load i64, i64* %98, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 3
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 3
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::unique_ptr.40"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %103, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.40"* %102 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 4
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 4
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %107, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr.40"* %107 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %109, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.40"* %108 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 5
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 5
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %113, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.std::__1::unique_ptr.40"* %113 to i64*
  %117 = load i64, i64* %116, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %115, align 8
  %118 = bitcast %"class.std::__1::unique_ptr.40"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 6
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 6
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %119, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.std::__1::unique_ptr.40"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %121, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.40"* %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %125, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.std::__1::unique_ptr.40"* %125 to i64*
  %129 = load i64, i64* %128, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %127, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.40"* %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 8
  %133 = icmp ult %"class.std::__1::unique_ptr.40"* %131, %8
  br i1 %133, label %82, label %60

134:                                              ; preds = %80, %63
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.40"* %2 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %135, align 8
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %138, align 8
  %140 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  store i64 %137, i64* %140, align 8
  %141 = icmp eq %"class.spvtools::opt::BasicBlock"* %139, null
  br i1 %141, label %373, label %142

142:                                              ; preds = %134
  %143 = bitcast %"class.std::__1::unique_ptr.40"* %1 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %143, %"class.spvtools::opt::BasicBlock"* nonnull %139) #13
  br label %373

144:                                              ; preds = %3
  %145 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer.1135"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #13
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %5, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %5, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %5, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %5, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %5, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  %153 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer.1135"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %12, %155
  %157 = ashr exact i64 %156, 3
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 2305843009213693951
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #14
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"class.std::__1::unique_ptr.40"** %9 to i64*
  %164 = sub i64 %13, %155
  %165 = ashr exact i64 %164, 3
  %166 = icmp ult i64 %165, 1152921504606846975
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %4, %155
  %169 = ashr exact i64 %168, 3
  store %"class.std::__1::unique_ptr.40"* null, %"class.std::__1::unique_ptr.40"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.49"** %151 to %"class.std::__1::__compressed_pair.46"**
  store %"class.std::__1::__compressed_pair.46"* %145, %"class.std::__1::__compressed_pair.46"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 2
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %4, %155
  %176 = ashr exact i64 %175, 3
  store %"class.std::__1::unique_ptr.40"* null, %"class.std::__1::unique_ptr.40"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.49"** %151 to %"class.std::__1::__compressed_pair.46"**
  store %"class.std::__1::__compressed_pair.46"* %145, %"class.std::__1::__compressed_pair.46"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 2305843009213693951
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #14
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 2305843009213693951, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 3
  %186 = tail call i8* @_Znwm(i64 %185) #12
  %187 = bitcast i8* %186 to %"class.std::__1::unique_ptr.40"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"class.std::__1::unique_ptr.40"* [ %187, %182 ], [ null, %171 ]
  store %"class.std::__1::unique_ptr.40"* %191, %"class.std::__1::unique_ptr.40"** %147, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %191, i64 %189
  store %"class.std::__1::unique_ptr.40"* %192, %"class.std::__1::unique_ptr.40"** %149, align 8
  store %"class.std::__1::unique_ptr.40"* %192, %"class.std::__1::unique_ptr.40"** %148, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %191, i64 %190
  store %"class.std::__1::unique_ptr.40"* %193, %"class.std::__1::unique_ptr.40"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.1135"* nonnull %5, %"class.std::__1::unique_ptr.40"* dereferenceable(8) %2)
  %194 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %195 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  %196 = icmp eq %"class.std::__1::unique_ptr.40"* %195, %1
  br i1 %196, label %261, label %197

197:                                              ; preds = %188
  %198 = ptrtoint %"class.std::__1::unique_ptr.40"* %195 to i64
  %199 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 -1, i32 0, i32 0, i32 0
  %200 = ptrtoint %"class.spvtools::opt::BasicBlock"** %199 to i64
  %201 = sub i64 %200, %198
  %202 = lshr i64 %201, 3
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 3
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %220, label %206

206:                                              ; preds = %197, %206
  %207 = phi %"class.std::__1::unique_ptr.40"* [ %217, %206 ], [ %194, %197 ]
  %208 = phi %"class.std::__1::unique_ptr.40"* [ %211, %206 ], [ %1, %197 ]
  %209 = phi i64 [ %218, %206 ], [ %204, %197 ]
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %207, i64 -1
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %208, i64 -1
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %211, i64 0, i32 0, i32 0, i32 0
  %213 = bitcast %"class.std::__1::unique_ptr.40"* %211 to i64*
  %214 = load i64, i64* %213, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %212, align 8
  %215 = bitcast %"class.std::__1::unique_ptr.40"* %210 to i64*
  store i64 %214, i64* %215, align 8
  %216 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %216, i64 -1
  store %"class.std::__1::unique_ptr.40"* %217, %"class.std::__1::unique_ptr.40"** %148, align 8
  %218 = add i64 %209, -1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %206, !llvm.loop !87

220:                                              ; preds = %206, %197
  %221 = phi %"class.std::__1::unique_ptr.40"* [ undef, %197 ], [ %217, %206 ]
  %222 = phi %"class.std::__1::unique_ptr.40"* [ %194, %197 ], [ %217, %206 ]
  %223 = phi %"class.std::__1::unique_ptr.40"* [ %1, %197 ], [ %211, %206 ]
  %224 = icmp ult i64 %201, 24
  br i1 %224, label %261, label %225

225:                                              ; preds = %220, %225
  %226 = phi %"class.std::__1::unique_ptr.40"* [ %259, %225 ], [ %222, %220 ]
  %227 = phi %"class.std::__1::unique_ptr.40"* [ %253, %225 ], [ %223, %220 ]
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %226, i64 -1
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -1
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = bitcast %"class.std::__1::unique_ptr.40"* %229 to i64*
  %232 = load i64, i64* %231, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %230, align 8
  %233 = bitcast %"class.std::__1::unique_ptr.40"* %228 to i64*
  store i64 %232, i64* %233, align 8
  %234 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %234, i64 -1
  store %"class.std::__1::unique_ptr.40"* %235, %"class.std::__1::unique_ptr.40"** %148, align 8
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %234, i64 -2
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -2
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = bitcast %"class.std::__1::unique_ptr.40"* %237 to i64*
  %240 = load i64, i64* %239, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %238, align 8
  %241 = bitcast %"class.std::__1::unique_ptr.40"* %236 to i64*
  store i64 %240, i64* %241, align 8
  %242 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %242, i64 -1
  store %"class.std::__1::unique_ptr.40"* %243, %"class.std::__1::unique_ptr.40"** %148, align 8
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %242, i64 -2
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -3
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %245, i64 0, i32 0, i32 0, i32 0
  %247 = bitcast %"class.std::__1::unique_ptr.40"* %245 to i64*
  %248 = load i64, i64* %247, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %246, align 8
  %249 = bitcast %"class.std::__1::unique_ptr.40"* %244 to i64*
  store i64 %248, i64* %249, align 8
  %250 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %250, i64 -1
  store %"class.std::__1::unique_ptr.40"* %251, %"class.std::__1::unique_ptr.40"** %148, align 8
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %250, i64 -2
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -4
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %253, i64 0, i32 0, i32 0, i32 0
  %255 = bitcast %"class.std::__1::unique_ptr.40"* %253 to i64*
  %256 = load i64, i64* %255, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %254, align 8
  %257 = bitcast %"class.std::__1::unique_ptr.40"* %252 to i64*
  store i64 %256, i64* %257, align 8
  %258 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %258, i64 -1
  store %"class.std::__1::unique_ptr.40"* %259, %"class.std::__1::unique_ptr.40"** %148, align 8
  %260 = icmp eq %"class.std::__1::unique_ptr.40"* %253, %195
  br i1 %260, label %261, label %225

261:                                              ; preds = %220, %225, %188
  %262 = phi %"class.std::__1::unique_ptr.40"* [ %194, %188 ], [ %221, %220 ], [ %259, %225 ]
  %263 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %264 = icmp eq %"class.std::__1::unique_ptr.40"* %263, %1
  br i1 %264, label %265, label %271

265:                                              ; preds = %261
  %266 = ptrtoint %"class.std::__1::unique_ptr.40"* %263 to i64
  %267 = ptrtoint %"class.std::__1::unique_ptr.40"* %262 to i64
  %268 = bitcast %"class.std::__1::unique_ptr.40"** %148 to i64*
  %269 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64*
  %270 = load i64, i64* %269, align 8
  br label %340

271:                                              ; preds = %261
  %272 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64**
  %273 = load i64*, i64** %272, align 8
  %274 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %263, i64 -1, i32 0, i32 0, i32 0
  %275 = ptrtoint %"class.spvtools::opt::BasicBlock"** %274 to i64
  %276 = sub i64 %275, %4
  %277 = lshr i64 %276, 3
  %278 = add nuw nsw i64 %277, 1
  %279 = and i64 %278, 3
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %296, label %281

281:                                              ; preds = %271, %281
  %282 = phi i64* [ %291, %281 ], [ %273, %271 ]
  %283 = phi %"class.std::__1::unique_ptr.40"* [ %288, %281 ], [ %1, %271 ]
  %284 = phi i64 [ %292, %281 ], [ %279, %271 ]
  %285 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %283, i64 0, i32 0, i32 0, i32 0
  %286 = bitcast %"class.std::__1::unique_ptr.40"* %283 to i64*
  %287 = load i64, i64* %286, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %285, align 8
  store i64 %287, i64* %282, align 8
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %283, i64 1
  %289 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %289, i64 1
  store %"class.std::__1::unique_ptr.40"* %290, %"class.std::__1::unique_ptr.40"** %149, align 8
  %291 = bitcast %"class.std::__1::unique_ptr.40"* %290 to i64*
  %292 = add i64 %284, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %281, !llvm.loop !88

294:                                              ; preds = %281
  %295 = bitcast %"class.std::__1::unique_ptr.40"* %290 to i64*
  br label %296

296:                                              ; preds = %271, %294
  %297 = phi %"class.std::__1::unique_ptr.40"* [ undef, %271 ], [ %290, %294 ]
  %298 = phi i64* [ %273, %271 ], [ %295, %294 ]
  %299 = phi %"class.std::__1::unique_ptr.40"* [ %1, %271 ], [ %288, %294 ]
  %300 = icmp ult i64 %276, 24
  br i1 %300, label %333, label %301

301:                                              ; preds = %296, %301
  %302 = phi i64* [ %332, %301 ], [ %298, %296 ]
  %303 = phi %"class.std::__1::unique_ptr.40"* [ %328, %301 ], [ %299, %296 ]
  %304 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 0, i32 0, i32 0, i32 0
  %305 = bitcast %"class.std::__1::unique_ptr.40"* %303 to i64*
  %306 = load i64, i64* %305, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %304, align 8
  store i64 %306, i64* %302, align 8
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 1
  %308 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %308, i64 1
  store %"class.std::__1::unique_ptr.40"* %309, %"class.std::__1::unique_ptr.40"** %149, align 8
  %310 = bitcast %"class.std::__1::unique_ptr.40"* %309 to i64*
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %307, i64 0, i32 0, i32 0, i32 0
  %312 = bitcast %"class.std::__1::unique_ptr.40"* %307 to i64*
  %313 = load i64, i64* %312, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %311, align 8
  store i64 %313, i64* %310, align 8
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 2
  %315 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %315, i64 1
  store %"class.std::__1::unique_ptr.40"* %316, %"class.std::__1::unique_ptr.40"** %149, align 8
  %317 = bitcast %"class.std::__1::unique_ptr.40"* %316 to i64*
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 0, i32 0, i32 0, i32 0
  %319 = bitcast %"class.std::__1::unique_ptr.40"* %314 to i64*
  %320 = load i64, i64* %319, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %318, align 8
  store i64 %320, i64* %317, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 3
  %322 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %322, i64 1
  store %"class.std::__1::unique_ptr.40"* %323, %"class.std::__1::unique_ptr.40"** %149, align 8
  %324 = bitcast %"class.std::__1::unique_ptr.40"* %323 to i64*
  %325 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %321, i64 0, i32 0, i32 0, i32 0
  %326 = bitcast %"class.std::__1::unique_ptr.40"* %321 to i64*
  %327 = load i64, i64* %326, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %325, align 8
  store i64 %327, i64* %324, align 8
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 4
  %329 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %330 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %329, i64 1
  store %"class.std::__1::unique_ptr.40"* %330, %"class.std::__1::unique_ptr.40"** %149, align 8
  %331 = icmp eq %"class.std::__1::unique_ptr.40"* %328, %263
  %332 = bitcast %"class.std::__1::unique_ptr.40"* %330 to i64*
  br i1 %331, label %333, label %301

333:                                              ; preds = %301, %296
  %334 = phi %"class.std::__1::unique_ptr.40"* [ %297, %296 ], [ %330, %301 ]
  %335 = ptrtoint %"class.std::__1::unique_ptr.40"* %334 to i64
  %336 = bitcast %"class.std::__1::unique_ptr.40"** %148 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = load i64, i64* %152, align 8
  %339 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64*
  br label %340

340:                                              ; preds = %265, %333
  %341 = phi i64* [ %269, %265 ], [ %339, %333 ]
  %342 = phi i64 [ %270, %265 ], [ %335, %333 ]
  %343 = phi i64 [ %266, %265 ], [ %338, %333 ]
  %344 = phi i64* [ %268, %265 ], [ %336, %333 ]
  %345 = phi i64 [ %267, %265 ], [ %337, %333 ]
  %346 = load i64, i64* %153, align 8
  store i64 %345, i64* %153, align 8
  store i64 %346, i64* %344, align 8
  store i64 %342, i64* %152, align 8
  store i64 %343, i64* %341, align 8
  %347 = load i64, i64* %163, align 8
  %348 = bitcast %"class.std::__1::unique_ptr.40"** %150 to i64*
  %349 = load i64, i64* %348, align 8
  store i64 %349, i64* %163, align 8
  store i64 %347, i64* %348, align 8
  %350 = bitcast %"struct.std::__1::__split_buffer.1135"* %5 to i64*
  store i64 %346, i64* %350, align 8
  %351 = inttoptr i64 %346 to %"class.std::__1::unique_ptr.40"*
  %352 = inttoptr i64 %343 to %"class.std::__1::unique_ptr.40"*
  %353 = icmp eq %"class.std::__1::unique_ptr.40"* %352, %351
  br i1 %353, label %367, label %354

354:                                              ; preds = %340, %362
  %355 = phi %"class.std::__1::unique_ptr.40"* [ %363, %362 ], [ %352, %340 ]
  %356 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %355, i64 -1
  store %"class.std::__1::unique_ptr.40"* %356, %"class.std::__1::unique_ptr.40"** %149, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %356, i64 0, i32 0, i32 0, i32 0
  %358 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %357, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %357, align 8
  %359 = icmp eq %"class.spvtools::opt::BasicBlock"* %358, null
  br i1 %359, label %362, label %360

360:                                              ; preds = %354
  %361 = bitcast %"class.std::__1::unique_ptr.40"* %356 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %361, %"class.spvtools::opt::BasicBlock"* nonnull %358) #13
  br label %362

362:                                              ; preds = %360, %354
  %363 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %364 = icmp eq %"class.std::__1::unique_ptr.40"* %363, %351
  br i1 %364, label %365, label %354

365:                                              ; preds = %362
  %366 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %147, align 8
  br label %367

367:                                              ; preds = %365, %340
  %368 = phi %"class.std::__1::unique_ptr.40"* [ %366, %365 ], [ %351, %340 ]
  %369 = icmp eq %"class.std::__1::unique_ptr.40"* %368, null
  br i1 %369, label %372, label %370

370:                                              ; preds = %367
  %371 = bitcast %"class.std::__1::unique_ptr.40"* %368 to i8*
  call void @_ZdlPv(i8* %371) #12
  br label %372

372:                                              ; preds = %367, %370
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #13
  br label %373

373:                                              ; preds = %142, %134, %16, %372
  %374 = phi %"class.std::__1::unique_ptr.40"* [ %1, %16 ], [ %194, %372 ], [ %1, %134 ], [ %1, %142 ]
  ret %"class.std::__1::unique_ptr.40"* %374
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.1135"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.40"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.40"* %6 to i64
  br i1 %7, label %9, label %179

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %12, align 8
  %14 = icmp ugt %"class.std::__1::unique_ptr.40"* %11, %13
  %15 = ptrtoint %"class.std::__1::unique_ptr.40"* %13 to i64
  br i1 %14, label %16, label %46

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr.40"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::unique_ptr.40"* %11, %4
  br i1 %23, label %42, label %24

24:                                               ; preds = %16, %36
  %25 = phi %"class.std::__1::unique_ptr.40"* [ %38, %36 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::unique_ptr.40"* [ %37, %36 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.40"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.40"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::BasicBlock"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  %35 = bitcast %"class.std::__1::unique_ptr.40"* %25 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %35, %"class.spvtools::opt::BasicBlock"* nonnull %31) #13
  br label %36

36:                                               ; preds = %34, %24
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %26, i64 1
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %25, i64 1
  %39 = icmp eq %"class.std::__1::unique_ptr.40"* %37, %4
  br i1 %39, label %40, label %24

40:                                               ; preds = %36
  %41 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  br label %42

42:                                               ; preds = %40, %16
  %43 = phi %"class.std::__1::unique_ptr.40"* [ %4, %16 ], [ %41, %40 ]
  %44 = phi %"class.std::__1::unique_ptr.40"* [ %22, %16 ], [ %38, %40 ]
  store %"class.std::__1::unique_ptr.40"* %44, %"class.std::__1::unique_ptr.40"** %3, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %43, i64 %21
  store %"class.std::__1::unique_ptr.40"* %45, %"class.std::__1::unique_ptr.40"** %10, align 8
  br label %179

46:                                               ; preds = %9
  %47 = bitcast %"class.std::__1::unique_ptr.40"** %5 to i64*
  %48 = bitcast %"struct.std::__1::__split_buffer.1135"* %0 to i64*
  %49 = sub i64 %8, %15
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #14
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #12
  %59 = bitcast i8* %58 to %"class.std::__1::unique_ptr.40"*
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %59, i64 %56
  %62 = ptrtoint %"class.std::__1::unique_ptr.40"* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %59, i64 %52
  %64 = ptrtoint %"class.std::__1::unique_ptr.40"* %63 to i64
  %65 = ptrtoint %"class.std::__1::unique_ptr.40"* %11 to i64
  %66 = ptrtoint %"class.std::__1::unique_ptr.40"* %4 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %157, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.std::__1::unique_ptr.40"* [ %86, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %87, %77 ], [ %62, %71 ]
  %80 = phi %"class.std::__1::unique_ptr.40"* [ %88, %77 ], [ %11, %71 ]
  %81 = phi i64 [ %89, %77 ], [ %75, %71 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.40"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %82, align 8
  %85 = inttoptr i64 %79 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 1
  %87 = ptrtoint %"class.std::__1::unique_ptr.40"* %86 to i64
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 1
  %89 = add i64 %81, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %77, !llvm.loop !89

91:                                               ; preds = %77
  %92 = ptrtoint %"class.std::__1::unique_ptr.40"* %86 to i64
  br label %93

93:                                               ; preds = %71, %91
  %94 = phi %"class.std::__1::unique_ptr.40"* [ %61, %71 ], [ %86, %91 ]
  %95 = phi i64 [ %62, %71 ], [ %92, %91 ]
  %96 = phi %"class.std::__1::unique_ptr.40"* [ %11, %71 ], [ %88, %91 ]
  %97 = icmp ult i64 %72, 56
  br i1 %97, label %152, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.std::__1::unique_ptr.40"* [ %148, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %149, %98 ], [ %95, %93 ]
  %101 = phi %"class.std::__1::unique_ptr.40"* [ %150, %98 ], [ %96, %93 ]
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr.40"* %101 to i64*
  %104 = load i64, i64* %103, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 1
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 1
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr.40"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %108, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.40"* %106 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 2
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 2
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr.40"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %114, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.40"* %112 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 3
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 3
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr.40"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %120, align 8
  %123 = bitcast %"class.std::__1::unique_ptr.40"* %118 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 4
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 4
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.40"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.40"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 5
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 5
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.std::__1::unique_ptr.40"* %131 to i64*
  %134 = load i64, i64* %133, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %132, align 8
  %135 = bitcast %"class.std::__1::unique_ptr.40"* %130 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 6
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 6
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.40"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %138, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.40"* %136 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 7
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 7
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::unique_ptr.40"* %143 to i64*
  %146 = load i64, i64* %145, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %144, align 8
  %147 = bitcast %"class.std::__1::unique_ptr.40"* %142 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 8
  %149 = ptrtoint %"class.std::__1::unique_ptr.40"* %148 to i64
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 8
  %151 = icmp eq %"class.std::__1::unique_ptr.40"* %69, %148
  br i1 %151, label %152, label %98

152:                                              ; preds = %98, %93
  %153 = ptrtoint %"class.std::__1::unique_ptr.40"* %69 to i64
  %154 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %12, align 8
  %155 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %156 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  br label %157

157:                                              ; preds = %55, %152
  %158 = phi %"class.std::__1::unique_ptr.40"* [ %156, %152 ], [ %4, %55 ]
  %159 = phi %"class.std::__1::unique_ptr.40"* [ %155, %152 ], [ %11, %55 ]
  %160 = phi %"class.std::__1::unique_ptr.40"* [ %154, %152 ], [ %13, %55 ]
  %161 = phi i64 [ %153, %152 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %162 = bitcast %"class.std::__1::unique_ptr.40"** %10 to i64*
  store i64 %62, i64* %162, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  store i64 %161, i64* %163, align 8
  store i64 %64, i64* %47, align 8
  %164 = icmp eq %"class.std::__1::unique_ptr.40"* %158, %159
  br i1 %164, label %175, label %165

165:                                              ; preds = %157, %173
  %166 = phi %"class.std::__1::unique_ptr.40"* [ %167, %173 ], [ %158, %157 ]
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %166, i64 -1
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %168, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %168, align 8
  %170 = icmp eq %"class.spvtools::opt::BasicBlock"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %165
  %172 = bitcast %"class.std::__1::unique_ptr.40"* %167 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %172, %"class.spvtools::opt::BasicBlock"* nonnull %169) #13
  br label %173

173:                                              ; preds = %171, %165
  %174 = icmp eq %"class.std::__1::unique_ptr.40"* %167, %159
  br i1 %174, label %175, label %165

175:                                              ; preds = %173, %157
  %176 = icmp eq %"class.std::__1::unique_ptr.40"* %160, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %175
  %178 = bitcast %"class.std::__1::unique_ptr.40"* %160 to i8*
  tail call void @_ZdlPv(i8* %178) #12
  br label %179

179:                                              ; preds = %177, %175, %42, %2
  %180 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64**
  %181 = load i64*, i64** %180, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  %184 = load i64, i64* %183, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %182, align 8
  store i64 %184, i64* %181, align 8
  %185 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %185, i64 1
  store %"class.std::__1::unique_ptr.40"* %186, %"class.std::__1::unique_ptr.40"** %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt8FunctionENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.26"*, %"class.std::__1::unique_ptr.28"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.28"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.26"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.26"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.28"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.28"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.28"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.28"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.28"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.28"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.28"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.28"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.28"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spvtools::opt::Function"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.28"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.28"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.28"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.28"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !90

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.28"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.28"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.28"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.28"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.28"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.28"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.28"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.28"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.28"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.28"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.28"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.28"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.28"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.28"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.28"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.28"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.28"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.28"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.28"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.28"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.28"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.28"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.28"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.28"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.28"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.28"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.28"*
  %138 = icmp eq %"class.std::__1::unique_ptr.28"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.28"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %142, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %142, align 8
  %144 = icmp eq %"class.spvtools::opt::Function"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN8spvtools3opt8FunctionD2Ev(%"class.spvtools::opt::Function"* nonnull %143) #13
  %146 = bitcast %"class.spvtools::opt::Function"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #12
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.28"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8FunctionD2Ev(%"class.spvtools::opt::Function"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.21"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.21"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.21"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %14, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::Instruction"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::Instruction"* %15 to void (%"class.spvtools::opt::Instruction"*)***
  %19 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::Instruction"* nonnull %15) #13
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.21"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.31"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.21"* %4, %"class.std::__1::unique_ptr.21"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %30, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %30, align 8
  %32 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.spvtools::opt::Instruction"* %31 to void (%"class.spvtools::opt::Instruction"*)***
  %35 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %35, i64 1
  %37 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %36, align 8
  tail call void %37(%"class.spvtools::opt::Instruction"* nonnull %31) #13
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %40, align 8
  %42 = icmp eq %"class.std::__1::unique_ptr.40"* %41, null
  br i1 %42, label %63, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::unique_ptr.40"* %41 to i8*
  %45 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 3, i32 0, i32 1
  %46 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %45, align 8
  %47 = icmp eq %"class.std::__1::unique_ptr.40"* %46, %41
  br i1 %47, label %61, label %48

48:                                               ; preds = %43, %56
  %49 = phi %"class.std::__1::unique_ptr.40"* [ %50, %56 ], [ %46, %43 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %49, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %51, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %51, align 8
  %53 = icmp eq %"class.spvtools::opt::BasicBlock"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.std::__1::unique_ptr.40"* %50 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %55, %"class.spvtools::opt::BasicBlock"* nonnull %52) #13
  br label %56

56:                                               ; preds = %54, %48
  %57 = icmp eq %"class.std::__1::unique_ptr.40"* %50, %41
  br i1 %57, label %58, label %48

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector.38"* %39 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %43
  %62 = phi i8* [ %60, %58 ], [ %44, %43 ]
  store %"class.std::__1::unique_ptr.40"* %41, %"class.std::__1::unique_ptr.40"** %45, align 8
  tail call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %38, %61
  %64 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %66 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %66, i64 0, i32 0, i32 3
  %68 = load i8, i8* %67, align 8, !range !6
  %69 = icmp ne i8 %68, 0
  %70 = icmp eq %"class.spvtools::opt::Instruction"* %66, null
  %71 = or i1 %70, %69
  br i1 %71, label %99, label %72

72:                                               ; preds = %63, %72
  %73 = phi %"class.spvtools::opt::Instruction"* [ %93, %72 ], [ %66, %63 ]
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 2
  %75 = bitcast %"class.spvtools::opt::Instruction"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 1
  %78 = bitcast %"class.spvtools::opt::Instruction"** %77 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %79 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %78, align 8
  %80 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %79, i64 0, i32 2
  %81 = bitcast %"class.spvtools::opt::Instruction"** %80 to i64*
  store i64 %76, i64* %81, align 8
  %82 = bitcast %"class.spvtools::opt::Instruction"** %77 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.spvtools::opt::Instruction"** %74 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %85 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %84, align 8
  %86 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %85, i64 0, i32 1
  %87 = bitcast %"class.spvtools::opt::Instruction"** %86 to i64*
  store i64 %83, i64* %87, align 8
  %88 = bitcast %"class.spvtools::opt::Instruction"** %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #13
  %89 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %90 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %90, i64 1
  %92 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %91, align 8
  tail call void %92(%"class.spvtools::opt::Instruction"* nonnull %73) #13
  %93 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %65, align 8
  %94 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %93, i64 0, i32 0, i32 3
  %95 = load i8, i8* %94, align 8, !range !6
  %96 = icmp ne i8 %95, 0
  %97 = icmp eq %"class.spvtools::opt::Instruction"* %93, null
  %98 = or i1 %97, %96
  br i1 %98, label %99, label %72

99:                                               ; preds = %72, %63
  %100 = phi %"class.spvtools::opt::Instruction"* [ %66, %63 ], [ %93, %72 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %100, i64 0, i32 0, i32 3
  %102 = load i8, i8* %101, align 8, !range !6
  %103 = icmp ne i8 %102, 0
  %104 = icmp eq %"class.spvtools::opt::Instruction"* %100, null
  %105 = or i1 %104, %103
  br i1 %105, label %129, label %106

106:                                              ; preds = %99, %106
  %107 = phi %"class.spvtools::opt::Instruction"* [ %123, %106 ], [ %100, %99 ]
  %108 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %107, i64 0, i32 0, i32 2
  %109 = bitcast %"class.spvtools::opt::Instruction"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %107, i64 0, i32 0, i32 1
  %112 = bitcast %"class.spvtools::opt::Instruction"** %111 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %113 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %112, align 8
  %114 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %113, i64 0, i32 2
  %115 = bitcast %"class.spvtools::opt::Instruction"** %114 to i64*
  store i64 %110, i64* %115, align 8
  %116 = bitcast %"class.spvtools::opt::Instruction"** %111 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.spvtools::opt::Instruction"** %108 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %119 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %119, i64 0, i32 1
  %121 = bitcast %"class.spvtools::opt::Instruction"** %120 to i64*
  store i64 %117, i64* %121, align 8
  %122 = bitcast %"class.spvtools::opt::Instruction"** %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 16, i1 false) #13
  %123 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %65, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 0, i32 3
  %125 = load i8, i8* %124, align 8, !range !6
  %126 = icmp ne i8 %125, 0
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %123, null
  %128 = or i1 %127, %126
  br i1 %128, label %129, label %106

129:                                              ; preds = %106, %99
  %130 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %130) #13
  %131 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 1
  %132 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %131, i64 0, i32 0, i32 0
  %133 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %132, align 8
  %134 = icmp eq %"class.std::__1::unique_ptr.21"* %133, null
  br i1 %134, label %158, label %135

135:                                              ; preds = %129
  %136 = bitcast %"class.std::__1::unique_ptr.21"* %133 to i8*
  %137 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 1, i32 0, i32 1
  %138 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %137, align 8
  %139 = icmp eq %"class.std::__1::unique_ptr.21"* %138, %133
  br i1 %139, label %156, label %140

140:                                              ; preds = %135, %151
  %141 = phi %"class.std::__1::unique_ptr.21"* [ %142, %151 ], [ %138, %135 ]
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %141, i64 -1
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %143, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %143, align 8
  %145 = icmp eq %"class.spvtools::opt::Instruction"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %140
  %147 = bitcast %"class.spvtools::opt::Instruction"* %144 to void (%"class.spvtools::opt::Instruction"*)***
  %148 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %148, i64 1
  %150 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %149, align 8
  tail call void %150(%"class.spvtools::opt::Instruction"* nonnull %144) #13
  br label %151

151:                                              ; preds = %146, %140
  %152 = icmp eq %"class.std::__1::unique_ptr.21"* %142, %133
  br i1 %152, label %153, label %140

153:                                              ; preds = %151
  %154 = bitcast %"class.std::__1::vector.31"* %131 to i8**
  %155 = load i8*, i8** %154, align 8
  br label %156

156:                                              ; preds = %153, %135
  %157 = phi i8* [ %155, %153 ], [ %136, %135 ]
  store %"class.std::__1::unique_ptr.21"* %133, %"class.std::__1::unique_ptr.21"** %137, align 8
  tail call void @_ZdlPv(i8* %157) #12
  br label %158

158:                                              ; preds = %129, %156
  %159 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %159, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %159, align 8
  %161 = icmp eq %"class.spvtools::opt::Instruction"* %160, null
  br i1 %161, label %167, label %162

162:                                              ; preds = %158
  %163 = bitcast %"class.spvtools::opt::Instruction"* %160 to void (%"class.spvtools::opt::Instruction"*)***
  %164 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %163, align 8
  %165 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %164, i64 1
  %166 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %165, align 8
  tail call void %166(%"class.spvtools::opt::Instruction"* nonnull %160) #13
  br label %167

167:                                              ; preds = %158, %162
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1146"* dereferenceable(8), %"class.std::__1::tuple.1061"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !75
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.254"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.254"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.254"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.254"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.254"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #12, !noalias !91
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1146", %"class.std::__1::tuple.1146"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !91
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !91
  store i32 %62, i32* %61, align 4, !noalias !91
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !91
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !91
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"**
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %67, align 8, !noalias !91
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !75
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !75
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.254"* %110, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.254"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.254"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !75
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.254"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.254"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } undef, %"struct.std::__1::__hash_node_base.254"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.254"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !75
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !75
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !75
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.250"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.254"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.254"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !94

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.254"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.254"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !75
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.254"* %36, %"struct.std::__1::__hash_node_base.254"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.254"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.254"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.254"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.254"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.254"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.254"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.254"* %82, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.254"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.254"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.254"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.254"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.254"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.254"* %80, %"struct.std::__1::__hash_node_base.254"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.254"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.254"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.254"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.990"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.986"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.986", %"class.std::__1::__hash_table.986"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !75
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.986", %"class.std::__1::__hash_table.986"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.990"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.990"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.990"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.990"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.990"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #12, !noalias !95
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !95
  store i32 %58, i32* %57, align 4, !noalias !95
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !95
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.990"**
  store %"struct.std::__1::__hash_node_base.990"* null, %"struct.std::__1::__hash_node_base.990"** %61, align 8, !noalias !95
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.986", %"class.std::__1::__hash_table.986"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.986", %"class.std::__1::__hash_table.986"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !75
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #13
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.986"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #13, !range !75
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.986", %"class.std::__1::__hash_table.986"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.990"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.986", %"class.std::__1::__hash_table.986"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.990"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.990"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.990"* %104, %"struct.std::__1::__hash_node_base.990"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.990"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.990"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #13, !range !75
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.990"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.990"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.990"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.990"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.990"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.990"*, i8 } undef, %"struct.std::__1::__hash_node_base.990"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.990"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.990"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.986"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !75
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.986", %"class.std::__1::__hash_table.986"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.986"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !75
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.986", %"class.std::__1::__hash_table.986"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.986", %"class.std::__1::__hash_table.986"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !75
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.986"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.986"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.986", %"class.std::__1::__hash_table.986"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.986", %"class.std::__1::__hash_table.986"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.986"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.990"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.990"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.992", %"class.std::__1::__bucket_list_deallocator.992"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.990"* null, %"struct.std::__1::__hash_node_base.990"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !98

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.986", %"class.std::__1::__hash_table.986"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.990"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.990"* null, %"struct.std::__1::__hash_node_base.990"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.990"* null, %"struct.std::__1::__hash_node_base.990"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.990"* null, %"struct.std::__1::__hash_node_base.990"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.990"* null, %"struct.std::__1::__hash_node_base.990"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.990"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !75
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.990"* %36, %"struct.std::__1::__hash_node_base.990"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.990"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.990"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.990"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.990"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.990"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.990"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.990"* %82, %"struct.std::__1::__hash_node_base.990"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.990"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.990"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.990"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.990"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.990"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.990"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.990"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.990"* %80, %"struct.std::__1::__hash_node_base.990"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.990"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.990", %"struct.std::__1::__hash_node_base.990"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.990"*, %"struct.std::__1::__hash_node_base.990"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.990"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.986", %"class.std::__1::__hash_table.986"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.990"**, %"struct.std::__1::__hash_node_base.990"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.990"** null, %"struct.std::__1::__hash_node_base.990"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.990"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.990"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.992", %"class.std::__1::__bucket_list_deallocator.992"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.206"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.202"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1174"* dereferenceable(8), %"class.std::__1::tuple.1061"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !75
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.206"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.206"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.206"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.206"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.206"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #12, !noalias !99
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1174", %"class.std::__1::tuple.1174"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !99
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !99
  store i32 %62, i32* %61, align 8, !noalias !99
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %64, align 8, !noalias !99
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !99
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.206"**
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %67, align 8, !noalias !99
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !75
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.202"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !75
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.206"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.206"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.206"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.206"* %110, %"struct.std::__1::__hash_node_base.206"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.206"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.206"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !75
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.206"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.206"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.206"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.206"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.206"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.206"*, i8 } undef, %"struct.std::__1::__hash_node_base.206"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.206"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.206"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.202"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !75
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.202"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !75
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !75
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.202"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.202"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.202"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.206"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.206"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.208", %"class.std::__1::__bucket_list_deallocator.208"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !102

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.206"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.206"* null, %"struct.std::__1::__hash_node_base.206"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.206"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !75
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.206"* %36, %"struct.std::__1::__hash_node_base.206"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.206"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.206"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.206"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.206"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.206"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.206"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.206"* %82, %"struct.std::__1::__hash_node_base.206"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.206"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.206"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.206"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.206"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.206"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.206"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.206"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.206"* %80, %"struct.std::__1::__hash_node_base.206"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.206"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.206", %"struct.std::__1::__hash_node_base.206"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.206"*, %"struct.std::__1::__hash_node_base.206"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.206"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.202", %"class.std::__1::__hash_table.202"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.206"**, %"struct.std::__1::__hash_node_base.206"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.206"** null, %"struct.std::__1::__hash_node_base.206"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.206"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.206"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.208", %"class.std::__1::__bucket_list_deallocator.208"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #13
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #13
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #14
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #12
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #13
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !6
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #13
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #13
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !6
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !6
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #13
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !6
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #13
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #13
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1174"* dereferenceable(8), %"class.std::__1::tuple.1061"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !75
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #12, !noalias !103
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1174", %"class.std::__1::tuple.1174"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !103
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !103
  store i32 %62, i32* %61, align 8, !noalias !103
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %64, align 8, !noalias !103
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !103
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !103
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !75
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !75
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !75
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !75
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !75
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !75
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !106

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !75
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEjEENS_22__unordered_map_hasherIS5_S6_N8spvtools3opt14InstrumentPass12vector_hash_ENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SD_SB_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, %"class.std::__1::vector.3"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1196"* dereferenceable(8), %"class.std::__1::tuple.1061"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.3"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 2
  %13 = inttoptr i64 %10 to i32*
  %14 = inttoptr i64 %8 to i32*
  %15 = icmp eq i32* %13, %14
  br i1 %15, label %61, label %16

16:                                               ; preds = %5
  %17 = getelementptr i32, i32* %14, i64 -1
  %18 = bitcast i32* %17 to i8*
  %19 = sub i64 0, %10
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = ptrtoint i8* %20 to i64
  %22 = and i64 %21, 4
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %16
  %25 = load i32, i32* %13, align 4
  %26 = add i32 %25, -1640531527
  %27 = zext i32 %26 to i64
  %28 = shl i64 %11, 9
  %29 = lshr i64 %12, 21
  %30 = add i64 %29, %28
  %31 = add i64 %30, %27
  %32 = xor i64 %31, %12
  %33 = getelementptr inbounds i32, i32* %13, i64 1
  br label %34

34:                                               ; preds = %24, %16
  %35 = phi i64 [ undef, %16 ], [ %32, %24 ]
  %36 = phi i64 [ %12, %16 ], [ %32, %24 ]
  %37 = phi i32* [ %13, %16 ], [ %33, %24 ]
  %38 = icmp ult i8* %20, inttoptr (i64 4 to i8*)
  br i1 %38, label %61, label %39

39:                                               ; preds = %34, %39
  %40 = phi i64 [ %58, %39 ], [ %36, %34 ]
  %41 = phi i32* [ %59, %39 ], [ %37, %34 ]
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, -1640531527
  %44 = zext i32 %43 to i64
  %45 = shl i64 %40, 11
  %46 = lshr i64 %40, 21
  %47 = add i64 %46, %45
  %48 = add i64 %47, %44
  %49 = xor i64 %48, %40
  %50 = getelementptr inbounds i32, i32* %41, i64 1
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, -1640531527
  %53 = zext i32 %52 to i64
  %54 = shl i64 %49, 11
  %55 = lshr i64 %49, 21
  %56 = add i64 %55, %54
  %57 = add i64 %56, %53
  %58 = xor i64 %57, %49
  %59 = getelementptr inbounds i32, i32* %41, i64 2
  %60 = icmp eq i32* %59, %14
  br i1 %60, label %61, label %39

61:                                               ; preds = %34, %39, %5
  %62 = phi i64 [ %12, %5 ], [ %35, %34 ], [ %58, %39 ]
  %63 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %132, label %66

66:                                               ; preds = %61
  %67 = tail call i64 @llvm.ctpop.i64(i64 %64) #13, !range !75
  %68 = icmp ugt i64 %67, 1
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = add i64 %64, -1
  %71 = and i64 %70, %62
  br label %76

72:                                               ; preds = %66
  %73 = icmp ult i64 %62, %64
  br i1 %73, label %76, label %74

74:                                               ; preds = %72
  %75 = urem i64 %62, %64
  br label %76

76:                                               ; preds = %69, %72, %74
  %77 = phi i64 [ %71, %69 ], [ %75, %74 ], [ %62, %72 ]
  %78 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %79, i64 %77
  %81 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %80, align 8
  %82 = icmp eq %"struct.std::__1::__hash_node_base.915"* %81, null
  br i1 %82, label %132, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %81, i64 0, i32 0
  %85 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %84, align 8
  %86 = icmp eq %"struct.std::__1::__hash_node_base.915"* %85, null
  br i1 %86, label %132, label %87

87:                                               ; preds = %83
  %88 = add i64 %64, -1
  br label %89

89:                                               ; preds = %87, %128
  %90 = phi %"struct.std::__1::__hash_node_base.915"* [ %85, %87 ], [ %130, %128 ]
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %90, i64 1
  %92 = bitcast %"struct.std::__1::__hash_node_base.915"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, %62
  br i1 %94, label %105, label %95

95:                                               ; preds = %89
  br i1 %68, label %98, label %96

96:                                               ; preds = %95
  %97 = and i64 %93, %88
  br label %102

98:                                               ; preds = %95
  %99 = icmp ult i64 %93, %64
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %93, %64
  br label %102

102:                                              ; preds = %96, %98, %100
  %103 = phi i64 [ %97, %96 ], [ %101, %100 ], [ %93, %98 ]
  %104 = icmp eq i64 %103, %77
  br i1 %104, label %105, label %132

105:                                              ; preds = %89, %102
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %90, i64 2
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %90, i64 3
  %108 = bitcast %"struct.std::__1::__hash_node_base.915"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::__hash_node_base.915"* %106 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 %109, %111
  %113 = icmp eq i64 %112, %11
  %114 = inttoptr i64 %111 to i32*
  %115 = inttoptr i64 %109 to i32*
  br i1 %113, label %116, label %128

116:                                              ; preds = %105
  %117 = icmp eq i32* %114, %115
  br i1 %117, label %258, label %118

118:                                              ; preds = %116, %124
  %119 = phi i32* [ %126, %124 ], [ %13, %116 ]
  %120 = phi i32* [ %125, %124 ], [ %114, %116 ]
  %121 = load i32, i32* %120, align 4
  %122 = load i32, i32* %119, align 4
  %123 = icmp eq i32 %121, %122
  br i1 %123, label %124, label %128

124:                                              ; preds = %118
  %125 = getelementptr inbounds i32, i32* %120, i64 1
  %126 = getelementptr inbounds i32, i32* %119, i64 1
  %127 = icmp eq i32* %125, %115
  br i1 %127, label %258, label %118

128:                                              ; preds = %118, %105
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %90, i64 0, i32 0
  %130 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %129, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.915"* %130, null
  br i1 %131, label %132, label %89

132:                                              ; preds = %102, %128, %83, %76, %61
  %133 = phi i64 [ %77, %76 ], [ -6148914691236517206, %61 ], [ %77, %83 ], [ %77, %128 ], [ %77, %102 ]
  %134 = tail call i8* @_Znwm(i64 48) #12, !noalias !107
  %135 = getelementptr inbounds i8, i8* %134, i64 16
  %136 = getelementptr inbounds %"class.std::__1::tuple.1196", %"class.std::__1::tuple.1196"* %3, i64 0, i32 0, i32 0, i32 0
  %137 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %136, align 8, !noalias !107
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #13, !noalias !107
  %138 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %137, i64 0, i32 0, i32 1
  %139 = bitcast i32** %138 to i64*
  %140 = load i64, i64* %139, align 8, !noalias !107
  %141 = bitcast %"class.std::__1::vector.3"* %137 to i64*
  %142 = load i64, i64* %141, align 8, !noalias !107
  %143 = sub i64 %140, %142
  %144 = ashr exact i64 %143, 2
  %145 = icmp eq i64 %143, 0
  br i1 %145, label %174, label %146

146:                                              ; preds = %132
  %147 = icmp ugt i64 %144, 4611686018427387903
  br i1 %147, label %148, label %150

148:                                              ; preds = %146
  %149 = bitcast i8* %135 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %149) #14, !noalias !107
  unreachable

150:                                              ; preds = %146
  %151 = tail call i8* @_Znwm(i64 %143) #12, !noalias !107
  %152 = bitcast i8* %151 to i32*
  %153 = getelementptr inbounds i8, i8* %134, i64 24
  %154 = bitcast i8* %153 to i8**
  store i8* %151, i8** %154, align 8, !noalias !107
  %155 = bitcast i8* %135 to i8**
  store i8* %151, i8** %155, align 8, !noalias !107
  %156 = getelementptr inbounds i32, i32* %152, i64 %144
  %157 = getelementptr inbounds i8, i8* %134, i64 32
  %158 = bitcast i8* %157 to i32**
  store i32* %156, i32** %158, align 8, !noalias !107
  %159 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %137, i64 0, i32 0, i32 0
  %160 = load i32*, i32** %159, align 8, !noalias !107
  %161 = load i64, i64* %139, align 8, !noalias !107
  %162 = bitcast i8* %153 to i64*
  %163 = ptrtoint i8* %151 to i64
  %164 = ptrtoint i32* %160 to i64
  %165 = sub i64 %161, %164
  %166 = icmp sgt i64 %165, 0
  br i1 %166, label %167, label %172

167:                                              ; preds = %150
  %168 = lshr exact i64 %165, 2
  %169 = bitcast i32* %160 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %151, i8* align 4 %169, i64 %165, i1 false) #13, !noalias !107
  %170 = getelementptr inbounds i32, i32* %152, i64 %168
  %171 = ptrtoint i32* %170 to i64
  br label %172

172:                                              ; preds = %167, %150
  %173 = phi i64 [ %171, %167 ], [ %163, %150 ]
  store i64 %173, i64* %162, align 8, !noalias !107
  br label %174

174:                                              ; preds = %132, %172
  %175 = getelementptr inbounds i8, i8* %134, i64 40
  %176 = bitcast i8* %175 to i32*
  store i32 0, i32* %176, align 8, !noalias !107
  %177 = getelementptr inbounds i8, i8* %134, i64 8
  %178 = bitcast i8* %177 to i64*
  store i64 %62, i64* %178, align 8, !noalias !107
  %179 = bitcast i8* %134 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %179, align 8, !noalias !107
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %181 = load i64, i64* %180, align 8
  %182 = add i64 %181, 1
  %183 = uitofp i64 %182 to float
  %184 = uitofp i64 %64 to float
  %185 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %186 = load float, float* %185, align 4
  %187 = fmul float %186, %184
  %188 = fcmp olt float %187, %183
  %189 = or i1 %65, %188
  br i1 %189, label %190, label %213

190:                                              ; preds = %174
  %191 = shl i64 %64, 1
  %192 = icmp ult i64 %64, 3
  %193 = tail call i64 @llvm.ctpop.i64(i64 %64) #13, !range !75
  %194 = icmp ugt i64 %193, 1
  %195 = or i1 %192, %194
  %196 = zext i1 %195 to i64
  %197 = or i64 %191, %196
  %198 = fdiv float %183, %186
  %199 = tail call float @llvm.ceil.f32(float %198) #13
  %200 = fptoui float %199 to i64
  %201 = icmp ult i64 %197, %200
  %202 = select i1 %201, i64 %200, i64 %197
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEjEENS_22__unordered_map_hasherIS5_S6_N8spvtools3opt14InstrumentPass12vector_hash_ENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SD_SB_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %202)
  %203 = load i64, i64* %63, align 8
  %204 = tail call i64 @llvm.ctpop.i64(i64 %203) #13, !range !75
  %205 = icmp ugt i64 %204, 1
  br i1 %205, label %209, label %206

206:                                              ; preds = %190
  %207 = add i64 %203, -1
  %208 = and i64 %207, %62
  br label %213

209:                                              ; preds = %190
  %210 = icmp ult i64 %62, %203
  br i1 %210, label %213, label %211

211:                                              ; preds = %209
  %212 = urem i64 %62, %203
  br label %213

213:                                              ; preds = %211, %209, %206, %174
  %214 = phi i64 [ %64, %174 ], [ %203, %206 ], [ %203, %209 ], [ %203, %211 ]
  %215 = phi i64 [ %133, %174 ], [ %208, %206 ], [ %62, %209 ], [ %212, %211 ]
  %216 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %216, align 8
  %218 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %217, i64 %215
  %219 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %218, align 8
  %220 = icmp eq %"struct.std::__1::__hash_node_base.915"* %219, null
  br i1 %220, label %221, label %247

221:                                              ; preds = %213
  %222 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %223 = bitcast %"struct.std::__1::__hash_node_base.915"* %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = bitcast i8* %134 to i64*
  store i64 %224, i64* %225, align 8
  %226 = bitcast %"struct.std::__1::__hash_node_base.915"* %222 to i8**
  store i8* %134, i8** %226, align 8
  store %"struct.std::__1::__hash_node_base.915"* %222, %"struct.std::__1::__hash_node_base.915"** %218, align 8
  %227 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %179, align 8
  %228 = icmp eq %"struct.std::__1::__hash_node_base.915"* %227, null
  br i1 %228, label %254, label %229

229:                                              ; preds = %221
  %230 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %227, i64 1
  %231 = bitcast %"struct.std::__1::__hash_node_base.915"* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = tail call i64 @llvm.ctpop.i64(i64 %214) #13, !range !75
  %234 = icmp ugt i64 %233, 1
  br i1 %234, label %238, label %235

235:                                              ; preds = %229
  %236 = add i64 %214, -1
  %237 = and i64 %232, %236
  br label %242

238:                                              ; preds = %229
  %239 = icmp ult i64 %232, %214
  br i1 %239, label %242, label %240

240:                                              ; preds = %238
  %241 = urem i64 %232, %214
  br label %242

242:                                              ; preds = %235, %238, %240
  %243 = phi i64 [ %237, %235 ], [ %241, %240 ], [ %232, %238 ]
  %244 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %216, align 8
  %245 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %244, i64 %243
  %246 = bitcast %"struct.std::__1::__hash_node_base.915"** %245 to i8**
  br label %252

247:                                              ; preds = %213
  %248 = bitcast %"struct.std::__1::__hash_node_base.915"* %219 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = bitcast i8* %134 to i64*
  store i64 %249, i64* %250, align 8
  %251 = bitcast %"struct.std::__1::__hash_node_base.915"* %219 to i8**
  br label %252

252:                                              ; preds = %242, %247
  %253 = phi i8** [ %251, %247 ], [ %246, %242 ]
  store i8* %134, i8** %253, align 8
  br label %254

254:                                              ; preds = %252, %221
  %255 = bitcast i8* %134 to %"struct.std::__1::__hash_node_base.915"*
  %256 = load i64, i64* %180, align 8
  %257 = add i64 %256, 1
  store i64 %257, i64* %180, align 8
  br label %258

258:                                              ; preds = %116, %124, %254
  %259 = phi i8 [ 1, %254 ], [ 0, %124 ], [ 0, %116 ]
  %260 = phi %"struct.std::__1::__hash_node_base.915"* [ %255, %254 ], [ %90, %124 ], [ %90, %116 ]
  %261 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %260, 0
  %262 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %261, i8 %259, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %262
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEjEENS_22__unordered_map_hasherIS5_S6_N8spvtools3opt14InstrumentPass12vector_hash_ENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SD_SB_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !75
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEjEENS_22__unordered_map_hasherIS5_S6_N8spvtools3opt14InstrumentPass12vector_hash_ENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SD_SB_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !75
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !75
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEjEENS_22__unordered_map_hasherIS5_S6_N8spvtools3opt14InstrumentPass12vector_hash_ENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SD_SB_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEjEENS_22__unordered_map_hasherIS5_S6_N8spvtools3opt14InstrumentPass12vector_hash_ENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SD_SB_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %164, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.911"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.915"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !110

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.915"* %38, null
  br i1 %39, label %172, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !75
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.915"* %36, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.915"* %75, null
  br i1 %76, label %172, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %158
  %80 = phi %"struct.std::__1::__hash_node_base.915"* [ %75, %77 ], [ %162, %158 ]
  %81 = phi i64 [ %71, %77 ], [ %160, %158 ]
  %82 = phi %"struct.std::__1::__hash_node_base.915"* [ %38, %77 ], [ %159, %158 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.915"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %158, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %115, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.915"* %102, null
  br i1 %103, label %144, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 2
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 3
  %107 = bitcast %"struct.std::__1::__hash_node_base.915"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %108, %110
  %112 = inttoptr i64 %110 to i32*
  %113 = inttoptr i64 %108 to i32*
  %114 = icmp eq i32* %112, %113
  br label %116

115:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.915"* %82, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  br label %158

116:                                              ; preds = %104, %140
  %117 = phi %"struct.std::__1::__hash_node_base.915"* [ %102, %104 ], [ %142, %140 ]
  %118 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %104 ], [ %117, %140 ]
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %117, i64 2
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %117, i64 3
  %121 = bitcast %"struct.std::__1::__hash_node_base.915"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"struct.std::__1::__hash_node_base.915"* %119 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = sub i64 %122, %124
  %126 = icmp eq i64 %111, %125
  br i1 %126, label %127, label %144

127:                                              ; preds = %116
  br i1 %114, label %140, label %128

128:                                              ; preds = %127
  %129 = inttoptr i64 %124 to i32*
  br label %130

130:                                              ; preds = %136, %128
  %131 = phi i32* [ %138, %136 ], [ %129, %128 ]
  %132 = phi i32* [ %137, %136 ], [ %112, %128 ]
  %133 = load i32, i32* %132, align 4
  %134 = load i32, i32* %131, align 4
  %135 = icmp eq i32 %133, %134
  br i1 %135, label %136, label %144

136:                                              ; preds = %130
  %137 = getelementptr inbounds i32, i32* %132, i64 1
  %138 = getelementptr inbounds i32, i32* %131, i64 1
  %139 = icmp eq i32* %137, %113
  br i1 %139, label %140, label %130

140:                                              ; preds = %136, %127
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %117, i64 0, i32 0
  %142 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %141, align 8
  %143 = icmp eq %"struct.std::__1::__hash_node_base.915"* %142, null
  br i1 %143, label %144, label %116

144:                                              ; preds = %140, %116, %130, %100
  %145 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %100 ], [ %118, %130 ], [ %117, %140 ], [ %118, %116 ]
  %146 = bitcast %"struct.std::__1::__hash_node_base.915"* %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"struct.std::__1::__hash_node_base.915"* %82 to i64*
  store i64 %147, i64* %148, align 8
  %149 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %149, i64 %93
  %151 = bitcast %"struct.std::__1::__hash_node_base.915"** %150 to i64**
  %152 = load i64*, i64** %151, align 8
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %146, align 8
  %154 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %154, i64 %93
  %156 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %155, align 8
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %156, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.915"* %80, %"struct.std::__1::__hash_node_base.915"** %157, align 8
  br label %158

158:                                              ; preds = %92, %144, %115
  %159 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %115 ], [ %82, %144 ], [ %80, %92 ]
  %160 = phi i64 [ %93, %115 ], [ %81, %144 ], [ %81, %92 ]
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %159, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %161, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node_base.915"* %162, null
  br i1 %163, label %172, label %79

164:                                              ; preds = %2
  %165 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %166 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %165, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %165, align 8
  %167 = icmp eq %"struct.std::__1::__hash_node_base.915"** %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %164
  %169 = bitcast %"struct.std::__1::__hash_node_base.915"** %166 to i8*
  tail call void @_ZdlPv(i8* %169) #12
  br label %170

170:                                              ; preds = %164, %168
  %171 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %171, align 8
  br label %172

172:                                              ; preds = %158, %70, %35, %170
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNS_10unique_ptrINS8_11InstructionENS_14default_deleteISB_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSG_IjPSB_SI_SK_NSL_INSM_ISN_SS_EEEEEEPNS8_10BasicBlockEE3$_0S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca %"class.std::__1::tuple.1146", align 8
  %5 = alloca %"class.std::__1::tuple.1061", align 1
  %6 = alloca %"class.std::__1::unique_ptr.21", align 8
  %7 = alloca i32, align 4
  %8 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1214"**
  %9 = load %"class.std::__1::__function::__default_alloc_func.1214"*, %"class.std::__1::__function::__default_alloc_func.1214"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1214", %"class.std::__1::__function::__default_alloc_func.1214"* %9, i64 0, i32 0, i32 4
  %11 = load %"class.spvtools::opt::InstrumentPass"*, %"class.spvtools::opt::InstrumentPass"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1214", %"class.std::__1::__function::__default_alloc_func.1214"* %9, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::unordered_map.249"**, %"class.std::__1::unordered_map.249"*** %12, align 8
  %14 = load %"class.std::__1::unordered_map.249"*, %"class.std::__1::unordered_map.249"** %13, align 8
  %15 = load i32, i32* %1, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %68, label %20

20:                                               ; preds = %2
  %21 = tail call i64 @llvm.ctpop.i64(i64 %18) #13, !range !75
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = add i64 %18, 4294967295
  %25 = and i64 %24, %16
  br label %30

26:                                               ; preds = %20
  %27 = icmp ugt i64 %18, %16
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = urem i64 %16, %18
  br label %30

30:                                               ; preds = %28, %26, %23
  %31 = phi i64 [ %25, %23 ], [ %29, %28 ], [ %16, %26 ]
  %32 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %33, i64 %31
  %35 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.254"* %35, null
  br i1 %36, label %68, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %35, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.254"* %39, null
  br i1 %40, label %68, label %41

41:                                               ; preds = %37
  %42 = add i64 %18, -1
  br label %43

43:                                               ; preds = %64, %41
  %44 = phi %"struct.std::__1::__hash_node_base.254"* [ %39, %41 ], [ %66, %64 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %44, i64 1
  %46 = bitcast %"struct.std::__1::__hash_node_base.254"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %16
  br i1 %48, label %59, label %49

49:                                               ; preds = %43
  br i1 %22, label %52, label %50

50:                                               ; preds = %49
  %51 = and i64 %47, %42
  br label %56

52:                                               ; preds = %49
  %53 = icmp ult i64 %47, %18
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = urem i64 %47, %18
  br label %56

56:                                               ; preds = %54, %52, %50
  %57 = phi i64 [ %51, %50 ], [ %55, %54 ], [ %47, %52 ]
  %58 = icmp eq i64 %57, %31
  br i1 %58, label %64, label %68

59:                                               ; preds = %43
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %44, i64 2
  %61 = bitcast %"struct.std::__1::__hash_node_base.254"* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %15
  br i1 %63, label %303, label %64

64:                                               ; preds = %59, %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %44, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.254"* %66, null
  br i1 %67, label %68, label %43

68:                                               ; preds = %64, %56, %37, %30, %2
  %69 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1214", %"class.std::__1::__function::__default_alloc_func.1214"* %9, i64 0, i32 0, i32 1
  %70 = load %"class.std::__1::unordered_map"**, %"class.std::__1::unordered_map"*** %69, align 8
  %71 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %71, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %311, label %75

75:                                               ; preds = %68
  %76 = tail call i64 @llvm.ctpop.i64(i64 %73) #13, !range !75
  %77 = icmp ugt i64 %76, 1
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = add i64 %73, 4294967295
  %80 = and i64 %79, %16
  br label %85

81:                                               ; preds = %75
  %82 = icmp ugt i64 %73, %16
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = urem i64 %16, %73
  br label %85

85:                                               ; preds = %83, %81, %78
  %86 = phi i64 [ %80, %78 ], [ %84, %83 ], [ %16, %81 ]
  %87 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %87, align 8
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %88, i64 %86
  %90 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %89, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base"* %90, null
  br i1 %91, label %311, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %90, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base"* %94, null
  br i1 %95, label %311, label %96

96:                                               ; preds = %92
  %97 = add i64 %73, -1
  br label %98

98:                                               ; preds = %119, %96
  %99 = phi %"struct.std::__1::__hash_node_base"* [ %94, %96 ], [ %121, %119 ]
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %99, i64 1
  %101 = bitcast %"struct.std::__1::__hash_node_base"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = icmp eq i64 %102, %16
  br i1 %103, label %114, label %104

104:                                              ; preds = %98
  br i1 %77, label %107, label %105

105:                                              ; preds = %104
  %106 = and i64 %102, %97
  br label %111

107:                                              ; preds = %104
  %108 = icmp ult i64 %102, %73
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = urem i64 %102, %73
  br label %111

111:                                              ; preds = %109, %107, %105
  %112 = phi i64 [ %106, %105 ], [ %110, %109 ], [ %102, %107 ]
  %113 = icmp eq i64 %112, %86
  br i1 %113, label %119, label %311

114:                                              ; preds = %98
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %99, i64 2
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, %15
  br i1 %118, label %123, label %119

119:                                              ; preds = %114, %111
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %99, i64 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %311, label %98

123:                                              ; preds = %114
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %99, i64 3
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %124 to %"class.spvtools::opt::Instruction"**
  %126 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %125, align 8
  %127 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #13
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %6, i64 0, i32 0, i32 0, i32 0
  %129 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %11, i64 0, i32 0, i32 2
  %130 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %129, align 8
  %131 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %126, %"class.spvtools::opt::IRContext"* %130) #13
  %132 = ptrtoint %"class.spvtools::opt::Instruction"* %131 to i64
  %133 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i64*
  store i64 %132, i64* %133, align 8
  %134 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134) #13
  store i32 -1431655766, i32* %7, align 4
  %135 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %131, i64 0, i32 4
  %136 = load i8, i8* %135, align 1, !range !6
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %143, label %138

138:                                              ; preds = %123
  %139 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %131, i64 0, i32 3
  %140 = load i8, i8* %139, align 4, !range !6
  %141 = zext i8 %140 to i32
  %142 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %131, i32 %141) #13
  br label %143

143:                                              ; preds = %138, %123
  %144 = phi i32 [ %142, %138 ], [ 0, %123 ]
  store i32 %144, i32* %7, align 4
  %145 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %129, align 8
  %146 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %145, i64 0, i32 4, i32 0, i32 0, i32 0
  %147 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %146, align 8
  %148 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %147) #13
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %162

150:                                              ; preds = %143
  %151 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %145, i64 0, i32 5, i32 0, i32 2
  %152 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %151, align 8
  %153 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %152, i64 0, i32 2
  %154 = load i8, i8* %153, align 8, !range !6
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %156, label %162

156:                                              ; preds = %150
  %157 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %157, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i64 37, i1 false) #13
  %158 = getelementptr inbounds i8, i8* %157, i64 37
  store i8 0, i8* %158, align 1
  %159 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %145, i64 0, i32 5, i32 0, i32 1, i32 0
  %160 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %159, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %145, i64 0, i32 5, i32 0, i32 0
  tail call void %160(%"union.std::__1::__function::__policy_storage"* %161, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.10, i8* nonnull %157) #13
  tail call void @_ZdlPv(i8* nonnull %157) #12
  br label %162

162:                                              ; preds = %156, %150, %143
  %163 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %129, align 8
  %164 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %163, i64 0, i32 11
  %165 = load i32, i32* %164, align 8
  %166 = and i32 %165, 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %189

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %163, i64 0, i32 4, i32 0, i32 0, i32 0
  %170 = bitcast %"class.spvtools::opt::Module"** %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = tail call i8* @_Znwm(i64 48) #12
  %173 = bitcast i8* %172 to %"class.spvtools::opt::analysis::DecorationManager"*
  %174 = getelementptr inbounds i8, i8* %172, i64 32
  %175 = bitcast i8* %174 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %175, align 4
  %176 = getelementptr inbounds i8, i8* %172, i64 40
  %177 = bitcast i8* %176 to i64*
  store i64 %171, i64* %177, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %173) #13
  %178 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %163, i64 0, i32 7
  %179 = ptrtoint i8* %172 to i64
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %178, i64 0, i32 0, i32 0, i32 0
  %181 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %180, align 8
  %182 = bitcast %"class.std::__1::unique_ptr.122"* %178 to i64*
  store i64 %179, i64* %182, align 8
  %183 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %181, null
  br i1 %183, label %186, label %184

184:                                              ; preds = %168
  %185 = bitcast %"class.std::__1::unique_ptr.122"* %178 to %"struct.std::__1::default_delete.150"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %185, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %181) #13
  br label %186

186:                                              ; preds = %184, %168
  %187 = load i32, i32* %164, align 8
  %188 = or i32 %187, 4
  store i32 %188, i32* %164, align 8
  br label %189

189:                                              ; preds = %186, %162
  %190 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %163, i64 0, i32 7, i32 0, i32 0, i32 0
  %191 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %190, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"* %191, i32 %144, i32 %148) #13
  %192 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %131, i64 0, i32 3
  %193 = load i8, i8* %192, align 4, !range !6
  %194 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %194) #13
  %195 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %195, align 8
  %196 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %197 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %198 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %199 = bitcast i32** %197 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %198, %"struct.std::__1::aligned_storage<4, 4>::type"** %199, align 8
  %200 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %201 = bitcast %"class.std::__1::unique_ptr.0"* %200 to i64*
  store i64 0, i64* %201, align 8
  %202 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %198 to i32*
  store i64 1, i64* %196, align 8
  store i32 %148, i32* %202, align 8
  %203 = zext i8 %193 to i64
  %204 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %131, i64 0, i32 6, i32 0, i32 0
  %205 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %204, align 8
  %206 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %205, i64 %203, i32 1
  %207 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %206, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %195, align 8
  %208 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %209 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %208, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %208, align 8
  %210 = icmp eq %"class.std::__1::vector.3"* %209, null
  br i1 %210, label %222, label %211

211:                                              ; preds = %189
  %212 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %209, i64 0, i32 0, i32 0
  %213 = load i32*, i32** %212, align 8
  %214 = icmp eq i32* %213, null
  br i1 %214, label %220, label %215

215:                                              ; preds = %211
  %216 = ptrtoint i32* %213 to i64
  %217 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %209, i64 0, i32 0, i32 1
  %218 = bitcast i32** %217 to i64*
  store i64 %216, i64* %218, align 8
  %219 = bitcast i32* %213 to i8*
  call void @_ZdlPv(i8* %219) #12
  br label %220

220:                                              ; preds = %215, %211
  %221 = bitcast %"class.std::__1::vector.3"* %209 to i8*
  call void @_ZdlPv(i8* %221) #12
  br label %222

222:                                              ; preds = %220, %189
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %194) #13
  %223 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %129, align 8
  %224 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %223, i64 0, i32 11
  %225 = load i32, i32* %224, align 8
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %252

228:                                              ; preds = %222
  %229 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %223, i64 0, i32 4, i32 0, i32 0, i32 0
  %230 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %229, align 8
  %231 = call i8* @_Znwm(i64 104) #12
  %232 = bitcast i8* %231 to %"class.spvtools::opt::analysis::DefUseManager"*
  %233 = getelementptr inbounds i8, i8* %231, i64 32
  %234 = bitcast i8* %233 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %231, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %234, align 4
  %235 = getelementptr inbounds i8, i8* %231, i64 48
  %236 = getelementptr inbounds i8, i8* %231, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %235, i8 0, i64 16, i1 false) #13
  %237 = bitcast i8* %236 to i8**
  store i8* %235, i8** %237, align 8
  %238 = getelementptr inbounds i8, i8* %231, i64 64
  %239 = getelementptr inbounds i8, i8* %231, i64 96
  %240 = bitcast i8* %239 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %238, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %240, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %232, %"class.spvtools::opt::Module"* %230) #13
  %241 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %223, i64 0, i32 6
  %242 = ptrtoint i8* %231 to i64
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %241, i64 0, i32 0, i32 0, i32 0
  %244 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %243, align 8
  %245 = bitcast %"class.std::__1::unique_ptr.62"* %241 to i64*
  store i64 %242, i64* %245, align 8
  %246 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %244, null
  br i1 %246, label %249, label %247

247:                                              ; preds = %228
  %248 = bitcast %"class.std::__1::unique_ptr.62"* %241 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %248, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %244) #13
  br label %249

249:                                              ; preds = %247, %228
  %250 = load i32, i32* %224, align 8
  %251 = or i32 %250, 1
  store i32 %251, i32* %224, align 8
  br label %252

252:                                              ; preds = %249, %222
  %253 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %223, i64 0, i32 6, i32 0, i32 0, i32 0
  %254 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %253, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %254, %"class.spvtools::opt::Instruction"* %131) #13
  %255 = load %"class.std::__1::unordered_map.249"**, %"class.std::__1::unordered_map.249"*** %12, align 8
  %256 = load %"class.std::__1::unordered_map.249"*, %"class.std::__1::unordered_map.249"** %255, align 8
  %257 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %256, i64 0, i32 0
  %258 = bitcast %"class.std::__1::tuple.1146"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %258) #13
  %259 = getelementptr inbounds %"class.std::__1::tuple.1146", %"class.std::__1::tuple.1146"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %259, align 8
  %260 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %260) #13
  %261 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %257, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1146"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %5) #13
  %262 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %261, 0
  %263 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %262, i64 2
  %264 = bitcast %"struct.std::__1::__hash_node_base.254"* %263 to %"struct.std::__1::pair"*
  %265 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %264, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %260) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %258) #13
  store i32 %148, i32* %265, align 4
  store i32 %148, i32* %1, align 4
  %266 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1214", %"class.std::__1::__function::__default_alloc_func.1214"* %9, i64 0, i32 0, i32 3
  %267 = load i8*, i8** %266, align 8
  store i8 1, i8* %267, align 1
  %268 = load %"class.std::__1::unordered_map.249"**, %"class.std::__1::unordered_map.249"*** %12, align 8
  %269 = load %"class.std::__1::unordered_map.249"*, %"class.std::__1::unordered_map.249"** %268, align 8
  %270 = load %"class.std::__1::unordered_map"**, %"class.std::__1::unordered_map"*** %69, align 8
  %271 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** %270, align 8
  %272 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1214", %"class.std::__1::__function::__default_alloc_func.1214"* %9, i64 0, i32 0, i32 2
  %273 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %272, align 8
  %274 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %273, align 8
  call void @_ZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEEPNS2_13unordered_mapIjjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorINS2_4pairIKjjEEEEEEPNS9_IjPS4_SB_SD_NSE_INSF_ISG_SL_EEEEEEPNS0_10BasicBlockE(%"class.spvtools::opt::InstrumentPass"* %11, %"class.std::__1::unique_ptr.21"* nonnull %6, %"class.std::__1::unordered_map.249"* %269, %"class.std::__1::unordered_map"* %271, %"class.spvtools::opt::BasicBlock"* %274) #13
  %275 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %272, align 8
  %276 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %275, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %128, align 8
  %277 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %276, i64 0, i32 2, i32 0, i32 1
  %278 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %131, i64 0, i32 0, i32 1
  %279 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %278, align 8
  %280 = icmp eq %"class.spvtools::opt::Instruction"* %279, null
  br i1 %280, label %294, label %281

281:                                              ; preds = %252
  %282 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %131, i64 0, i32 0, i32 2
  %283 = bitcast %"class.spvtools::opt::Instruction"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %279, i64 0, i32 0, i32 2
  %286 = bitcast %"class.spvtools::opt::Instruction"** %285 to i64*
  store i64 %284, i64* %286, align 8
  %287 = bitcast %"class.spvtools::opt::Instruction"** %278 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = bitcast %"class.spvtools::opt::Instruction"** %282 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %290 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %289, align 8
  %291 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %290, i64 0, i32 1
  %292 = bitcast %"class.spvtools::opt::Instruction"** %291 to i64*
  store i64 %288, i64* %292, align 8
  %293 = bitcast %"class.spvtools::opt::Instruction"** %278 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %293, i8 0, i64 16, i1 false) #13
  br label %294

294:                                              ; preds = %252, %281
  store %"class.spvtools::opt::Instruction"* %277, %"class.spvtools::opt::Instruction"** %278, align 8
  %295 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %276, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %296 = bitcast %"class.spvtools::opt::Instruction"** %295 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %131, i64 0, i32 0, i32 2
  %299 = bitcast %"class.spvtools::opt::Instruction"** %298 to i64*
  store i64 %297, i64* %299, align 8
  store %"class.spvtools::opt::Instruction"* %131, %"class.spvtools::opt::Instruction"** %295, align 8
  %300 = bitcast %"class.spvtools::opt::Instruction"** %298 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %301 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %300, align 8
  %302 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %301, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %131, %"class.spvtools::opt::Instruction"** %302, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #13
  br label %311

303:                                              ; preds = %59
  %304 = bitcast %"struct.std::__1::__hash_node_base.254"* %60 to %"struct.std::__1::pair"*
  %305 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %304, i64 0, i32 1
  %306 = load i32, i32* %305, align 4
  %307 = icmp eq i32 %15, %306
  br i1 %307, label %311, label %308

308:                                              ; preds = %303
  store i32 %306, i32* %1, align 4
  %309 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1214", %"class.std::__1::__function::__default_alloc_func.1214"* %9, i64 0, i32 0, i32 3
  %310 = load i8*, i8** %309, align 8
  store i8 1, i8* %310, align 1
  br label %311

311:                                              ; preds = %111, %119, %68, %85, %92, %294, %303, %308
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS5_10BasicBlockEE3$_0FvPjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #12, !noalias !111
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 40, i1 false) #13
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS5_10BasicBlockEE3$_0FvPjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS7_10BasicBlockENS_14default_deleteISB_EEEENS_9allocatorISE_EEEEE3$_1S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #0 align 2 {
  %3 = alloca %"class.std::__1::function.1049", align 8
  %4 = alloca %"class.std::__1::tuple.1146", align 8
  %5 = alloca %"class.std::__1::tuple.1061", align 1
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::function.1010", align 8
  %8 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1217"**
  %9 = load %"class.std::__1::__function::__default_alloc_func.1217"*, %"class.std::__1::__function::__default_alloc_func.1217"** %8, align 8
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #13
  store i32 %1, i32* %6, align 4
  %11 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1217", %"class.std::__1::__function::__default_alloc_func.1217"* %9, i64 0, i32 0, i32 2
  %12 = load %"class.spvtools::opt::InstrumentPass"*, %"class.spvtools::opt::InstrumentPass"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::InstrumentPass", %"class.spvtools::opt::InstrumentPass"* %12, i64 0, i32 6, i32 0
  %14 = bitcast %"class.std::__1::tuple.1146"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.std::__1::tuple.1146", %"class.std::__1::tuple.1146"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %6, i32** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple.1061", %"class.std::__1::tuple.1061"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #13
  %17 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %13, i32* nonnull dereferenceable(4) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1146"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1061"* nonnull dereferenceable(1) %5) #13
  %18 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %17, 0
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %18, i64 3
  %20 = bitcast %"struct.std::__1::__hash_node_base.333"* %19 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %21 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %20, align 8
  %22 = bitcast %"class.std::__1::function.1010"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #13
  %23 = bitcast %"class.std::__1::__function::__default_alloc_func.1217"* %9 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %7, i64 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZZNS3_14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS3_10BasicBlockENS_14default_deleteISD_EEEENS_9allocatorISG_EEEEENK3$_1clEjEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %25, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjEUlPNS5_11InstructionEE_FvSJ_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %26, align 8
  %27 = call i8* @_Znwm(i64 24) #12, !noalias !116
  %28 = bitcast i8* %27 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %28, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 16
  %30 = bitcast i8* %29 to %"class.spvtools::opt::InstrumentPass"**
  store %"class.spvtools::opt::InstrumentPass"* %12, %"class.spvtools::opt::InstrumentPass"** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %31, align 8
  %32 = bitcast %"class.std::__1::function.1049"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #13
  %33 = ptrtoint %"class.std::__1::function.1010"* %7 to i64
  %34 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %34, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %35, align 8
  %36 = bitcast %"class.std::__1::function.1049"* %3 to i64*
  store i64 %33, i64* %36, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %21, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %38 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %37, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !6
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %64, label %44

44:                                               ; preds = %2
  %45 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %55, %44
  %47 = phi %"class.spvtools::opt::Instruction"* [ %59, %55 ], [ %38, %44 ]
  %48 = icmp eq %"class.spvtools::opt::Instruction"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 0, i32 1
  %51 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 245
  br i1 %54, label %55, label %62

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %51, i64 0, i32 0, i32 3
  %57 = load i8, i8* %56, align 8, !range !6
  %58 = icmp eq i8 %57, 0
  %59 = select i1 %58, %"class.spvtools::opt::Instruction"* %51, %"class.spvtools::opt::Instruction"* null
  %60 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %34, align 8
  %61 = call zeroext i1 %60(%"union.std::__1::__function::__policy_storage"* nonnull %45, %"class.spvtools::opt::Instruction"* nonnull %47) #13
  br i1 %61, label %46, label %62

62:                                               ; preds = %55, %49, %46
  %63 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %35, align 8
  br label %64

64:                                               ; preds = %62, %2
  %65 = phi %"struct.std::__1::__function::__policy"* [ %63, %62 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %2 ]
  %66 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %65, i64 0, i32 1
  %67 = load void (i8*)*, void (i8*)** %66, align 8
  %68 = icmp eq void (i8*)* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void %67(i8* %71) #13
  br label %72

72:                                               ; preds = %69, %64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #13
  %73 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %26, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %73, i64 0, i32 1
  %75 = load void (i8*)*, void (i8*)** %74, align 8
  %76 = icmp eq void (i8*)* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %72
  %78 = load i8*, i8** %31, align 8
  call void %75(i8* %78) #13
  br label %79

79:                                               ; preds = %72, %77
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1146"* dereferenceable(8), %"class.std::__1::tuple.1061"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !75
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.333"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.333"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.333"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.333"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.333"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #12, !noalias !121
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1146", %"class.std::__1::tuple.1146"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !121
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !121
  store i32 %62, i32* %61, align 8, !noalias !121
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %64, align 8, !noalias !121
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !121
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"**
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %67, align 8, !noalias !121
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !75
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !75
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.333"* %110, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.333"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.333"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !75
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.333"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.333"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } undef, %"struct.std::__1::__hash_node_base.333"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.333"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !75
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !75
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !75
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.329"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !124

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.333"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.333"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !75
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.333"* %36, %"struct.std::__1::__hash_node_base.333"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.333"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.333"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.333"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.333"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.333"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.333"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.333"* %82, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.333"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.333"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.333"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.333"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.333"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.333"* %80, %"struct.std::__1::__hash_node_base.333"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.333"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.333"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.333"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1010"**
  %4 = load %"class.std::__1::function.1010"*, %"class.std::__1::function.1010"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #13
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZZNS3_14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS3_10BasicBlockENS_14default_deleteISD_EEEENS_9allocatorISG_EEEEENK3$_1clEjEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::function.1071", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::function.938", align 8
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1234"**
  %7 = load %"class.std::__1::__function::__default_alloc_func.1234"*, %"class.std::__1::__function::__default_alloc_func.1234"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1234", %"class.std::__1::__function::__default_alloc_func.1234"* %7, i64 0, i32 0, i32 2
  %9 = bitcast %"class.spvtools::opt::InstrumentPass"** %8 to %"class.spvtools::opt::Pass"**
  %10 = load %"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Pass"** %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 0, i8* %4, align 1
  %11 = bitcast %"class.std::__1::function.938"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #13
  %12 = bitcast %"class.std::__1::__function::__default_alloc_func.1234"* %7 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %5, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS8_10BasicBlockENS_14default_deleteISC_EEEENS_9allocatorISF_EEEEENK3$_1clEjENKUlPNS8_11InstructionEE_clESM_EUlS2_E_S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %14, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjENKUlPNS5_11InstructionEE_clESJ_EUlPjE_FvSL_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %15, align 8
  %16 = tail call i8* @_Znwm(i64 24) #12, !noalias !125
  %17 = bitcast i8* %16 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 16
  %19 = bitcast i8* %18 to i8**
  store i8* %4, i8** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %20, align 8
  %21 = bitcast %"class.std::__1::function.1071"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #13
  %22 = ptrtoint %"class.std::__1::function.938"* %5 to i64
  %23 = getelementptr inbounds %"class.std::__1::function.1071", %"class.std::__1::function.1071"* %3, i64 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::function.1071", %"class.std::__1::function.1071"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %23, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %24, align 8
  %25 = bitcast %"class.std::__1::function.1071"* %3 to i64*
  store i64 %22, i64* %25, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %29 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %28, align 8
  %30 = icmp eq %"struct.spvtools::opt::Operand"* %27, %29
  br i1 %30, label %53, label %31

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::function.1071", %"class.std::__1::function.1071"* %3, i64 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %48, %31
  %34 = phi %"struct.spvtools::opt::Operand"* [ %27, %31 ], [ %49, %48 ]
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %36) #13
  br i1 %37, label %38, label %48

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %39, align 8
  %41 = icmp eq %"class.std::__1::vector.3"* %40, null
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %40, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 2
  %44 = select i1 %41, i32** %43, i32** %42
  %45 = load i32*, i32** %44, align 8
  %46 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %23, align 8
  %47 = call zeroext i1 %46(%"union.std::__1::__function::__policy_storage"* nonnull %32, i32* %45) #13
  br i1 %47, label %48, label %51

48:                                               ; preds = %38, %33
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %50 = icmp eq %"struct.spvtools::opt::Operand"* %49, %29
  br i1 %50, label %51, label %33

51:                                               ; preds = %48, %38
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %24, align 8
  br label %53

53:                                               ; preds = %51, %2
  %54 = phi %"struct.std::__1::__function::__policy"* [ %52, %51 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %2 ]
  %55 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %54, i64 0, i32 1
  %56 = load void (i8*)*, void (i8*)** %55, align 8
  %57 = icmp eq void (i8*)* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.std::__1::function.1071", %"class.std::__1::function.1071"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void %56(i8* %60) #13
  br label %61

61:                                               ; preds = %58, %53
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #13
  %62 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %62, i64 0, i32 1
  %64 = load void (i8*)*, void (i8*)** %63, align 8
  %65 = icmp eq void (i8*)* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %61
  %67 = load i8*, i8** %20, align 8
  call void %64(i8* %67) #13
  br label %68

68:                                               ; preds = %66, %61
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #13
  %69 = load i8, i8* %4, align 1, !range !6
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %105, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %10, i64 0, i32 2
  %73 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %72, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %73, i64 0, i32 11
  %75 = load i32, i32* %74, align 8
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %102

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %73, i64 0, i32 4, i32 0, i32 0, i32 0
  %80 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %79, align 8
  %81 = call i8* @_Znwm(i64 104) #12
  %82 = bitcast i8* %81 to %"class.spvtools::opt::analysis::DefUseManager"*
  %83 = getelementptr inbounds i8, i8* %81, i64 32
  %84 = bitcast i8* %83 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %84, align 4
  %85 = getelementptr inbounds i8, i8* %81, i64 48
  %86 = getelementptr inbounds i8, i8* %81, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 16, i1 false) #13
  %87 = bitcast i8* %86 to i8**
  store i8* %85, i8** %87, align 8
  %88 = getelementptr inbounds i8, i8* %81, i64 64
  %89 = getelementptr inbounds i8, i8* %81, i64 96
  %90 = bitcast i8* %89 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %90, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %82, %"class.spvtools::opt::Module"* %80) #13
  %91 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %73, i64 0, i32 6
  %92 = ptrtoint i8* %81 to i64
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %91, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %93, align 8
  %95 = bitcast %"class.std::__1::unique_ptr.62"* %91 to i64*
  store i64 %92, i64* %95, align 8
  %96 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %94, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %78
  %98 = bitcast %"class.std::__1::unique_ptr.62"* %91 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %98, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %94) #13
  br label %99

99:                                               ; preds = %97, %78
  %100 = load i32, i32* %74, align 8
  %101 = or i32 %100, 1
  store i32 %101, i32* %74, align 8
  br label %102

102:                                              ; preds = %99, %71
  %103 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %73, i64 0, i32 6, i32 0, i32 0, i32 0
  %104 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %103, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %104, %"class.spvtools::opt::Instruction"* %1) #13
  br label %105

105:                                              ; preds = %68, %102
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS8_10BasicBlockENS_14default_deleteISC_EEEENS_9allocatorISF_EEEEENK3$_1clEjENKUlPNS8_11InstructionEE_clESM_EUlS2_E_S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #11 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1236"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1236"*, %"class.std::__1::__function::__default_alloc_func.1236"** %3, align 8
  %5 = load i32, i32* %1, align 4
  %6 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1236", %"class.std::__1::__function::__default_alloc_func.1236"* %4, i64 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %5, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1236", %"class.std::__1::__function::__default_alloc_func.1236"* %4, i64 0, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %1, align 4
  %14 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1236", %"class.std::__1::__function::__default_alloc_func.1236"* %4, i64 0, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  store i8 1, i8* %15, align 1
  br label %16

16:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjENKUlPNS5_11InstructionEE_clESJ_EUlPjE_FvSL_EEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12, !noalias !130
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #13
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjENKUlPNS5_11InstructionEE_clESJ_EUlPjE_FvSL_EEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjEUlPNS5_11InstructionEE_FvSJ_EEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12, !noalias !135
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #13
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjEUlPNS5_11InstructionEE_FvSJ_EEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_1FvjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12, !noalias !140
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #13
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_1FvjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.40"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.40"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.40"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.40"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.40"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.40"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.40"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.40"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spvtools::opt::BasicBlock"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.40"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.40"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.40"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.40"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !145

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.40"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.40"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.40"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.40"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.40"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.40"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.40"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.40"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.40"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.40"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.40"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.40"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.40"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.40"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.40"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.40"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.40"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.40"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.40"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.40"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.40"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.40"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.40"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.40"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.40"*
  %138 = icmp eq %"class.std::__1::unique_ptr.40"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.40"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %142, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %142, align 8
  %144 = icmp eq %"class.spvtools::opt::BasicBlock"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.std::__1::unique_ptr.40"* %141 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %146, %"class.spvtools::opt::BasicBlock"* nonnull %143) #13
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.40"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1174"* dereferenceable(8), %"class.std::__1::tuple.1061"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !75
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.333"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.333"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.333"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.333"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.333"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #12, !noalias !146
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1174", %"class.std::__1::tuple.1174"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !146
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !146
  store i32 %62, i32* %61, align 8, !noalias !146
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %64, align 8, !noalias !146
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !146
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"**
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %67, align 8, !noalias !146
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !75
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !75
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.333"* %110, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.333"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.333"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !75
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.333"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.333"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } undef, %"struct.std::__1::__hash_node_base.333"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.333"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm(%"class.std::__1::vector.38"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.40"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::unique_ptr.40"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 %18, i32 0, i32 0, i32 0
  %20 = bitcast %"class.spvtools::opt::BasicBlock"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #13
  %26 = ptrtoint %"class.std::__1::unique_ptr.40"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %214

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to %"class.std::__1::unique_ptr.40"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.std::__1::unique_ptr.40"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 %33
  %59 = ptrtoint %"class.std::__1::unique_ptr.40"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 %56
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  %63 = add i64 %62, -8
  %64 = lshr exact i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"class.std::__1::unique_ptr.40"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %69, i64 1
  %74 = ptrtoint %"class.std::__1::unique_ptr.40"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !149

77:                                               ; preds = %68
  %78 = ptrtoint %"class.std::__1::unique_ptr.40"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"class.std::__1::unique_ptr.40"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 56
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"class.std::__1::unique_ptr.40"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 1
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 2
  %90 = bitcast %"class.std::__1::unique_ptr.40"* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 3
  %92 = bitcast %"class.std::__1::unique_ptr.40"* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 4
  %94 = bitcast %"class.std::__1::unique_ptr.40"* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 5
  %96 = bitcast %"class.std::__1::unique_ptr.40"* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 6
  %98 = bitcast %"class.std::__1::unique_ptr.40"* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 7
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %99 to i64*
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 8
  %102 = ptrtoint %"class.std::__1::unique_ptr.40"* %101 to i64
  %103 = icmp eq %"class.std::__1::unique_ptr.40"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"class.std::__1::unique_ptr.40"* %60 to i64
  %106 = ptrtoint %"class.std::__1::unique_ptr.40"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %108 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %107, align 8
  %109 = ptrtoint %"class.std::__1::unique_ptr.40"* %108 to i64
  %110 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  %111 = icmp eq %"class.std::__1::unique_ptr.40"* %110, %108
  br i1 %111, label %194, label %112

112:                                              ; preds = %104
  %113 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %110, i64 -1, i32 0, i32 0, i32 0
  %114 = ptrtoint %"class.spvtools::opt::BasicBlock"** %113 to i64
  %115 = sub i64 %114, %109
  %116 = lshr i64 %115, 3
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 7
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %132, label %120

120:                                              ; preds = %112, %120
  %121 = phi %"class.std::__1::unique_ptr.40"* [ %124, %120 ], [ %58, %112 ]
  %122 = phi %"class.std::__1::unique_ptr.40"* [ %125, %120 ], [ %110, %112 ]
  %123 = phi i64 [ %130, %120 ], [ %118, %112 ]
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %121, i64 -1
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %122, i64 -1
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.40"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.40"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = add i64 %123, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !150

132:                                              ; preds = %120, %112
  %133 = phi %"class.std::__1::unique_ptr.40"* [ undef, %112 ], [ %124, %120 ]
  %134 = phi %"class.std::__1::unique_ptr.40"* [ %58, %112 ], [ %124, %120 ]
  %135 = phi %"class.std::__1::unique_ptr.40"* [ %110, %112 ], [ %125, %120 ]
  %136 = icmp ult i64 %115, 56
  br i1 %136, label %189, label %137

137:                                              ; preds = %132, %137
  %138 = phi %"class.std::__1::unique_ptr.40"* [ %182, %137 ], [ %134, %132 ]
  %139 = phi %"class.std::__1::unique_ptr.40"* [ %183, %137 ], [ %135, %132 ]
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -1
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::unique_ptr.40"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %142, align 8
  %145 = bitcast %"class.std::__1::unique_ptr.40"* %140 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -2
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -2
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = bitcast %"class.std::__1::unique_ptr.40"* %147 to i64*
  %150 = load i64, i64* %149, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %148, align 8
  %151 = bitcast %"class.std::__1::unique_ptr.40"* %146 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -3
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -3
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.std::__1::unique_ptr.40"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %154, align 8
  %157 = bitcast %"class.std::__1::unique_ptr.40"* %152 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -4
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -4
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.std::__1::unique_ptr.40"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %160, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.40"* %158 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -5
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -5
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %165, i64 0, i32 0, i32 0, i32 0
  %167 = bitcast %"class.std::__1::unique_ptr.40"* %165 to i64*
  %168 = load i64, i64* %167, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %166, align 8
  %169 = bitcast %"class.std::__1::unique_ptr.40"* %164 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -6
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -6
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %171, i64 0, i32 0, i32 0, i32 0
  %173 = bitcast %"class.std::__1::unique_ptr.40"* %171 to i64*
  %174 = load i64, i64* %173, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %172, align 8
  %175 = bitcast %"class.std::__1::unique_ptr.40"* %170 to i64*
  store i64 %174, i64* %175, align 8
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -7
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -7
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.std::__1::unique_ptr.40"* %177 to i64*
  %180 = load i64, i64* %179, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %178, align 8
  %181 = bitcast %"class.std::__1::unique_ptr.40"* %176 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -8
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.std::__1::unique_ptr.40"* %183 to i64*
  %186 = load i64, i64* %185, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %184, align 8
  %187 = bitcast %"class.std::__1::unique_ptr.40"* %182 to i64*
  store i64 %186, i64* %187, align 8
  %188 = icmp eq %"class.std::__1::unique_ptr.40"* %183, %108
  br i1 %188, label %189, label %137

189:                                              ; preds = %137, %132
  %190 = phi %"class.std::__1::unique_ptr.40"* [ %133, %132 ], [ %182, %137 ]
  %191 = ptrtoint %"class.std::__1::unique_ptr.40"* %190 to i64
  %192 = load i64, i64* %30, align 8
  %193 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  br label %194

194:                                              ; preds = %104, %189
  %195 = phi %"class.std::__1::unique_ptr.40"* [ %193, %189 ], [ %108, %104 ]
  %196 = phi i64 [ %191, %189 ], [ %59, %104 ]
  %197 = phi i64 [ %192, %189 ], [ %109, %104 ]
  store i64 %196, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %198 = inttoptr i64 %197 to %"class.std::__1::unique_ptr.40"*
  %199 = icmp eq %"class.std::__1::unique_ptr.40"* %195, %198
  br i1 %199, label %210, label %200

200:                                              ; preds = %194, %208
  %201 = phi %"class.std::__1::unique_ptr.40"* [ %202, %208 ], [ %195, %194 ]
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %201, i64 -1
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %202, i64 0, i32 0, i32 0, i32 0
  %204 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %203, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %203, align 8
  %205 = icmp eq %"class.spvtools::opt::BasicBlock"* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %200
  %207 = bitcast %"class.std::__1::unique_ptr.40"* %202 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %207, %"class.spvtools::opt::BasicBlock"* nonnull %204) #13
  br label %208

208:                                              ; preds = %206, %200
  %209 = icmp eq %"class.std::__1::unique_ptr.40"* %202, %198
  br i1 %209, label %210, label %200

210:                                              ; preds = %208, %194
  %211 = icmp eq i64 %197, 0
  br i1 %211, label %214, label %212

212:                                              ; preds = %210
  %213 = inttoptr i64 %197 to i8*
  tail call void @_ZdlPv(i8* %213) #12
  br label %214

214:                                              ; preds = %212, %210, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1244", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1023
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -1024
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32**, i32*** %10, align 8
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i32*, i32** %11, i64 1
  store i32** %14, i32*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i32**, i32*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i32**, i32*** %17, align 8
  %19 = icmp eq i32** %16, %18
  %20 = ptrtoint i32** %18 to i64
  %21 = bitcast i32** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32**, i32*** %23, align 8
  %25 = icmp ugt i32** %14, %24
  %26 = ptrtoint i32** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint i32** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds i32*, i32** %14, i64 %32
  %34 = ptrtoint i32** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast i32** %33 to i8*
  %40 = bitcast i32** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #13
  %41 = load i32**, i32*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi i32** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds i32*, i32** %33, i64 %36
  store i32** %44, i32*** %15, align 8
  %45 = getelementptr inbounds i32*, i32** %43, i64 %32
  store i32** %45, i32*** %10, align 8
  %46 = bitcast i32** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast i32*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to i32**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds i32*, i32** %60, i64 %57
  %63 = ptrtoint i32** %62 to i64
  %64 = getelementptr inbounds i32*, i32** %60, i64 %53
  %65 = ptrtoint i32** %64 to i64
  %66 = ptrtoint i32** %14 to i64
  %67 = ptrtoint i32** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds i32*, i32** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi i32** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi i32** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast i32** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i32*, i32** %79, i64 1
  %87 = ptrtoint i32** %86 to i64
  %88 = getelementptr inbounds i32*, i32** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !151

91:                                               ; preds = %78
  %92 = ptrtoint i32** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi i32** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi i32** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi i32** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi i32** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %99, i64 1
  %106 = getelementptr inbounds i32*, i32** %101, i64 1
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %99, i64 2
  %111 = getelementptr inbounds i32*, i32** %101, i64 2
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %99, i64 3
  %116 = getelementptr inbounds i32*, i32** %101, i64 3
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %99, i64 4
  %121 = getelementptr inbounds i32*, i32** %101, i64 4
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %99, i64 5
  %126 = getelementptr inbounds i32*, i32** %101, i64 5
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %99, i64 6
  %131 = getelementptr inbounds i32*, i32** %101, i64 6
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i32** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i32*, i32** %99, i64 7
  %136 = getelementptr inbounds i32*, i32** %101, i64 7
  %137 = bitcast i32** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i32** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i32*, i32** %99, i64 8
  %141 = ptrtoint i32** %140 to i64
  %142 = getelementptr inbounds i32*, i32** %101, i64 8
  %143 = icmp eq i32** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint i32** %70 to i64
  %146 = load i32**, i32*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi i32** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast i32*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast i32*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq i32** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast i32** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  %156 = bitcast i32*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load i32**, i32*** %15, align 8
  %161 = getelementptr inbounds i32*, i32** %160, i64 1
  store i32** %161, i32*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i32*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast i32*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast i32*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to i32**
  %181 = inttoptr i64 %169 to i32**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #13
  %186 = tail call i8* @_Znwm(i64 4096) #12
  %187 = bitcast i32** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"* %163, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #13
  br label %460

188:                                              ; preds = %182
  %189 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  %190 = tail call i8* @_Znwm(i64 4096) #12
  %191 = bitcast i32** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"* %163, i32** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  %192 = load i32**, i32*** %167, align 8
  %193 = bitcast i32** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds i32*, i32** %192, i64 1
  store i32** %195, i32*** %167, align 8
  %196 = load i32**, i32*** %164, align 8
  %197 = load i32**, i32*** %172, align 8
  %198 = icmp eq i32** %196, %197
  %199 = ptrtoint i32** %197 to i64
  %200 = bitcast i32** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load i32**, i32*** %202, align 8
  %204 = icmp ugt i32** %195, %203
  %205 = ptrtoint i32** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint i32** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds i32*, i32** %195, i64 %211
  %213 = ptrtoint i32** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast i32** %212 to i8*
  %219 = bitcast i32** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #13
  %220 = load i32**, i32*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi i32** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds i32*, i32** %212, i64 %215
  store i32** %223, i32*** %164, align 8
  %224 = getelementptr inbounds i32*, i32** %222, i64 %211
  store i32** %224, i32*** %167, align 8
  %225 = bitcast i32** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #14
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #12
  %237 = bitcast i8* %236 to i32**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds i32*, i32** %237, i64 %234
  %240 = ptrtoint i32** %239 to i64
  %241 = getelementptr inbounds i32*, i32** %237, i64 %230
  %242 = ptrtoint i32** %241 to i64
  %243 = ptrtoint i32** %195 to i64
  %244 = ptrtoint i32** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds i32*, i32** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi i32** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi i32** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast i32** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds i32*, i32** %256, i64 1
  %264 = ptrtoint i32** %263 to i64
  %265 = getelementptr inbounds i32*, i32** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !152

268:                                              ; preds = %255
  %269 = ptrtoint i32** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi i32** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi i32** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi i32** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi i32** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast i32** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds i32*, i32** %276, i64 1
  %283 = getelementptr inbounds i32*, i32** %278, i64 1
  %284 = bitcast i32** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast i32** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds i32*, i32** %276, i64 2
  %288 = getelementptr inbounds i32*, i32** %278, i64 2
  %289 = bitcast i32** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast i32** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds i32*, i32** %276, i64 3
  %293 = getelementptr inbounds i32*, i32** %278, i64 3
  %294 = bitcast i32** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast i32** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds i32*, i32** %276, i64 4
  %298 = getelementptr inbounds i32*, i32** %278, i64 4
  %299 = bitcast i32** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast i32** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds i32*, i32** %276, i64 5
  %303 = getelementptr inbounds i32*, i32** %278, i64 5
  %304 = bitcast i32** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast i32** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds i32*, i32** %276, i64 6
  %308 = getelementptr inbounds i32*, i32** %278, i64 6
  %309 = bitcast i32** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast i32** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds i32*, i32** %276, i64 7
  %313 = getelementptr inbounds i32*, i32** %278, i64 7
  %314 = bitcast i32** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast i32** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds i32*, i32** %276, i64 8
  %318 = ptrtoint i32** %317 to i64
  %319 = getelementptr inbounds i32*, i32** %278, i64 8
  %320 = icmp eq i32** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint i32** %247 to i64
  %323 = load i32**, i32*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi i32** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq i32** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast i32** %325 to i8*
  call void @_ZdlPv(i8* %330) #12
  %331 = bitcast i32*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load i32**, i32*** %164, align 8
  %336 = getelementptr inbounds i32*, i32** %335, i64 1
  store i32** %336, i32*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1244"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #13
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1244", %"struct.std::__1::__split_buffer.1244"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1244", %"struct.std::__1::__split_buffer.1244"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1244", %"struct.std::__1::__split_buffer.1244"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1244", %"struct.std::__1::__split_buffer.1244"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1244"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store i32** null, i32*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.982"** %342 to %"class.std::__1::__compressed_pair.979"**
  store %"class.std::__1::__compressed_pair.979"* %346, %"class.std::__1::__compressed_pair.979"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #14
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #12
  %354 = bitcast i8* %353 to i32**
  %355 = bitcast %"struct.std::__1::__split_buffer.1244"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds i32*, i32** %354, i64 %171
  store i32** %356, i32*** %340, align 8
  store i32** %356, i32*** %339, align 8
  %357 = getelementptr inbounds i32*, i32** %354, i64 %345
  store i32** %357, i32*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #12
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint i32** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint i32** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt i32** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds i32*, i32** %356, i64 %370
  store i32** %371, i32*** %340, align 8
  store i32** %371, i32*** %339, align 8
  %372 = ptrtoint i32** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #14
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1244"* %4 to i64*
  %382 = bitcast i32*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #12
  %386 = bitcast i8* %385 to i32**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds i32*, i32** %386, i64 %383
  %389 = ptrtoint i32** %388 to i64
  %390 = getelementptr inbounds i32*, i32** %386, i64 %377
  %391 = ptrtoint i32** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast i32*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast i32*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #12
  %394 = load i32**, i32*** %164, align 8
  %395 = load i32**, i32*** %167, align 8
  %396 = ptrtoint i32** %395 to i64
  %397 = ptrtoint i32** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi i32** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi i32** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi i32** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast i32** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds i32*, i32** %406, i64 1
  store i32** %408, i32*** %340, align 8
  %409 = icmp eq i32** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint i32** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1244"* %4 to i64*
  %413 = bitcast i32*** %339 to i64*
  %414 = bitcast i32*** %340 to i64*
  %415 = bitcast i32*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint i32** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1244"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast i32*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast i32*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast i32*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to i32**
  %441 = inttoptr i64 %434 to i32**
  %442 = icmp eq i32** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr i32*, i32** %441, i64 -1
  %445 = ptrtoint i32** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr i32*, i32** %441, i64 %448
  store i32** %449, i32*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #12
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #13
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi i32** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds i32*, i32** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.1244"* nonnull %4, i32** dereferenceable(8) %457)
  %458 = load i32**, i32*** %167, align 8
  %459 = icmp eq i32** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = bitcast i32** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load i32**, i32*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp ugt i32** %12, %14
  %16 = ptrtoint i32** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i32** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32*, i32** %12, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i32** %23 to i8*
  %30 = bitcast i32** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load i32**, i32*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i32** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %23, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %22
  store i32** %35, i32*** %11, align 8
  %36 = bitcast i32** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to i32**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i32*, i32** %50, i64 %47
  %53 = ptrtoint i32** %52 to i64
  %54 = getelementptr inbounds i32*, i32** %50, i64 %43
  %55 = ptrtoint i32** %54 to i64
  %56 = ptrtoint i32** %12 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i32*, i32** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i32** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i32** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i32** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i32*, i32** %69, i64 1
  %77 = ptrtoint i32** %76 to i64
  %78 = getelementptr inbounds i32*, i32** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !153

81:                                               ; preds = %68
  %82 = ptrtoint i32** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i32** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i32** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i32** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i32** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i32*, i32** %89, i64 1
  %96 = getelementptr inbounds i32*, i32** %91, i64 1
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i32** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i32*, i32** %89, i64 2
  %101 = getelementptr inbounds i32*, i32** %91, i64 2
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i32** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %89, i64 3
  %106 = getelementptr inbounds i32*, i32** %91, i64 3
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %89, i64 4
  %111 = getelementptr inbounds i32*, i32** %91, i64 4
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %89, i64 5
  %116 = getelementptr inbounds i32*, i32** %91, i64 5
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %89, i64 6
  %121 = getelementptr inbounds i32*, i32** %91, i64 6
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %89, i64 7
  %126 = getelementptr inbounds i32*, i32** %91, i64 7
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %89, i64 8
  %131 = ptrtoint i32** %130 to i64
  %132 = getelementptr inbounds i32*, i32** %91, i64 8
  %133 = icmp eq i32** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i32** %60 to i64
  %136 = load i32**, i32*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i32** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i32*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i32** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i32** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast i32*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i32**, i32*** %3, align 8
  %153 = getelementptr inbounds i32*, i32** %152, i64 1
  store i32** %153, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !154

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.1244"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1244", %"struct.std::__1::__split_buffer.1244"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1244", %"struct.std::__1::__split_buffer.1244"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1244", %"struct.std::__1::__split_buffer.1244"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1244", %"struct.std::__1::__split_buffer.1244"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1244"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !155

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_14InstrumentPass20InitializeInstrumentEvE3$_2S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #11 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32**
  %4 = load i32*, i32** %3, align 8
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1174"* dereferenceable(8), %"class.std::__1::tuple.1061"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !75
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.254"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.254"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.254"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.254"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.254"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #12, !noalias !156
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1174", %"class.std::__1::tuple.1174"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !156
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !156
  store i32 %62, i32* %61, align 4, !noalias !156
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !156
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !156
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"**
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %67, align 8, !noalias !156
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !75
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !75
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.254"* %110, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.254"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.254"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !75
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.254"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.254"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } undef, %"struct.std::__1::__hash_node_base.254"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.254"*, i8 } %150
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{}
!6 = !{i8 0, i8 2}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!10 = distinct !{!10, !11, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS5_10BasicBlockEE3$_0FvPjEEEEENS7_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS5_10BasicBlockEE3$_0FvPjEEEEENS7_IvNS0_21__builtin_new_deleterEEEm"}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.isvectorized", i32 1}
!19 = distinct !{!19, !3}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !18}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !18}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !18}
!30 = !{!31}
!31 = distinct !{!31, !32}
!32 = distinct !{!32, !"LVerDomain"}
!33 = !{!34}
!34 = distinct !{!34, !32}
!35 = distinct !{!35, !18}
!36 = distinct !{!36, !3}
!37 = distinct !{!37, !3}
!38 = distinct !{!38, !18}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !18}
!45 = distinct !{!45, !3}
!46 = distinct !{!46, !3}
!47 = distinct !{!47, !18}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN8spvtools3opt18InstructionBuilder14GetInsertPointEv: argument 0"}
!50 = distinct !{!50, !"_ZN8spvtools3opt18InstructionBuilder14GetInsertPointEv"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!53 = distinct !{!53, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!54 = !{!55, !57}
!55 = distinct !{!55, !56, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!57 = distinct !{!57, !58, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_1FvjEEEEENS8_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!58 = distinct !{!58, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_1FvjEEEEENS8_IvNS0_21__builtin_new_deleterEEEm"}
!59 = distinct !{!59, !3}
!60 = !{!61, !63, !65}
!61 = distinct !{!61, !62, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!62 = distinct !{!62, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!63 = distinct !{!63, !64, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!64 = distinct !{!64, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!65 = distinct !{!65, !66, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!66 = distinct !{!66, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!67 = distinct !{!67, !3}
!68 = !{!69, !71, !73}
!69 = distinct !{!69, !70, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!70 = distinct !{!70, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!71 = distinct !{!71, !72, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!72 = distinct !{!72, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!73 = distinct !{!73, !74, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!74 = distinct !{!74, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!75 = !{i64 0, i64 65}
!76 = distinct !{!76, !3}
!77 = distinct !{!77, !3}
!78 = distinct !{!78, !3}
!79 = distinct !{!79, !3}
!80 = distinct !{!80, !3}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!83 = distinct !{!83, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!84 = distinct !{!84, !3}
!85 = distinct !{!85, !3}
!86 = distinct !{!86, !3}
!87 = distinct !{!87, !3}
!88 = distinct !{!88, !3}
!89 = distinct !{!89, !3}
!90 = distinct !{!90, !3}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!93 = distinct !{!93, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_"}
!94 = distinct !{!94, !3}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!97 = distinct !{!97, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!98 = distinct !{!98, !3}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!101 = distinct !{!101, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt8FunctionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!102 = distinct !{!102, !3}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!105 = distinct !{!105, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!106 = distinct !{!106, !3}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEjEENS_22__unordered_map_hasherIS5_S6_N8spvtools3opt14InstrumentPass12vector_hash_ENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SD_SB_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!109 = distinct !{!109, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEjEENS_22__unordered_map_hasherIS5_S6_N8spvtools3opt14InstrumentPass12vector_hash_ENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SD_SB_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_ISV_EEEEEEmOT_DpOT0_"}
!110 = distinct !{!110, !3}
!111 = !{!112, !114}
!112 = distinct !{!112, !113, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!113 = distinct !{!113, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!114 = distinct !{!114, !115, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS5_10BasicBlockEE3$_0FvPjEEEEENS7_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!115 = distinct !{!115, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt14InstrumentPass17CloneSameBlockOpsEPNS_10unique_ptrINS5_11InstructionENS_14default_deleteIS8_EEEEPNS_13unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEEEPNSD_IjPS8_SF_SH_NSI_INSJ_ISK_SP_EEEEEEPNS5_10BasicBlockEE3$_0FvPjEEEEENS7_IvNS0_21__builtin_new_deleterEEEm"}
!116 = !{!117, !119}
!117 = distinct !{!117, !118, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!118 = distinct !{!118, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!119 = distinct !{!119, !120, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjEUlPNS5_11InstructionEE_FvSJ_EEEEENS8_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!120 = distinct !{!120, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjEUlPNS5_11InstructionEE_FvSJ_EEEEENS8_IvNS0_21__builtin_new_deleterEEEm"}
!121 = !{!122}
!122 = distinct !{!122, !123, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!123 = distinct !{!123, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!124 = distinct !{!124, !3}
!125 = !{!126, !128}
!126 = distinct !{!126, !127, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!127 = distinct !{!127, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!128 = distinct !{!128, !129, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjENKUlPNS5_11InstructionEE_clESJ_EUlPjE_FvSL_EEEEENS8_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!129 = distinct !{!129, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjENKUlPNS5_11InstructionEE_clESJ_EUlPjE_FvSL_EEEEENS8_IvNS0_21__builtin_new_deleterEEEm"}
!130 = !{!131, !133}
!131 = distinct !{!131, !132, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!132 = distinct !{!132, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!133 = distinct !{!133, !134, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjENKUlPNS5_11InstructionEE_clESJ_EUlPjE_FvSL_EEEEENS8_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!134 = distinct !{!134, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjENKUlPNS5_11InstructionEE_clESJ_EUlPjE_FvSL_EEEEENS8_IvNS0_21__builtin_new_deleterEEEm"}
!135 = !{!136, !138}
!136 = distinct !{!136, !137, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!137 = distinct !{!137, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!138 = distinct !{!138, !139, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjEUlPNS5_11InstructionEE_FvSJ_EEEEENS8_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!139 = distinct !{!139, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEENK3$_1clEjEUlPNS5_11InstructionEE_FvSJ_EEEEENS8_IvNS0_21__builtin_new_deleterEEEm"}
!140 = !{!141, !143}
!141 = distinct !{!141, !142, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!142 = distinct !{!142, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!143 = distinct !{!143, !144, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_1FvjEEEEENS8_IvNS0_21__builtin_new_deleterEEEm: argument 0"}
!144 = distinct !{!144, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt14InstrumentPass20UpdateSucceedingPhisERNS_6vectorINS_10unique_ptrINS5_10BasicBlockENS_14default_deleteIS9_EEEENS_9allocatorISC_EEEEE3$_1FvjEEEEENS8_IvNS0_21__builtin_new_deleterEEEm"}
!145 = distinct !{!145, !3}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!148 = distinct !{!148, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!149 = distinct !{!149, !3}
!150 = distinct !{!150, !3}
!151 = distinct !{!151, !3}
!152 = distinct !{!152, !3}
!153 = distinct !{!153, !3}
!154 = distinct !{!154, !3}
!155 = distinct !{!155, !3}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!158 = distinct !{!158, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_"}
