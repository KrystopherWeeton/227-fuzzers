; ModuleID = '../../third_party/tflite-support/src/tensorflow_lite_support/cc/task/core/external_file_handler.cc'
source_filename = "../../third_party/tflite-support/src/tensorflow_lite_support/cc/task/core/external_file_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.tflite::task::core::ExternalFileHandler" = type { %"class.tflite::task::core::ExternalFile"*, i8*, i64, i64, i64 }
%"class.tflite::task::core::ExternalFile" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"class.tflite::task::core::FileDescriptorMeta"* }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.tflite::task::core::FileDescriptorMeta" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i64, i64, i32, [4 x i8] }>
%"class.tflite::support::StatusOr" = type { %"class.tflite::support::internal_statusor::StatusOrData" }
%"class.tflite::support::internal_statusor::StatusOrData" = type { %union.anon.2, %union.anon.3 }
%union.anon.2 = type { %"class.absl::Status" }
%"class.absl::Status" = type { i64 }
%union.anon.3 = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.tflite::task::core::ExternalFileHandler"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [85 x i8] c"ExternalFile must have 'file_content' set, loading from'file_name' is not supported.\00", align 1

@_ZN6tflite4task4core19ExternalFileHandlerD1Ev = hidden unnamed_addr alias void (%"class.tflite::task::core::ExternalFileHandler"*), void (%"class.tflite::task::core::ExternalFileHandler"*)* @_ZN6tflite4task4core19ExternalFileHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite4task4core19ExternalFileHandler22CreateFromExternalFileEPKNS1_12ExternalFileE(%"class.tflite::support::StatusOr"* noalias sret, %"class.tflite::task::core::ExternalFile"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::Status", align 8
  %4 = tail call i8* @_Znwm(i64 40) #7
  %5 = bitcast i8* %4 to %"class.tflite::task::core::ExternalFile"**
  store %"class.tflite::task::core::ExternalFile"* %1, %"class.tflite::task::core::ExternalFile"** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #8
  %7 = ptrtoint i8* %4 to i64
  %8 = bitcast %"class.absl::Status"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.tflite::task::core::ExternalFile", %"class.tflite::task::core::ExternalFile"* %1, i64 0, i32 4, i32 0
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8, !noalias !2
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1, !noalias !2
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  br label %20

18:                                               ; preds = %2
  %19 = zext i8 %13 to i64
  br label %20

20:                                               ; preds = %18, %15
  %21 = phi i64 [ %17, %15 ], [ %19, %18 ]
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  br label %28

24:                                               ; preds = %20
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %3, i32 3, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str, i64 0, i64 0), i64 84, i32 2) #8
  %25 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %3, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23, %24
  %29 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0
  %30 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  store i64 %7, i64* %30, align 8
  br label %32

31:                                               ; preds = %24
  call void @_ZdlPv(i8* nonnull %4) #7
  br label %32

32:                                               ; preds = %28, %31
  %33 = phi i64 [ 0, %28 ], [ %26, %31 ]
  %34 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite4task4core19ExternalFileHandler15MapExternalFileEv(%"class.absl::Status"* noalias sret, %"class.tflite::task::core::ExternalFileHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tflite::task::core::ExternalFileHandler", %"class.tflite::task::core::ExternalFileHandler"* %1, i64 0, i32 0
  %4 = load %"class.tflite::task::core::ExternalFile"*, %"class.tflite::task::core::ExternalFile"** %3, align 8
  %5 = getelementptr inbounds %"class.tflite::task::core::ExternalFile", %"class.tflite::task::core::ExternalFile"* %4, i64 0, i32 4, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %2
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %0, i64 0, i32 0
  store i64 0, i64* %20, align 8, !alias.scope !5
  br label %22

21:                                               ; preds = %16
  tail call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* sret %0, i32 3, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str, i64 0, i64 0), i64 84, i32 2) #8
  br label %22

22:                                               ; preds = %21, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* sret, i32, i8*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN6tflite4task4core19ExternalFileHandler14GetFileContentEv(%"class.tflite::task::core::ExternalFileHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tflite::task::core::ExternalFileHandler", %"class.tflite::task::core::ExternalFileHandler"* %0, i64 0, i32 0
  %3 = load %"class.tflite::task::core::ExternalFile"*, %"class.tflite::task::core::ExternalFile"** %2, align 8
  %4 = getelementptr inbounds %"class.tflite::task::core::ExternalFile", %"class.tflite::task::core::ExternalFile"* %3, i64 0, i32 4, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %1
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %15
  br i1 %9, label %22, label %19

19:                                               ; preds = %18
  %20 = zext i8 %8 to i64
  %21 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  br label %44

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp sgt i64 %26, -1
  br i1 %27, label %44, label %28, !prof !8

28:                                               ; preds = %22
  tail call void @llvm.trap() #8
  unreachable

29:                                               ; preds = %15
  %30 = getelementptr inbounds %"class.tflite::task::core::ExternalFileHandler", %"class.tflite::task::core::ExternalFileHandler"* %0, i64 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.tflite::task::core::ExternalFileHandler", %"class.tflite::task::core::ExternalFileHandler"* %0, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  %35 = getelementptr inbounds %"class.tflite::task::core::ExternalFileHandler", %"class.tflite::task::core::ExternalFileHandler"* %0, i64 0, i32 4
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 0, %36
  %38 = getelementptr inbounds i8, i8* %34, i64 %37
  %39 = getelementptr inbounds %"class.tflite::task::core::ExternalFileHandler", %"class.tflite::task::core::ExternalFileHandler"* %0, i64 0, i32 3
  %40 = load i64, i64* %39, align 8
  %41 = ptrtoint i8* %38 to i64
  %42 = icmp sgt i64 %40, -1
  br i1 %42, label %44, label %43, !prof !8

43:                                               ; preds = %29
  tail call void @llvm.trap() #8
  unreachable

44:                                               ; preds = %29, %22, %19
  %45 = phi i64 [ %20, %19 ], [ %26, %22 ], [ %40, %29 ]
  %46 = phi i64 [ %21, %19 ], [ %24, %22 ], [ %41, %29 ]
  %47 = inttoptr i64 %46 to i8*
  %48 = insertvalue { i8*, i64 } undef, i8* %47, 0
  %49 = insertvalue { i8*, i64 } %48, i64 %45, 1
  ret { i8*, i64 } %49
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6tflite4task4core19ExternalFileHandlerD2Ev(%"class.tflite::task::core::ExternalFileHandler"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite4task4core19ExternalFileHandler15MapExternalFileEv: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite4task4core19ExternalFileHandler15MapExternalFileEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4absl8OkStatusEv: argument 0"}
!7 = distinct !{!7, !"_ZN4absl8OkStatusEv"}
!8 = !{!"branch_weights", i32 2000, i32 1}
