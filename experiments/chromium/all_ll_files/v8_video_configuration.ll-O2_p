; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_video_configuration.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_video_configuration.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.78", i32, [4 x i8], %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.214", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.230", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.255", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.194", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__cxx_atomic_impl.117" }
%"struct.std::__1::__cxx_atomic_impl.117" = type { %"struct.std::__1::__cxx_atomic_base_impl.118" }
%"struct.std::__1::__cxx_atomic_base_impl.118" = type { i64 }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::Worklist.125"* }
%"class.blink::Worklist.125" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::Worklist.132"* }
%"class.blink::Worklist.132" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::Worklist.139"* }
%"class.blink::Worklist.139" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::Worklist.146"* }
%"class.blink::Worklist.146" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::Worklist.153"* }
%"class.blink::Worklist.153" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::Worklist.160"* }
%"class.blink::Worklist.160" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::Worklist.167"* }
%"class.blink::Worklist.167" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.174", %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.188", [4 x i8] }>
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176", %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { i64 }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { float }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.197", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.206" }
%"class.WTF::Vector.206" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.223" }
%"class.WTF::VectorBufferBase.223" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.236" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.125"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.132"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.139"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.146"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.153"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.286" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.254 }
%class.scoped_refptr.254 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.255" = type { %"struct.std::__1::__atomic_base.256" }
%"struct.std::__1::__atomic_base.256" = type { %"struct.std::__1::__cxx_atomic_impl.257" }
%"struct.std::__1::__cxx_atomic_impl.257" = type { %"struct.std::__1::__cxx_atomic_base_impl.258" }
%"struct.std::__1::__cxx_atomic_base_impl.258" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::VideoConfiguration" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i32, %"class.WTF::String", %"class.WTF::String", double, %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.25", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.72", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.259", %"class.std::__1::unique_ptr.264", %"class.blink::Persistent.270", %"class.blink::Persistent.274", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.9", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", i32, i32 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.25" = type { %"class.WTF::HashTable.26" }
%"class.WTF::HashTable.26" = type <{ %"struct.WTF::KeyValuePair.29"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.29" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.38", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.33", i8* }
%"class.WTF::HashMap.33" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ %"struct.WTF::KeyValuePair.37"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.37" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.38" = type { %"class.v8::PersistentValueMapBase.39" }
%"class.v8::PersistentValueMapBase.39" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.40", i8* }
%"class.WTF::HashMap.40" = type { %"class.WTF::HashTable.41" }
%"class.WTF::HashTable.41" = type <{ %"struct.WTF::KeyValuePair.44"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.44" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.45" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.56", %"class.WTF::Vector.62", i8, i32 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.62" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.293, %"class.blink::Member.312", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.293 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.294", i32, i32, %"class.blink::Persistent.296" }
%"class.WTF::RefCounted.294" = type { %"class.base::RefCounted.295" }
%"class.base::RefCounted.295" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.296" = type { %"class.blink::PersistentBase.297" }
%"class.blink::PersistentBase.297" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.302" }
%"class.WTF::HashMap.302" = type { %"class.WTF::HashTable.303" }
%"class.WTF::HashTable.303" = type <{ %"struct.WTF::KeyValuePair.305"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.305" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.309" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.309" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.309" = type { %"class.v8::TracedReference.310" }
%"class.v8::TracedReference.310" = type { %"class.v8::BasicTracedReference.311" }
%"class.v8::BasicTracedReference.311" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.259" = type { %"class.WTF::VectorBuffer.260" }
%"class.WTF::VectorBuffer.260" = type { %"class.WTF::VectorBufferBase.261" }
%"class.WTF::VectorBufferBase.261" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.274" = type { %"class.blink::PersistentBase.275" }
%"class.blink::PersistentBase.275" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.280" }
%"class.WTF::Vector.280" = type { %"class.WTF::VectorBuffer.281" }
%"class.WTF::VectorBuffer.281" = type { %"class.WTF::VectorBufferBase.282" }
%"class.WTF::VectorBufferBase.282" = type { %"struct.std::__1::pair.283"*, i32, i32 }
%"struct.std::__1::pair.283" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.314" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Integer" = type { i8 }
%"class.v8::Number" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [76 x i8] c"Missing required member(s): bitrate, contentType, framerate, height, width.\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"required member bitrate is undefined.\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"required member contentType is undefined.\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"required member framerate is undefined.\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"required member height is undefined.\00", align 1
@.str.6 = private unnamed_addr constant [36 x i8] c"required member width is undefined.\00", align 1
@_ZZN5blink20V8VideoConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoConfigurationERNS_14ExceptionStateEE12kValidValues = internal constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0)], align 16
@.str.7 = private unnamed_addr constant [5 x i8] c"srgb\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"p3\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"rec2020\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"ColorGamut\00", align 1
@_ZZN5blink20V8VideoConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoConfigurationERNS_14ExceptionStateEE12kValidValues_0 = internal constant [3 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0)], align 16
@.str.11 = private unnamed_addr constant [12 x i8] c"smpteSt2086\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"smpteSt2094-10\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"smpteSt2094-40\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"HdrMetadataType\00", align 1
@_ZZN5blink20V8VideoConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoConfigurationERNS_14ExceptionStateEE12kValidValues_1 = internal constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0)], align 16
@.str.15 = private unnamed_addr constant [3 x i8] c"pq\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"hlg\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"TransferFunction\00", align 1
@_ZZN5blinkL31eternalV8VideoConfigurationKeysEPN2v87IsolateEE5kKeys = internal constant [9 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0)], align 16
@.str.18 = private unnamed_addr constant [8 x i8] c"bitrate\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"colorGamut\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"contentType\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"framerate\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"hdrMetadataType\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"scalabilityMode\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"transferFunction\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 9, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @_ZZN5blinkL31eternalV8VideoConfigurationKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase44is_media_capabilities_dynamic_range_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase38is_media_capabilities_web_rtc_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.28 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.29 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20V8VideoConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::VideoConfiguration"* nocapture, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.blink::V8StringResource", align 8
  %7 = alloca %"class.blink::V8StringResource", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::V8StringResource", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.blink::V8StringResource", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.blink::V8StringResource", align 8
  %17 = icmp eq %"class.v8::Value"* %1, null
  br i1 %17, label %39, label %18

18:                                               ; preds = %4
  %19 = bitcast %"class.v8::Value"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 3
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %23, label %40

23:                                               ; preds = %18
  %24 = add i64 %20, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %20, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  %33 = icmp eq i16 %32, 67
  br i1 %33, label %34, label %40

34:                                               ; preds = %23
  %35 = add i64 %20, 23
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = ashr i32 %37, 1
  switch i32 %38, label %40 [
    i32 5, label %39
    i32 3, label %39
  ]

39:                                               ; preds = %34, %34, %4
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str, i64 0, i64 0)) #7
  br label %1245

40:                                               ; preds = %34, %23, %18
  %41 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %41, label %43, label %42

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %1245

43:                                               ; preds = %40
  %44 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %45 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to %"class.blink::V8PerIsolateData"**
  %48 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %47, align 8
  %49 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %48, i8* bitcast ([9 x i8*]* @_ZZN5blinkL31eternalV8VideoConfigurationKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.314"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.314"*)) #7
  %50 = extractvalue { i64, %"class.v8::Eternal"* } %49, 1
  %51 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %51) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #7
  %52 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %53 = bitcast %"class.v8::Eternal"* %50 to %"class.v8::Value"**
  %54 = load %"class.v8::Value"*, %"class.v8::Value"** %53, align 8
  %55 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %54) #7
  %56 = icmp eq %"class.v8::Value"* %55, null
  br i1 %56, label %57, label %63

57:                                               ; preds = %43
  %58 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %59 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %60 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %60, i64 5
  %62 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %61, align 8
  call void %62(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %58) #7
  br label %1244

63:                                               ; preds = %43
  %64 = bitcast %"class.v8::Value"* %55 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 1
  br i1 %67, label %68, label %86

68:                                               ; preds = %63
  %69 = add i64 %65, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = and i64 %65, -4294967296
  %73 = zext i32 %71 to i64
  %74 = or i64 %72, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i16*
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %77, 67
  br i1 %78, label %79, label %86

79:                                               ; preds = %68
  %80 = add i64 %65, 23
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, -2
  %84 = icmp eq i32 %83, 10
  br i1 %84, label %85, label %86

85:                                               ; preds = %79
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %1244

86:                                               ; preds = %68, %63, %79
  %87 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %55) #7
  br i1 %87, label %88, label %91, !prof !2

88:                                               ; preds = %86
  %89 = bitcast %"class.v8::Value"* %55 to %"class.v8::Uint32"*
  %90 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %89) #7
  br label %98

91:                                               ; preds = %86
  %92 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %55) #7
  br i1 %92, label %93, label %96, !prof !2

93:                                               ; preds = %91
  %94 = bitcast %"class.v8::Value"* %55 to %"class.v8::Int32"*
  %95 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %94) #7
  br label %98

96:                                               ; preds = %91
  %97 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %55, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %98

98:                                               ; preds = %88, %93, %96
  %99 = phi i32 [ %90, %88 ], [ %95, %93 ], [ %97, %96 ]
  %100 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %1244

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 5
  store i32 %99, i32* %104, align 4
  %105 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 1
  store i8 1, i8* %105, align 8
  %106 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 2, i32 0
  %107 = bitcast %"class.v8::Name"** %106 to %"class.v8::Value"**
  %108 = load %"class.v8::Value"*, %"class.v8::Value"** %107, align 8
  %109 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %108) #7
  %110 = icmp eq %"class.v8::Value"* %109, null
  br i1 %110, label %111, label %117

111:                                              ; preds = %103
  %112 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %113 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %114 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %114, i64 5
  %116 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %115, align 8
  call void %116(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %112) #7
  br label %1244

117:                                              ; preds = %103
  %118 = bitcast %"class.v8::Value"* %109 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = and i64 %119, 3
  %121 = icmp eq i64 %120, 1
  br i1 %121, label %122, label %140

122:                                              ; preds = %117
  %123 = add i64 %119, -1
  %124 = inttoptr i64 %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = and i64 %119, -4294967296
  %127 = zext i32 %125 to i64
  %128 = or i64 %126, %127
  %129 = add i64 %128, 7
  %130 = inttoptr i64 %129 to i16*
  %131 = load i16, i16* %130, align 2
  %132 = icmp eq i16 %131, 67
  br i1 %132, label %133, label %140

133:                                              ; preds = %122
  %134 = add i64 %119, 23
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = and i32 %136, -2
  %138 = icmp eq i32 %137, 10
  br i1 %138, label %139, label %140

139:                                              ; preds = %133
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %1244

140:                                              ; preds = %122, %117, %133
  %141 = bitcast %"class.blink::V8StringResource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %141) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 152, i1 false)
  %142 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %109, %"class.v8::Value"** %142, align 8
  %143 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 1
  store i32 0, i32* %143, align 8
  %144 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %144, align 8
  %145 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1
  %146 = bitcast %"class.std::__1::unique_ptr"* %145 to i64*
  store i64 0, i64* %146, align 8
  %147 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %6, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %147, label %148, label %263

148:                                              ; preds = %140
  %149 = load %"class.v8::Value"*, %"class.v8::Value"** %142, align 8
  %150 = icmp eq %"class.v8::Value"* %149, null
  br i1 %150, label %151, label %175, !prof !3

151:                                              ; preds = %148
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %154, label %156

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 7
  br label %200

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %173

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i33
  %165 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %164, i33 1) #7
  %166 = extractvalue { i33, i1 } %165, 1
  %167 = extractvalue { i33, i1 } %165, 0
  %168 = icmp slt i33 %167, 0
  %169 = or i1 %166, %168
  br i1 %169, label %170, label %171, !prof !3

170:                                              ; preds = %161
  call void @llvm.trap() #7
  unreachable

171:                                              ; preds = %161
  %172 = trunc i33 %167 to i32
  store i32 %172, i32* %162, align 4
  br label %173

173:                                              ; preds = %156, %171
  %174 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 7
  br label %181

175:                                              ; preds = %148
  %176 = bitcast %"class.v8::Value"* %149 to %"class.v8::String"*
  %177 = load i32, i32* %143, align 8
  %178 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %176, i32 %177) #7
  %179 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 7
  %180 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %180, label %200, label %181

181:                                              ; preds = %173, %175
  %182 = phi %"class.WTF::String"* [ %174, %173 ], [ %179, %175 ]
  %183 = phi %"class.WTF::StringImpl"* [ %152, %173 ], [ %178, %175 ]
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %200

188:                                              ; preds = %181
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i33
  %192 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %191, i33 1) #7
  %193 = extractvalue { i33, i1 } %192, 1
  %194 = extractvalue { i33, i1 } %192, 0
  %195 = icmp slt i33 %194, 0
  %196 = or i1 %193, %195
  br i1 %196, label %197, label %198, !prof !3

197:                                              ; preds = %188
  call void @llvm.trap() #7
  unreachable

198:                                              ; preds = %188
  %199 = trunc i33 %194 to i32
  store i32 %199, i32* %189, align 4
  br label %200

200:                                              ; preds = %154, %198, %181, %175
  %201 = phi i1 [ false, %198 ], [ false, %181 ], [ true, %175 ], [ true, %154 ]
  %202 = phi %"class.WTF::String"* [ %182, %198 ], [ %182, %181 ], [ %179, %175 ], [ %155, %154 ]
  %203 = phi %"class.WTF::StringImpl"* [ %183, %198 ], [ %183, %181 ], [ null, %175 ], [ null, %154 ]
  %204 = ptrtoint %"class.WTF::StringImpl"* %203 to i64
  %205 = bitcast %"class.WTF::String"* %202 to i64*
  %206 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %202, i64 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  store i64 %204, i64* %205, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %200
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #7
  br label %222

222:                                              ; preds = %200, %218, %221
  br i1 %201, label %236, label %223

223:                                              ; preds = %222
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #7
  br label %236

236:                                              ; preds = %222, %232, %235
  %237 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %238 = load i8*, i8** %237, align 8
  store i8* null, i8** %237, align 8
  %239 = icmp eq i8* %238, null
  br i1 %239, label %241, label %240

240:                                              ; preds = %236
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %238) #7
  br label %241

241:                                              ; preds = %240, %236
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #7
  br label %257

257:                                              ; preds = %241, %253, %256
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %141) #7
  %258 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 3, i32 0
  %259 = bitcast %"class.v8::Name"** %258 to %"class.v8::Value"**
  %260 = load %"class.v8::Value"*, %"class.v8::Value"** %259, align 8
  %261 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %260) #7
  %262 = icmp eq %"class.v8::Value"* %261, null
  br i1 %262, label %285, label %291

263:                                              ; preds = %140
  %264 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %265 = load i8*, i8** %264, align 8
  store i8* null, i8** %264, align 8
  %266 = icmp eq i8* %265, null
  br i1 %266, label %268, label %267

267:                                              ; preds = %263
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %265) #7
  br label %268

268:                                              ; preds = %267, %263
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %284, label %271

271:                                              ; preds = %268
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  br i1 %275, label %278, label %280

278:                                              ; preds = %271
  %279 = add i32 %277, -1
  store i32 %279, i32* %276, align 4
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i32 [ %279, %278 ], [ %277, %271 ]
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #7
  br label %284

284:                                              ; preds = %268, %280, %283
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %141) #7
  br label %1244

285:                                              ; preds = %257
  %286 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %287 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %288 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %287, align 8
  %289 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %288, i64 5
  %290 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %289, align 8
  call void %290(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %286) #7
  br label %1244

291:                                              ; preds = %257
  %292 = bitcast %"class.v8::Value"* %261 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = and i64 %293, 3
  %295 = icmp eq i64 %294, 1
  br i1 %295, label %296, label %314

296:                                              ; preds = %291
  %297 = add i64 %293, -1
  %298 = inttoptr i64 %297 to i32*
  %299 = load i32, i32* %298, align 4
  %300 = and i64 %293, -4294967296
  %301 = zext i32 %299 to i64
  %302 = or i64 %300, %301
  %303 = add i64 %302, 7
  %304 = inttoptr i64 %303 to i16*
  %305 = load i16, i16* %304, align 2
  %306 = icmp eq i16 %305, 67
  br i1 %306, label %307, label %314

307:                                              ; preds = %296
  %308 = add i64 %293, 23
  %309 = inttoptr i64 %308 to i32*
  %310 = load i32, i32* %309, align 4
  %311 = and i32 %310, -2
  %312 = icmp eq i32 %311, 10
  br i1 %312, label %313, label %314

313:                                              ; preds = %307
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0)) #7
  br label %1244

314:                                              ; preds = %296, %291, %307
  %315 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %261, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %316 = load i32, i32* %100, align 8
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %1244

318:                                              ; preds = %314
  %319 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 8
  store double %315, double* %319, align 8
  %320 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 2
  store i8 1, i8* %320, align 1
  %321 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 5, i32 0
  %322 = bitcast %"class.v8::Name"** %321 to %"class.v8::Value"**
  %323 = load %"class.v8::Value"*, %"class.v8::Value"** %322, align 8
  %324 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %323) #7
  %325 = icmp eq %"class.v8::Value"* %324, null
  br i1 %325, label %326, label %332

326:                                              ; preds = %318
  %327 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %328 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %329 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %328, align 8
  %330 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %329, i64 5
  %331 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %330, align 8
  call void %331(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %327) #7
  br label %1244

332:                                              ; preds = %318
  %333 = bitcast %"class.v8::Value"* %324 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = and i64 %334, 3
  %336 = icmp eq i64 %335, 1
  br i1 %336, label %337, label %355

337:                                              ; preds = %332
  %338 = add i64 %334, -1
  %339 = inttoptr i64 %338 to i32*
  %340 = load i32, i32* %339, align 4
  %341 = and i64 %334, -4294967296
  %342 = zext i32 %340 to i64
  %343 = or i64 %341, %342
  %344 = add i64 %343, 7
  %345 = inttoptr i64 %344 to i16*
  %346 = load i16, i16* %345, align 2
  %347 = icmp eq i16 %346, 67
  br i1 %347, label %348, label %355

348:                                              ; preds = %337
  %349 = add i64 %334, 23
  %350 = inttoptr i64 %349 to i32*
  %351 = load i32, i32* %350, align 4
  %352 = and i32 %351, -2
  %353 = icmp eq i32 %352, 10
  br i1 %353, label %354, label %355

354:                                              ; preds = %348
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %1244

355:                                              ; preds = %337, %332, %348
  %356 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %324) #7
  br i1 %356, label %357, label %360, !prof !2

357:                                              ; preds = %355
  %358 = bitcast %"class.v8::Value"* %324 to %"class.v8::Uint32"*
  %359 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %358) #7
  br label %367

360:                                              ; preds = %355
  %361 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %324) #7
  br i1 %361, label %362, label %365, !prof !2

362:                                              ; preds = %360
  %363 = bitcast %"class.v8::Value"* %324 to %"class.v8::Int32"*
  %364 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %363) #7
  br label %367

365:                                              ; preds = %360
  %366 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %324, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %367

367:                                              ; preds = %357, %362, %365
  %368 = phi i32 [ %359, %357 ], [ %364, %362 ], [ %366, %365 ]
  %369 = load i32, i32* %100, align 8
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %1244

371:                                              ; preds = %367
  %372 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 10
  store i32 %368, i32* %372, align 8
  %373 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 3
  store i8 1, i8* %373, align 2
  %374 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 8, i32 0
  %375 = bitcast %"class.v8::Name"** %374 to %"class.v8::Value"**
  %376 = load %"class.v8::Value"*, %"class.v8::Value"** %375, align 8
  %377 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %376) #7
  %378 = icmp eq %"class.v8::Value"* %377, null
  br i1 %378, label %379, label %385

379:                                              ; preds = %371
  %380 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %381 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %382 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %381, align 8
  %383 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %382, i64 5
  %384 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %383, align 8
  call void %384(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %380) #7
  br label %1244

385:                                              ; preds = %371
  %386 = bitcast %"class.v8::Value"* %377 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = and i64 %387, 3
  %389 = icmp eq i64 %388, 1
  br i1 %389, label %390, label %408

390:                                              ; preds = %385
  %391 = add i64 %387, -1
  %392 = inttoptr i64 %391 to i32*
  %393 = load i32, i32* %392, align 4
  %394 = and i64 %387, -4294967296
  %395 = zext i32 %393 to i64
  %396 = or i64 %394, %395
  %397 = add i64 %396, 7
  %398 = inttoptr i64 %397 to i16*
  %399 = load i16, i16* %398, align 2
  %400 = icmp eq i16 %399, 67
  br i1 %400, label %401, label %408

401:                                              ; preds = %390
  %402 = add i64 %387, 23
  %403 = inttoptr i64 %402 to i32*
  %404 = load i32, i32* %403, align 4
  %405 = and i32 %404, -2
  %406 = icmp eq i32 %405, 10
  br i1 %406, label %407, label %408

407:                                              ; preds = %401
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0)) #7
  br label %1244

408:                                              ; preds = %390, %385, %401
  %409 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %377) #7
  br i1 %409, label %410, label %413, !prof !2

410:                                              ; preds = %408
  %411 = bitcast %"class.v8::Value"* %377 to %"class.v8::Uint32"*
  %412 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %411) #7
  br label %420

413:                                              ; preds = %408
  %414 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %377) #7
  br i1 %414, label %415, label %418, !prof !2

415:                                              ; preds = %413
  %416 = bitcast %"class.v8::Value"* %377 to %"class.v8::Int32"*
  %417 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %416) #7
  br label %420

418:                                              ; preds = %413
  %419 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %377, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %420

420:                                              ; preds = %410, %415, %418
  %421 = phi i32 [ %412, %410 ], [ %417, %415 ], [ %419, %418 ]
  %422 = load i32, i32* %100, align 8
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %1244

424:                                              ; preds = %420
  %425 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 14
  store i32 %421, i32* %425, align 8
  %426 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 4
  store i8 1, i8* %426, align 1
  %427 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase44is_media_capabilities_dynamic_range_enabled_E, align 1, !range !4
  %428 = icmp eq i8 %427, 0
  br i1 %428, label %1089, label %429

429:                                              ; preds = %424
  %430 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 1, i32 0
  %431 = bitcast %"class.v8::Name"** %430 to %"class.v8::Value"**
  %432 = load %"class.v8::Value"*, %"class.v8::Value"** %431, align 8
  %433 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %432) #7
  %434 = icmp eq %"class.v8::Value"* %433, null
  br i1 %434, label %435, label %441

435:                                              ; preds = %429
  %436 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %437 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %438 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %437, align 8
  %439 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %438, i64 5
  %440 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %439, align 8
  call void %440(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %436) #7
  br label %1244

441:                                              ; preds = %429
  %442 = bitcast %"class.v8::Value"* %433 to i64*
  %443 = load i64, i64* %442, align 8
  %444 = and i64 %443, 3
  %445 = icmp eq i64 %444, 1
  br i1 %445, label %446, label %463

446:                                              ; preds = %441
  %447 = add i64 %443, -1
  %448 = inttoptr i64 %447 to i32*
  %449 = load i32, i32* %448, align 4
  %450 = and i64 %443, -4294967296
  %451 = zext i32 %449 to i64
  %452 = or i64 %450, %451
  %453 = add i64 %452, 7
  %454 = inttoptr i64 %453 to i16*
  %455 = load i16, i16* %454, align 2
  %456 = icmp eq i16 %455, 67
  br i1 %456, label %457, label %463

457:                                              ; preds = %446
  %458 = add i64 %443, 23
  %459 = inttoptr i64 %458 to i32*
  %460 = load i32, i32* %459, align 4
  %461 = and i32 %460, -2
  %462 = icmp eq i32 %461, 10
  br i1 %462, label %649, label %463

463:                                              ; preds = %446, %441, %457
  %464 = bitcast %"class.blink::V8StringResource"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %464) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %464, i8 -86, i64 152, i1 false)
  %465 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %433, %"class.v8::Value"** %465, align 8
  %466 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 1
  store i32 0, i32* %466, align 8
  %467 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %467, align 8
  %468 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1
  %469 = bitcast %"class.std::__1::unique_ptr"* %468 to i64*
  store i64 0, i64* %469, align 8
  %470 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %7, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %470, label %471, label %625

471:                                              ; preds = %463
  %472 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %472) #7
  %473 = load %"class.v8::Value"*, %"class.v8::Value"** %465, align 8
  %474 = icmp eq %"class.v8::Value"* %473, null
  br i1 %474, label %479, label %475, !prof !3

475:                                              ; preds = %471
  %476 = bitcast %"class.v8::Value"* %473 to %"class.v8::String"*
  %477 = load i32, i32* %466, align 8
  %478 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %476, i32 %477) #7
  br label %499

479:                                              ; preds = %471
  %480 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %467, align 8
  %481 = icmp eq %"class.WTF::StringImpl"* %480, null
  br i1 %481, label %499, label %482

482:                                              ; preds = %479
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %480, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = load atomic i32, i32* %483 monotonic, align 4
  %485 = and i32 %484, 2
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %487, label %499

487:                                              ; preds = %482
  %488 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %480, i64 0, i32 0
  %489 = load i32, i32* %488, align 4
  %490 = zext i32 %489 to i33
  %491 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %490, i33 1) #7
  %492 = extractvalue { i33, i1 } %491, 1
  %493 = extractvalue { i33, i1 } %491, 0
  %494 = icmp slt i33 %493, 0
  %495 = or i1 %492, %494
  br i1 %495, label %496, label %497, !prof !3

496:                                              ; preds = %487
  call void @llvm.trap() #7
  unreachable

497:                                              ; preds = %487
  %498 = trunc i33 %493 to i32
  store i32 %498, i32* %488, align 4
  br label %499

499:                                              ; preds = %475, %479, %482, %497
  %500 = phi %"class.WTF::StringImpl"* [ %478, %475 ], [ null, %479 ], [ %480, %482 ], [ %480, %497 ]
  %501 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %500, %"class.WTF::StringImpl"** %501, align 8
  %502 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %502) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i64 10) #7
  %503 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %8, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink20V8VideoConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoConfigurationERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %504 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %505 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %504, align 8
  %506 = icmp eq %"class.WTF::StringImpl"* %505, null
  br i1 %506, label %520, label %507

507:                                              ; preds = %499
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %505, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = load atomic i32, i32* %508 monotonic, align 4
  %510 = and i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %505, i64 0, i32 0
  %513 = load i32, i32* %512, align 4
  br i1 %511, label %514, label %516

514:                                              ; preds = %507
  %515 = add i32 %513, -1
  store i32 %515, i32* %512, align 4
  br label %516

516:                                              ; preds = %514, %507
  %517 = phi i32 [ %515, %514 ], [ %513, %507 ]
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %519, label %520

519:                                              ; preds = %516
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %505) #7
  br label %520

520:                                              ; preds = %499, %516, %519
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %502) #7
  %521 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %501, align 8
  %522 = icmp eq %"class.WTF::StringImpl"* %521, null
  br i1 %522, label %536, label %523

523:                                              ; preds = %520
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %525 = load atomic i32, i32* %524 monotonic, align 4
  %526 = and i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 0
  %529 = load i32, i32* %528, align 4
  br i1 %527, label %530, label %532

530:                                              ; preds = %523
  %531 = add i32 %529, -1
  store i32 %531, i32* %528, align 4
  br label %532

532:                                              ; preds = %530, %523
  %533 = phi i32 [ %531, %530 ], [ %529, %523 ]
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %536

535:                                              ; preds = %532
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %521) #7
  br label %536

536:                                              ; preds = %520, %532, %535
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %472) #7
  br i1 %503, label %537, label %625

537:                                              ; preds = %536
  %538 = load %"class.v8::Value"*, %"class.v8::Value"** %465, align 8
  %539 = icmp eq %"class.v8::Value"* %538, null
  br i1 %539, label %540, label %564, !prof !3

540:                                              ; preds = %537
  %541 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %467, align 8
  %542 = icmp eq %"class.WTF::StringImpl"* %541, null
  br i1 %542, label %543, label %545

543:                                              ; preds = %540
  %544 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 6
  br label %589

545:                                              ; preds = %540
  %546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %541, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = load atomic i32, i32* %546 monotonic, align 4
  %548 = and i32 %547, 2
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %550, label %562

550:                                              ; preds = %545
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %541, i64 0, i32 0
  %552 = load i32, i32* %551, align 4
  %553 = zext i32 %552 to i33
  %554 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %553, i33 1) #7
  %555 = extractvalue { i33, i1 } %554, 1
  %556 = extractvalue { i33, i1 } %554, 0
  %557 = icmp slt i33 %556, 0
  %558 = or i1 %555, %557
  br i1 %558, label %559, label %560, !prof !3

559:                                              ; preds = %550
  call void @llvm.trap() #7
  unreachable

560:                                              ; preds = %550
  %561 = trunc i33 %556 to i32
  store i32 %561, i32* %551, align 4
  br label %562

562:                                              ; preds = %545, %560
  %563 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 6
  br label %570

564:                                              ; preds = %537
  %565 = bitcast %"class.v8::Value"* %538 to %"class.v8::String"*
  %566 = load i32, i32* %466, align 8
  %567 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %565, i32 %566) #7
  %568 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 6
  %569 = icmp eq %"class.WTF::StringImpl"* %567, null
  br i1 %569, label %589, label %570

570:                                              ; preds = %562, %564
  %571 = phi %"class.WTF::String"* [ %563, %562 ], [ %568, %564 ]
  %572 = phi %"class.WTF::StringImpl"* [ %541, %562 ], [ %567, %564 ]
  %573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %572, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %574 = load atomic i32, i32* %573 monotonic, align 4
  %575 = and i32 %574, 2
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %577, label %589

577:                                              ; preds = %570
  %578 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %572, i64 0, i32 0
  %579 = load i32, i32* %578, align 4
  %580 = zext i32 %579 to i33
  %581 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %580, i33 1) #7
  %582 = extractvalue { i33, i1 } %581, 1
  %583 = extractvalue { i33, i1 } %581, 0
  %584 = icmp slt i33 %583, 0
  %585 = or i1 %582, %584
  br i1 %585, label %586, label %587, !prof !3

586:                                              ; preds = %577
  call void @llvm.trap() #7
  unreachable

587:                                              ; preds = %577
  %588 = trunc i33 %583 to i32
  store i32 %588, i32* %578, align 4
  br label %589

589:                                              ; preds = %543, %587, %570, %564
  %590 = phi i1 [ false, %587 ], [ false, %570 ], [ true, %564 ], [ true, %543 ]
  %591 = phi %"class.WTF::String"* [ %571, %587 ], [ %571, %570 ], [ %568, %564 ], [ %544, %543 ]
  %592 = phi %"class.WTF::StringImpl"* [ %572, %587 ], [ %572, %570 ], [ null, %564 ], [ null, %543 ]
  %593 = ptrtoint %"class.WTF::StringImpl"* %592 to i64
  %594 = bitcast %"class.WTF::String"* %591 to i64*
  %595 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %591, i64 0, i32 0, i32 0
  %596 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %595, align 8
  store i64 %593, i64* %594, align 8
  %597 = icmp eq %"class.WTF::StringImpl"* %596, null
  br i1 %597, label %611, label %598

598:                                              ; preds = %589
  %599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %596, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %600 = load atomic i32, i32* %599 monotonic, align 4
  %601 = and i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %596, i64 0, i32 0
  %604 = load i32, i32* %603, align 4
  br i1 %602, label %605, label %607

605:                                              ; preds = %598
  %606 = add i32 %604, -1
  store i32 %606, i32* %603, align 4
  br label %607

607:                                              ; preds = %605, %598
  %608 = phi i32 [ %606, %605 ], [ %604, %598 ]
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %610, label %611

610:                                              ; preds = %607
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %596) #7
  br label %611

611:                                              ; preds = %589, %607, %610
  br i1 %590, label %625, label %612

612:                                              ; preds = %611
  %613 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %592, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %614 = load atomic i32, i32* %613 monotonic, align 4
  %615 = and i32 %614, 2
  %616 = icmp eq i32 %615, 0
  %617 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %592, i64 0, i32 0
  %618 = load i32, i32* %617, align 4
  br i1 %616, label %619, label %621

619:                                              ; preds = %612
  %620 = add i32 %618, -1
  store i32 %620, i32* %617, align 4
  br label %621

621:                                              ; preds = %619, %612
  %622 = phi i32 [ %620, %619 ], [ %618, %612 ]
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %624, label %625

624:                                              ; preds = %621
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %592) #7
  br label %625

625:                                              ; preds = %624, %621, %611, %536, %463
  %626 = phi i32 [ 1, %463 ], [ 1, %536 ], [ 0, %611 ], [ 0, %621 ], [ 0, %624 ]
  %627 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %628 = load i8*, i8** %627, align 8
  store i8* null, i8** %627, align 8
  %629 = icmp eq i8* %628, null
  br i1 %629, label %631, label %630

630:                                              ; preds = %625
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %628) #7
  br label %631

631:                                              ; preds = %630, %625
  %632 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %467, align 8
  %633 = icmp eq %"class.WTF::StringImpl"* %632, null
  br i1 %633, label %647, label %634

634:                                              ; preds = %631
  %635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %632, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load atomic i32, i32* %635 monotonic, align 4
  %637 = and i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %632, i64 0, i32 0
  %640 = load i32, i32* %639, align 4
  br i1 %638, label %641, label %643

641:                                              ; preds = %634
  %642 = add i32 %640, -1
  store i32 %642, i32* %639, align 4
  br label %643

643:                                              ; preds = %641, %634
  %644 = phi i32 [ %642, %641 ], [ %640, %634 ]
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %646, label %647

646:                                              ; preds = %643
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %632) #7
  br label %647

647:                                              ; preds = %631, %643, %646
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %464) #7
  %648 = icmp eq i32 %626, 0
  br i1 %648, label %649, label %1244

649:                                              ; preds = %647, %457
  %650 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 4, i32 0
  %651 = bitcast %"class.v8::Name"** %650 to %"class.v8::Value"**
  %652 = load %"class.v8::Value"*, %"class.v8::Value"** %651, align 8
  %653 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %652) #7
  %654 = icmp eq %"class.v8::Value"* %653, null
  br i1 %654, label %655, label %661

655:                                              ; preds = %649
  %656 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %657 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %658 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %657, align 8
  %659 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %658, i64 5
  %660 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %659, align 8
  call void %660(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %656) #7
  br label %1244

661:                                              ; preds = %649
  %662 = bitcast %"class.v8::Value"* %653 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = and i64 %663, 3
  %665 = icmp eq i64 %664, 1
  br i1 %665, label %666, label %683

666:                                              ; preds = %661
  %667 = add i64 %663, -1
  %668 = inttoptr i64 %667 to i32*
  %669 = load i32, i32* %668, align 4
  %670 = and i64 %663, -4294967296
  %671 = zext i32 %669 to i64
  %672 = or i64 %670, %671
  %673 = add i64 %672, 7
  %674 = inttoptr i64 %673 to i16*
  %675 = load i16, i16* %674, align 2
  %676 = icmp eq i16 %675, 67
  br i1 %676, label %677, label %683

677:                                              ; preds = %666
  %678 = add i64 %663, 23
  %679 = inttoptr i64 %678 to i32*
  %680 = load i32, i32* %679, align 4
  %681 = and i32 %680, -2
  %682 = icmp eq i32 %681, 10
  br i1 %682, label %869, label %683

683:                                              ; preds = %666, %661, %677
  %684 = bitcast %"class.blink::V8StringResource"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %684) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %684, i8 -86, i64 152, i1 false)
  %685 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %653, %"class.v8::Value"** %685, align 8
  %686 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 1
  store i32 0, i32* %686, align 8
  %687 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %687, align 8
  %688 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1
  %689 = bitcast %"class.std::__1::unique_ptr"* %688 to i64*
  store i64 0, i64* %689, align 8
  %690 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %10, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %690, label %691, label %845

691:                                              ; preds = %683
  %692 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %692) #7
  %693 = load %"class.v8::Value"*, %"class.v8::Value"** %685, align 8
  %694 = icmp eq %"class.v8::Value"* %693, null
  br i1 %694, label %699, label %695, !prof !3

695:                                              ; preds = %691
  %696 = bitcast %"class.v8::Value"* %693 to %"class.v8::String"*
  %697 = load i32, i32* %686, align 8
  %698 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %696, i32 %697) #7
  br label %719

699:                                              ; preds = %691
  %700 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %687, align 8
  %701 = icmp eq %"class.WTF::StringImpl"* %700, null
  br i1 %701, label %719, label %702

702:                                              ; preds = %699
  %703 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %700, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %704 = load atomic i32, i32* %703 monotonic, align 4
  %705 = and i32 %704, 2
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %707, label %719

707:                                              ; preds = %702
  %708 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %700, i64 0, i32 0
  %709 = load i32, i32* %708, align 4
  %710 = zext i32 %709 to i33
  %711 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %710, i33 1) #7
  %712 = extractvalue { i33, i1 } %711, 1
  %713 = extractvalue { i33, i1 } %711, 0
  %714 = icmp slt i33 %713, 0
  %715 = or i1 %712, %714
  br i1 %715, label %716, label %717, !prof !3

716:                                              ; preds = %707
  call void @llvm.trap() #7
  unreachable

717:                                              ; preds = %707
  %718 = trunc i33 %713 to i32
  store i32 %718, i32* %708, align 4
  br label %719

719:                                              ; preds = %695, %699, %702, %717
  %720 = phi %"class.WTF::StringImpl"* [ %698, %695 ], [ null, %699 ], [ %700, %702 ], [ %700, %717 ]
  %721 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %720, %"class.WTF::StringImpl"** %721, align 8
  %722 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %722) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i64 15) #7
  %723 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %11, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink20V8VideoConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoConfigurationERNS_14ExceptionStateEE12kValidValues_0, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %724 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %725 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %724, align 8
  %726 = icmp eq %"class.WTF::StringImpl"* %725, null
  br i1 %726, label %740, label %727

727:                                              ; preds = %719
  %728 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %725, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %729 = load atomic i32, i32* %728 monotonic, align 4
  %730 = and i32 %729, 2
  %731 = icmp eq i32 %730, 0
  %732 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %725, i64 0, i32 0
  %733 = load i32, i32* %732, align 4
  br i1 %731, label %734, label %736

734:                                              ; preds = %727
  %735 = add i32 %733, -1
  store i32 %735, i32* %732, align 4
  br label %736

736:                                              ; preds = %734, %727
  %737 = phi i32 [ %735, %734 ], [ %733, %727 ]
  %738 = icmp eq i32 %737, 0
  br i1 %738, label %739, label %740

739:                                              ; preds = %736
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %725) #7
  br label %740

740:                                              ; preds = %719, %736, %739
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %722) #7
  %741 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %721, align 8
  %742 = icmp eq %"class.WTF::StringImpl"* %741, null
  br i1 %742, label %756, label %743

743:                                              ; preds = %740
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %741, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %745 = load atomic i32, i32* %744 monotonic, align 4
  %746 = and i32 %745, 2
  %747 = icmp eq i32 %746, 0
  %748 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %741, i64 0, i32 0
  %749 = load i32, i32* %748, align 4
  br i1 %747, label %750, label %752

750:                                              ; preds = %743
  %751 = add i32 %749, -1
  store i32 %751, i32* %748, align 4
  br label %752

752:                                              ; preds = %750, %743
  %753 = phi i32 [ %751, %750 ], [ %749, %743 ]
  %754 = icmp eq i32 %753, 0
  br i1 %754, label %755, label %756

755:                                              ; preds = %752
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %741) #7
  br label %756

756:                                              ; preds = %740, %752, %755
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %692) #7
  br i1 %723, label %757, label %845

757:                                              ; preds = %756
  %758 = load %"class.v8::Value"*, %"class.v8::Value"** %685, align 8
  %759 = icmp eq %"class.v8::Value"* %758, null
  br i1 %759, label %760, label %784, !prof !3

760:                                              ; preds = %757
  %761 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %687, align 8
  %762 = icmp eq %"class.WTF::StringImpl"* %761, null
  br i1 %762, label %763, label %765

763:                                              ; preds = %760
  %764 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 9
  br label %809

765:                                              ; preds = %760
  %766 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %761, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %767 = load atomic i32, i32* %766 monotonic, align 4
  %768 = and i32 %767, 2
  %769 = icmp eq i32 %768, 0
  br i1 %769, label %770, label %782

770:                                              ; preds = %765
  %771 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %761, i64 0, i32 0
  %772 = load i32, i32* %771, align 4
  %773 = zext i32 %772 to i33
  %774 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %773, i33 1) #7
  %775 = extractvalue { i33, i1 } %774, 1
  %776 = extractvalue { i33, i1 } %774, 0
  %777 = icmp slt i33 %776, 0
  %778 = or i1 %775, %777
  br i1 %778, label %779, label %780, !prof !3

779:                                              ; preds = %770
  call void @llvm.trap() #7
  unreachable

780:                                              ; preds = %770
  %781 = trunc i33 %776 to i32
  store i32 %781, i32* %771, align 4
  br label %782

782:                                              ; preds = %765, %780
  %783 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 9
  br label %790

784:                                              ; preds = %757
  %785 = bitcast %"class.v8::Value"* %758 to %"class.v8::String"*
  %786 = load i32, i32* %686, align 8
  %787 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %785, i32 %786) #7
  %788 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 9
  %789 = icmp eq %"class.WTF::StringImpl"* %787, null
  br i1 %789, label %809, label %790

790:                                              ; preds = %782, %784
  %791 = phi %"class.WTF::String"* [ %783, %782 ], [ %788, %784 ]
  %792 = phi %"class.WTF::StringImpl"* [ %761, %782 ], [ %787, %784 ]
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %792, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %794 = load atomic i32, i32* %793 monotonic, align 4
  %795 = and i32 %794, 2
  %796 = icmp eq i32 %795, 0
  br i1 %796, label %797, label %809

797:                                              ; preds = %790
  %798 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %792, i64 0, i32 0
  %799 = load i32, i32* %798, align 4
  %800 = zext i32 %799 to i33
  %801 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %800, i33 1) #7
  %802 = extractvalue { i33, i1 } %801, 1
  %803 = extractvalue { i33, i1 } %801, 0
  %804 = icmp slt i33 %803, 0
  %805 = or i1 %802, %804
  br i1 %805, label %806, label %807, !prof !3

806:                                              ; preds = %797
  call void @llvm.trap() #7
  unreachable

807:                                              ; preds = %797
  %808 = trunc i33 %803 to i32
  store i32 %808, i32* %798, align 4
  br label %809

809:                                              ; preds = %763, %807, %790, %784
  %810 = phi i1 [ false, %807 ], [ false, %790 ], [ true, %784 ], [ true, %763 ]
  %811 = phi %"class.WTF::String"* [ %791, %807 ], [ %791, %790 ], [ %788, %784 ], [ %764, %763 ]
  %812 = phi %"class.WTF::StringImpl"* [ %792, %807 ], [ %792, %790 ], [ null, %784 ], [ null, %763 ]
  %813 = ptrtoint %"class.WTF::StringImpl"* %812 to i64
  %814 = bitcast %"class.WTF::String"* %811 to i64*
  %815 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %811, i64 0, i32 0, i32 0
  %816 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %815, align 8
  store i64 %813, i64* %814, align 8
  %817 = icmp eq %"class.WTF::StringImpl"* %816, null
  br i1 %817, label %831, label %818

818:                                              ; preds = %809
  %819 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %816, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %820 = load atomic i32, i32* %819 monotonic, align 4
  %821 = and i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %816, i64 0, i32 0
  %824 = load i32, i32* %823, align 4
  br i1 %822, label %825, label %827

825:                                              ; preds = %818
  %826 = add i32 %824, -1
  store i32 %826, i32* %823, align 4
  br label %827

827:                                              ; preds = %825, %818
  %828 = phi i32 [ %826, %825 ], [ %824, %818 ]
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %830, label %831

830:                                              ; preds = %827
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %816) #7
  br label %831

831:                                              ; preds = %809, %827, %830
  br i1 %810, label %845, label %832

832:                                              ; preds = %831
  %833 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %812, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %834 = load atomic i32, i32* %833 monotonic, align 4
  %835 = and i32 %834, 2
  %836 = icmp eq i32 %835, 0
  %837 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %812, i64 0, i32 0
  %838 = load i32, i32* %837, align 4
  br i1 %836, label %839, label %841

839:                                              ; preds = %832
  %840 = add i32 %838, -1
  store i32 %840, i32* %837, align 4
  br label %841

841:                                              ; preds = %839, %832
  %842 = phi i32 [ %840, %839 ], [ %838, %832 ]
  %843 = icmp eq i32 %842, 0
  br i1 %843, label %844, label %845

844:                                              ; preds = %841
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %812) #7
  br label %845

845:                                              ; preds = %844, %841, %831, %756, %683
  %846 = phi i32 [ 1, %683 ], [ 1, %756 ], [ 0, %831 ], [ 0, %841 ], [ 0, %844 ]
  %847 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %848 = load i8*, i8** %847, align 8
  store i8* null, i8** %847, align 8
  %849 = icmp eq i8* %848, null
  br i1 %849, label %851, label %850

850:                                              ; preds = %845
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %848) #7
  br label %851

851:                                              ; preds = %850, %845
  %852 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %687, align 8
  %853 = icmp eq %"class.WTF::StringImpl"* %852, null
  br i1 %853, label %867, label %854

854:                                              ; preds = %851
  %855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %852, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %856 = load atomic i32, i32* %855 monotonic, align 4
  %857 = and i32 %856, 2
  %858 = icmp eq i32 %857, 0
  %859 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %852, i64 0, i32 0
  %860 = load i32, i32* %859, align 4
  br i1 %858, label %861, label %863

861:                                              ; preds = %854
  %862 = add i32 %860, -1
  store i32 %862, i32* %859, align 4
  br label %863

863:                                              ; preds = %861, %854
  %864 = phi i32 [ %862, %861 ], [ %860, %854 ]
  %865 = icmp eq i32 %864, 0
  br i1 %865, label %866, label %867

866:                                              ; preds = %863
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %852) #7
  br label %867

867:                                              ; preds = %851, %863, %866
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %684) #7
  %868 = icmp eq i32 %846, 0
  br i1 %868, label %869, label %1244

869:                                              ; preds = %867, %677
  %870 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 7, i32 0
  %871 = bitcast %"class.v8::Name"** %870 to %"class.v8::Value"**
  %872 = load %"class.v8::Value"*, %"class.v8::Value"** %871, align 8
  %873 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %872) #7
  %874 = icmp eq %"class.v8::Value"* %873, null
  br i1 %874, label %875, label %881

875:                                              ; preds = %869
  %876 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %877 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %878 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %877, align 8
  %879 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %878, i64 5
  %880 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %879, align 8
  call void %880(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %876) #7
  br label %1244

881:                                              ; preds = %869
  %882 = bitcast %"class.v8::Value"* %873 to i64*
  %883 = load i64, i64* %882, align 8
  %884 = and i64 %883, 3
  %885 = icmp eq i64 %884, 1
  br i1 %885, label %886, label %903

886:                                              ; preds = %881
  %887 = add i64 %883, -1
  %888 = inttoptr i64 %887 to i32*
  %889 = load i32, i32* %888, align 4
  %890 = and i64 %883, -4294967296
  %891 = zext i32 %889 to i64
  %892 = or i64 %890, %891
  %893 = add i64 %892, 7
  %894 = inttoptr i64 %893 to i16*
  %895 = load i16, i16* %894, align 2
  %896 = icmp eq i16 %895, 67
  br i1 %896, label %897, label %903

897:                                              ; preds = %886
  %898 = add i64 %883, 23
  %899 = inttoptr i64 %898 to i32*
  %900 = load i32, i32* %899, align 4
  %901 = and i32 %900, -2
  %902 = icmp eq i32 %901, 10
  br i1 %902, label %1089, label %903

903:                                              ; preds = %886, %881, %897
  %904 = bitcast %"class.blink::V8StringResource"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %904) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %904, i8 -86, i64 152, i1 false)
  %905 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %873, %"class.v8::Value"** %905, align 8
  %906 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 1
  store i32 0, i32* %906, align 8
  %907 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %907, align 8
  %908 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 3, i32 1
  %909 = bitcast %"class.std::__1::unique_ptr"* %908 to i64*
  store i64 0, i64* %909, align 8
  %910 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %13, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %910, label %911, label %1065

911:                                              ; preds = %903
  %912 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %912) #7
  %913 = load %"class.v8::Value"*, %"class.v8::Value"** %905, align 8
  %914 = icmp eq %"class.v8::Value"* %913, null
  br i1 %914, label %919, label %915, !prof !3

915:                                              ; preds = %911
  %916 = bitcast %"class.v8::Value"* %913 to %"class.v8::String"*
  %917 = load i32, i32* %906, align 8
  %918 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %916, i32 %917) #7
  br label %939

919:                                              ; preds = %911
  %920 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %907, align 8
  %921 = icmp eq %"class.WTF::StringImpl"* %920, null
  br i1 %921, label %939, label %922

922:                                              ; preds = %919
  %923 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %920, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %924 = load atomic i32, i32* %923 monotonic, align 4
  %925 = and i32 %924, 2
  %926 = icmp eq i32 %925, 0
  br i1 %926, label %927, label %939

927:                                              ; preds = %922
  %928 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %920, i64 0, i32 0
  %929 = load i32, i32* %928, align 4
  %930 = zext i32 %929 to i33
  %931 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %930, i33 1) #7
  %932 = extractvalue { i33, i1 } %931, 1
  %933 = extractvalue { i33, i1 } %931, 0
  %934 = icmp slt i33 %933, 0
  %935 = or i1 %932, %934
  br i1 %935, label %936, label %937, !prof !3

936:                                              ; preds = %927
  call void @llvm.trap() #7
  unreachable

937:                                              ; preds = %927
  %938 = trunc i33 %933 to i32
  store i32 %938, i32* %928, align 4
  br label %939

939:                                              ; preds = %915, %919, %922, %937
  %940 = phi %"class.WTF::StringImpl"* [ %918, %915 ], [ null, %919 ], [ %920, %922 ], [ %920, %937 ]
  %941 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %940, %"class.WTF::StringImpl"** %941, align 8
  %942 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %942) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0), i64 16) #7
  %943 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %14, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink20V8VideoConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoConfigurationERNS_14ExceptionStateEE12kValidValues_1, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %944 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %945 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %944, align 8
  %946 = icmp eq %"class.WTF::StringImpl"* %945, null
  br i1 %946, label %960, label %947

947:                                              ; preds = %939
  %948 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %945, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %949 = load atomic i32, i32* %948 monotonic, align 4
  %950 = and i32 %949, 2
  %951 = icmp eq i32 %950, 0
  %952 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %945, i64 0, i32 0
  %953 = load i32, i32* %952, align 4
  br i1 %951, label %954, label %956

954:                                              ; preds = %947
  %955 = add i32 %953, -1
  store i32 %955, i32* %952, align 4
  br label %956

956:                                              ; preds = %954, %947
  %957 = phi i32 [ %955, %954 ], [ %953, %947 ]
  %958 = icmp eq i32 %957, 0
  br i1 %958, label %959, label %960

959:                                              ; preds = %956
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %945) #7
  br label %960

960:                                              ; preds = %939, %956, %959
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %942) #7
  %961 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %941, align 8
  %962 = icmp eq %"class.WTF::StringImpl"* %961, null
  br i1 %962, label %976, label %963

963:                                              ; preds = %960
  %964 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %961, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %965 = load atomic i32, i32* %964 monotonic, align 4
  %966 = and i32 %965, 2
  %967 = icmp eq i32 %966, 0
  %968 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %961, i64 0, i32 0
  %969 = load i32, i32* %968, align 4
  br i1 %967, label %970, label %972

970:                                              ; preds = %963
  %971 = add i32 %969, -1
  store i32 %971, i32* %968, align 4
  br label %972

972:                                              ; preds = %970, %963
  %973 = phi i32 [ %971, %970 ], [ %969, %963 ]
  %974 = icmp eq i32 %973, 0
  br i1 %974, label %975, label %976

975:                                              ; preds = %972
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %961) #7
  br label %976

976:                                              ; preds = %960, %972, %975
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %912) #7
  br i1 %943, label %977, label %1065

977:                                              ; preds = %976
  %978 = load %"class.v8::Value"*, %"class.v8::Value"** %905, align 8
  %979 = icmp eq %"class.v8::Value"* %978, null
  br i1 %979, label %980, label %1004, !prof !3

980:                                              ; preds = %977
  %981 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %907, align 8
  %982 = icmp eq %"class.WTF::StringImpl"* %981, null
  br i1 %982, label %983, label %985

983:                                              ; preds = %980
  %984 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 13
  br label %1029

985:                                              ; preds = %980
  %986 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %981, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %987 = load atomic i32, i32* %986 monotonic, align 4
  %988 = and i32 %987, 2
  %989 = icmp eq i32 %988, 0
  br i1 %989, label %990, label %1002

990:                                              ; preds = %985
  %991 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %981, i64 0, i32 0
  %992 = load i32, i32* %991, align 4
  %993 = zext i32 %992 to i33
  %994 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %993, i33 1) #7
  %995 = extractvalue { i33, i1 } %994, 1
  %996 = extractvalue { i33, i1 } %994, 0
  %997 = icmp slt i33 %996, 0
  %998 = or i1 %995, %997
  br i1 %998, label %999, label %1000, !prof !3

999:                                              ; preds = %990
  call void @llvm.trap() #7
  unreachable

1000:                                             ; preds = %990
  %1001 = trunc i33 %996 to i32
  store i32 %1001, i32* %991, align 4
  br label %1002

1002:                                             ; preds = %985, %1000
  %1003 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 13
  br label %1010

1004:                                             ; preds = %977
  %1005 = bitcast %"class.v8::Value"* %978 to %"class.v8::String"*
  %1006 = load i32, i32* %906, align 8
  %1007 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1005, i32 %1006) #7
  %1008 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 13
  %1009 = icmp eq %"class.WTF::StringImpl"* %1007, null
  br i1 %1009, label %1029, label %1010

1010:                                             ; preds = %1002, %1004
  %1011 = phi %"class.WTF::String"* [ %1003, %1002 ], [ %1008, %1004 ]
  %1012 = phi %"class.WTF::StringImpl"* [ %981, %1002 ], [ %1007, %1004 ]
  %1013 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1012, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1014 = load atomic i32, i32* %1013 monotonic, align 4
  %1015 = and i32 %1014, 2
  %1016 = icmp eq i32 %1015, 0
  br i1 %1016, label %1017, label %1029

1017:                                             ; preds = %1010
  %1018 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1012, i64 0, i32 0
  %1019 = load i32, i32* %1018, align 4
  %1020 = zext i32 %1019 to i33
  %1021 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1020, i33 1) #7
  %1022 = extractvalue { i33, i1 } %1021, 1
  %1023 = extractvalue { i33, i1 } %1021, 0
  %1024 = icmp slt i33 %1023, 0
  %1025 = or i1 %1022, %1024
  br i1 %1025, label %1026, label %1027, !prof !3

1026:                                             ; preds = %1017
  call void @llvm.trap() #7
  unreachable

1027:                                             ; preds = %1017
  %1028 = trunc i33 %1023 to i32
  store i32 %1028, i32* %1018, align 4
  br label %1029

1029:                                             ; preds = %983, %1027, %1010, %1004
  %1030 = phi i1 [ false, %1027 ], [ false, %1010 ], [ true, %1004 ], [ true, %983 ]
  %1031 = phi %"class.WTF::String"* [ %1011, %1027 ], [ %1011, %1010 ], [ %1008, %1004 ], [ %984, %983 ]
  %1032 = phi %"class.WTF::StringImpl"* [ %1012, %1027 ], [ %1012, %1010 ], [ null, %1004 ], [ null, %983 ]
  %1033 = ptrtoint %"class.WTF::StringImpl"* %1032 to i64
  %1034 = bitcast %"class.WTF::String"* %1031 to i64*
  %1035 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1031, i64 0, i32 0, i32 0
  %1036 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1035, align 8
  store i64 %1033, i64* %1034, align 8
  %1037 = icmp eq %"class.WTF::StringImpl"* %1036, null
  br i1 %1037, label %1051, label %1038

1038:                                             ; preds = %1029
  %1039 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1036, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1040 = load atomic i32, i32* %1039 monotonic, align 4
  %1041 = and i32 %1040, 2
  %1042 = icmp eq i32 %1041, 0
  %1043 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1036, i64 0, i32 0
  %1044 = load i32, i32* %1043, align 4
  br i1 %1042, label %1045, label %1047

1045:                                             ; preds = %1038
  %1046 = add i32 %1044, -1
  store i32 %1046, i32* %1043, align 4
  br label %1047

1047:                                             ; preds = %1045, %1038
  %1048 = phi i32 [ %1046, %1045 ], [ %1044, %1038 ]
  %1049 = icmp eq i32 %1048, 0
  br i1 %1049, label %1050, label %1051

1050:                                             ; preds = %1047
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1036) #7
  br label %1051

1051:                                             ; preds = %1029, %1047, %1050
  br i1 %1030, label %1065, label %1052

1052:                                             ; preds = %1051
  %1053 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1032, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1054 = load atomic i32, i32* %1053 monotonic, align 4
  %1055 = and i32 %1054, 2
  %1056 = icmp eq i32 %1055, 0
  %1057 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1032, i64 0, i32 0
  %1058 = load i32, i32* %1057, align 4
  br i1 %1056, label %1059, label %1061

1059:                                             ; preds = %1052
  %1060 = add i32 %1058, -1
  store i32 %1060, i32* %1057, align 4
  br label %1061

1061:                                             ; preds = %1059, %1052
  %1062 = phi i32 [ %1060, %1059 ], [ %1058, %1052 ]
  %1063 = icmp eq i32 %1062, 0
  br i1 %1063, label %1064, label %1065

1064:                                             ; preds = %1061
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1032) #7
  br label %1065

1065:                                             ; preds = %1064, %1061, %1051, %976, %903
  %1066 = phi i32 [ 1, %903 ], [ 1, %976 ], [ 0, %1051 ], [ 0, %1061 ], [ 0, %1064 ]
  %1067 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1068 = load i8*, i8** %1067, align 8
  store i8* null, i8** %1067, align 8
  %1069 = icmp eq i8* %1068, null
  br i1 %1069, label %1071, label %1070

1070:                                             ; preds = %1065
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1068) #7
  br label %1071

1071:                                             ; preds = %1070, %1065
  %1072 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %907, align 8
  %1073 = icmp eq %"class.WTF::StringImpl"* %1072, null
  br i1 %1073, label %1087, label %1074

1074:                                             ; preds = %1071
  %1075 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1072, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1076 = load atomic i32, i32* %1075 monotonic, align 4
  %1077 = and i32 %1076, 2
  %1078 = icmp eq i32 %1077, 0
  %1079 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1072, i64 0, i32 0
  %1080 = load i32, i32* %1079, align 4
  br i1 %1078, label %1081, label %1083

1081:                                             ; preds = %1074
  %1082 = add i32 %1080, -1
  store i32 %1082, i32* %1079, align 4
  br label %1083

1083:                                             ; preds = %1081, %1074
  %1084 = phi i32 [ %1082, %1081 ], [ %1080, %1074 ]
  %1085 = icmp eq i32 %1084, 0
  br i1 %1085, label %1086, label %1087

1086:                                             ; preds = %1083
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1072) #7
  br label %1087

1087:                                             ; preds = %1071, %1083, %1086
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %904) #7
  %1088 = icmp eq i32 %1066, 0
  br i1 %1088, label %1089, label %1244

1089:                                             ; preds = %424, %1087, %897
  %1090 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_media_capabilities_web_rtc_enabled_E, align 1, !range !4
  %1091 = icmp eq i8 %1090, 0
  br i1 %1091, label %1244, label %1092

1092:                                             ; preds = %1089
  %1093 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 6, i32 0
  %1094 = bitcast %"class.v8::Name"** %1093 to %"class.v8::Value"**
  %1095 = load %"class.v8::Value"*, %"class.v8::Value"** %1094, align 8
  %1096 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1095) #7
  %1097 = icmp eq %"class.v8::Value"* %1096, null
  br i1 %1097, label %1098, label %1104

1098:                                             ; preds = %1092
  %1099 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1100 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1101 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1100, align 8
  %1102 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1101, i64 5
  %1103 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1102, align 8
  call void %1103(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1099) #7
  br label %1244

1104:                                             ; preds = %1092
  %1105 = bitcast %"class.v8::Value"* %1096 to i64*
  %1106 = load i64, i64* %1105, align 8
  %1107 = and i64 %1106, 3
  %1108 = icmp eq i64 %1107, 1
  br i1 %1108, label %1109, label %1126

1109:                                             ; preds = %1104
  %1110 = add i64 %1106, -1
  %1111 = inttoptr i64 %1110 to i32*
  %1112 = load i32, i32* %1111, align 4
  %1113 = and i64 %1106, -4294967296
  %1114 = zext i32 %1112 to i64
  %1115 = or i64 %1113, %1114
  %1116 = add i64 %1115, 7
  %1117 = inttoptr i64 %1116 to i16*
  %1118 = load i16, i16* %1117, align 2
  %1119 = icmp eq i16 %1118, 67
  br i1 %1119, label %1120, label %1126

1120:                                             ; preds = %1109
  %1121 = add i64 %1106, 23
  %1122 = inttoptr i64 %1121 to i32*
  %1123 = load i32, i32* %1122, align 4
  %1124 = and i32 %1123, -2
  %1125 = icmp eq i32 %1124, 10
  br i1 %1125, label %1244, label %1126

1126:                                             ; preds = %1109, %1104, %1120
  %1127 = bitcast %"class.blink::V8StringResource"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1127) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1127, i8 -86, i64 152, i1 false)
  %1128 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1096, %"class.v8::Value"** %1128, align 8
  %1129 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 1
  store i32 0, i32* %1129, align 8
  %1130 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1130, align 8
  %1131 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 3, i32 1
  %1132 = bitcast %"class.std::__1::unique_ptr"* %1131 to i64*
  store i64 0, i64* %1132, align 8
  %1133 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %16, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1133, label %1134, label %1222

1134:                                             ; preds = %1126
  %1135 = load %"class.v8::Value"*, %"class.v8::Value"** %1128, align 8
  %1136 = icmp eq %"class.v8::Value"* %1135, null
  br i1 %1136, label %1137, label %1161, !prof !3

1137:                                             ; preds = %1134
  %1138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1130, align 8
  %1139 = icmp eq %"class.WTF::StringImpl"* %1138, null
  br i1 %1139, label %1140, label %1142

1140:                                             ; preds = %1137
  %1141 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 12
  br label %1186

1142:                                             ; preds = %1137
  %1143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1144 = load atomic i32, i32* %1143 monotonic, align 4
  %1145 = and i32 %1144, 2
  %1146 = icmp eq i32 %1145, 0
  br i1 %1146, label %1147, label %1159

1147:                                             ; preds = %1142
  %1148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1138, i64 0, i32 0
  %1149 = load i32, i32* %1148, align 4
  %1150 = zext i32 %1149 to i33
  %1151 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1150, i33 1) #7
  %1152 = extractvalue { i33, i1 } %1151, 1
  %1153 = extractvalue { i33, i1 } %1151, 0
  %1154 = icmp slt i33 %1153, 0
  %1155 = or i1 %1152, %1154
  br i1 %1155, label %1156, label %1157, !prof !3

1156:                                             ; preds = %1147
  call void @llvm.trap() #7
  unreachable

1157:                                             ; preds = %1147
  %1158 = trunc i33 %1153 to i32
  store i32 %1158, i32* %1148, align 4
  br label %1159

1159:                                             ; preds = %1142, %1157
  %1160 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 12
  br label %1167

1161:                                             ; preds = %1134
  %1162 = bitcast %"class.v8::Value"* %1135 to %"class.v8::String"*
  %1163 = load i32, i32* %1129, align 8
  %1164 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1162, i32 %1163) #7
  %1165 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %2, i64 0, i32 12
  %1166 = icmp eq %"class.WTF::StringImpl"* %1164, null
  br i1 %1166, label %1186, label %1167

1167:                                             ; preds = %1159, %1161
  %1168 = phi %"class.WTF::String"* [ %1160, %1159 ], [ %1165, %1161 ]
  %1169 = phi %"class.WTF::StringImpl"* [ %1138, %1159 ], [ %1164, %1161 ]
  %1170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1171 = load atomic i32, i32* %1170 monotonic, align 4
  %1172 = and i32 %1171, 2
  %1173 = icmp eq i32 %1172, 0
  br i1 %1173, label %1174, label %1186

1174:                                             ; preds = %1167
  %1175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1169, i64 0, i32 0
  %1176 = load i32, i32* %1175, align 4
  %1177 = zext i32 %1176 to i33
  %1178 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1177, i33 1) #7
  %1179 = extractvalue { i33, i1 } %1178, 1
  %1180 = extractvalue { i33, i1 } %1178, 0
  %1181 = icmp slt i33 %1180, 0
  %1182 = or i1 %1179, %1181
  br i1 %1182, label %1183, label %1184, !prof !3

1183:                                             ; preds = %1174
  call void @llvm.trap() #7
  unreachable

1184:                                             ; preds = %1174
  %1185 = trunc i33 %1180 to i32
  store i32 %1185, i32* %1175, align 4
  br label %1186

1186:                                             ; preds = %1140, %1184, %1167, %1161
  %1187 = phi i1 [ false, %1184 ], [ false, %1167 ], [ true, %1161 ], [ true, %1140 ]
  %1188 = phi %"class.WTF::String"* [ %1168, %1184 ], [ %1168, %1167 ], [ %1165, %1161 ], [ %1141, %1140 ]
  %1189 = phi %"class.WTF::StringImpl"* [ %1169, %1184 ], [ %1169, %1167 ], [ null, %1161 ], [ null, %1140 ]
  %1190 = ptrtoint %"class.WTF::StringImpl"* %1189 to i64
  %1191 = bitcast %"class.WTF::String"* %1188 to i64*
  %1192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1188, i64 0, i32 0, i32 0
  %1193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1192, align 8
  store i64 %1190, i64* %1191, align 8
  %1194 = icmp eq %"class.WTF::StringImpl"* %1193, null
  br i1 %1194, label %1208, label %1195

1195:                                             ; preds = %1186
  %1196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1197 = load atomic i32, i32* %1196 monotonic, align 4
  %1198 = and i32 %1197, 2
  %1199 = icmp eq i32 %1198, 0
  %1200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1193, i64 0, i32 0
  %1201 = load i32, i32* %1200, align 4
  br i1 %1199, label %1202, label %1204

1202:                                             ; preds = %1195
  %1203 = add i32 %1201, -1
  store i32 %1203, i32* %1200, align 4
  br label %1204

1204:                                             ; preds = %1202, %1195
  %1205 = phi i32 [ %1203, %1202 ], [ %1201, %1195 ]
  %1206 = icmp eq i32 %1205, 0
  br i1 %1206, label %1207, label %1208

1207:                                             ; preds = %1204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1193) #7
  br label %1208

1208:                                             ; preds = %1186, %1204, %1207
  br i1 %1187, label %1222, label %1209

1209:                                             ; preds = %1208
  %1210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1211 = load atomic i32, i32* %1210 monotonic, align 4
  %1212 = and i32 %1211, 2
  %1213 = icmp eq i32 %1212, 0
  %1214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1189, i64 0, i32 0
  %1215 = load i32, i32* %1214, align 4
  br i1 %1213, label %1216, label %1218

1216:                                             ; preds = %1209
  %1217 = add i32 %1215, -1
  store i32 %1217, i32* %1214, align 4
  br label %1218

1218:                                             ; preds = %1216, %1209
  %1219 = phi i32 [ %1217, %1216 ], [ %1215, %1209 ]
  %1220 = icmp eq i32 %1219, 0
  br i1 %1220, label %1221, label %1222

1221:                                             ; preds = %1218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1189) #7
  br label %1222

1222:                                             ; preds = %1221, %1218, %1208, %1126
  %1223 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1224 = load i8*, i8** %1223, align 8
  store i8* null, i8** %1223, align 8
  %1225 = icmp eq i8* %1224, null
  br i1 %1225, label %1227, label %1226

1226:                                             ; preds = %1222
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1224) #7
  br label %1227

1227:                                             ; preds = %1226, %1222
  %1228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1130, align 8
  %1229 = icmp eq %"class.WTF::StringImpl"* %1228, null
  br i1 %1229, label %1243, label %1230

1230:                                             ; preds = %1227
  %1231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1232 = load atomic i32, i32* %1231 monotonic, align 4
  %1233 = and i32 %1232, 2
  %1234 = icmp eq i32 %1233, 0
  %1235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1228, i64 0, i32 0
  %1236 = load i32, i32* %1235, align 4
  br i1 %1234, label %1237, label %1239

1237:                                             ; preds = %1230
  %1238 = add i32 %1236, -1
  store i32 %1238, i32* %1235, align 4
  br label %1239

1239:                                             ; preds = %1237, %1230
  %1240 = phi i32 [ %1238, %1237 ], [ %1236, %1230 ]
  %1241 = icmp eq i32 %1240, 0
  br i1 %1241, label %1242, label %1243

1242:                                             ; preds = %1239
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1228) #7
  br label %1243

1243:                                             ; preds = %1227, %1239, %1242
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1127) #7
  br label %1244

1244:                                             ; preds = %1089, %420, %367, %314, %98, %1087, %875, %867, %655, %647, %435, %111, %139, %284, %326, %354, %1098, %1120, %1243, %407, %379, %313, %285, %85, %57
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %51) #7
  br label %1245

1245:                                             ; preds = %1244, %39, %42
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #7
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #7
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #7
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #7
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #7
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink18VideoConfiguration8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::VideoConfiguration"* nocapture readonly, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink22toV8VideoConfigurationEPKNS_18VideoConfigurationEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::VideoConfiguration"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* undef, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22toV8VideoConfigurationEPKNS_18VideoConfigurationEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::VideoConfiguration"* nocapture readonly, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %11 = add i64 %10, 8
  %12 = inttoptr i64 %11 to %"class.blink::V8PerIsolateData"**
  %13 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %12, align 8
  %14 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %13, i8* bitcast ([9 x i8*]* @_ZZN5blinkL31eternalV8VideoConfigurationKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.314"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.314"*)) #7
  %15 = extractvalue { i64, %"class.v8::Eternal"* } %14, 1
  %16 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %17 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %0, i64 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %0, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %22) #7
  %24 = bitcast %"class.v8::Integer"* %23 to %"class.v8::Value"*
  %25 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 0, i32 0
  %26 = load %"class.v8::Name"*, %"class.v8::Name"** %25, align 8
  %27 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %26, %"class.v8::Value"* %24) #7
  %28 = trunc i16 %27 to i8
  %29 = icmp ne i8 %28, 0
  %30 = icmp ugt i16 %27, 255
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %197

32:                                               ; preds = %4, %20
  %33 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %0, i64 0, i32 7, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %54, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #7
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %40, i32* %44, align 8
  %45 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #7
  %46 = bitcast %"class.v8::String"* %45 to %"class.v8::Value"*
  %47 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 2, i32 0
  %48 = load %"class.v8::Name"*, %"class.v8::Name"** %47, align 8
  %49 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %48, %"class.v8::Value"* %46) #7
  %50 = trunc i16 %49 to i8
  %51 = icmp ne i8 %50, 0
  %52 = icmp ugt i16 %49, 255
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %197

54:                                               ; preds = %32, %36
  %55 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %0, i64 0, i32 2
  %56 = load i8, i8* %55, align 1, !range !4
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %70, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %0, i64 0, i32 8
  %60 = load double, double* %59, align 8
  %61 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %60) #7
  %62 = bitcast %"class.v8::Number"* %61 to %"class.v8::Value"*
  %63 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 3, i32 0
  %64 = load %"class.v8::Name"*, %"class.v8::Name"** %63, align 8
  %65 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %64, %"class.v8::Value"* %62) #7
  %66 = trunc i16 %65 to i8
  %67 = icmp ne i8 %66, 0
  %68 = icmp ugt i16 %65, 255
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %197

70:                                               ; preds = %54, %58
  %71 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %0, i64 0, i32 3
  %72 = load i8, i8* %71, align 2, !range !4
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %86, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %0, i64 0, i32 10
  %76 = load i32, i32* %75, align 8
  %77 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %76) #7
  %78 = bitcast %"class.v8::Integer"* %77 to %"class.v8::Value"*
  %79 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 5, i32 0
  %80 = load %"class.v8::Name"*, %"class.v8::Name"** %79, align 8
  %81 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %80, %"class.v8::Value"* %78) #7
  %82 = trunc i16 %81 to i8
  %83 = icmp ne i8 %82, 0
  %84 = icmp ugt i16 %81, 255
  %85 = and i1 %84, %83
  br i1 %85, label %86, label %197

86:                                               ; preds = %70, %74
  %87 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %0, i64 0, i32 4
  %88 = load i8, i8* %87, align 1, !range !4
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %102, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %0, i64 0, i32 14
  %92 = load i32, i32* %91, align 8
  %93 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %92) #7
  %94 = bitcast %"class.v8::Integer"* %93 to %"class.v8::Value"*
  %95 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 8, i32 0
  %96 = load %"class.v8::Name"*, %"class.v8::Name"** %95, align 8
  %97 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %96, %"class.v8::Value"* %94) #7
  %98 = trunc i16 %97 to i8
  %99 = icmp ne i8 %98, 0
  %100 = icmp ugt i16 %97, 255
  %101 = and i1 %100, %99
  br i1 %101, label %102, label %197

102:                                              ; preds = %86, %90
  %103 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase44is_media_capabilities_dynamic_range_enabled_E, align 1, !range !4
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %171, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %0, i64 0, i32 6, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %127, label %109

109:                                              ; preds = %105
  %110 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #7
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 1
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %116 = bitcast i8** %115 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %116, align 8
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %113, i32* %117, align 8
  %118 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #7
  %119 = bitcast %"class.v8::String"* %118 to %"class.v8::Value"*
  %120 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 1, i32 0
  %121 = load %"class.v8::Name"*, %"class.v8::Name"** %120, align 8
  %122 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %121, %"class.v8::Value"* %119) #7
  %123 = trunc i16 %122 to i8
  %124 = icmp ne i8 %123, 0
  %125 = icmp ugt i16 %122, 255
  %126 = and i1 %125, %124
  br i1 %126, label %127, label %197

127:                                              ; preds = %105, %109
  %128 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %0, i64 0, i32 9, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %149, label %131

131:                                              ; preds = %127
  %132 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #7
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"** %133, align 8
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %138 = bitcast i8** %137 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %136, %"class.WTF::StringImpl"** %138, align 8
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %135, i32* %139, align 8
  %140 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #7
  %141 = bitcast %"class.v8::String"* %140 to %"class.v8::Value"*
  %142 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 4, i32 0
  %143 = load %"class.v8::Name"*, %"class.v8::Name"** %142, align 8
  %144 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %143, %"class.v8::Value"* %141) #7
  %145 = trunc i16 %144 to i8
  %146 = icmp ne i8 %145, 0
  %147 = icmp ugt i16 %144, 255
  %148 = and i1 %147, %146
  br i1 %148, label %149, label %197

149:                                              ; preds = %127, %131
  %150 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %0, i64 0, i32 13, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %171, label %153

153:                                              ; preds = %149
  %154 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #7
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %155, align 8
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 1
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %160 = bitcast i8** %159 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %160, align 8
  %161 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %157, i32* %161, align 8
  %162 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154) #7
  %163 = bitcast %"class.v8::String"* %162 to %"class.v8::Value"*
  %164 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 7, i32 0
  %165 = load %"class.v8::Name"*, %"class.v8::Name"** %164, align 8
  %166 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %165, %"class.v8::Value"* %163) #7
  %167 = trunc i16 %166 to i8
  %168 = icmp ne i8 %167, 0
  %169 = icmp ugt i16 %166, 255
  %170 = and i1 %169, %168
  br i1 %170, label %171, label %197

171:                                              ; preds = %149, %102, %153
  %172 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_media_capabilities_web_rtc_enabled_E, align 1, !range !4
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %197, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.blink::VideoConfiguration", %"class.blink::VideoConfiguration"* %0, i64 0, i32 12, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %196, label %178

178:                                              ; preds = %174
  %179 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #7
  %180 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %176, %"class.WTF::StringImpl"** %180, align 8
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 1
  %184 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %185 = bitcast i8** %184 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %185, align 8
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %182, i32* %186, align 8
  %187 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #7
  %188 = bitcast %"class.v8::String"* %187 to %"class.v8::Value"*
  %189 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 6, i32 0
  %190 = load %"class.v8::Name"*, %"class.v8::Name"** %189, align 8
  %191 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %190, %"class.v8::Value"* %188) #7
  %192 = trunc i16 %191 to i8
  %193 = icmp ne i8 %192, 0
  %194 = icmp ugt i16 %191, 255
  %195 = and i1 %194, %193
  br i1 %195, label %196, label %197

196:                                              ; preds = %174, %178
  br label %197

197:                                              ; preds = %171, %153, %131, %109, %36, %74, %178, %196, %90, %58, %20
  %198 = phi i1 [ false, %20 ], [ false, %36 ], [ false, %58 ], [ false, %74 ], [ false, %90 ], [ true, %196 ], [ true, %171 ], [ false, %178 ], [ false, %109 ], [ false, %131 ], [ false, %153 ]
  ret i1 %198
}

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::VideoConfiguration"* @_ZN5blink17NativeValueTraitsINS_18VideoConfigurationEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 80) #7
  %5 = bitcast i8* %4 to %"class.blink::VideoConfiguration"*
  tail call void @_ZN5blink18VideoConfigurationC1Ev(%"class.blink::VideoConfiguration"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink20V8VideoConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::VideoConfiguration"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::VideoConfiguration"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.314"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare void @_ZN5blink18VideoConfigurationC1Ev(%"class.blink::VideoConfiguration"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !2

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !2

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
