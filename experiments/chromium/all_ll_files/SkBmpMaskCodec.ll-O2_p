; ModuleID = '../../third_party/skia/src/codec/SkBmpMaskCodec.cpp'
source_filename = "../../third_party/skia/src/codec/SkBmpMaskCodec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkBmpMaskCodec = type { %class.SkBmpBaseCodec, %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32" }
%class.SkBmpBaseCodec = type { %class.SkBmpCodec, %"class.std::__1::unique_ptr.22" }
%class.SkBmpCodec = type { %class.SkCodec.base, i16, i32, i64, %"class.std::__1::unique_ptr.16" }
%class.SkCodec.base = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.3", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8 }>
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.SkStream* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.9, i32, i32 }
%class.sk_sp.9 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.10, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.10 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.0, [8 x i8] }
%struct.anon.0 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i32* }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i8* }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.SkMasks* }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.SkMaskSwizzler* }
%class.SkMaskSwizzler = type <{ %class.SkSampler.base, [4 x i8], %class.SkMasks*, void (i8*, i8*, i32, %class.SkMasks*, i32, i32)*, i32, i32, i32, i32, i32, [4 x i8] }>
%class.SkSampler.base = type <{ i32 (...)**, i32 }>
%class.SkStream = type { i32 (...)** }
%class.SkMasks = type { %"struct.SkMasks::MaskInfo", %"struct.SkMasks::MaskInfo", %"struct.SkMasks::MaskInfo", %"struct.SkMasks::MaskInfo" }
%"struct.SkMasks::MaskInfo" = type { i32, i32, i32 }
%class.SkCodec = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.3", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8, [6 x i8] }>
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.38", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.38" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.39", %class.sk_sp, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.39" = type { [4 x %class.SkPixmap] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkCodec::FrameInfo" = type { i32, i32, i8, i32, i8, i32, i32, %struct.SkIRect }
%class.SkFrameHolder = type opaque
%class.SkSampler = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZN14SkBmpMaskCodecD2Ev = comdat any

$_ZN14SkBmpMaskCodecD0Ev = comdat any

$_ZNK7SkCodec21onGetScaledDimensionsEf = comdat any

$_ZN7SkCodec21onDimensionsSupportedERK7SkISize = comdat any

$_ZNK10SkBmpCodec18onGetEncodedFormatEv = comdat any

$_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ = comdat any

$_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps = comdat any

$_ZNK7SkCodec16onGetValidSubsetEP7SkIRect = comdat any

$_ZNK10SkBmpCodec18onGetScanlineOrderEv = comdat any

$_ZNK7SkCodec14usesColorXformEv = comdat any

$_ZN7SkCodec15onGetFrameCountEv = comdat any

$_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE = comdat any

$_ZN7SkCodec20onGetRepetitionCountEv = comdat any

$_ZNK7SkCodec14getFrameHolderEv = comdat any

$_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE = comdat any

$_ZN7SkCodec19onIncrementalDecodeEPi = comdat any

$_ZN14SkBmpMaskCodec10getSamplerEb = comdat any

$_ZNK10SkBmpCodec7onInIcoEv = comdat any

@_ZTV14SkBmpMaskCodec = hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBmpMaskCodec*)* @_ZN14SkBmpMaskCodecD2Ev to i8*), i8* bitcast (void (%class.SkBmpMaskCodec*)* @_ZN14SkBmpMaskCodecD0Ev to i8*), i8* bitcast (i64 (%class.SkCodec*, float)* @_ZNK7SkCodec21onGetScaledDimensionsEf to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkISize*)* @_ZN7SkCodec21onDimensionsSupportedERK7SkISize to i8*), i8* bitcast (i32 (%class.SkBmpCodec*)* @_ZNK10SkBmpCodec18onGetEncodedFormatEv to i8*), i8* bitcast (i32 (%class.SkBmpMaskCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)* @_ZN14SkBmpMaskCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi to i8*), i8* bitcast (i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)* @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkIRect*)* @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkBmpCodec*)* @_ZN10SkBmpCodec8onRewindEv to i8*), i8* bitcast (i32 (%class.SkBmpCodec*)* @_ZNK10SkBmpCodec18onGetScanlineOrderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, i32)* @_ZNK7SkCodec16onOutputScanlineEi to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)* @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb to i8*), i8* bitcast (i1 (%class.SkCodec*)* @_ZNK7SkCodec14usesColorXformEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec15onGetFrameCountEv to i8*), i8* bitcast (i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)* @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec20onGetRepetitionCountEv to i8*), i8* bitcast (%class.SkFrameHolder* (%class.SkCodec*)* @_ZNK7SkCodec14getFrameHolderEv to i8*), i8* bitcast (i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN10SkBmpCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, i32*)* @_ZN7SkCodec19onIncrementalDecodeEPi to i8*), i8* bitcast (i1 (%class.SkBmpCodec*, i32)* @_ZN10SkBmpCodec15onSkipScanlinesEi to i8*), i8* bitcast (i32 (%class.SkBmpCodec*, i8*, i32, i64)* @_ZN10SkBmpCodec14onGetScanlinesEPvim to i8*), i8* bitcast (%class.SkSampler* (%class.SkBmpMaskCodec*, i1)* @_ZN14SkBmpMaskCodec10getSamplerEb to i8*), i8* bitcast (i1 (%class.SkBmpCodec*)* @_ZNK10SkBmpCodec7onInIcoEv to i8*), i8* bitcast (i32 (%class.SkBmpMaskCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN14SkBmpMaskCodec17onPrepareToDecodeERK11SkImageInfoRKN7SkCodec7OptionsE to i8*), i8* bitcast (i32 (%class.SkBmpMaskCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN14SkBmpMaskCodec10decodeRowsERK11SkImageInfoPvmRKN7SkCodec7OptionsE to i8*), i8* bitcast (i1 (%class.SkBmpCodec*, i32)* @_ZN10SkBmpCodec8skipRowsEi to i8*)] }, align 8

@_ZN14SkBmpMaskCodecC1EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtP7SkMasksN7SkCodec15SkScanlineOrderE = hidden unnamed_addr alias void (%class.SkBmpMaskCodec*, %struct.SkEncodedInfo*, %class.SkStream*, i16, %class.SkMasks*, i32), void (%class.SkBmpMaskCodec*, %struct.SkEncodedInfo*, %class.SkStream*, i16, %class.SkMasks*, i32)* @_ZN14SkBmpMaskCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtP7SkMasksN7SkCodec15SkScanlineOrderE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBmpMaskCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtP7SkMasksN7SkCodec15SkScanlineOrderE(%class.SkBmpMaskCodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, i16 zeroext, %class.SkMasks*, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0
  tail call void @_ZN14SkBmpBaseCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtN7SkCodec15SkScanlineOrderE(%class.SkBmpBaseCodec* %7, %struct.SkEncodedInfo* dereferenceable(32) %1, %class.SkStream* %2, i16 zeroext %3, i32 %5) #8
  %8 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV14SkBmpMaskCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 1
  %10 = ptrtoint %class.SkMasks* %4 to i64
  %11 = bitcast %"class.std::__1::unique_ptr.26"* %9 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__1::unique_ptr.32"* %12 to i64*
  store i64 0, i64* %13, align 8
  ret void
}

declare void @_ZN14SkBmpBaseCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtN7SkCodec15SkScanlineOrderE(%class.SkBmpBaseCodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, i16 zeroext, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14SkBmpMaskCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi(%class.SkBmpMaskCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* dereferenceable(24), i32* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 1
  %8 = load %struct.SkIRect*, %struct.SkIRect** %7, align 8
  %9 = icmp eq %struct.SkIRect* %8, null
  br i1 %9, label %10, label %38

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %12 = bitcast %struct.SkISize* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = lshr i64 %13, 32
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp ne i32 %18, %14
  %22 = icmp ne i32 %20, %16
  %23 = or i1 %21, %22
  br i1 %23, label %38, label %24

24:                                               ; preds = %10
  %25 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0
  %26 = tail call i32 @_ZN10SkBmpCodec15prepareToDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkBmpCodec* %25, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* dereferenceable(24) %4) #8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %38

28:                                               ; preds = %24
  %29 = bitcast %class.SkBmpMaskCodec* %0 to i32 (%class.SkBmpMaskCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)***
  %30 = load i32 (%class.SkBmpMaskCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)**, i32 (%class.SkBmpMaskCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*** %29, align 8
  %31 = getelementptr inbounds i32 (%class.SkBmpMaskCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*, i32 (%class.SkBmpMaskCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)** %30, i64 26
  %32 = load i32 (%class.SkBmpMaskCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*, i32 (%class.SkBmpMaskCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)** %31, align 8
  %33 = tail call i32 %32(%class.SkBmpMaskCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, %"struct.SkCodec::Options"* dereferenceable(24) %4) #8
  %34 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %38, label %37

37:                                               ; preds = %28
  store i32 %33, i32* %5, align 4
  br label %38

38:                                               ; preds = %10, %24, %28, %37, %6
  %39 = phi i32 [ 9, %6 ], [ %26, %24 ], [ 1, %37 ], [ 0, %28 ], [ 4, %10 ]
  ret i32 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN10SkBmpCodec15prepareToDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkBmpCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14SkBmpMaskCodec17onPrepareToDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkBmpMaskCodec* nocapture, %struct.SkImageInfo* nocapture readonly dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkImageInfo, align 8
  %5 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0, i32 0, i32 10
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 4) #8
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 -1, i64 %14
  %16 = tail call i8* @_Znam(i64 %15) #9
  %17 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = bitcast i32** %17 to i8**
  store i8* %16, i8** %19, align 8
  %20 = icmp eq i32* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %8
  %22 = bitcast i32* %18 to i8*
  tail call void @_ZdaPv(i8* %22) #9
  br label %23

23:                                               ; preds = %3, %21, %8
  %24 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #8
  %25 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8
  %30 = icmp eq %class.SkColorSpace* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  br label %34

34:                                               ; preds = %23, %31
  store %class.SkColorSpace* %29, %class.SkColorSpace** %25, align 8
  %35 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %36 = bitcast i32* %35 to i64*
  %37 = bitcast i32* %26 to i64*
  %38 = load i64, i64* %36, align 8
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1
  %40 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %41 = bitcast %struct.SkISize* %40 to i64*
  %42 = bitcast %struct.SkISize* %39 to i64*
  %43 = load i64, i64* %41, align 8
  store i64 %43, i64* %42, align 8
  %44 = load i32, i32* %5, align 8
  %45 = icmp eq i32 %44, 0
  %46 = and i64 %38, -4294967296
  br i1 %45, label %89, label %47

47:                                               ; preds = %34
  br i1 %30, label %48, label %52

48:                                               ; preds = %47
  %49 = ptrtoint %class.SkColorSpace* %29 to i64
  %50 = or i64 %46, 6
  %51 = bitcast %struct.SkImageInfo* %4 to i64*
  store i64 %49, i64* %51, align 8
  br label %66

52:                                               ; preds = %47
  %53 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 1 monotonic, !noalias !2
  %55 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8
  %56 = bitcast %class.SkColorSpace* %55 to i8*
  %57 = ptrtoint %class.SkColorSpace* %29 to i64
  %58 = or i64 %46, 6
  %59 = bitcast %struct.SkImageInfo* %4 to i64*
  store i64 %57, i64* %59, align 8
  %60 = icmp eq %class.SkColorSpace* %55, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %66

65:                                               ; preds = %61
  tail call void @_ZdlPv(i8* %56) #9
  br label %66

66:                                               ; preds = %48, %65, %61, %52
  %67 = phi i64* [ %51, %48 ], [ %59, %65 ], [ %59, %61 ], [ %59, %52 ]
  %68 = phi i64 [ %50, %48 ], [ %58, %65 ], [ %58, %61 ], [ %58, %52 ]
  store i64 %68, i64* %37, align 8
  store i64 %43, i64* %42, align 8
  %69 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 2
  br i1 %71, label %72, label %89

72:                                               ; preds = %66
  %73 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8
  %74 = icmp eq %class.SkColorSpace* %73, null
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  store i64 0, i64* %67, align 8
  br label %88

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 1 monotonic, !noalias !9
  %79 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8
  %80 = ptrtoint %class.SkColorSpace* %73 to i64
  store i64 %80, i64* %67, align 8
  %81 = icmp eq %class.SkColorSpace* %79, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = bitcast %class.SkColorSpace* %79 to i8*
  tail call void @_ZdlPv(i8* %87) #9
  br label %88

88:                                               ; preds = %86, %82, %76, %75
  store i64 12884901894, i64* %37, align 8
  store i64 %43, i64* %42, align 8
  br label %89

89:                                               ; preds = %34, %66, %88
  %90 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %94 = load %class.SkMasks*, %class.SkMasks** %93, align 8
  %95 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0, i32 1
  %96 = load i16, i16* %95, align 2
  %97 = zext i16 %96 to i32
  %98 = call %class.SkMaskSwizzler* @_ZN14SkMaskSwizzler18CreateMaskSwizzlerERK11SkImageInfobP7SkMasksjRKN7SkCodec7OptionsE(%struct.SkImageInfo* nonnull dereferenceable(24) %4, i1 zeroext %92, %class.SkMasks* %94, i32 %97, %"struct.SkCodec::Options"* dereferenceable(24) %2) #8
  %99 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %100 = load %class.SkMaskSwizzler*, %class.SkMaskSwizzler** %99, align 8
  store %class.SkMaskSwizzler* %98, %class.SkMaskSwizzler** %99, align 8
  %101 = icmp eq %class.SkMaskSwizzler* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %89
  %103 = bitcast %class.SkMaskSwizzler* %100 to void (%class.SkMaskSwizzler*)***
  %104 = load void (%class.SkMaskSwizzler*)**, void (%class.SkMaskSwizzler*)*** %103, align 8
  %105 = getelementptr inbounds void (%class.SkMaskSwizzler*)*, void (%class.SkMaskSwizzler*)** %104, i64 2
  %106 = load void (%class.SkMaskSwizzler*)*, void (%class.SkMaskSwizzler*)** %105, align 8
  call void %106(%class.SkMaskSwizzler* nonnull %100) #8
  br label %107

107:                                              ; preds = %89, %102
  %108 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8
  %109 = icmp eq %class.SkColorSpace* %108, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 -1 acq_rel
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = bitcast %class.SkColorSpace* %108 to i8*
  call void @_ZdlPv(i8* %115) #9
  br label %116

116:                                              ; preds = %107, %110, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8
  ret i32 0
}

declare %class.SkMaskSwizzler* @_ZN14SkMaskSwizzler18CreateMaskSwizzlerERK11SkImageInfobP7SkMasksjRKN7SkCodec7OptionsE(%struct.SkImageInfo* dereferenceable(24), i1 zeroext, %class.SkMasks*, i32, %"struct.SkCodec::Options"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14SkBmpMaskCodec10decodeRowsERK11SkImageInfoPvmRKN7SkCodec7OptionsE(%class.SkBmpMaskCodec*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %class.SkBmpMaskCodec* %0 to %class.SkCodec*
  %11 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %12 = icmp sgt i32 %9, 0
  br i1 %12, label %13, label %49

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0, i32 3
  %15 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0, i32 0, i32 10
  %17 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %19 = bitcast i32** %18 to i8**
  br label %20

20:                                               ; preds = %46, %13
  %21 = phi i32 [ 0, %13 ], [ %47, %46 ]
  %22 = load %class.SkStream*, %class.SkStream** %11, align 8
  %23 = load i64, i64* %14, align 8
  %24 = bitcast %class.SkStream* %22 to i64 (%class.SkStream*, i8*, i64)***
  %25 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %24, align 8
  %26 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %25, i64 2
  %27 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %26, align 8
  %28 = tail call i64 %27(%class.SkStream* %22, i8* %7, i64 %23) #8
  %29 = load i64, i64* %14, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %31, label %49

31:                                               ; preds = %20
  %32 = tail call i32 @_ZNK10SkBmpCodec9getDstRowEii(%class.SkBmpCodec* %15, i32 %21, i32 %9) #8
  %33 = zext i32 %32 to i64
  %34 = mul i64 %33, %3
  %35 = getelementptr inbounds i8, i8* %2, i64 %34
  %36 = load i32, i32* %16, align 8
  %37 = icmp eq i32 %36, 0
  %38 = load %class.SkMaskSwizzler*, %class.SkMaskSwizzler** %17, align 8
  br i1 %37, label %45, label %39

39:                                               ; preds = %31
  %40 = load i8*, i8** %19, align 8
  tail call void @_ZN14SkMaskSwizzler7swizzleEPvPKh(%class.SkMaskSwizzler* %38, i8* %40, i8* %7) #8
  %41 = load i8*, i8** %19, align 8
  %42 = load %class.SkMaskSwizzler*, %class.SkMaskSwizzler** %17, align 8
  %43 = getelementptr inbounds %class.SkMaskSwizzler, %class.SkMaskSwizzler* %42, i64 0, i32 5
  %44 = load i32, i32* %43, align 4
  tail call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %10, i8* %35, i8* %41, i32 %44) #8
  br label %46

45:                                               ; preds = %31
  tail call void @_ZN14SkMaskSwizzler7swizzleEPvPKh(%class.SkMaskSwizzler* %38, i8* %35, i8* %7) #8
  br label %46

46:                                               ; preds = %45, %39
  %47 = add nuw nsw i32 %21, 1
  %48 = icmp eq i32 %47, %9
  br i1 %48, label %49, label %20

49:                                               ; preds = %20, %46, %5
  %50 = phi i32 [ %9, %5 ], [ %9, %46 ], [ %21, %20 ]
  ret i32 %50
}

declare i32 @_ZNK10SkBmpCodec9getDstRowEii(%class.SkBmpCodec*, i32, i32) local_unnamed_addr #1

declare void @_ZN14SkMaskSwizzler7swizzleEPvPKh(%class.SkMaskSwizzler*, i8*, i8*) local_unnamed_addr #1

declare void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkBmpMaskCodecD2Ev(%class.SkBmpMaskCodec*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV14SkBmpMaskCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkMaskSwizzler*, %class.SkMaskSwizzler** %3, align 8
  store %class.SkMaskSwizzler* null, %class.SkMaskSwizzler** %3, align 8
  %5 = icmp eq %class.SkMaskSwizzler* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkMaskSwizzler* %4 to void (%class.SkMaskSwizzler*)***
  %8 = load void (%class.SkMaskSwizzler*)**, void (%class.SkMaskSwizzler*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkMaskSwizzler*)*, void (%class.SkMaskSwizzler*)** %8, i64 2
  %10 = load void (%class.SkMaskSwizzler*)*, void (%class.SkMaskSwizzler*)** %9, align 8
  tail call void %10(%class.SkMaskSwizzler* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %class.SkMasks*, %class.SkMasks** %12, align 8
  store %class.SkMasks* null, %class.SkMasks** %12, align 8
  %14 = icmp eq %class.SkMasks* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.SkMasks* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0
  tail call void @_ZN14SkBmpBaseCodecD2Ev(%class.SkBmpBaseCodec* %18) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkBmpMaskCodecD0Ev(%class.SkBmpMaskCodec*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV14SkBmpMaskCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkMaskSwizzler*, %class.SkMaskSwizzler** %3, align 8
  store %class.SkMaskSwizzler* null, %class.SkMaskSwizzler** %3, align 8
  %5 = icmp eq %class.SkMaskSwizzler* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkMaskSwizzler* %4 to void (%class.SkMaskSwizzler*)***
  %8 = load void (%class.SkMaskSwizzler*)**, void (%class.SkMaskSwizzler*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkMaskSwizzler*)*, void (%class.SkMaskSwizzler*)** %8, i64 2
  %10 = load void (%class.SkMaskSwizzler*)*, void (%class.SkMaskSwizzler*)** %9, align 8
  tail call void %10(%class.SkMaskSwizzler* nonnull %4) #8
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %class.SkMasks*, %class.SkMasks** %12, align 8
  store %class.SkMasks* null, %class.SkMasks** %12, align 8
  %14 = icmp eq %class.SkMasks* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.SkMasks* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 0
  tail call void @_ZN14SkBmpBaseCodecD2Ev(%class.SkBmpBaseCodec* %18) #8
  %19 = bitcast %class.SkBmpMaskCodec* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK7SkCodec21onGetScaledDimensionsEf(%class.SkCodec*, float) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %4 to i64
  %10 = or i64 %8, %9
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7SkCodec21onDimensionsSupportedERK7SkISize(%class.SkCodec*, %struct.SkISize* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK10SkBmpCodec18onGetEncodedFormatEv(%class.SkBmpCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkCodec*, %class.SkYUVAPixmaps* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect(%class.SkCodec*, %struct.SkIRect*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN10SkBmpCodec8onRewindEv(%class.SkBmpCodec*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK10SkBmpCodec18onGetScanlineOrderEv(%class.SkBmpCodec*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK7SkCodec16onOutputScanlineEi(%class.SkCodec*, i32) unnamed_addr #1

declare zeroext i1 @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i1 zeroext, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14usesColorXformEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetFrameCountEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE(%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec20onGetRepetitionCountEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkFrameHolder* @_ZNK7SkCodec14getFrameHolderEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret %class.SkFrameHolder* null
}

declare i32 @_ZN10SkBmpCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkBmpCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec19onIncrementalDecodeEPi(%class.SkCodec*, i32*) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

declare zeroext i1 @_ZN10SkBmpCodec15onSkipScanlinesEi(%class.SkBmpCodec*, i32) unnamed_addr #1

declare i32 @_ZN10SkBmpCodec14onGetScanlinesEPvim(%class.SkBmpCodec*, i8*, i32, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkSampler* @_ZN14SkBmpMaskCodec10getSamplerEb(%class.SkBmpMaskCodec*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBmpMaskCodec, %class.SkBmpMaskCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = bitcast %class.SkMaskSwizzler** %3 to %class.SkSampler**
  %5 = load %class.SkSampler*, %class.SkSampler** %4, align 8
  ret %class.SkSampler* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK10SkBmpCodec7onInIcoEv(%class.SkBmpCodec*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN10SkBmpCodec8skipRowsEi(%class.SkBmpCodec*, i32) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN14SkBmpBaseCodecD2Ev(%class.SkBmpBaseCodec*) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5, !7}
!3 = distinct !{!3, !4, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!4 = distinct !{!4, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!5 = distinct !{!5, !6, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!6 = distinct !{!6, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!7 = distinct !{!7, !8, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!8 = distinct !{!8, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!9 = !{!10, !12, !14}
!10 = distinct !{!10, !11, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!11 = distinct !{!11, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!12 = distinct !{!12, !13, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!13 = distinct !{!13, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!14 = distinct !{!14, !15, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!15 = distinct !{!15, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
