; ModuleID = '../../dbus/string_util.cc'
source_filename = "../../dbus/string_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [2 x i8] c"/\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4dbus17IsValidObjectPathERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %9 = select i1 %5, i8* %7, i8* %8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %4 to i64
  %13 = select i1 %5, i64 %11, i64 %12
  %14 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %9, i64 %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 0) #2
  br i1 %14, label %15, label %54

15:                                               ; preds = %1
  %16 = load i8, i8* %3, align 1
  %17 = icmp slt i8 %16, 0
  %18 = load i64, i64* %10, align 8
  %19 = zext i8 %16 to i64
  %20 = select i1 %17, i64 %18, i64 %19
  %21 = icmp ugt i64 %20, 1
  br i1 %21, label %22, label %53

22:                                               ; preds = %15
  %23 = load i8*, i8** %6, align 8
  %24 = select i1 %17, i8* %23, i8* %8
  br label %25

25:                                               ; preds = %22, %44
  %26 = phi i64 [ 1, %22 ], [ %46, %44 ]
  %27 = phi i32 [ 0, %22 ], [ %45, %44 ]
  %28 = getelementptr inbounds i8, i8* %24, i64 %26
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 47
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = icmp eq i32 %27, 0
  br i1 %32, label %54, label %44

33:                                               ; preds = %25
  %34 = and i8 %29, -33
  %35 = add i8 %34, -65
  %36 = icmp ult i8 %35, 26
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = add i8 %29, -48
  %39 = icmp ult i8 %38, 10
  %40 = icmp eq i8 %29, 95
  %41 = or i1 %40, %39
  br i1 %41, label %42, label %54

42:                                               ; preds = %33, %37
  %43 = add nsw i32 %27, 1
  br label %44

44:                                               ; preds = %42, %31
  %45 = phi i32 [ 0, %31 ], [ %43, %42 ]
  %46 = add nuw i64 %26, 1
  %47 = icmp ult i64 %46, %20
  br i1 %47, label %25, label %48

48:                                               ; preds = %44
  br i1 %21, label %49, label %53

49:                                               ; preds = %48
  %50 = load i8*, i8** %6, align 8
  %51 = select i1 %17, i8* %50, i8* %8
  %52 = tail call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %51, i64 %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 0) #2
  br i1 %52, label %54, label %53

53:                                               ; preds = %15, %48, %49
  br label %54

54:                                               ; preds = %37, %31, %53, %49, %1
  %55 = phi i1 [ false, %1 ], [ true, %53 ], [ false, %49 ], [ false, %31 ], [ false, %37 ]
  ret i1 %55
}

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
