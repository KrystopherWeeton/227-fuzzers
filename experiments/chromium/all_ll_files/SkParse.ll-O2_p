; ModuleID = '../../third_party/skia/src/utils/SkParse.cpp'
source_filename = "../../third_party/skia/src/utils/SkParse.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@_ZZN7SkParse8FindBoolEPKcPbE4gYes = internal unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@_ZZN7SkParse8FindBoolEPKcPbE3gNo = internal unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0)], align 16
@.str.3 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"false\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN7SkParse5CountEPKc(i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* %0, align 1
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %34, label %17

4:                                                ; preds = %13, %32
  %5 = phi i8* [ %24, %32 ], [ %6, %13 ]
  %6 = getelementptr inbounds i8, i8* %5, i64 1
  %7 = load i8, i8* %5, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %34, label %9

9:                                                ; preds = %4
  %10 = sext i8 %7 to i32
  %11 = add nsw i32 %10, -1
  %12 = icmp ult i32 %11, 32
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  switch i32 %10, label %4 [
    i32 59, label %14
    i32 44, label %14
  ]

14:                                               ; preds = %9, %13, %13
  %15 = load i8, i8* %6, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %34, label %17

17:                                               ; preds = %1, %14
  %18 = phi i8 [ %15, %14 ], [ %2, %1 ]
  %19 = phi i8* [ %6, %14 ], [ %0, %1 ]
  %20 = phi i32 [ %33, %14 ], [ 0, %1 ]
  br label %21

21:                                               ; preds = %17, %28
  %22 = phi i8 [ %18, %17 ], [ %29, %28 ]
  %23 = phi i8* [ %19, %17 ], [ %24, %28 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  %25 = sext i8 %22 to i32
  %26 = add nsw i32 %25, -1
  %27 = icmp ult i32 %26, 32
  br i1 %27, label %28, label %31

28:                                               ; preds = %21, %31, %31
  %29 = load i8, i8* %24, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %34, label %21

31:                                               ; preds = %21
  switch i32 %25, label %32 [
    i32 59, label %28
    i32 44, label %28
  ]

32:                                               ; preds = %31
  %33 = add nuw nsw i32 %20, 1
  br label %4

34:                                               ; preds = %14, %28, %4, %1
  %35 = phi i32 [ 0, %1 ], [ %33, %4 ], [ %20, %28 ], [ %33, %14 ]
  ret i32 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN7SkParse5CountEPKcc(i8* nocapture readonly, i8 signext) local_unnamed_addr #0 align 2 {
  br label %10

3:                                                ; preds = %8, %20
  %4 = phi i8* [ %15, %20 ], [ %5, %8 ]
  %5 = getelementptr inbounds i8, i8* %4, i64 1
  %6 = load i8, i8* %4, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %3
  %9 = icmp eq i8 %6, %1
  br i1 %9, label %10, label %3

10:                                               ; preds = %8, %2
  %11 = phi i8* [ %0, %2 ], [ %5, %8 ]
  %12 = phi i32 [ 0, %2 ], [ %21, %8 ]
  br label %13

13:                                               ; preds = %18, %10
  %14 = phi i8* [ %11, %10 ], [ %15, %18 ]
  %15 = getelementptr inbounds i8, i8* %14, i64 1
  %16 = load i8, i8* %14, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = icmp eq i8 %16, %1
  br i1 %19, label %13, label %20

20:                                               ; preds = %18
  %21 = add nuw nsw i32 %12, 1
  br label %3

22:                                               ; preds = %13, %3
  %23 = phi i32 [ %21, %3 ], [ %12, %13 ]
  ret i32 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN7SkParse7FindHexEPKcPj(i8* readonly, i32*) local_unnamed_addr #2 align 2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i8* [ %0, %2 ], [ %9, %3 ]
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  %7 = add nsw i32 %6, -1
  %8 = icmp ult i32 %7, 32
  %9 = getelementptr inbounds i8, i8* %4, i64 1
  br i1 %8, label %3, label %10

10:                                               ; preds = %3
  %11 = sext i8 %5 to i32
  %12 = add nsw i32 %11, -48
  %13 = icmp ult i32 %12, 10
  br i1 %13, label %20, label %14

14:                                               ; preds = %10
  %15 = or i32 %11, 32
  %16 = add nsw i32 %15, -97
  %17 = icmp ult i32 %16, 6
  %18 = icmp sgt i32 %15, 86
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %53

20:                                               ; preds = %14, %10
  br label %21

21:                                               ; preds = %20, %39
  %22 = phi i8 [ %44, %39 ], [ %5, %20 ]
  %23 = phi i8* [ %43, %39 ], [ %4, %20 ]
  %24 = phi i32 [ %42, %39 ], [ 0, %20 ]
  %25 = phi i32 [ %40, %39 ], [ 8, %20 ]
  %26 = sext i8 %22 to i32
  %27 = add nsw i32 %26, -48
  %28 = icmp ult i32 %27, 10
  br i1 %28, label %36, label %29

29:                                               ; preds = %21
  %30 = or i32 %26, 32
  %31 = add nsw i32 %30, -97
  %32 = icmp ult i32 %31, 6
  %33 = add nsw i32 %30, -87
  %34 = icmp sgt i32 %33, -1
  %35 = and i1 %32, %34
  br i1 %35, label %36, label %45

36:                                               ; preds = %29, %21
  %37 = phi i32 [ %27, %21 ], [ %33, %29 ]
  %38 = icmp eq i32 %25, 0
  br i1 %38, label %53, label %39

39:                                               ; preds = %36
  %40 = add nsw i32 %25, -1
  %41 = shl i32 %24, 4
  %42 = or i32 %37, %41
  %43 = getelementptr inbounds i8, i8* %23, i64 1
  %44 = load i8, i8* %43, align 1
  br label %21

45:                                               ; preds = %29
  %46 = icmp eq i8 %22, 0
  %47 = add nsw i32 %26, -1
  %48 = icmp ult i32 %47, 32
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = icmp eq i32* %1, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %50
  store i32 %24, i32* %1, align 4
  br label %53

53:                                               ; preds = %36, %45, %14, %50, %52
  %54 = phi i8* [ %23, %50 ], [ %23, %52 ], [ null, %14 ], [ null, %45 ], [ null, %36 ]
  ret i8* %54
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN7SkParse7FindS32EPKcPi(i8* readonly, i32*) local_unnamed_addr #2 align 2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i8* [ %0, %2 ], [ %9, %3 ]
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  %7 = add nsw i32 %6, -1
  %8 = icmp ult i32 %7, 32
  %9 = getelementptr inbounds i8, i8* %4, i64 1
  br i1 %8, label %3, label %10

10:                                               ; preds = %3
  %11 = icmp eq i8 %5, 45
  %12 = select i1 %11, i8* %9, i8* %4
  %13 = sext i1 %11 to i32
  %14 = load i8, i8* %12, align 1
  %15 = sext i8 %14 to i32
  %16 = add nsw i32 %15, -48
  %17 = icmp ult i32 %16, 10
  br i1 %17, label %18, label %35

18:                                               ; preds = %10, %18
  %19 = phi i32 [ %27, %18 ], [ %15, %10 ]
  %20 = phi i32 [ %24, %18 ], [ 0, %10 ]
  %21 = phi i8* [ %25, %18 ], [ %12, %10 ]
  %22 = mul nsw i32 %20, 10
  %23 = add nsw i32 %19, -48
  %24 = add i32 %23, %22
  %25 = getelementptr inbounds i8, i8* %21, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = add nsw i32 %27, -48
  %29 = icmp ult i32 %28, 10
  br i1 %29, label %18, label %30

30:                                               ; preds = %18
  %31 = icmp eq i32* %1, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %30
  %33 = xor i32 %24, %13
  %34 = sub nsw i32 %33, %13
  store i32 %34, i32* %1, align 4
  br label %35

35:                                               ; preds = %32, %30, %10
  %36 = phi i8* [ null, %10 ], [ %25, %30 ], [ %25, %32 ]
  ret i8* %36
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN7SkParse8FindMSecEPKcPj(i8* readonly, i32*) local_unnamed_addr #2 align 2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i8* [ %0, %2 ], [ %9, %3 ]
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  %7 = add nsw i32 %6, -1
  %8 = icmp ult i32 %7, 32
  %9 = getelementptr inbounds i8, i8* %4, i64 1
  br i1 %8, label %3, label %10

10:                                               ; preds = %3
  %11 = icmp eq i8 %5, 45
  %12 = select i1 %11, i8* %9, i8* %4
  %13 = sext i1 %11 to i32
  %14 = load i8, i8* %12, align 1
  %15 = sext i8 %14 to i32
  %16 = add nsw i32 %15, -48
  %17 = icmp ult i32 %16, 10
  br i1 %17, label %18, label %63

18:                                               ; preds = %10, %18
  %19 = phi i32 [ %27, %18 ], [ %15, %10 ]
  %20 = phi i32 [ %24, %18 ], [ 0, %10 ]
  %21 = phi i8* [ %25, %18 ], [ %12, %10 ]
  %22 = mul nsw i32 %20, 10
  %23 = add nsw i32 %19, -48
  %24 = add i32 %23, %22
  %25 = getelementptr inbounds i8, i8* %21, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = add nsw i32 %27, -48
  %29 = icmp ult i32 %28, 10
  br i1 %29, label %18, label %30

30:                                               ; preds = %18
  %31 = icmp eq i8 %26, 46
  br i1 %31, label %32, label %50

32:                                               ; preds = %30
  %33 = getelementptr inbounds i8, i8* %21, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = add nsw i32 %35, -48
  %37 = icmp ult i32 %36, 10
  br i1 %37, label %38, label %50

38:                                               ; preds = %32
  %39 = mul nsw i32 %24, 10
  %40 = add i32 %36, %39
  %41 = getelementptr inbounds i8, i8* %21, i64 3
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = add nsw i32 %43, -48
  %45 = icmp ult i32 %44, 10
  br i1 %45, label %65, label %50

46:                                               ; preds = %65
  %47 = mul nsw i32 %67, 10
  %48 = add i32 %71, %47
  %49 = getelementptr inbounds i8, i8* %21, i64 5
  br label %56

50:                                               ; preds = %65, %38, %32, %30
  %51 = phi i8* [ %68, %65 ], [ %41, %38 ], [ %33, %32 ], [ %25, %30 ]
  %52 = phi i32 [ %67, %65 ], [ %40, %38 ], [ %24, %32 ], [ %24, %30 ]
  %53 = phi i32 [ 0, %65 ], [ 1, %38 ], [ 2, %32 ], [ 2, %30 ]
  %54 = mul nsw i32 %52, 10
  %55 = icmp eq i32 %53, 0
  br i1 %55, label %56, label %73

56:                                               ; preds = %73, %50, %46
  %57 = phi i8* [ %49, %46 ], [ %51, %50 ], [ %51, %73 ]
  %58 = phi i32 [ %48, %46 ], [ %54, %50 ], [ %77, %73 ]
  %59 = icmp eq i32* %1, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = xor i32 %58, %13
  %62 = sub nsw i32 %61, %13
  store i32 %62, i32* %1, align 4
  br label %63

63:                                               ; preds = %60, %56, %10
  %64 = phi i8* [ null, %10 ], [ %57, %56 ], [ %57, %60 ]
  ret i8* %64

65:                                               ; preds = %38
  %66 = mul nsw i32 %40, 10
  %67 = add i32 %44, %66
  %68 = getelementptr inbounds i8, i8* %21, i64 4
  %69 = load i8, i8* %68, align 1
  %70 = sext i8 %69 to i32
  %71 = add nsw i32 %70, -48
  %72 = icmp ult i32 %71, 10
  br i1 %72, label %46, label %50

73:                                               ; preds = %50
  %74 = mul i32 %52, 100
  %75 = icmp eq i32 %53, 1
  %76 = mul i32 %52, 1000
  %77 = select i1 %75, i32 %74, i32 %76
  br label %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN7SkParse10FindScalarEPKcPf(i8*, float*) local_unnamed_addr #3 align 2 {
  %3 = alloca i8*, align 8
  br label %4

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = load i8, i8* %5, align 1
  %7 = sext i8 %6 to i32
  %8 = add nsw i32 %7, -1
  %9 = icmp ult i32 %8, 32
  %10 = getelementptr inbounds i8, i8* %5, i64 1
  br i1 %9, label %4, label %11

11:                                               ; preds = %4
  %12 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %13 = call double @strtod(i8* %5, i8** nonnull %3) #10
  %14 = fptrunc double %13 to float
  %15 = load i8*, i8** %3, align 8
  %16 = icmp eq i8* %5, %15
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = icmp eq float* %1, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store float %14, float* %1, align 4
  br label %20

20:                                               ; preds = %19, %17, %11
  %21 = phi i8* [ null, %11 ], [ %15, %17 ], [ %15, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  ret i8* %21
}

; Function Attrs: nofree nounwind
declare double @strtod(i8* readonly, i8** nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN7SkParse11FindScalarsEPKcPfi(i8*, float*, i32) local_unnamed_addr #3 align 2 {
  %4 = alloca i8*, align 8
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %45

6:                                                ; preds = %3
  %7 = bitcast i8** %4 to i8*
  br label %8

8:                                                ; preds = %6, %42
  %9 = phi i8* [ %34, %42 ], [ %0, %6 ]
  %10 = phi float* [ %44, %42 ], [ %1, %6 ]
  %11 = phi i32 [ %29, %42 ], [ %2, %6 ]
  br label %12

12:                                               ; preds = %12, %8
  %13 = phi i8* [ %9, %8 ], [ %18, %12 ]
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = add nsw i32 %15, -1
  %17 = icmp ult i32 %16, 32
  %18 = getelementptr inbounds i8, i8* %13, i64 1
  br i1 %17, label %12, label %19

19:                                               ; preds = %12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %20 = call double @strtod(i8* %13, i8** nonnull %4) #10
  %21 = fptrunc double %20 to float
  %22 = load i8*, i8** %4, align 8
  %23 = icmp eq i8* %13, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  br label %45

25:                                               ; preds = %19
  %26 = icmp eq float* %10, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %25
  store float %21, float* %10, align 4
  br label %28

28:                                               ; preds = %25, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %29 = add nsw i32 %11, -1
  %30 = icmp eq i32 %29, 0
  %31 = icmp eq i8* %22, null
  %32 = or i1 %30, %31
  br i1 %32, label %45, label %33

33:                                               ; preds = %28, %40
  %34 = phi i8* [ %41, %40 ], [ %22, %28 ]
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = add nsw i32 %36, -1
  %38 = icmp ult i32 %37, 32
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  switch i32 %36, label %42 [
    i32 59, label %40
    i32 44, label %40
  ]

40:                                               ; preds = %39, %39, %33
  %41 = getelementptr inbounds i8, i8* %34, i64 1
  br label %33

42:                                               ; preds = %39
  %43 = getelementptr inbounds float, float* %10, i64 1
  %44 = select i1 %26, float* null, float* %43
  br label %8

45:                                               ; preds = %28, %24, %3
  %46 = phi i8* [ %0, %3 ], [ null, %24 ], [ %22, %28 ]
  ret i8* %46
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN7SkParse8FindBoolEPKcPb(i8* nocapture readonly, i8*) local_unnamed_addr #5 align 2 {
  br label %3

3:                                                ; preds = %7, %2
  %4 = phi i64 [ %5, %7 ], [ 3, %2 ]
  %5 = add nsw i64 %4, -1
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds [3 x i8*], [3 x i8*]* @_ZZN7SkParse8FindBoolEPKcPbE4gYes, i64 0, i64 %5
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @strcmp(i8* %0, i8* %9) #11
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %3

12:                                               ; preds = %7
  %13 = icmp eq i8* %1, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %12
  store i8 1, i8* %1, align 1
  br label %27

15:                                               ; preds = %3, %19
  %16 = phi i64 [ %17, %19 ], [ 3, %3 ]
  %17 = add nsw i64 %16, -1
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds [3 x i8*], [3 x i8*]* @_ZZN7SkParse8FindBoolEPKcPbE3gNo, i64 0, i64 %17
  %21 = load i8*, i8** %20, align 8
  %22 = tail call i32 @strcmp(i8* %0, i8* %21) #11
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %15

24:                                               ; preds = %19
  %25 = icmp eq i8* %1, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %24
  store i8 0, i8* %1, align 1
  br label %27

27:                                               ; preds = %15, %26, %24, %14, %12
  %28 = phi i1 [ true, %12 ], [ true, %14 ], [ true, %24 ], [ true, %26 ], [ false, %15 ]
  ret i1 %28
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN7SkParse8FindListEPKcS1_(i8* nocapture readonly, i8*) local_unnamed_addr #6 align 2 {
  %3 = tail call i64 @strlen(i8* %0) #11
  br label %4

4:                                                ; preds = %23, %2
  %5 = phi i8* [ %1, %2 ], [ %24, %23 ]
  %6 = phi i32 [ 0, %2 ], [ %25, %23 ]
  %7 = tail call i8* @strchr(i8* %5, i32 44) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = tail call i64 @strlen(i8* %5) #11
  br label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %7 to i64
  %13 = ptrtoint i8* %5 to i64
  %14 = sub i64 %12, %13
  br label %15

15:                                               ; preds = %11, %9
  %16 = phi i64 [ %10, %9 ], [ %14, %11 ]
  %17 = icmp eq i64 %16, %3
  br i1 %17, label %18, label %22

18:                                               ; preds = %15
  %19 = tail call i32 @bcmp(i8* %0, i8* %5, i64 %3)
  %20 = icmp eq i32 %19, 0
  %21 = or i1 %8, %20
  br i1 %21, label %26, label %23

22:                                               ; preds = %15
  br i1 %8, label %28, label %23

23:                                               ; preds = %18, %22
  %24 = getelementptr inbounds i8, i8* %7, i64 1
  %25 = add nuw nsw i32 %6, 1
  br label %4

26:                                               ; preds = %18
  %27 = select i1 %20, i32 %6, i32 -1
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi i32 [ %27, %26 ], [ -1, %22 ]
  ret i32 %29
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
