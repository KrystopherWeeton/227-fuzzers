; ModuleID = 'gen/components/visitedlink/common/visitedlink.mojom-test-utils.cc'
source_filename = "gen/components/visitedlink/common/visitedlink.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.visitedlink::mojom::VisitedLinkNotificationSinkAsyncWaiter" = type { %"class.visitedlink::mojom::VisitedLinkNotificationSink"* }
%"class.visitedlink::mojom::VisitedLinkNotificationSink" = type { i32 (...)** }
%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting" = type { %"class.visitedlink::mojom::VisitedLinkNotificationSink" }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64* }

$_ZN11visitedlink5mojom27VisitedLinkNotificationSinkD2Ev = comdat any

$_ZN11visitedlink5mojom48VisitedLinkNotificationSinkInterceptorForTestingD0Ev = comdat any

@_ZTVN11visitedlink5mojom48VisitedLinkNotificationSinkInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*)* @_ZN11visitedlink5mojom27VisitedLinkNotificationSinkD2Ev to i8*), i8* bitcast (void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)* @_ZN11visitedlink5mojom48VisitedLinkNotificationSinkInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*, %"class.base::ReadOnlySharedMemoryRegion"*)* @_ZN11visitedlink5mojom48VisitedLinkNotificationSinkInterceptorForTesting18UpdateVisitedLinksEN4base26ReadOnlySharedMemoryRegionE to i8*), i8* bitcast (void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*, %"class.std::__1::vector"*)* @_ZN11visitedlink5mojom48VisitedLinkNotificationSinkInterceptorForTesting15AddVisitedLinksERKNSt3__16vectorImNS2_9allocatorImEEEE to i8*), i8* bitcast (void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*, i1)* @_ZN11visitedlink5mojom48VisitedLinkNotificationSinkInterceptorForTesting17ResetVisitedLinksEb to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN11visitedlink5mojom38VisitedLinkNotificationSinkAsyncWaiterC1EPNS0_27VisitedLinkNotificationSinkE = hidden unnamed_addr alias void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkAsyncWaiter"*, %"class.visitedlink::mojom::VisitedLinkNotificationSink"*), void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkAsyncWaiter"*, %"class.visitedlink::mojom::VisitedLinkNotificationSink"*)* @_ZN11visitedlink5mojom38VisitedLinkNotificationSinkAsyncWaiterC2EPNS0_27VisitedLinkNotificationSinkE
@_ZN11visitedlink5mojom38VisitedLinkNotificationSinkAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkAsyncWaiter"*), void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkAsyncWaiter"*)* @_ZN11visitedlink5mojom38VisitedLinkNotificationSinkAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11visitedlink5mojom48VisitedLinkNotificationSinkInterceptorForTesting18UpdateVisitedLinksEN4base26ReadOnlySharedMemoryRegionE(%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*, %"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ReadOnlySharedMemoryRegion", align 8
  %4 = bitcast %"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"* %0 to %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)***
  %5 = load %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)**, %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)*, %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)*, %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.visitedlink::mojom::VisitedLinkNotificationSink"* %7(%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"* %0) #7
  call void @_ZN4base26ReadOnlySharedMemoryRegionC1EOS0_(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %3, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64) %1) #7
  %9 = bitcast %"class.visitedlink::mojom::VisitedLinkNotificationSink"* %8 to void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.base::ReadOnlySharedMemoryRegion"*)***
  %10 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.base::ReadOnlySharedMemoryRegion"*)**, void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.base::ReadOnlySharedMemoryRegion"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.base::ReadOnlySharedMemoryRegion"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.base::ReadOnlySharedMemoryRegion"*)** %10, i64 2
  %12 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.base::ReadOnlySharedMemoryRegion"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.base::ReadOnlySharedMemoryRegion"*)** %11, align 8
  call void %12(%"class.visitedlink::mojom::VisitedLinkNotificationSink"* %8, %"class.base::ReadOnlySharedMemoryRegion"* nonnull %3) #7
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %3) #7
  ret void
}

declare void @_ZN4base26ReadOnlySharedMemoryRegionC1EOS0_(%"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11visitedlink5mojom48VisitedLinkNotificationSinkInterceptorForTesting15AddVisitedLinksERKNSt3__16vectorImNS2_9allocatorImEEEE(%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"* %0 to %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)***
  %4 = load %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)**, %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)*, %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)** %4, i64 5
  %6 = load %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)*, %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.visitedlink::mojom::VisitedLinkNotificationSink"* %6(%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"* %0) #7
  %8 = bitcast %"class.visitedlink::mojom::VisitedLinkNotificationSink"* %7 to void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.std::__1::vector"*)***
  %9 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.std::__1::vector"*)**, void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.std::__1::vector"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.std::__1::vector"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.std::__1::vector"*)** %9, i64 3
  %11 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.std::__1::vector"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, %"class.std::__1::vector"*)** %10, align 8
  tail call void %11(%"class.visitedlink::mojom::VisitedLinkNotificationSink"* %7, %"class.std::__1::vector"* dereferenceable(24) %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11visitedlink5mojom48VisitedLinkNotificationSinkInterceptorForTesting17ResetVisitedLinksEb(%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"* %0 to %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)***
  %4 = load %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)**, %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)*, %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)** %4, i64 5
  %6 = load %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)*, %"class.visitedlink::mojom::VisitedLinkNotificationSink"* (%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.visitedlink::mojom::VisitedLinkNotificationSink"* %6(%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"* %0) #7
  %8 = bitcast %"class.visitedlink::mojom::VisitedLinkNotificationSink"* %7 to void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, i1)***
  %9 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, i1)**, void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, i1)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, i1)** %9, i64 4
  %11 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, i1)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSink"*, i1)** %10, align 8
  tail call void %11(%"class.visitedlink::mojom::VisitedLinkNotificationSink"* %7, i1 zeroext %1) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11visitedlink5mojom38VisitedLinkNotificationSinkAsyncWaiterC2EPNS0_27VisitedLinkNotificationSinkE(%"class.visitedlink::mojom::VisitedLinkNotificationSinkAsyncWaiter"* nocapture, %"class.visitedlink::mojom::VisitedLinkNotificationSink"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.visitedlink::mojom::VisitedLinkNotificationSinkAsyncWaiter", %"class.visitedlink::mojom::VisitedLinkNotificationSinkAsyncWaiter"* %0, i64 0, i32 0
  store %"class.visitedlink::mojom::VisitedLinkNotificationSink"* %1, %"class.visitedlink::mojom::VisitedLinkNotificationSink"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11visitedlink5mojom38VisitedLinkNotificationSinkAsyncWaiterD2Ev(%"class.visitedlink::mojom::VisitedLinkNotificationSinkAsyncWaiter"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11visitedlink5mojom27VisitedLinkNotificationSinkD2Ev(%"class.visitedlink::mojom::VisitedLinkNotificationSink"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11visitedlink5mojom48VisitedLinkNotificationSinkInterceptorForTestingD0Ev(%"class.visitedlink::mojom::VisitedLinkNotificationSinkInterceptorForTesting"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
