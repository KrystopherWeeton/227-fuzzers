; ModuleID = '../../base/allocator/partition_allocator/partition_alloc_features.cc'
source_filename = "../../base/allocator/partition_allocator/partition_alloc_features.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }

@.str = private unnamed_addr constant [21 x i8] c"PartitionAllocPCScan\00", align 1
@_ZN4base8features21kPartitionAllocPCScanE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0), i32 0 }, align 8
@.str.1 = private unnamed_addr constant [32 x i8] c"PartitionAllocPCScanBrowserOnly\00", align 1
@_ZN4base8features32kPartitionAllocPCScanBrowserOnlyE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i32 0, i32 0), i32 0 }, align 8
@.str.2 = private unnamed_addr constant [34 x i8] c"PartitionAllocBackupRefPtrControl\00", align 1
@_ZN4base8features34kPartitionAllocBackupRefPtrControlE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i32 0, i32 0), i32 0 }, align 8
@.str.3 = private unnamed_addr constant [39 x i8] c"PartitionAllocThreadCachePeriodicPurge\00", align 1
@_ZN4base8features39kPartitionAllocThreadCachePeriodicPurgeE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 1 }, align 8
@.str.4 = private unnamed_addr constant [35 x i8] c"PartitionAllocLargeThreadCacheSize\00", align 1
@_ZN4base8features35kPartitionAllocLargeThreadCacheSizeE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i32 0, i32 0), i32 0 }, align 8
@.str.5 = private unnamed_addr constant [25 x i8] c"PartitionAllocLazyCommit\00", align 1
@_ZN4base8features25kPartitionAllocLazyCommitE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i32 0, i32 0), i32 1 }, align 8
@.str.6 = private unnamed_addr constant [37 x i8] c"PartitionAllocPCScanMUAwareScheduler\00", align 1
@_ZN4base8features37kPartitionAllocPCScanMUAwareSchedulerE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i32 0, i32 0), i32 1 }, align 8
@.str.7 = private unnamed_addr constant [34 x i8] c"PartitionAllocPCScanStackScanning\00", align 1
@_ZN4base8features34kPartitionAllocPCScanStackScanningE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i32 0, i32 0), i32 1 }, align 8
@.str.8 = private unnamed_addr constant [21 x i8] c"PartitionAllocDCScan\00", align 1
@_ZN4base8features21kPartitionAllocDCScanE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i32 0, i32 0), i32 0 }, align 8

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
