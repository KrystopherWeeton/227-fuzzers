; ModuleID = '../../v8/src/wasm/wasm-module.cc'
source_filename = "../../v8/src/wasm/wasm-module.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.777" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.393", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map.246", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.277", %"class.std::__1::vector.281", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.415", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.419", %"class.std::__1::vector.419", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.426", %"class.std::__1::unique_ptr.432", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.562", %"class.std::__1::unique_ptr.568", %"class.std::__1::unique_ptr.574", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.652", %"class.std::__1::unique_ptr.682", %"class.std::__1::unique_ptr.688", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::unique_ptr.728", %"class.std::__1::shared_ptr.734", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.739", %"class.std::__1::unique_ptr.765", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.771", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.784", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.584", i8, [7 x i8], %"class.std::__1::unordered_map.790", %"class.std::__1::unordered_map.816", %"class.std::__1::unordered_map.790", %"class.std::__1::unordered_map.840", %"class.std::__1::vector.868", i8, %"class.std::__1::unique_ptr.875", i32, i32 }
%"class.std::__1::unordered_map.246" = type { %"class.std::__1::__hash_table.247" }
%"class.std::__1::__hash_table.247" = type <{ %"class.std::__1::unique_ptr.248", %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.266", [4 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250", %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base.251"** }
%"struct.std::__1::__hash_node_base.251" = type { %"struct.std::__1::__hash_node_base.251"* }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.std::__1::__bucket_list_deallocator.253" }
%"class.std::__1::__bucket_list_deallocator.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.std::__1::__hash_node_base.251" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.272", %"struct.std::__1::atomic.272", %"struct.std::__1::atomic.272" }
%"struct.std::__1::atomic.272" = type { %"struct.std::__1::__atomic_base.273" }
%"struct.std::__1::__atomic_base.273" = type { %"struct.std::__1::__atomic_base.274" }
%"struct.std::__1::__atomic_base.274" = type { %"struct.std::__1::__cxx_atomic_impl.275" }
%"struct.std::__1::__cxx_atomic_impl.275" = type { %"struct.std::__1::__cxx_atomic_base_impl.276" }
%"struct.std::__1::__cxx_atomic_base_impl.276" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.240", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.881", %"class.std::__1::unique_ptr.902", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.912", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.1097", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.1110", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.1120", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.1125", %"struct.std::__1::atomic.406", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.1200", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1246"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1257", i32, i8, i8, i32, i32, %"class.std::__1::vector.1263", %"class.std::__1::vector.1263", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1270", i64, %"class.std::__1::unordered_map.1289", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.777", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.414", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1344", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1382", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1416", %"class.std::__1::vector.1420", %"class.std::__1::vector.1420", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.235", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.235" = type { %"struct.std::__1::__atomic_base.236" }
%"struct.std::__1::__atomic_base.236" = type { %"struct.std::__1::__cxx_atomic_impl.237" }
%"struct.std::__1::__cxx_atomic_impl.237" = type { %"struct.std::__1::__cxx_atomic_base_impl.238" }
%"struct.std::__1::__cxx_atomic_base_impl.238" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.881" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.393", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.882", %"class.std::__1::unique_ptr.896" }
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.885" }
%"class.std::__1::vector.885" = type { %"class.std::__1::__vector_base.886" }
%"class.std::__1::__vector_base.886" = type { %"class.std::__1::unique_ptr.887"*, %"class.std::__1::unique_ptr.887"*, %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::unique_ptr.887" = type { %"class.std::__1::__compressed_pair.1562" }
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"class.std::__1::unique_ptr.887"* }
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.905", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.905" = type { %"struct.std::__1::__atomic_base.906" }
%"struct.std::__1::__atomic_base.906" = type { %"struct.std::__1::__cxx_atomic_impl.907" }
%"struct.std::__1::__cxx_atomic_impl.907" = type { %"struct.std::__1::__cxx_atomic_base_impl.908" }
%"struct.std::__1::__cxx_atomic_base_impl.908" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.912" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.913", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.913" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.914", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.914" = type { %"class.std::__1::__vector_base.915" }
%"class.std::__1::__vector_base.915" = type { %"class.std::__1::unique_ptr.916"*, %"class.std::__1::unique_ptr.916"*, %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::unique_ptr.916" = type opaque
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.std::__1::unique_ptr.916"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.922 }
%union.anon.922 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.923", %"class.std::__1::unique_ptr.929", %"struct.std::__1::atomic.406", %"class.std::__1::unique_ptr.935", %"class.std::__1::unique_ptr.941", %"class.std::__1::unique_ptr.947", %"class.std::__1::unique_ptr.953", %"class.std::__1::unique_ptr.959", %"class.std::__1::set.965", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.923" = type { %"class.std::__1::__compressed_pair.924" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.947" = type { %"class.std::__1::__compressed_pair.948" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.965" = type { %"class.std::__1::__tree.966" }
%"class.std::__1::__tree.966" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.967", %"class.std::__1::__compressed_pair.971" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.974" }
%"class.v8::internal::TaggedImpl.974" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.973" }
%"class.v8::internal::TaggedImpl.973" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.1012", %"class.std::__1::unique_ptr.1019" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.975", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.999", %"class.v8::internal::Handle.1011", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.975" = type { %"class.std::__1::__vector_base.976" }
%"class.std::__1::__vector_base.976" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.994" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.977", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.989", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.977" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.985" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.980" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.978", %union.anon.979 }
%"class.v8::internal::Handle.978" = type { %"class.v8::internal::HandleBase" }
%union.anon.979 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.v8::base::Optional.989" = type { %"class.v8::base::internal::OptionalBase.990" }
%"class.v8::base::internal::OptionalBase.990" = type { %"struct.v8::base::internal::OptionalStorage.991" }
%"struct.v8::base::internal::OptionalStorage.991" = type { %"struct.v8::base::internal::OptionalStorageBase.992" }
%"struct.v8::base::internal::OptionalStorageBase.992" = type { i8, %union.anon.993 }
%union.anon.993 = type { i8 }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.999" = type { %"class.std::__1::__deque_base.1000" }
%"class.std::__1::__deque_base.1000" = type { %"struct.std::__1::__split_buffer.1001", i64, %"class.std::__1::__compressed_pair.1007" }
%"struct.std::__1::__split_buffer.1001" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.1002" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.v8::internal::Handle.1011" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.1012" = type { %"class.std::__1::__vector_base.1013" }
%"class.std::__1::__vector_base.1013" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.1014" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.1019" = type { %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.1026", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.1032", %"class.v8::internal::DetachableVector.1033", %"class.v8::internal::DetachableVector.1032", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.1033" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.1032" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.38" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::set.38" = type { %"class.std::__1::__tree.39" }
%"class.std::__1::__tree.39" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.v8::internal::InnerPointerToCodeCache" = type { %"class.v8::internal::Isolate"*, [1024 x %"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry"] }
%"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry" = type { i64, %"class.v8::internal::Code", %"class.v8::internal::SafepointEntry" }
%"class.v8::internal::SafepointEntry" = type <{ i32, [4 x i8], i8*, i8*, i32, [4 x i8] }>
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1034", %"class.std::__1::vector.1040", %"class.std::__1::unique_ptr.1047", %"class.std::__1::vector.1054", %"class.std::__1::unique_ptr.1061", i64, %"class.std::__1::vector.1067", %"class.std::__1::vector.1075", %"class.std::__1::vector.1083", i8, i8, i32 }
%"class.std::__1::unique_ptr.1034" = type { %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.1040" = type { %"class.std::__1::__vector_base.1041" }
%"class.std::__1::__vector_base.1041" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.1042" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.v8::internal::GlobalHandles::NodeSpace.1050"* }
%"class.v8::internal::GlobalHandles::NodeSpace.1050" = type opaque
%"class.std::__1::vector.1054" = type { %"class.std::__1::__vector_base.1055" }
%"class.std::__1::__vector_base.1055" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.1056" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.1067" = type { %"class.std::__1::__vector_base.1068" }
%"class.std::__1::__vector_base.1068" = type { %"struct.std::__1::pair.1069"*, %"struct.std::__1::pair.1069"*, %"class.std::__1::__compressed_pair.1070" }
%"struct.std::__1::pair.1069" = type opaque
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"struct.std::__1::pair.1069"* }
%"class.std::__1::vector.1075" = type { %"class.std::__1::__vector_base.1076" }
%"class.std::__1::__vector_base.1076" = type { %"struct.std::__1::pair.1077"*, %"struct.std::__1::pair.1077"*, %"class.std::__1::__compressed_pair.1078" }
%"struct.std::__1::pair.1077" = type opaque
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"struct.std::__1::pair.1077"* }
%"class.std::__1::vector.1083" = type { %"class.std::__1::__vector_base.1084" }
%"class.std::__1::__vector_base.1084" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.1085" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.1090", %"class.std::__1::vector.1097" }
%"class.std::__1::vector.1090" = type { %"class.std::__1::__vector_base.1091" }
%"class.std::__1::__vector_base.1091" = type { i64**, i64**, %"class.std::__1::__compressed_pair.1092" }
%"class.std::__1::__compressed_pair.1092" = type { %"struct.std::__1::__compressed_pair_elem.1093" }
%"struct.std::__1::__compressed_pair_elem.1093" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.1104" }
%"class.std::__1::unique_ptr.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.1097" = type { %"class.std::__1::__vector_base.1098" }
%"class.std::__1::__vector_base.1098" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.1110" = type { %"struct.std::__1::__atomic_base.1111" }
%"struct.std::__1::__atomic_base.1111" = type { %"struct.std::__1::__cxx_atomic_impl.1112" }
%"struct.std::__1::__cxx_atomic_impl.1112" = type { %"struct.std::__1::__cxx_atomic_base_impl.1113" }
%"struct.std::__1::__cxx_atomic_base_impl.1113" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.1120" = type { %"struct.std::__1::__atomic_base.1121" }
%"struct.std::__1::__atomic_base.1121" = type { %"struct.std::__1::__cxx_atomic_impl.1122" }
%"struct.std::__1::__cxx_atomic_impl.1122" = type { %"struct.std::__1::__cxx_atomic_base_impl.1123" }
%"struct.std::__1::__cxx_atomic_base_impl.1123" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.230 }
%union.anon.230 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.1125" = type { %"class.std::__1::__hash_table.1126" }
%"class.std::__1::__hash_table.1126" = type <{ %"class.std::__1::unique_ptr.1127", %"class.std::__1::__compressed_pair.1137", %"class.std::__1::__compressed_pair.1142", %"class.std::__1::__compressed_pair.1145", [4 x i8] }>
%"class.std::__1::unique_ptr.1127" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129", %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"struct.std::__1::__hash_node_base.1130"** }
%"struct.std::__1::__hash_node_base.1130" = type { %"struct.std::__1::__hash_node_base.1130"* }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.std::__1::__bucket_list_deallocator.1132" }
%"class.std::__1::__bucket_list_deallocator.1132" = type { %"class.std::__1::__compressed_pair.1133" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"struct.std::__1::__hash_node_base.1130" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::atomic.406" = type { %"struct.std::__1::__atomic_base.407" }
%"struct.std::__1::__atomic_base.407" = type { %"struct.std::__1::__cxx_atomic_impl.408" }
%"struct.std::__1::__cxx_atomic_impl.408" = type { %"struct.std::__1::__cxx_atomic_base_impl.409" }
%"struct.std::__1::__cxx_atomic_base_impl.409" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.1151", %"class.v8::internal::Handle.1157", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.1158", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.1151" = type { %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.1157" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.1158" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.1159", %"class.std::__1::vector.1165", %"class.std::__1::unique_ptr.1173", %"class.std::__1::unique_ptr.1179", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1185", %"class.std::__1::vector.1191", %"struct.std::__1::pair.1199" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1159" = type { %"class.std::__1::__compressed_pair.1160" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.1165" = type { %"class.std::__1::__vector_base.1166" }
%"class.std::__1::__vector_base.1166" = type { %"class.std::__1::unique_ptr.1167"*, %"class.std::__1::unique_ptr.1167"*, %"class.std::__1::__compressed_pair.1168" }
%"class.std::__1::unique_ptr.1167" = type opaque
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"class.std::__1::unique_ptr.1167"* }
%"class.std::__1::unique_ptr.1173" = type { %"class.std::__1::__compressed_pair.1174" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.1179" = type { %"class.std::__1::__compressed_pair.1180" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.1185" = type { %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.1191" = type { %"class.std::__1::__vector_base.1192" }
%"class.std::__1::__vector_base.1192" = type { %"struct.std::__1::pair.1193"*, %"struct.std::__1::pair.1193"*, %"class.std::__1::__compressed_pair.1194" }
%"struct.std::__1::pair.1193" = type opaque
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { %"struct.std::__1::pair.1193"* }
%"struct.std::__1::pair.1199" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.239"*, i16, i8*)*, i8* }
%"class.v8::Local.239" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.1200" = type { %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.1203", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.1203" = type { %"class.std::__1::__hash_table.1204" }
%"class.std::__1::__hash_table.1204" = type <{ %"class.std::__1::unique_ptr.1205", %"class.std::__1::__compressed_pair.1215", %"class.std::__1::__compressed_pair.1220", %"class.std::__1::__compressed_pair.1224", [4 x i8] }>
%"class.std::__1::unique_ptr.1205" = type { %"class.std::__1::__compressed_pair.1206" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207", %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"struct.std::__1::__hash_node_base.1208"** }
%"struct.std::__1::__hash_node_base.1208" = type { %"struct.std::__1::__hash_node_base.1208"* }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"class.std::__1::__bucket_list_deallocator.1210" }
%"class.std::__1::__bucket_list_deallocator.1210" = type { %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"struct.std::__1::__hash_node_base.1208" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1232" }
%"class.std::__1::deque.1232" = type { %"class.std::__1::__deque_base.1233" }
%"class.std::__1::__deque_base.1233" = type { %"struct.std::__1::__split_buffer.1234", i64, %"class.std::__1::__compressed_pair.1241" }
%"struct.std::__1::__split_buffer.1234" = type { %"struct.std::__1::pair.1235"**, %"struct.std::__1::pair.1235"**, %"struct.std::__1::pair.1235"**, %"class.std::__1::__compressed_pair.1236" }
%"struct.std::__1::pair.1235" = type opaque
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"struct.std::__1::pair.1235"** }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1246" = type { %"class.std::__1::__vector_base.1247" }
%"class.std::__1::__vector_base.1247" = type { %"class.v8::internal::Handle.978"*, %"class.v8::internal::Handle.978"*, %"class.std::__1::__compressed_pair.1248" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"class.v8::internal::Handle.978"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.1253" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.1253" = type { %"class.std::__1::__vector_base.1254" }
%"class.std::__1::__vector_base.1254" = type { %"struct.std::__1::pair.1235"*, %"struct.std::__1::pair.1235"*, %"class.std::__1::__compressed_pair.1255" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.1256" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"struct.std::__1::pair.1235"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.1022", [128 x i8] }
%"class.v8::internal::Vector.1022" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.1115", i32, %"class.v8::Local.239" }
%"class.v8::Local.1115" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1257" = type { %"class.std::__1::__compressed_pair.1258" }
%"class.std::__1::__compressed_pair.1258" = type { %"struct.std::__1::__compressed_pair_elem.1259" }
%"struct.std::__1::__compressed_pair_elem.1259" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.1090", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1263" = type { %"class.std::__1::__vector_base.1264" }
%"class.std::__1::__vector_base.1264" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1265" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.1266" }
%"struct.std::__1::__compressed_pair_elem.1266" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1270" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type { %"class.std::__1::enable_shared_from_this.1271", %"class.v8::base::Mutex", %"class.std::__1::shared_ptr.1273", %"class.std::__1::shared_ptr.1274", %"class.std::__1::queue.1275" }
%"class.std::__1::enable_shared_from_this.1271" = type { %"class.std::__1::weak_ptr.1272" }
%"class.std::__1::weak_ptr.1272" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::shared_ptr.1273" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.std::__1::shared_ptr.1274" = type { %"class.v8::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::metrics::Recorder" = type { i32 (...)** }
%"class.std::__1::queue.1275" = type { %"class.std::__1::deque.1276" }
%"class.std::__1::deque.1276" = type { %"class.std::__1::__deque_base.1277" }
%"class.std::__1::__deque_base.1277" = type { %"struct.std::__1::__split_buffer.1278", i64, %"class.std::__1::__compressed_pair.1285" }
%"struct.std::__1::__split_buffer.1278" = type { %"class.std::__1::unique_ptr.1279"**, %"class.std::__1::unique_ptr.1279"**, %"class.std::__1::unique_ptr.1279"**, %"class.std::__1::__compressed_pair.1280" }
%"class.std::__1::unique_ptr.1279" = type opaque
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"class.std::__1::unique_ptr.1279"** }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::unordered_map.1289" = type { %"class.std::__1::__hash_table.1290" }
%"class.std::__1::__hash_table.1290" = type <{ %"class.std::__1::unique_ptr.1291", %"class.std::__1::__compressed_pair.1301", %"class.std::__1::__compressed_pair.1306", %"class.std::__1::__compressed_pair.1309", [4 x i8] }>
%"class.std::__1::unique_ptr.1291" = type { %"class.std::__1::__compressed_pair.1292" }
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.1293", %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %"struct.std::__1::__hash_node_base.1294"** }
%"struct.std::__1::__hash_node_base.1294" = type { %"struct.std::__1::__hash_node_base.1294"* }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"class.std::__1::__bucket_list_deallocator.1296" }
%"class.std::__1::__bucket_list_deallocator.1296" = type { %"class.std::__1::__compressed_pair.1297" }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"struct.std::__1::__hash_node_base.1294" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.414" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1273", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1341", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1342", %"class.v8::base::TimeTicks", i64 }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1337, %union.anon.1339, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1337 = type { i64 }
%union.anon.1339 = type { i64 }
%"class.std::__1::weak_ptr.1341" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.414" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1342" = type { %"class.v8::PersistentBase.1343" }
%"class.v8::PersistentBase.1343" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1313", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1313" = type { %"class.std::__1::__hash_table.1314" }
%"class.std::__1::__hash_table.1314" = type <{ %"class.std::__1::unique_ptr.1315", %"class.std::__1::__compressed_pair.1325", %"class.std::__1::__compressed_pair.1330", %"class.std::__1::__compressed_pair.1333", [4 x i8] }>
%"class.std::__1::unique_ptr.1315" = type { %"class.std::__1::__compressed_pair.1316" }
%"class.std::__1::__compressed_pair.1316" = type { %"struct.std::__1::__compressed_pair_elem.1317", %"struct.std::__1::__compressed_pair_elem.1319" }
%"struct.std::__1::__compressed_pair_elem.1317" = type { %"struct.std::__1::__hash_node_base.1318"** }
%"struct.std::__1::__hash_node_base.1318" = type { %"struct.std::__1::__hash_node_base.1318"* }
%"struct.std::__1::__compressed_pair_elem.1319" = type { %"class.std::__1::__bucket_list_deallocator.1320" }
%"class.std::__1::__bucket_list_deallocator.1320" = type { %"class.std::__1::__compressed_pair.1321" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"struct.std::__1::__hash_node_base.1318" }
%"class.std::__1::__compressed_pair.1330" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1344" = type { %"class.std::__1::__compressed_pair.1345" }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1373", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1349", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1353", %"class.std::__1::unique_ptr.1359", %"class.std::__1::unique_ptr.728", %"class.std::__1::vector.1365", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1349" = type { %"struct.std::__1::__atomic_base.1350" }
%"struct.std::__1::__atomic_base.1350" = type { %"struct.std::__1::__cxx_atomic_impl.1351" }
%"struct.std::__1::__cxx_atomic_impl.1351" = type { %"struct.std::__1::__cxx_atomic_base_impl.1352" }
%"struct.std::__1::__cxx_atomic_base_impl.1352" = type { i32 }
%"class.std::__1::unique_ptr.1353" = type { %"class.std::__1::__compressed_pair.1354" }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.1355" }
%"struct.std::__1::__compressed_pair_elem.1355" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.1090" }
%"class.std::__1::unique_ptr.1359" = type { %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1361" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1365" = type { %"class.std::__1::__vector_base.1366" }
%"class.std::__1::__vector_base.1366" = type { %"struct.std::__1::pair.1367"*, %"struct.std::__1::pair.1367"*, %"class.std::__1::__compressed_pair.1368" }
%"struct.std::__1::pair.1367" = type opaque
%"class.std::__1::__compressed_pair.1368" = type { %"struct.std::__1::__compressed_pair_elem.1369" }
%"struct.std::__1::__compressed_pair_elem.1369" = type { %"struct.std::__1::pair.1367"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.351" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.289", %"class.std::__1::vector.289", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.291" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.296" }
%"class.std::__1::__hash_table.296" = type <{ %"class.std::__1::unique_ptr.297", %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.316", [4 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299", %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"struct.std::__1::__hash_node_base.300"** }
%"struct.std::__1::__hash_node_base.300" = type { %"struct.std::__1::__hash_node_base.300"* }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.std::__1::__bucket_list_deallocator.302" }
%"class.std::__1::__bucket_list_deallocator.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.300" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.272", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.332"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.340", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.272", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.272", %"struct.std::__1::atomic.321", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.321" = type { %"struct.std::__1::__atomic_base.322" }
%"struct.std::__1::__atomic_base.322" = type { %"struct.std::__1::__cxx_atomic_impl.323" }
%"struct.std::__1::__cxx_atomic_impl.323" = type { %"struct.std::__1::__cxx_atomic_base_impl.324" }
%"struct.std::__1::__cxx_atomic_base_impl.324" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.325" }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.327" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.332" = type { %"class.std::__1::__tree.333" }
%"class.std::__1::__tree.333" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.334", %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::atomic.340" = type { %"struct.std::__1::__atomic_base.341" }
%"struct.std::__1::__atomic_base.341" = type { %"struct.std::__1::__cxx_atomic_impl.342" }
%"struct.std::__1::__cxx_atomic_impl.342" = type { %"struct.std::__1::__cxx_atomic_base_impl.343" }
%"struct.std::__1::__cxx_atomic_base_impl.343" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.344", i8, [7 x i8] }>
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { i64*, i64*, %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1373" = type { %"class.std::__1::__compressed_pair.1374" }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.1375" }
%"struct.std::__1::__compressed_pair_elem.1375" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1382" = type { %"class.std::__1::__compressed_pair.1383" }
%"class.std::__1::__compressed_pair.1383" = type { %"struct.std::__1::__compressed_pair_elem.1384" }
%"struct.std::__1::__compressed_pair_elem.1384" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.1116", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.1116" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1390" }
%"class.std::__1::unordered_map.1390" = type { %"class.std::__1::__hash_table.1391" }
%"class.std::__1::__hash_table.1391" = type <{ %"class.std::__1::unique_ptr.1392", %"class.std::__1::__compressed_pair.1402", %"class.std::__1::__compressed_pair.1407", %"class.std::__1::__compressed_pair.1410", [4 x i8] }>
%"class.std::__1::unique_ptr.1392" = type { %"class.std::__1::__compressed_pair.1393" }
%"class.std::__1::__compressed_pair.1393" = type { %"struct.std::__1::__compressed_pair_elem.1394", %"struct.std::__1::__compressed_pair_elem.1396" }
%"struct.std::__1::__compressed_pair_elem.1394" = type { %"struct.std::__1::__hash_node_base.1395"** }
%"struct.std::__1::__hash_node_base.1395" = type { %"struct.std::__1::__hash_node_base.1395"* }
%"struct.std::__1::__compressed_pair_elem.1396" = type { %"class.std::__1::__bucket_list_deallocator.1397" }
%"class.std::__1::__bucket_list_deallocator.1397" = type { %"class.std::__1::__compressed_pair.1398" }
%"class.std::__1::__compressed_pair.1398" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1402" = type { %"struct.std::__1::__compressed_pair_elem.1403" }
%"struct.std::__1::__compressed_pair_elem.1403" = type { %"struct.std::__1::__hash_node_base.1395" }
%"class.std::__1::__compressed_pair.1407" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::atomic.1416" = type { %"struct.std::__1::__atomic_base.1417" }
%"struct.std::__1::__atomic_base.1417" = type { %"struct.std::__1::__cxx_atomic_impl.1418" }
%"struct.std::__1::__cxx_atomic_impl.1418" = type { %"struct.std::__1::__cxx_atomic_base_impl.1419" }
%"struct.std::__1::__cxx_atomic_base_impl.1419" = type { %"class.std::__1::vector.1420"* }
%"class.std::__1::vector.1420" = type { %"class.std::__1::__vector_base.1421" }
%"class.std::__1::__vector_base.1421" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1422" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1422" = type { %"struct.std::__1::__compressed_pair_elem.1423" }
%"struct.std::__1::__compressed_pair_elem.1423" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.277" = type { %"struct.std::__1::__atomic_base.278" }
%"struct.std::__1::__atomic_base.278" = type { %"struct.std::__1::__cxx_atomic_impl.279" }
%"struct.std::__1::__cxx_atomic_impl.279" = type { %"struct.std::__1::__cxx_atomic_base_impl.280" }
%"struct.std::__1::__cxx_atomic_base_impl.280" = type { i32 }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"struct.std::__1::pair.283"*, %"struct.std::__1::pair.283"*, %"class.std::__1::__compressed_pair.284" }
%"struct.std::__1::pair.283" = type opaque
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::pair.283"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.357" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.357" = type { %"class.std::__1::__vector_base.358" }
%"class.std::__1::__vector_base.358" = type { %"struct.std::__1::pair.359"*, %"struct.std::__1::pair.359"*, %"class.std::__1::__compressed_pair.360" }
%"struct.std::__1::pair.359" = type { i32, i64 }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"struct.std::__1::pair.359"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.365" }
%"class.std::__1::unordered_map.365" = type { %"class.std::__1::__hash_table.366" }
%"class.std::__1::__hash_table.366" = type <{ %"class.std::__1::unique_ptr.367", %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.382", %"class.std::__1::__compressed_pair.387", [4 x i8] }>
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369", %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"struct.std::__1::__hash_node_base.370"** }
%"struct.std::__1::__hash_node_base.370" = type { %"struct.std::__1::__hash_node_base.370"* }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.std::__1::__bucket_list_deallocator.372" }
%"class.std::__1::__bucket_list_deallocator.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.std::__1::__hash_node_base.370" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.406", %"struct.std::__1::atomic.410", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.410" = type { %"struct.std::__1::__atomic_base.411" }
%"struct.std::__1::__atomic_base.411" = type { %"struct.std::__1::__cxx_atomic_impl.412" }
%"struct.std::__1::__cxx_atomic_impl.412" = type { %"struct.std::__1::__cxx_atomic_base_impl.413" }
%"struct.std::__1::__cxx_atomic_base_impl.413" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.415" = type { %"struct.std::__1::__atomic_base.416" }
%"struct.std::__1::__atomic_base.416" = type { %"struct.std::__1::__cxx_atomic_impl.417" }
%"struct.std::__1::__cxx_atomic_impl.417" = type { %"struct.std::__1::__cxx_atomic_base_impl.418" }
%"struct.std::__1::__cxx_atomic_base_impl.418" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.419" = type { %"class.std::__1::__vector_base.420" }
%"class.std::__1::__vector_base.420" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.421" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.474", %"class.std::__1::unique_ptr.480", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.534", %"class.std::__1::vector.534", %"class.std::__1::vector.534", %"class.std::__1::vector.541", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.435", %"class.std::__1::vector.436", %"class.std::__1::vector.443", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.435" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.436" = type { %"class.std::__1::__vector_base.437" }
%"class.std::__1::__vector_base.437" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.438" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.443" = type { %"class.std::__1::__vector_base.444" }
%"class.std::__1::__vector_base.444" = type { %"class.std::__1::unique_ptr.445"*, %"class.std::__1::unique_ptr.445"*, %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::unique_ptr.445" = type opaque
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.std::__1::unique_ptr.445"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.451", %"class.v8::internal::Worklist.453", %"class.v8::internal::Worklist.453", %"class.v8::internal::Worklist.453", %"class.v8::internal::Worklist.455", %"class.v8::internal::Worklist.457", %"class.v8::internal::Worklist.459", %"class.v8::internal::Worklist.461", %"class.v8::internal::Worklist.463", %"class.v8::internal::Worklist.465" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.451" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.453" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.455" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.457" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.459" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.461" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.463" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.465" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.467", i8, i64 }
%"class.std::__1::vector.467" = type { %"class.std::__1::__vector_base.468" }
%"class.std::__1::__vector_base.468" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.483" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.435"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.510" }
%"class.std::__1::unordered_map.510" = type { %"class.std::__1::__hash_table.511" }
%"class.std::__1::__hash_table.511" = type <{ %"class.std::__1::unique_ptr.512", %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.527", %"class.std::__1::__compressed_pair.530", [4 x i8] }>
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514", %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"struct.std::__1::__hash_node_base.515"** }
%"struct.std::__1::__hash_node_base.515" = type { %"struct.std::__1::__hash_node_base.515"* }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.std::__1::__bucket_list_deallocator.517" }
%"class.std::__1::__bucket_list_deallocator.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.std::__1::__hash_node_base.515" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::vector.534" = type { %"class.std::__1::__vector_base.535" }
%"class.std::__1::__vector_base.535" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"struct.std::__1::pair.543"*, %"struct.std::__1::pair.543"*, %"class.std::__1::__compressed_pair.544" }
%"struct.std::__1::pair.543" = type opaque
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"struct.std::__1::pair.543"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.549", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.534"], [3 x %"class.std::__1::vector.534"], i8, %"struct.std::__1::atomic.406", [6 x i8], %"class.std::__1::vector.534", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.559"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.534", %"class.std::__1::vector.534", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.559" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.584", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.577"], %"class.std::__1::unique_ptr.549" }
%"class.std::__1::vector.577" = type { %"class.std::__1::__vector_base.578" }
%"class.std::__1::__vector_base.578" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.616", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.620", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.625" }
%"struct.std::__1::atomic.616" = type { %"struct.std::__1::__atomic_base.617" }
%"struct.std::__1::__atomic_base.617" = type { %"struct.std::__1::__cxx_atomic_impl.618" }
%"struct.std::__1::__cxx_atomic_impl.618" = type { %"struct.std::__1::__cxx_atomic_base_impl.619" }
%"struct.std::__1::__cxx_atomic_base_impl.619" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.620" = type { %"struct.std::__1::__atomic_base.621" }
%"struct.std::__1::__atomic_base.621" = type { %"struct.std::__1::__cxx_atomic_impl.622" }
%"struct.std::__1::__cxx_atomic_impl.622" = type { %"struct.std::__1::__cxx_atomic_base_impl.623" }
%"struct.std::__1::__cxx_atomic_base_impl.623" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.625" = type { %"class.std::__1::__hash_table.626" }
%"class.std::__1::__hash_table.626" = type <{ %"class.std::__1::unique_ptr.627", %"class.std::__1::__compressed_pair.637", %"class.std::__1::__compressed_pair.642", %"class.std::__1::__compressed_pair.645", [4 x i8] }>
%"class.std::__1::unique_ptr.627" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629", %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"struct.std::__1::__hash_node_base.630"** }
%"struct.std::__1::__hash_node_base.630" = type { %"struct.std::__1::__hash_node_base.630"* }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.std::__1::__bucket_list_deallocator.632" }
%"class.std::__1::__bucket_list_deallocator.632" = type { %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"struct.std::__1::__hash_node_base.630" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.549", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.406", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.655", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.655" = type { %"class.std::__1::__hash_table.656" }
%"class.std::__1::__hash_table.656" = type <{ %"class.std::__1::unique_ptr.657", %"class.std::__1::__compressed_pair.667", %"class.std::__1::__compressed_pair.672", %"class.std::__1::__compressed_pair.675", [4 x i8] }>
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659", %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"struct.std::__1::__hash_node_base.660"** }
%"struct.std::__1::__hash_node_base.660" = type { %"struct.std::__1::__hash_node_base.660"* }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.std::__1::__bucket_list_deallocator.662" }
%"class.std::__1::__bucket_list_deallocator.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"struct.std::__1::__hash_node_base.660" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.691" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.734" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.735", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.28", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.735" = type { %"struct.std::__1::__atomic_base.736" }
%"struct.std::__1::__atomic_base.736" = type { %"struct.std::__1::__cxx_atomic_impl.737" }
%"struct.std::__1::__cxx_atomic_impl.737" = type { %"struct.std::__1::__cxx_atomic_base_impl.738" }
%"struct.std::__1::__cxx_atomic_base_impl.738" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.739" = type { %"class.std::__1::__hash_table.740" }
%"class.std::__1::__hash_table.740" = type <{ %"class.std::__1::unique_ptr.741", %"class.std::__1::__compressed_pair.751", %"class.std::__1::__compressed_pair.756", %"class.std::__1::__compressed_pair.759", [4 x i8] }>
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743", %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"struct.std::__1::__hash_node_base.744"** }
%"struct.std::__1::__hash_node_base.744" = type { %"struct.std::__1::__hash_node_base.744"* }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.std::__1::__bucket_list_deallocator.746" }
%"class.std::__1::__bucket_list_deallocator.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"struct.std::__1::__hash_node_base.744" }
%"class.std::__1::__compressed_pair.756" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.771" = type { %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.777", %"class.std::__1::vector.777" }
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.584" = type { %"class.std::__1::__hash_table.585" }
%"class.std::__1::__hash_table.585" = type <{ %"class.std::__1::unique_ptr.586", %"class.std::__1::__compressed_pair.596", %"class.std::__1::__compressed_pair.601", %"class.std::__1::__compressed_pair.605", [4 x i8] }>
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588", %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"struct.std::__1::__hash_node_base.589"** }
%"struct.std::__1::__hash_node_base.589" = type { %"struct.std::__1::__hash_node_base.589"* }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.std::__1::__bucket_list_deallocator.591" }
%"class.std::__1::__bucket_list_deallocator.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"struct.std::__1::__hash_node_base.589" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unordered_map.816" = type { %"class.std::__1::__hash_table.817" }
%"class.std::__1::__hash_table.817" = type <{ %"class.std::__1::unique_ptr.818", %"class.std::__1::__compressed_pair.828", %"class.std::__1::__compressed_pair.833", %"class.std::__1::__compressed_pair.836", [4 x i8] }>
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820", %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"struct.std::__1::__hash_node_base.821"** }
%"struct.std::__1::__hash_node_base.821" = type { %"struct.std::__1::__hash_node_base.821"* }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.std::__1::__bucket_list_deallocator.823" }
%"class.std::__1::__bucket_list_deallocator.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"struct.std::__1::__hash_node_base.821" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unordered_map.790" = type { %"class.std::__1::__hash_table.791" }
%"class.std::__1::__hash_table.791" = type <{ %"class.std::__1::unique_ptr.792", %"class.std::__1::__compressed_pair.802", %"class.std::__1::__compressed_pair.807", %"class.std::__1::__compressed_pair.810", [4 x i8] }>
%"class.std::__1::unique_ptr.792" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794", %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"struct.std::__1::__hash_node_base.795"** }
%"struct.std::__1::__hash_node_base.795" = type { %"struct.std::__1::__hash_node_base.795"* }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.std::__1::__bucket_list_deallocator.797" }
%"class.std::__1::__bucket_list_deallocator.797" = type { %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"struct.std::__1::__hash_node_base.795" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unordered_map.840" = type { %"class.std::__1::__hash_table.841" }
%"class.std::__1::__hash_table.841" = type <{ %"class.std::__1::unique_ptr.842", %"class.std::__1::__compressed_pair.852", %"class.std::__1::__compressed_pair.857", %"class.std::__1::__compressed_pair.862", [4 x i8] }>
%"class.std::__1::unique_ptr.842" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844", %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::__hash_node_base.845"** }
%"struct.std::__1::__hash_node_base.845" = type { %"struct.std::__1::__hash_node_base.845"* }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.std::__1::__bucket_list_deallocator.847" }
%"class.std::__1::__bucket_list_deallocator.847" = type { %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.845" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::vector.868" = type { %"class.std::__1::__vector_base.869" }
%"class.std::__1::__vector_base.869" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.395" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.777" = type { %"class.std::__1::__vector_base.778" }
%"class.std::__1::__vector_base.778" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::wasm::AsmJsOffsetInformation" = type { %"class.v8::base::Mutex", %"class.v8::internal::OwnedVector", %"class.std::__1::unique_ptr.202" }
%"class.v8::internal::OwnedVector" = type { %"class.std::__1::unique_ptr.196", i64 }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { i8* }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.v8::internal::wasm::AsmJsOffsets"* }
%"struct.v8::internal::wasm::AsmJsOffsets" = type { %"class.std::__1::vector.205" }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"*, %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"*, %"class.std::__1::__compressed_pair.214" }
%"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries" = type { i32, i32, %"class.std::__1::vector.207" }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"struct.v8::internal::wasm::AsmJsOffsetEntry"*, %"struct.v8::internal::wasm::AsmJsOffsetEntry"*, %"class.std::__1::__compressed_pair.209" }
%"struct.v8::internal::wasm::AsmJsOffsetEntry" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.v8::internal::wasm::AsmJsOffsetEntry"* }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* }
%"struct.v8::internal::wasm::WasmModule" = type { %"class.std::__1::unique_ptr.18", i32, i32, i8, i8, i8, i8, i8, i32, %"class.std::__1::vector", i32, i32, i32, i32, i32, i32, i32, i32, %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", %"class.std::__1::vector.59", %"class.std::__1::vector.67", %"class.std::__1::vector.74", %"class.std::__1::vector.81", %"class.std::__1::vector.88", %"class.std::__1::vector.95", %"class.std::__1::vector.102", %"class.std::__1::vector.109", %"class.std::__1::vector.116", %"class.std::__1::vector.123", %"class.std::__1::vector.136", %"class.std::__1::unordered_map.143", %"class.v8::internal::wasm::SignatureMap", i8, %"class.v8::internal::wasm::LazilyGeneratedNames", %"struct.v8::internal::wasm::WasmDebugSymbols", %"class.std::__1::unique_ptr.193" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"*, %"class.std::__1::__compressed_pair.54" }
%"struct.v8::internal::wasm::WasmGlobal" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8], %"class.v8::internal::wasm::WasmInitExpr", %union.anon, i8, i8, [2 x i8] }>
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::wasm::WasmInitExpr" = type { %"union.v8::internal::wasm::WasmInitExpr::Immediate", i32, %"class.std::__1::unique_ptr.48" }
%"union.v8::internal::wasm::WasmInitExpr::Immediate" = type { i64, [8 x i8] }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.v8::internal::wasm::WasmInitExpr"* }
%union.anon = type { i32 }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.v8::internal::wasm::WasmGlobal"* }
%"class.v8::internal::wasm::WireBytesRef" = type { i32, i32 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.v8::internal::wasm::TypeDefinition"*, %"struct.v8::internal::wasm::TypeDefinition"*, %"class.std::__1::__compressed_pair.62" }
%"struct.v8::internal::wasm::TypeDefinition" = type { %union.anon.61 }
%union.anon.61 = type { %"class.v8::internal::Signature"* }
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.v8::internal::wasm::TypeDefinition"* }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { i8*, i8*, %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i8* }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { i32*, i32*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { i32* }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"*, %"class.std::__1::__compressed_pair.83" }
%"struct.v8::internal::wasm::WasmFunction" = type <{ %"class.v8::internal::Signature"*, i32, i32, %"class.v8::internal::wasm::WireBytesRef", i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.v8::internal::wasm::WasmFunction"* }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"struct.v8::internal::wasm::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmDataSegment"*, %"class.std::__1::__compressed_pair.90" }
%"struct.v8::internal::wasm::WasmDataSegment" = type <{ %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WireBytesRef", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.v8::internal::wasm::WasmDataSegment"* }
%"class.std::__1::vector.95" = type { %"class.std::__1::__vector_base.96" }
%"class.std::__1::__vector_base.96" = type { %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"*, %"class.std::__1::__compressed_pair.97" }
%"struct.v8::internal::wasm::WasmTable" = type { %"class.v8::internal::wasm::ValueType", i32, i32, i8, i8, i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.v8::internal::wasm::WasmTable"* }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"struct.v8::internal::wasm::WasmImport"*, %"struct.v8::internal::wasm::WasmImport"*, %"class.std::__1::__compressed_pair.104" }
%"struct.v8::internal::wasm::WasmImport" = type { %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.v8::internal::wasm::WasmImport"* }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"struct.v8::internal::wasm::WasmExport"*, %"struct.v8::internal::wasm::WasmExport"*, %"class.std::__1::__compressed_pair.111" }
%"struct.v8::internal::wasm::WasmExport" = type { %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.v8::internal::wasm::WasmExport"* }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"struct.v8::internal::wasm::WasmException"*, %"struct.v8::internal::wasm::WasmException"*, %"class.std::__1::__compressed_pair.118" }
%"struct.v8::internal::wasm::WasmException" = type { %"class.v8::internal::Signature"* }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.v8::internal::wasm::WasmException"* }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"*, %"class.std::__1::__compressed_pair.131" }
%"struct.v8::internal::wasm::WasmElemSegment" = type <{ %"class.v8::internal::wasm::ValueType", i32, %"class.v8::internal::wasm::WasmInitExpr", %"class.std::__1::vector.125", i32, [4 x i8] }>
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.v8::internal::wasm::WasmElemSegment"* }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"struct.v8::internal::wasm::WasmCompilationHint"*, %"struct.v8::internal::wasm::WasmCompilationHint"*, %"class.std::__1::__compressed_pair.138" }
%"struct.v8::internal::wasm::WasmCompilationHint" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.v8::internal::wasm::WasmCompilationHint"* }
%"class.std::__1::unordered_map.143" = type { %"class.std::__1::__hash_table.144" }
%"class.std::__1::__hash_table.144" = type <{ %"class.std::__1::unique_ptr.145", %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.163", [4 x i8] }>
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147", %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::__hash_node_base.148"** }
%"struct.std::__1::__hash_node_base.148" = type { %"struct.std::__1::__hash_node_base.148"* }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.std::__1::__bucket_list_deallocator.150" }
%"class.std::__1::__bucket_list_deallocator.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::__hash_node_base.148" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::wasm::SignatureMap" = type { i8, [7 x i8], %"class.std::__1::unordered_map.167" }
%"class.std::__1::unordered_map.167" = type { %"class.std::__1::__hash_table.168" }
%"class.std::__1::__hash_table.168" = type <{ %"class.std::__1::unique_ptr.169", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.187", [4 x i8] }>
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171", %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::__hash_node_base.172"** }
%"struct.std::__1::__hash_node_base.172" = type { %"struct.std::__1::__hash_node_base.172"* }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.std::__1::__bucket_list_deallocator.174" }
%"class.std::__1::__bucket_list_deallocator.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::__hash_node_base.172" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.v8::internal::wasm::LazilyGeneratedNames" = type { %"class.v8::base::Mutex", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unordered_map"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.0", %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.14", [4 x i8] }>
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.v8::internal::wasm::WasmDebugSymbols" = type { i32, %"class.v8::internal::wasm::WireBytesRef" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.v8::internal::wasm::AsmJsOffsetInformation"* }
%"struct.v8::internal::wasm::ModuleWireBytes" = type { %"class.v8::internal::Vector" }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"struct.std::__1::pair" = type { i32, %"class.v8::internal::wasm::WireBytesRef" }
%"struct.std::__1::pair.226" = type { i32, %"class.v8::internal::wasm::WireBytesRef" }
%"struct.std::__1::__hash_value_type.1589" = type { %"struct.std::__1::pair" }
%"class.v8::internal::wasm::Result" = type { %"struct.v8::internal::wasm::AsmJsOffsets", %"class.v8::internal::wasm::WasmError" }
%"class.v8::internal::wasm::WasmError" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.v8::internal::wasm::WasmFunctionName" = type { %"struct.v8::internal::wasm::WasmFunction"*, %"class.v8::internal::Vector.234" }
%"class.v8::internal::Vector.234" = type { i8*, i64 }
%"struct.std::__1::__hash_node_base.1610" = type { %"struct.std::__1::__hash_node_base.1610"* }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::FactoryBase" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::shared_ptr.1585" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type { %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::OperationsBarrier::Token", %"class.v8::internal::wasm::WasmCodeAllocator", %"class.v8::internal::wasm::WasmFeatures", %"class.std::__1::shared_ptr.1465", %"class.std::__1::unique_ptr.1466", %"class.std::__1::shared_ptr.1479", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.std::__1::unique_ptr.1485", %"class.std::__1::unique_ptr.1491", %"class.std::__1::unique_ptr.1497", %"class.v8::base::RecursiveMutex", %"class.std::__1::map.1502", %"class.std::__1::vector.1511", %"class.std::__1::unique_ptr.1519", %"class.std::__1::vector.1525", %"class.std::__1::unique_ptr.1532", i8, %"class.std::__1::unique_ptr.1538", i8, i8, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.v8::internal::OperationsBarrier::Token" = type { %"class.v8::internal::OperationsBarrier"* }
%"class.v8::internal::OperationsBarrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", i8, i64 }
%"class.v8::internal::wasm::WasmCodeAllocator" = type { %"class.v8::internal::wasm::WasmCodeManager"*, %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.std::__1::vector.1459", i32, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::shared_ptr.912" }
%"class.v8::internal::wasm::WasmCodeManager" = type { i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", i32, %"class.v8::base::Mutex", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1443" }
%"class.std::__1::__tree.1443" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1444", %"class.std::__1::__compressed_pair.1448" }
%"class.std::__1::__compressed_pair.1444" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.v8::internal::wasm::DisjointAllocationPool" = type { %"class.std::__1::set.1451" }
%"class.std::__1::set.1451" = type { %"class.std::__1::__tree.1452" }
%"class.std::__1::__tree.1452" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1453", %"class.std::__1::__compressed_pair.1457" }
%"class.std::__1::__compressed_pair.1453" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.1457" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::vector.1459" = type { %"class.std::__1::__vector_base.1460" }
%"class.std::__1::__vector_base.1460" = type { %"class.v8::internal::VirtualMemory"*, %"class.v8::internal::VirtualMemory"*, %"class.std::__1::__compressed_pair.1461" }
%"class.std::__1::__compressed_pair.1461" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::wasm::WasmFeatures" = type { %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.std::__1::shared_ptr.1465" = type { %"struct.v8::internal::wasm::WasmModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::unique_ptr.1466" = type { %"class.std::__1::__compressed_pair.1467" }
%"class.std::__1::__compressed_pair.1467" = type { %"struct.std::__1::__compressed_pair_elem.1468" }
%"struct.std::__1::__compressed_pair_elem.1468" = type { %"class.v8::internal::wasm::WasmModuleSourceMap"* }
%"class.v8::internal::wasm::WasmModuleSourceMap" = type <{ %"class.std::__1::vector.344", %"class.std::__1::vector.1469", %"class.std::__1::vector.344", %"class.std::__1::vector.344", i8, [7 x i8] }>
%"class.std::__1::vector.1469" = type { %"class.std::__1::__vector_base.1470" }
%"class.std::__1::__vector_base.1470" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1471" }
%"class.std::__1::__compressed_pair.1471" = type { %"struct.std::__1::__compressed_pair_elem.1472" }
%"struct.std::__1::__compressed_pair_elem.1472" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::shared_ptr.1479" = type { %"class.v8::internal::OwnedVector"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::WasmCode" = type { %"class.v8::internal::wasm::NativeModule"*, i8*, i8, %"class.std::__1::unique_ptr.196", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::atomic.1480" }
%"struct.std::__1::atomic.1480" = type { %"struct.std::__1::__atomic_base.1481" }
%"struct.std::__1::__atomic_base.1481" = type { %"struct.std::__1::__atomic_base.1482" }
%"struct.std::__1::__atomic_base.1482" = type { %"struct.std::__1::__cxx_atomic_impl.1483" }
%"struct.std::__1::__cxx_atomic_impl.1483" = type { %"struct.std::__1::__cxx_atomic_base_impl.1484" }
%"struct.std::__1::__cxx_atomic_base_impl.1484" = type { i32 }
%"class.std::__1::unique_ptr.1485" = type { %"class.std::__1::__compressed_pair.1486" }
%"class.std::__1::__compressed_pair.1486" = type { %"struct.std::__1::__compressed_pair_elem.1487" }
%"struct.std::__1::__compressed_pair_elem.1487" = type { %"class.v8::internal::wasm::CompilationState"* }
%"class.v8::internal::wasm::CompilationState" = type { i8 }
%"class.std::__1::unique_ptr.1491" = type { %"class.std::__1::__compressed_pair.1492" }
%"class.std::__1::__compressed_pair.1492" = type { %"struct.std::__1::__compressed_pair_elem.1493" }
%"struct.std::__1::__compressed_pair_elem.1493" = type { %"class.v8::internal::wasm::WasmImportWrapperCache"* }
%"class.v8::internal::wasm::WasmImportWrapperCache" = type opaque
%"class.std::__1::unique_ptr.1497" = type { %"class.std::__1::__compressed_pair.1498" }
%"class.std::__1::__compressed_pair.1498" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"class.std::__1::map.1502" = type { %"class.std::__1::__tree.1503" }
%"class.std::__1::__tree.1503" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1504", %"class.std::__1::__compressed_pair.1508" }
%"class.std::__1::__compressed_pair.1504" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.1508" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::vector.1511" = type { %"class.std::__1::__vector_base.1512" }
%"class.std::__1::__vector_base.1512" = type { %"class.std::__1::unique_ptr.1513"*, %"class.std::__1::unique_ptr.1513"*, %"class.std::__1::__compressed_pair.1514" }
%"class.std::__1::unique_ptr.1513" = type opaque
%"class.std::__1::__compressed_pair.1514" = type { %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1515" = type { %"class.std::__1::unique_ptr.1513"* }
%"class.std::__1::unique_ptr.1519" = type { %"class.std::__1::__compressed_pair.1520" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.1521" }
%"struct.std::__1::__compressed_pair_elem.1521" = type { %"class.v8::internal::wasm::WasmCode"** }
%"class.std::__1::vector.1525" = type { %"class.std::__1::__vector_base.1526" }
%"class.std::__1::__vector_base.1526" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"class.std::__1::__compressed_pair.1527" }
%"struct.v8::internal::wasm::NativeModule::CodeSpaceData" = type { %"class.v8::base::AddressRegion", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"* }
%"class.std::__1::__compressed_pair.1527" = type { %"struct.std::__1::__compressed_pair_elem.1528" }
%"struct.std::__1::__compressed_pair_elem.1528" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"* }
%"class.std::__1::unique_ptr.1532" = type { %"class.std::__1::__compressed_pair.1533" }
%"class.std::__1::__compressed_pair.1533" = type { %"struct.std::__1::__compressed_pair_elem.1534" }
%"struct.std::__1::__compressed_pair_elem.1534" = type { %"class.v8::internal::wasm::DebugInfo"* }
%"class.v8::internal::wasm::DebugInfo" = type opaque
%"class.std::__1::unique_ptr.1538" = type { %"class.std::__1::__compressed_pair.1539" }
%"class.std::__1::__compressed_pair.1539" = type { %"struct.std::__1::__compressed_pair_elem.1540" }
%"struct.std::__1::__compressed_pair_elem.1540" = type { %"class.std::__1::map.1541"* }
%"class.std::__1::map.1541" = type opaque
%"class.v8::internal::wasm::ErrorThrower" = type { %"class.v8::internal::Isolate"*, i8*, i32, %"class.std::__1::basic_string" }
%"class.std::__1::vector.1545" = type { %"class.std::__1::__vector_base.1546" }
%"class.std::__1::__vector_base.1546" = type { %"struct.v8::internal::wasm::CustomSectionOffset"*, %"struct.v8::internal::wasm::CustomSectionOffset"*, %"class.std::__1::__compressed_pair.1547" }
%"struct.v8::internal::wasm::CustomSectionOffset" = type { %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef" }
%"class.std::__1::__compressed_pair.1547" = type { %"struct.std::__1::__compressed_pair_elem.1548" }
%"struct.std::__1::__compressed_pair_elem.1548" = type { %"struct.v8::internal::wasm::CustomSectionOffset"* }
%"class.std::__1::vector.1552" = type { %"class.std::__1::__vector_base.1553" }
%"class.std::__1::__vector_base.1553" = type { %"class.v8::internal::Handle.1434"*, %"class.v8::internal::Handle.1434"*, %"class.std::__1::__compressed_pair.1554" }
%"class.v8::internal::Handle.1434" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.v8::internal::Handle.1434"* }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.std::__1::__sp_mut" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNK2v88internal4wasm9ValueType4nameEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2v88internal8JSObject24EnsureCanContainElementsENS0_6HandleIS1_EENS2_INS0_14FixedArrayBaseEEEjNS0_18EnsureElementsModeE = comdat any

$_ZN2v88internal8JSObject24EnsureCanContainElementsINS0_20CompressedObjectSlotEEEvNS0_6HandleIS1_EET_jNS0_18EnsureElementsModeE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal4wasm12WireBytesRefEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE28__node_insert_unique_prepareEmRS6_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal4wasm12WireBytesRefEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal4wasm12WireBytesRefEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN2v88internal4wasm12WasmInitExprD2Ev = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"result >= 0\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"parameters\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"results\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"mutable\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"minimum\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"maximum\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"anyfunc\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"element\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"module\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"kind\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"global\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"exception\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.23 = private unnamed_addr constant [45 x i8] c"out of memory allocating custom section data\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"(ref \00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"null \00", align 1
@.str.26 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.27 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"ref\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"(rtt \00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c" \00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.33 = private unnamed_addr constant [7 x i8] c"extern\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"i31\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@_ZZN2v88internal4wasm4nameENS1_9ValueKindEE9kKindName = internal unnamed_addr constant [13 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0)], align 16
@.str.38 = private unnamed_addr constant [7 x i8] c"<void>\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"i32\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"i64\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"f32\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"f64\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"s128\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"i8\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"i16\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"rtt\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"ref null\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"<bot>\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZZN2v88internal4wasm10short_nameENS1_9ValueKindEE10kShortName = internal unnamed_addr constant [13 x i8] c"vilfdsbhtkrn*", align 1
@.str.49 = private unnamed_addr constant [23 x i8] c"storage_.is_populated_\00", align 1

@_ZN2v88internal4wasm22AsmJsOffsetInformationC1ENS0_6VectorIKhEE = hidden unnamed_addr alias void (%"class.v8::internal::wasm::AsmJsOffsetInformation"*, i8*, i64), void (%"class.v8::internal::wasm::AsmJsOffsetInformation"*, i8*, i64)* @_ZN2v88internal4wasm22AsmJsOffsetInformationC2ENS0_6VectorIKhEE
@_ZN2v88internal4wasm22AsmJsOffsetInformationD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::wasm::AsmJsOffsetInformation"*), void (%"class.v8::internal::wasm::AsmJsOffsetInformation"*)* @_ZN2v88internal4wasm22AsmJsOffsetInformationD2Ev
@_ZN2v88internal4wasm10WasmModuleC1ENSt3__110unique_ptrINS0_4ZoneENS3_14default_deleteIS5_EEEE = hidden unnamed_addr alias void (%"struct.v8::internal::wasm::WasmModule"*, %"class.v8::internal::Zone"*), void (%"struct.v8::internal::wasm::WasmModule"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal4wasm10WasmModuleC2ENSt3__110unique_ptrINS0_4ZoneENS3_14default_deleteIS5_EEEE
@_ZN2v88internal4wasm10WasmModuleD1Ev = hidden unnamed_addr alias void (%"struct.v8::internal::wasm::WasmModule"*), void (%"struct.v8::internal::wasm::WasmModule"*)* @_ZN2v88internal4wasm10WasmModuleD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal4wasm20LazilyGeneratedNames18LookupFunctionNameERKNS1_15ModuleWireBytesEj(%"class.v8::internal::wasm::LazilyGeneratedNames"*, %"struct.v8::internal::wasm::ModuleWireBytes"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::wasm::LazilyGeneratedNames", %"class.v8::internal::wasm::LazilyGeneratedNames"* %0, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %4) #12
  %5 = getelementptr inbounds %"class.v8::internal::wasm::LazilyGeneratedNames", %"class.v8::internal::wasm::LazilyGeneratedNames"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** %5, align 8
  %7 = icmp eq %"class.std::__1::unordered_map"* %6, null
  br i1 %7, label %8, label %20

8:                                                ; preds = %3
  %9 = tail call i8* @_Znwm(i64 40) #13
  %10 = getelementptr inbounds i8, i8* %9, i64 32
  %11 = bitcast i8* %10 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %11, align 4
  %12 = bitcast %"class.std::__1::unordered_map"** %5 to i8**
  store i8* %9, i8** %12, align 8
  %13 = getelementptr inbounds %"struct.v8::internal::wasm::ModuleWireBytes", %"struct.v8::internal::wasm::ModuleWireBytes"* %1, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"struct.v8::internal::wasm::ModuleWireBytes", %"struct.v8::internal::wasm::ModuleWireBytes"* %1, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = bitcast i8* %9 to %"class.std::__1::unordered_map"*
  tail call void @_ZN2v88internal4wasm19DecodeFunctionNamesEPKhS3_PNSt3__113unordered_mapIjNS1_12WireBytesRefENS4_4hashIjEENS4_8equal_toIjEENS4_9allocatorINS4_4pairIKjS6_EEEEEE(i8* %14, i8* %17, %"class.std::__1::unordered_map"* nonnull %18) #12
  %19 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** %5, align 8
  br label %20

20:                                               ; preds = %3, %8
  %21 = phi %"class.std::__1::unordered_map"* [ %6, %3 ], [ %19, %8 ]
  %22 = zext i32 %2 to i64
  %23 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %98, label %26

26:                                               ; preds = %20
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #12, !range !2
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, 4294967295
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ugt i64 %24, %22
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %98, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base"* %45, null
  br i1 %46, label %98, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br i1 %28, label %49, label %71

49:                                               ; preds = %47, %67
  %50 = phi %"struct.std::__1::__hash_node_base"* [ %69, %67 ], [ %45, %47 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %62, label %55

55:                                               ; preds = %49
  %56 = icmp ult i64 %53, %24
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %53, %24
  br label %59

59:                                               ; preds = %57, %55
  %60 = phi i64 [ %58, %57 ], [ %53, %55 ]
  %61 = icmp eq i64 %60, %37
  br i1 %61, label %67, label %98

62:                                               ; preds = %49
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %2
  br i1 %66, label %89, label %67

67:                                               ; preds = %62, %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base"* %69, null
  br i1 %70, label %98, label %49

71:                                               ; preds = %47, %85
  %72 = phi %"struct.std::__1::__hash_node_base"* [ %87, %85 ], [ %45, %47 ]
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %72, i64 1
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, %22
  br i1 %76, label %80, label %77

77:                                               ; preds = %71
  %78 = and i64 %75, %48
  %79 = icmp eq i64 %78, %37
  br i1 %79, label %85, label %98

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %72, i64 2
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, %2
  br i1 %84, label %89, label %85

85:                                               ; preds = %80, %77
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %72, i64 0, i32 0
  %87 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, align 8
  %88 = icmp eq %"struct.std::__1::__hash_node_base"* %87, null
  br i1 %88, label %98, label %71

89:                                               ; preds = %80, %62
  %90 = phi %"struct.std::__1::__hash_node_base"* [ %50, %62 ], [ %72, %80 ]
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %90, i64 2
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %91 to %"struct.std::__1::pair"*
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 0, i32 1
  %94 = bitcast %"class.v8::internal::wasm::WireBytesRef"* %93 to i64*
  %95 = load i64, i64* %94, align 4
  %96 = and i64 %95, -4294967296
  %97 = and i64 %95, 4294967295
  br label %98

98:                                               ; preds = %85, %77, %67, %59, %43, %20, %36, %89
  %99 = phi i64 [ %97, %89 ], [ 0, %36 ], [ 0, %20 ], [ 0, %43 ], [ 0, %59 ], [ 0, %67 ], [ 0, %77 ], [ 0, %85 ]
  %100 = phi i64 [ %96, %89 ], [ 0, %36 ], [ 0, %20 ], [ 0, %43 ], [ 0, %59 ], [ 0, %67 ], [ 0, %77 ], [ 0, %85 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %4) #12
  %101 = or i64 %100, %99
  ret i64 %101
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN2v88internal4wasm19DecodeFunctionNamesEPKhS3_PNSt3__113unordered_mapIjNS1_12WireBytesRefENS4_4hashIjEENS4_8equal_toIjEENS4_9allocatorINS4_4pairIKjS6_EEEEEE(i8*, i8*, %"class.std::__1::unordered_map"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal4wasm20MaxNumExportWrappersEPKNS1_10WasmModuleE(%"struct.v8::internal::wasm::WasmModule"* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 32, i32 2, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = shl nsw i32 %4, 1
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal4wasm21GetExportWrapperIndexEPKNS1_10WasmModuleEPKNS0_9SignatureINS1_9ValueTypeEEEb(%"struct.v8::internal::wasm::WasmModule"*, %"class.v8::internal::Signature"*, i1 zeroext) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 32
  %5 = tail call i32 @_ZNK2v88internal4wasm12SignatureMap4FindERKNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::SignatureMap"* %4, %"class.v8::internal::Signature"* dereferenceable(24) %1) #12
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %8, label %7, !prof !3

7:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)) #14
  unreachable

8:                                                ; preds = %3
  br i1 %2, label %9, label %13

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 32, i32 2, i32 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  br label %13

13:                                               ; preds = %8, %9
  %14 = phi i32 [ %12, %9 ], [ 0, %8 ]
  %15 = add i32 %14, %5
  ret i32 %15
}

declare i32 @_ZNK2v88internal4wasm12SignatureMap4FindERKNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::SignatureMap"*, %"class.v8::internal::Signature"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal4wasm21GetWasmFunctionOffsetEPKNS1_10WasmModuleEj(%"struct.v8::internal::wasm::WasmModule"* nocapture readonly, i32) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 23
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 23, i32 0, i32 1
  %6 = bitcast %"struct.v8::internal::wasm::WasmFunction"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.81"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 5
  %12 = icmp ugt i64 %11, %4
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = inttoptr i64 %9 to %"struct.v8::internal::wasm::WasmFunction"*
  %15 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %14, i64 %4, i32 3, i32 0
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %2, %13
  %18 = phi i32 [ %16, %13 ], [ -1, %2 ]
  ret i32 %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal4wasm22GetNearestWasmFunctionEPKNS1_10WasmModuleEj(%"struct.v8::internal::wasm::WasmModule"* nocapture readonly, i32) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 23
  %4 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 23, i32 0, i32 1
  %5 = bitcast %"struct.v8::internal::wasm::WasmFunction"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.81"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 5
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %11, 0
  %13 = inttoptr i64 %8 to %"struct.v8::internal::wasm::WasmFunction"*
  br i1 %12, label %30, label %14

14:                                               ; preds = %2
  %15 = icmp sgt i32 %11, 1
  br i1 %15, label %16, label %30

16:                                               ; preds = %14, %16
  %17 = phi i32 [ %28, %16 ], [ %11, %14 ]
  %18 = phi i32 [ %27, %16 ], [ %11, %14 ]
  %19 = phi i32 [ %26, %16 ], [ 0, %14 ]
  %20 = lshr i32 %17, 1
  %21 = add nsw i32 %20, %19
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %13, i64 %22, i32 3, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp ugt i32 %24, %1
  %26 = select i1 %25, i32 %19, i32 %21
  %27 = select i1 %25, i32 %21, i32 %18
  %28 = sub nsw i32 %27, %26
  %29 = icmp sgt i32 %28, 1
  br i1 %29, label %16, label %30

30:                                               ; preds = %16, %14, %2
  %31 = phi i32 [ -1, %2 ], [ 0, %14 ], [ %26, %16 ]
  ret i32 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal4wasm25GetContainingWasmFunctionEPKNS1_10WasmModuleEj(%"struct.v8::internal::wasm::WasmModule"* nocapture readonly, i32) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 23
  %4 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 23, i32 0, i32 1
  %5 = bitcast %"struct.v8::internal::wasm::WasmFunction"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.81"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 5
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %11, 0
  %13 = inttoptr i64 %8 to %"struct.v8::internal::wasm::WasmFunction"*
  br i1 %12, label %44, label %14

14:                                               ; preds = %2
  %15 = icmp sgt i32 %11, 1
  br i1 %15, label %16, label %32

16:                                               ; preds = %14, %16
  %17 = phi i32 [ %28, %16 ], [ %11, %14 ]
  %18 = phi i32 [ %27, %16 ], [ %11, %14 ]
  %19 = phi i32 [ %26, %16 ], [ 0, %14 ]
  %20 = lshr i32 %17, 1
  %21 = add nsw i32 %19, %20
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %13, i64 %22, i32 3, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp ugt i32 %24, %1
  %26 = select i1 %25, i32 %19, i32 %21
  %27 = select i1 %25, i32 %21, i32 %18
  %28 = sub nsw i32 %27, %26
  %29 = icmp sgt i32 %28, 1
  br i1 %29, label %16, label %30

30:                                               ; preds = %16
  %31 = icmp sgt i32 %26, -1
  br i1 %31, label %32, label %44

32:                                               ; preds = %14, %30
  %33 = phi i32 [ %26, %30 ], [ 0, %14 ]
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %13, i64 %34, i32 3, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp ugt i32 %36, %1
  br i1 %37, label %44, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %13, i64 %34, i32 3, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, %36
  %42 = icmp ugt i32 %41, %1
  %43 = select i1 %42, i32 %33, i32 -1
  ret i32 %43

44:                                               ; preds = %2, %30, %32
  %45 = phi i32 [ -1, %32 ], [ %26, %30 ], [ -1, %2 ]
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm20LazilyGeneratedNames13AddForTestingEiNS1_12WireBytesRefE(%"class.v8::internal::wasm::LazilyGeneratedNames"*, i32, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.226", align 8
  %5 = alloca %"struct.std::__1::pair.226", align 8
  %6 = getelementptr inbounds %"class.v8::internal::wasm::LazilyGeneratedNames", %"class.v8::internal::wasm::LazilyGeneratedNames"* %0, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %6) #12
  %7 = getelementptr inbounds %"class.v8::internal::wasm::LazilyGeneratedNames", %"class.v8::internal::wasm::LazilyGeneratedNames"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** %7, align 8
  %9 = icmp eq %"class.std::__1::unordered_map"* %8, null
  br i1 %9, label %10, label %16

10:                                               ; preds = %3
  %11 = tail call i8* @_Znwm(i64 40) #13
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %13, align 4
  %14 = bitcast %"class.std::__1::unordered_map"** %7 to i8**
  store i8* %11, i8** %14, align 8
  %15 = bitcast i8* %11 to %"class.std::__1::unordered_map"*
  br label %16

16:                                               ; preds = %3, %10
  %17 = phi %"class.std::__1::unordered_map"* [ %8, %3 ], [ %15, %10 ]
  %18 = bitcast %"struct.std::__1::pair.226"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %18)
  %19 = bitcast %"struct.std::__1::pair.226"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19)
  %20 = getelementptr inbounds %"struct.std::__1::pair.226", %"struct.std::__1::pair.226"* %4, i64 0, i32 0
  store i32 %1, i32* %20, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.226", %"struct.std::__1::pair.226"* %4, i64 0, i32 1
  %22 = bitcast %"class.v8::internal::wasm::WireBytesRef"* %21 to i64*
  store i64 %2, i64* %22, align 4
  %23 = bitcast %"struct.std::__1::pair.226"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %2, 32
  %26 = trunc i64 %25 to i32
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19)
  %27 = bitcast %"struct.std::__1::pair.226"* %5 to i64*
  store i64 %24, i64* %27, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.226", %"struct.std::__1::pair.226"* %5, i64 0, i32 1, i32 1
  store i32 %26, i32* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %17, i64 0, i32 0
  %30 = tail call i8* @_Znwm(i64 32) #13, !noalias !4
  %31 = getelementptr inbounds i8, i8* %30, i64 16
  %32 = bitcast i8* %31 to i32*
  %33 = trunc i64 %24 to i32
  store i32 %33, i32* %32, align 4, !noalias !4
  %34 = getelementptr inbounds i8, i8* %30, i64 20
  %35 = bitcast i8* %34 to i64*
  %36 = getelementptr inbounds %"struct.std::__1::pair.226", %"struct.std::__1::pair.226"* %5, i64 0, i32 1
  %37 = bitcast %"class.v8::internal::wasm::WireBytesRef"* %36 to i64*
  %38 = load i64, i64* %37, align 4, !noalias !4
  store i64 %38, i64* %35, align 4, !noalias !4
  %39 = and i64 %24, 4294967295
  %40 = getelementptr inbounds i8, i8* %30, i64 8
  %41 = bitcast i8* %40 to i64*
  %42 = bitcast i8* %30 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %42, align 8, !noalias !4
  %43 = bitcast i8* %31 to %"struct.std::__1::__hash_value_type.1589"*
  store i64 %39, i64* %41, align 8
  %44 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal4wasm12WireBytesRefEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE28__node_insert_unique_prepareEmRS6_(%"class.std::__1::__hash_table"* %29, i64 %39, %"struct.std::__1::__hash_value_type.1589"* dereferenceable(12) %43) #12
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %46, label %103

46:                                               ; preds = %16
  %47 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = load i64, i64* %41, align 8
  %50 = tail call i64 @llvm.ctpop.i64(i64 %48) #12, !range !2
  %51 = icmp ugt i64 %50, 1
  br i1 %51, label %55, label %52

52:                                               ; preds = %46
  %53 = add i64 %48, -1
  %54 = and i64 %53, %49
  br label %59

55:                                               ; preds = %46
  %56 = icmp ult i64 %49, %48
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %49, %48
  br label %59

59:                                               ; preds = %57, %55, %52
  %60 = phi i64 [ %54, %52 ], [ %58, %57 ], [ %49, %55 ]
  %61 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %61, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %62, i64 %60
  %64 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base"* %64, null
  br i1 %65, label %66, label %92

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast i8* %30 to i64*
  store i64 %69, i64* %70, align 8
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i8**
  store i8* %30, i8** %71, align 8
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %61, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %60
  store %"struct.std::__1::__hash_node_base"* %67, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base"* %74, null
  br i1 %75, label %99, label %76

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %74, i64 1
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  br i1 %51, label %83, label %80

80:                                               ; preds = %76
  %81 = add i64 %48, -1
  %82 = and i64 %79, %81
  br label %87

83:                                               ; preds = %76
  %84 = icmp ult i64 %79, %48
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = urem i64 %79, %48
  br label %87

87:                                               ; preds = %85, %83, %80
  %88 = phi i64 [ %82, %80 ], [ %86, %85 ], [ %79, %83 ]
  %89 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %61, align 8
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %89, i64 %88
  %91 = bitcast %"struct.std::__1::__hash_node_base"** %90 to i8**
  br label %97

92:                                               ; preds = %59
  %93 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast i8* %30 to i64*
  store i64 %94, i64* %95, align 8
  %96 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i8**
  br label %97

97:                                               ; preds = %92, %87
  %98 = phi i8** [ %91, %87 ], [ %96, %92 ]
  store i8* %30, i8** %98, align 8
  br label %99

99:                                               ; preds = %97, %66
  %100 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %100, align 8
  br label %104

103:                                              ; preds = %16
  tail call void @_ZdlPv(i8* nonnull %30) #13
  br label %104

104:                                              ; preds = %99, %103
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %18)
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm22AsmJsOffsetInformationC2ENS0_6VectorIKhEE(%"class.v8::internal::wasm::AsmJsOffsetInformation"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %0, i64 0, i32 0
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %4) #12
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znam(i64 %2) #13
  %8 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %2, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %1, i64 %2, i1 false) #12
  br label %10

10:                                               ; preds = %3, %6
  %11 = phi { i8*, i64 } [ %9, %6 ], [ zeroinitializer, %3 ]
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = extractvalue { i8*, i64 } %11, 0
  store i8* %13, i8** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %0, i64 0, i32 1, i32 1
  %15 = extractvalue { i8*, i64 } %11, 1
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %0, i64 0, i32 2
  %17 = bitcast %"class.std::__1::unique_ptr.202"* %16 to i64*
  store i64 0, i64* %17, align 8
  ret void
}

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm22AsmJsOffsetInformationD2Ev(%"class.v8::internal::wasm::AsmJsOffsetInformation"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.v8::internal::wasm::AsmJsOffsets"*, %"struct.v8::internal::wasm::AsmJsOffsets"** %2, align 8
  store %"struct.v8::internal::wasm::AsmJsOffsets"* null, %"struct.v8::internal::wasm::AsmJsOffsets"** %2, align 8
  %4 = icmp eq %"struct.v8::internal::wasm::AsmJsOffsets"* %3, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsets", %"struct.v8::internal::wasm::AsmJsOffsets"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"*, %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"** %6, align 8
  %8 = icmp eq %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %7, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %5
  %10 = bitcast %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %7 to i8*
  %11 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsets", %"struct.v8::internal::wasm::AsmJsOffsets"* %3, i64 0, i32 0, i32 0, i32 1
  %12 = load %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"*, %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"** %11, align 8
  %13 = icmp eq %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %12, %7
  br i1 %13, label %30, label %14

14:                                               ; preds = %9, %25
  %15 = phi %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* [ %16, %25 ], [ %12, %9 ]
  %16 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries", %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %15, i64 -1
  %17 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries", %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %15, i64 -1, i32 2, i32 0, i32 0
  %18 = load %"struct.v8::internal::wasm::AsmJsOffsetEntry"*, %"struct.v8::internal::wasm::AsmJsOffsetEntry"** %17, align 8
  %19 = icmp eq %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = ptrtoint %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %18 to i64
  %22 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries", %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %15, i64 -1, i32 2, i32 0, i32 1
  %23 = bitcast %"struct.v8::internal::wasm::AsmJsOffsetEntry"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %18 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %20, %14
  %26 = icmp eq %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %16, %7
  br i1 %26, label %27, label %14

27:                                               ; preds = %25
  %28 = bitcast %"struct.v8::internal::wasm::AsmJsOffsets"* %3 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %9
  %31 = phi i8* [ %29, %27 ], [ %10, %9 ]
  store %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %7, %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"** %11, align 8
  tail call void @_ZdlPv(i8* %31) #13
  br label %32

32:                                               ; preds = %30, %5
  %33 = bitcast %"struct.v8::internal::wasm::AsmJsOffsets"* %3 to i8*
  tail call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %1, %32
  %35 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  store i8* null, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %34
  tail call void @_ZdaPv(i8* nonnull %36) #13
  br label %39

39:                                               ; preds = %34, %38
  %40 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %0, i64 0, i32 0
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %40) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal4wasm22AsmJsOffsetInformation17GetSourcePositionEiib(%"class.v8::internal::wasm::AsmJsOffsetInformation"*, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal4wasm22AsmJsOffsetInformation20EnsureDecodedOffsetsEv(%"class.v8::internal::wasm::AsmJsOffsetInformation"* %0)
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"struct.v8::internal::wasm::AsmJsOffsets"*, %"struct.v8::internal::wasm::AsmJsOffsets"** %5, align 8
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsets", %"struct.v8::internal::wasm::AsmJsOffsets"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"*, %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"** %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries", %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %9, i64 %7, i32 2, i32 0, i32 0
  %11 = load %"struct.v8::internal::wasm::AsmJsOffsetEntry"*, %"struct.v8::internal::wasm::AsmJsOffsetEntry"** %10, align 8
  %12 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries", %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %9, i64 %7, i32 2, i32 0, i32 1
  %13 = bitcast %"struct.v8::internal::wasm::AsmJsOffsetEntry"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = ptrtoint %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %11 to i64
  %16 = sub i64 %14, %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %4
  %19 = sdiv exact i64 %16, 12
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi %"struct.v8::internal::wasm::AsmJsOffsetEntry"* [ %32, %20 ], [ %11, %18 ]
  %22 = phi i64 [ %31, %20 ], [ %19, %18 ]
  %23 = lshr i64 %22, 1
  %24 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetEntry", %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %21, i64 %23
  %25 = getelementptr %"struct.v8::internal::wasm::AsmJsOffsetEntry", %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, %2
  %28 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetEntry", %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %24, i64 1
  %29 = xor i64 %23, -1
  %30 = add i64 %22, %29
  %31 = select i1 %27, i64 %30, i64 %23
  %32 = select i1 %27, %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %28, %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %21
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %34, label %20

34:                                               ; preds = %20, %4
  %35 = phi %"struct.v8::internal::wasm::AsmJsOffsetEntry"* [ %11, %4 ], [ %32, %20 ]
  %36 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetEntry", %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %35, i64 0, i32 2
  %37 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetEntry", %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %35, i64 0, i32 1
  %38 = select i1 %3, i32* %36, i32* %37
  %39 = load i32, i32* %38, align 4
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm22AsmJsOffsetInformation20EnsureDecodedOffsetsEv(%"class.v8::internal::wasm::AsmJsOffsetInformation"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::wasm::Result", align 16
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %0, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3) #12
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.202"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.v8::internal::wasm::AsmJsOffsets"*, %"struct.v8::internal::wasm::AsmJsOffsets"** %5, align 8
  %7 = icmp eq %"struct.v8::internal::wasm::AsmJsOffsets"* %6, null
  br i1 %7, label %8, label %67

8:                                                ; preds = %1
  %9 = bitcast %"class.v8::internal::wasm::Result"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %0, i64 0, i32 1, i32 1
  %13 = load i64, i64* %12, align 8
  call void @_ZN2v88internal4wasm18DecodeAsmJsOffsetsENS0_6VectorIKhEE(%"class.v8::internal::wasm::Result"* nonnull sret %2, i8* %11, i64 %13) #12
  %14 = bitcast %"class.v8::internal::wasm::Result"* %2 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 16
  %16 = getelementptr inbounds %"class.v8::internal::wasm::Result", %"class.v8::internal::wasm::Result"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"** %16 to i64*
  %18 = load i64, i64* %17, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #12
  %19 = getelementptr inbounds %"class.v8::internal::wasm::Result", %"class.v8::internal::wasm::Result"* %2, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds i8, i8* %9, i64 55
  %22 = load i8, i8* %21, align 1
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #12
  %23 = call i8* @_Znwm(i64 24) #13
  %24 = bitcast i8* %23 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 16
  %26 = bitcast i8* %25 to i64*
  store i64 %18, i64* %26, align 8
  %27 = ptrtoint i8* %23 to i64
  %28 = load %"struct.v8::internal::wasm::AsmJsOffsets"*, %"struct.v8::internal::wasm::AsmJsOffsets"** %5, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.202"* %4 to i64*
  store i64 %27, i64* %29, align 8
  %30 = icmp eq %"struct.v8::internal::wasm::AsmJsOffsets"* %28, null
  br i1 %30, label %60, label %31

31:                                               ; preds = %8
  %32 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsets", %"struct.v8::internal::wasm::AsmJsOffsets"* %28, i64 0, i32 0, i32 0, i32 0
  %33 = load %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"*, %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"** %32, align 8
  %34 = icmp eq %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %33, null
  br i1 %34, label %58, label %35

35:                                               ; preds = %31
  %36 = bitcast %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %33 to i8*
  %37 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsets", %"struct.v8::internal::wasm::AsmJsOffsets"* %28, i64 0, i32 0, i32 0, i32 1
  %38 = load %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"*, %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"** %37, align 8
  %39 = icmp eq %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %38, %33
  br i1 %39, label %56, label %40

40:                                               ; preds = %35, %51
  %41 = phi %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* [ %42, %51 ], [ %38, %35 ]
  %42 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries", %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %41, i64 -1
  %43 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries", %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %41, i64 -1, i32 2, i32 0, i32 0
  %44 = load %"struct.v8::internal::wasm::AsmJsOffsetEntry"*, %"struct.v8::internal::wasm::AsmJsOffsetEntry"** %43, align 8
  %45 = icmp eq %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %40
  %47 = ptrtoint %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %44 to i64
  %48 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries", %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %41, i64 -1, i32 2, i32 0, i32 1
  %49 = bitcast %"struct.v8::internal::wasm::AsmJsOffsetEntry"** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = bitcast %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %44 to i8*
  call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %46, %40
  %52 = icmp eq %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %42, %33
  br i1 %52, label %53, label %40

53:                                               ; preds = %51
  %54 = bitcast %"struct.v8::internal::wasm::AsmJsOffsets"* %28 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %35
  %57 = phi i8* [ %55, %53 ], [ %36, %35 ]
  store %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %33, %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"** %37, align 8
  call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %56, %31
  %59 = bitcast %"struct.v8::internal::wasm::AsmJsOffsets"* %28 to i8*
  call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %58, %8
  store i64 0, i64* %12, align 8
  %61 = load i8*, i8** %10, align 8
  store i8* null, i8** %10, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %60
  call void @_ZdaPv(i8* nonnull %61) #13
  br label %64

64:                                               ; preds = %60, %63
  %65 = icmp slt i8 %22, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %64
  call void @_ZdlPv(i8* %20) #13
  br label %67

67:                                               ; preds = %66, %64, %1
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal4wasm22AsmJsOffsetInformation18GetFunctionOffsetsEi(%"class.v8::internal::wasm::AsmJsOffsetInformation"*, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal4wasm22AsmJsOffsetInformation20EnsureDecodedOffsetsEv(%"class.v8::internal::wasm::AsmJsOffsetInformation"* %0)
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"struct.v8::internal::wasm::AsmJsOffsets"*, %"struct.v8::internal::wasm::AsmJsOffsets"** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsets", %"struct.v8::internal::wasm::AsmJsOffsets"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"*, %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries", %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %7, i64 %5, i32 0
  %9 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries", %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %7, i64 %5, i32 1
  %10 = load i32, i32* %8, align 4
  %11 = load i32, i32* %9, align 4
  %12 = zext i32 %11 to i64
  %13 = shl nuw i64 %12, 32
  %14 = zext i32 %10 to i64
  %15 = or i64 %13, %14
  ret i64 %15
}

declare void @_ZN2v88internal4wasm18DecodeAsmJsOffsetsENS0_6VectorIKhEE(%"class.v8::internal::wasm::Result"* sret, i8*, i64) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8*, i64 } @_ZNK2v88internal4wasm15ModuleWireBytes13GetNameOrNullENS1_12WireBytesRefE(%"struct.v8::internal::wasm::ModuleWireBytes"* nocapture readonly, i64) local_unnamed_addr #4 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = lshr i64 %1, 32
  %7 = and i64 %1, 4294967295
  %8 = add i64 %6, %1
  %9 = and i64 %8, 4294967295
  %10 = getelementptr inbounds %"struct.v8::internal::wasm::ModuleWireBytes", %"struct.v8::internal::wasm::ModuleWireBytes"* %0, i64 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  %13 = sub nsw i64 %9, %7
  br label %14

14:                                               ; preds = %2, %5
  %15 = phi i8* [ %12, %5 ], [ null, %2 ]
  %16 = phi i64 [ %13, %5 ], [ 0, %2 ]
  %17 = insertvalue { i8*, i64 } undef, i8* %15, 0
  %18 = insertvalue { i8*, i64 } %17, i64 %16, 1
  ret { i8*, i64 } %18
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZNK2v88internal4wasm15ModuleWireBytes13GetNameOrNullEPKNS1_12WasmFunctionEPKNS1_10WasmModuleE(%"struct.v8::internal::wasm::ModuleWireBytes"* nocapture readonly, %"struct.v8::internal::wasm::WasmFunction"* nocapture readonly, %"struct.v8::internal::wasm::WasmModule"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %2, i64 0, i32 34
  %5 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = tail call i64 @_ZNK2v88internal4wasm20LazilyGeneratedNames18LookupFunctionNameERKNS1_15ModuleWireBytesEj(%"class.v8::internal::wasm::LazilyGeneratedNames"* %4, %"struct.v8::internal::wasm::ModuleWireBytes"* dereferenceable(16) %0, i32 %6)
  %8 = trunc i64 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %3
  %11 = lshr i64 %7, 32
  %12 = and i64 %7, 4294967295
  %13 = add i64 %11, %7
  %14 = and i64 %13, 4294967295
  %15 = getelementptr inbounds %"struct.v8::internal::wasm::ModuleWireBytes", %"struct.v8::internal::wasm::ModuleWireBytes"* %0, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %12
  %18 = sub nsw i64 %14, %12
  br label %19

19:                                               ; preds = %3, %10
  %20 = phi i8* [ %17, %10 ], [ null, %3 ]
  %21 = phi i64 [ %18, %10 ], [ 0, %3 ]
  %22 = insertvalue { i8*, i64 } undef, i8* %20, 0
  %23 = insertvalue { i8*, i64 } %22, i64 %21, 1
  ret { i8*, i64 } %23
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal4wasmlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_16WasmFunctionNameE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"struct.v8::internal::wasm::WasmFunctionName"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #12
  %4 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunctionName", %"struct.v8::internal::wasm::WasmFunctionName"* %1, i64 0, i32 0
  %5 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %3, i32 %7) #12
  %9 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunctionName", %"struct.v8::internal::wasm::WasmFunctionName"* %1, i64 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunctionName", %"struct.v8::internal::wasm::WasmFunctionName"* %1, i64 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %12
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #12
  %18 = load i8*, i8** %13, align 8
  %19 = load i64, i64* %9, align 8
  %20 = shl i64 %19, 32
  %21 = ashr exact i64 %20, 32
  %22 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeEPKcl(%"class.std::__1::basic_ostream"* %0, i8* %18, i64 %21) #12
  br label %25

23:                                               ; preds = %2
  %24 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #12
  br label %25

25:                                               ; preds = %12, %16, %23
  ret %"class.std::__1::basic_ostream"* %0
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeEPKcl(%"class.std::__1::basic_ostream"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm10WasmModuleC2ENSt3__110unique_ptrINS0_4ZoneENS3_14default_deleteIS5_EEEE(%"struct.v8::internal::wasm::WasmModule"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %4 = bitcast %"struct.v8::internal::wasm::WasmModule"* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 8
  %7 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 13, i1 false)
  store i32 -1, i32* %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 9
  %9 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 31, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.163"* %9 to i32*
  %11 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 368, i1 false)
  store i32 1065353216, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 32, i32 0
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 32, i32 2
  %14 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 32, i32 2, i32 0, i32 3
  %15 = bitcast %"class.std::__1::__compressed_pair.187"* %14 to i32*
  %16 = bitcast %"class.std::__1::unordered_map.167"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 33
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 34, i32 0
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %18) #12
  %19 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 34, i32 1
  %20 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 36
  %21 = bitcast %"class.std::__1::unique_ptr.193"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast %"class.std::__1::unique_ptr"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm10WasmModuleD2Ev(%"struct.v8::internal::wasm::WasmModule"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal4wasm35DeleteCachedTypeJudgementsForModuleEPKNS1_10WasmModuleE(%"struct.v8::internal::wasm::WasmModule"* %0) #12
  %2 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 36, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::wasm::AsmJsOffsetInformation"*, %"class.v8::internal::wasm::AsmJsOffsetInformation"** %2, align 8
  store %"class.v8::internal::wasm::AsmJsOffsetInformation"* null, %"class.v8::internal::wasm::AsmJsOffsetInformation"** %2, align 8
  %4 = icmp eq %"class.v8::internal::wasm::AsmJsOffsetInformation"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN2v88internal4wasm22AsmJsOffsetInformationD2Ev(%"class.v8::internal::wasm::AsmJsOffsetInformation"* nonnull %3) #12
  %6 = bitcast %"class.v8::internal::wasm::AsmJsOffsetInformation"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 34, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** %8, align 8
  store %"class.std::__1::unordered_map"* null, %"class.std::__1::unordered_map"** %8, align 8
  %10 = icmp eq %"class.std::__1::unordered_map"* %9, null
  br i1 %10, label %29, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11, %15
  %16 = phi %"struct.std::__1::__hash_node_base"* [ %18, %15 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %16, i64 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %17, align 8
  %19 = bitcast %"struct.std::__1::__hash_node_base"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  %20 = icmp eq %"struct.std::__1::__hash_node_base"* %18, null
  br i1 %20, label %21, label %15

21:                                               ; preds = %15, %11
  %22 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %25, %21
  %28 = bitcast %"class.std::__1::unordered_map"* %9 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %7, %27
  %30 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 34, i32 0
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %30) #12
  %31 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 32, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.172"*, %"struct.std::__1::__hash_node_base.172"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.172"* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %29, %34
  %35 = phi %"struct.std::__1::__hash_node_base.172"* [ %37, %34 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.172", %"struct.std::__1::__hash_node_base.172"* %35, i64 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.172"*, %"struct.std::__1::__hash_node_base.172"** %36, align 8
  %38 = bitcast %"struct.std::__1::__hash_node_base.172"* %35 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  %39 = icmp eq %"struct.std::__1::__hash_node_base.172"* %37, null
  br i1 %39, label %40, label %34

40:                                               ; preds = %34, %29
  %41 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 32, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.172"**, %"struct.std::__1::__hash_node_base.172"*** %41, align 8
  store %"struct.std::__1::__hash_node_base.172"** null, %"struct.std::__1::__hash_node_base.172"*** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.172"** %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = bitcast %"struct.std::__1::__hash_node_base.172"** %42 to i8*
  tail call void @_ZdlPv(i8* %45) #13
  br label %46

46:                                               ; preds = %40, %44
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 31, i32 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.148"*, %"struct.std::__1::__hash_node_base.148"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.148"* %48, null
  br i1 %49, label %74, label %50

50:                                               ; preds = %46, %71
  %51 = phi %"struct.std::__1::__hash_node_base.148"* [ %53, %71 ], [ %48, %46 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.148", %"struct.std::__1::__hash_node_base.148"* %51, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.148"*, %"struct.std::__1::__hash_node_base.148"** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.148", %"struct.std::__1::__hash_node_base.148"* %51, i64 5
  %55 = bitcast %"struct.std::__1::__hash_node_base.148"* %54 to %"struct.std::__1::__hash_node_base.1610"**
  %56 = load %"struct.std::__1::__hash_node_base.1610"*, %"struct.std::__1::__hash_node_base.1610"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1610"* %56, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %50, %58
  %59 = phi %"struct.std::__1::__hash_node_base.1610"* [ %61, %58 ], [ %56, %50 ]
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1610", %"struct.std::__1::__hash_node_base.1610"* %59, i64 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.1610"*, %"struct.std::__1::__hash_node_base.1610"** %60, align 8
  %62 = bitcast %"struct.std::__1::__hash_node_base.1610"* %59 to i8*
  tail call void @_ZdlPv(i8* %62) #13
  %63 = icmp eq %"struct.std::__1::__hash_node_base.1610"* %61, null
  br i1 %63, label %64, label %58

64:                                               ; preds = %58, %50
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.148", %"struct.std::__1::__hash_node_base.148"* %51, i64 3
  %66 = bitcast %"struct.std::__1::__hash_node_base.148"* %65 to %"struct.std::__1::__hash_node_base.1610"***
  %67 = load %"struct.std::__1::__hash_node_base.1610"**, %"struct.std::__1::__hash_node_base.1610"*** %66, align 8
  store %"struct.std::__1::__hash_node_base.1610"** null, %"struct.std::__1::__hash_node_base.1610"*** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.1610"** %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  %70 = bitcast %"struct.std::__1::__hash_node_base.1610"** %67 to i8*
  tail call void @_ZdlPv(i8* %70) #13
  br label %71

71:                                               ; preds = %69, %64
  %72 = bitcast %"struct.std::__1::__hash_node_base.148"* %51 to i8*
  tail call void @_ZdlPv(i8* %72) #13
  %73 = icmp eq %"struct.std::__1::__hash_node_base.148"* %53, null
  br i1 %73, label %74, label %50

74:                                               ; preds = %71, %46
  %75 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.148"**, %"struct.std::__1::__hash_node_base.148"*** %75, align 8
  store %"struct.std::__1::__hash_node_base.148"** null, %"struct.std::__1::__hash_node_base.148"*** %75, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base.148"** %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = bitcast %"struct.std::__1::__hash_node_base.148"** %76 to i8*
  tail call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %74, %78
  %81 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 30, i32 0, i32 0
  %82 = load %"struct.v8::internal::wasm::WasmCompilationHint"*, %"struct.v8::internal::wasm::WasmCompilationHint"** %81, align 8
  %83 = icmp eq %"struct.v8::internal::wasm::WasmCompilationHint"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint %"struct.v8::internal::wasm::WasmCompilationHint"* %82 to i64
  %86 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 30, i32 0, i32 1
  %87 = bitcast %"struct.v8::internal::wasm::WasmCompilationHint"** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.v8::internal::wasm::WasmCompilationHint", %"struct.v8::internal::wasm::WasmCompilationHint"* %82, i64 0, i32 0
  tail call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %80, %84
  %90 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 29
  %91 = getelementptr inbounds %"class.std::__1::vector.123", %"class.std::__1::vector.123"* %90, i64 0, i32 0, i32 0
  %92 = load %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"** %91, align 8
  %93 = icmp eq %"struct.v8::internal::wasm::WasmElemSegment"* %92, null
  br i1 %93, label %128, label %94

94:                                               ; preds = %89
  %95 = bitcast %"struct.v8::internal::wasm::WasmElemSegment"* %92 to i8*
  %96 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 29, i32 0, i32 1
  %97 = load %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"** %96, align 8
  %98 = icmp eq %"struct.v8::internal::wasm::WasmElemSegment"* %97, %92
  br i1 %98, label %126, label %99

99:                                               ; preds = %94, %120
  %100 = phi %"struct.v8::internal::wasm::WasmElemSegment"* [ %101, %120 ], [ %97, %94 ]
  %101 = getelementptr inbounds %"struct.v8::internal::wasm::WasmElemSegment", %"struct.v8::internal::wasm::WasmElemSegment"* %100, i64 -1
  %102 = getelementptr inbounds %"struct.v8::internal::wasm::WasmElemSegment", %"struct.v8::internal::wasm::WasmElemSegment"* %100, i64 -1, i32 3
  %103 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"** %103, align 8
  %105 = icmp eq %"class.v8::internal::wasm::WasmInitExpr"* %104, null
  br i1 %105, label %120, label %106

106:                                              ; preds = %99
  %107 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %104 to i8*
  %108 = getelementptr inbounds %"struct.v8::internal::wasm::WasmElemSegment", %"struct.v8::internal::wasm::WasmElemSegment"* %100, i64 -1, i32 3, i32 0, i32 1
  %109 = load %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"** %108, align 8
  %110 = icmp eq %"class.v8::internal::wasm::WasmInitExpr"* %109, %104
  br i1 %110, label %118, label %111

111:                                              ; preds = %106, %111
  %112 = phi %"class.v8::internal::wasm::WasmInitExpr"* [ %113, %111 ], [ %109, %106 ]
  %113 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %112, i64 -1
  tail call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* %113) #12
  %114 = icmp eq %"class.v8::internal::wasm::WasmInitExpr"* %113, %104
  br i1 %114, label %115, label %111

115:                                              ; preds = %111
  %116 = bitcast %"class.std::__1::vector.125"* %102 to i8**
  %117 = load i8*, i8** %116, align 8
  br label %118

118:                                              ; preds = %115, %106
  %119 = phi i8* [ %117, %115 ], [ %107, %106 ]
  store %"class.v8::internal::wasm::WasmInitExpr"* %104, %"class.v8::internal::wasm::WasmInitExpr"** %108, align 8
  tail call void @_ZdlPv(i8* %119) #13
  br label %120

120:                                              ; preds = %118, %99
  %121 = getelementptr inbounds %"struct.v8::internal::wasm::WasmElemSegment", %"struct.v8::internal::wasm::WasmElemSegment"* %100, i64 -1, i32 2
  tail call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* %121) #12
  %122 = icmp eq %"struct.v8::internal::wasm::WasmElemSegment"* %101, %92
  br i1 %122, label %123, label %99

123:                                              ; preds = %120
  %124 = bitcast %"class.std::__1::vector.123"* %90 to i8**
  %125 = load i8*, i8** %124, align 8
  br label %126

126:                                              ; preds = %123, %94
  %127 = phi i8* [ %125, %123 ], [ %95, %94 ]
  store %"struct.v8::internal::wasm::WasmElemSegment"* %92, %"struct.v8::internal::wasm::WasmElemSegment"** %96, align 8
  tail call void @_ZdlPv(i8* %127) #13
  br label %128

128:                                              ; preds = %89, %126
  %129 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 28, i32 0, i32 0
  %130 = load %"struct.v8::internal::wasm::WasmException"*, %"struct.v8::internal::wasm::WasmException"** %129, align 8
  %131 = icmp eq %"struct.v8::internal::wasm::WasmException"* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = ptrtoint %"struct.v8::internal::wasm::WasmException"* %130 to i64
  %134 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 28, i32 0, i32 1
  %135 = bitcast %"struct.v8::internal::wasm::WasmException"** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = bitcast %"struct.v8::internal::wasm::WasmException"* %130 to i8*
  tail call void @_ZdlPv(i8* %136) #13
  br label %137

137:                                              ; preds = %128, %132
  %138 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 27, i32 0, i32 0
  %139 = load %"struct.v8::internal::wasm::WasmExport"*, %"struct.v8::internal::wasm::WasmExport"** %138, align 8
  %140 = icmp eq %"struct.v8::internal::wasm::WasmExport"* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %137
  %142 = ptrtoint %"struct.v8::internal::wasm::WasmExport"* %139 to i64
  %143 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 27, i32 0, i32 1
  %144 = bitcast %"struct.v8::internal::wasm::WasmExport"** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast %"struct.v8::internal::wasm::WasmExport"* %139 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  br label %146

146:                                              ; preds = %137, %141
  %147 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 26, i32 0, i32 0
  %148 = load %"struct.v8::internal::wasm::WasmImport"*, %"struct.v8::internal::wasm::WasmImport"** %147, align 8
  %149 = icmp eq %"struct.v8::internal::wasm::WasmImport"* %148, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %146
  %151 = ptrtoint %"struct.v8::internal::wasm::WasmImport"* %148 to i64
  %152 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 26, i32 0, i32 1
  %153 = bitcast %"struct.v8::internal::wasm::WasmImport"** %152 to i64*
  store i64 %151, i64* %153, align 8
  %154 = bitcast %"struct.v8::internal::wasm::WasmImport"* %148 to i8*
  tail call void @_ZdlPv(i8* %154) #13
  br label %155

155:                                              ; preds = %146, %150
  %156 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 25
  %157 = getelementptr inbounds %"class.std::__1::vector.95", %"class.std::__1::vector.95"* %156, i64 0, i32 0, i32 0
  %158 = load %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"** %157, align 8
  %159 = icmp eq %"struct.v8::internal::wasm::WasmTable"* %158, null
  br i1 %159, label %175, label %160

160:                                              ; preds = %155
  %161 = bitcast %"struct.v8::internal::wasm::WasmTable"* %158 to i8*
  %162 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 25, i32 0, i32 1
  %163 = load %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"** %162, align 8
  %164 = icmp eq %"struct.v8::internal::wasm::WasmTable"* %163, %158
  br i1 %164, label %173, label %165

165:                                              ; preds = %160, %165
  %166 = phi %"struct.v8::internal::wasm::WasmTable"* [ %167, %165 ], [ %163, %160 ]
  %167 = getelementptr inbounds %"struct.v8::internal::wasm::WasmTable", %"struct.v8::internal::wasm::WasmTable"* %166, i64 -1
  %168 = getelementptr inbounds %"struct.v8::internal::wasm::WasmTable", %"struct.v8::internal::wasm::WasmTable"* %166, i64 -1, i32 6
  tail call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* %168) #12
  %169 = icmp eq %"struct.v8::internal::wasm::WasmTable"* %167, %158
  br i1 %169, label %170, label %165

170:                                              ; preds = %165
  %171 = bitcast %"class.std::__1::vector.95"* %156 to i8**
  %172 = load i8*, i8** %171, align 8
  br label %173

173:                                              ; preds = %170, %160
  %174 = phi i8* [ %172, %170 ], [ %161, %160 ]
  store %"struct.v8::internal::wasm::WasmTable"* %158, %"struct.v8::internal::wasm::WasmTable"** %162, align 8
  tail call void @_ZdlPv(i8* %174) #13
  br label %175

175:                                              ; preds = %155, %173
  %176 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 24
  %177 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %176, i64 0, i32 0, i32 0
  %178 = load %"struct.v8::internal::wasm::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmDataSegment"** %177, align 8
  %179 = icmp eq %"struct.v8::internal::wasm::WasmDataSegment"* %178, null
  br i1 %179, label %195, label %180

180:                                              ; preds = %175
  %181 = bitcast %"struct.v8::internal::wasm::WasmDataSegment"* %178 to i8*
  %182 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 24, i32 0, i32 1
  %183 = load %"struct.v8::internal::wasm::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmDataSegment"** %182, align 8
  %184 = icmp eq %"struct.v8::internal::wasm::WasmDataSegment"* %183, %178
  br i1 %184, label %193, label %185

185:                                              ; preds = %180, %185
  %186 = phi %"struct.v8::internal::wasm::WasmDataSegment"* [ %187, %185 ], [ %183, %180 ]
  %187 = getelementptr inbounds %"struct.v8::internal::wasm::WasmDataSegment", %"struct.v8::internal::wasm::WasmDataSegment"* %186, i64 -1
  %188 = getelementptr inbounds %"struct.v8::internal::wasm::WasmDataSegment", %"struct.v8::internal::wasm::WasmDataSegment"* %187, i64 0, i32 0
  tail call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* %188) #12
  %189 = icmp eq %"struct.v8::internal::wasm::WasmDataSegment"* %187, %178
  br i1 %189, label %190, label %185

190:                                              ; preds = %185
  %191 = bitcast %"class.std::__1::vector.88"* %176 to i8**
  %192 = load i8*, i8** %191, align 8
  br label %193

193:                                              ; preds = %190, %180
  %194 = phi i8* [ %192, %190 ], [ %181, %180 ]
  store %"struct.v8::internal::wasm::WasmDataSegment"* %178, %"struct.v8::internal::wasm::WasmDataSegment"** %182, align 8
  tail call void @_ZdlPv(i8* %194) #13
  br label %195

195:                                              ; preds = %175, %193
  %196 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 23, i32 0, i32 0
  %197 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %196, align 8
  %198 = icmp eq %"struct.v8::internal::wasm::WasmFunction"* %197, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %195
  %200 = ptrtoint %"struct.v8::internal::wasm::WasmFunction"* %197 to i64
  %201 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 23, i32 0, i32 1
  %202 = bitcast %"struct.v8::internal::wasm::WasmFunction"** %201 to i64*
  store i64 %200, i64* %202, align 8
  %203 = bitcast %"struct.v8::internal::wasm::WasmFunction"* %197 to i8*
  tail call void @_ZdlPv(i8* %203) #13
  br label %204

204:                                              ; preds = %195, %199
  %205 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 22, i32 0, i32 0
  %206 = load i32*, i32** %205, align 8
  %207 = icmp eq i32* %206, null
  br i1 %207, label %213, label %208

208:                                              ; preds = %204
  %209 = ptrtoint i32* %206 to i64
  %210 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 22, i32 0, i32 1
  %211 = bitcast i32** %210 to i64*
  store i64 %209, i64* %211, align 8
  %212 = bitcast i32* %206 to i8*
  tail call void @_ZdlPv(i8* %212) #13
  br label %213

213:                                              ; preds = %204, %208
  %214 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 21, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  %216 = icmp eq i8* %215, null
  br i1 %216, label %221, label %217

217:                                              ; preds = %213
  %218 = ptrtoint i8* %215 to i64
  %219 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 21, i32 0, i32 1
  %220 = bitcast i8** %219 to i64*
  store i64 %218, i64* %220, align 8
  tail call void @_ZdlPv(i8* nonnull %215) #13
  br label %221

221:                                              ; preds = %213, %217
  %222 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 20, i32 0, i32 0
  %223 = load %"struct.v8::internal::wasm::TypeDefinition"*, %"struct.v8::internal::wasm::TypeDefinition"** %222, align 8
  %224 = icmp eq %"struct.v8::internal::wasm::TypeDefinition"* %223, null
  br i1 %224, label %230, label %225

225:                                              ; preds = %221
  %226 = ptrtoint %"struct.v8::internal::wasm::TypeDefinition"* %223 to i64
  %227 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 20, i32 0, i32 1
  %228 = bitcast %"struct.v8::internal::wasm::TypeDefinition"** %227 to i64*
  store i64 %226, i64* %228, align 8
  %229 = bitcast %"struct.v8::internal::wasm::TypeDefinition"* %223 to i8*
  tail call void @_ZdlPv(i8* %229) #13
  br label %230

230:                                              ; preds = %221, %225
  %231 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 9
  %232 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %231, i64 0, i32 0, i32 0
  %233 = load %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"** %232, align 8
  %234 = icmp eq %"struct.v8::internal::wasm::WasmGlobal"* %233, null
  br i1 %234, label %250, label %235

235:                                              ; preds = %230
  %236 = bitcast %"struct.v8::internal::wasm::WasmGlobal"* %233 to i8*
  %237 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 9, i32 0, i32 1
  %238 = load %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"** %237, align 8
  %239 = icmp eq %"struct.v8::internal::wasm::WasmGlobal"* %238, %233
  br i1 %239, label %248, label %240

240:                                              ; preds = %235, %240
  %241 = phi %"struct.v8::internal::wasm::WasmGlobal"* [ %242, %240 ], [ %238, %235 ]
  %242 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %241, i64 -1
  %243 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %241, i64 -1, i32 3
  tail call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* %243) #12
  %244 = icmp eq %"struct.v8::internal::wasm::WasmGlobal"* %242, %233
  br i1 %244, label %245, label %240

245:                                              ; preds = %240
  %246 = bitcast %"class.std::__1::vector"* %231 to i8**
  %247 = load i8*, i8** %246, align 8
  br label %248

248:                                              ; preds = %245, %235
  %249 = phi i8* [ %247, %245 ], [ %236, %235 ]
  store %"struct.v8::internal::wasm::WasmGlobal"* %233, %"struct.v8::internal::wasm::WasmGlobal"** %237, align 8
  tail call void @_ZdlPv(i8* %249) #13
  br label %250

250:                                              ; preds = %230, %248
  %251 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %252 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %251, align 8
  store %"class.v8::internal::Zone"* null, %"class.v8::internal::Zone"** %251, align 8
  %253 = icmp eq %"class.v8::internal::Zone"* %252, null
  br i1 %253, label %256, label %254

254:                                              ; preds = %250
  tail call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %252) #12
  %255 = bitcast %"class.v8::internal::Zone"* %252 to i8*
  tail call void @_ZdlPv(i8* %255) #13
  br label %256

256:                                              ; preds = %250, %254
  ret void
}

declare void @_ZN2v88internal4wasm35DeleteCachedTypeJudgementsForModuleEPKNS1_10WasmModuleE(%"struct.v8::internal::wasm::WasmModule"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4wasm20IsWasmCodegenAllowedEPNS0_7IsolateENS0_6HandleINS0_7ContextEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 83
  %4 = load i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)** %3, align 8
  %5 = icmp eq i1 (%"class.v8::Context"*, %"class.v8::String"*)* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast i64* %1 to %"class.v8::Context"*
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  %9 = bitcast i64* %8 to %"class.v8::String"*
  %10 = tail call zeroext i1 %4(%"class.v8::Context"* %7, %"class.v8::String"* %9) #12
  br label %20

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 80
  %13 = load i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)** %12, align 8
  %14 = icmp eq i1 (%"class.v8::Context"*, %"class.v8::String"*)* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast i64* %1 to %"class.v8::Context"*
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  %18 = bitcast i64* %17 to %"class.v8::String"*
  %19 = tail call zeroext i1 %13(%"class.v8::Context"* %16, %"class.v8::String"* %18) #12
  br label %20

20:                                               ; preds = %6, %11, %15
  %21 = phi i1 [ %10, %6 ], [ true, %11 ], [ %19, %15 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal4wasm18GetTypeForFunctionEPNS0_7IsolateEPKNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::Signature"* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::wasm::ValueType", align 4
  %4 = alloca %"class.v8::internal::Vector.234", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.v8::internal::Vector.234", align 8
  %7 = alloca %"class.v8::internal::Vector.234", align 8
  %8 = alloca %"class.v8::internal::wasm::ValueType", align 4
  %9 = alloca %"class.v8::internal::Vector.234", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %12 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %16 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %15, i32 %14, i8 zeroext 0) #12
  %17 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 2
  %18 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %18, i64 %20
  %22 = load i64, i64* %12, align 8
  %23 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %21, i64 %22
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.v8::internal::wasm::ValueType"* %3 to i8*
  %27 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %3, i64 0, i32 0
  %28 = bitcast %"class.v8::internal::Vector.234"* %4 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %4, i64 0, i32 0
  %35 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %4, i64 0, i32 1
  br label %57

36:                                               ; preds = %116
  %37 = load i64, i64* %19, align 8
  br label %38

38:                                               ; preds = %36, %2
  %39 = phi i64 [ %37, %36 ], [ %20, %2 ]
  %40 = trunc i64 %39 to i32
  %41 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %15, i32 %40, i8 zeroext 0) #12
  %42 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %17, align 8
  %43 = load i64, i64* %19, align 8
  %44 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %42, i64 %43
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %119, label %46

46:                                               ; preds = %38
  %47 = bitcast %"class.v8::internal::wasm::ValueType"* %8 to i8*
  %48 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %8, i64 0, i32 0
  %49 = bitcast %"class.v8::internal::Vector.234"* %9 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %9, i64 0, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %9, i64 0, i32 1
  br label %179

57:                                               ; preds = %25, %116
  %58 = phi i64 [ 0, %25 ], [ %82, %116 ]
  %59 = phi %"class.v8::internal::wasm::ValueType"* [ %21, %25 ], [ %117, %116 ]
  %60 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26)
  store i32 %61, i32* %27, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #12
  %62 = icmp eq i32 %61, 32000011
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8** %34, align 8
  store i64 7, i64* %35, align 8
  %64 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %11, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %4) #12
  br label %79

65:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  call void @_ZNK2v88internal4wasm9ValueType4nameEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.v8::internal::wasm::ValueType"* nonnull %3) #12
  %66 = load i8, i8* %31, align 1
  %67 = icmp slt i8 %66, 0
  %68 = load i8*, i8** %32, align 8
  %69 = load i64, i64* %33, align 8
  %70 = zext i8 %66 to i64
  %71 = select i1 %67, i8* %68, i8* %29
  %72 = select i1 %67, i64 %69, i64 %70
  store i8* %71, i8** %34, align 8
  store i64 %72, i64* %35, align 8
  %73 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %11, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %4) #12
  %74 = load i8, i8* %31, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %65
  %77 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %76, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br label %79

79:                                               ; preds = %63, %78
  %80 = phi i64* [ %64, %63 ], [ %73, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26)
  %81 = load i64, i64* %16, align 8
  %82 = add nuw nsw i64 %58, 1
  %83 = load i64, i64* %80, align 8
  %84 = trunc i64 %58 to i32
  %85 = shl i32 %84, 2
  %86 = sext i32 %85 to i64
  %87 = add nsw i64 %86, 7
  %88 = add i64 %87, %81
  %89 = inttoptr i64 %88 to i32*
  %90 = trunc i64 %83 to i32
  store atomic volatile i32 %90, i32* %89 monotonic, align 4
  %91 = and i64 %83, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %116, label %93

93:                                               ; preds = %79
  %94 = and i64 %81, -262144
  %95 = or i64 %94, 8
  %96 = inttoptr i64 %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = and i64 %97, 262144
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %93
  %101 = or i64 %94, 16
  %102 = inttoptr i64 %101 to %"class.v8::internal::Heap"**
  %103 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %102, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %103, i64 %81, i64 %88, i64 %83) #12
  br label %104

104:                                              ; preds = %100, %93
  %105 = and i64 %83, -262144
  %106 = or i64 %105, 8
  %107 = inttoptr i64 %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = and i64 %108, 24
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %116, label %111

111:                                              ; preds = %104
  %112 = load i64, i64* %96, align 8
  %113 = and i64 %112, 24
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %111
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %81, i64 %88, i64 %83) #12
  br label %116

116:                                              ; preds = %79, %104, %111, %115
  %117 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %59, i64 1
  %118 = icmp eq %"class.v8::internal::wasm::ValueType"* %117, %23
  br i1 %118, label %36, label %57

119:                                              ; preds = %238, %38
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = and i64 %121, -4294967296
  %123 = add i64 %121, -1
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %122, %126
  %128 = add i64 %127, 19
  %129 = inttoptr i64 %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = zext i32 %130 to i64
  %132 = or i64 %122, %131
  %133 = add i64 %132, 571
  %134 = inttoptr i64 %133 to i32*
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = zext i32 %135 to i64
  %137 = or i64 %122, %136
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %139 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %138, align 8
  %140 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %119
  %142 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %139, i64 %137) #12
  br label %156

143:                                              ; preds = %119
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %145 = load i64*, i64** %144, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %147 = load i64*, i64** %146, align 8
  %148 = icmp eq i64* %145, %147
  br i1 %148, label %149, label %151

149:                                              ; preds = %143
  %150 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %151

151:                                              ; preds = %149, %143
  %152 = phi i64* [ %150, %149 ], [ %145, %143 ]
  %153 = ptrtoint i64* %152 to i64
  %154 = add i64 %153, 8
  %155 = inttoptr i64 %154 to i64*
  store i64* %155, i64** %144, align 8
  store i64 %137, i64* %152, align 8
  br label %156

156:                                              ; preds = %141, %151
  %157 = phi i64* [ %142, %141 ], [ %152, %151 ]
  %158 = call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %11, i64* %157, i8 zeroext 0) #12
  %159 = load i64, i64* %16, align 8
  %160 = add i64 %159, 3
  %161 = inttoptr i64 %160 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = ashr i32 %162, 1
  %164 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %11, i64* %16, i8 zeroext 3, i32 %163, i8 zeroext 0) #12
  %165 = load i64, i64* %41, align 8
  %166 = add i64 %165, 3
  %167 = inttoptr i64 %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = ashr i32 %168, 1
  %170 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %11, i64* %41, i8 zeroext 3, i32 %169, i8 zeroext 0) #12
  %171 = bitcast %"class.v8::internal::Vector.234"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #12
  %172 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8** %172, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %6, i64 0, i32 1
  store i64 10, i64* %173, align 8
  %174 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %11, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #12
  %175 = bitcast %"class.v8::internal::Vector.234"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %175) #12
  %176 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %7, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8** %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %7, i64 0, i32 1
  store i64 7, i64* %177, align 8
  %178 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %11, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %175) #12
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %158, i64* %174, i64* %164, i32 0) #12
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %158, i64* %178, i64* %170, i32 0) #12
  ret i64* %158

179:                                              ; preds = %46, %238
  %180 = phi i64 [ 0, %46 ], [ %204, %238 ]
  %181 = phi %"class.v8::internal::wasm::ValueType"* [ %42, %46 ], [ %239, %238 ]
  %182 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %181, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47)
  store i32 %183, i32* %48, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #12
  %184 = icmp eq i32 %183, 32000011
  br i1 %184, label %185, label %187

185:                                              ; preds = %179
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8** %55, align 8
  store i64 7, i64* %56, align 8
  %186 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %11, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %9) #12
  br label %201

187:                                              ; preds = %179
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #12
  call void @_ZNK2v88internal4wasm9ValueType4nameEv(%"class.std::__1::basic_string"* nonnull sret %10, %"class.v8::internal::wasm::ValueType"* nonnull %8) #12
  %188 = load i8, i8* %52, align 1
  %189 = icmp slt i8 %188, 0
  %190 = load i8*, i8** %53, align 8
  %191 = load i64, i64* %54, align 8
  %192 = zext i8 %188 to i64
  %193 = select i1 %189, i8* %190, i8* %50
  %194 = select i1 %189, i64 %191, i64 %192
  store i8* %193, i8** %55, align 8
  store i64 %194, i64* %56, align 8
  %195 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %11, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %9) #12
  %196 = load i8, i8* %52, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %187
  %199 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %199) #13
  br label %200

200:                                              ; preds = %198, %187
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #12
  br label %201

201:                                              ; preds = %185, %200
  %202 = phi i64* [ %186, %185 ], [ %195, %200 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47)
  %203 = load i64, i64* %41, align 8
  %204 = add nuw nsw i64 %180, 1
  %205 = load i64, i64* %202, align 8
  %206 = trunc i64 %180 to i32
  %207 = shl i32 %206, 2
  %208 = sext i32 %207 to i64
  %209 = add nsw i64 %208, 7
  %210 = add i64 %209, %203
  %211 = inttoptr i64 %210 to i32*
  %212 = trunc i64 %205 to i32
  store atomic volatile i32 %212, i32* %211 monotonic, align 4
  %213 = and i64 %205, 1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %238, label %215

215:                                              ; preds = %201
  %216 = and i64 %203, -262144
  %217 = or i64 %216, 8
  %218 = inttoptr i64 %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = and i64 %219, 262144
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %226, label %222

222:                                              ; preds = %215
  %223 = or i64 %216, 16
  %224 = inttoptr i64 %223 to %"class.v8::internal::Heap"**
  %225 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %224, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %225, i64 %203, i64 %210, i64 %205) #12
  br label %226

226:                                              ; preds = %222, %215
  %227 = and i64 %205, -262144
  %228 = or i64 %227, 8
  %229 = inttoptr i64 %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = and i64 %230, 24
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %238, label %233

233:                                              ; preds = %226
  %234 = load i64, i64* %218, align 8
  %235 = and i64 %234, 24
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %233
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %203, i64 %210, i64 %205) #12
  br label %238

238:                                              ; preds = %201, %226, %233, %237
  %239 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %181, i64 1
  %240 = icmp eq %"class.v8::internal::wasm::ValueType"* %239, %44
  br i1 %240, label %119, label %179
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext) local_unnamed_addr #3

declare void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal4wasm16GetTypeForGlobalEPNS0_7IsolateEbNS1_9ValueTypeE(%"class.v8::internal::Isolate"*, i1 zeroext, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::Vector.234", align 8
  %5 = alloca %"class.v8::internal::Vector.234", align 8
  %6 = alloca %"class.v8::internal::wasm::ValueType", align 4
  %7 = alloca %"class.v8::internal::Vector.234", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, -4294967296
  %13 = add i64 %11, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 19
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %12, %21
  %23 = add i64 %22, 571
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %12, %26
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %29 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %30 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %3
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %29, i64 %27) #12
  br label %46

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %41

41:                                               ; preds = %39, %33
  %42 = phi i64* [ %40, %39 ], [ %35, %33 ]
  %43 = ptrtoint i64* %42 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  store i64* %45, i64** %34, align 8
  store i64 %27, i64* %42, align 8
  br label %46

46:                                               ; preds = %31, %41
  %47 = phi i64* [ %32, %31 ], [ %42, %41 ]
  %48 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %9, i64* %47, i8 zeroext 0) #12
  %49 = bitcast %"class.v8::internal::Vector.234"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #12
  %50 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %5, i64 0, i32 1
  store i64 7, i64* %51, align 8
  %52 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %9, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #12
  %53 = bitcast %"class.v8::internal::Vector.234"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #12
  %54 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %4, i64 0, i32 1
  store i64 5, i64* %55, align 8
  %56 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %9, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #12
  %57 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %58 = select i1 %1, i64 184, i64 192
  %59 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %57, i64 %58
  %60 = bitcast %"class.v8::internal::FactoryBase"* %59 to i64*
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %48, i64* %52, i64* %60, i32 0) #12
  %61 = bitcast %"class.v8::internal::wasm::ValueType"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61)
  %62 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %6, i64 0, i32 0
  store i32 %2, i32* %62, align 4
  %63 = bitcast %"class.v8::internal::Vector.234"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #12
  %64 = icmp eq i32 %2, 32000011
  br i1 %64, label %65, label %69

65:                                               ; preds = %46
  %66 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %7, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %7, i64 0, i32 1
  store i64 7, i64* %67, align 8
  %68 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %9, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %7) #12
  br label %90

69:                                               ; preds = %46
  %70 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #12
  call void @_ZNK2v88internal4wasm9ValueType4nameEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.v8::internal::wasm::ValueType"* nonnull %6) #12
  %71 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %73 to i64
  %80 = select i1 %74, i8* %76, i8* %70
  %81 = select i1 %74, i64 %78, i64 %79
  %82 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %7, i64 0, i32 0
  store i8* %80, i8** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %7, i64 0, i32 1
  store i64 %81, i64* %83, align 8
  %84 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %9, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %7) #12
  %85 = load i8, i8* %72, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %69
  %88 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %87, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #12
  br label %90

90:                                               ; preds = %65, %89
  %91 = phi i64* [ %68, %65 ], [ %84, %89 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61)
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %48, i64* %56, i64* %91, i32 0) #12
  ret i64* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal4wasm16GetTypeForMemoryEPNS0_7IsolateEjNS_4base8OptionalIjEE(%"class.v8::internal::Isolate"*, i32, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::Vector.234", align 8
  %5 = alloca %"class.v8::internal::Vector.234", align 8
  %6 = trunc i64 %2 to i8
  %7 = lshr i64 %2, 32
  %8 = trunc i64 %7 to i32
  %9 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, -4294967296
  %13 = add i64 %11, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 19
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %12, %21
  %23 = add i64 %22, 571
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %12, %26
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %29 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %30 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %3
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %29, i64 %27) #12
  br label %46

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %41

41:                                               ; preds = %39, %33
  %42 = phi i64* [ %40, %39 ], [ %35, %33 ]
  %43 = ptrtoint i64* %42 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  store i64* %45, i64** %34, align 8
  store i64 %27, i64* %42, align 8
  br label %46

46:                                               ; preds = %31, %41
  %47 = phi i64* [ %32, %31 ], [ %42, %41 ]
  %48 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %9, i64* %47, i8 zeroext 0) #12
  %49 = bitcast %"class.v8::internal::Vector.234"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #12
  %50 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %5, i64 0, i32 1
  store i64 7, i64* %51, align 8
  %52 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %9, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #12
  %53 = bitcast %"class.v8::internal::Vector.234"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #12
  %54 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i8** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %4, i64 0, i32 1
  store i64 7, i64* %55, align 8
  %56 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %9, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #12
  %57 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %58 = icmp ult i32 %1, 1073741824
  br i1 %58, label %59, label %79

59:                                               ; preds = %46
  %60 = sext i32 %1 to i64
  %61 = shl nsw i64 %60, 1
  %62 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %63 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  %65 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %62, i64 %61) #12
  br label %85

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %70 = load i64*, i64** %69, align 8
  %71 = icmp eq i64* %68, %70
  br i1 %71, label %72, label %74

72:                                               ; preds = %66
  %73 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %74

74:                                               ; preds = %72, %66
  %75 = phi i64* [ %73, %72 ], [ %68, %66 ]
  %76 = ptrtoint i64* %75 to i64
  %77 = add i64 %76, 8
  %78 = inttoptr i64 %77 to i64*
  store i64* %78, i64** %67, align 8
  store i64 %61, i64* %75, align 8
  br label %85

79:                                               ; preds = %46
  %80 = uitofp i32 %1 to double
  %81 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %57) #12
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 3
  %84 = inttoptr i64 %83 to double*
  store double %80, double* %84, align 1
  br label %85

85:                                               ; preds = %64, %74, %79
  %86 = phi i64* [ %81, %79 ], [ %65, %64 ], [ %75, %74 ]
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %48, i64* %52, i64* %86, i32 0) #12
  switch i8 %6, label %87 [
    i8 0, label %118
    i8 1, label %88
  ], !prof !7

87:                                               ; preds = %85
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.49, i64 0, i64 0)) #14
  unreachable

88:                                               ; preds = %85
  %89 = icmp ult i32 %8, 1073741824
  br i1 %89, label %90, label %110

90:                                               ; preds = %88
  %91 = ashr i64 %2, 32
  %92 = shl nsw i64 %91, 1
  %93 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %94 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  %96 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %93, i64 %92) #12
  br label %116

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %99 = load i64*, i64** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %101 = load i64*, i64** %100, align 8
  %102 = icmp eq i64* %99, %101
  br i1 %102, label %103, label %105

103:                                              ; preds = %97
  %104 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %105

105:                                              ; preds = %103, %97
  %106 = phi i64* [ %104, %103 ], [ %99, %97 ]
  %107 = ptrtoint i64* %106 to i64
  %108 = add i64 %107, 8
  %109 = inttoptr i64 %108 to i64*
  store i64* %109, i64** %98, align 8
  store i64 %92, i64* %106, align 8
  br label %116

110:                                              ; preds = %88
  %111 = uitofp i32 %8 to double
  %112 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %57) #12
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %113, 3
  %115 = inttoptr i64 %114 to double*
  store double %111, double* %115, align 1
  br label %116

116:                                              ; preds = %95, %105, %110
  %117 = phi i64* [ %112, %110 ], [ %96, %95 ], [ %106, %105 ]
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %48, i64* %56, i64* %117, i32 0) #12
  br label %118

118:                                              ; preds = %85, %116
  ret i64* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal4wasm15GetTypeForTableEPNS0_7IsolateENS1_9ValueTypeEjNS_4base8OptionalIjEE(%"class.v8::internal::Isolate"*, i32, i32, i64) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::internal::Vector.234", align 8
  %6 = alloca %"class.v8::internal::Vector.234", align 8
  %7 = alloca %"class.v8::internal::Vector.234", align 8
  %8 = alloca %"class.v8::internal::Vector.234", align 8
  %9 = alloca %"class.v8::internal::wasm::ValueType", align 4
  %10 = alloca %"class.v8::internal::Vector.234", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %9, i64 0, i32 0
  store i32 %1, i32* %12, align 4
  %13 = trunc i64 %3 to i8
  %14 = lshr i64 %3, 32
  %15 = trunc i64 %14 to i32
  %16 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %17 = and i32 %1, 33554430
  %18 = icmp eq i32 %17, 32000010
  br i1 %18, label %19, label %24

19:                                               ; preds = %4
  %20 = bitcast %"class.v8::internal::Vector.234"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %8, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %8, i64 0, i32 1
  store i64 7, i64* %22, align 8
  %23 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %16, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %8) #12
  br label %46

24:                                               ; preds = %4
  %25 = bitcast %"class.v8::internal::Vector.234"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #12
  %26 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  call void @_ZNK2v88internal4wasm9ValueType4nameEv(%"class.std::__1::basic_string"* nonnull sret %11, %"class.v8::internal::wasm::ValueType"* nonnull %9)
  %27 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %29 to i64
  %36 = select i1 %30, i8* %32, i8* %26
  %37 = select i1 %30, i64 %34, i64 %35
  %38 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %10, i64 0, i32 0
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %10, i64 0, i32 1
  store i64 %37, i64* %39, align 8
  %40 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %16, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %10) #12
  %41 = load i8, i8* %28, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %24
  %44 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %24, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  br label %46

46:                                               ; preds = %45, %19
  %47 = phi i8* [ %25, %45 ], [ %20, %19 ]
  %48 = phi i64* [ %40, %45 ], [ %23, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #12
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, -4294967296
  %52 = add i64 %50, -1
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %51, %55
  %57 = add i64 %56, 19
  %58 = inttoptr i64 %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %51, %60
  %62 = add i64 %61, 571
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %51, %65
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %68 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %69 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %46
  %71 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %68, i64 %66) #12
  br label %85

72:                                               ; preds = %46
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %76 = load i64*, i64** %75, align 8
  %77 = icmp eq i64* %74, %76
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %80

80:                                               ; preds = %78, %72
  %81 = phi i64* [ %79, %78 ], [ %74, %72 ]
  %82 = ptrtoint i64* %81 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  store i64* %84, i64** %73, align 8
  store i64 %66, i64* %81, align 8
  br label %85

85:                                               ; preds = %70, %80
  %86 = phi i64* [ %71, %70 ], [ %81, %80 ]
  %87 = call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %16, i64* %86, i8 zeroext 0) #12
  %88 = bitcast %"class.v8::internal::Vector.234"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #12
  %89 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %7, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i8** %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %7, i64 0, i32 1
  store i64 7, i64* %90, align 8
  %91 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %16, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #12
  %92 = bitcast %"class.v8::internal::Vector.234"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #12
  %93 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8** %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %6, i64 0, i32 1
  store i64 7, i64* %94, align 8
  %95 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %16, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #12
  %96 = bitcast %"class.v8::internal::Vector.234"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #12
  %97 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i8** %97, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %5, i64 0, i32 1
  store i64 7, i64* %98, align 8
  %99 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %16, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #12
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %87, i64* %91, i64* %48, i32 0) #12
  %100 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %101 = icmp ult i32 %2, 1073741824
  br i1 %101, label %102, label %122

102:                                              ; preds = %85
  %103 = sext i32 %2 to i64
  %104 = shl nsw i64 %103, 1
  %105 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %106 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %102
  %108 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %105, i64 %104) #12
  br label %128

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %113 = load i64*, i64** %112, align 8
  %114 = icmp eq i64* %111, %113
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %117

117:                                              ; preds = %115, %109
  %118 = phi i64* [ %116, %115 ], [ %111, %109 ]
  %119 = ptrtoint i64* %118 to i64
  %120 = add i64 %119, 8
  %121 = inttoptr i64 %120 to i64*
  store i64* %121, i64** %110, align 8
  store i64 %104, i64* %118, align 8
  br label %128

122:                                              ; preds = %85
  %123 = uitofp i32 %2 to double
  %124 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %100) #12
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %125, 3
  %127 = inttoptr i64 %126 to double*
  store double %123, double* %127, align 1
  br label %128

128:                                              ; preds = %107, %117, %122
  %129 = phi i64* [ %124, %122 ], [ %108, %107 ], [ %118, %117 ]
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %87, i64* %95, i64* %129, i32 0) #12
  switch i8 %13, label %130 [
    i8 0, label %161
    i8 1, label %131
  ], !prof !7

130:                                              ; preds = %128
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.49, i64 0, i64 0)) #14
  unreachable

131:                                              ; preds = %128
  %132 = icmp ult i32 %15, 1073741824
  br i1 %132, label %133, label %153

133:                                              ; preds = %131
  %134 = ashr i64 %3, 32
  %135 = shl nsw i64 %134, 1
  %136 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %137 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %133
  %139 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %136, i64 %135) #12
  br label %159

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %142 = load i64*, i64** %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %144 = load i64*, i64** %143, align 8
  %145 = icmp eq i64* %142, %144
  br i1 %145, label %146, label %148

146:                                              ; preds = %140
  %147 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %148

148:                                              ; preds = %146, %140
  %149 = phi i64* [ %147, %146 ], [ %142, %140 ]
  %150 = ptrtoint i64* %149 to i64
  %151 = add i64 %150, 8
  %152 = inttoptr i64 %151 to i64*
  store i64* %152, i64** %141, align 8
  store i64 %135, i64* %149, align 8
  br label %159

153:                                              ; preds = %131
  %154 = uitofp i32 %15 to double
  %155 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %100) #12
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 3
  %158 = inttoptr i64 %157 to double*
  store double %154, double* %158, align 1
  br label %159

159:                                              ; preds = %138, %148, %153
  %160 = phi i64* [ %155, %153 ], [ %139, %138 ], [ %149, %148 ]
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %87, i64* %99, i64* %160, i32 0) #12
  br label %161

161:                                              ; preds = %128, %159
  ret i64* %87
}

declare i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.234"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2v88internal4wasm9ValueType4nameEv(%"class.std::__1::basic_string"* noalias sret, %"class.v8::internal::wasm::ValueType"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_ostringstream", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %6, i64 %18
  %20 = bitcast i8* %19 to i64*
  store i64 %13, i64* %20, align 8
  %21 = load i8*, i8** %14, align 8
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %6, i64 %24
  %26 = bitcast i8* %25 to %"class.std::__1::ios_base"*
  %27 = bitcast %"class.std::__1::basic_stringbuf"* %9 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %26, i8* %27) #12
  %28 = getelementptr inbounds i8, i8* %25, i64 136
  %29 = bitcast i8* %28 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %25, i64 144
  %31 = bitcast i8* %30 to i32*
  store i32 -1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %10) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 3
  %35 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 32, i1 false) #12
  store i32 16, i32* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = trunc i32 %37 to i8
  %39 = and i8 %38, 31
  switch i8 %39, label %194 [
    i8 8, label %186
    i8 9, label %173
    i8 10, label %48
    i8 11, label %40
  ]

40:                                               ; preds = %2
  %41 = lshr i32 %37, 5
  %42 = and i32 %41, 1048575
  %43 = icmp ult i32 %42, 1000000
  %44 = add nsw i32 %42, -1000003
  %45 = icmp ult i32 %44, 2
  %46 = or i1 %43, %45
  %47 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  br i1 %46, label %54, label %118

48:                                               ; preds = %2
  %49 = lshr i32 %37, 5
  %50 = and i32 %49, 1048575
  %51 = add nsw i32 %50, -1000003
  %52 = icmp ugt i32 %51, 1
  %53 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  br i1 %52, label %54, label %118

54:                                               ; preds = %40, %48
  %55 = phi %"class.std::__1::basic_ostream"* [ %47, %40 ], [ %53, %48 ]
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %55, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i64 5) #12
  %57 = load i32, i32* %36, align 4
  %58 = and i32 %57, 31
  %59 = icmp eq i32 %58, 11
  %60 = select i1 %59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.26, i64 0, i64 0)
  %61 = select i1 %59, i64 5, i64 0
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %56, i8* %60, i64 %61) #12
  %63 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #12
  %64 = load i32, i32* %36, align 4
  %65 = lshr i32 %64, 5
  %66 = and i32 %65, 1048575
  switch i32 %66, label %94 [
    i32 1000000, label %67
    i32 1000001, label %72
    i32 1000002, label %76
    i32 1000003, label %81
    i32 1000004, label %85
    i32 1000005, label %90
  ]

67:                                               ; preds = %54
  %68 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  store i8 4, i8* %69, align 1, !alias.scope !8
  %70 = bitcast %"class.std::__1::basic_string"* %4 to i32*
  store i32 1668183398, i32* %70, align 8, !alias.scope !8
  %71 = getelementptr inbounds i8, i8* %63, i64 4
  store i8 0, i8* %71, align 4, !alias.scope !8
  br label %100

72:                                               ; preds = %54
  %73 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  store i8 6, i8* %74, align 1, !alias.scope !8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i64 6, i1 false) #12
  %75 = getelementptr inbounds i8, i8* %63, i64 6
  store i8 0, i8* %75, align 2, !alias.scope !8
  br label %100

76:                                               ; preds = %54
  %77 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  store i8 2, i8* %78, align 1, !alias.scope !8
  %79 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  store i16 29029, i16* %79, align 8, !alias.scope !8
  %80 = getelementptr inbounds i8, i8* %63, i64 2
  store i8 0, i8* %80, align 2, !alias.scope !8
  br label %100

81:                                               ; preds = %54
  %82 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  store i8 3, i8* %83, align 1, !alias.scope !8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3, i1 false) #12
  %84 = getelementptr inbounds i8, i8* %63, i64 3
  store i8 0, i8* %84, align 1, !alias.scope !8
  br label %100

85:                                               ; preds = %54
  %86 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  store i8 4, i8* %87, align 1, !alias.scope !8
  %88 = bitcast %"class.std::__1::basic_string"* %4 to i32*
  store i32 1635017060, i32* %88, align 8, !alias.scope !8
  %89 = getelementptr inbounds i8, i8* %63, i64 4
  store i8 0, i8* %89, align 4, !alias.scope !8
  br label %100

90:                                               ; preds = %54
  %91 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  store i8 3, i8* %92, align 1, !alias.scope !8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 3, i1 false) #12
  %93 = getelementptr inbounds i8, i8* %63, i64 3
  store i8 0, i8* %93, align 1, !alias.scope !8
  br label %100

94:                                               ; preds = %54
  call void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* nonnull sret %4, i32 %66) #12
  %95 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  br label %100

100:                                              ; preds = %67, %72, %76, %81, %85, %90, %94
  %101 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %68, %67 ], [ %73, %72 ], [ %77, %76 ], [ %82, %81 ], [ %86, %85 ], [ %91, %90 ], [ %95, %94 ]
  %102 = phi i64 [ undef, %67 ], [ undef, %72 ], [ undef, %76 ], [ undef, %81 ], [ undef, %85 ], [ undef, %90 ], [ %99, %94 ]
  %103 = phi i8 [ 4, %67 ], [ 6, %72 ], [ 2, %76 ], [ 3, %81 ], [ 4, %85 ], [ 3, %90 ], [ %97, %94 ]
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %105 = icmp slt i8 %103, 0
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = zext i8 %103 to i64
  %109 = select i1 %105, i8* %107, i8* %63
  %110 = select i1 %105, i64 %102, i64 %108
  %111 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %62, i8* %109, i64 %110) #12
  %112 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %111, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0), i64 1) #12
  %113 = load i8, i8* %104, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %100
  %116 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %116) #13
  br label %117

117:                                              ; preds = %100, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #12
  br label %202

118:                                              ; preds = %40, %48
  %119 = phi i32 [ %42, %40 ], [ %50, %48 ]
  %120 = phi %"class.std::__1::basic_ostream"* [ %47, %40 ], [ %53, %48 ]
  %121 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #12
  switch i32 %119, label %149 [
    i32 1000000, label %122
    i32 1000001, label %127
    i32 1000002, label %131
    i32 1000003, label %136
    i32 1000004, label %140
    i32 1000005, label %145
  ]

122:                                              ; preds = %118
  %123 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  store i8 4, i8* %124, align 1, !alias.scope !11
  %125 = bitcast %"class.std::__1::basic_string"* %5 to i32*
  store i32 1668183398, i32* %125, align 8, !alias.scope !11
  %126 = getelementptr inbounds i8, i8* %121, i64 4
  store i8 0, i8* %126, align 4, !alias.scope !11
  br label %155

127:                                              ; preds = %118
  %128 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  store i8 6, i8* %129, align 1, !alias.scope !11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %121, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i64 6, i1 false) #12
  %130 = getelementptr inbounds i8, i8* %121, i64 6
  store i8 0, i8* %130, align 2, !alias.scope !11
  br label %155

131:                                              ; preds = %118
  %132 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  store i8 2, i8* %133, align 1, !alias.scope !11
  %134 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  store i16 29029, i16* %134, align 8, !alias.scope !11
  %135 = getelementptr inbounds i8, i8* %121, i64 2
  store i8 0, i8* %135, align 2, !alias.scope !11
  br label %155

136:                                              ; preds = %118
  %137 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  store i8 3, i8* %138, align 1, !alias.scope !11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %121, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3, i1 false) #12
  %139 = getelementptr inbounds i8, i8* %121, i64 3
  store i8 0, i8* %139, align 1, !alias.scope !11
  br label %155

140:                                              ; preds = %118
  %141 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  store i8 4, i8* %142, align 1, !alias.scope !11
  %143 = bitcast %"class.std::__1::basic_string"* %5 to i32*
  store i32 1635017060, i32* %143, align 8, !alias.scope !11
  %144 = getelementptr inbounds i8, i8* %121, i64 4
  store i8 0, i8* %144, align 4, !alias.scope !11
  br label %155

145:                                              ; preds = %118
  %146 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  store i8 3, i8* %147, align 1, !alias.scope !11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %121, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 3, i1 false) #12
  %148 = getelementptr inbounds i8, i8* %121, i64 3
  store i8 0, i8* %148, align 1, !alias.scope !11
  br label %155

149:                                              ; preds = %118
  call void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* nonnull sret %5, i32 %119) #12
  %150 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %154 = load i64, i64* %153, align 8
  br label %155

155:                                              ; preds = %122, %127, %131, %136, %140, %145, %149
  %156 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %123, %122 ], [ %128, %127 ], [ %132, %131 ], [ %137, %136 ], [ %141, %140 ], [ %146, %145 ], [ %150, %149 ]
  %157 = phi i64 [ undef, %122 ], [ undef, %127 ], [ undef, %131 ], [ undef, %136 ], [ undef, %140 ], [ undef, %145 ], [ %154, %149 ]
  %158 = phi i8 [ 4, %122 ], [ 6, %127 ], [ 2, %131 ], [ 3, %136 ], [ 4, %140 ], [ 3, %145 ], [ %152, %149 ]
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %160 = icmp slt i8 %158, 0
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = zext i8 %158 to i64
  %164 = select i1 %160, i8* %162, i8* %121
  %165 = select i1 %160, i64 %157, i64 %163
  %166 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %120, i8* %164, i64 %165) #12
  %167 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %166, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i64 3) #12
  %168 = load i8, i8* %159, align 1
  %169 = icmp slt i8 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %155
  %171 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %171) #13
  br label %172

172:                                              ; preds = %155, %170
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #12
  br label %202

173:                                              ; preds = %2
  %174 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %175 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %174, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i64 5) #12
  %176 = load i32, i32* %36, align 4
  %177 = lshr i32 %176, 25
  %178 = and i32 %177, 63
  %179 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %175, i32 %178) #12
  %180 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %179, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0), i64 1) #12
  %181 = load i32, i32* %36, align 4
  %182 = lshr i32 %181, 5
  %183 = and i32 %182, 1048575
  %184 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %180, i32 %183) #12
  %185 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %184, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0), i64 1) #12
  br label %202

186:                                              ; preds = %2
  %187 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %188 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %187, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i64 5) #12
  %189 = load i32, i32* %36, align 4
  %190 = lshr i32 %189, 5
  %191 = and i32 %190, 1048575
  %192 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %188, i32 %191) #12
  %193 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %192, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0), i64 1) #12
  br label %202

194:                                              ; preds = %2
  %195 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %196 = and i32 %37, 31
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds [13 x i8*], [13 x i8*]* @_ZZN2v88internal4wasm4nameENS1_9ValueKindEE9kKindName, i64 0, i64 %197
  %199 = load i8*, i8** %198, align 8
  %200 = call i64 @strlen(i8* %199) #12
  %201 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %195, i8* %199, i64 %200) #12
  br label %202

202:                                              ; preds = %117, %172, %194, %186, %173
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %9) #12
  %203 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %203, i64* %12, align 8
  %204 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %205 = inttoptr i64 %203 to i8*
  %206 = getelementptr i8, i8* %205, i64 -24
  %207 = bitcast i8* %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = getelementptr inbounds i8, i8* %6, i64 %208
  %210 = bitcast i8* %209 to i64*
  store i64 %204, i64* %210, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %211 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %202
  %216 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8
  call void @_ZdlPv(i8* %217) #13
  br label %218

218:                                              ; preds = %202, %215
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %10) #12
  %219 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %219, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %220 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2
  %221 = bitcast %"class.std::__1::basic_ios.base"* %220 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %221) #12
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal4wasm10GetImportsEPNS0_7IsolateENS0_6HandleINS0_16WasmModuleObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::Vector.234", align 8
  %4 = alloca %"class.v8::internal::Vector.234", align 8
  %5 = alloca %"class.v8::internal::Vector.234", align 8
  %6 = alloca %"class.v8::internal::Vector.234", align 8
  %7 = alloca %"class.v8::internal::Vector.234", align 8
  %8 = alloca %"class.v8::internal::Vector.234", align 8
  %9 = alloca %"class.v8::internal::Vector.234", align 8
  %10 = alloca %"class.v8::internal::Vector.234", align 8
  %11 = alloca %"class.v8::internal::Vector.234", align 8
  %12 = tail call i32 @_ZN2v88internal4wasm12WasmFeatures11FromIsolateEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  %13 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %14 = bitcast %"class.v8::internal::Vector.234"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %11, i64 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i8** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %11, i64 0, i32 1
  store i64 6, i64* %16, align 8
  %17 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %13, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  %18 = bitcast %"class.v8::internal::Vector.234"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %10, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %10, i64 0, i32 1
  store i64 4, i64* %20, align 8
  %21 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %13, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %10) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  %22 = bitcast %"class.v8::internal::Vector.234"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %9, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i8** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %9, i64 0, i32 1
  store i64 4, i64* %24, align 8
  %25 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %13, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  %26 = bitcast %"class.v8::internal::Vector.234"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %8, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i8** %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %8, i64 0, i32 1
  store i64 4, i64* %28, align 8
  %29 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %13, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  %30 = bitcast %"class.v8::internal::Vector.234"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %7, i64 0, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %7, i64 0, i32 1
  store i64 8, i64* %32, align 8
  %33 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %13, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #12
  %34 = bitcast %"class.v8::internal::Vector.234"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %6, i64 0, i32 1
  store i64 5, i64* %36, align 8
  %37 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %13, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  %38 = bitcast %"class.v8::internal::Vector.234"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i8** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %5, i64 0, i32 1
  store i64 6, i64* %40, align 8
  %41 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %13, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #12
  %42 = bitcast %"class.v8::internal::Vector.234"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #12
  %43 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i8** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %4, i64 0, i32 1
  store i64 6, i64* %44, align 8
  %45 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %13, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #12
  %46 = bitcast %"class.v8::internal::Vector.234"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0), i8** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %3, i64 0, i32 1
  store i64 9, i64* %48, align 8
  %49 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %13, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  %50 = load i64, i64* %1, align 8
  %51 = and i64 %50, -4294967296
  %52 = add i64 %50, 11
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %51, %55
  %57 = add i64 %56, 3
  %58 = inttoptr i64 %57 to %"struct.v8::internal::ManagedPtrDestructor"**
  %59 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %58, align 1
  %60 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %59, i64 0, i32 3
  %61 = bitcast i8** %60 to %"class.std::__1::shared_ptr.1585"**
  %62 = load %"class.std::__1::shared_ptr.1585"*, %"class.std::__1::shared_ptr.1585"** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::shared_ptr.1585", %"class.std::__1::shared_ptr.1585"* %62, i64 0, i32 0
  %64 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %64, i64 0, i32 4, i32 0
  %66 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %65, align 8
  %67 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %66, i64 0, i32 26
  %68 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %66, i64 0, i32 26, i32 0, i32 1
  %69 = bitcast %"struct.v8::internal::wasm::WasmImport"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::vector.102"* %67 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = sdiv exact i64 %73, 24
  %75 = trunc i64 %74 to i32
  %76 = call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %13, i8 zeroext 2, i32 0, i32 0, i32 0, i8 zeroext 0) #12
  %77 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %78 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %77, i32 %75, i8 zeroext 0) #12
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 3
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = ashr i32 %82, 1
  call void @_ZN2v88internal8JSObject24EnsureCanContainElementsENS0_6HandleIS1_EENS2_INS0_14FixedArrayBaseEEEjNS0_18EnsureElementsModeE(i64* %76, i64* %78, i32 %83, i32 1) #12
  %84 = load i64, i64* %76, align 8
  %85 = load i64, i64* %78, align 8
  %86 = add i64 %84, 7
  %87 = inttoptr i64 %86 to i32*
  %88 = trunc i64 %85 to i32
  store atomic volatile i32 %88, i32* %87 monotonic, align 4
  %89 = and i64 %85, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %102, label %91

91:                                               ; preds = %2
  %92 = and i64 %84, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 262144
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %91
  %99 = or i64 %92, 16
  %100 = inttoptr i64 %99 to %"class.v8::internal::Heap"**
  %101 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %100, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %101, i64 %84, i64 %86, i64 %85) #12
  br label %102

102:                                              ; preds = %98, %91, %2
  %103 = and i64 %85, -262144
  %104 = or i64 %103, 8
  %105 = inttoptr i64 %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = and i64 %106, 24
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %102
  %110 = and i64 %84, -262144
  %111 = or i64 %110, 8
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 24
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %109
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %84, i64 %86, i64 %85) #12
  br label %117

117:                                              ; preds = %102, %109, %116
  %118 = load i64, i64* %76, align 8
  %119 = load i64, i64* %78, align 8
  %120 = add i64 %119, 3
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = and i32 %122, -2
  %124 = add i64 %118, 11
  %125 = inttoptr i64 %124 to i32*
  store atomic volatile i32 %123, i32* %125 monotonic, align 4
  %126 = load i64, i64* %76, align 8
  %127 = add i64 %126, 11
  %128 = inttoptr i64 %127 to i32*
  %129 = shl i32 %75, 1
  store atomic volatile i32 %129, i32* %128 monotonic, align 4
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = and i64 %131, -4294967296
  %133 = add i64 %131, -1
  %134 = inttoptr i64 %133 to i32*
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = zext i32 %135 to i64
  %137 = or i64 %132, %136
  %138 = add i64 %137, 19
  %139 = inttoptr i64 %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i64
  %142 = or i64 %132, %141
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %144 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %143, align 8
  %145 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %144, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %117
  %147 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %144, i64 %142) #12
  %148 = load i64, i64* %147, align 8
  br label %162

149:                                              ; preds = %117
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %151 = load i64*, i64** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %153 = load i64*, i64** %152, align 8
  %154 = icmp eq i64* %151, %153
  br i1 %154, label %155, label %157

155:                                              ; preds = %149
  %156 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %157

157:                                              ; preds = %155, %149
  %158 = phi i64* [ %156, %155 ], [ %151, %149 ]
  %159 = ptrtoint i64* %158 to i64
  %160 = add i64 %159, 8
  %161 = inttoptr i64 %160 to i64*
  store i64* %161, i64** %150, align 8
  store i64 %142, i64* %158, align 8
  br label %162

162:                                              ; preds = %146, %157
  %163 = phi i64 [ %148, %146 ], [ %142, %157 ]
  %164 = and i64 %163, -4294967296
  %165 = add i64 %163, 571
  %166 = inttoptr i64 %165 to i32*
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = zext i32 %167 to i64
  %169 = or i64 %164, %168
  %170 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %143, align 8
  %171 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %162
  %173 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %170, i64 %169) #12
  br label %187

174:                                              ; preds = %162
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %176 = load i64*, i64** %175, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %178 = load i64*, i64** %177, align 8
  %179 = icmp eq i64* %176, %178
  br i1 %179, label %180, label %182

180:                                              ; preds = %174
  %181 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %182

182:                                              ; preds = %180, %174
  %183 = phi i64* [ %181, %180 ], [ %176, %174 ]
  %184 = ptrtoint i64* %183 to i64
  %185 = add i64 %184, 8
  %186 = inttoptr i64 %185 to i64*
  store i64* %186, i64** %175, align 8
  store i64 %169, i64* %183, align 8
  br label %187

187:                                              ; preds = %172, %182
  %188 = phi i64* [ %173, %172 ], [ %183, %182 ]
  %189 = icmp sgt i32 %75, 0
  br i1 %189, label %190, label %201

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %67, i64 0, i32 0, i32 0
  %192 = and i32 %12, 1024
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %66, i64 0, i32 9, i32 0, i32 0
  %195 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %66, i64 0, i32 4
  %196 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %66, i64 0, i32 2
  %197 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %66, i64 0, i32 1
  %198 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %66, i64 0, i32 25, i32 0, i32 0
  %199 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %66, i64 0, i32 23, i32 0, i32 0
  %200 = and i64 %74, 4294967295
  br label %202

201:                                              ; preds = %333, %187
  ret i64* %76

202:                                              ; preds = %333, %190
  %203 = phi i64 [ 0, %190 ], [ %334, %333 ]
  %204 = phi i24 [ undef, %190 ], [ %286, %333 ]
  %205 = phi i24 [ undef, %190 ], [ %285, %333 ]
  %206 = load %"struct.v8::internal::wasm::WasmImport"*, %"struct.v8::internal::wasm::WasmImport"** %191, align 8
  %207 = getelementptr inbounds %"struct.v8::internal::wasm::WasmImport", %"struct.v8::internal::wasm::WasmImport"* %206, i64 %203
  %208 = call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %13, i64* %188, i8 zeroext 0) #12
  %209 = getelementptr inbounds %"struct.v8::internal::wasm::WasmImport", %"struct.v8::internal::wasm::WasmImport"* %206, i64 %203, i32 2
  %210 = load i8, i8* %209, align 4
  switch i8 %210, label %284 [
    i8 0, label %211
    i8 1, label %220
    i8 2, label %250
    i8 3, label %271
    i8 4, label %283
  ]

211:                                              ; preds = %202
  br i1 %193, label %284, label %212

212:                                              ; preds = %211
  %213 = getelementptr inbounds %"struct.v8::internal::wasm::WasmImport", %"struct.v8::internal::wasm::WasmImport"* %206, i64 %203, i32 3
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i64
  %216 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %199, align 8
  %217 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %216, i64 %215, i32 0
  %218 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %217, align 8
  %219 = call i64* @_ZN2v88internal4wasm18GetTypeForFunctionEPNS0_7IsolateEPKNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::Signature"* %218)
  br label %284

220:                                              ; preds = %202
  br i1 %193, label %284, label %221

221:                                              ; preds = %220
  %222 = getelementptr inbounds %"struct.v8::internal::wasm::WasmImport", %"struct.v8::internal::wasm::WasmImport"* %206, i64 %203, i32 3
  %223 = load i32, i32* %222, align 4
  %224 = zext i32 %223 to i64
  %225 = load %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"** %198, align 8
  %226 = getelementptr inbounds %"struct.v8::internal::wasm::WasmTable", %"struct.v8::internal::wasm::WasmTable"* %225, i64 %224, i32 3
  %227 = load i8, i8* %226, align 4, !range !14
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %234, label %229

229:                                              ; preds = %221
  %230 = getelementptr inbounds %"struct.v8::internal::wasm::WasmTable", %"struct.v8::internal::wasm::WasmTable"* %225, i64 %224, i32 2
  %231 = load i32, i32* %230, align 4
  %232 = lshr i32 %231, 8
  %233 = trunc i32 %232 to i24
  br label %234

234:                                              ; preds = %221, %229
  %235 = phi i64 [ 0, %221 ], [ 1, %229 ]
  %236 = phi i32 [ 0, %221 ], [ %231, %229 ]
  %237 = phi i24 [ %204, %221 ], [ %233, %229 ]
  %238 = getelementptr inbounds %"struct.v8::internal::wasm::WasmTable", %"struct.v8::internal::wasm::WasmTable"* %225, i64 %224, i32 0, i32 0
  %239 = load i32, i32* %238, align 8
  %240 = getelementptr inbounds %"struct.v8::internal::wasm::WasmTable", %"struct.v8::internal::wasm::WasmTable"* %225, i64 %224, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = zext i24 %237 to i32
  %243 = shl nuw i32 %242, 8
  %244 = and i32 %236, 255
  %245 = or i32 %243, %244
  %246 = zext i32 %245 to i64
  %247 = shl nuw i64 %246, 32
  %248 = or i64 %247, %235
  %249 = call i64* @_ZN2v88internal4wasm15GetTypeForTableEPNS0_7IsolateENS1_9ValueTypeEjNS_4base8OptionalIjEE(%"class.v8::internal::Isolate"* %0, i32 %239, i32 %241, i64 %248)
  br label %284

250:                                              ; preds = %202
  br i1 %193, label %284, label %251

251:                                              ; preds = %250
  %252 = load i8, i8* %195, align 1, !range !14
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %258, label %254

254:                                              ; preds = %251
  %255 = load i32, i32* %196, align 4
  %256 = lshr i32 %255, 8
  %257 = trunc i32 %256 to i24
  br label %258

258:                                              ; preds = %251, %254
  %259 = phi i64 [ 0, %251 ], [ 1, %254 ]
  %260 = phi i32 [ 0, %251 ], [ %255, %254 ]
  %261 = phi i24 [ %205, %251 ], [ %257, %254 ]
  %262 = load i32, i32* %197, align 8
  %263 = zext i24 %261 to i32
  %264 = shl nuw i32 %263, 8
  %265 = and i32 %260, 255
  %266 = or i32 %264, %265
  %267 = zext i32 %266 to i64
  %268 = shl nuw i64 %267, 32
  %269 = or i64 %268, %259
  %270 = call i64* @_ZN2v88internal4wasm16GetTypeForMemoryEPNS0_7IsolateEjNS_4base8OptionalIjEE(%"class.v8::internal::Isolate"* %0, i32 %262, i64 %269)
  br label %284

271:                                              ; preds = %202
  br i1 %193, label %284, label %272

272:                                              ; preds = %271
  %273 = getelementptr inbounds %"struct.v8::internal::wasm::WasmImport", %"struct.v8::internal::wasm::WasmImport"* %206, i64 %203, i32 3
  %274 = load i32, i32* %273, align 4
  %275 = zext i32 %274 to i64
  %276 = load %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"** %194, align 8
  %277 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %276, i64 %275, i32 1
  %278 = load i8, i8* %277, align 4, !range !14
  %279 = icmp ne i8 %278, 0
  %280 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %276, i64 %275, i32 0, i32 0
  %281 = load i32, i32* %280, align 8
  %282 = call i64* @_ZN2v88internal4wasm16GetTypeForGlobalEPNS0_7IsolateEbNS1_9ValueTypeE(%"class.v8::internal::Isolate"* %0, i1 zeroext %279, i32 %281)
  br label %284

283:                                              ; preds = %202
  br label %284

284:                                              ; preds = %211, %220, %250, %271, %272, %258, %234, %212, %202, %283
  %285 = phi i24 [ %205, %202 ], [ %205, %283 ], [ %205, %212 ], [ %205, %211 ], [ %205, %234 ], [ %205, %220 ], [ %261, %258 ], [ %205, %250 ], [ %205, %272 ], [ %205, %271 ]
  %286 = phi i24 [ %204, %202 ], [ %204, %283 ], [ %204, %212 ], [ %204, %211 ], [ %237, %234 ], [ %204, %220 ], [ %204, %258 ], [ %204, %250 ], [ %204, %272 ], [ %204, %271 ]
  %287 = phi i64* [ null, %202 ], [ null, %283 ], [ %219, %212 ], [ null, %211 ], [ %249, %234 ], [ null, %220 ], [ %270, %258 ], [ null, %250 ], [ %282, %272 ], [ null, %271 ]
  %288 = phi i64* [ null, %202 ], [ %49, %283 ], [ %33, %212 ], [ %33, %211 ], [ %37, %234 ], [ %37, %220 ], [ %41, %258 ], [ %41, %250 ], [ %45, %272 ], [ %45, %271 ]
  %289 = bitcast %"struct.v8::internal::wasm::WasmImport"* %207 to i64*
  %290 = load i64, i64* %289, align 4
  %291 = call i64* @_ZN2v88internal16WasmModuleObject32ExtractUtf8StringFromModuleBytesEPNS0_7IsolateENS0_6HandleIS1_EENS0_4wasm12WireBytesRefENS0_17InternalizeStringE(%"class.v8::internal::Isolate"* %0, i64* %1, i64 %290, i1 zeroext true) #12
  %292 = getelementptr inbounds %"struct.v8::internal::wasm::WasmImport", %"struct.v8::internal::wasm::WasmImport"* %206, i64 %203, i32 1
  %293 = bitcast %"class.v8::internal::wasm::WireBytesRef"* %292 to i64*
  %294 = load i64, i64* %293, align 4
  %295 = call i64* @_ZN2v88internal16WasmModuleObject32ExtractUtf8StringFromModuleBytesEPNS0_7IsolateENS0_6HandleIS1_EENS0_4wasm12WireBytesRefENS0_17InternalizeStringE(%"class.v8::internal::Isolate"* %0, i64* %1, i64 %294, i1 zeroext true) #12
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %208, i64* %17, i64* %291, i32 0) #12
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %208, i64* %21, i64* %295, i32 0) #12
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %208, i64* %25, i64* %288, i32 0) #12
  %296 = icmp eq i64* %287, null
  br i1 %296, label %298, label %297

297:                                              ; preds = %284
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %208, i64* %29, i64* nonnull %287, i32 0) #12
  br label %298

298:                                              ; preds = %297, %284
  %299 = load i64, i64* %78, align 8
  %300 = load i64, i64* %208, align 8
  %301 = trunc i64 %203 to i32
  %302 = shl i32 %301, 2
  %303 = sext i32 %302 to i64
  %304 = add nsw i64 %303, 7
  %305 = add i64 %304, %299
  %306 = inttoptr i64 %305 to i32*
  %307 = trunc i64 %300 to i32
  store atomic volatile i32 %307, i32* %306 monotonic, align 4
  %308 = and i64 %300, 1
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %333, label %310

310:                                              ; preds = %298
  %311 = and i64 %299, -262144
  %312 = or i64 %311, 8
  %313 = inttoptr i64 %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = and i64 %314, 262144
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %321, label %317

317:                                              ; preds = %310
  %318 = or i64 %311, 16
  %319 = inttoptr i64 %318 to %"class.v8::internal::Heap"**
  %320 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %319, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %320, i64 %299, i64 %305, i64 %300) #12
  br label %321

321:                                              ; preds = %317, %310
  %322 = and i64 %300, -262144
  %323 = or i64 %322, 8
  %324 = inttoptr i64 %323 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = and i64 %325, 24
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %333, label %328

328:                                              ; preds = %321
  %329 = load i64, i64* %313, align 8
  %330 = and i64 %329, 24
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %328
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %299, i64 %305, i64 %300) #12
  br label %333

333:                                              ; preds = %298, %321, %328, %332
  %334 = add nuw nsw i64 %203, 1
  %335 = icmp eq i64 %334, %200
  br i1 %335, label %201, label %202
}

declare i32 @_ZN2v88internal4wasm12WasmFeatures11FromIsolateEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i8 zeroext, i32, i32, i32, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal16WasmModuleObject32ExtractUtf8StringFromModuleBytesEPNS0_7IsolateENS0_6HandleIS1_EENS0_4wasm12WireBytesRefENS0_17InternalizeStringE(%"class.v8::internal::Isolate"*, i64*, i64, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal4wasm10GetExportsEPNS0_7IsolateENS0_6HandleINS0_16WasmModuleObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::Vector.234", align 8
  %4 = alloca %"class.v8::internal::Vector.234", align 8
  %5 = alloca %"class.v8::internal::Vector.234", align 8
  %6 = alloca %"class.v8::internal::Vector.234", align 8
  %7 = alloca %"class.v8::internal::Vector.234", align 8
  %8 = alloca %"class.v8::internal::Vector.234", align 8
  %9 = alloca %"class.v8::internal::Vector.234", align 8
  %10 = alloca %"class.v8::internal::Vector.234", align 8
  %11 = tail call i32 @_ZN2v88internal4wasm12WasmFeatures11FromIsolateEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  %12 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %13 = bitcast %"class.v8::internal::Vector.234"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %10, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %10, i64 0, i32 1
  store i64 4, i64* %15, align 8
  %16 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %12, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %10) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #12
  %17 = bitcast %"class.v8::internal::Vector.234"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %9, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %9, i64 0, i32 1
  store i64 4, i64* %19, align 8
  %20 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %12, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12
  %21 = bitcast %"class.v8::internal::Vector.234"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %8, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i8** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %8, i64 0, i32 1
  store i64 4, i64* %23, align 8
  %24 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %12, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12
  %25 = bitcast %"class.v8::internal::Vector.234"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %7, i64 0, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %7, i64 0, i32 1
  store i64 8, i64* %27, align 8
  %28 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %12, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #12
  %29 = bitcast %"class.v8::internal::Vector.234"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %6, i64 0, i32 1
  store i64 5, i64* %31, align 8
  %32 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %12, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  %33 = bitcast %"class.v8::internal::Vector.234"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %5, i64 0, i32 1
  store i64 6, i64* %35, align 8
  %36 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %12, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #12
  %37 = bitcast %"class.v8::internal::Vector.234"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i8** %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %4, i64 0, i32 1
  store i64 6, i64* %39, align 8
  %40 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %12, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  %41 = bitcast %"class.v8::internal::Vector.234"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #12
  %42 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0), i8** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Vector.234", %"class.v8::internal::Vector.234"* %3, i64 0, i32 1
  store i64 9, i64* %43, align 8
  %44 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %12, %"class.v8::internal::Vector.234"* nonnull dereferenceable(16) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #12
  %45 = load i64, i64* %1, align 8
  %46 = and i64 %45, -4294967296
  %47 = add i64 %45, 11
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %46, %50
  %52 = add i64 %51, 3
  %53 = inttoptr i64 %52 to %"struct.v8::internal::ManagedPtrDestructor"**
  %54 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %53, align 1
  %55 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %54, i64 0, i32 3
  %56 = bitcast i8** %55 to %"class.std::__1::shared_ptr.1585"**
  %57 = load %"class.std::__1::shared_ptr.1585"*, %"class.std::__1::shared_ptr.1585"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::shared_ptr.1585", %"class.std::__1::shared_ptr.1585"* %57, i64 0, i32 0
  %59 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %59, i64 0, i32 4, i32 0
  %61 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %60, align 8
  %62 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %61, i64 0, i32 27
  %63 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %61, i64 0, i32 27, i32 0, i32 1
  %64 = bitcast %"struct.v8::internal::wasm::WasmExport"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::vector.109"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %65, %67
  %69 = lshr exact i64 %68, 4
  %70 = trunc i64 %69 to i32
  %71 = call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %12, i8 zeroext 2, i32 0, i32 0, i32 0, i8 zeroext 0) #12
  %72 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %73 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %72, i32 %70, i8 zeroext 0) #12
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 3
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = ashr i32 %77, 1
  call void @_ZN2v88internal8JSObject24EnsureCanContainElementsENS0_6HandleIS1_EENS2_INS0_14FixedArrayBaseEEEjNS0_18EnsureElementsModeE(i64* %71, i64* %73, i32 %78, i32 1) #12
  %79 = load i64, i64* %71, align 8
  %80 = load i64, i64* %73, align 8
  %81 = add i64 %79, 7
  %82 = inttoptr i64 %81 to i32*
  %83 = trunc i64 %80 to i32
  store atomic volatile i32 %83, i32* %82 monotonic, align 4
  %84 = and i64 %80, 1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %97, label %86

86:                                               ; preds = %2
  %87 = and i64 %79, -262144
  %88 = or i64 %87, 8
  %89 = inttoptr i64 %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = and i64 %90, 262144
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %86
  %94 = or i64 %87, 16
  %95 = inttoptr i64 %94 to %"class.v8::internal::Heap"**
  %96 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %95, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %96, i64 %79, i64 %81, i64 %80) #12
  br label %97

97:                                               ; preds = %93, %86, %2
  %98 = and i64 %80, -262144
  %99 = or i64 %98, 8
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = and i64 %101, 24
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %112, label %104

104:                                              ; preds = %97
  %105 = and i64 %79, -262144
  %106 = or i64 %105, 8
  %107 = inttoptr i64 %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = and i64 %108, 24
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %104
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %79, i64 %81, i64 %80) #12
  br label %112

112:                                              ; preds = %97, %104, %111
  %113 = load i64, i64* %71, align 8
  %114 = load i64, i64* %73, align 8
  %115 = add i64 %114, 3
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = and i32 %117, -2
  %119 = add i64 %113, 11
  %120 = inttoptr i64 %119 to i32*
  store atomic volatile i32 %118, i32* %120 monotonic, align 4
  %121 = load i64, i64* %71, align 8
  %122 = lshr exact i64 %68, 3
  %123 = add i64 %121, 11
  %124 = inttoptr i64 %123 to i32*
  %125 = trunc i64 %122 to i32
  store atomic volatile i32 %125, i32* %124 monotonic, align 4
  %126 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = and i64 %127, -4294967296
  %129 = add i64 %127, -1
  %130 = inttoptr i64 %129 to i32*
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = zext i32 %131 to i64
  %133 = or i64 %128, %132
  %134 = add i64 %133, 19
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %128, %137
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %140 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %139, align 8
  %141 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %140, null
  br i1 %141, label %145, label %142

142:                                              ; preds = %112
  %143 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %140, i64 %138) #12
  %144 = load i64, i64* %143, align 8
  br label %158

145:                                              ; preds = %112
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %147 = load i64*, i64** %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %149 = load i64*, i64** %148, align 8
  %150 = icmp eq i64* %147, %149
  br i1 %150, label %151, label %153

151:                                              ; preds = %145
  %152 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %153

153:                                              ; preds = %151, %145
  %154 = phi i64* [ %152, %151 ], [ %147, %145 ]
  %155 = ptrtoint i64* %154 to i64
  %156 = add i64 %155, 8
  %157 = inttoptr i64 %156 to i64*
  store i64* %157, i64** %146, align 8
  store i64 %138, i64* %154, align 8
  br label %158

158:                                              ; preds = %142, %153
  %159 = phi i64 [ %144, %142 ], [ %138, %153 ]
  %160 = and i64 %159, -4294967296
  %161 = add i64 %159, 571
  %162 = inttoptr i64 %161 to i32*
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = zext i32 %163 to i64
  %165 = or i64 %160, %164
  %166 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %139, align 8
  %167 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %158
  %169 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %166, i64 %165) #12
  br label %183

170:                                              ; preds = %158
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %172 = load i64*, i64** %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %174 = load i64*, i64** %173, align 8
  %175 = icmp eq i64* %172, %174
  br i1 %175, label %176, label %178

176:                                              ; preds = %170
  %177 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %178

178:                                              ; preds = %176, %170
  %179 = phi i64* [ %177, %176 ], [ %172, %170 ]
  %180 = ptrtoint i64* %179 to i64
  %181 = add i64 %180, 8
  %182 = inttoptr i64 %181 to i64*
  store i64* %182, i64** %171, align 8
  store i64 %165, i64* %179, align 8
  br label %183

183:                                              ; preds = %168, %178
  %184 = phi i64* [ %169, %168 ], [ %179, %178 ]
  %185 = icmp sgt i32 %70, 0
  br i1 %185, label %186, label %197

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %62, i64 0, i32 0, i32 0
  %188 = and i32 %11, 1024
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %61, i64 0, i32 9, i32 0, i32 0
  %191 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %61, i64 0, i32 4
  %192 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %61, i64 0, i32 2
  %193 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %61, i64 0, i32 1
  %194 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %61, i64 0, i32 25, i32 0, i32 0
  %195 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %61, i64 0, i32 23, i32 0, i32 0
  %196 = and i64 %69, 4294967295
  br label %198

197:                                              ; preds = %325, %183
  ret i64* %71

198:                                              ; preds = %325, %186
  %199 = phi i64 [ 0, %186 ], [ %326, %325 ]
  %200 = phi i24 [ undef, %186 ], [ %281, %325 ]
  %201 = phi i24 [ undef, %186 ], [ %280, %325 ]
  %202 = load %"struct.v8::internal::wasm::WasmExport"*, %"struct.v8::internal::wasm::WasmExport"** %187, align 8
  %203 = getelementptr inbounds %"struct.v8::internal::wasm::WasmExport", %"struct.v8::internal::wasm::WasmExport"* %202, i64 %199
  %204 = getelementptr inbounds %"struct.v8::internal::wasm::WasmExport", %"struct.v8::internal::wasm::WasmExport"* %202, i64 %199, i32 1
  %205 = load i8, i8* %204, align 4
  switch i8 %205, label %278 [
    i8 0, label %206
    i8 1, label %215
    i8 2, label %245
    i8 3, label %266
    i8 4, label %279
  ]

206:                                              ; preds = %198
  br i1 %189, label %279, label %207

207:                                              ; preds = %206
  %208 = getelementptr inbounds %"struct.v8::internal::wasm::WasmExport", %"struct.v8::internal::wasm::WasmExport"* %202, i64 %199, i32 2
  %209 = load i32, i32* %208, align 4
  %210 = zext i32 %209 to i64
  %211 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %195, align 8
  %212 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %211, i64 %210, i32 0
  %213 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %212, align 8
  %214 = call i64* @_ZN2v88internal4wasm18GetTypeForFunctionEPNS0_7IsolateEPKNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::Signature"* %213)
  br label %279

215:                                              ; preds = %198
  br i1 %189, label %279, label %216

216:                                              ; preds = %215
  %217 = getelementptr inbounds %"struct.v8::internal::wasm::WasmExport", %"struct.v8::internal::wasm::WasmExport"* %202, i64 %199, i32 2
  %218 = load i32, i32* %217, align 4
  %219 = zext i32 %218 to i64
  %220 = load %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"** %194, align 8
  %221 = getelementptr inbounds %"struct.v8::internal::wasm::WasmTable", %"struct.v8::internal::wasm::WasmTable"* %220, i64 %219, i32 3
  %222 = load i8, i8* %221, align 4, !range !14
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %229, label %224

224:                                              ; preds = %216
  %225 = getelementptr inbounds %"struct.v8::internal::wasm::WasmTable", %"struct.v8::internal::wasm::WasmTable"* %220, i64 %219, i32 2
  %226 = load i32, i32* %225, align 4
  %227 = lshr i32 %226, 8
  %228 = trunc i32 %227 to i24
  br label %229

229:                                              ; preds = %216, %224
  %230 = phi i64 [ 0, %216 ], [ 1, %224 ]
  %231 = phi i32 [ 0, %216 ], [ %226, %224 ]
  %232 = phi i24 [ %200, %216 ], [ %228, %224 ]
  %233 = getelementptr inbounds %"struct.v8::internal::wasm::WasmTable", %"struct.v8::internal::wasm::WasmTable"* %220, i64 %219, i32 0, i32 0
  %234 = load i32, i32* %233, align 8
  %235 = getelementptr inbounds %"struct.v8::internal::wasm::WasmTable", %"struct.v8::internal::wasm::WasmTable"* %220, i64 %219, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = zext i24 %232 to i32
  %238 = shl nuw i32 %237, 8
  %239 = and i32 %231, 255
  %240 = or i32 %238, %239
  %241 = zext i32 %240 to i64
  %242 = shl nuw i64 %241, 32
  %243 = or i64 %242, %230
  %244 = call i64* @_ZN2v88internal4wasm15GetTypeForTableEPNS0_7IsolateENS1_9ValueTypeEjNS_4base8OptionalIjEE(%"class.v8::internal::Isolate"* %0, i32 %234, i32 %236, i64 %243)
  br label %279

245:                                              ; preds = %198
  br i1 %189, label %279, label %246

246:                                              ; preds = %245
  %247 = load i8, i8* %191, align 1, !range !14
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %253, label %249

249:                                              ; preds = %246
  %250 = load i32, i32* %192, align 4
  %251 = lshr i32 %250, 8
  %252 = trunc i32 %251 to i24
  br label %253

253:                                              ; preds = %246, %249
  %254 = phi i64 [ 0, %246 ], [ 1, %249 ]
  %255 = phi i32 [ 0, %246 ], [ %250, %249 ]
  %256 = phi i24 [ %201, %246 ], [ %252, %249 ]
  %257 = load i32, i32* %193, align 8
  %258 = zext i24 %256 to i32
  %259 = shl nuw i32 %258, 8
  %260 = and i32 %255, 255
  %261 = or i32 %259, %260
  %262 = zext i32 %261 to i64
  %263 = shl nuw i64 %262, 32
  %264 = or i64 %263, %254
  %265 = call i64* @_ZN2v88internal4wasm16GetTypeForMemoryEPNS0_7IsolateEjNS_4base8OptionalIjEE(%"class.v8::internal::Isolate"* %0, i32 %257, i64 %264)
  br label %279

266:                                              ; preds = %198
  br i1 %189, label %279, label %267

267:                                              ; preds = %266
  %268 = getelementptr inbounds %"struct.v8::internal::wasm::WasmExport", %"struct.v8::internal::wasm::WasmExport"* %202, i64 %199, i32 2
  %269 = load i32, i32* %268, align 4
  %270 = zext i32 %269 to i64
  %271 = load %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"** %190, align 8
  %272 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %271, i64 %270, i32 1
  %273 = load i8, i8* %272, align 4, !range !14
  %274 = icmp ne i8 %273, 0
  %275 = getelementptr inbounds %"struct.v8::internal::wasm::WasmGlobal", %"struct.v8::internal::wasm::WasmGlobal"* %271, i64 %270, i32 0, i32 0
  %276 = load i32, i32* %275, align 8
  %277 = call i64* @_ZN2v88internal4wasm16GetTypeForGlobalEPNS0_7IsolateEbNS1_9ValueTypeE(%"class.v8::internal::Isolate"* %0, i1 zeroext %274, i32 %276)
  br label %279

278:                                              ; preds = %198
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)) #14
  unreachable

279:                                              ; preds = %206, %215, %245, %266, %198, %267, %253, %229, %207
  %280 = phi i24 [ %201, %207 ], [ %201, %206 ], [ %201, %229 ], [ %201, %215 ], [ %256, %253 ], [ %201, %245 ], [ %201, %267 ], [ %201, %266 ], [ %201, %198 ]
  %281 = phi i24 [ %200, %207 ], [ %200, %206 ], [ %232, %229 ], [ %200, %215 ], [ %200, %253 ], [ %200, %245 ], [ %200, %267 ], [ %200, %266 ], [ %200, %198 ]
  %282 = phi i64* [ %214, %207 ], [ null, %206 ], [ %244, %229 ], [ null, %215 ], [ %265, %253 ], [ null, %245 ], [ %277, %267 ], [ null, %266 ], [ null, %198 ]
  %283 = phi i64* [ %28, %207 ], [ %28, %206 ], [ %32, %229 ], [ %32, %215 ], [ %36, %253 ], [ %36, %245 ], [ %40, %267 ], [ %40, %266 ], [ %44, %198 ]
  %284 = call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %12, i64* %184, i8 zeroext 0) #12
  %285 = bitcast %"struct.v8::internal::wasm::WasmExport"* %203 to i64*
  %286 = load i64, i64* %285, align 4
  %287 = call i64* @_ZN2v88internal16WasmModuleObject32ExtractUtf8StringFromModuleBytesEPNS0_7IsolateENS0_6HandleIS1_EENS0_4wasm12WireBytesRefENS0_17InternalizeStringE(%"class.v8::internal::Isolate"* %0, i64* %1, i64 %286, i1 zeroext false) #12
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %284, i64* %16, i64* %287, i32 0) #12
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %284, i64* %20, i64* %283, i32 0) #12
  %288 = icmp eq i64* %282, null
  br i1 %288, label %290, label %289

289:                                              ; preds = %279
  call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %284, i64* %24, i64* nonnull %282, i32 0) #12
  br label %290

290:                                              ; preds = %289, %279
  %291 = load i64, i64* %73, align 8
  %292 = load i64, i64* %284, align 8
  %293 = trunc i64 %199 to i32
  %294 = shl i32 %293, 2
  %295 = sext i32 %294 to i64
  %296 = add nsw i64 %295, 7
  %297 = add i64 %296, %291
  %298 = inttoptr i64 %297 to i32*
  %299 = trunc i64 %292 to i32
  store atomic volatile i32 %299, i32* %298 monotonic, align 4
  %300 = and i64 %292, 1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %325, label %302

302:                                              ; preds = %290
  %303 = and i64 %291, -262144
  %304 = or i64 %303, 8
  %305 = inttoptr i64 %304 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = and i64 %306, 262144
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %313, label %309

309:                                              ; preds = %302
  %310 = or i64 %303, 16
  %311 = inttoptr i64 %310 to %"class.v8::internal::Heap"**
  %312 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %311, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %312, i64 %291, i64 %297, i64 %292) #12
  br label %313

313:                                              ; preds = %309, %302
  %314 = and i64 %292, -262144
  %315 = or i64 %314, 8
  %316 = inttoptr i64 %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = and i64 %317, 24
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %325, label %320

320:                                              ; preds = %313
  %321 = load i64, i64* %305, align 8
  %322 = and i64 %321, 24
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %320
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %291, i64 %297, i64 %292) #12
  br label %325

325:                                              ; preds = %290, %313, %320, %324
  %326 = add nuw nsw i64 %199, 1
  %327 = icmp eq i64 %326, %196
  br i1 %327, label %197, label %198
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal4wasm17GetCustomSectionsEPNS0_7IsolateENS0_6HandleINS0_16WasmModuleObjectEEENS4_INS0_6StringEEEPNS1_12ErrorThrowerE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::wasm::ErrorThrower"*) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::vector.1545", align 8
  %6 = alloca %"class.std::__1::vector.1552", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %8 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %9 = load i64, i64* %1, align 8
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, 11
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 3
  %17 = inttoptr i64 %16 to %"struct.v8::internal::ManagedPtrDestructor"**
  %18 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %17, align 1
  %19 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %18, i64 0, i32 3
  %20 = bitcast i8** %19 to %"class.std::__1::shared_ptr.1585"**
  %21 = load %"class.std::__1::shared_ptr.1585"*, %"class.std::__1::shared_ptr.1585"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::shared_ptr.1585", %"class.std::__1::shared_ptr.1585"* %21, i64 0, i32 0
  %23 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %23, i64 0, i32 6
  %25 = bitcast %"class.std::__1::shared_ptr.1479"* %24 to i8*
  %26 = tail call dereferenceable(8) %"class.std::__1::__sp_mut"* @_ZNSt3__112__get_sp_mutEPKv(i8* %25) #12
  tail call void @_ZNSt3__18__sp_mut4lockEv(%"class.std::__1::__sp_mut"* %26) #12
  %27 = getelementptr inbounds %"class.std::__1::shared_ptr.1479", %"class.std::__1::shared_ptr.1479"* %24, i64 0, i32 0
  %28 = load %"class.v8::internal::OwnedVector"*, %"class.v8::internal::OwnedVector"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %23, i64 0, i32 6, i32 1
  %30 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %29, align 8
  %31 = icmp eq %"class.std::__1::__shared_weak_count"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %30, i64 0, i32 0, i32 1
  %34 = atomicrmw add i64* %33, i64 1 monotonic
  br label %35

35:                                               ; preds = %32, %4
  tail call void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"* %26) #12
  %36 = getelementptr inbounds %"class.v8::internal::OwnedVector", %"class.v8::internal::OwnedVector"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::OwnedVector", %"class.v8::internal::OwnedVector"* %28, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  br i1 %31, label %50, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %30, i64 0, i32 0, i32 1
  %42 = atomicrmw add i64* %41, i64 -1 acq_rel
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %30, i64 0, i32 0
  %46 = bitcast %"class.std::__1::__shared_weak_count"* %30 to void (%"class.std::__1::__shared_count"*)***
  %47 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %47, i64 2
  %49 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %48, align 8
  tail call void %49(%"class.std::__1::__shared_count"* %45) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %30) #12
  br label %50

50:                                               ; preds = %35, %40, %44
  %51 = bitcast %"class.std::__1::vector.1545"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #12
  %52 = getelementptr inbounds i8, i8* %37, i64 %39
  call void @_ZN2v88internal4wasm20DecodeCustomSectionsEPKhS3_(%"class.std::__1::vector.1545"* nonnull sret %5, i8* %37, i8* %52) #12
  %53 = bitcast %"class.std::__1::vector.1552"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #12
  %54 = getelementptr inbounds %"class.std::__1::vector.1545", %"class.std::__1::vector.1545"* %5, i64 0, i32 0, i32 0
  %55 = load %"struct.v8::internal::wasm::CustomSectionOffset"*, %"struct.v8::internal::wasm::CustomSectionOffset"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector.1545", %"class.std::__1::vector.1545"* %5, i64 0, i32 0, i32 1
  %57 = load %"struct.v8::internal::wasm::CustomSectionOffset"*, %"struct.v8::internal::wasm::CustomSectionOffset"** %56, align 8
  %58 = icmp eq %"struct.v8::internal::wasm::CustomSectionOffset"* %55, %57
  br i1 %58, label %182, label %59

59:                                               ; preds = %50
  %60 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7 to i8*
  %61 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7, i64 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::vector.1552", %"class.std::__1::vector.1552"* %6, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::vector.1552", %"class.std::__1::vector.1552"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.v8::internal::Handle.1434"** %63 to i64*
  %66 = bitcast %"class.std::__1::vector.1552"* %6 to i64*
  %67 = bitcast %"class.v8::internal::Handle.1434"** %64 to i64*
  br label %68

68:                                               ; preds = %59, %175
  %69 = phi %"struct.v8::internal::wasm::CustomSectionOffset"* [ %55, %59 ], [ %176, %175 ]
  %70 = getelementptr inbounds %"struct.v8::internal::wasm::CustomSectionOffset", %"struct.v8::internal::wasm::CustomSectionOffset"* %69, i64 0, i32 1
  %71 = bitcast %"class.v8::internal::wasm::WireBytesRef"* %70 to i64*
  %72 = load i64, i64* %71, align 4
  %73 = call i64* @_ZN2v88internal16WasmModuleObject32ExtractUtf8StringFromModuleBytesEPNS0_7IsolateENS0_6HandleIS1_EENS0_4wasm12WireBytesRefENS0_17InternalizeStringE(%"class.v8::internal::Isolate"* %0, i64* %1, i64 %72, i1 zeroext false) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #12
  %74 = load i64, i64* %2, align 8
  store i64 %74, i64* %61, align 8
  %75 = load i64, i64* %73, align 8
  %76 = trunc i64 %75 to i32
  %77 = trunc i64 %74 to i32
  %78 = icmp eq i32 %76, %77
  br i1 %78, label %79, label %80

79:                                               ; preds = %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #12
  br label %105

80:                                               ; preds = %68
  %81 = and i64 %74, -4294967296
  %82 = add i64 %74, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = icmp ult i16 %89, 32
  br i1 %90, label %91, label %103

91:                                               ; preds = %80
  %92 = and i64 %75, -4294967296
  %93 = add i64 %75, -1
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %92, %96
  %98 = add i64 %97, 7
  %99 = inttoptr i64 %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = icmp ult i16 %100, 32
  br i1 %101, label %102, label %103

102:                                              ; preds = %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #12
  br label %175

103:                                              ; preds = %80, %91
  %104 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %62, i64 %75) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #12
  br i1 %104, label %105, label %175

105:                                              ; preds = %79, %103
  %106 = getelementptr inbounds %"struct.v8::internal::wasm::CustomSectionOffset", %"struct.v8::internal::wasm::CustomSectionOffset"* %69, i64 0, i32 2, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  %109 = call i64* @_ZN2v88internal7Factory31NewJSArrayBufferAndBackingStoreEmNS0_15InitializedFlagENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %8, i64 %108, i8 zeroext 0, i8 zeroext 0) #12
  %110 = icmp eq i64* %109, null
  br i1 %110, label %178, label %111

111:                                              ; preds = %105
  %112 = ptrtoint i64* %109 to i64
  %113 = load i64, i64* %109, align 8
  %114 = add i64 %113, 27
  %115 = inttoptr i64 %114 to i8**
  %116 = load i8*, i8** %115, align 1
  %117 = getelementptr inbounds %"struct.v8::internal::wasm::CustomSectionOffset", %"struct.v8::internal::wasm::CustomSectionOffset"* %69, i64 0, i32 2, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %37, i64 %119
  %121 = load i32, i32* %106, align 4
  %122 = zext i32 %121 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %120, i64 %122, i1 false) #12
  %123 = load %"class.v8::internal::Handle.1434"*, %"class.v8::internal::Handle.1434"** %63, align 8
  %124 = load %"class.v8::internal::Handle.1434"*, %"class.v8::internal::Handle.1434"** %64, align 8
  %125 = icmp ult %"class.v8::internal::Handle.1434"* %123, %124
  %126 = ptrtoint %"class.v8::internal::Handle.1434"* %124 to i64
  br i1 %125, label %127, label %131

127:                                              ; preds = %111
  %128 = bitcast %"class.v8::internal::Handle.1434"* %123 to i64*
  store i64 %112, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Handle.1434", %"class.v8::internal::Handle.1434"* %123, i64 1
  %130 = ptrtoint %"class.v8::internal::Handle.1434"* %129 to i64
  store i64 %130, i64* %65, align 8
  br label %175

131:                                              ; preds = %111
  %132 = ptrtoint %"class.v8::internal::Handle.1434"* %123 to i64
  %133 = load i64, i64* %66, align 8
  %134 = sub i64 %132, %133
  %135 = ashr exact i64 %134, 3
  %136 = add nsw i64 %135, 1
  %137 = icmp ugt i64 %136, 2305843009213693951
  br i1 %137, label %138, label %140

138:                                              ; preds = %131
  %139 = bitcast %"class.std::__1::vector.1552"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %139) #14
  unreachable

140:                                              ; preds = %131
  %141 = sub i64 %126, %133
  %142 = ashr exact i64 %141, 3
  %143 = icmp ult i64 %142, 1152921504606846975
  br i1 %143, label %144, label %152

144:                                              ; preds = %140
  %145 = ashr exact i64 %141, 2
  %146 = icmp ult i64 %145, %136
  %147 = select i1 %146, i64 %136, i64 %145
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %157, label %149

149:                                              ; preds = %144
  %150 = icmp ugt i64 %147, 2305843009213693951
  br i1 %150, label %151, label %152

151:                                              ; preds = %149
  call void @abort() #14
  unreachable

152:                                              ; preds = %149, %140
  %153 = phi i64 [ %147, %149 ], [ 2305843009213693951, %140 ]
  %154 = shl i64 %153, 3
  %155 = call i8* @_Znwm(i64 %154) #13
  %156 = bitcast i8* %155 to %"class.v8::internal::Handle.1434"*
  br label %157

157:                                              ; preds = %152, %144
  %158 = phi i64 [ %153, %152 ], [ 0, %144 ]
  %159 = phi i8* [ %155, %152 ], [ null, %144 ]
  %160 = phi %"class.v8::internal::Handle.1434"* [ %156, %152 ], [ null, %144 ]
  %161 = getelementptr inbounds %"class.v8::internal::Handle.1434", %"class.v8::internal::Handle.1434"* %160, i64 %135
  %162 = getelementptr inbounds %"class.v8::internal::Handle.1434", %"class.v8::internal::Handle.1434"* %160, i64 %158
  %163 = ptrtoint %"class.v8::internal::Handle.1434"* %162 to i64
  %164 = bitcast %"class.v8::internal::Handle.1434"* %161 to i64*
  store i64 %112, i64* %164, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Handle.1434", %"class.v8::internal::Handle.1434"* %161, i64 1
  %166 = ptrtoint %"class.v8::internal::Handle.1434"* %165 to i64
  %167 = ptrtoint %"class.v8::internal::Handle.1434"* %160 to i64
  %168 = icmp sgt i64 %134, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %157
  %170 = inttoptr i64 %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* align 8 %170, i64 %134, i1 false) #12
  br label %171

171:                                              ; preds = %169, %157
  store i64 %167, i64* %66, align 8
  store i64 %166, i64* %65, align 8
  store i64 %163, i64* %67, align 8
  %172 = icmp eq i64 %133, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %171
  %174 = inttoptr i64 %133 to i8*
  call void @_ZdlPv(i8* %174) #13
  br label %175

175:                                              ; preds = %103, %102, %127, %171, %173
  %176 = getelementptr inbounds %"struct.v8::internal::wasm::CustomSectionOffset", %"struct.v8::internal::wasm::CustomSectionOffset"* %69, i64 1
  %177 = icmp eq %"struct.v8::internal::wasm::CustomSectionOffset"* %176, %57
  br i1 %177, label %179, label %68

178:                                              ; preds = %105
  call void (%"class.v8::internal::wasm::ErrorThrower"*, i8*, ...) @_ZN2v88internal4wasm12ErrorThrower10RangeErrorEPKcz(%"class.v8::internal::wasm::ErrorThrower"* %3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.23, i64 0, i64 0)) #12
  br label %290

179:                                              ; preds = %175
  %180 = load i64, i64* %65, align 8
  %181 = load i64, i64* %66, align 8
  br label %182

182:                                              ; preds = %50, %179
  %183 = phi i64 [ %181, %179 ], [ 0, %50 ]
  %184 = phi i64 [ %180, %179 ], [ 0, %50 ]
  %185 = sub i64 %184, %183
  %186 = lshr exact i64 %185, 3
  %187 = trunc i64 %186 to i32
  %188 = call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %8, i8 zeroext 2, i32 0, i32 0, i32 0, i8 zeroext 0) #12
  %189 = ptrtoint i64* %188 to i64
  %190 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %191 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %190, i32 %187, i8 zeroext 0) #12
  %192 = load i64, i64* %191, align 8
  %193 = add i64 %192, 3
  %194 = inttoptr i64 %193 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = ashr i32 %195, 1
  call void @_ZN2v88internal8JSObject24EnsureCanContainElementsENS0_6HandleIS1_EENS2_INS0_14FixedArrayBaseEEEjNS0_18EnsureElementsModeE(i64* %188, i64* %191, i32 %196, i32 1) #12
  %197 = load i64, i64* %188, align 8
  %198 = load i64, i64* %191, align 8
  %199 = add i64 %197, 7
  %200 = inttoptr i64 %199 to i32*
  %201 = trunc i64 %198 to i32
  store atomic volatile i32 %201, i32* %200 monotonic, align 4
  %202 = and i64 %198, 1
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %215, label %204

204:                                              ; preds = %182
  %205 = and i64 %197, -262144
  %206 = or i64 %205, 8
  %207 = inttoptr i64 %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = and i64 %208, 262144
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %215, label %211

211:                                              ; preds = %204
  %212 = or i64 %205, 16
  %213 = inttoptr i64 %212 to %"class.v8::internal::Heap"**
  %214 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %213, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %214, i64 %197, i64 %199, i64 %198) #12
  br label %215

215:                                              ; preds = %211, %204, %182
  %216 = and i64 %198, -262144
  %217 = or i64 %216, 8
  %218 = inttoptr i64 %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = and i64 %219, 24
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %230, label %222

222:                                              ; preds = %215
  %223 = and i64 %197, -262144
  %224 = or i64 %223, 8
  %225 = inttoptr i64 %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = and i64 %226, 24
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %222
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %197, i64 %199, i64 %198) #12
  br label %230

230:                                              ; preds = %215, %222, %229
  %231 = load i64, i64* %188, align 8
  %232 = load i64, i64* %191, align 8
  %233 = add i64 %232, 3
  %234 = inttoptr i64 %233 to i32*
  %235 = load i32, i32* %234, align 4
  %236 = and i32 %235, -2
  %237 = add i64 %231, 11
  %238 = inttoptr i64 %237 to i32*
  store atomic volatile i32 %236, i32* %238 monotonic, align 4
  %239 = load i64, i64* %188, align 8
  %240 = lshr exact i64 %185, 2
  %241 = add i64 %239, 11
  %242 = inttoptr i64 %241 to i32*
  %243 = trunc i64 %240 to i32
  store atomic volatile i32 %243, i32* %242 monotonic, align 4
  %244 = icmp sgt i32 %187, 0
  br i1 %244, label %245, label %290

245:                                              ; preds = %230
  %246 = getelementptr inbounds %"class.std::__1::vector.1552", %"class.std::__1::vector.1552"* %6, i64 0, i32 0, i32 0
  %247 = and i64 %186, 4294967295
  br label %248

248:                                              ; preds = %287, %245
  %249 = phi i64 [ 0, %245 ], [ %288, %287 ]
  %250 = load i64, i64* %191, align 8
  %251 = load %"class.v8::internal::Handle.1434"*, %"class.v8::internal::Handle.1434"** %246, align 8
  %252 = getelementptr inbounds %"class.v8::internal::Handle.1434", %"class.v8::internal::Handle.1434"* %251, i64 %249, i32 0, i32 0
  %253 = load i64*, i64** %252, align 8
  %254 = load i64, i64* %253, align 8
  %255 = trunc i64 %249 to i32
  %256 = shl i32 %255, 2
  %257 = sext i32 %256 to i64
  %258 = add nsw i64 %257, 7
  %259 = add i64 %258, %250
  %260 = inttoptr i64 %259 to i32*
  %261 = trunc i64 %254 to i32
  store atomic volatile i32 %261, i32* %260 monotonic, align 4
  %262 = and i64 %254, 1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %287, label %264

264:                                              ; preds = %248
  %265 = and i64 %250, -262144
  %266 = or i64 %265, 8
  %267 = inttoptr i64 %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = and i64 %268, 262144
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %264
  %272 = or i64 %265, 16
  %273 = inttoptr i64 %272 to %"class.v8::internal::Heap"**
  %274 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %273, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %274, i64 %250, i64 %259, i64 %254) #12
  br label %275

275:                                              ; preds = %271, %264
  %276 = and i64 %254, -262144
  %277 = or i64 %276, 8
  %278 = inttoptr i64 %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = and i64 %279, 24
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %287, label %282

282:                                              ; preds = %275
  %283 = load i64, i64* %267, align 8
  %284 = and i64 %283, 24
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %282
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %250, i64 %259, i64 %254) #12
  br label %287

287:                                              ; preds = %248, %275, %282, %286
  %288 = add nuw nsw i64 %249, 1
  %289 = icmp eq i64 %288, %247
  br i1 %289, label %290, label %248

290:                                              ; preds = %287, %230, %178
  %291 = phi i64 [ 0, %178 ], [ %189, %230 ], [ %189, %287 ]
  %292 = getelementptr inbounds %"class.std::__1::vector.1552", %"class.std::__1::vector.1552"* %6, i64 0, i32 0, i32 0
  %293 = load %"class.v8::internal::Handle.1434"*, %"class.v8::internal::Handle.1434"** %292, align 8
  %294 = icmp eq %"class.v8::internal::Handle.1434"* %293, null
  br i1 %294, label %300, label %295

295:                                              ; preds = %290
  %296 = ptrtoint %"class.v8::internal::Handle.1434"* %293 to i64
  %297 = getelementptr inbounds %"class.std::__1::vector.1552", %"class.std::__1::vector.1552"* %6, i64 0, i32 0, i32 1
  %298 = bitcast %"class.v8::internal::Handle.1434"** %297 to i64*
  store i64 %296, i64* %298, align 8
  %299 = bitcast %"class.v8::internal::Handle.1434"* %293 to i8*
  call void @_ZdlPv(i8* %299) #13
  br label %300

300:                                              ; preds = %290, %295
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #12
  %301 = load %"struct.v8::internal::wasm::CustomSectionOffset"*, %"struct.v8::internal::wasm::CustomSectionOffset"** %54, align 8
  %302 = icmp eq %"struct.v8::internal::wasm::CustomSectionOffset"* %301, null
  br i1 %302, label %307, label %303

303:                                              ; preds = %300
  %304 = ptrtoint %"struct.v8::internal::wasm::CustomSectionOffset"* %301 to i64
  %305 = bitcast %"struct.v8::internal::wasm::CustomSectionOffset"** %56 to i64*
  store i64 %304, i64* %305, align 8
  %306 = bitcast %"struct.v8::internal::wasm::CustomSectionOffset"* %301 to i8*
  call void @_ZdlPv(i8* %306) #13
  br label %307

307:                                              ; preds = %300, %303
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #12
  %308 = inttoptr i64 %291 to i64*
  ret i64* %308
}

declare void @_ZN2v88internal4wasm20DecodeCustomSectionsEPKhS3_(%"class.std::__1::vector.1545"* sret, i8*, i8*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory31NewJSArrayBufferAndBackingStoreEmNS0_15InitializedFlagENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64, i8 zeroext, i8 zeroext) local_unnamed_addr #3

declare void @_ZN2v88internal4wasm12ErrorThrower10RangeErrorEPKcz(%"class.v8::internal::wasm::ErrorThrower"*, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal4wasm17GetSourcePositionEPKNS1_10WasmModuleEjjb(%"struct.v8::internal::wasm::WasmModule"* nocapture readonly, i32, i32, i1 zeroext) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 33
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %26

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 23
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 23, i32 0, i32 1
  %12 = bitcast %"struct.v8::internal::wasm::WasmFunction"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.81"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 5
  %18 = icmp ugt i64 %17, %10
  br i1 %18, label %19, label %23

19:                                               ; preds = %8
  %20 = inttoptr i64 %15 to %"struct.v8::internal::wasm::WasmFunction"*
  %21 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %20, i64 %10, i32 3, i32 0
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %8, %19
  %24 = phi i32 [ %22, %19 ], [ -1, %8 ]
  %25 = add i32 %24, %2
  br label %67

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 36, i32 0, i32 0, i32 0
  %28 = load %"class.v8::internal::wasm::AsmJsOffsetInformation"*, %"class.v8::internal::wasm::AsmJsOffsetInformation"** %27, align 8
  %29 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 13
  %30 = load i32, i32* %29, align 4
  %31 = sub i32 %1, %30
  tail call void @_ZN2v88internal4wasm22AsmJsOffsetInformation20EnsureDecodedOffsetsEv(%"class.v8::internal::wasm::AsmJsOffsetInformation"* %28) #12
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsOffsetInformation", %"class.v8::internal::wasm::AsmJsOffsetInformation"* %28, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %"struct.v8::internal::wasm::AsmJsOffsets"*, %"struct.v8::internal::wasm::AsmJsOffsets"** %32, align 8
  %34 = sext i32 %31 to i64
  %35 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsets", %"struct.v8::internal::wasm::AsmJsOffsets"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"*, %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"** %35, align 8
  %37 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries", %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %36, i64 %34, i32 2, i32 0, i32 0
  %38 = load %"struct.v8::internal::wasm::AsmJsOffsetEntry"*, %"struct.v8::internal::wasm::AsmJsOffsetEntry"** %37, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries", %"struct.v8::internal::wasm::AsmJsOffsetFunctionEntries"* %36, i64 %34, i32 2, i32 0, i32 1
  %40 = bitcast %"struct.v8::internal::wasm::AsmJsOffsetEntry"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = ptrtoint %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %38 to i64
  %43 = sub i64 %41, %42
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %26
  %46 = sdiv exact i64 %43, 12
  br label %47

47:                                               ; preds = %47, %45
  %48 = phi %"struct.v8::internal::wasm::AsmJsOffsetEntry"* [ %59, %47 ], [ %38, %45 ]
  %49 = phi i64 [ %58, %47 ], [ %46, %45 ]
  %50 = lshr i64 %49, 1
  %51 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetEntry", %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %48, i64 %50
  %52 = getelementptr %"struct.v8::internal::wasm::AsmJsOffsetEntry", %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, %2
  %55 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetEntry", %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %51, i64 1
  %56 = xor i64 %50, -1
  %57 = add i64 %49, %56
  %58 = select i1 %54, i64 %57, i64 %50
  %59 = select i1 %54, %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %55, %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %48
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %61, label %47

61:                                               ; preds = %47, %26
  %62 = phi %"struct.v8::internal::wasm::AsmJsOffsetEntry"* [ %38, %26 ], [ %59, %47 ]
  %63 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetEntry", %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %62, i64 0, i32 2
  %64 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsOffsetEntry", %"struct.v8::internal::wasm::AsmJsOffsetEntry"* %62, i64 0, i32 1
  %65 = select i1 %3, i32* %63, i32* %64
  %66 = load i32, i32* %65, align 4
  br label %67

67:                                               ; preds = %61, %23
  %68 = phi i32 [ %66, %61 ], [ %25, %23 ]
  ret i32 %68
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal4wasm18EstimateStoredSizeEPKNS1_10WasmModuleE(%"struct.v8::internal::wasm::WasmModule"* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 9, i32 0, i32 1
  %4 = bitcast %"struct.v8::internal::wasm::WasmGlobal"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %10 = icmp eq %"class.v8::internal::Zone"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 5
  %13 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %12, align 8
  %14 = icmp eq %"class.v8::internal::Segment"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint %"class.v8::internal::Segment"* %13 to i64
  %19 = sub i64 -24, %18
  %20 = add i64 %19, %17
  br label %21

21:                                               ; preds = %11, %15
  %22 = phi i64 [ %20, %15 ], [ 0, %11 ]
  %23 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, %22
  br label %26

26:                                               ; preds = %1, %21
  %27 = phi i64 [ %25, %21 ], [ 0, %1 ]
  %28 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 20
  %29 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 20, i32 0, i32 1
  %30 = bitcast %"struct.v8::internal::wasm::TypeDefinition"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.59"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 21
  %35 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 21, i32 0, i32 1
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::vector.67"* %34 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 22
  %41 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 22, i32 0, i32 1
  %42 = bitcast i32** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.74"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 23
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 23, i32 0, i32 1
  %48 = bitcast %"struct.v8::internal::wasm::WasmFunction"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.std::__1::vector.81"* %46 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 24
  %53 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 24, i32 0, i32 1
  %54 = bitcast %"struct.v8::internal::wasm::WasmDataSegment"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::vector.88"* %52 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 25
  %59 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 25, i32 0, i32 1
  %60 = bitcast %"struct.v8::internal::wasm::WasmTable"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.std::__1::vector.95"* %58 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 26
  %65 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 26, i32 0, i32 1
  %66 = bitcast %"struct.v8::internal::wasm::WasmImport"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector.102"* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 27
  %71 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 27, i32 0, i32 1
  %72 = bitcast %"struct.v8::internal::wasm::WasmExport"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector.109"* %70 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 28
  %77 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 28, i32 0, i32 1
  %78 = bitcast %"struct.v8::internal::wasm::WasmException"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.std::__1::vector.116"* %76 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 29
  %83 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %0, i64 0, i32 29, i32 0, i32 1
  %84 = bitcast %"struct.v8::internal::wasm::WasmElemSegment"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.std::__1::vector.123"* %82 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %5, 536
  %89 = sub i64 %88, %7
  %90 = add i64 %89, %27
  %91 = add i64 %90, %31
  %92 = sub i64 %91, %33
  %93 = add i64 %92, %37
  %94 = sub i64 %93, %39
  %95 = add i64 %94, %43
  %96 = sub i64 %95, %45
  %97 = add i64 %96, %49
  %98 = sub i64 %97, %51
  %99 = add i64 %98, %55
  %100 = sub i64 %99, %57
  %101 = add i64 %100, %61
  %102 = sub i64 %101, %63
  %103 = add i64 %102, %67
  %104 = sub i64 %103, %69
  %105 = add i64 %104, %73
  %106 = sub i64 %105, %75
  %107 = add i64 %106, %79
  %108 = sub i64 %107, %81
  %109 = add i64 %108, %85
  %110 = sub i64 %109, %87
  ret i64 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal4wasm14PrintSignatureENS0_6VectorIcEEPKNS0_9SignatureINS1_9ValueTypeEEEc(i8*, i64, %"class.v8::internal::Signature"* nocapture readonly, i8 signext) local_unnamed_addr #0 {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %127, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %2, i64 0, i32 2
  %8 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %2, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %8, i64 %10
  %12 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %2, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %11, i64 %13
  %15 = icmp eq i64 %13, 0
  %16 = icmp eq i64 %1, 1
  br i1 %15, label %46, label %17

17:                                               ; preds = %6
  %18 = shl nsw i64 %13, 2
  %19 = add i64 %18, -4
  %20 = and i64 %19, 4
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %37

22:                                               ; preds = %17
  br i1 %16, label %32, label %23

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %11, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 31
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm10short_nameENS1_9ValueKindEE10kShortName, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  store i8 %29, i8* %0, align 1
  %30 = getelementptr inbounds i8, i8* %0, i64 1
  %31 = add i64 %1, -1
  br label %32

32:                                               ; preds = %23, %22
  %33 = phi i64 [ 1, %22 ], [ %31, %23 ]
  %34 = phi i8* [ %0, %22 ], [ %30, %23 ]
  %35 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %11, i64 1
  %36 = icmp eq i64 %33, 1
  br label %37

37:                                               ; preds = %32, %17
  %38 = phi i64 [ undef, %17 ], [ %33, %32 ]
  %39 = phi i8* [ undef, %17 ], [ %34, %32 ]
  %40 = phi i1 [ undef, %17 ], [ %36, %32 ]
  %41 = phi i1 [ %16, %17 ], [ %36, %32 ]
  %42 = phi %"class.v8::internal::wasm::ValueType"* [ %11, %17 ], [ %35, %32 ]
  %43 = phi i8* [ %0, %17 ], [ %34, %32 ]
  %44 = phi i64 [ %1, %17 ], [ %33, %32 ]
  %45 = icmp eq i64 %19, 0
  br i1 %45, label %46, label %87

46:                                               ; preds = %37, %152, %6
  %47 = phi i64 [ %1, %6 ], [ %38, %37 ], [ %153, %152 ]
  %48 = phi i8* [ %0, %6 ], [ %39, %37 ], [ %154, %152 ]
  %49 = phi i1 [ %16, %6 ], [ %40, %37 ], [ %157, %152 ]
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  store i8 %3, i8* %48, align 1
  %51 = getelementptr inbounds i8, i8* %48, i64 1
  %52 = add i64 %47, -1
  br label %53

53:                                               ; preds = %46, %50
  %54 = phi i64 [ 1, %46 ], [ %52, %50 ]
  %55 = phi i8* [ %48, %46 ], [ %51, %50 ]
  %56 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %7, align 8
  %57 = load i64, i64* %9, align 8
  %58 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %56, i64 %57
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %105, label %60

60:                                               ; preds = %53
  %61 = shl nsw i64 %57, 2
  %62 = add i64 %61, -4
  %63 = and i64 %62, 4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %80

65:                                               ; preds = %60
  %66 = icmp eq i64 %54, 1
  br i1 %66, label %76, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %56, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %69, 31
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm10short_nameENS1_9ValueKindEE10kShortName, i64 0, i64 %71
  %73 = load i8, i8* %72, align 1
  store i8 %73, i8* %55, align 1
  %74 = getelementptr inbounds i8, i8* %55, i64 1
  %75 = add i64 %54, -1
  br label %76

76:                                               ; preds = %67, %65
  %77 = phi i64 [ 1, %65 ], [ %75, %67 ]
  %78 = phi i8* [ %55, %65 ], [ %74, %67 ]
  %79 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %56, i64 1
  br label %80

80:                                               ; preds = %76, %60
  %81 = phi i64 [ undef, %60 ], [ %77, %76 ]
  %82 = phi i8* [ undef, %60 ], [ %78, %76 ]
  %83 = phi %"class.v8::internal::wasm::ValueType"* [ %56, %60 ], [ %79, %76 ]
  %84 = phi i8* [ %55, %60 ], [ %78, %76 ]
  %85 = phi i64 [ %54, %60 ], [ %77, %76 ]
  %86 = icmp eq i64 %62, 0
  br i1 %86, label %105, label %109

87:                                               ; preds = %37, %152
  %88 = phi i1 [ %157, %152 ], [ %41, %37 ]
  %89 = phi %"class.v8::internal::wasm::ValueType"* [ %155, %152 ], [ %42, %37 ]
  %90 = phi i8* [ %154, %152 ], [ %43, %37 ]
  %91 = phi i64 [ %153, %152 ], [ %44, %37 ]
  br i1 %88, label %101, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %89, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, 31
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm10short_nameENS1_9ValueKindEE10kShortName, i64 0, i64 %96
  %98 = load i8, i8* %97, align 1
  store i8 %98, i8* %90, align 1
  %99 = getelementptr inbounds i8, i8* %90, i64 1
  %100 = add i64 %91, -1
  br label %101

101:                                              ; preds = %87, %92
  %102 = phi i64 [ 1, %87 ], [ %100, %92 ]
  %103 = phi i8* [ %90, %87 ], [ %99, %92 ]
  %104 = icmp eq i64 %102, 1
  br i1 %104, label %152, label %143

105:                                              ; preds = %80, %138, %53
  %106 = phi i64 [ %54, %53 ], [ %81, %80 ], [ %139, %138 ]
  %107 = phi i8* [ %55, %53 ], [ %82, %80 ], [ %140, %138 ]
  store i8 0, i8* %107, align 1
  %108 = sub i64 %1, %106
  br label %127

109:                                              ; preds = %80, %138
  %110 = phi %"class.v8::internal::wasm::ValueType"* [ %141, %138 ], [ %83, %80 ]
  %111 = phi i8* [ %140, %138 ], [ %84, %80 ]
  %112 = phi i64 [ %139, %138 ], [ %85, %80 ]
  %113 = icmp eq i64 %112, 1
  br i1 %113, label %123, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %110, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, 31
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm10short_nameENS1_9ValueKindEE10kShortName, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  store i8 %120, i8* %111, align 1
  %121 = getelementptr inbounds i8, i8* %111, i64 1
  %122 = add i64 %112, -1
  br label %123

123:                                              ; preds = %109, %114
  %124 = phi i64 [ 1, %109 ], [ %122, %114 ]
  %125 = phi i8* [ %111, %109 ], [ %121, %114 ]
  %126 = icmp eq i64 %124, 1
  br i1 %126, label %138, label %129

127:                                              ; preds = %4, %105
  %128 = phi i64 [ %108, %105 ], [ 0, %4 ]
  ret i64 %128

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %110, i64 1, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = and i32 %131, 31
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm10short_nameENS1_9ValueKindEE10kShortName, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  store i8 %135, i8* %125, align 1
  %136 = getelementptr inbounds i8, i8* %125, i64 1
  %137 = add i64 %124, -1
  br label %138

138:                                              ; preds = %129, %123
  %139 = phi i64 [ 1, %123 ], [ %137, %129 ]
  %140 = phi i8* [ %125, %123 ], [ %136, %129 ]
  %141 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %110, i64 2
  %142 = icmp eq %"class.v8::internal::wasm::ValueType"* %141, %58
  br i1 %142, label %105, label %109

143:                                              ; preds = %101
  %144 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %89, i64 1, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = and i32 %145, 31
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm10short_nameENS1_9ValueKindEE10kShortName, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  store i8 %149, i8* %103, align 1
  %150 = getelementptr inbounds i8, i8* %103, i64 1
  %151 = add i64 %102, -1
  br label %152

152:                                              ; preds = %143, %101
  %153 = phi i64 [ 1, %101 ], [ %151, %143 ]
  %154 = phi i8* [ %103, %101 ], [ %150, %143 ]
  %155 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %89, i64 2
  %156 = icmp eq %"class.v8::internal::wasm::ValueType"* %155, %14
  %157 = icmp eq i64 %153, 1
  br i1 %156, label %46, label %87
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i32, i8 zeroext) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #3

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !14
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #13
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #12
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

declare void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #3

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8JSObject24EnsureCanContainElementsENS0_6HandleIS1_EENS2_INS0_14FixedArrayBaseEEEjNS0_18EnsureElementsModeE(i64*, i64*, i32, i32) local_unnamed_addr #10 comdat align 2 {
  %5 = load i64, i64* %0, align 8
  %6 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %7 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !14
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 1, i64 0
  br label %22

14:                                               ; preds = %8, %4
  %15 = and i64 %5, -262144
  %16 = or i64 %15, 16
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 16
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %22

22:                                               ; preds = %12, %14
  %23 = phi i64* [ %21, %14 ], [ %13, %12 ]
  %24 = load i64, i64* %1, align 8
  %25 = add i64 %24, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = getelementptr inbounds i64, i64* %23, i64 45
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = icmp eq i32 %27, %30
  br i1 %31, label %36, label %32

32:                                               ; preds = %22
  %33 = icmp eq i32 %3, 1
  %34 = select i1 %33, i32 0, i32 %3
  %35 = add i64 %24, 7
  tail call void @_ZN2v88internal8JSObject24EnsureCanContainElementsINS0_20CompressedObjectSlotEEEvNS0_6HandleIS1_EET_jNS0_18EnsureElementsModeE(i64* %0, i64 %35, i32 %2, i32 %34)
  br label %73

36:                                               ; preds = %22
  %37 = and i64 %5, -4294967296
  %38 = add i64 %5, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %37, %41
  %43 = add i64 %42, 10
  %44 = inttoptr i64 %43 to i8*
  %45 = load i8, i8* %44, align 1
  %46 = and i8 %45, -4
  %47 = icmp eq i8 %46, 4
  br i1 %47, label %48, label %49

48:                                               ; preds = %36
  tail call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext 5) #12
  br label %73

49:                                               ; preds = %36
  %50 = load atomic i32, i32* %39 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %37, %51
  %53 = add i64 %52, 10
  %54 = inttoptr i64 %53 to i8*
  %55 = load i8, i8* %54, align 1
  %56 = icmp ult i8 %55, 4
  br i1 %56, label %57, label %73

57:                                               ; preds = %49
  %58 = icmp eq i32 %2, 0
  br i1 %58, label %72, label %61

59:                                               ; preds = %61
  %60 = icmp eq i32 %70, %2
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %59
  %62 = phi i32 [ %70, %59 ], [ 0, %57 ]
  %63 = shl nsw i32 %62, 3
  %64 = or i32 %63, 7
  %65 = sext i32 %64 to i64
  %66 = add i64 %24, %65
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 1
  %69 = icmp eq i64 %68, -2251799814209537
  %70 = add nuw i32 %62, 1
  br i1 %69, label %71, label %59

71:                                               ; preds = %61
  tail call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext 5) #12
  br label %73

72:                                               ; preds = %59, %57
  tail call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext 4) #12
  br label %73

73:                                               ; preds = %48, %49, %72, %71, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8JSObject24EnsureCanContainElementsINS0_20CompressedObjectSlotEEEvNS0_6HandleIS1_EET_jNS0_18EnsureElementsModeE(i64*, i64, i32, i32) local_unnamed_addr #10 comdat align 2 {
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 10
  %13 = inttoptr i64 %12 to i8*
  %14 = load i8, i8* %13, align 1
  %15 = lshr i8 %14, 2
  %16 = icmp eq i8 %15, 3
  br i1 %16, label %131, label %17

17:                                               ; preds = %4
  %18 = icmp ult i8 %14, 24
  %19 = and i8 %14, 4
  %20 = icmp ne i8 %19, 0
  %21 = and i1 %18, %20
  %22 = zext i1 %21 to i8
  %23 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %24 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !14
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 1, i64 0
  br label %39

31:                                               ; preds = %25, %17
  %32 = and i64 %5, -262144
  %33 = or i64 %32, 16
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = add i64 %35, -41416
  %37 = inttoptr i64 %36 to %"class.v8::internal::Isolate"*
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %39

39:                                               ; preds = %29, %31
  %40 = phi i64* [ %38, %31 ], [ %30, %29 ]
  %41 = icmp eq i32 %2, 0
  br i1 %41, label %131, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds i64, i64* %40, i64 5
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %3, 2
  br i1 %46, label %47, label %96

47:                                               ; preds = %42, %90
  %48 = phi i8 [ %92, %90 ], [ %15, %42 ]
  %49 = phi i8 [ %91, %90 ], [ %22, %42 ]
  %50 = phi i32 [ %93, %90 ], [ 0, %42 ]
  %51 = phi i64 [ %94, %90 ], [ %1, %42 ]
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i64 %51, -4294967296
  %55 = zext i32 %53 to i64
  %56 = or i64 %54, %55
  %57 = icmp eq i32 %53, %45
  br i1 %57, label %79, label %58

58:                                               ; preds = %47
  %59 = and i64 %55, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %90, label %61

61:                                               ; preds = %58
  %62 = add i64 %56, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %54, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load atomic i16, i16* %68 monotonic, align 2
  %70 = icmp eq i16 %69, 66
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = and i8 %49, 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %90, label %127

74:                                               ; preds = %61
  %75 = icmp ult i8 %48, 2
  br i1 %75, label %76, label %90

76:                                               ; preds = %74
  %77 = and i8 %49, 1
  %78 = or i8 %77, 4
  br label %90

79:                                               ; preds = %47
  %80 = icmp ult i8 %48, 7
  br i1 %80, label %81, label %90

81:                                               ; preds = %79
  %82 = lshr i8 85, %48
  %83 = and i8 %82, 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %81
  %86 = zext i8 %48 to i56
  %87 = shl nuw nsw i56 %86, 3
  %88 = lshr i56 1971445840412929, %87
  %89 = trunc i56 %88 to i8
  br label %90

90:                                               ; preds = %81, %79, %85, %76, %74, %71, %58
  %91 = phi i8 [ %49, %58 ], [ %49, %74 ], [ %49, %76 ], [ %49, %71 ], [ 1, %85 ], [ 1, %81 ], [ 1, %79 ]
  %92 = phi i8 [ %48, %58 ], [ %48, %74 ], [ %78, %76 ], [ 2, %71 ], [ %89, %85 ], [ %48, %81 ], [ %48, %79 ]
  %93 = add nuw i32 %50, 1
  %94 = add i64 %51, 4
  %95 = icmp eq i32 %93, %2
  br i1 %95, label %127, label %47

96:                                               ; preds = %42, %121
  %97 = phi i8 [ %123, %121 ], [ %15, %42 ]
  %98 = phi i8 [ %122, %121 ], [ %22, %42 ]
  %99 = phi i32 [ %124, %121 ], [ 0, %42 ]
  %100 = phi i64 [ %125, %121 ], [ %1, %42 ]
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, %45
  br i1 %103, label %104, label %106

104:                                              ; preds = %96
  %105 = icmp ult i8 %97, 7
  br i1 %105, label %112, label %121

106:                                              ; preds = %96
  %107 = and i32 %102, 1
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %121, label %109

109:                                              ; preds = %106
  %110 = and i8 %98, 1
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %121, label %127

112:                                              ; preds = %104
  %113 = lshr i8 85, %97
  %114 = and i8 %113, 1
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %112
  %117 = zext i8 %97 to i56
  %118 = shl nuw nsw i56 %117, 3
  %119 = lshr i56 1971445840412929, %118
  %120 = trunc i56 %119 to i8
  br label %121

121:                                              ; preds = %112, %104, %116, %106, %109
  %122 = phi i8 [ %98, %106 ], [ %98, %109 ], [ 1, %116 ], [ 1, %112 ], [ 1, %104 ]
  %123 = phi i8 [ %97, %106 ], [ 2, %109 ], [ %120, %116 ], [ %97, %112 ], [ %97, %104 ]
  %124 = add nuw i32 %99, 1
  %125 = add i64 %100, 4
  %126 = icmp eq i32 %124, %2
  br i1 %126, label %127, label %96

127:                                              ; preds = %109, %121, %71, %90
  %128 = phi i8 [ 3, %71 ], [ %92, %90 ], [ 3, %109 ], [ %123, %121 ]
  %129 = icmp eq i8 %128, %15
  br i1 %129, label %131, label %130

130:                                              ; preds = %127
  tail call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %0, i8 zeroext %128) #12
  br label %131

131:                                              ; preds = %39, %4, %127, %130
  ret void
}

declare void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64*, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare dereferenceable(8) %"class.std::__1::__sp_mut"* @_ZNSt3__112__get_sp_mutEPKv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__18__sp_mut4lockEv(%"class.std::__1::__sp_mut"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"*, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal4wasm12WireBytesRefEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE28__node_insert_unique_prepareEmRS6_(%"class.std::__1::__hash_table"*, i64, %"struct.std::__1::__hash_value_type.1589"* dereferenceable(12)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !2
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, -1
  %12 = and i64 %11, %1
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %1
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %1, %5
  br label %17

17:                                               ; preds = %10, %13, %15
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %1, %13 ]
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %64, label %24

24:                                               ; preds = %17
  %25 = add i64 %5, -1
  %26 = getelementptr inbounds %"struct.std::__1::__hash_value_type.1589", %"struct.std::__1::__hash_value_type.1589"* %2, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %9, label %28, label %48

28:                                               ; preds = %24, %43
  %29 = phi %"struct.std::__1::__hash_node_base"* [ %31, %43 ], [ %22, %24 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %64, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %36, %5
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  %39 = urem i64 %36, %5
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i64 [ %39, %38 ], [ %36, %33 ]
  %42 = icmp eq i64 %41, %18
  br i1 %42, label %43, label %64

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %45 = bitcast %"struct.std::__1::__hash_node_base"* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, %27
  br i1 %47, label %88, label %28

48:                                               ; preds = %24, %59
  %49 = phi %"struct.std::__1::__hash_node_base"* [ %51, %59 ], [ %22, %24 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base"* %51, null
  br i1 %52, label %64, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, %25
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %59, label %64

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 2
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %27
  br i1 %63, label %88, label %48

64:                                               ; preds = %53, %48, %40, %28, %17, %3
  %65 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  %68 = uitofp i64 %67 to float
  %69 = uitofp i64 %5 to float
  %70 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %71 = load float, float* %70, align 4
  %72 = fmul float %71, %69
  %73 = fcmp olt float %72, %68
  %74 = or i1 %6, %73
  br i1 %74, label %75, label %88

75:                                               ; preds = %64
  %76 = shl i64 %5, 1
  %77 = icmp ult i64 %5, 3
  %78 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !2
  %79 = icmp ugt i64 %78, 1
  %80 = or i1 %77, %79
  %81 = zext i1 %80 to i64
  %82 = or i64 %76, %81
  %83 = fdiv float %68, %71
  %84 = tail call float @llvm.ceil.f32(float %83) #12
  %85 = fptoui float %84 to i64
  %86 = icmp ult i64 %82, %85
  %87 = select i1 %86, i64 %85, i64 %82
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal4wasm12WireBytesRefEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %87)
  br label %88

88:                                               ; preds = %59, %43, %75, %64
  %89 = phi %"struct.std::__1::__hash_node_base"* [ null, %64 ], [ null, %75 ], [ %31, %43 ], [ %51, %59 ]
  ret %"struct.std::__1::__hash_node_base"* %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal4wasm12WireBytesRefEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal4wasm12WireBytesRefEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal4wasm12WireBytesRefEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal4wasm12WireBytesRefEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !15

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i32*
  %105 = load i32, i32* %130, align 4
  %106 = load i32, i32* %104, align 4
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i32*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %146 to i32*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base"* %134, %"struct.std::__1::__hash_node_base"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %155 to i32*
  %157 = load i32, i32* %147, align 4
  %158 = load i32, i32* %156, align 4
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %132, %"struct.std::__1::__hash_node_base"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %180, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"** %2, align 8
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %2, align 8
  %4 = icmp eq %"class.v8::internal::wasm::WasmInitExpr"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %3) #12
  %6 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  ret void

7:                                                ; preds = %1
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal4wasm12WireBytesRefEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIiS5_EEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISO_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN2v88internal4wasm12WireBytesRefEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIiS5_EEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISO_EEEEEEDpOT_"}
!7 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK2v88internal4wasm8HeapType4nameEv: argument 0"}
!10 = distinct !{!10, !"_ZNK2v88internal4wasm8HeapType4nameEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK2v88internal4wasm8HeapType4nameEv: argument 0"}
!13 = distinct !{!13, !"_ZNK2v88internal4wasm8HeapType4nameEv"}
!14 = !{i8 0, i8 2}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
