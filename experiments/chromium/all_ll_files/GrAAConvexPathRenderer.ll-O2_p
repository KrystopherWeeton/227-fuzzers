; ModuleID = '../../third_party/skia/src/gpu/ops/GrAAConvexPathRenderer.cpp'
source_filename = "../../third_party/skia/src/gpu/ops/GrAAConvexPathRenderer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.252" = type { %"struct.std::__1::__atomic_base.253" }
%"struct.std::__1::__atomic_base.253" = type { %"struct.std::__1::__atomic_base.254" }
%"struct.std::__1::__atomic_base.254" = type { %"struct.std::__1::__cxx_atomic_impl.255" }
%"struct.std::__1::__cxx_atomic_impl.255" = type { %"struct.std::__1::__cxx_atomic_base_impl.256" }
%"struct.std::__1::__cxx_atomic_base_impl.256" = type { i32 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.GrAAConvexPathRenderer = type { %class.GrPathRenderer.base, [4 x i8] }
%class.GrPathRenderer.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.GrPathRenderer::CanDrawPathArgs" = type { %class.GrCaps*, %class.GrRenderTargetProxy*, %struct.SkIRect*, %class.SkMatrix*, %class.GrStyledShape*, %class.GrPaint*, %class.SkSurfaceProps*, i32, i8 }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.1, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.1 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.2 }
%class.SkFibBlockSizes.2 = type { i32 }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.3, %class.sk_sp.4, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.37" }
%class.SkNVRefCnt.3 = type { %"struct.std::__1::atomic" }
%class.sk_sp.4 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.7 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.5, i8* }
%class.sk_sp.5 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.6, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.6 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.7 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.8, void (i8*)*, i8* }
%class.SkNVRefCnt.8 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.9, i32, [4 x i8] }
%union.anon.9 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.4, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.35, %class.sk_sp.36, %class.sk_sp.36 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.12, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.12 = type { %class.SkTHashTable.13 }
%class.SkTHashTable.13 = type { i32, i32, %class.SkAutoTArray.14 }
%class.SkAutoTArray.14 = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.26, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.26 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.27 }
%class.SkTHashTable.27 = type { i32, i32, %class.SkAutoTArray.28 }
%class.SkAutoTArray.28 = type { %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.35 = type { %class.GrCaps* }
%class.sk_sp.36 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__cxx_atomic_impl.40" }
%"struct.std::__1::__cxx_atomic_impl.40" = type { %"struct.std::__1::__cxx_atomic_base_impl.41" }
%"struct.std::__1::__cxx_atomic_base_impl.41" = type { i64 }
%class.SkMatrix = type { [9 x float], i32 }
%class.GrStyledShape = type { %class.GrShape, %class.GrStyle, i32, i8, i8, %class.SkTLazy, %class.SkAutoSTArray.54 }
%class.GrShape = type { %union.anon.42, i8, i8, i8, i8, [4 x i8] }
%union.anon.42 = type { %class.SkRRect, [4 x i8] }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%class.GrStyle = type { %class.SkStrokeRec, %class.sk_sp.53, %"struct.GrStyle::DashInfo" }
%class.SkStrokeRec = type { float, float, float, i32 }
%class.sk_sp.53 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"struct.GrStyle::DashInfo" = type { i32, float, %class.SkAutoSTArray }
%class.SkAutoSTArray = type { i32, float*, [16 x i8] }
%class.SkTLazy = type { [16 x i8], %class.SkPath* }
%class.SkPath = type <{ %class.sk_sp.43, i32, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", i8, i8 }>
%class.sk_sp.43 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.44, %struct.SkRect, [4 x i8], %class.SkTDArray.45, %class.SkTDArray.46, %class.SkTDArray.47, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.44 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.45 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.46 = type { i8*, i32, i32 }
%class.SkTDArray.47 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.48 }
%class.SkTDArray.48 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.49", [3 x i8] }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl.51" }
%"struct.std::__1::__cxx_atomic_impl.51" = type { %"struct.std::__1::__cxx_atomic_base_impl.52" }
%"struct.std::__1::__cxx_atomic_base_impl.52" = type { i8 }
%class.SkAutoSTArray.54 = type { i32, i32*, [32 x i8] }
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.58 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.58 = type { %"class.std::__1::unique_ptr.55"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkSurfaceProps = type { i32, i32 }
%"struct.GrPathRenderer::DrawPathArgs" = type <{ %class.GrRecordingContext*, %class.GrPaint*, %struct.GrUserStencilSettings*, %class.GrSurfaceDrawContext*, %class.GrClip*, %struct.SkIRect*, %class.SkMatrix*, %class.GrStyledShape*, i32, i8, [3 x i8] }>
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.63", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.180" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.62 }
%class.sk_sp.62 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.66, %class.SkTHashMap.68, %class.SkTHashMap.77, %class.SkTArray.86, %class.SkTArray.88, i32, i8, [3 x i8] }>
%class.SkTArray.66 = type { %"class.std::__1::unique_ptr.67"*, i64 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.88, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.89 }
%class.sk_sp.89 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.68 = type { %class.SkTHashTable.69 }
%class.SkTHashTable.69 = type { i32, i32, %class.SkAutoTArray.70 }
%class.SkAutoTArray.70 = type { %"class.std::__1::unique_ptr.71" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.77 = type { %class.SkTHashTable.78 }
%class.SkTHashTable.78 = type { i32, i32, %class.SkAutoTArray.79 }
%class.SkAutoTArray.79 = type { %"class.std::__1::unique_ptr.80" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.225" }
%"struct.std::__1::pair.225" = type { i32, %class.SkTArray.226* }
%class.SkTArray.226 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.86 = type { %"class.std::__1::unique_ptr.87"*, i64 }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.226, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%class.SkTArray.88 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %class.SkArenaAlloc* }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.GrSubRunAllocator* }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.108, %class.SkTArray.117, %class.GrOpsTask*, %class.SkSTArray.145, %class.SkSTArray.148, %"class.std::__1::unique_ptr.150", %class.sk_sp.166, %class.GrTokenTracker, i8, i8, %class.SkTArray.167, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.108 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.109", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.112, i8, [7 x i8] }>
%class.sk_sp.112 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.113, i8*, i64 }
%class.GrNonAtomicRef.113 = type { i32 }
%class.SkTArray.117 = type { %class.sk_sp.118*, i64 }
%class.sk_sp.118 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray.119, %class.SkTArray.123, i32, i32, %class.SkSTArray.130, %class.SkSTArray.130, %class.GrTextureResolveRenderTask* }
%class.SkSTArray.119 = type { %class.SkAlignedSTStorage.120, %class.SkTArray.121 }
%class.SkAlignedSTStorage.120 = type { [8 x i8] }
%class.SkTArray.121 = type { %class.sk_sp.122*, i64 }
%class.sk_sp.122 = type { %class.GrSurfaceProxy* }
%class.SkTArray.123 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.124", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.130 = type { %class.SkAlignedSTStorage.131, %class.SkTArray.132 }
%class.SkAlignedSTStorage.131 = type { [8 x i8] }
%class.SkTArray.132 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.133, %class.sk_sp.1, %class.SkTArray.144, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.133 = type { %class.SkAlignedSTStorage.134, %class.SkTArray.135 }
%class.SkAlignedSTStorage.134 = type { [2000 x i8] }
%class.SkTArray.135 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.136", %class.GrOp* }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.136", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.122, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.55" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.142 }
%union.anon.142 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.143, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.143 = type { i32 }
%class.SkTArray.144 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.145 = type { %class.SkAlignedSTStorage.146, %class.SkTArray.147 }
%class.SkAlignedSTStorage.146 = type { [32 x i8] }
%class.SkTArray.147 = type { i32*, i64 }
%class.SkSTArray.148 = type { %class.SkAlignedSTStorage.149, %class.SkTArray.117 }
%class.SkAlignedSTStorage.149 = type { [32 x i8] }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.153, %"class.std::__1::unique_ptr.157", %class.GrPathRenderer* }
%class.SkSTArray.153 = type { %class.SkAlignedSTStorage.154, %class.SkTArray.155 }
%class.SkAlignedSTStorage.154 = type { [64 x i8] }
%class.SkTArray.155 = type { %class.sk_sp.156*, i64 }
%class.sk_sp.156 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.sk_sp.166 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.167 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.168, i32, %class.GrRenderTask** }
%class.SkTHashMap.168 = type { %class.SkTHashTable.169 }
%class.SkTHashTable.169 = type { i32, i32, %class.SkAutoTArray.170 }
%class.SkAutoTArray.170 = type { %"class.std::__1::unique_ptr.171" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %class.GrProxyProvider* }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.189, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrColorInfo = type { %class.sk_sp.186, %class.sk_sp.188, i32, i32 }
%class.sk_sp.186 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.187, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.187 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.sk_sp.188 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.sk_sp.189 = type { %class.GrOpsTask* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.190, %class.SkAutoTMalloc }
%class.SkAutoTArray.190 = type { %"class.std::__1::unique_ptr.191" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.194 }
%union.anon.194 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%struct.SkPackedGlyphID = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.198" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.203, %class.SkSTArray.208, %class.SkSTArray.211 }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.202" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.202" = type { %struct.SkPoint* }
%class.SkZip.203 = type { %"class.std::__1::tuple.204", i64 }
%"class.std::__1::tuple.204" = type { %"struct.std::__1::__tuple_impl.205" }
%"struct.std::__1::__tuple_impl.205" = type { %"class.std::__1::__tuple_leaf.206", %"class.std::__1::__tuple_leaf.207" }
%"class.std::__1::__tuple_leaf.206" = type { i16* }
%"class.std::__1::__tuple_leaf.207" = type { %struct.SkPoint* }
%class.SkSTArray.208 = type { %class.SkAlignedSTStorage.209, %class.SkTArray.210 }
%class.SkAlignedSTStorage.209 = type { [8 x i8] }
%class.SkTArray.210 = type { i16*, i64 }
%class.SkSTArray.211 = type { %class.SkAlignedSTStorage.212, %class.SkTArray.213 }
%class.SkAlignedSTStorage.212 = type { [32 x i8] }
%class.SkTArray.213 = type { %struct.SkPoint*, i64 }
%class.GrClip = type opaque
%"class.std::__1::function.214" = type { %"class.std::__1::__function::__policy_func.218" }
%"class.std::__1::__function::__policy_func.218" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.219", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.219" = type { void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* }
%class.GrProcessorSet = type <{ %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"union.GrProcessorSet::XP", i8, [7 x i8] }>
%"union.GrProcessorSet::XP" = type { %class.GrXPFactory* }
%"class.(anonymous namespace)::AAConvexPathOp" = type { %class.GrMeshDrawOp, %class.GrSimpleMeshDrawOpHelperWithStencil, %class.SkSTArray.233, i8, %class.SkTDArray.236, %class.GrProgramInfo* }
%class.GrMeshDrawOp = type { %class.GrDrawOp }
%class.GrDrawOp = type { %class.GrOp }
%class.GrSimpleMeshDrawOpHelperWithStencil = type { %class.GrSimpleMeshDrawOpHelper.base, %struct.GrUserStencilSettings* }
%class.GrSimpleMeshDrawOpHelper.base = type <{ %class.GrProcessorSet*, i8, i8 }>
%class.SkSTArray.233 = type { %class.SkAlignedSTStorage.234, %class.SkTArray.235 }
%class.SkAlignedSTStorage.234 = type { [72 x i8] }
%class.SkTArray.235 = type { %"struct.(anonymous namespace)::AAConvexPathOp::PathData"*, i64 }
%"struct.(anonymous namespace)::AAConvexPathOp::PathData" = type { %class.SkMatrix, %class.SkPath, %struct.SkRGBA4f }
%class.SkTDArray.236 = type { %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"*, i32, i32 }
%"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw" = type { %struct.GrSimpleMesh*, i32 }
%struct.GrSimpleMesh = type { %class.sk_sp.237, i32, i32, i32, i32, i16, i16, i8, %class.sk_sp.237, i32, i32 }
%class.sk_sp.237 = type { %class.GrBuffer* }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.238, %class.SkAutoSTArray.239, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.238 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.232, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.232 = type { i32 }
%class.SkAutoSTArray.239 = type { i32, %"class.std::__1::unique_ptr.240"*, [24 x i8] }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %class.GrFragmentProcessor* }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.246, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.246 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.GrPathRenderer::StencilPathArgs" = type { %class.GrRecordingContext*, %class.GrSurfaceDrawContext*, %class.GrHardClip*, %struct.SkIRect*, %class.SkMatrix*, %class.GrStyledShape*, i8 }
%class.GrHardClip = type opaque
%class.GrSimpleMeshDrawOpHelper = type <{ %class.GrProcessorSet*, i8, i8, [6 x i8] }>
%"class.std::__1::function.247" = type opaque
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.250, %class.SkArenaAllocList.251, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.144*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.248, %class.sk_sp.108, %class.sk_sp.112, %class.GrGpu*, i32, i8* }
%class.SkTArray.248 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.249 }
%class.sk_sp.249 = type { %class.GrBuffer* }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.250 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.251 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.237, %class.sk_sp.237, %class.sk_sp.237, i32, i32 }
%class.GrRenderTarget = type opaque
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%class.anon = type { %class.SkMatrix*, i8*, i8* }
%class.QuadEdgeEffect = type <{ %class.GrGeometryProcessor.base, [4 x i8], %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %class.SkMatrix, i8, [7 x i8] }>
%class.GrGeometryProcessor.base = type <{ %class.GrProcessor, %class.GrNonAtomicRef.246, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32 }>
%struct.PosAndUV = type { %struct.SkPoint, %struct.SkPoint }
%"class.GrPathUtils::QuadUVMatrix" = type { [6 x float] }
%class.SkSTArray.296 = type { %class.SkAlignedSTStorage.297, %class.SkTArray.298 }
%class.SkAlignedSTStorage.297 = type { [120 x i8] }
%class.SkTArray.298 = type { %struct.SkPoint*, i64 }
%struct.SkConic = type { [3 x %struct.SkPoint], float }
%"class.SkPath::Iter" = type <{ %struct.SkPoint*, i8*, i8*, float*, %struct.SkPoint, %struct.SkPoint, i8, i8, i8, [5 x i8] }>
%struct.DegenerateTestData = type { i32, %struct.SkPoint, %struct.SkPoint, float }
%class.SkAutoConicToQuads = type <{ %class.SkAutoSTMalloc.294, i32, [4 x i8] }>
%class.SkAutoSTMalloc.294 = type { %struct.SkPoint*, %union.anon.295 }
%union.anon.295 = type { [34 x i32] }
%class.SkSTArray.284 = type { %class.SkAlignedSTStorage.285, %class.SkTArray.286 }
%class.SkAlignedSTStorage.285 = type { [484 x i8] }
%class.SkTArray.286 = type { %struct.Segment*, i64 }
%struct.Segment = type { i32, [2 x %struct.SkPoint], [2 x %struct.SkPoint], %struct.SkPoint }
%class.SkSTArray.287 = type { %class.SkAlignedSTStorage.288, %class.SkTArray.289 }
%class.SkAlignedSTStorage.288 = type { [32 x i8] }
%class.SkTArray.289 = type { %struct.Draw*, i64 }
%struct.Draw = type { i32, i32 }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.147*, i32, i32 }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.258 }
%class.SkTArray.258 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%"class.GrGeometryProcessor::TextureSampler" = type <{ %class.GrSamplerState, [4 x i8], %class.GrBackendFormat, %class.GrSwizzle, i8, [5 x i8] }>
%class.GrSamplerState = type { [2 x i8], i32, i32 }
%"class.QuadEdgeEffect::GLSLProcessor" = type <{ %class.GrGLSLGeometryProcessor, %class.SkMatrix, %class.GrResourceHandle, [4 x i8] }>
%class.GrResourceHandle = type { i32 }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrGLSLProgramBuilder = type opaque
%"struct.GrGLSLGeometryProcessor::EmitArgs" = type { %class.GrGLSLVertexBuilder*, %class.GrGLSLGeometryBuilder*, %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLVaryingHandler*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrGeometryProcessor*, i8*, i8*, %class.GrResourceHandle.279*, %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.264, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.266, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.275], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.261 }
%union.anon.261 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.264 = type { %class.SkAlignedSTStorage.265, %class.SkTArray.88 }
%class.SkAlignedSTStorage.265 = type { [120 x i8] }
%class.SkSTArray.266 = type { %class.SkAlignedSTStorage.267, %class.SkTArray.268 }
%class.SkAlignedSTStorage.267 = type { [16 x i8] }
%class.SkTArray.268 = type { %"class.std::__1::unique_ptr.269"*, i64 }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.275 = type { %class.SkAlignedSTStorage.276, %class.SkTArray.88 }
%class.SkAlignedSTStorage.276 = type { [8 x i8] }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.277, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.277 = type { %class.GrSBlockAllocator.278 }
%class.GrSBlockAllocator.278 = type { [80 x i8] }
%class.GrResourceHandle.279 = type { i32 }
%"class.GrGLSLGeometryProcessor::FPCoordTransformHandler" = type { %"class.GrFragmentProcessor::CIter", %class.SkTArray.283* }
%"class.GrFragmentProcessor::CIter" = type { %class.SkSTArray.280 }
%class.SkSTArray.280 = type { %class.SkAlignedSTStorage.281, %class.SkTArray.282 }
%class.SkAlignedSTStorage.281 = type { [32 x i8] }
%class.SkTArray.282 = type { %class.GrFragmentProcessor**, i64 }
%class.SkTArray.283 = type { %class.GrShaderVar*, i64 }
%"struct.GrGLSLGeometryProcessor::GrGPArgs" = type { %class.GrShaderVar, %class.GrShaderVar }
%class.GrGLSLVarying = type { i32, i32, i8*, i8*, i8*, i8* }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.264, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.266, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.275], i32, i8, [3 x i8], i32, [12 x i8] }>
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN22GrAAConvexPathRendererD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK22GrAAConvexPathRenderer4nameEv = comdat any

$_ZNK14GrPathRenderer19onGetStencilSupportERK13GrStyledShape = comdat any

$_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN4GrOpD2Ev = comdat any

$_ZN4GrOpD0Ev = comdat any

$_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps = comdat any

$_ZN12SkArenaAlloc4makeIZN14QuadEdgeEffect4MakeEPS_RK8SkMatrixbbEUlPvE_EEDTclfp_LDnEEEOT_ = comdat any

$_ZZN12SkArenaAlloc4makeIZN14QuadEdgeEffect4MakeEPS_RK8SkMatrixbbEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESB_ = comdat any

$_ZN11GrProcessorD2Ev = comdat any

$_ZN14QuadEdgeEffectD0Ev = comdat any

$_ZNK14QuadEdgeEffect4nameEv = comdat any

$_ZNK14QuadEdgeEffect19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZNK14QuadEdgeEffect18createGLSLInstanceERK12GrShaderCaps = comdat any

$_ZNK19GrGeometryProcessor16onTextureSamplerEi = comdat any

$_ZN23GrGLSLGeometryProcessorD2Ev = comdat any

$_ZN14QuadEdgeEffect13GLSLProcessorD0Ev = comdat any

$_ZN14QuadEdgeEffect13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor = comdat any

$_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZN14QuadEdgeEffect13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE = comdat any

$_ZN23GrGLSLGeometryProcessorD0Ev = comdat any

$_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZN8SkTArrayI7SegmentLb1EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN8SkTArrayI4DrawLb1EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZZN12SkArenaAlloc23allocUninitializedArrayI12GrSimpleMeshEEPT_mENUlPcE_8__invokeES4_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZTV4GrOp = comdat any

$_ZTV14QuadEdgeEffect = comdat any

$_ZTVN14QuadEdgeEffect13GLSLProcessorE = comdat any

$_ZTV23GrGLSLGeometryProcessor = comdat any

$_ZZN10SkPathPriv22OppositeFirstDirectionE20SkPathFirstDirectionE12gOppositeDir = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@_ZTV22GrAAConvexPathRenderer = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.GrAAConvexPathRenderer*)* @_ZN22GrAAConvexPathRendererD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i8* (%class.GrAAConvexPathRenderer*)* @_ZNK22GrAAConvexPathRenderer4nameEv to i8*), i8* bitcast (i32 (%class.GrPathRenderer*, %class.GrStyledShape*)* @_ZNK14GrPathRenderer19onGetStencilSupportERK13GrStyledShape to i8*), i8* bitcast (i1 (%class.GrAAConvexPathRenderer*, %"struct.GrPathRenderer::DrawPathArgs"*)* @_ZN22GrAAConvexPathRenderer10onDrawPathERKN14GrPathRenderer12DrawPathArgsE to i8*), i8* bitcast (i32 (%class.GrAAConvexPathRenderer*, %"struct.GrPathRenderer::CanDrawPathArgs"*)* @_ZNK22GrAAConvexPathRenderer13onCanDrawPathERKN14GrPathRenderer15CanDrawPathArgsE to i8*), i8* bitcast (void (%class.GrPathRenderer*, %"struct.GrPathRenderer::StencilPathArgs"*)* @_ZN14GrPathRenderer13onStencilPathERKNS_15StencilPathArgsE to i8*)] }, align 8
@.str = private unnamed_addr constant [35 x i8] c"GrAAConvexPathRenderer::onDrawPath\00", align 1
@_ZTVN12_GLOBAL__N_114AAConvexPathOpE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::AAConvexPathOp"*)* @_ZN12_GLOBAL__N_114AAConvexPathOpD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::AAConvexPathOp"*)* @_ZN12_GLOBAL__N_114AAConvexPathOpD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::AAConvexPathOp"*)* @_ZNK12_GLOBAL__N_114AAConvexPathOp4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::AAConvexPathOp"*, %"class.std::__1::function.247"*)* @_ZNK12_GLOBAL__N_114AAConvexPathOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::AAConvexPathOp"*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN12_GLOBAL__N_114AAConvexPathOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%"class.(anonymous namespace)::AAConvexPathOp"*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN12_GLOBAL__N_114AAConvexPathOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::AAConvexPathOp"*)* @_ZNK12_GLOBAL__N_114AAConvexPathOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::AAConvexPathOp"*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN12_GLOBAL__N_114AAConvexPathOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%"class.(anonymous namespace)::AAConvexPathOp"*)* @_ZN12_GLOBAL__N_114AAConvexPathOp11programInfoEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::AAConvexPathOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_114AAConvexPathOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%"class.(anonymous namespace)::AAConvexPathOp"*, %"class.GrMeshDrawOp::Target"*)* @_ZN12_GLOBAL__N_114AAConvexPathOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZZN12_GLOBAL__N_114AAConvexPathOp7ClassIDEvE8kClassID = internal unnamed_addr global i32 0, align 4
@_ZGVZN12_GLOBAL__N_114AAConvexPathOp7ClassIDEvE8kClassID = internal global i64 0, align 8
@_ZN4GrOp14gCurrOpClassIDE = external global %"struct.std::__1::atomic.252", align 4
@.str.1 = private unnamed_addr constant [42 x i8] c"../../third_party/skia/src/gpu/ops/GrOp.h\00", align 1
@.str.2 = private unnamed_addr constant [80 x i8] c"This should never wrap as it should only be called once for each GrOp subclass.\00", align 1
@_ZTV4GrOp = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD2Ev to i8*), i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOp*, %"class.std::__1::function.247"*)* @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [15 x i8] c"AAConvexPathOp\00", align 1
@_ZTV14QuadEdgeEffect = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessor*)* @_ZN11GrProcessorD2Ev to i8*), i8* bitcast (void (%class.QuadEdgeEffect*)* @_ZN14QuadEdgeEffectD0Ev to i8*), i8* bitcast (i8* (%class.QuadEdgeEffect*)* @_ZNK14QuadEdgeEffect4nameEv to i8*), i8* bitcast (void (%class.QuadEdgeEffect*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK14QuadEdgeEffect19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%class.QuadEdgeEffect*, %class.GrShaderCaps*)* @_ZNK14QuadEdgeEffect18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)* @_ZNK19GrGeometryProcessor16onTextureSamplerEi to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [11 x i8] c"inPosition\00", align 1
@.ref.tmp = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), i32 1, i32 22 }, align 8
@.str.5 = private unnamed_addr constant [8 x i8] c"inColor\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"inQuadEdge\00", align 1
@.ref.tmp.7 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), i32 3, i32 24 }, align 8
@.str.8 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrGeometryProcessor.h\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"QuadEdge\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"usesLocalCoords\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"localMatrixType\00", align 1
@_ZTVN14QuadEdgeEffect13GLSLProcessorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%"class.QuadEdgeEffect::GLSLProcessor"*)* @_ZN14QuadEdgeEffect13GLSLProcessorD0Ev to i8*), i8* bitcast (void (%"class.QuadEdgeEffect::GLSLProcessor"*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)* @_ZN14QuadEdgeEffect13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%"class.QuadEdgeEffect::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*)* @_ZN14QuadEdgeEffect13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE to i8*)] }, comdat, align 8
@_ZTV23GrGLSLGeometryProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.13 = private unnamed_addr constant [62 x i8] c"../../third_party/skia/src/gpu/glsl/GrGLSLGeometryProcessor.h\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"Not implemented.\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"%s = %s;\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"half4 %s;\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"half edgeAlpha;\00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"half2 duvdx = half2(dFdx(%s.xy));\00", align 1
@.str.19 = private unnamed_addr constant [34 x i8] c"half2 duvdy = half2(dFdy(%s.xy));\00", align 1
@.str.20 = private unnamed_addr constant [32 x i8] c"if (%s.z > 0.0 && %s.w > 0.0) {\00", align 1
@.str.21 = private unnamed_addr constant [51 x i8] c"edgeAlpha = half(min(min(%s.z, %s.w) + 0.5, 1.0));\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"} else {\00", align 1
@.str.23 = private unnamed_addr constant [102 x i8] c"half2 gF = half2(half(2.0*%s.x*duvdx.x - duvdx.y),                 half(2.0*%s.x*duvdy.x - duvdy.y));\00", align 1
@.str.24 = private unnamed_addr constant [36 x i8] c"edgeAlpha = half(%s.x*%s.x - %s.y);\00", align 1
@.str.25 = private unnamed_addr constant [53 x i8] c"edgeAlpha = saturate(0.5 - edgeAlpha / length(gF));}\00", align 1
@.str.26 = private unnamed_addr constant [29 x i8] c"half4 %s = half4(edgeAlpha);\00", align 1
@.str.27 = private unnamed_addr constant [30 x i8] c"Illegal texture sampler index\00", align 1
@.str.28 = private unnamed_addr constant [62 x i8] c"../../third_party/skia/src/gpu/ops/GrAAConvexPathRenderer.cpp\00", align 1
@.str.29 = private unnamed_addr constant [29 x i8] c"Could not allocate vertices\0A\00", align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"Could not allocate indices\0A\00", align 1
@.str.31 = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.34 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1
@_ZZN10SkPathPriv22OppositeFirstDirectionE20SkPathFirstDirectionE12gOppositeDir = linkonce_odr hidden local_unnamed_addr constant [3 x i32] [i32 1, i32 0, i32 2], comdat, align 4
@.str.35 = private unnamed_addr constant [34 x i8] c"Unexpected degenerate test stage.\00", align 1
@.str.36 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"AAConvex\00", align 1
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@switch.table._ZN12SkArenaAlloc4makeIZN14QuadEdgeEffect4MakeEPS_RK8SkMatrixbbEUlPvE_EEDTclfp_LDnEEEOT_ = private unnamed_addr constant [10 x i64] [i64 32, i64 40, i64 32, i64 32, i64 32, i64 32, i64 32, i64 32, i64 28, i64 32], align 8

@_ZN22GrAAConvexPathRendererC1Ev = hidden unnamed_addr alias void (%class.GrAAConvexPathRenderer*), void (%class.GrAAConvexPathRenderer*)* @_ZN22GrAAConvexPathRendererC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22GrAAConvexPathRendererC2Ev(%class.GrAAConvexPathRenderer*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.GrAAConvexPathRenderer* %0 to %class.GrPathRenderer*
  tail call void @_ZN14GrPathRendererC2Ev(%class.GrPathRenderer* %2) #13
  %3 = getelementptr inbounds %class.GrAAConvexPathRenderer, %class.GrAAConvexPathRenderer* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22GrAAConvexPathRenderer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN14GrPathRendererC2Ev(%class.GrPathRenderer*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK22GrAAConvexPathRenderer13onCanDrawPathERKN14GrPathRenderer15CanDrawPathArgsE(%class.GrAAConvexPathRenderer* nocapture readnone, %"struct.GrPathRenderer::CanDrawPathArgs"* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.GrPathRenderer::CanDrawPathArgs", %"struct.GrPathRenderer::CanDrawPathArgs"* %1, i64 0, i32 0
  %4 = load %class.GrCaps*, %class.GrCaps** %3, align 8
  %5 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %4, i64 0, i32 2, i32 0
  %6 = load %class.GrShaderCaps*, %class.GrShaderCaps** %5, align 8
  %7 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %6, i64 0, i32 2
  %8 = bitcast i56* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %63, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.GrPathRenderer::CanDrawPathArgs", %"struct.GrPathRenderer::CanDrawPathArgs"* %1, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %63

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.GrPathRenderer::CanDrawPathArgs", %"struct.GrPathRenderer::CanDrawPathArgs"* %1, i64 0, i32 4
  %18 = load %class.GrStyledShape*, %class.GrStyledShape** %17, align 8
  %19 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %18, i64 0, i32 1, i32 0
  %20 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %19) #13
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %63

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %18, i64 0, i32 1, i32 1, i32 0
  %24 = load %class.SkPathEffect*, %class.SkPathEffect** %23, align 8
  %25 = icmp eq %class.SkPathEffect* %24, null
  br i1 %25, label %26, label %63

26:                                               ; preds = %22
  %27 = load %class.GrStyledShape*, %class.GrStyledShape** %17, align 8
  %28 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %27, i64 0, i32 0, i32 1
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 4
  br i1 %30, label %31, label %36

31:                                               ; preds = %26
  %32 = bitcast %class.GrStyledShape* %27 to %class.SkPath*
  %33 = getelementptr inbounds %class.SkPath, %class.SkPath* %32, i64 0, i32 4
  %34 = load i8, i8* %33, align 2
  %35 = and i8 %34, 2
  br label %39

36:                                               ; preds = %26
  %37 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %27, i64 0, i32 0, i32 4
  %38 = load i8, i8* %37, align 1, !range !2
  br label %39

39:                                               ; preds = %31, %36
  %40 = phi i8 [ %35, %31 ], [ %38, %36 ]
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %63

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %27, i64 0, i32 0
  %44 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %27, i64 0, i32 1, i32 0
  %45 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %44) #13
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %27, i64 0, i32 1, i32 1, i32 0
  %49 = load %class.SkPathEffect*, %class.SkPathEffect** %48, align 8
  %50 = icmp eq %class.SkPathEffect* %49, null
  br label %51

51:                                               ; preds = %42, %47
  %52 = phi i1 [ false, %42 ], [ %50, %47 ]
  %53 = tail call zeroext i1 @_ZNK7GrShape6convexEb(%class.GrShape* %43, i1 zeroext %52) #13
  br i1 %53, label %54, label %63

54:                                               ; preds = %51
  %55 = load %class.GrStyledShape*, %class.GrStyledShape** %17, align 8
  %56 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %55, i64 0, i32 0, i32 1
  %57 = load i8, i8* %56, align 8
  %58 = icmp eq i8 %57, 4
  br i1 %58, label %59, label %64

59:                                               ; preds = %54
  %60 = bitcast %class.GrStyledShape* %55 to %class.SkPath*
  %61 = tail call i32 @_ZN10SkPathPriv21ComputeFirstDirectionERK6SkPath(%class.SkPath* dereferenceable(16) %60) #13
  %62 = icmp eq i32 %61, 2
  br i1 %62, label %63, label %64

63:                                               ; preds = %59, %39, %2, %16, %51, %22, %12
  br label %64

64:                                               ; preds = %59, %54, %63
  %65 = phi i32 [ 0, %63 ], [ 2, %59 ], [ 2, %54 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN22GrAAConvexPathRenderer10onDrawPathERKN14GrPathRenderer12DrawPathArgsE(%class.GrAAConvexPathRenderer* nocapture readnone, %"struct.GrPathRenderer::DrawPathArgs"* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkRGBA4f, align 4
  %4 = alloca %class.SkMatrix, align 8
  %5 = alloca %class.SkMatrix, align 8
  %6 = alloca %class.SkPath, align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %class.SkPath, align 8
  %9 = alloca %"class.std::__1::function.214", align 8
  %10 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 3
  %11 = bitcast %class.GrSurfaceDrawContext** %10 to %class.GrSurfaceContext**
  %12 = load %class.GrSurfaceContext*, %class.GrSurfaceContext** %11, align 8
  %13 = tail call %class.GrAuditTrail* @_ZN16GrSurfaceContext10auditTrailEv(%class.GrSurfaceContext* %12) #13
  %14 = getelementptr inbounds %class.GrAuditTrail, %class.GrAuditTrail* %13, i64 0, i32 6
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %2
  %18 = load %class.GrSurfaceContext*, %class.GrSurfaceContext** %11, align 8
  %19 = tail call %class.GrAuditTrail* @_ZN16GrSurfaceContext10auditTrailEv(%class.GrSurfaceContext* %18) #13
  %20 = getelementptr inbounds %class.GrAuditTrail, %class.GrAuditTrail* %19, i64 0, i32 4
  %21 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %7, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #13
  call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.88* %20, i32 1, i32 1) #13
  %22 = getelementptr inbounds %class.SkTArray.88, %class.SkTArray.88* %20, i64 0, i32 0
  %23 = load %class.SkString*, %class.SkString** %22, align 8
  %24 = getelementptr inbounds %class.GrAuditTrail, %class.GrAuditTrail* %19, i64 0, i32 4, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %25, 1
  %27 = and i64 %26, 2147483647
  %28 = getelementptr inbounds %class.SkString, %class.SkString* %23, i64 %27
  %29 = add i64 %25, 2
  %30 = and i64 %29, 4294967294
  %31 = and i64 %25, -4294967295
  %32 = or i64 %30, %31
  store i64 %32, i64* %24, align 8
  call void @_ZN8SkStringC1EOS_(%class.SkString* %28, %class.SkString* nonnull dereferenceable(8) %7) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %33

33:                                               ; preds = %2, %17
  %34 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %8) #13
  %36 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 7
  %37 = load %class.GrStyledShape*, %class.GrStyledShape** %36, align 8
  %38 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %37, i64 0, i32 0
  %39 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %37, i64 0, i32 1, i32 0
  %40 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %39) #13
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %46

42:                                               ; preds = %33
  %43 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %37, i64 0, i32 1, i32 1, i32 0
  %44 = load %class.SkPathEffect*, %class.SkPathEffect** %43, align 8
  %45 = icmp eq %class.SkPathEffect* %44, null
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi i1 [ false, %33 ], [ %45, %42 ]
  call void @_ZNK7GrShape6asPathEP6SkPathb(%class.GrShape* %38, %class.SkPath* nonnull %8, i1 zeroext %47) #13
  %48 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 1
  %49 = load %class.GrPaint*, %class.GrPaint** %48, align 8
  %50 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 6
  %51 = bitcast %class.SkMatrix** %50 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 2
  %54 = load %struct.GrUserStencilSettings*, %struct.GrUserStencilSettings** %53, align 8
  %55 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %55)
  %56 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 4 %52, i64 40, i1 false) #13
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* nonnull %6, %class.SkPath* nonnull dereferenceable(16) %8) #13
  %57 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %57) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* nonnull align 8 %55, i64 40, i1 false) #13
  %58 = bitcast %struct.SkRGBA4f* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #13
  %59 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %49, i64 0, i32 5
  %60 = bitcast %struct.SkRGBA4f* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %58, i8* align 4 %60, i64 16, i1 false) #13
  %61 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %49, i64 0, i32 3
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %46
  %65 = call i8* @_Znwm(i64 192) #19
  br label %70

66:                                               ; preds = %46
  %67 = call i8* @_Znwm(i64 224) #13
  %68 = getelementptr inbounds i8, i8* %67, i64 192
  %69 = bitcast i8* %68 to %class.GrProcessorSet*
  call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %69, %class.GrPaint* dereferenceable(48) %49) #13
  br label %70

70:                                               ; preds = %64, %66
  %71 = phi i8* [ %65, %64 ], [ %67, %66 ]
  %72 = phi %class.GrProcessorSet* [ null, %64 ], [ %69, %66 ]
  %73 = bitcast i8* %71 to %"class.(anonymous namespace)::AAConvexPathOp"*
  call fastcc void @_ZN12_GLOBAL__N_114AAConvexPathOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK6SkPathPK21GrUserStencilSettings(%"class.(anonymous namespace)::AAConvexPathOp"* nonnull %73, %class.GrProcessorSet* %72, %struct.SkRGBA4f* nonnull dereferenceable(16) %3, %class.SkMatrix* nonnull dereferenceable(40) %4, %class.SkPath* nonnull dereferenceable(16) %6, %struct.GrUserStencilSettings* %54) #13
  %74 = bitcast i8* %71 to %class.GrOp*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %57) #13
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %55)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56)
  %75 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %10, align 8
  %76 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 4
  %77 = load %class.GrClip*, %class.GrClip** %76, align 8
  %78 = bitcast %"class.std::__1::function.214"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %78) #13
  %79 = getelementptr inbounds %"class.std::__1::function.214", %"class.std::__1::function.214"* %9, i64 0, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::function.214", %"class.std::__1::function.214"* %9, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %80, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %75, %class.GrClip* %77, %class.GrOp* %74, %"class.std::__1::function.214"* nonnull dereferenceable(32) %9) #13
  %81 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %80, align 8
  %82 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %81, i64 0, i32 1
  %83 = load void (i8*)*, void (i8*)** %82, align 8
  %84 = icmp eq void (i8*)* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %70
  %86 = getelementptr inbounds %"class.std::__1::function.214", %"class.std::__1::function.214"* %9, i64 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void %83(i8* %87) #13
  br label %88

88:                                               ; preds = %85, %70
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %78) #13
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  ret i1 true
}

declare %class.GrAuditTrail* @_ZN16GrSurfaceContext10auditTrailEv(%class.GrSurfaceContext*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #1

declare void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrOp*, %"class.std::__1::function.214"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22GrAAConvexPathRendererD0Ev(%class.GrAAConvexPathRenderer*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.GrAAConvexPathRenderer* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #13
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK22GrAAConvexPathRenderer4nameEv(%class.GrAAConvexPathRenderer*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK14GrPathRenderer19onGetStencilSupportERK13GrStyledShape(%class.GrPathRenderer*, %class.GrStyledShape* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

declare void @_ZN14GrPathRenderer13onStencilPathERKNS_15StencilPathArgsE(%class.GrPathRenderer*, %"struct.GrPathRenderer::StencilPathArgs"* dereferenceable(56)) unnamed_addr #1

declare i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec*) local_unnamed_addr #1

declare zeroext i1 @_ZNK7GrShape6convexEb(%class.GrShape*, i1 zeroext) local_unnamed_addr #1

declare i32 @_ZN10SkPathPriv21ComputeFirstDirectionERK6SkPath(%class.SkPath* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.88*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.88, %class.SkTArray.88* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #13
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.88, %class.SkTArray.88* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %class.SkString*
  %55 = load %class.SkString*, %class.SkString** %49, align 8
  %56 = getelementptr inbounds %class.SkString, %class.SkString* %55, i64 %51
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %54, %class.SkString* dereferenceable(8) %56) #13
  %57 = load %class.SkString*, %class.SkString** %49, align 8
  %58 = getelementptr inbounds %class.SkString, %class.SkString* %57, i64 %51
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %58) #13
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.88* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #13
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare void @_ZNK7GrShape6asPathEP6SkPathb(%class.GrShape*, %class.SkPath*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_114AAConvexPathOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK6SkPathPK21GrUserStencilSettings(%"class.(anonymous namespace)::AAConvexPathOp"*, %class.GrProcessorSet*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40), %class.SkPath* dereferenceable(16), %struct.GrUserStencilSettings*) unnamed_addr #0 align 2 {
  %7 = alloca %"struct.(anonymous namespace)::AAConvexPathOp::PathData", align 8
  %8 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 0
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_114AAConvexPathOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %19, !prof !3

11:                                               ; preds = %6
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAConvexPathOp7ClassIDEvE8kClassID) #13
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %11
  %15 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.252", %"struct.std::__1::atomic.252"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.2, i64 0, i64 0)) #20
  unreachable

18:                                               ; preds = %14
  store i32 %15, i32* @_ZZN12_GLOBAL__N_114AAConvexPathOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_114AAConvexPathOp7ClassIDEvE8kClassID) #13
  br label %19

19:                                               ; preds = %6, %11, %18
  %20 = load i32, i32* @_ZZN12_GLOBAL__N_114AAConvexPathOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %8, i32 %20) #13
  %21 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_114AAConvexPathOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 1
  tail call void @_ZN35GrSimpleMeshDrawOpHelperWithStencilC1EP14GrProcessorSet8GrAATypePK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrSimpleMeshDrawOpHelperWithStencil* %22, %class.GrProcessorSet* %1, i32 1, %struct.GrUserStencilSettings* %5, i8 zeroext 0) #13
  %23 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %24 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %25 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %26 = bitcast i8* %25 to i64*
  %27 = bitcast i8* %23 to i8**
  store i8* %24, i8** %27, align 8
  store i64 8589934592, i64* %26, align 8
  %28 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 4
  %29 = bitcast i8* %23 to %class.SkTArray.235*
  %30 = bitcast %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %7 to i8*
  %31 = bitcast %class.SkTDArray.236* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %30) #13
  %32 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 4 %32, i64 40, i1 false)
  %33 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %7, i64 0, i32 1
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* %33, %class.SkPath* dereferenceable(16) %4) #13
  %34 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %7, i64 0, i32 2
  %35 = bitcast %struct.SkRGBA4f* %34 to i8*
  %36 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 4 %36, i64 16, i1 false)
  call fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_114AAConvexPathOp8PathDataELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.235* %29, i32 1) #13
  %37 = bitcast i8* %23 to %"struct.(anonymous namespace)::AAConvexPathOp::PathData"**
  %38 = load %"struct.(anonymous namespace)::AAConvexPathOp::PathData"*, %"struct.(anonymous namespace)::AAConvexPathOp::PathData"** %37, align 8
  %39 = load i64, i64* %26, align 8
  %40 = lshr i64 %39, 1
  %41 = and i64 %40, 2147483647
  %42 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %38, i64 %41
  %43 = bitcast %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %42 to i8*
  %44 = add i64 %39, 2
  %45 = and i64 %44, 4294967294
  %46 = and i64 %39, -4294967295
  %47 = or i64 %45, %46
  store i64 %47, i64* %26, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 8 %30, i64 40, i1 false) #13
  %48 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %38, i64 %41, i32 1
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* %48, %class.SkPath* dereferenceable(16) %33) #13
  %49 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %38, i64 %41, i32 2
  %50 = bitcast %struct.SkRGBA4f* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %35, i64 16, i1 false) #13
  call void @_ZN6SkPathD1Ev(%class.SkPath* %33) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %30) #13
  %51 = getelementptr inbounds %class.SkPath, %class.SkPath* %4, i64 0, i32 0, i32 0
  %52 = load %class.SkPathRef*, %class.SkPathRef** %51, align 8
  %53 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %52, i64 0, i32 9
  %54 = load i8, i8* %53, align 8
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %19
  %57 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %52, i64 0, i32 1
  %58 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %52, i64 0, i32 3, i32 0
  %59 = load %struct.SkPoint*, %struct.SkPoint** %58, align 8
  %60 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %52, i64 0, i32 3, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %57, %struct.SkPoint* %59, i32 %61) #13
  %63 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %52, i64 0, i32 10
  %64 = zext i1 %62 to i8
  store i8 %64, i8* %63, align 1
  store i8 0, i8* %53, align 8
  br label %65

65:                                               ; preds = %19, %56
  %66 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %52, i64 0, i32 1
  %67 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %68 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %3, %struct.SkRect* %67, %struct.SkRect* dereferenceable(16) %66, i32 1) #13
  %69 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  store i16 1, i16* %69, align 2
  ret void
}

declare void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp*, i32) unnamed_addr #1

declare void @_ZN35GrSimpleMeshDrawOpHelperWithStencilC1EP14GrProcessorSet8GrAATypePK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrProcessorSet*, i32, %struct.GrUserStencilSettings*, i8 zeroext) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114AAConvexPathOpD2Ev(%"class.(anonymous namespace)::AAConvexPathOp"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_114AAConvexPathOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 4
  %4 = bitcast %class.SkTDArray.236* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @_Z7sk_freePv(i8* %5) #13
  %6 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %7 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 4294967294
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = bitcast i8* %6 to %"struct.(anonymous namespace)::AAConvexPathOp::PathData"**
  br label %18

14:                                               ; preds = %18, %1
  %15 = phi i64 [ %9, %1 ], [ %23, %18 ]
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %30, label %27

18:                                               ; preds = %18, %12
  %19 = phi i64 [ 0, %12 ], [ %22, %18 ]
  %20 = load %"struct.(anonymous namespace)::AAConvexPathOp::PathData"*, %"struct.(anonymous namespace)::AAConvexPathOp::PathData"** %13, align 8
  %21 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %20, i64 %19, i32 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %21) #13
  %22 = add nuw nsw i64 %19, 1
  %23 = load i64, i64* %8, align 8
  %24 = lshr i64 %23, 1
  %25 = and i64 %24, 2147483647
  %26 = icmp ult i64 %22, %25
  br i1 %26, label %18, label %14

27:                                               ; preds = %14
  %28 = bitcast i8* %6 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @_Z7sk_freePv(i8* %29) #13
  br label %30

30:                                               ; preds = %14, %27
  %31 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 1
  %32 = bitcast %class.GrSimpleMeshDrawOpHelperWithStencil* %31 to %class.GrSimpleMeshDrawOpHelper*
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD2Ev(%class.GrSimpleMeshDrawOpHelper* %32) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %33 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %class.GrOp*, %class.GrOp** %33, align 8
  store %class.GrOp* null, %class.GrOp** %33, align 8
  %35 = icmp eq %class.GrOp* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %30
  %37 = bitcast %class.GrOp* %34 to void (%class.GrOp*)***
  %38 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %38, i64 1
  %40 = load void (%class.GrOp*)*, void (%class.GrOp*)** %39, align 8
  tail call void %40(%class.GrOp* nonnull %34) #13
  br label %41

41:                                               ; preds = %30, %36
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114AAConvexPathOpD0Ev(%"class.(anonymous namespace)::AAConvexPathOp"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_114AAConvexPathOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 4
  %4 = bitcast %class.SkTDArray.236* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @_Z7sk_freePv(i8* %5) #13
  %6 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %7 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 4294967294
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = bitcast i8* %6 to %"struct.(anonymous namespace)::AAConvexPathOp::PathData"**
  br label %18

14:                                               ; preds = %18, %1
  %15 = phi i64 [ %9, %1 ], [ %23, %18 ]
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %30, label %27

18:                                               ; preds = %18, %12
  %19 = phi i64 [ 0, %12 ], [ %22, %18 ]
  %20 = load %"struct.(anonymous namespace)::AAConvexPathOp::PathData"*, %"struct.(anonymous namespace)::AAConvexPathOp::PathData"** %13, align 8
  %21 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %20, i64 %19, i32 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %21) #13
  %22 = add nuw nsw i64 %19, 1
  %23 = load i64, i64* %8, align 8
  %24 = lshr i64 %23, 1
  %25 = and i64 %24, 2147483647
  %26 = icmp ult i64 %22, %25
  br i1 %26, label %18, label %14

27:                                               ; preds = %14
  %28 = bitcast i8* %6 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @_Z7sk_freePv(i8* %29) #13
  br label %30

30:                                               ; preds = %27, %14
  %31 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 1
  %32 = bitcast %class.GrSimpleMeshDrawOpHelperWithStencil* %31 to %class.GrSimpleMeshDrawOpHelper*
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD2Ev(%class.GrSimpleMeshDrawOpHelper* %32) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %33 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %class.GrOp*, %class.GrOp** %33, align 8
  store %class.GrOp* null, %class.GrOp** %33, align 8
  %35 = icmp eq %class.GrOp* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %30
  %37 = bitcast %class.GrOp* %34 to void (%class.GrOp*)***
  %38 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %38, i64 1
  %40 = load void (%class.GrOp*)*, void (%class.GrOp*)** %39, align 8
  tail call void %40(%class.GrOp* nonnull %34) #13
  br label %41

41:                                               ; preds = %30, %36
  %42 = bitcast %"class.(anonymous namespace)::AAConvexPathOp"* %0 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_114AAConvexPathOp4nameEv(%"class.(anonymous namespace)::AAConvexPathOp"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_114AAConvexPathOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%"class.(anonymous namespace)::AAConvexPathOp"* nocapture readonly, %"class.std::__1::function.247"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 5
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.247"* %1) #13
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.247"* %1) #13
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_114AAConvexPathOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%"class.(anonymous namespace)::AAConvexPathOp"*, %class.GrOp*, %class.SkArenaAlloc* nocapture readnone, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %7 = bitcast %class.GrOp* %6 to %class.GrSimpleMeshDrawOpHelperWithStencil*
  %8 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %9 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %10 = tail call zeroext i1 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelperWithStencil* %5, %class.GrSimpleMeshDrawOpHelperWithStencil* dereferenceable(24) %7, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %8, %struct.SkRect* dereferenceable(16) %9, i1 zeroext false) #13
  br i1 %10, label %11, label %83

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 1, i32 0, i32 2
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3
  %18 = bitcast %class.GrOp* %17 to %"struct.(anonymous namespace)::AAConvexPathOp::PathData"**
  %19 = load %"struct.(anonymous namespace)::AAConvexPathOp::PathData"*, %"struct.(anonymous namespace)::AAConvexPathOp::PathData"** %18, align 8
  br label %33

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %22 = bitcast i8* %21 to %"struct.(anonymous namespace)::AAConvexPathOp::PathData"**
  %23 = load %"struct.(anonymous namespace)::AAConvexPathOp::PathData"*, %"struct.(anonymous namespace)::AAConvexPathOp::PathData"** %22, align 8
  %24 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3
  %25 = bitcast %class.GrOp* %24 to %"struct.(anonymous namespace)::AAConvexPathOp::PathData"**
  %26 = load %"struct.(anonymous namespace)::AAConvexPathOp::PathData"*, %"struct.(anonymous namespace)::AAConvexPathOp::PathData"** %25, align 8
  %27 = icmp eq %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %23, %26
  br i1 %27, label %33, label %28

28:                                               ; preds = %20
  %29 = bitcast %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %23 to i8*
  %30 = bitcast %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %26 to i8*
  %31 = tail call i32 @bcmp(i8* %29, i8* %30, i64 36) #13
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %83

33:                                               ; preds = %16, %20, %28
  %34 = phi %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* [ %19, %16 ], [ %23, %20 ], [ %26, %28 ]
  %35 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %36 = bitcast i8* %35 to %class.SkTArray.235*
  %37 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 1
  %38 = bitcast %"class.std::__1::unique_ptr.136"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = lshr i64 %39, 1
  %41 = trunc i64 %40 to i32
  %42 = and i32 %41, 2147483647
  tail call fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_114AAConvexPathOp8PathDataELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.235* %36, i32 %42) #13
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %68, label %44

44:                                               ; preds = %33
  %45 = bitcast i8* %35 to %"struct.(anonymous namespace)::AAConvexPathOp::PathData"**
  %46 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %47 = bitcast i8* %46 to i64*
  %48 = zext i32 %42 to i64
  br label %49

49:                                               ; preds = %49, %44
  %50 = phi i64 [ 0, %44 ], [ %66, %49 ]
  %51 = load %"struct.(anonymous namespace)::AAConvexPathOp::PathData"*, %"struct.(anonymous namespace)::AAConvexPathOp::PathData"** %45, align 8
  %52 = load i64, i64* %47, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %51, i64 %54
  %56 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %55, i64 %50
  %57 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %34, i64 %50
  %58 = bitcast %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %56 to i8*
  %59 = bitcast %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 40, i1 false) #13
  %60 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %56, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %34, i64 %50, i32 1
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %60, %class.SkPath* dereferenceable(16) %61) #13
  %62 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %56, i64 0, i32 2
  %63 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %34, i64 %50, i32 2
  %64 = bitcast %struct.SkRGBA4f* %62 to i8*
  %65 = bitcast %struct.SkRGBA4f* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false) #13
  %66 = add nuw nsw i64 %50, 1
  %67 = icmp eq i64 %66, %48
  br i1 %67, label %68, label %49

68:                                               ; preds = %49, %33
  %69 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %70 = bitcast i8* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %39, 4294967294
  %73 = add i64 %71, %72
  %74 = and i64 %73, 4294967294
  %75 = and i64 %71, -4294967295
  %76 = or i64 %74, %75
  store i64 %76, i64* %70, align 8
  %77 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 2
  %78 = bitcast %class.GrOp** %77 to i8*
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 3
  %81 = load i8, i8* %80, align 8, !range !2
  %82 = or i8 %81, %79
  store i8 %82, i8* %80, align 8
  br label %83

83:                                               ; preds = %28, %4, %68
  %84 = phi i32 [ 0, %68 ], [ 2, %4 ], [ 2, %28 ]
  ret i32 %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 comdat align 2 {
  %8 = bitcast %class.GrMeshDrawOp* %0 to void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)***
  %9 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)**, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %9, i64 10
  %11 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %10, align 8
  tail call void %11(%class.GrMeshDrawOp* %0, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #13
  ret void
}

declare void @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState(%class.GrMeshDrawOp*, %class.GrOpFlushState*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114AAConvexPathOp9onExecuteEP14GrOpFlushStateRK6SkRect(%"class.(anonymous namespace)::AAConvexPathOp"* nocapture readonly, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 5
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 4, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %66, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %13 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %13, %class.GrProgramInfo* nonnull dereferenceable(128) %5, %struct.SkRect* dereferenceable(16) %2) #13
  %14 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %5, i64 0, i32 5
  %15 = load %class.GrPipeline*, %class.GrPipeline** %14, align 8
  %16 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %15, i64 0, i32 5
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 32
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %22 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %21, align 8
  %23 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %22, i64 0, i32 4
  %24 = load %class.GrAppliedClip*, %class.GrAppliedClip** %23, align 8
  %25 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %24, i64 0, i32 0, i32 0, i32 1
  %26 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %26, %struct.SkIRect* dereferenceable(16) %25) #13
  br label %27

27:                                               ; preds = %11, %20
  %28 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %29 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 7
  %30 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %29, align 8
  %31 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 5
  %32 = load %class.GrPipeline*, %class.GrPipeline** %31, align 8
  %33 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %33, %class.GrGeometryProcessor* dereferenceable(80) %30, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %32) #13
  %34 = load i32, i32* %8, align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %66

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 4, i32 0
  %38 = load %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"*, %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"** %37, align 8
  br label %39

39:                                               ; preds = %36, %48
  %40 = phi i32 [ %34, %36 ], [ %49, %48 ]
  %41 = phi %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"* [ %38, %36 ], [ %50, %48 ]
  %42 = phi i64 [ 0, %36 ], [ %51, %48 ]
  %43 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw", %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"* %41, i64 %42, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %54, label %48

46:                                               ; preds = %54
  %47 = load i32, i32* %8, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %40, %39 ]
  %50 = phi %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"* [ %61, %46 ], [ %41, %39 ]
  %51 = add nuw nsw i64 %42, 1
  %52 = sext i32 %49 to i64
  %53 = icmp slt i64 %51, %52
  br i1 %53, label %39, label %66

54:                                               ; preds = %39, %54
  %55 = phi i64 [ %60, %54 ], [ 0, %39 ]
  %56 = phi %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"* [ %61, %54 ], [ %41, %39 ]
  %57 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw", %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"* %56, i64 %42, i32 0
  %58 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %57, align 8
  %59 = getelementptr inbounds %struct.GrSimpleMesh, %struct.GrSimpleMesh* %58, i64 %55
  tail call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %59) #13
  %60 = add nuw nsw i64 %55, 1
  %61 = load %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"*, %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"** %37, align 8
  %62 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw", %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"* %61, i64 %42, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = sext i32 %63 to i64
  %65 = icmp slt i64 %60, %64
  br i1 %65, label %54, label %46

66:                                               ; preds = %48, %27, %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_114AAConvexPathOp18fixedFunctionFlagsEv(%"class.(anonymous namespace)::AAConvexPathOp"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelperWithStencil* %2) #13
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_114AAConvexPathOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%"class.(anonymous namespace)::AAConvexPathOp"*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %7 = bitcast i8* %6 to %"struct.(anonymous namespace)::AAConvexPathOp::PathData"**
  %8 = load %"struct.(anonymous namespace)::AAConvexPathOp::PathData"*, %"struct.(anonymous namespace)::AAConvexPathOp::PathData"** %7, align 8
  %9 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = lshr i64 %11, 1
  %13 = and i64 %12, 2147483647
  %14 = add nsw i64 %13, -1
  %15 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %8, i64 %14, i32 2
  %16 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 3
  %17 = tail call i32 @_ZN35GrSimpleMeshDrawOpHelperWithStencil18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelperWithStencil* %5, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, i32 %3, i32 1, %struct.SkRGBA4f* %15, i8* %16) #13
  ret i32 %17
}

declare void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.GrProgramInfo* @_ZN12_GLOBAL__N_114AAConvexPathOp11programInfoEv(%"class.(anonymous namespace)::AAConvexPathOp"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 5
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114AAConvexPathOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::AAConvexPathOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 align 2 {
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca %class.anon, align 8
  %12 = alloca %class.SkMatrix, align 16
  %13 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #13
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 1
  %15 = bitcast %class.SkMatrix* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %15, align 16
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %17, align 16
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %18, align 16
  store i32 16, i32* %14, align 4
  %19 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 1, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = and i8 %21, 4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %50, label %24

24:                                               ; preds = %8
  %25 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %26 = bitcast i8* %25 to %"struct.(anonymous namespace)::AAConvexPathOp::PathData"**
  %27 = load %"struct.(anonymous namespace)::AAConvexPathOp::PathData"*, %"struct.(anonymous namespace)::AAConvexPathOp::PathData"** %26, align 8
  %28 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %30, 1
  %32 = and i64 %31, 2147483647
  %33 = add nsw i64 %32, -1
  %34 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %27, i64 %33, i32 0
  %35 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %27, i64 %33, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = trunc i32 %36 to i8
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %24
  %40 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %34) #13
  %41 = zext i8 %40 to i32
  store i32 %41, i32* %35, align 4
  br label %42

42:                                               ; preds = %39, %24
  %43 = phi i32 [ %41, %39 ], [ %36, %24 ]
  %44 = and i32 %43, 15
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %12) #13
  br label %50

48:                                               ; preds = %42
  %49 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %34, %class.SkMatrix* nonnull %12) #13
  br i1 %49, label %50, label %64

50:                                               ; preds = %8, %46, %48
  %51 = load i8, i8* %20, align 1
  %52 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 3
  %53 = load i8, i8* %52, align 8, !range !2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10)
  %54 = lshr i8 %51, 2
  %55 = and i8 %54, 1
  store i8 %55, i8* %9, align 1
  store i8 %53, i8* %10, align 1
  %56 = bitcast %class.anon* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #13
  %57 = getelementptr inbounds %class.anon, %class.anon* %11, i64 0, i32 0
  store %class.SkMatrix* %12, %class.SkMatrix** %57, align 8
  %58 = getelementptr inbounds %class.anon, %class.anon* %11, i64 0, i32 1
  store i8* %9, i8** %58, align 8
  %59 = getelementptr inbounds %class.anon, %class.anon* %11, i64 0, i32 2
  store i8* %10, i8** %59, align 8
  %60 = call %class.QuadEdgeEffect* @_ZN12SkArenaAlloc4makeIZN14QuadEdgeEffect4MakeEPS_RK8SkMatrixbbEUlPvE_EEDTclfp_LDnEEEOT_(%class.SkArenaAlloc* %2, %class.anon* nonnull dereferenceable(24) %11) #13
  %61 = bitcast %class.QuadEdgeEffect* %60 to %class.GrGeometryProcessor*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10)
  %62 = call %class.GrProgramInfo* @_ZN35GrSimpleMeshDrawOpHelperWithStencil28createProgramInfoWithStencilEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelperWithStencil* %19, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* %61, i8 zeroext 0, i32 %6, i32 %7) #13
  %63 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 5
  store %class.GrProgramInfo* %62, %class.GrProgramInfo** %63, align 8
  br label %64

64:                                               ; preds = %48, %50
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114AAConvexPathOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::AAConvexPathOp"*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #8 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca [3 x %struct.SkPoint], align 16
  %6 = alloca [6 x %struct.PosAndUV], align 16
  %7 = alloca <2 x float>, align 8
  %8 = alloca %"class.GrPathUtils::QuadUVMatrix", align 4
  %9 = alloca %class.SkSTArray.296, align 8
  %10 = alloca %struct.SkConic, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.SkPath::Iter", align 8
  %14 = alloca %struct.DegenerateTestData, align 4
  %15 = alloca [4 x %struct.SkPoint], align 16
  %16 = alloca %class.SkAutoConicToQuads, align 8
  %17 = alloca %class.SkTLazy, align 8
  %18 = alloca %class.SkSTArray.284, align 8
  %19 = alloca i64, align 8
  %20 = bitcast i64* %19 to %struct.SkPoint*
  %21 = alloca %class.sk_sp.237, align 8
  %22 = alloca i32, align 4
  %23 = alloca %class.sk_sp.237, align 8
  %24 = alloca i32, align 4
  %25 = alloca %class.SkSTArray.287, align 8
  %26 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %27 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %29, 1
  %31 = trunc i64 %30 to i32
  %32 = and i32 %31, 2147483647
  %33 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 5
  %34 = load %class.GrProgramInfo*, %class.GrProgramInfo** %33, align 8
  %35 = icmp eq %class.GrProgramInfo* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 0
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %37, %"class.GrMeshDrawOp::Target"* %1) #13
  %38 = load %class.GrProgramInfo*, %class.GrProgramInfo** %33, align 8
  %39 = icmp eq %class.GrProgramInfo* %38, null
  br i1 %39, label %1873, label %40

40:                                               ; preds = %36, %2
  %41 = phi %class.GrProgramInfo* [ %38, %36 ], [ %34, %2 ]
  %42 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %41, i64 0, i32 7
  %43 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %42, align 8
  %44 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %43, i64 0, i32 3, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 4
  %47 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 4, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp slt i32 %48, %32
  br i1 %49, label %50, label %62

50:                                               ; preds = %40
  %51 = add nuw i32 %32, 4
  %52 = lshr i32 %51, 2
  %53 = add nuw i32 %52, %51
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %56, label %55

55:                                               ; preds = %50
  tail call fastcc void @_ZZN9SkTDArrayIN12_GLOBAL__N_114AAConvexPathOp8MeshDrawEE22resizeStorageToAtLeastEiENKUlvE_clEv() #13
  unreachable

56:                                               ; preds = %50
  store i32 %53, i32* %47, align 8
  %57 = bitcast %class.SkTDArray.236* %46 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = sext i32 %53 to i64
  %60 = shl nsw i64 %59, 4
  %61 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %58, i64 %60) #13
  store i8* %61, i8** %57, align 8
  br label %62

62:                                               ; preds = %40, %56
  %63 = icmp eq i32 %32, 0
  br i1 %63, label %1873, label %64

64:                                               ; preds = %62
  %65 = bitcast i8* %26 to %"struct.(anonymous namespace)::AAConvexPathOp::PathData"**
  %66 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %17, i64 0, i32 0, i64 0
  %67 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %17, i64 0, i32 0, i64 14
  %68 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %17, i64 0, i32 1
  %69 = bitcast %class.SkTLazy* %17 to %class.SkPath*
  %70 = bitcast %class.SkPath** %68 to %class.SkTLazy**
  %71 = getelementptr inbounds %class.SkSTArray.284, %class.SkSTArray.284* %18, i64 0, i32 0, i32 0, i64 0
  %72 = getelementptr inbounds %class.SkSTArray.284, %class.SkSTArray.284* %18, i64 0, i32 0, i32 0, i64 488
  %73 = getelementptr inbounds %class.SkSTArray.284, %class.SkSTArray.284* %18, i64 0, i32 0, i32 0, i64 496
  %74 = bitcast i8* %73 to i64*
  %75 = bitcast i8* %72 to i8**
  %76 = bitcast i64* %19 to i8*
  %77 = bitcast i64* %19 to float*
  %78 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %20, i64 0, i32 1
  %79 = bitcast i8* %72 to %class.SkTArray.286*
  %80 = bitcast %"class.SkPath::Iter"* %13 to i8*
  %81 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %13, i64 0, i32 3
  %82 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %13, i64 0, i32 4, i32 0
  %83 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %13, i64 0, i32 6
  %84 = bitcast float* %82 to i8*
  %85 = bitcast i8* %83 to i64*
  %86 = bitcast %struct.DegenerateTestData* %14 to i8*
  %87 = getelementptr inbounds %struct.DegenerateTestData, %struct.DegenerateTestData* %14, i64 0, i32 0
  %88 = getelementptr inbounds %struct.DegenerateTestData, %struct.DegenerateTestData* %14, i64 0, i32 1, i32 0
  %89 = bitcast float* %88 to i8*
  %90 = bitcast [4 x %struct.SkPoint]* %15 to i8*
  %91 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 0
  %92 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 0, i32 0
  %93 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 0, i32 1
  %94 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 1
  %95 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 1, i32 1
  %96 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 2
  %97 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %96, i64 0, i32 0
  %98 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 2, i32 1
  %99 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 3
  %100 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 3, i32 1
  %101 = getelementptr inbounds %class.SkSTArray.296, %class.SkSTArray.296* %9, i64 0, i32 0, i32 0, i64 0
  %102 = getelementptr inbounds %class.SkSTArray.296, %class.SkSTArray.296* %9, i64 0, i32 0, i32 0, i64 120
  %103 = getelementptr inbounds %class.SkSTArray.296, %class.SkSTArray.296* %9, i64 0, i32 0, i32 0, i64 128
  %104 = bitcast i8* %103 to i64*
  %105 = bitcast i8* %102 to i8**
  %106 = bitcast i8* %102 to %class.SkTArray.298*
  %107 = bitcast i8* %102 to %struct.SkPoint**
  %108 = bitcast i8* %72 to %struct.Segment**
  %109 = bitcast float** %81 to i32**
  %110 = bitcast %class.SkAutoConicToQuads* %16 to i8*
  %111 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %16, i64 0, i32 0, i32 1
  %112 = bitcast %class.SkAutoConicToQuads* %16 to %union.anon.295**
  %113 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %16, i64 0, i32 1
  %114 = bitcast %struct.SkConic* %10 to i8*
  %115 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %10, i64 0, i32 1
  %116 = bitcast float* %115 to i32*
  %117 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %16, i64 0, i32 0, i32 0
  %118 = bitcast %union.anon.295* %111 to %struct.SkPoint*
  %119 = bitcast %class.SkAutoConicToQuads* %16 to i8**
  %120 = bitcast %struct.SkPoint* %94 to i64*
  %121 = bitcast %struct.SkPoint* %96 to i64*
  %122 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 1, i32 0
  %123 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 2, i32 0
  %124 = bitcast %union.anon.295* %111 to i8*
  %125 = bitcast i64* %11 to %struct.SkPoint*
  %126 = bitcast i64* %12 to %struct.SkPoint*
  %127 = bitcast i64* %11 to i8*
  %128 = bitcast i64* %11 to float*
  %129 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %125, i64 0, i32 1
  %130 = bitcast i64* %12 to i8*
  %131 = bitcast i64* %12 to float*
  %132 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %126, i64 0, i32 1
  %133 = bitcast i64* %19 to <2 x float>*
  %134 = bitcast %class.sk_sp.237* %21 to i8*
  %135 = getelementptr inbounds %class.sk_sp.237, %class.sk_sp.237* %21, i64 0, i32 0
  %136 = bitcast i32* %22 to i8*
  %137 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.237*, i32*)***
  %138 = bitcast %class.sk_sp.237* %23 to i8*
  %139 = getelementptr inbounds %class.sk_sp.237, %class.sk_sp.237* %23, i64 0, i32 0
  %140 = bitcast i32* %24 to i8*
  %141 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.237*, i32*)***
  %142 = getelementptr inbounds %class.SkSTArray.287, %class.SkSTArray.287* %25, i64 0, i32 0, i32 0, i64 0
  %143 = getelementptr inbounds %class.SkSTArray.287, %class.SkSTArray.287* %25, i64 0, i32 0, i32 0, i64 32
  %144 = getelementptr inbounds %class.SkSTArray.287, %class.SkSTArray.287* %25, i64 0, i32 0, i32 0, i64 40
  %145 = bitcast i8* %144 to i64*
  %146 = bitcast i8* %143 to i8**
  %147 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 3
  %148 = bitcast i8* %143 to %class.SkTArray.289*
  %149 = bitcast i64* %3 to %struct.SkPoint*
  %150 = bitcast i64* %4 to %struct.SkPoint*
  %151 = bitcast <2 x float>* %7 to %struct.SkPoint*
  %152 = bitcast i8* %143 to %struct.Draw**
  %153 = bitcast [3 x %struct.SkPoint]* %5 to i8*
  %154 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %5, i64 0, i64 0
  %155 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %5, i64 0, i64 0, i32 0
  %156 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %5, i64 0, i64 0, i32 1
  %157 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %5, i64 0, i64 1
  %158 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %5, i64 0, i64 2
  %159 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %158, i64 0, i32 0
  %160 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %5, i64 0, i64 2, i32 1
  %161 = bitcast [3 x %struct.SkPoint]* %5 to i64*
  %162 = bitcast %struct.SkPoint* %157 to i64*
  %163 = bitcast %struct.SkPoint* %158 to i64*
  %164 = bitcast [6 x %struct.PosAndUV]* %6 to i8*
  %165 = bitcast [6 x %struct.PosAndUV]* %6 to i64*
  %166 = getelementptr inbounds [6 x %struct.PosAndUV], [6 x %struct.PosAndUV]* %6, i64 0, i64 1
  %167 = bitcast %struct.PosAndUV* %166 to i64*
  %168 = getelementptr inbounds [6 x %struct.PosAndUV], [6 x %struct.PosAndUV]* %6, i64 0, i64 2
  %169 = bitcast %struct.PosAndUV* %168 to i64*
  %170 = getelementptr inbounds [6 x %struct.PosAndUV], [6 x %struct.PosAndUV]* %6, i64 0, i64 3
  %171 = bitcast %struct.PosAndUV* %170 to <2 x float>*
  %172 = getelementptr inbounds [6 x %struct.PosAndUV], [6 x %struct.PosAndUV]* %6, i64 0, i64 4
  %173 = bitcast %struct.PosAndUV* %172 to <2 x float>*
  %174 = bitcast <2 x float>* %7 to i8*
  %175 = getelementptr inbounds <2 x float>, <2 x float>* %7, i64 0, i64 0
  %176 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %151, i64 0, i32 1
  %177 = getelementptr inbounds [6 x %struct.PosAndUV], [6 x %struct.PosAndUV]* %6, i64 0, i64 5
  %178 = bitcast %struct.PosAndUV* %177 to <2 x float>*
  %179 = bitcast %"class.GrPathUtils::QuadUVMatrix"* %8 to i8*
  %180 = getelementptr inbounds %"class.GrPathUtils::QuadUVMatrix", %"class.GrPathUtils::QuadUVMatrix"* %8, i64 0, i32 0, i64 0
  %181 = getelementptr inbounds %"class.GrPathUtils::QuadUVMatrix", %"class.GrPathUtils::QuadUVMatrix"* %8, i64 0, i32 0, i64 1
  %182 = getelementptr inbounds %"class.GrPathUtils::QuadUVMatrix", %"class.GrPathUtils::QuadUVMatrix"* %8, i64 0, i32 0, i64 2
  %183 = getelementptr inbounds %"class.GrPathUtils::QuadUVMatrix", %"class.GrPathUtils::QuadUVMatrix"* %8, i64 0, i32 0, i64 3
  %184 = getelementptr inbounds %"class.GrPathUtils::QuadUVMatrix", %"class.GrPathUtils::QuadUVMatrix"* %8, i64 0, i32 0, i64 4
  %185 = getelementptr inbounds %"class.GrPathUtils::QuadUVMatrix", %"class.GrPathUtils::QuadUVMatrix"* %8, i64 0, i32 0, i64 5
  %186 = ptrtoint [6 x %struct.PosAndUV]* %6 to i64
  %187 = or i64 %186, 8
  %188 = getelementptr inbounds [6 x %struct.PosAndUV], [6 x %struct.PosAndUV]* %6, i64 0, i64 0, i32 1
  %189 = bitcast %struct.SkPoint* %188 to i64*
  %190 = getelementptr inbounds [6 x %struct.PosAndUV], [6 x %struct.PosAndUV]* %6, i64 0, i64 1, i32 1
  %191 = bitcast %struct.SkPoint* %190 to i64*
  %192 = getelementptr inbounds [6 x %struct.PosAndUV], [6 x %struct.PosAndUV]* %6, i64 0, i64 2, i32 1
  %193 = bitcast %struct.SkPoint* %192 to i64*
  %194 = getelementptr inbounds [6 x %struct.PosAndUV], [6 x %struct.PosAndUV]* %6, i64 0, i64 3, i32 1
  %195 = bitcast %struct.PosAndUV* %170 to i64*
  %196 = bitcast %struct.SkPoint* %194 to i64*
  %197 = getelementptr inbounds [6 x %struct.PosAndUV], [6 x %struct.PosAndUV]* %6, i64 0, i64 4, i32 1
  %198 = bitcast %struct.PosAndUV* %172 to i64*
  %199 = bitcast %struct.SkPoint* %197 to i64*
  %200 = getelementptr inbounds [6 x %struct.PosAndUV], [6 x %struct.PosAndUV]* %6, i64 0, i64 5, i32 1
  %201 = bitcast %struct.PosAndUV* %177 to i64*
  %202 = bitcast %struct.SkPoint* %200 to i64*
  %203 = bitcast i64* %3 to i8*
  %204 = bitcast i64* %3 to float*
  %205 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %149, i64 0, i32 1
  %206 = bitcast i64* %4 to i8*
  %207 = bitcast i64* %4 to float*
  %208 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %150, i64 0, i32 1
  %209 = inttoptr i64 %187 to %struct.SkPoint*
  %210 = getelementptr inbounds [6 x %struct.PosAndUV], [6 x %struct.PosAndUV]* %6, i64 0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds [6 x %struct.PosAndUV], [6 x %struct.PosAndUV]* %6, i64 0, i64 0, i32 0, i32 1
  %212 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %209, i64 0, i32 0
  %213 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %209, i64 0, i32 1
  %214 = add i64 %186, 16
  %215 = add i64 %187, 16
  %216 = inttoptr i64 %214 to %struct.SkPoint*
  %217 = inttoptr i64 %215 to %struct.SkPoint*
  %218 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %216, i64 0, i32 0
  %219 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %216, i64 0, i32 1
  %220 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %217, i64 0, i32 0
  %221 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %217, i64 0, i32 1
  %222 = add i64 %186, 32
  %223 = add i64 %187, 32
  %224 = inttoptr i64 %222 to %struct.SkPoint*
  %225 = inttoptr i64 %223 to %struct.SkPoint*
  %226 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %224, i64 0, i32 0
  %227 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %224, i64 0, i32 1
  %228 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %225, i64 0, i32 0
  %229 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %225, i64 0, i32 1
  %230 = add i64 %186, 48
  %231 = add i64 %187, 48
  %232 = inttoptr i64 %230 to %struct.SkPoint*
  %233 = inttoptr i64 %231 to %struct.SkPoint*
  %234 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %232, i64 0, i32 0
  %235 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %232, i64 0, i32 1
  %236 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %233, i64 0, i32 0
  %237 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %233, i64 0, i32 1
  %238 = add i64 %186, 64
  %239 = add i64 %187, 64
  %240 = inttoptr i64 %238 to %struct.SkPoint*
  %241 = inttoptr i64 %239 to %struct.SkPoint*
  %242 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %240, i64 0, i32 0
  %243 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %240, i64 0, i32 1
  %244 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %241, i64 0, i32 0
  %245 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %241, i64 0, i32 1
  %246 = add i64 %186, 80
  %247 = add i64 %187, 80
  %248 = inttoptr i64 %246 to %struct.SkPoint*
  %249 = inttoptr i64 %247 to %struct.SkPoint*
  %250 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %248, i64 0, i32 0
  %251 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %248, i64 0, i32 1
  %252 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %249, i64 0, i32 0
  %253 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %249, i64 0, i32 1
  %254 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)***
  %255 = getelementptr inbounds %"class.(anonymous namespace)::AAConvexPathOp", %"class.(anonymous namespace)::AAConvexPathOp"* %0, i64 0, i32 4, i32 2
  %256 = getelementptr inbounds %class.SkTDArray.236, %class.SkTDArray.236* %46, i64 0, i32 0
  %257 = bitcast %class.SkTDArray.236* %46 to i8**
  %258 = zext i32 %32 to i64
  %259 = bitcast [4 x %struct.SkPoint]* %15 to <2 x float>*
  %260 = bitcast float* %95 to <4 x float>*
  %261 = bitcast i64* %11 to <2 x float>*
  %262 = bitcast %struct.SkPoint* %157 to <2 x float>*
  br label %263

263:                                              ; preds = %1870, %64
  %264 = phi i64 [ 0, %64 ], [ %1871, %1870 ]
  %265 = load %"struct.(anonymous namespace)::AAConvexPathOp::PathData"*, %"struct.(anonymous namespace)::AAConvexPathOp::PathData"** %65, align 8
  %266 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %265, i64 %264, i32 0
  %267 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %265, i64 %264, i32 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 16, i1 false)
  store %class.SkPath* null, %class.SkPath** %68, align 8
  %268 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %265, i64 %264, i32 0, i32 1
  %269 = load i32, i32* %268, align 4
  %270 = and i32 %269, 192
  %271 = icmp eq i32 %270, 128
  br i1 %271, label %272, label %275

272:                                              ; preds = %263
  %273 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %266) #13
  %274 = zext i8 %273 to i32
  store i32 %274, i32* %268, align 4
  br label %275

275:                                              ; preds = %263, %272
  %276 = phi i32 [ %274, %272 ], [ %269, %263 ]
  %277 = and i32 %276, 8
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %287, label %279

279:                                              ; preds = %275
  %280 = load %class.SkPath*, %class.SkPath** %68, align 8
  %281 = icmp eq %class.SkPath* %280, null
  br i1 %281, label %283, label %282

282:                                              ; preds = %279
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %280) #13
  store %class.SkPath* null, %class.SkPath** %68, align 8
  br label %283

283:                                              ; preds = %279, %282
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* nonnull %69, %class.SkPath* dereferenceable(16) %267) #13
  store %class.SkTLazy* %17, %class.SkTLazy** %70, align 8
  %284 = load i8, i8* %67, align 2
  %285 = or i8 %284, 4
  store i8 %285, i8* %67, align 2
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* nonnull %69, %class.SkMatrix* dereferenceable(40) %266, %class.SkPath* nonnull %69, i32 1) #13
  %286 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13
  br label %287

287:                                              ; preds = %275, %283
  %288 = phi %class.SkMatrix* [ %286, %283 ], [ %266, %275 ]
  %289 = phi %class.SkPath* [ %69, %283 ], [ %267, %275 ]
  call void @llvm.lifetime.start.p0i8(i64 504, i8* nonnull %71) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 488, i1 false)
  store i8* %71, i8** %75, align 8
  store i64 94489280512, i64* %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #13
  store float 0xFFFFFFFFE0000000, float* %77, align 8
  store float 0xFFFFFFFFE0000000, float* %78, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %80) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 32, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 -1, i64 16, i1 false) #13
  store i64 -6148914691236517206, i64* %85, align 8
  call void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"* nonnull %13, %class.SkPath* dereferenceable(16) %289, i1 zeroext true) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #13
  call void @llvm.memset.p0i8.i64(i8* align 4 %89, i8 -1, i64 20, i1 false) #13
  store i32 0, i32* %87, align 4
  %290 = call i32 @_ZN10SkPathPriv21ComputeFirstDirectionERK6SkPath(%class.SkPath* dereferenceable(16) %289) #13
  %291 = icmp eq i32 %290, 2
  br i1 %291, label %292, label %293

292:                                              ; preds = %287
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %80) #13
  br label %1858

293:                                              ; preds = %287
  %294 = bitcast %class.SkMatrix* %288 to <2 x float>*
  %295 = load <2 x float>, <2 x float>* %294, align 4
  %296 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %288, i64 0, i32 0, i64 3
  %297 = bitcast float* %296 to <2 x float>*
  %298 = load <2 x float>, <2 x float>* %297, align 4
  %299 = shufflevector <2 x float> %298, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %300 = fmul <2 x float> %295, %299
  %301 = extractelement <2 x float> %300, i32 0
  %302 = extractelement <2 x float> %300, i32 1
  %303 = fsub float %301, %302
  %304 = fcmp olt float %303, 0.000000e+00
  br i1 %304, label %305, label %309

305:                                              ; preds = %293
  %306 = zext i32 %290 to i64
  %307 = getelementptr inbounds [3 x i32], [3 x i32]* @_ZZN10SkPathPriv22OppositeFirstDirectionE20SkPathFirstDirectionE12gOppositeDir, i64 0, i64 %306
  %308 = load i32, i32* %307, align 4
  br label %309

309:                                              ; preds = %305, %293
  %310 = phi i32 [ %308, %305 ], [ %290, %293 ]
  br label %311

311:                                              ; preds = %878, %309
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %90) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %90, i8 -1, i64 32, i1 false) #13
  %312 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %13, %struct.SkPoint* nonnull %91) #13
  switch i32 %312, label %878 [
    i32 0, label %313
    i32 1, label %314
    i32 2, label %341
    i32 3, label %412
    i32 4, label %531
    i32 6, label %638
  ]

313:                                              ; preds = %311
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %288, %struct.SkPoint* nonnull %91, %struct.SkPoint* nonnull %91, i32 1) #13
  call fastcc void @_ZL22update_degenerate_testP18DegenerateTestDataRK7SkPoint(%struct.DegenerateTestData* nonnull %14, %struct.SkPoint* nonnull dereferenceable(8) %91) #13
  br label %878

314:                                              ; preds = %311
  %315 = load float, float* %92, align 16
  %316 = load float, float* %122, align 8
  %317 = fcmp une float %315, %316
  br i1 %317, label %322, label %318

318:                                              ; preds = %314
  %319 = load float, float* %93, align 4
  %320 = load float, float* %95, align 4
  %321 = fcmp une float %319, %320
  br i1 %321, label %322, label %878

322:                                              ; preds = %318, %314
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %288, %struct.SkPoint* %94, %struct.SkPoint* %94, i32 1) #13
  call fastcc void @_ZL22update_degenerate_testP18DegenerateTestDataRK7SkPoint(%struct.DegenerateTestData* nonnull %14, %struct.SkPoint* dereferenceable(8) %94) #13
  call void @_ZN8SkTArrayI7SegmentLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.286* %79, i32 1, i32 1) #13
  %323 = load %struct.Segment*, %struct.Segment** %108, align 8
  %324 = load i64, i64* %74, align 8
  %325 = add i64 %324, 2
  %326 = and i64 %325, 4294967294
  %327 = and i64 %324, -4294967295
  %328 = or i64 %326, %327
  store i64 %328, i64* %74, align 8
  %329 = lshr i64 %325, 1
  %330 = and i64 %329, 2147483647
  %331 = add nsw i64 %330, -1
  %332 = getelementptr inbounds %struct.Segment, %struct.Segment* %323, i64 %331, i32 0
  store i32 0, i32* %332, align 4
  %333 = load %struct.Segment*, %struct.Segment** %108, align 8
  %334 = load i64, i64* %74, align 8
  %335 = lshr i64 %334, 1
  %336 = and i64 %335, 2147483647
  %337 = add nsw i64 %336, -1
  %338 = getelementptr inbounds %struct.Segment, %struct.Segment* %333, i64 %337, i32 1, i64 0
  %339 = bitcast %struct.SkPoint* %338 to i64*
  %340 = load i64, i64* %120, align 8
  store i64 %340, i64* %339, align 4
  br label %878

341:                                              ; preds = %311
  %342 = load float, float* %92, align 16
  %343 = load float, float* %93, align 4
  %344 = load float, float* %122, align 8
  %345 = fcmp une float %342, %344
  br i1 %345, label %355, label %346

346:                                              ; preds = %341
  %347 = load float, float* %95, align 4
  %348 = fcmp une float %343, %347
  %349 = load float, float* %123, align 16
  %350 = fcmp une float %342, %349
  %351 = or i1 %348, %350
  %352 = load float, float* %98, align 4
  %353 = fcmp une float %343, %352
  %354 = or i1 %351, %353
  br i1 %354, label %355, label %878

355:                                              ; preds = %346, %341
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %288, %struct.SkPoint* nonnull %91, %struct.SkPoint* nonnull %91, i32 3) #13
  call fastcc void @_ZL22update_degenerate_testP18DegenerateTestDataRK7SkPoint(%struct.DegenerateTestData* nonnull %14, %struct.SkPoint* dereferenceable(8) %94) #13
  call fastcc void @_ZL22update_degenerate_testP18DegenerateTestDataRK7SkPoint(%struct.DegenerateTestData* nonnull %14, %struct.SkPoint* dereferenceable(8) %96) #13
  %356 = call float @_ZN11SkPointPriv31DistanceToLineSegmentBetweenSqdERK7SkPointS2_S2_(%struct.SkPoint* dereferenceable(8) %94, %struct.SkPoint* nonnull dereferenceable(8) %91, %struct.SkPoint* dereferenceable(8) %96) #13
  %357 = fcmp olt float %356, 3.906250e-03
  br i1 %357, label %358, label %385

358:                                              ; preds = %355
  %359 = load float, float* %92, align 16
  %360 = load float, float* %97, align 16
  %361 = fcmp une float %359, %360
  br i1 %361, label %366, label %362

362:                                              ; preds = %358
  %363 = load float, float* %93, align 4
  %364 = load float, float* %98, align 4
  %365 = fcmp une float %363, %364
  br i1 %365, label %366, label %878

366:                                              ; preds = %362, %358
  call void @_ZN8SkTArrayI7SegmentLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.286* %79, i32 1, i32 1) #13
  %367 = load %struct.Segment*, %struct.Segment** %108, align 8
  %368 = load i64, i64* %74, align 8
  %369 = add i64 %368, 2
  %370 = and i64 %369, 4294967294
  %371 = and i64 %368, -4294967295
  %372 = or i64 %370, %371
  store i64 %372, i64* %74, align 8
  %373 = lshr i64 %369, 1
  %374 = and i64 %373, 2147483647
  %375 = add nsw i64 %374, -1
  %376 = getelementptr inbounds %struct.Segment, %struct.Segment* %367, i64 %375, i32 0
  store i32 0, i32* %376, align 4
  %377 = load %struct.Segment*, %struct.Segment** %108, align 8
  %378 = load i64, i64* %74, align 8
  %379 = lshr i64 %378, 1
  %380 = and i64 %379, 2147483647
  %381 = add nsw i64 %380, -1
  %382 = getelementptr inbounds %struct.Segment, %struct.Segment* %377, i64 %381, i32 1, i64 0
  %383 = bitcast %struct.SkPoint* %382 to i64*
  %384 = load i64, i64* %121, align 16
  store i64 %384, i64* %383, align 4
  br label %878

385:                                              ; preds = %355
  call void @_ZN8SkTArrayI7SegmentLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.286* %79, i32 1, i32 1) #13
  %386 = load %struct.Segment*, %struct.Segment** %108, align 8
  %387 = load i64, i64* %74, align 8
  %388 = add i64 %387, 2
  %389 = and i64 %388, 4294967294
  %390 = and i64 %387, -4294967295
  %391 = or i64 %389, %390
  store i64 %391, i64* %74, align 8
  %392 = lshr i64 %388, 1
  %393 = and i64 %392, 2147483647
  %394 = add nsw i64 %393, -1
  %395 = getelementptr inbounds %struct.Segment, %struct.Segment* %386, i64 %394, i32 0
  store i32 1, i32* %395, align 4
  %396 = load %struct.Segment*, %struct.Segment** %108, align 8
  %397 = load i64, i64* %74, align 8
  %398 = lshr i64 %397, 1
  %399 = and i64 %398, 2147483647
  %400 = add nsw i64 %399, -1
  %401 = getelementptr inbounds %struct.Segment, %struct.Segment* %396, i64 %400, i32 1, i64 0
  %402 = bitcast %struct.SkPoint* %401 to i64*
  %403 = load i64, i64* %120, align 8
  store i64 %403, i64* %402, align 4
  %404 = load %struct.Segment*, %struct.Segment** %108, align 8
  %405 = load i64, i64* %74, align 8
  %406 = lshr i64 %405, 1
  %407 = and i64 %406, 2147483647
  %408 = add nsw i64 %407, -1
  %409 = getelementptr inbounds %struct.Segment, %struct.Segment* %404, i64 %408, i32 1, i64 1
  %410 = bitcast %struct.SkPoint* %409 to i64*
  %411 = load i64, i64* %121, align 16
  store i64 %411, i64* %410, align 4
  br label %878

412:                                              ; preds = %311
  %413 = load float, float* %92, align 16
  %414 = load float, float* %93, align 4
  %415 = load float, float* %122, align 8
  %416 = fcmp une float %413, %415
  br i1 %416, label %426, label %417

417:                                              ; preds = %412
  %418 = load float, float* %95, align 4
  %419 = fcmp une float %414, %418
  %420 = load float, float* %123, align 16
  %421 = fcmp une float %413, %420
  %422 = or i1 %419, %421
  %423 = load float, float* %98, align 4
  %424 = fcmp une float %414, %423
  %425 = or i1 %422, %424
  br i1 %425, label %426, label %878

426:                                              ; preds = %417, %412
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %288, %struct.SkPoint* nonnull %91, %struct.SkPoint* nonnull %91, i32 3) #13
  %427 = load i32*, i32** %109, align 8
  %428 = load i32, i32* %427, align 4
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %110) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 144, i1 false) #13
  store %union.anon.295* %111, %union.anon.295** %112, align 8
  store i32 0, i32* %113, align 8
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %114) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %114, i8* nonnull align 16 %90, i64 24, i1 false) #13
  store i32 %428, i32* %116, align 4
  %429 = call i32 @_ZNK7SkConic15computeQuadPOW2Ef(%struct.SkConic* nonnull %10, float 2.500000e-01) #13
  %430 = shl i32 1, %429
  store i32 %430, i32* %113, align 8
  %431 = shl nsw i32 %430, 1
  %432 = or i32 %431, 1
  %433 = sext i32 %432 to i64
  %434 = load %struct.SkPoint*, %struct.SkPoint** %117, align 8
  %435 = icmp eq %struct.SkPoint* %434, %118
  br i1 %435, label %438, label %436

436:                                              ; preds = %426
  %437 = bitcast %struct.SkPoint* %434 to i8*
  call void @_Z7sk_freePv(i8* %437) #13
  br label %438

438:                                              ; preds = %436, %426
  %439 = icmp ugt i32 %432, 17
  br i1 %439, label %440, label %443

440:                                              ; preds = %438
  %441 = call i8* @_Z15sk_malloc_throwmm(i64 %433, i64 8) #13
  store i8* %441, i8** %119, align 8
  %442 = bitcast i8* %441 to %struct.SkPoint*
  br label %444

443:                                              ; preds = %438
  store %union.anon.295* %111, %union.anon.295** %112, align 8
  br label %444

444:                                              ; preds = %443, %440
  %445 = phi %struct.SkPoint* [ %118, %443 ], [ %442, %440 ]
  %446 = call i32 @_ZNK7SkConic17chopIntoQuadsPOW2EP7SkPointi(%struct.SkConic* nonnull %10, %struct.SkPoint* %445, i32 %429) #13
  store i32 %446, i32* %113, align 8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %114) #13
  %447 = icmp sgt i32 %446, 0
  br i1 %447, label %454, label %448

448:                                              ; preds = %526, %444
  %449 = load %struct.SkPoint*, %struct.SkPoint** %117, align 8
  %450 = icmp eq %struct.SkPoint* %449, %118
  br i1 %450, label %453, label %451

451:                                              ; preds = %448
  %452 = bitcast %struct.SkPoint* %449 to i8*
  call void @_Z7sk_freePv(i8* %452) #13
  br label %453

453:                                              ; preds = %451, %448
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %110) #13
  br label %878

454:                                              ; preds = %444, %526
  %455 = phi i64 [ %527, %526 ], [ 0, %444 ]
  %456 = shl nuw nsw i64 %455, 1
  %457 = or i64 %456, 1
  %458 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %445, i64 %457
  call fastcc void @_ZL22update_degenerate_testP18DegenerateTestDataRK7SkPoint(%struct.DegenerateTestData* nonnull %14, %struct.SkPoint* dereferenceable(8) %458) #13
  %459 = add nuw nsw i64 %456, 2
  %460 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %445, i64 %459
  call fastcc void @_ZL22update_degenerate_testP18DegenerateTestDataRK7SkPoint(%struct.DegenerateTestData* nonnull %14, %struct.SkPoint* dereferenceable(8) %460) #13
  %461 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %445, i64 %456
  %462 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %461, i64 1
  %463 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %461, i64 2
  %464 = call float @_ZN11SkPointPriv31DistanceToLineSegmentBetweenSqdERK7SkPointS2_S2_(%struct.SkPoint* dereferenceable(8) %462, %struct.SkPoint* dereferenceable(8) %461, %struct.SkPoint* dereferenceable(8) %463) #13
  %465 = fcmp olt float %464, 3.906250e-03
  br i1 %465, label %466, label %495

466:                                              ; preds = %454
  %467 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %461, i64 0, i32 0
  %468 = load float, float* %467, align 4
  %469 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %463, i64 0, i32 0
  %470 = load float, float* %469, align 4
  %471 = fcmp une float %468, %470
  br i1 %471, label %478, label %472

472:                                              ; preds = %466
  %473 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %445, i64 %456, i32 1
  %474 = load float, float* %473, align 4
  %475 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %461, i64 2, i32 1
  %476 = load float, float* %475, align 4
  %477 = fcmp une float %474, %476
  br i1 %477, label %478, label %526

478:                                              ; preds = %472, %466
  call void @_ZN8SkTArrayI7SegmentLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.286* %79, i32 1, i32 1) #13
  %479 = load %struct.Segment*, %struct.Segment** %108, align 8
  %480 = load i64, i64* %74, align 8
  %481 = add i64 %480, 2
  %482 = and i64 %481, 4294967294
  %483 = and i64 %480, -4294967295
  %484 = or i64 %482, %483
  store i64 %484, i64* %74, align 8
  %485 = lshr i64 %481, 1
  %486 = and i64 %485, 2147483647
  %487 = add nsw i64 %486, -1
  %488 = getelementptr inbounds %struct.Segment, %struct.Segment* %479, i64 %487, i32 0
  store i32 0, i32* %488, align 4
  %489 = load %struct.Segment*, %struct.Segment** %108, align 8
  %490 = load i64, i64* %74, align 8
  %491 = lshr i64 %490, 1
  %492 = and i64 %491, 2147483647
  %493 = add nsw i64 %492, -1
  %494 = getelementptr inbounds %struct.Segment, %struct.Segment* %489, i64 %493, i32 1, i64 0
  br label %521

495:                                              ; preds = %454
  call void @_ZN8SkTArrayI7SegmentLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.286* %79, i32 1, i32 1) #13
  %496 = load %struct.Segment*, %struct.Segment** %108, align 8
  %497 = load i64, i64* %74, align 8
  %498 = add i64 %497, 2
  %499 = and i64 %498, 4294967294
  %500 = and i64 %497, -4294967295
  %501 = or i64 %499, %500
  store i64 %501, i64* %74, align 8
  %502 = lshr i64 %498, 1
  %503 = and i64 %502, 2147483647
  %504 = add nsw i64 %503, -1
  %505 = getelementptr inbounds %struct.Segment, %struct.Segment* %496, i64 %504, i32 0
  store i32 1, i32* %505, align 4
  %506 = load %struct.Segment*, %struct.Segment** %108, align 8
  %507 = load i64, i64* %74, align 8
  %508 = lshr i64 %507, 1
  %509 = and i64 %508, 2147483647
  %510 = add nsw i64 %509, -1
  %511 = getelementptr inbounds %struct.Segment, %struct.Segment* %506, i64 %510, i32 1, i64 0
  %512 = bitcast %struct.SkPoint* %462 to i64*
  %513 = bitcast %struct.SkPoint* %511 to i64*
  %514 = load i64, i64* %512, align 4
  store i64 %514, i64* %513, align 4
  %515 = load %struct.Segment*, %struct.Segment** %108, align 8
  %516 = load i64, i64* %74, align 8
  %517 = lshr i64 %516, 1
  %518 = and i64 %517, 2147483647
  %519 = add nsw i64 %518, -1
  %520 = getelementptr inbounds %struct.Segment, %struct.Segment* %515, i64 %519, i32 1, i64 1
  br label %521

521:                                              ; preds = %478, %495
  %522 = phi %struct.SkPoint* [ %520, %495 ], [ %494, %478 ]
  %523 = bitcast %struct.SkPoint* %463 to i64*
  %524 = bitcast %struct.SkPoint* %522 to i64*
  %525 = load i64, i64* %523, align 4
  store i64 %525, i64* %524, align 4
  br label %526

526:                                              ; preds = %521, %472
  %527 = add nuw nsw i64 %455, 1
  %528 = load i32, i32* %113, align 8
  %529 = sext i32 %528 to i64
  %530 = icmp slt i64 %527, %529
  br i1 %530, label %454, label %448

531:                                              ; preds = %311
  %532 = load <2 x float>, <2 x float>* %259, align 16
  %533 = load float, float* %122, align 8
  %534 = extractelement <2 x float> %532, i32 0
  %535 = fcmp une float %534, %533
  br i1 %535, label %550, label %536

536:                                              ; preds = %531
  %537 = shufflevector <2 x float> %532, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %538 = shufflevector <2 x float> %537, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %539 = load <4 x float>, <4 x float>* %260, align 4
  %540 = fcmp une <4 x float> %538, %539
  %541 = load float, float* %100, align 4
  %542 = extractelement <2 x float> %532, i32 1
  %543 = fcmp une float %542, %541
  %544 = shufflevector <4 x i1> %540, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %545 = or <4 x i1> %540, %544
  %546 = shufflevector <4 x i1> %545, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %547 = or <4 x i1> %545, %546
  %548 = extractelement <4 x i1> %547, i32 0
  %549 = or i1 %548, %543
  br i1 %549, label %550, label %878

550:                                              ; preds = %536, %531
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %288, %struct.SkPoint* nonnull %91, %struct.SkPoint* nonnull %91, i32 4) #13
  call fastcc void @_ZL22update_degenerate_testP18DegenerateTestDataRK7SkPoint(%struct.DegenerateTestData* nonnull %14, %struct.SkPoint* dereferenceable(8) %94) #13
  call fastcc void @_ZL22update_degenerate_testP18DegenerateTestDataRK7SkPoint(%struct.DegenerateTestData* nonnull %14, %struct.SkPoint* dereferenceable(8) %96) #13
  call fastcc void @_ZL22update_degenerate_testP18DegenerateTestDataRK7SkPoint(%struct.DegenerateTestData* nonnull %14, %struct.SkPoint* dereferenceable(8) %99) #13
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %101) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 120, i1 false) #13
  store i8* %101, i8** %105, align 8
  store i64 128849018880, i64* %104, align 8
  call void @_ZN11GrPathUtils38convertCubicToQuadsConstrainToTangentsEPK7SkPointf20SkPathFirstDirectionP8SkTArrayIS0_Lb1EE(%struct.SkPoint* nonnull %91, float 1.000000e+00, i32 %310, %class.SkTArray.298* %106) #13
  %551 = load i64, i64* %104, align 8
  %552 = lshr i64 %551, 1
  %553 = trunc i64 %552 to i32
  %554 = and i32 %553, 2147483647
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %560, label %556

556:                                              ; preds = %550
  %557 = zext i32 %554 to i64
  br label %566

558:                                              ; preds = %634
  %559 = load i64, i64* %104, align 8
  br label %560

560:                                              ; preds = %558, %550
  %561 = phi i64 [ %559, %558 ], [ %551, %550 ]
  %562 = and i64 %561, 1
  %563 = icmp eq i64 %562, 0
  br i1 %563, label %637, label %564

564:                                              ; preds = %560
  %565 = load i8*, i8** %105, align 8
  call void @_Z7sk_freePv(i8* %565) #13
  br label %637

566:                                              ; preds = %634, %556
  %567 = phi i64 [ 0, %556 ], [ %635, %634 ]
  %568 = load %struct.SkPoint*, %struct.SkPoint** %107, align 8
  %569 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %568, i64 %567
  %570 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %569, i64 1
  %571 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %569, i64 2
  %572 = call float @_ZN11SkPointPriv31DistanceToLineSegmentBetweenSqdERK7SkPointS2_S2_(%struct.SkPoint* dereferenceable(8) %570, %struct.SkPoint* dereferenceable(8) %569, %struct.SkPoint* dereferenceable(8) %571) #13
  %573 = fcmp olt float %572, 3.906250e-03
  br i1 %573, label %574, label %603

574:                                              ; preds = %566
  %575 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %569, i64 0, i32 0
  %576 = load float, float* %575, align 4
  %577 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %571, i64 0, i32 0
  %578 = load float, float* %577, align 4
  %579 = fcmp une float %576, %578
  br i1 %579, label %586, label %580

580:                                              ; preds = %574
  %581 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %568, i64 %567, i32 1
  %582 = load float, float* %581, align 4
  %583 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %569, i64 2, i32 1
  %584 = load float, float* %583, align 4
  %585 = fcmp une float %582, %584
  br i1 %585, label %586, label %634

586:                                              ; preds = %580, %574
  call void @_ZN8SkTArrayI7SegmentLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.286* %79, i32 1, i32 1) #13
  %587 = load %struct.Segment*, %struct.Segment** %108, align 8
  %588 = load i64, i64* %74, align 8
  %589 = add i64 %588, 2
  %590 = and i64 %589, 4294967294
  %591 = and i64 %588, -4294967295
  %592 = or i64 %590, %591
  store i64 %592, i64* %74, align 8
  %593 = lshr i64 %589, 1
  %594 = and i64 %593, 2147483647
  %595 = add nsw i64 %594, -1
  %596 = getelementptr inbounds %struct.Segment, %struct.Segment* %587, i64 %595, i32 0
  store i32 0, i32* %596, align 4
  %597 = load %struct.Segment*, %struct.Segment** %108, align 8
  %598 = load i64, i64* %74, align 8
  %599 = lshr i64 %598, 1
  %600 = and i64 %599, 2147483647
  %601 = add nsw i64 %600, -1
  %602 = getelementptr inbounds %struct.Segment, %struct.Segment* %597, i64 %601, i32 1, i64 0
  br label %629

603:                                              ; preds = %566
  call void @_ZN8SkTArrayI7SegmentLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.286* %79, i32 1, i32 1) #13
  %604 = load %struct.Segment*, %struct.Segment** %108, align 8
  %605 = load i64, i64* %74, align 8
  %606 = add i64 %605, 2
  %607 = and i64 %606, 4294967294
  %608 = and i64 %605, -4294967295
  %609 = or i64 %607, %608
  store i64 %609, i64* %74, align 8
  %610 = lshr i64 %606, 1
  %611 = and i64 %610, 2147483647
  %612 = add nsw i64 %611, -1
  %613 = getelementptr inbounds %struct.Segment, %struct.Segment* %604, i64 %612, i32 0
  store i32 1, i32* %613, align 4
  %614 = load %struct.Segment*, %struct.Segment** %108, align 8
  %615 = load i64, i64* %74, align 8
  %616 = lshr i64 %615, 1
  %617 = and i64 %616, 2147483647
  %618 = add nsw i64 %617, -1
  %619 = getelementptr inbounds %struct.Segment, %struct.Segment* %614, i64 %618, i32 1, i64 0
  %620 = bitcast %struct.SkPoint* %570 to i64*
  %621 = bitcast %struct.SkPoint* %619 to i64*
  %622 = load i64, i64* %620, align 4
  store i64 %622, i64* %621, align 4
  %623 = load %struct.Segment*, %struct.Segment** %108, align 8
  %624 = load i64, i64* %74, align 8
  %625 = lshr i64 %624, 1
  %626 = and i64 %625, 2147483647
  %627 = add nsw i64 %626, -1
  %628 = getelementptr inbounds %struct.Segment, %struct.Segment* %623, i64 %627, i32 1, i64 1
  br label %629

629:                                              ; preds = %586, %603
  %630 = phi %struct.SkPoint* [ %628, %603 ], [ %602, %586 ]
  %631 = bitcast %struct.SkPoint* %571 to i64*
  %632 = bitcast %struct.SkPoint* %630 to i64*
  %633 = load i64, i64* %631, align 4
  store i64 %633, i64* %632, align 4
  br label %634

634:                                              ; preds = %629, %580
  %635 = add nuw nsw i64 %567, 3
  %636 = icmp ult i64 %635, %557
  br i1 %636, label %566, label %558

637:                                              ; preds = %564, %560
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %101) #13
  br label %878

638:                                              ; preds = %311
  %639 = load i32, i32* %87, align 4
  %640 = icmp eq i32 %639, 3
  br i1 %640, label %641, label %879

641:                                              ; preds = %638
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #13
  store i64 0, i64* %11, align 8
  %642 = load i64, i64* %74, align 8
  %643 = lshr i64 %642, 1
  %644 = trunc i64 %643 to i32
  %645 = and i32 %644, 2147483647
  %646 = icmp ugt i32 %645, 2
  br i1 %646, label %647, label %695

647:                                              ; preds = %641
  %648 = load %struct.Segment*, %struct.Segment** %108, align 8
  %649 = getelementptr inbounds %struct.Segment, %struct.Segment* %648, i64 0, i32 0
  %650 = load i32, i32* %649, align 4
  %651 = zext i32 %650 to i64
  %652 = getelementptr inbounds %struct.Segment, %struct.Segment* %648, i64 0, i32 1, i64 %651, i32 0
  %653 = bitcast float* %652 to <2 x float>*
  %654 = load <2 x float>, <2 x float>* %653, align 4
  %655 = getelementptr inbounds %struct.Segment, %struct.Segment* %648, i64 1, i32 0
  %656 = load i32, i32* %655, align 4
  %657 = zext i32 %656 to i64
  %658 = add nsw i32 %645, -1
  %659 = getelementptr inbounds %struct.Segment, %struct.Segment* %648, i64 1, i32 1, i64 %657, i32 0
  %660 = bitcast float* %659 to <2 x float>*
  %661 = load <2 x float>, <2 x float>* %660, align 4
  %662 = fsub <2 x float> %661, %654
  %663 = zext i32 %658 to i64
  br label %664

664:                                              ; preds = %664, %647
  %665 = phi float [ 0.000000e+00, %647 ], [ %693, %664 ]
  %666 = phi float [ 0.000000e+00, %647 ], [ %689, %664 ]
  %667 = phi i64 [ 1, %647 ], [ %671, %664 ]
  %668 = phi float [ 0.000000e+00, %647 ], [ %685, %664 ]
  %669 = phi <2 x float> [ %662, %647 ], [ %678, %664 ]
  %670 = shufflevector <2 x float> %669, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %671 = add nuw nsw i64 %667, 1
  %672 = getelementptr inbounds %struct.Segment, %struct.Segment* %648, i64 %671, i32 0
  %673 = load i32, i32* %672, align 4
  %674 = zext i32 %673 to i64
  %675 = getelementptr inbounds %struct.Segment, %struct.Segment* %648, i64 %671, i32 1, i64 %674, i32 0
  %676 = bitcast float* %675 to <2 x float>*
  %677 = load <2 x float>, <2 x float>* %676, align 4
  %678 = fsub <2 x float> %677, %654
  %679 = extractelement <2 x float> %678, i32 0
  %680 = extractelement <2 x float> %678, i32 1
  %681 = fmul <2 x float> %670, %678
  %682 = extractelement <2 x float> %681, i32 0
  %683 = extractelement <2 x float> %681, i32 1
  %684 = fsub float %683, %682
  %685 = fadd float %668, %684
  %686 = extractelement <2 x float> %669, i32 0
  %687 = fadd float %686, %679
  %688 = fmul float %687, %684
  %689 = fadd float %666, %688
  store float %689, float* %128, align 8
  %690 = extractelement <2 x float> %669, i32 1
  %691 = fadd float %690, %680
  %692 = fmul float %691, %684
  %693 = fadd float %665, %692
  store float %693, float* %129, align 4
  %694 = icmp eq i64 %671, %663
  br i1 %694, label %695, label %664

695:                                              ; preds = %664, %641
  %696 = phi float [ 0.000000e+00, %641 ], [ %685, %664 ]
  %697 = phi <2 x float> [ zeroinitializer, %641 ], [ %654, %664 ]
  %698 = call float @llvm.fabs.f32(float %696) #13
  %699 = fcmp ugt float %698, 0x3F30000000000000
  br i1 %699, label %757, label %700

700:                                              ; preds = %695
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #13
  store float 0.000000e+00, float* %131, align 8
  store float 0.000000e+00, float* %132, align 4
  %701 = icmp eq i32 %645, 0
  br i1 %701, label %724, label %702

702:                                              ; preds = %700
  %703 = zext i32 %645 to i64
  %704 = load %struct.Segment*, %struct.Segment** %108, align 8
  %705 = and i64 %703, 1
  %706 = icmp eq i32 %645, 1
  br i1 %706, label %709, label %707

707:                                              ; preds = %702
  %708 = sub nsw i64 %703, %705
  br label %730

709:                                              ; preds = %730, %702
  %710 = phi float [ 0.000000e+00, %702 ], [ %753, %730 ]
  %711 = phi float [ 0.000000e+00, %702 ], [ %750, %730 ]
  %712 = phi i64 [ 0, %702 ], [ %754, %730 ]
  %713 = icmp eq i64 %705, 0
  br i1 %713, label %724, label %714

714:                                              ; preds = %709
  %715 = getelementptr inbounds %struct.Segment, %struct.Segment* %704, i64 %712, i32 0
  %716 = load i32, i32* %715, align 4
  %717 = zext i32 %716 to i64
  %718 = getelementptr inbounds %struct.Segment, %struct.Segment* %704, i64 %712, i32 1, i64 %717, i32 0
  %719 = load float, float* %718, align 4
  %720 = fadd float %711, %719
  store float %720, float* %131, align 8
  %721 = getelementptr inbounds %struct.Segment, %struct.Segment* %704, i64 %712, i32 1, i64 %717, i32 1
  %722 = load float, float* %721, align 4
  %723 = fadd float %710, %722
  store float %723, float* %132, align 4
  br label %724

724:                                              ; preds = %714, %709, %700
  %725 = sitofp i32 %645 to float
  %726 = fdiv float 1.000000e+00, %725
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %126, float %726, %struct.SkPoint* nonnull %126) #13
  %727 = load i64, i64* %12, align 8
  store i64 %727, i64* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #13
  %728 = lshr i64 %727, 32
  %729 = trunc i64 %728 to i32
  br label %765

730:                                              ; preds = %730, %707
  %731 = phi float [ 0.000000e+00, %707 ], [ %753, %730 ]
  %732 = phi float [ 0.000000e+00, %707 ], [ %750, %730 ]
  %733 = phi i64 [ 0, %707 ], [ %754, %730 ]
  %734 = phi i64 [ %708, %707 ], [ %755, %730 ]
  %735 = getelementptr inbounds %struct.Segment, %struct.Segment* %704, i64 %733, i32 0
  %736 = load i32, i32* %735, align 4
  %737 = zext i32 %736 to i64
  %738 = getelementptr inbounds %struct.Segment, %struct.Segment* %704, i64 %733, i32 1, i64 %737, i32 0
  %739 = load float, float* %738, align 4
  %740 = fadd float %732, %739
  store float %740, float* %131, align 8
  %741 = getelementptr inbounds %struct.Segment, %struct.Segment* %704, i64 %733, i32 1, i64 %737, i32 1
  %742 = load float, float* %741, align 4
  %743 = fadd float %731, %742
  store float %743, float* %132, align 4
  %744 = or i64 %733, 1
  %745 = getelementptr inbounds %struct.Segment, %struct.Segment* %704, i64 %744, i32 0
  %746 = load i32, i32* %745, align 4
  %747 = zext i32 %746 to i64
  %748 = getelementptr inbounds %struct.Segment, %struct.Segment* %704, i64 %744, i32 1, i64 %747, i32 0
  %749 = load float, float* %748, align 4
  %750 = fadd float %740, %749
  store float %750, float* %131, align 8
  %751 = getelementptr inbounds %struct.Segment, %struct.Segment* %704, i64 %744, i32 1, i64 %747, i32 1
  %752 = load float, float* %751, align 4
  %753 = fadd float %743, %752
  store float %753, float* %132, align 4
  %754 = add nuw nsw i64 %733, 2
  %755 = add i64 %734, -2
  %756 = icmp eq i64 %755, 0
  br i1 %756, label %709, label %730

757:                                              ; preds = %695
  %758 = fmul float %696, 3.000000e+00
  %759 = fdiv float 1.000000e+00, %758
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %125, float %759, %struct.SkPoint* nonnull %125) #13
  %760 = load <2 x float>, <2 x float>* %261, align 8
  %761 = fadd <2 x float> %697, %760
  store <2 x float> %761, <2 x float>* %133, align 8
  %762 = bitcast <2 x float> %761 to i64
  %763 = bitcast <2 x float> %761 to <2 x i32>
  %764 = extractelement <2 x i32> %763, i32 1
  br label %765

765:                                              ; preds = %757, %724
  %766 = phi i32 [ %764, %757 ], [ %729, %724 ]
  %767 = phi i64 [ %762, %757 ], [ %727, %724 ]
  %768 = trunc i64 %767 to i32
  %769 = bitcast i32 %768 to float
  %770 = bitcast i32 %766 to float
  %771 = fcmp uno float %769, %770
  br i1 %771, label %772, label %773

772:                                              ; preds = %765
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #13
  br label %879

773:                                              ; preds = %765
  %774 = fmul float %769, 0.000000e+00
  %775 = fmul float %774, %770
  %776 = fcmp ord float %775, 0.000000e+00
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #13
  br i1 %776, label %777, label %879

777:                                              ; preds = %773
  %778 = load i64, i64* %74, align 8
  %779 = lshr i64 %778, 1
  %780 = trunc i64 %779 to i32
  %781 = and i32 %780, 2147483647
  %782 = icmp eq i32 %310, 1
  %783 = icmp eq i32 %781, 0
  br i1 %783, label %853, label %784

784:                                              ; preds = %777
  %785 = zext i32 %781 to i64
  br label %789

786:                                              ; preds = %809
  %787 = add nsw i32 %781, -1
  %788 = zext i32 %787 to i64
  br label %859

789:                                              ; preds = %809, %784
  %790 = phi i64 [ 0, %784 ], [ %794, %809 ]
  %791 = phi i64 [ 0, %784 ], [ %815, %809 ]
  %792 = phi i64 [ 0, %784 ], [ %813, %809 ]
  %793 = load %struct.Segment*, %struct.Segment** %108, align 8
  %794 = add nuw nsw i64 %790, 1
  %795 = icmp eq i64 %794, %785
  %796 = select i1 %795, i64 0, i64 %794
  %797 = getelementptr inbounds %struct.Segment, %struct.Segment* %793, i64 %796, i32 0
  %798 = load i32, i32* %797, align 4
  %799 = icmp slt i32 %798, 0
  br i1 %799, label %809, label %800

800:                                              ; preds = %789
  %801 = getelementptr inbounds %struct.Segment, %struct.Segment* %793, i64 %790, i32 0
  %802 = load i32, i32* %801, align 4
  %803 = zext i32 %802 to i64
  %804 = getelementptr inbounds %struct.Segment, %struct.Segment* %793, i64 %790, i32 1, i64 %803
  %805 = add nuw i32 %798, 1
  %806 = zext i32 %805 to i64
  br label %816

807:                                              ; preds = %842
  %808 = load i32, i32* %797, align 4
  br label %809

809:                                              ; preds = %807, %789
  %810 = phi i32 [ %808, %807 ], [ %798, %789 ]
  %811 = icmp eq i32 %810, 0
  %812 = select i1 %811, i64 9, i64 12
  %813 = add nuw nsw i64 %812, %792
  %814 = select i1 %811, i64 5, i64 6
  %815 = add nuw nsw i64 %814, %791
  br i1 %795, label %786, label %789

816:                                              ; preds = %842, %800
  %817 = phi i64 [ 0, %800 ], [ %844, %842 ]
  %818 = phi %struct.SkPoint* [ %804, %800 ], [ %819, %842 ]
  %819 = getelementptr inbounds %struct.Segment, %struct.Segment* %793, i64 %796, i32 1, i64 %817
  %820 = bitcast %struct.SkPoint* %819 to <2 x float>*
  %821 = load <2 x float>, <2 x float>* %820, align 4
  %822 = bitcast %struct.SkPoint* %818 to <2 x float>*
  %823 = load <2 x float>, <2 x float>* %822, align 4
  %824 = fsub <2 x float> %821, %823
  %825 = getelementptr inbounds %struct.Segment, %struct.Segment* %793, i64 %796, i32 2, i64 %817
  %826 = bitcast %struct.SkPoint* %825 to <2 x float>*
  store <2 x float> %824, <2 x float>* %826, align 4
  %827 = call zeroext i1 @_ZN7SkPoint9normalizeEv(%struct.SkPoint* %825) #13
  %828 = getelementptr inbounds %struct.Segment, %struct.Segment* %793, i64 %796, i32 2, i64 %817, i32 1
  %829 = load float, float* %828, align 4
  br i1 %782, label %830, label %836

830:                                              ; preds = %816
  %831 = fsub float -0.000000e+00, %829
  %832 = insertelement <2 x float> undef, float %831, i32 0
  %833 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %825, i64 0, i32 0
  %834 = load float, float* %833, align 4
  %835 = insertelement <2 x float> %832, float %834, i32 1
  br label %842

836:                                              ; preds = %816
  %837 = insertelement <2 x float> undef, float %829, i32 0
  %838 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %825, i64 0, i32 0
  %839 = load float, float* %838, align 4
  %840 = fsub float -0.000000e+00, %839
  %841 = insertelement <2 x float> %837, float %840, i32 1
  br label %842

842:                                              ; preds = %836, %830
  %843 = phi <2 x float> [ %835, %830 ], [ %841, %836 ]
  store <2 x float> %843, <2 x float>* %826, align 4
  %844 = add nuw nsw i64 %817, 1
  %845 = icmp eq i64 %844, %806
  br i1 %845, label %807, label %816

846:                                              ; preds = %859
  %847 = shl nuw nsw i64 %788, 2
  %848 = mul nuw nsw i64 %788, 6
  %849 = add nuw nsw i64 %847, 4
  %850 = add nuw i64 %849, %815
  %851 = add nuw nsw i64 %848, 6
  %852 = add nuw i64 %851, %813
  br label %853

853:                                              ; preds = %846, %777
  %854 = phi i64 [ %852, %846 ], [ 0, %777 ]
  %855 = phi i64 [ %850, %846 ], [ 0, %777 ]
  %856 = or i64 %855, %854
  %857 = and i64 %856, 9223372034707292160
  %858 = icmp eq i64 %857, 0
  br i1 %858, label %880, label %879

859:                                              ; preds = %859, %786
  %860 = phi i64 [ 0, %786 ], [ %862, %859 ]
  %861 = load %struct.Segment*, %struct.Segment** %108, align 8
  %862 = add nuw nsw i64 %860, 1
  %863 = icmp eq i64 %862, %785
  %864 = select i1 %863, i64 0, i64 %862
  %865 = getelementptr inbounds %struct.Segment, %struct.Segment* %861, i64 %860, i32 0
  %866 = load i32, i32* %865, align 4
  %867 = zext i32 %866 to i64
  %868 = getelementptr inbounds %struct.Segment, %struct.Segment* %861, i64 %864, i32 2, i64 0, i32 0
  %869 = getelementptr inbounds %struct.Segment, %struct.Segment* %861, i64 %860, i32 2, i64 %867, i32 0
  %870 = bitcast float* %868 to <2 x float>*
  %871 = load <2 x float>, <2 x float>* %870, align 4
  %872 = bitcast float* %869 to <2 x float>*
  %873 = load <2 x float>, <2 x float>* %872, align 4
  %874 = fadd <2 x float> %871, %873
  %875 = getelementptr inbounds %struct.Segment, %struct.Segment* %861, i64 %864, i32 3
  %876 = bitcast %struct.SkPoint* %875 to <2 x float>*
  store <2 x float> %874, <2 x float>* %876, align 4
  %877 = call zeroext i1 @_ZN7SkPoint9normalizeEv(%struct.SkPoint* %875) #13
  br i1 %863, label %846, label %859

878:                                              ; preds = %637, %536, %453, %417, %385, %366, %362, %346, %322, %318, %313, %311
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #13
  br label %311

879:                                              ; preds = %772, %853, %773, %638
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %80) #13
  br label %1858

880:                                              ; preds = %853
  %881 = trunc i64 %855 to i32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %80) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #13
  store %class.GrBuffer* null, %class.GrBuffer** %135, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %136) #13
  store i32 -1431655766, i32* %22, align 4
  %882 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.237*, i32*)**, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.237*, i32*)*** %137, align 8
  %883 = getelementptr inbounds i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.237*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.237*, i32*)** %882, i64 3
  %884 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.237*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.237*, i32*)** %883, align 8
  %885 = call i8* %884(%"class.GrMeshDrawOp::Target"* %1, i64 %45, i32 %881, %class.sk_sp.237* nonnull %21, i32* nonnull %22) #13
  %886 = icmp eq i8* %885, null
  br i1 %886, label %887, label %888

887:                                              ; preds = %880
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.28, i64 0, i64 0), i32 833, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.29, i64 0, i64 0)) #13
  br label %1848

888:                                              ; preds = %880
  %889 = trunc i64 %854 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #13
  store %class.GrBuffer* null, %class.GrBuffer** %139, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %140) #13
  store i32 -1431655766, i32* %24, align 4
  %890 = load i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.237*, i32*)**, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.237*, i32*)*** %141, align 8
  %891 = getelementptr inbounds i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.237*, i32*)*, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.237*, i32*)** %890, i64 4
  %892 = load i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.237*, i32*)*, i16* (%"class.GrMeshDrawOp::Target"*, i32, %class.sk_sp.237*, i32*)** %891, align 8
  %893 = call i16* %892(%"class.GrMeshDrawOp::Target"* %1, i32 %889, %class.sk_sp.237* nonnull %23, i32* nonnull %24) #13
  %894 = icmp eq i16* %893, null
  br i1 %894, label %895, label %896

895:                                              ; preds = %888
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.28, i64 0, i64 0), i32 842, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i64 0, i64 0)) #13
  br label %1838

896:                                              ; preds = %888
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %142) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 -86, i64 32, i1 false)
  store i8* %142, i8** %146, align 8
  store i64 34359738368, i64* %145, align 8
  %897 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %265, i64 %264, i32 2
  %898 = load i8, i8* %147, align 8, !range !2
  %899 = icmp eq i8 %898, 0
  br i1 %899, label %912, label %900

900:                                              ; preds = %896
  %901 = bitcast %struct.SkRGBA4f* %897 to i32*
  %902 = load i32, i32* %901, align 4
  %903 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %265, i64 %264, i32 2, i32 1
  %904 = bitcast float* %903 to i32*
  %905 = load i32, i32* %904, align 4
  %906 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %265, i64 %264, i32 2, i32 2
  %907 = bitcast float* %906 to i32*
  %908 = load i32, i32* %907, align 4
  %909 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::PathData", %"struct.(anonymous namespace)::AAConvexPathOp::PathData"* %265, i64 %264, i32 2, i32 3
  %910 = bitcast float* %909 to i32*
  %911 = load i32, i32* %910, align 4
  br label %914

912:                                              ; preds = %896
  %913 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %897) #13
  br label %914

914:                                              ; preds = %900, %912
  %915 = phi i32 [ %911, %900 ], [ -1431655766, %912 ]
  %916 = phi i32 [ %908, %900 ], [ -1431655766, %912 ]
  %917 = phi i32 [ %905, %900 ], [ -1431655766, %912 ]
  %918 = phi i32 [ %902, %900 ], [ %913, %912 ]
  call void @_ZN8SkTArrayI4DrawLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.289* %148, i32 1, i32 1) #13
  %919 = load %struct.Draw*, %struct.Draw** %152, align 8
  %920 = load i64, i64* %145, align 8
  %921 = lshr i64 %920, 1
  %922 = and i64 %921, 2147483647
  %923 = getelementptr inbounds %struct.Draw, %struct.Draw* %919, i64 %922
  %924 = add i64 %920, 2
  %925 = and i64 %924, 4294967294
  %926 = and i64 %920, -4294967295
  %927 = or i64 %925, %926
  store i64 %927, i64* %145, align 8
  %928 = getelementptr inbounds %struct.Draw, %struct.Draw* %923, i64 0, i32 0
  store i32 0, i32* %928, align 4
  %929 = getelementptr inbounds %struct.Draw, %struct.Draw* %919, i64 %922, i32 1
  store i32 0, i32* %929, align 4
  %930 = load i64, i64* %74, align 8
  %931 = lshr i64 %930, 1
  %932 = trunc i64 %931 to i32
  %933 = and i32 %932, 2147483647
  %934 = icmp eq i32 %933, 0
  br i1 %934, label %1697, label %935

935:                                              ; preds = %914
  %936 = icmp ugt i32 %933, 2
  %937 = zext i32 %933 to i64
  br label %938

938:                                              ; preds = %1693, %935
  %939 = phi i8* [ %885, %935 ], [ %1694, %1693 ]
  %940 = phi i32 [ 0, %935 ], [ %1696, %1693 ]
  %941 = phi i64 [ 0, %935 ], [ %947, %1693 ]
  %942 = phi i16* [ %893, %935 ], [ %975, %1693 ]
  %943 = phi %struct.Draw* [ %923, %935 ], [ %974, %1693 ]
  %944 = phi i32* [ %928, %935 ], [ %973, %1693 ]
  %945 = phi i32* [ %929, %935 ], [ %972, %1693 ]
  %946 = load %struct.Segment*, %struct.Segment** %108, align 8
  %947 = add nuw nsw i64 %941, 1
  %948 = icmp eq i64 %947, %937
  %949 = select i1 %948, i64 0, i64 %947
  %950 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %949, i32 0
  %951 = load i32, i32* %950, align 4
  %952 = icmp eq i32 %951, 0
  %953 = select i1 %952, i32 9, i32 10
  %954 = add nsw i32 %953, %940
  %955 = icmp sgt i32 %954, 65536
  br i1 %955, label %956, label %971

956:                                              ; preds = %938
  %957 = load i32, i32* %945, align 4
  %958 = sext i32 %957 to i64
  %959 = getelementptr inbounds i16, i16* %942, i64 %958
  call void @_ZN8SkTArrayI4DrawLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.289* %148, i32 1, i32 1) #13
  %960 = load %struct.Draw*, %struct.Draw** %152, align 8
  %961 = load i64, i64* %145, align 8
  %962 = lshr i64 %961, 1
  %963 = and i64 %962, 2147483647
  %964 = getelementptr inbounds %struct.Draw, %struct.Draw* %960, i64 %963
  %965 = add i64 %961, 2
  %966 = and i64 %965, 4294967294
  %967 = and i64 %961, -4294967295
  %968 = or i64 %966, %967
  store i64 %968, i64* %145, align 8
  %969 = getelementptr inbounds %struct.Draw, %struct.Draw* %964, i64 0, i32 0
  store i32 0, i32* %969, align 4
  %970 = getelementptr inbounds %struct.Draw, %struct.Draw* %960, i64 %963, i32 1
  store i32 0, i32* %970, align 4
  br label %971

971:                                              ; preds = %956, %938
  %972 = phi i32* [ %970, %956 ], [ %945, %938 ]
  %973 = phi i32* [ %969, %956 ], [ %944, %938 ]
  %974 = phi %struct.Draw* [ %964, %956 ], [ %943, %938 ]
  %975 = phi i16* [ %959, %956 ], [ %942, %938 ]
  %976 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %941, i32 0
  %977 = load i32, i32* %976, align 4
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %941, i32 1, i64 %978
  %980 = bitcast %struct.SkPoint* %979 to <2 x i32>*
  %981 = load <2 x i32>, <2 x i32>* %980, align 4
  %982 = bitcast i8* %939 to i32*
  %983 = extractelement <2 x i32> %981, i32 0
  store i32 %983, i32* %982, align 1
  %984 = getelementptr inbounds i8, i8* %939, i64 4
  %985 = bitcast i8* %984 to i32*
  %986 = extractelement <2 x i32> %981, i32 1
  store i32 %986, i32* %985, align 1
  %987 = getelementptr inbounds i8, i8* %939, i64 8
  %988 = bitcast i8* %987 to i32*
  store i32 %918, i32* %988, align 1
  %989 = getelementptr inbounds i8, i8* %939, i64 12
  br i1 %899, label %997, label %990

990:                                              ; preds = %971
  %991 = bitcast i8* %989 to i32*
  store i32 %917, i32* %991, align 1
  %992 = getelementptr inbounds i8, i8* %939, i64 16
  %993 = bitcast i8* %992 to i32*
  store i32 %916, i32* %993, align 1
  %994 = getelementptr inbounds i8, i8* %939, i64 20
  %995 = bitcast i8* %994 to i32*
  store i32 %915, i32* %995, align 1
  %996 = getelementptr inbounds i8, i8* %939, i64 24
  br label %997

997:                                              ; preds = %990, %971
  %998 = phi i8* [ %989, %971 ], [ %996, %990 ]
  %999 = bitcast i8* %998 to i32*
  store i32 0, i32* %999, align 1
  %1000 = getelementptr inbounds i8, i8* %998, i64 4
  %1001 = bitcast i8* %1000 to i32*
  store i32 0, i32* %1001, align 1
  %1002 = getelementptr inbounds i8, i8* %998, i64 8
  %1003 = bitcast i8* %1002 to i64*
  store i64 -4647714812233515008, i64* %1003, align 1
  %1004 = getelementptr inbounds i8, i8* %998, i64 16
  %1005 = load i32, i32* %976, align 4
  %1006 = zext i32 %1005 to i64
  %1007 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %941, i32 2, i64 %1006, i32 0
  %1008 = bitcast <2 x i32> %981 to <2 x float>
  %1009 = bitcast float* %1007 to <2 x float>*
  %1010 = load <2 x float>, <2 x float>* %1009, align 4
  %1011 = fadd <2 x float> %1010, %1008
  %1012 = bitcast i8* %1004 to <2 x float>*
  store <2 x float> %1011, <2 x float>* %1012, align 1
  %1013 = getelementptr inbounds i8, i8* %998, i64 24
  %1014 = bitcast i8* %1013 to i32*
  store i32 %918, i32* %1014, align 1
  %1015 = getelementptr inbounds i8, i8* %998, i64 28
  br i1 %899, label %1023, label %1016

1016:                                             ; preds = %997
  %1017 = bitcast i8* %1015 to i32*
  store i32 %917, i32* %1017, align 1
  %1018 = getelementptr inbounds i8, i8* %998, i64 32
  %1019 = bitcast i8* %1018 to i32*
  store i32 %916, i32* %1019, align 1
  %1020 = getelementptr inbounds i8, i8* %998, i64 36
  %1021 = bitcast i8* %1020 to i32*
  store i32 %915, i32* %1021, align 1
  %1022 = getelementptr inbounds i8, i8* %998, i64 40
  br label %1023

1023:                                             ; preds = %1016, %997
  %1024 = phi i8* [ %1015, %997 ], [ %1022, %1016 ]
  %1025 = bitcast i8* %1024 to i32*
  store i32 0, i32* %1025, align 1
  %1026 = getelementptr inbounds i8, i8* %1024, i64 4
  %1027 = bitcast i8* %1026 to i32*
  store i32 -1082130432, i32* %1027, align 1
  %1028 = getelementptr inbounds i8, i8* %1024, i64 8
  %1029 = bitcast i8* %1028 to i64*
  store i64 -4647714812233515008, i64* %1029, align 1
  %1030 = getelementptr inbounds i8, i8* %1024, i64 16
  %1031 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %949, i32 3, i32 0
  %1032 = bitcast float* %1031 to <2 x float>*
  %1033 = load <2 x float>, <2 x float>* %1032, align 4
  %1034 = fadd <2 x float> %1033, %1008
  %1035 = bitcast i8* %1030 to <2 x float>*
  store <2 x float> %1034, <2 x float>* %1035, align 1
  %1036 = getelementptr inbounds i8, i8* %1024, i64 24
  %1037 = bitcast i8* %1036 to i32*
  store i32 %918, i32* %1037, align 1
  %1038 = getelementptr inbounds i8, i8* %1024, i64 28
  br i1 %899, label %1046, label %1039

1039:                                             ; preds = %1023
  %1040 = bitcast i8* %1038 to i32*
  store i32 %917, i32* %1040, align 1
  %1041 = getelementptr inbounds i8, i8* %1024, i64 32
  %1042 = bitcast i8* %1041 to i32*
  store i32 %916, i32* %1042, align 1
  %1043 = getelementptr inbounds i8, i8* %1024, i64 36
  %1044 = bitcast i8* %1043 to i32*
  store i32 %915, i32* %1044, align 1
  %1045 = getelementptr inbounds i8, i8* %1024, i64 40
  br label %1046

1046:                                             ; preds = %1039, %1023
  %1047 = phi i8* [ %1038, %1023 ], [ %1045, %1039 ]
  %1048 = bitcast i8* %1047 to i32*
  store i32 0, i32* %1048, align 1
  %1049 = getelementptr inbounds i8, i8* %1047, i64 4
  %1050 = bitcast i8* %1049 to i32*
  store i32 -1082130432, i32* %1050, align 1
  %1051 = getelementptr inbounds i8, i8* %1047, i64 8
  %1052 = bitcast i8* %1051 to i64*
  store i64 -4647714812233515008, i64* %1052, align 1
  %1053 = getelementptr inbounds i8, i8* %1047, i64 16
  %1054 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %949, i32 2, i64 0, i32 0
  %1055 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %949, i32 2, i64 0, i32 1
  %1056 = bitcast float* %1054 to <2 x float>*
  %1057 = load <2 x float>, <2 x float>* %1056, align 4
  %1058 = fadd <2 x float> %1057, %1008
  %1059 = bitcast i8* %1053 to <2 x float>*
  store <2 x float> %1058, <2 x float>* %1059, align 1
  %1060 = getelementptr inbounds i8, i8* %1047, i64 24
  %1061 = bitcast i8* %1060 to i32*
  store i32 %918, i32* %1061, align 1
  %1062 = getelementptr inbounds i8, i8* %1047, i64 28
  br i1 %899, label %1070, label %1063

1063:                                             ; preds = %1046
  %1064 = bitcast i8* %1062 to i32*
  store i32 %917, i32* %1064, align 1
  %1065 = getelementptr inbounds i8, i8* %1047, i64 32
  %1066 = bitcast i8* %1065 to i32*
  store i32 %916, i32* %1066, align 1
  %1067 = getelementptr inbounds i8, i8* %1047, i64 36
  %1068 = bitcast i8* %1067 to i32*
  store i32 %915, i32* %1068, align 1
  %1069 = getelementptr inbounds i8, i8* %1047, i64 40
  br label %1070

1070:                                             ; preds = %1063, %1046
  %1071 = phi i8* [ %1062, %1046 ], [ %1069, %1063 ]
  %1072 = bitcast i8* %1071 to i32*
  store i32 0, i32* %1072, align 1
  %1073 = getelementptr inbounds i8, i8* %1071, i64 4
  %1074 = bitcast i8* %1073 to i32*
  store i32 -1082130432, i32* %1074, align 1
  %1075 = getelementptr inbounds i8, i8* %1071, i64 8
  %1076 = bitcast i8* %1075 to i64*
  store i64 -4647714812233515008, i64* %1076, align 1
  %1077 = getelementptr inbounds i8, i8* %1071, i64 16
  %1078 = load i32, i32* %973, align 4
  %1079 = trunc i32 %1078 to i16
  %1080 = load i32, i32* %972, align 4
  %1081 = sext i32 %1080 to i64
  %1082 = getelementptr inbounds i16, i16* %975, i64 %1081
  store i16 %1079, i16* %1082, align 2
  %1083 = load i32, i32* %973, align 4
  %1084 = trunc i32 %1083 to i16
  %1085 = add i16 %1084, 2
  %1086 = load i32, i32* %972, align 4
  %1087 = add nsw i32 %1086, 1
  %1088 = sext i32 %1087 to i64
  %1089 = getelementptr inbounds i16, i16* %975, i64 %1088
  store i16 %1085, i16* %1089, align 2
  %1090 = load i32, i32* %973, align 4
  %1091 = trunc i32 %1090 to i16
  %1092 = add i16 %1091, 1
  %1093 = load i32, i32* %972, align 4
  %1094 = add nsw i32 %1093, 2
  %1095 = sext i32 %1094 to i64
  %1096 = getelementptr inbounds i16, i16* %975, i64 %1095
  store i16 %1092, i16* %1096, align 2
  %1097 = load i32, i32* %973, align 4
  %1098 = trunc i32 %1097 to i16
  %1099 = load i32, i32* %972, align 4
  %1100 = add nsw i32 %1099, 3
  %1101 = sext i32 %1100 to i64
  %1102 = getelementptr inbounds i16, i16* %975, i64 %1101
  store i16 %1098, i16* %1102, align 2
  %1103 = load i32, i32* %973, align 4
  %1104 = trunc i32 %1103 to i16
  %1105 = add i16 %1104, 3
  %1106 = load i32, i32* %972, align 4
  %1107 = add nsw i32 %1106, 4
  %1108 = sext i32 %1107 to i64
  %1109 = getelementptr inbounds i16, i16* %975, i64 %1108
  store i16 %1105, i16* %1109, align 2
  %1110 = load i32, i32* %973, align 4
  %1111 = trunc i32 %1110 to i16
  %1112 = add i16 %1111, 2
  %1113 = load i32, i32* %972, align 4
  %1114 = add nsw i32 %1113, 5
  %1115 = sext i32 %1114 to i64
  %1116 = getelementptr inbounds i16, i16* %975, i64 %1115
  store i16 %1112, i16* %1116, align 2
  %1117 = load i32, i32* %973, align 4
  %1118 = add nsw i32 %1117, 4
  store i32 %1118, i32* %973, align 4
  %1119 = load i32, i32* %972, align 4
  %1120 = add nsw i32 %1119, 6
  store i32 %1120, i32* %972, align 4
  %1121 = load i32, i32* %950, align 4
  %1122 = icmp eq i32 %1121, 0
  br i1 %1122, label %1123, label %1314

1123:                                             ; preds = %1070
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #13
  store float 0xFFFFFFFFE0000000, float* %204, align 8
  store float 0xFFFFFFFFE0000000, float* %205, align 4
  %1124 = load i32, i32* %976, align 4
  %1125 = zext i32 %1124 to i64
  %1126 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %941, i32 1, i64 %1125
  %1127 = bitcast %struct.SkPoint* %1126 to i64*
  %1128 = load i64, i64* %1127, align 4
  store i64 %1128, i64* %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %206) #13
  store float 0xFFFFFFFFE0000000, float* %207, align 8
  store float 0xFFFFFFFFE0000000, float* %208, align 4
  %1129 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %949, i32 1, i64 0
  %1130 = bitcast %struct.SkPoint* %1129 to i64*
  %1131 = load i64, i64* %1130, align 4
  store i64 %1131, i64* %4, align 8
  %1132 = call float @_ZN11SkPointPriv24DistanceToLineBetweenSqdERK7SkPointS2_S2_PNS_4SideE(%struct.SkPoint* nonnull dereferenceable(8) %20, %struct.SkPoint* nonnull dereferenceable(8) %149, %struct.SkPoint* nonnull dereferenceable(8) %150, i32* null) #13
  %1133 = call float @sqrtf(float %1132) #13
  %1134 = bitcast i8* %1077 to i64*
  %1135 = load i64, i64* %19, align 8
  store i64 %1135, i64* %1134, align 1
  %1136 = getelementptr inbounds i8, i8* %1071, i64 24
  %1137 = bitcast i8* %1136 to i32*
  store i32 %918, i32* %1137, align 1
  %1138 = getelementptr inbounds i8, i8* %1071, i64 28
  br i1 %899, label %1146, label %1139

1139:                                             ; preds = %1123
  %1140 = bitcast i8* %1138 to i32*
  store i32 %917, i32* %1140, align 1
  %1141 = getelementptr inbounds i8, i8* %1071, i64 32
  %1142 = bitcast i8* %1141 to i32*
  store i32 %916, i32* %1142, align 1
  %1143 = getelementptr inbounds i8, i8* %1071, i64 36
  %1144 = bitcast i8* %1143 to i32*
  store i32 %915, i32* %1144, align 1
  %1145 = getelementptr inbounds i8, i8* %1071, i64 40
  br label %1146

1146:                                             ; preds = %1139, %1123
  %1147 = phi i8* [ %1138, %1123 ], [ %1145, %1139 ]
  %1148 = bitcast i8* %1147 to i32*
  store i32 0, i32* %1148, align 1
  %1149 = getelementptr inbounds i8, i8* %1147, i64 4
  %1150 = bitcast i8* %1149 to float*
  store float %1133, float* %1150, align 1
  %1151 = getelementptr inbounds i8, i8* %1147, i64 8
  %1152 = bitcast i8* %1151 to i64*
  store i64 -4647714812233515008, i64* %1152, align 1
  %1153 = getelementptr inbounds i8, i8* %1147, i64 16
  %1154 = bitcast i8* %1153 to i64*
  %1155 = load i64, i64* %3, align 8
  store i64 %1155, i64* %1154, align 1
  %1156 = getelementptr inbounds i8, i8* %1147, i64 24
  %1157 = bitcast i8* %1156 to i32*
  store i32 %918, i32* %1157, align 1
  %1158 = getelementptr inbounds i8, i8* %1147, i64 28
  %1159 = trunc i64 %1155 to i32
  %1160 = bitcast i32 %1159 to float
  br i1 %899, label %1168, label %1161

1161:                                             ; preds = %1146
  %1162 = bitcast i8* %1158 to i32*
  store i32 %917, i32* %1162, align 1
  %1163 = getelementptr inbounds i8, i8* %1147, i64 32
  %1164 = bitcast i8* %1163 to i32*
  store i32 %916, i32* %1164, align 1
  %1165 = getelementptr inbounds i8, i8* %1147, i64 36
  %1166 = bitcast i8* %1165 to i32*
  store i32 %915, i32* %1166, align 1
  %1167 = getelementptr inbounds i8, i8* %1147, i64 40
  br label %1168

1168:                                             ; preds = %1161, %1146
  %1169 = phi i8* [ %1158, %1146 ], [ %1167, %1161 ]
  %1170 = bitcast i8* %1169 to i32*
  store i32 0, i32* %1170, align 1
  %1171 = getelementptr inbounds i8, i8* %1169, i64 4
  %1172 = bitcast i8* %1171 to i32*
  store i32 0, i32* %1172, align 1
  %1173 = getelementptr inbounds i8, i8* %1169, i64 8
  %1174 = bitcast i8* %1173 to i64*
  store i64 -4647714812233515008, i64* %1174, align 1
  %1175 = getelementptr inbounds i8, i8* %1169, i64 16
  %1176 = bitcast i8* %1175 to i64*
  %1177 = load i64, i64* %4, align 8
  store i64 %1177, i64* %1176, align 1
  %1178 = getelementptr inbounds i8, i8* %1169, i64 24
  %1179 = bitcast i8* %1178 to i32*
  store i32 %918, i32* %1179, align 1
  %1180 = getelementptr inbounds i8, i8* %1169, i64 28
  %1181 = trunc i64 %1177 to i32
  %1182 = bitcast i32 %1181 to float
  br i1 %899, label %1190, label %1183

1183:                                             ; preds = %1168
  %1184 = bitcast i8* %1180 to i32*
  store i32 %917, i32* %1184, align 1
  %1185 = getelementptr inbounds i8, i8* %1169, i64 32
  %1186 = bitcast i8* %1185 to i32*
  store i32 %916, i32* %1186, align 1
  %1187 = getelementptr inbounds i8, i8* %1169, i64 36
  %1188 = bitcast i8* %1187 to i32*
  store i32 %915, i32* %1188, align 1
  %1189 = getelementptr inbounds i8, i8* %1169, i64 40
  br label %1190

1190:                                             ; preds = %1183, %1168
  %1191 = phi i8* [ %1180, %1168 ], [ %1189, %1183 ]
  %1192 = bitcast i8* %1191 to i32*
  store i32 0, i32* %1192, align 1
  %1193 = getelementptr inbounds i8, i8* %1191, i64 4
  %1194 = bitcast i8* %1193 to i32*
  store i32 0, i32* %1194, align 1
  %1195 = getelementptr inbounds i8, i8* %1191, i64 8
  %1196 = bitcast i8* %1195 to i64*
  store i64 -4647714812233515008, i64* %1196, align 1
  %1197 = getelementptr inbounds i8, i8* %1191, i64 16
  %1198 = load float, float* %205, align 4
  %1199 = bitcast float* %1054 to <2 x float>*
  %1200 = load <2 x float>, <2 x float>* %1199, align 4
  %1201 = insertelement <2 x float> undef, float %1160, i32 0
  %1202 = insertelement <2 x float> %1201, float %1198, i32 1
  %1203 = fadd <2 x float> %1200, %1202
  %1204 = bitcast i8* %1197 to <2 x float>*
  store <2 x float> %1203, <2 x float>* %1204, align 1
  %1205 = getelementptr inbounds i8, i8* %1191, i64 24
  %1206 = bitcast i8* %1205 to i32*
  store i32 %918, i32* %1206, align 1
  %1207 = getelementptr inbounds i8, i8* %1191, i64 28
  br i1 %899, label %1215, label %1208

1208:                                             ; preds = %1190
  %1209 = bitcast i8* %1207 to i32*
  store i32 %917, i32* %1209, align 1
  %1210 = getelementptr inbounds i8, i8* %1191, i64 32
  %1211 = bitcast i8* %1210 to i32*
  store i32 %916, i32* %1211, align 1
  %1212 = getelementptr inbounds i8, i8* %1191, i64 36
  %1213 = bitcast i8* %1212 to i32*
  store i32 %915, i32* %1213, align 1
  %1214 = getelementptr inbounds i8, i8* %1191, i64 40
  br label %1215

1215:                                             ; preds = %1208, %1190
  %1216 = phi i8* [ %1207, %1190 ], [ %1214, %1208 ]
  %1217 = bitcast i8* %1216 to i32*
  store i32 0, i32* %1217, align 1
  %1218 = getelementptr inbounds i8, i8* %1216, i64 4
  %1219 = bitcast i8* %1218 to i32*
  store i32 -1082130432, i32* %1219, align 1
  %1220 = getelementptr inbounds i8, i8* %1216, i64 8
  %1221 = bitcast i8* %1220 to i64*
  store i64 -4647714812233515008, i64* %1221, align 1
  %1222 = getelementptr inbounds i8, i8* %1216, i64 16
  %1223 = load float, float* %208, align 4
  %1224 = bitcast float* %1054 to <2 x float>*
  %1225 = load <2 x float>, <2 x float>* %1224, align 4
  %1226 = insertelement <2 x float> undef, float %1182, i32 0
  %1227 = insertelement <2 x float> %1226, float %1223, i32 1
  %1228 = fadd <2 x float> %1225, %1227
  %1229 = bitcast i8* %1222 to <2 x float>*
  store <2 x float> %1228, <2 x float>* %1229, align 1
  %1230 = getelementptr inbounds i8, i8* %1216, i64 24
  %1231 = bitcast i8* %1230 to i32*
  store i32 %918, i32* %1231, align 1
  %1232 = getelementptr inbounds i8, i8* %1216, i64 28
  br i1 %899, label %1240, label %1233

1233:                                             ; preds = %1215
  %1234 = bitcast i8* %1232 to i32*
  store i32 %917, i32* %1234, align 1
  %1235 = getelementptr inbounds i8, i8* %1216, i64 32
  %1236 = bitcast i8* %1235 to i32*
  store i32 %916, i32* %1236, align 1
  %1237 = getelementptr inbounds i8, i8* %1216, i64 36
  %1238 = bitcast i8* %1237 to i32*
  store i32 %915, i32* %1238, align 1
  %1239 = getelementptr inbounds i8, i8* %1216, i64 40
  br label %1240

1240:                                             ; preds = %1233, %1215
  %1241 = phi i8* [ %1232, %1215 ], [ %1239, %1233 ]
  %1242 = bitcast i8* %1241 to i32*
  store i32 0, i32* %1242, align 1
  %1243 = getelementptr inbounds i8, i8* %1241, i64 4
  %1244 = bitcast i8* %1243 to i32*
  store i32 -1082130432, i32* %1244, align 1
  %1245 = getelementptr inbounds i8, i8* %1241, i64 8
  %1246 = bitcast i8* %1245 to i64*
  store i64 -4647714812233515008, i64* %1246, align 1
  %1247 = load i32, i32* %973, align 4
  %1248 = trunc i32 %1247 to i16
  %1249 = add i16 %1248, 3
  %1250 = load i32, i32* %972, align 4
  %1251 = sext i32 %1250 to i64
  %1252 = getelementptr inbounds i16, i16* %975, i64 %1251
  store i16 %1249, i16* %1252, align 2
  %1253 = load i32, i32* %973, align 4
  %1254 = trunc i32 %1253 to i16
  %1255 = add i16 %1254, 1
  %1256 = load i32, i32* %972, align 4
  %1257 = add nsw i32 %1256, 1
  %1258 = sext i32 %1257 to i64
  %1259 = getelementptr inbounds i16, i16* %975, i64 %1258
  store i16 %1255, i16* %1259, align 2
  %1260 = load i32, i32* %973, align 4
  %1261 = trunc i32 %1260 to i16
  %1262 = add i16 %1261, 2
  %1263 = load i32, i32* %972, align 4
  %1264 = add nsw i32 %1263, 2
  %1265 = sext i32 %1264 to i64
  %1266 = getelementptr inbounds i16, i16* %975, i64 %1265
  store i16 %1262, i16* %1266, align 2
  %1267 = load i32, i32* %973, align 4
  %1268 = trunc i32 %1267 to i16
  %1269 = add i16 %1268, 4
  %1270 = load i32, i32* %972, align 4
  %1271 = add nsw i32 %1270, 3
  %1272 = sext i32 %1271 to i64
  %1273 = getelementptr inbounds i16, i16* %975, i64 %1272
  store i16 %1269, i16* %1273, align 2
  %1274 = load i32, i32* %973, align 4
  %1275 = trunc i32 %1274 to i16
  %1276 = add i16 %1275, 3
  %1277 = load i32, i32* %972, align 4
  %1278 = add nsw i32 %1277, 4
  %1279 = sext i32 %1278 to i64
  %1280 = getelementptr inbounds i16, i16* %975, i64 %1279
  store i16 %1276, i16* %1280, align 2
  %1281 = load i32, i32* %973, align 4
  %1282 = trunc i32 %1281 to i16
  %1283 = add i16 %1282, 2
  %1284 = load i32, i32* %972, align 4
  %1285 = add nsw i32 %1284, 5
  %1286 = sext i32 %1285 to i64
  %1287 = getelementptr inbounds i16, i16* %975, i64 %1286
  store i16 %1283, i16* %1287, align 2
  %1288 = load i32, i32* %972, align 4
  %1289 = add nsw i32 %1288, 6
  store i32 %1289, i32* %972, align 4
  br i1 %936, label %1290, label %1311

1290:                                             ; preds = %1240
  %1291 = load i32, i32* %973, align 4
  %1292 = trunc i32 %1291 to i16
  %1293 = sext i32 %1289 to i64
  %1294 = getelementptr inbounds i16, i16* %975, i64 %1293
  store i16 %1292, i16* %1294, align 2
  %1295 = load i32, i32* %973, align 4
  %1296 = trunc i32 %1295 to i16
  %1297 = add i16 %1296, 2
  %1298 = load i32, i32* %972, align 4
  %1299 = add nsw i32 %1298, 1
  %1300 = sext i32 %1299 to i64
  %1301 = getelementptr inbounds i16, i16* %975, i64 %1300
  store i16 %1297, i16* %1301, align 2
  %1302 = load i32, i32* %973, align 4
  %1303 = trunc i32 %1302 to i16
  %1304 = add i16 %1303, 1
  %1305 = load i32, i32* %972, align 4
  %1306 = add nsw i32 %1305, 2
  %1307 = sext i32 %1306 to i64
  %1308 = getelementptr inbounds i16, i16* %975, i64 %1307
  store i16 %1304, i16* %1308, align 2
  %1309 = load i32, i32* %972, align 4
  %1310 = add nsw i32 %1309, 3
  store i32 %1310, i32* %972, align 4
  br label %1311

1311:                                             ; preds = %1290, %1240
  %1312 = load i32, i32* %973, align 4
  %1313 = add nsw i32 %1312, 5
  store i32 %1313, i32* %973, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #13
  br label %1691

1314:                                             ; preds = %1070
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %153, i8 -1, i64 24, i1 false) #13
  %1315 = load i32, i32* %976, align 4
  %1316 = zext i32 %1315 to i64
  %1317 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %941, i32 1, i64 %1316
  %1318 = bitcast %struct.SkPoint* %1317 to i64*
  %1319 = load i64, i64* %1318, align 4
  store i64 %1319, i64* %161, align 16
  %1320 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %949, i32 1
  %1321 = bitcast [2 x %struct.SkPoint]* %1320 to i64*
  %1322 = load i64, i64* %1321, align 4
  store i64 %1322, i64* %162, align 8
  %1323 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %949, i32 1, i64 1
  %1324 = bitcast %struct.SkPoint* %1323 to i64*
  %1325 = load i64, i64* %1324, align 4
  store i64 %1325, i64* %163, align 16
  %1326 = load float, float* %1054, align 4
  %1327 = trunc i64 %1319 to i32
  %1328 = bitcast i32 %1327 to float
  %1329 = load float, float* %1055, align 4
  %1330 = lshr i64 %1319, 32
  %1331 = trunc i64 %1330 to i32
  %1332 = bitcast i32 %1331 to float
  %1333 = fmul float %1329, %1332
  %1334 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %949, i32 2, i64 1, i32 0
  %1335 = load float, float* %1334, align 4
  %1336 = trunc i64 %1325 to i32
  %1337 = bitcast i32 %1336 to float
  %1338 = getelementptr inbounds %struct.Segment, %struct.Segment* %946, i64 %949, i32 2, i64 1, i32 1
  %1339 = load float, float* %1338, align 4
  %1340 = lshr i64 %1325, 32
  %1341 = trunc i64 %1340 to i32
  %1342 = bitcast i32 %1341 to float
  %1343 = fmul float %1339, %1342
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %164) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %164, i8 -1, i64 96, i1 false) #13
  %1344 = load i64, i64* %19, align 8
  store i64 %1344, i64* %165, align 16
  store i64 %1319, i64* %167, align 16
  store i64 %1325, i64* %169, align 16
  %1345 = load float, float* %1054, align 4
  %1346 = fadd float %1345, %1328
  %1347 = insertelement <2 x float> undef, float %1346, i32 0
  %1348 = load float, float* %1055, align 4
  %1349 = fadd float %1348, %1332
  %1350 = insertelement <2 x float> %1347, float %1349, i32 1
  store <2 x float> %1350, <2 x float>* %171, align 16
  %1351 = load float, float* %1334, align 4
  %1352 = fadd float %1351, %1337
  %1353 = insertelement <2 x float> undef, float %1352, i32 0
  %1354 = load float, float* %1338, align 4
  %1355 = fadd float %1354, %1342
  %1356 = insertelement <2 x float> %1353, float %1355, i32 1
  store <2 x float> %1356, <2 x float>* %173, align 16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #13
  store float 0xFFFFFFFFE0000000, float* %175, align 8
  store float 0xFFFFFFFFE0000000, float* %176, align 4
  %1357 = bitcast float* %1054 to <2 x float>*
  %1358 = load <2 x float>, <2 x float>* %1357, align 4
  %1359 = bitcast float* %1334 to <2 x float>*
  %1360 = load <2 x float>, <2 x float>* %1359, align 4
  %1361 = fadd <2 x float> %1358, %1360
  store <2 x float> %1361, <2 x float>* %7, align 8
  %1362 = call zeroext i1 @_ZN7SkPoint9normalizeEv(%struct.SkPoint* nonnull %151) #13
  %1363 = load <2 x float>, <2 x float>* %262, align 8
  %1364 = load <2 x float>, <2 x float>* %7, align 8
  %1365 = fadd <2 x float> %1363, %1364
  store <2 x float> %1365, <2 x float>* %178, align 16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %179, i8 -1, i64 24, i1 false) #13
  call void @_ZN11GrPathUtils12QuadUVMatrix3setEPK7SkPoint(%"class.GrPathUtils::QuadUVMatrix"* nonnull %8, %struct.SkPoint* nonnull %154) #13
  %1366 = load float, float* %180, align 4
  %1367 = load float, float* %181, align 4
  %1368 = load float, float* %182, align 4
  %1369 = load float, float* %183, align 4
  %1370 = load float, float* %184, align 4
  %1371 = load float, float* %185, align 4
  %1372 = load float, float* %210, align 16
  %1373 = fmul float %1366, %1372
  %1374 = load float, float* %211, align 4
  %1375 = fmul float %1367, %1374
  %1376 = fadd float %1373, %1375
  %1377 = fadd float %1368, %1376
  store float %1377, float* %212, align 8
  %1378 = load float, float* %210, align 16
  %1379 = fmul float %1369, %1378
  %1380 = load float, float* %211, align 4
  %1381 = fmul float %1370, %1380
  %1382 = fadd float %1379, %1381
  %1383 = fadd float %1371, %1382
  store float %1383, float* %213, align 4
  %1384 = load float, float* %218, align 16
  %1385 = fmul float %1366, %1384
  %1386 = load float, float* %219, align 4
  %1387 = fmul float %1367, %1386
  %1388 = fadd float %1385, %1387
  %1389 = fadd float %1368, %1388
  store float %1389, float* %220, align 8
  %1390 = load float, float* %218, align 16
  %1391 = fmul float %1369, %1390
  %1392 = load float, float* %219, align 4
  %1393 = fmul float %1370, %1392
  %1394 = fadd float %1391, %1393
  %1395 = fadd float %1371, %1394
  store float %1395, float* %221, align 4
  %1396 = load float, float* %226, align 16
  %1397 = fmul float %1366, %1396
  %1398 = load float, float* %227, align 4
  %1399 = fmul float %1367, %1398
  %1400 = fadd float %1397, %1399
  %1401 = fadd float %1368, %1400
  store float %1401, float* %228, align 8
  %1402 = load float, float* %226, align 16
  %1403 = fmul float %1369, %1402
  %1404 = load float, float* %227, align 4
  %1405 = fmul float %1370, %1404
  %1406 = fadd float %1403, %1405
  %1407 = fadd float %1371, %1406
  store float %1407, float* %229, align 4
  %1408 = load float, float* %234, align 16
  %1409 = fmul float %1366, %1408
  %1410 = load float, float* %235, align 4
  %1411 = fmul float %1367, %1410
  %1412 = fadd float %1409, %1411
  %1413 = fadd float %1368, %1412
  store float %1413, float* %236, align 8
  %1414 = load float, float* %234, align 16
  %1415 = fmul float %1369, %1414
  %1416 = load float, float* %235, align 4
  %1417 = fmul float %1370, %1416
  %1418 = fadd float %1415, %1417
  %1419 = fadd float %1371, %1418
  store float %1419, float* %237, align 4
  %1420 = load float, float* %242, align 16
  %1421 = fmul float %1366, %1420
  %1422 = load float, float* %243, align 4
  %1423 = fmul float %1367, %1422
  %1424 = fadd float %1421, %1423
  %1425 = fadd float %1368, %1424
  store float %1425, float* %244, align 8
  %1426 = load float, float* %242, align 16
  %1427 = fmul float %1369, %1426
  %1428 = load float, float* %243, align 4
  %1429 = fmul float %1370, %1428
  %1430 = fadd float %1427, %1429
  %1431 = fadd float %1371, %1430
  store float %1431, float* %245, align 4
  %1432 = load float, float* %250, align 16
  %1433 = fmul float %1366, %1432
  %1434 = load float, float* %251, align 4
  %1435 = fmul float %1367, %1434
  %1436 = fadd float %1433, %1435
  %1437 = fadd float %1368, %1436
  store float %1437, float* %252, align 8
  %1438 = load float, float* %250, align 16
  %1439 = fmul float %1369, %1438
  %1440 = load float, float* %251, align 4
  %1441 = fmul float %1370, %1440
  %1442 = fadd float %1439, %1441
  %1443 = fadd float %1371, %1442
  store float %1443, float* %253, align 4
  %1444 = fmul float %1326, %1328
  %1445 = fadd float %1444, %1333
  %1446 = fmul float %1335, %1337
  %1447 = fadd float %1446, %1343
  %1448 = load float, float* %1054, align 4
  %1449 = load float, float* %77, align 8
  %1450 = fmul float %1448, %1449
  %1451 = load float, float* %1055, align 4
  %1452 = load float, float* %78, align 4
  %1453 = fmul float %1451, %1452
  %1454 = fadd float %1450, %1453
  %1455 = fsub float %1445, %1454
  %1456 = load float, float* %1334, align 4
  %1457 = fmul float %1449, %1456
  %1458 = load float, float* %1338, align 4
  %1459 = fmul float %1452, %1458
  %1460 = fadd float %1457, %1459
  %1461 = fsub float %1447, %1460
  %1462 = bitcast i8* %1077 to i64*
  %1463 = load i64, i64* %165, align 16
  store i64 %1463, i64* %1462, align 1
  %1464 = getelementptr inbounds i8, i8* %1071, i64 24
  %1465 = bitcast i8* %1464 to i32*
  store i32 %918, i32* %1465, align 1
  %1466 = getelementptr inbounds i8, i8* %1071, i64 28
  br i1 %899, label %1474, label %1467

1467:                                             ; preds = %1314
  %1468 = bitcast i8* %1466 to i32*
  store i32 %917, i32* %1468, align 1
  %1469 = getelementptr inbounds i8, i8* %1071, i64 32
  %1470 = bitcast i8* %1469 to i32*
  store i32 %916, i32* %1470, align 1
  %1471 = getelementptr inbounds i8, i8* %1071, i64 36
  %1472 = bitcast i8* %1471 to i32*
  store i32 %915, i32* %1472, align 1
  %1473 = getelementptr inbounds i8, i8* %1071, i64 40
  br label %1474

1474:                                             ; preds = %1467, %1314
  %1475 = phi i8* [ %1466, %1314 ], [ %1473, %1467 ]
  %1476 = bitcast i8* %1475 to i64*
  %1477 = load i64, i64* %189, align 8
  store i64 %1477, i64* %1476, align 1
  %1478 = getelementptr inbounds i8, i8* %1475, i64 8
  %1479 = bitcast i8* %1478 to float*
  store float %1455, float* %1479, align 1
  %1480 = getelementptr inbounds i8, i8* %1475, i64 12
  %1481 = bitcast i8* %1480 to float*
  store float %1461, float* %1481, align 1
  %1482 = getelementptr inbounds i8, i8* %1475, i64 16
  %1483 = load float, float* %1334, align 4
  %1484 = load float, float* %155, align 16
  %1485 = fmul float %1483, %1484
  %1486 = load float, float* %1338, align 4
  %1487 = load float, float* %156, align 4
  %1488 = fmul float %1486, %1487
  %1489 = fadd float %1485, %1488
  %1490 = fsub float %1447, %1489
  %1491 = bitcast i8* %1482 to i64*
  %1492 = load i64, i64* %167, align 16
  store i64 %1492, i64* %1491, align 1
  %1493 = getelementptr inbounds i8, i8* %1475, i64 24
  %1494 = bitcast i8* %1493 to i32*
  store i32 %918, i32* %1494, align 1
  %1495 = getelementptr inbounds i8, i8* %1475, i64 28
  br i1 %899, label %1503, label %1496

1496:                                             ; preds = %1474
  %1497 = bitcast i8* %1495 to i32*
  store i32 %917, i32* %1497, align 1
  %1498 = getelementptr inbounds i8, i8* %1475, i64 32
  %1499 = bitcast i8* %1498 to i32*
  store i32 %916, i32* %1499, align 1
  %1500 = getelementptr inbounds i8, i8* %1475, i64 36
  %1501 = bitcast i8* %1500 to i32*
  store i32 %915, i32* %1501, align 1
  %1502 = getelementptr inbounds i8, i8* %1475, i64 40
  br label %1503

1503:                                             ; preds = %1496, %1474
  %1504 = phi i8* [ %1495, %1474 ], [ %1502, %1496 ]
  %1505 = bitcast i8* %1504 to i64*
  %1506 = load i64, i64* %191, align 8
  store i64 %1506, i64* %1505, align 1
  %1507 = getelementptr inbounds i8, i8* %1504, i64 8
  %1508 = bitcast i8* %1507 to i32*
  store i32 0, i32* %1508, align 1
  %1509 = getelementptr inbounds i8, i8* %1504, i64 12
  %1510 = bitcast i8* %1509 to float*
  store float %1490, float* %1510, align 1
  %1511 = getelementptr inbounds i8, i8* %1504, i64 16
  %1512 = load float, float* %1054, align 4
  %1513 = load float, float* %159, align 16
  %1514 = fmul float %1512, %1513
  %1515 = load float, float* %1055, align 4
  %1516 = load float, float* %160, align 4
  %1517 = fmul float %1515, %1516
  %1518 = fadd float %1514, %1517
  %1519 = fsub float %1445, %1518
  %1520 = bitcast i8* %1511 to i64*
  %1521 = load i64, i64* %169, align 16
  store i64 %1521, i64* %1520, align 1
  %1522 = getelementptr inbounds i8, i8* %1504, i64 24
  %1523 = bitcast i8* %1522 to i32*
  store i32 %918, i32* %1523, align 1
  %1524 = getelementptr inbounds i8, i8* %1504, i64 28
  br i1 %899, label %1532, label %1525

1525:                                             ; preds = %1503
  %1526 = bitcast i8* %1524 to i32*
  store i32 %917, i32* %1526, align 1
  %1527 = getelementptr inbounds i8, i8* %1504, i64 32
  %1528 = bitcast i8* %1527 to i32*
  store i32 %916, i32* %1528, align 1
  %1529 = getelementptr inbounds i8, i8* %1504, i64 36
  %1530 = bitcast i8* %1529 to i32*
  store i32 %915, i32* %1530, align 1
  %1531 = getelementptr inbounds i8, i8* %1504, i64 40
  br label %1532

1532:                                             ; preds = %1525, %1503
  %1533 = phi i8* [ %1524, %1503 ], [ %1531, %1525 ]
  %1534 = bitcast i8* %1533 to i64*
  %1535 = load i64, i64* %193, align 8
  store i64 %1535, i64* %1534, align 1
  %1536 = getelementptr inbounds i8, i8* %1533, i64 8
  %1537 = bitcast i8* %1536 to float*
  store float %1519, float* %1537, align 1
  %1538 = getelementptr inbounds i8, i8* %1533, i64 12
  %1539 = bitcast i8* %1538 to i32*
  store i32 0, i32* %1539, align 1
  %1540 = getelementptr inbounds i8, i8* %1533, i64 16
  %1541 = bitcast i8* %1540 to i64*
  %1542 = load i64, i64* %195, align 16
  store i64 %1542, i64* %1541, align 1
  %1543 = getelementptr inbounds i8, i8* %1533, i64 24
  %1544 = bitcast i8* %1543 to i32*
  store i32 %918, i32* %1544, align 1
  %1545 = getelementptr inbounds i8, i8* %1533, i64 28
  br i1 %899, label %1553, label %1546

1546:                                             ; preds = %1532
  %1547 = bitcast i8* %1545 to i32*
  store i32 %917, i32* %1547, align 1
  %1548 = getelementptr inbounds i8, i8* %1533, i64 32
  %1549 = bitcast i8* %1548 to i32*
  store i32 %916, i32* %1549, align 1
  %1550 = getelementptr inbounds i8, i8* %1533, i64 36
  %1551 = bitcast i8* %1550 to i32*
  store i32 %915, i32* %1551, align 1
  %1552 = getelementptr inbounds i8, i8* %1533, i64 40
  br label %1553

1553:                                             ; preds = %1546, %1532
  %1554 = phi i8* [ %1545, %1532 ], [ %1552, %1546 ]
  %1555 = bitcast i8* %1554 to i64*
  %1556 = load i64, i64* %196, align 8
  store i64 %1556, i64* %1555, align 1
  %1557 = getelementptr inbounds i8, i8* %1554, i64 8
  %1558 = bitcast i8* %1557 to i32*
  store i32 -175753284, i32* %1558, align 1
  %1559 = getelementptr inbounds i8, i8* %1554, i64 12
  %1560 = bitcast i8* %1559 to i32*
  store i32 -175753284, i32* %1560, align 1
  %1561 = getelementptr inbounds i8, i8* %1554, i64 16
  %1562 = bitcast i8* %1561 to i64*
  %1563 = load i64, i64* %198, align 16
  store i64 %1563, i64* %1562, align 1
  %1564 = getelementptr inbounds i8, i8* %1554, i64 24
  %1565 = bitcast i8* %1564 to i32*
  store i32 %918, i32* %1565, align 1
  %1566 = getelementptr inbounds i8, i8* %1554, i64 28
  br i1 %899, label %1574, label %1567

1567:                                             ; preds = %1553
  %1568 = bitcast i8* %1566 to i32*
  store i32 %917, i32* %1568, align 1
  %1569 = getelementptr inbounds i8, i8* %1554, i64 32
  %1570 = bitcast i8* %1569 to i32*
  store i32 %916, i32* %1570, align 1
  %1571 = getelementptr inbounds i8, i8* %1554, i64 36
  %1572 = bitcast i8* %1571 to i32*
  store i32 %915, i32* %1572, align 1
  %1573 = getelementptr inbounds i8, i8* %1554, i64 40
  br label %1574

1574:                                             ; preds = %1567, %1553
  %1575 = phi i8* [ %1566, %1553 ], [ %1573, %1567 ]
  %1576 = bitcast i8* %1575 to i64*
  %1577 = load i64, i64* %199, align 8
  store i64 %1577, i64* %1576, align 1
  %1578 = getelementptr inbounds i8, i8* %1575, i64 8
  %1579 = bitcast i8* %1578 to i32*
  store i32 -175753284, i32* %1579, align 1
  %1580 = getelementptr inbounds i8, i8* %1575, i64 12
  %1581 = bitcast i8* %1580 to i32*
  store i32 -175753284, i32* %1581, align 1
  %1582 = getelementptr inbounds i8, i8* %1575, i64 16
  %1583 = bitcast i8* %1582 to i64*
  %1584 = load i64, i64* %201, align 16
  store i64 %1584, i64* %1583, align 1
  %1585 = getelementptr inbounds i8, i8* %1575, i64 24
  %1586 = bitcast i8* %1585 to i32*
  store i32 %918, i32* %1586, align 1
  %1587 = getelementptr inbounds i8, i8* %1575, i64 28
  br i1 %899, label %1595, label %1588

1588:                                             ; preds = %1574
  %1589 = bitcast i8* %1587 to i32*
  store i32 %917, i32* %1589, align 1
  %1590 = getelementptr inbounds i8, i8* %1575, i64 32
  %1591 = bitcast i8* %1590 to i32*
  store i32 %916, i32* %1591, align 1
  %1592 = getelementptr inbounds i8, i8* %1575, i64 36
  %1593 = bitcast i8* %1592 to i32*
  store i32 %915, i32* %1593, align 1
  %1594 = getelementptr inbounds i8, i8* %1575, i64 40
  br label %1595

1595:                                             ; preds = %1588, %1574
  %1596 = phi i8* [ %1587, %1574 ], [ %1594, %1588 ]
  %1597 = bitcast i8* %1596 to i64*
  %1598 = load i64, i64* %202, align 8
  store i64 %1598, i64* %1597, align 1
  %1599 = getelementptr inbounds i8, i8* %1596, i64 8
  %1600 = bitcast i8* %1599 to i32*
  store i32 -175753284, i32* %1600, align 1
  %1601 = getelementptr inbounds i8, i8* %1596, i64 12
  %1602 = bitcast i8* %1601 to i32*
  store i32 -175753284, i32* %1602, align 1
  %1603 = load i32, i32* %973, align 4
  %1604 = trunc i32 %1603 to i16
  %1605 = add i16 %1604, 3
  %1606 = load i32, i32* %972, align 4
  %1607 = sext i32 %1606 to i64
  %1608 = getelementptr inbounds i16, i16* %975, i64 %1607
  store i16 %1605, i16* %1608, align 2
  %1609 = load i32, i32* %973, align 4
  %1610 = trunc i32 %1609 to i16
  %1611 = add i16 %1610, 1
  %1612 = load i32, i32* %972, align 4
  %1613 = add nsw i32 %1612, 1
  %1614 = sext i32 %1613 to i64
  %1615 = getelementptr inbounds i16, i16* %975, i64 %1614
  store i16 %1611, i16* %1615, align 2
  %1616 = load i32, i32* %973, align 4
  %1617 = trunc i32 %1616 to i16
  %1618 = add i16 %1617, 2
  %1619 = load i32, i32* %972, align 4
  %1620 = add nsw i32 %1619, 2
  %1621 = sext i32 %1620 to i64
  %1622 = getelementptr inbounds i16, i16* %975, i64 %1621
  store i16 %1618, i16* %1622, align 2
  %1623 = load i32, i32* %973, align 4
  %1624 = trunc i32 %1623 to i16
  %1625 = add i16 %1624, 4
  %1626 = load i32, i32* %972, align 4
  %1627 = add nsw i32 %1626, 3
  %1628 = sext i32 %1627 to i64
  %1629 = getelementptr inbounds i16, i16* %975, i64 %1628
  store i16 %1625, i16* %1629, align 2
  %1630 = load i32, i32* %973, align 4
  %1631 = trunc i32 %1630 to i16
  %1632 = add i16 %1631, 3
  %1633 = load i32, i32* %972, align 4
  %1634 = add nsw i32 %1633, 4
  %1635 = sext i32 %1634 to i64
  %1636 = getelementptr inbounds i16, i16* %975, i64 %1635
  store i16 %1632, i16* %1636, align 2
  %1637 = load i32, i32* %973, align 4
  %1638 = trunc i32 %1637 to i16
  %1639 = add i16 %1638, 2
  %1640 = load i32, i32* %972, align 4
  %1641 = add nsw i32 %1640, 5
  %1642 = sext i32 %1641 to i64
  %1643 = getelementptr inbounds i16, i16* %975, i64 %1642
  store i16 %1639, i16* %1643, align 2
  %1644 = load i32, i32* %973, align 4
  %1645 = trunc i32 %1644 to i16
  %1646 = add i16 %1645, 5
  %1647 = load i32, i32* %972, align 4
  %1648 = add nsw i32 %1647, 6
  %1649 = sext i32 %1648 to i64
  %1650 = getelementptr inbounds i16, i16* %975, i64 %1649
  store i16 %1646, i16* %1650, align 2
  %1651 = load i32, i32* %973, align 4
  %1652 = trunc i32 %1651 to i16
  %1653 = add i16 %1652, 3
  %1654 = load i32, i32* %972, align 4
  %1655 = add nsw i32 %1654, 7
  %1656 = sext i32 %1655 to i64
  %1657 = getelementptr inbounds i16, i16* %975, i64 %1656
  store i16 %1653, i16* %1657, align 2
  %1658 = load i32, i32* %973, align 4
  %1659 = trunc i32 %1658 to i16
  %1660 = add i16 %1659, 4
  %1661 = load i32, i32* %972, align 4
  %1662 = add nsw i32 %1661, 8
  %1663 = sext i32 %1662 to i64
  %1664 = getelementptr inbounds i16, i16* %975, i64 %1663
  store i16 %1660, i16* %1664, align 2
  %1665 = load i32, i32* %972, align 4
  %1666 = add nsw i32 %1665, 9
  store i32 %1666, i32* %972, align 4
  br i1 %936, label %1667, label %1688

1667:                                             ; preds = %1595
  %1668 = load i32, i32* %973, align 4
  %1669 = trunc i32 %1668 to i16
  %1670 = sext i32 %1666 to i64
  %1671 = getelementptr inbounds i16, i16* %975, i64 %1670
  store i16 %1669, i16* %1671, align 2
  %1672 = load i32, i32* %973, align 4
  %1673 = trunc i32 %1672 to i16
  %1674 = add i16 %1673, 2
  %1675 = load i32, i32* %972, align 4
  %1676 = add nsw i32 %1675, 1
  %1677 = sext i32 %1676 to i64
  %1678 = getelementptr inbounds i16, i16* %975, i64 %1677
  store i16 %1674, i16* %1678, align 2
  %1679 = load i32, i32* %973, align 4
  %1680 = trunc i32 %1679 to i16
  %1681 = add i16 %1680, 1
  %1682 = load i32, i32* %972, align 4
  %1683 = add nsw i32 %1682, 2
  %1684 = sext i32 %1683 to i64
  %1685 = getelementptr inbounds i16, i16* %975, i64 %1684
  store i16 %1681, i16* %1685, align 2
  %1686 = load i32, i32* %972, align 4
  %1687 = add nsw i32 %1686, 3
  store i32 %1687, i32* %972, align 4
  br label %1688

1688:                                             ; preds = %1667, %1595
  %1689 = load i32, i32* %973, align 4
  %1690 = add nsw i32 %1689, 6
  store i32 %1690, i32* %973, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %164) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #13
  br label %1691

1691:                                             ; preds = %1688, %1311
  %1692 = phi i8* [ %1241, %1311 ], [ %1596, %1688 ]
  br i1 %948, label %1697, label %1693

1693:                                             ; preds = %1691
  %1694 = getelementptr inbounds i8, i8* %1692, i64 16
  %1695 = getelementptr inbounds %struct.Draw, %struct.Draw* %974, i64 0, i32 0
  %1696 = load i32, i32* %1695, align 4
  br label %938

1697:                                             ; preds = %1691, %914
  %1698 = load i64, i64* %145, align 8
  %1699 = lshr i64 %1698, 1
  %1700 = trunc i64 %1699 to i32
  %1701 = and i32 %1700, 2147483647
  %1702 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)**, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*** %254, align 8
  %1703 = getelementptr inbounds %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %1702, i64 29
  %1704 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %1703, align 8
  %1705 = call %class.SkArenaAlloc* %1704(%"class.GrMeshDrawOp::Target"* %1) #13
  %1706 = zext i32 %1701 to i64
  %1707 = icmp ult i32 %1701, 89478486
  br i1 %1707, label %1709, label %1708

1708:                                             ; preds = %1697
  call void @abort() #20
  unreachable

1709:                                             ; preds = %1697
  %1710 = mul i32 %1701, 48
  %1711 = or i32 %1710, 13
  %1712 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %1705, i32 %1711, i32 8) #13
  %1713 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %1705, i64 0, i32 1
  %1714 = bitcast i8** %1713 to i64*
  %1715 = load i64, i64* %1714, align 8
  %1716 = ptrtoint i8* %1712 to i64
  %1717 = sub i64 %1716, %1715
  %1718 = trunc i64 %1717 to i32
  %1719 = zext i32 %1710 to i64
  %1720 = getelementptr inbounds i8, i8* %1712, i64 %1719
  store i8* %1720, i8** %1713, align 8
  %1721 = bitcast i8* %1720 to i32*
  store i32 %1701, i32* %1721, align 1
  %1722 = load i8*, i8** %1713, align 8
  %1723 = getelementptr inbounds i8, i8* %1722, i64 4
  store i8* %1723, i8** %1713, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %1705, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc23allocUninitializedArrayI12GrSimpleMeshEEPT_mENUlPcE_8__invokeES4_, i32 %1718) #13
  %1724 = bitcast i8* %1712 to %struct.GrSimpleMesh*
  %1725 = icmp eq i32 %1701, 0
  br i1 %1725, label %1728, label %1726

1726:                                             ; preds = %1709
  %1727 = mul nuw nsw i64 %1706, 48
  call void @llvm.memset.p0i8.i64(i8* align 8 %1712, i8 0, i64 %1727, i1 false) #13
  br label %1728

1728:                                             ; preds = %1709, %1726
  %1729 = load i64, i64* %145, align 8
  %1730 = and i64 %1729, 4294967294
  %1731 = icmp eq i64 %1730, 0
  br i1 %1731, label %1732, label %1767

1732:                                             ; preds = %1823, %1728
  %1733 = phi i32 [ 0, %1728 ], [ %1835, %1823 ]
  %1734 = load i32, i32* %255, align 4
  %1735 = add i32 %1734, 1
  %1736 = icmp sgt i32 %1735, -1
  br i1 %1736, label %1738, label %1737

1737:                                             ; preds = %1732
  call fastcc void @_ZZN9SkTDArrayIN12_GLOBAL__N_114AAConvexPathOp8MeshDrawEE11adjustCountEiENKUlvE_clEv() #13
  unreachable

1738:                                             ; preds = %1732
  %1739 = load i32, i32* %47, align 8
  %1740 = icmp slt i32 %1739, %1735
  br i1 %1740, label %1743, label %1741

1741:                                             ; preds = %1738
  %1742 = load %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"*, %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"** %256, align 8
  br label %1755

1743:                                             ; preds = %1738
  %1744 = add i32 %1734, 5
  %1745 = lshr i32 %1744, 2
  %1746 = add nuw i32 %1745, %1744
  %1747 = icmp sgt i32 %1746, -1
  br i1 %1747, label %1749, label %1748

1748:                                             ; preds = %1743
  call fastcc void @_ZZN9SkTDArrayIN12_GLOBAL__N_114AAConvexPathOp8MeshDrawEE22resizeStorageToAtLeastEiENKUlvE_clEv() #13
  unreachable

1749:                                             ; preds = %1743
  store i32 %1746, i32* %47, align 8
  %1750 = load i8*, i8** %257, align 8
  %1751 = sext i32 %1746 to i64
  %1752 = shl nsw i64 %1751, 4
  %1753 = call i8* @_Z16sk_realloc_throwPvm(i8* %1750, i64 %1752) #13
  store i8* %1753, i8** %257, align 8
  %1754 = bitcast i8* %1753 to %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"*
  br label %1755

1755:                                             ; preds = %1741, %1749
  %1756 = phi %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"* [ %1742, %1741 ], [ %1754, %1749 ]
  store i32 %1735, i32* %255, align 4
  %1757 = sext i32 %1734 to i64
  %1758 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw", %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"* %1756, i64 %1757
  %1759 = bitcast %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"* %1758 to i8**
  store i8* %1712, i8** %1759, align 8
  %1760 = getelementptr inbounds %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw", %"struct.(anonymous namespace)::AAConvexPathOp::MeshDraw"* %1756, i64 %1757, i32 1
  store i32 %1733, i32* %1760, align 8
  %1761 = load i64, i64* %145, align 8
  %1762 = and i64 %1761, 1
  %1763 = icmp eq i64 %1762, 0
  br i1 %1763, label %1766, label %1764

1764:                                             ; preds = %1755
  %1765 = load i8*, i8** %146, align 8
  call void @_Z7sk_freePv(i8* %1765) #13
  br label %1766

1766:                                             ; preds = %1755, %1764
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %142) #13
  br label %1838

1767:                                             ; preds = %1728, %1823
  %1768 = phi i64 [ %1831, %1823 ], [ 0, %1728 ]
  %1769 = load %struct.Draw*, %struct.Draw** %152, align 8
  %1770 = getelementptr inbounds %struct.GrSimpleMesh, %struct.GrSimpleMesh* %1724, i64 %1768
  %1771 = load %class.GrBuffer*, %class.GrBuffer** %139, align 8
  %1772 = icmp eq %class.GrBuffer* %1771, null
  br i1 %1772, label %1778, label %1773

1773:                                             ; preds = %1767
  %1774 = bitcast %class.GrBuffer* %1771 to void (%class.GrBuffer*)***
  %1775 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %1774, align 8
  %1776 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %1775, i64 2
  %1777 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %1776, align 8
  call void %1777(%class.GrBuffer* nonnull %1771) #13
  br label %1778

1778:                                             ; preds = %1767, %1773
  %1779 = ptrtoint %class.GrBuffer* %1771 to i64
  %1780 = getelementptr inbounds %struct.Draw, %struct.Draw* %1769, i64 %1768, i32 1
  %1781 = load i32, i32* %1780, align 4
  %1782 = load i32, i32* %24, align 4
  %1783 = getelementptr inbounds %struct.Draw, %struct.Draw* %1769, i64 %1768, i32 0
  %1784 = load i32, i32* %1783, align 4
  %1785 = trunc i32 %1784 to i16
  %1786 = add i16 %1785, -1
  %1787 = load %class.GrBuffer*, %class.GrBuffer** %135, align 8
  %1788 = icmp eq %class.GrBuffer* %1787, null
  br i1 %1788, label %1794, label %1789

1789:                                             ; preds = %1778
  %1790 = bitcast %class.GrBuffer* %1787 to void (%class.GrBuffer*)***
  %1791 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %1790, align 8
  %1792 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %1791, i64 2
  %1793 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %1792, align 8
  call void %1793(%class.GrBuffer* nonnull %1787) #13
  br label %1794

1794:                                             ; preds = %1778, %1789
  %1795 = ptrtoint %class.GrBuffer* %1787 to i64
  %1796 = load i32, i32* %22, align 4
  %1797 = getelementptr inbounds %struct.GrSimpleMesh, %struct.GrSimpleMesh* %1770, i64 0, i32 0, i32 0
  %1798 = load %class.GrBuffer*, %class.GrBuffer** %1797, align 8
  %1799 = bitcast %struct.GrSimpleMesh* %1770 to i64*
  store i64 %1779, i64* %1799, align 8
  %1800 = icmp eq %class.GrBuffer* %1798, null
  br i1 %1800, label %1806, label %1801

1801:                                             ; preds = %1794
  %1802 = bitcast %class.GrBuffer* %1798 to void (%class.GrBuffer*)***
  %1803 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %1802, align 8
  %1804 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %1803, i64 3
  %1805 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %1804, align 8
  call void %1805(%class.GrBuffer* nonnull %1798) #13
  br label %1806

1806:                                             ; preds = %1801, %1794
  %1807 = getelementptr inbounds %struct.GrSimpleMesh, %struct.GrSimpleMesh* %1724, i64 %1768, i32 1
  store i32 %1781, i32* %1807, align 8
  %1808 = getelementptr inbounds %struct.GrSimpleMesh, %struct.GrSimpleMesh* %1724, i64 %1768, i32 2
  store i32 0, i32* %1808, align 4
  %1809 = getelementptr inbounds %struct.GrSimpleMesh, %struct.GrSimpleMesh* %1724, i64 %1768, i32 4
  store i32 %1782, i32* %1809, align 4
  %1810 = getelementptr inbounds %struct.GrSimpleMesh, %struct.GrSimpleMesh* %1724, i64 %1768, i32 5
  store i16 0, i16* %1810, align 8
  %1811 = getelementptr inbounds %struct.GrSimpleMesh, %struct.GrSimpleMesh* %1724, i64 %1768, i32 6
  store i16 %1786, i16* %1811, align 2
  %1812 = getelementptr inbounds %struct.GrSimpleMesh, %struct.GrSimpleMesh* %1724, i64 %1768, i32 7
  store i8 0, i8* %1812, align 4
  %1813 = getelementptr inbounds %struct.GrSimpleMesh, %struct.GrSimpleMesh* %1724, i64 %1768, i32 8
  %1814 = getelementptr inbounds %class.sk_sp.237, %class.sk_sp.237* %1813, i64 0, i32 0
  %1815 = load %class.GrBuffer*, %class.GrBuffer** %1814, align 8
  %1816 = bitcast %class.sk_sp.237* %1813 to i64*
  store i64 %1795, i64* %1816, align 8
  %1817 = icmp eq %class.GrBuffer* %1815, null
  br i1 %1817, label %1823, label %1818

1818:                                             ; preds = %1806
  %1819 = bitcast %class.GrBuffer* %1815 to void (%class.GrBuffer*)***
  %1820 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %1819, align 8
  %1821 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %1820, i64 3
  %1822 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %1821, align 8
  call void %1822(%class.GrBuffer* nonnull %1815) #13
  br label %1823

1823:                                             ; preds = %1806, %1818
  %1824 = getelementptr inbounds %struct.GrSimpleMesh, %struct.GrSimpleMesh* %1724, i64 %1768, i32 10
  store i32 %1796, i32* %1824, align 4
  %1825 = load i32, i32* %1780, align 4
  %1826 = load i32, i32* %24, align 4
  %1827 = add nsw i32 %1826, %1825
  store i32 %1827, i32* %24, align 4
  %1828 = load i32, i32* %1783, align 4
  %1829 = load i32, i32* %22, align 4
  %1830 = add nsw i32 %1829, %1828
  store i32 %1830, i32* %22, align 4
  %1831 = add nuw nsw i64 %1768, 1
  %1832 = load i64, i64* %145, align 8
  %1833 = lshr i64 %1832, 1
  %1834 = trunc i64 %1833 to i32
  %1835 = and i32 %1834, 2147483647
  %1836 = zext i32 %1835 to i64
  %1837 = icmp ult i64 %1831, %1836
  br i1 %1837, label %1767, label %1732

1838:                                             ; preds = %1766, %895
  %1839 = phi i32 [ 0, %1766 ], [ 1, %895 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %140) #13
  %1840 = load %class.GrBuffer*, %class.GrBuffer** %139, align 8
  %1841 = icmp eq %class.GrBuffer* %1840, null
  br i1 %1841, label %1847, label %1842

1842:                                             ; preds = %1838
  %1843 = bitcast %class.GrBuffer* %1840 to void (%class.GrBuffer*)***
  %1844 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %1843, align 8
  %1845 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %1844, i64 3
  %1846 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %1845, align 8
  call void %1846(%class.GrBuffer* nonnull %1840) #13
  br label %1847

1847:                                             ; preds = %1838, %1842
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #13
  br label %1848

1848:                                             ; preds = %1847, %887
  %1849 = phi i32 [ %1839, %1847 ], [ 1, %887 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %136) #13
  %1850 = load %class.GrBuffer*, %class.GrBuffer** %135, align 8
  %1851 = icmp eq %class.GrBuffer* %1850, null
  br i1 %1851, label %1857, label %1852

1852:                                             ; preds = %1848
  %1853 = bitcast %class.GrBuffer* %1850 to void (%class.GrBuffer*)***
  %1854 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %1853, align 8
  %1855 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %1854, i64 3
  %1856 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %1855, align 8
  call void %1856(%class.GrBuffer* nonnull %1850) #13
  br label %1857

1857:                                             ; preds = %1848, %1852
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #13
  br label %1858

1858:                                             ; preds = %879, %292, %1857
  %1859 = phi i32 [ %1849, %1857 ], [ 4, %292 ], [ 4, %879 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #13
  %1860 = load i64, i64* %74, align 8
  %1861 = and i64 %1860, 1
  %1862 = icmp eq i64 %1861, 0
  br i1 %1862, label %1865, label %1863

1863:                                             ; preds = %1858
  %1864 = load i8*, i8** %75, align 8
  call void @_Z7sk_freePv(i8* %1864) #13
  br label %1865

1865:                                             ; preds = %1858, %1863
  call void @llvm.lifetime.end.p0i8(i64 504, i8* nonnull %71) #13
  %1866 = load %class.SkPath*, %class.SkPath** %68, align 8
  %1867 = icmp eq %class.SkPath* %1866, null
  br i1 %1867, label %1869, label %1868

1868:                                             ; preds = %1865
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %1866) #13
  store %class.SkPath* null, %class.SkPath** %68, align 8
  br label %1869

1869:                                             ; preds = %1865, %1868
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #13
  switch i32 %1859, label %1873 [
    i32 0, label %1870
    i32 4, label %1870
  ]

1870:                                             ; preds = %1869, %1869
  %1871 = add nuw nsw i64 %264, 1
  %1872 = icmp eq i64 %1871, %258
  br i1 %1872, label %1873, label %263

1873:                                             ; preds = %1869, %1870, %62, %36
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_114AAConvexPathOp8PathDataELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.235* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkTArray.235, %class.SkTArray.235* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 2147483647
  %8 = add nsw i32 %7, %1
  %9 = sext i32 %8 to i64
  %10 = lshr i64 %4, 33
  %11 = icmp slt i64 %10, %9
  %12 = mul nsw i64 %9, 3
  %13 = icmp sle i64 %10, %12
  %14 = and i64 %4, 1
  %15 = icmp eq i64 %14, 0
  %16 = or i1 %15, %13
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = and i64 %4, 4294967296
  %19 = icmp eq i64 %18, 0
  br label %20

20:                                               ; preds = %2, %17
  %21 = phi i1 [ false, %2 ], [ %19, %17 ]
  %22 = or i1 %11, %21
  br i1 %22, label %23, label %61

23:                                               ; preds = %20
  %24 = add nsw i64 %9, 1
  %25 = ashr i64 %24, 1
  %26 = add nsw i64 %9, 7
  %27 = add nsw i64 %26, %25
  %28 = and i64 %27, -8
  %29 = icmp eq i64 %28, %10
  br i1 %29, label %61, label %30

30:                                               ; preds = %23
  %31 = icmp slt i64 %28, 2147483647
  %32 = select i1 %31, i64 %28, i64 2147483647
  %33 = icmp sgt i64 %32, -2147483647
  %34 = select i1 %33, i64 %32, i64 -2147483647
  %35 = shl i64 %34, 33
  %36 = and i64 %4, 8589934591
  %37 = or i64 %35, %36
  store i64 %37, i64* %3, align 8
  %38 = and i64 %34, 2147483647
  %39 = tail call i8* @_Z15sk_malloc_throwmm(i64 %38, i64 72) #13
  %40 = load i64, i64* %3, align 8
  %41 = lshr i64 %40, 1
  %42 = and i64 %41, 2147483647
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %30
  %45 = mul nuw nsw i64 %42, 72
  %46 = bitcast %class.SkTArray.235* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %47, i64 %45, i1 false) #13
  %48 = load i64, i64* %3, align 8
  br label %49

49:                                               ; preds = %30, %44
  %50 = phi i64 [ %40, %30 ], [ %48, %44 ]
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  %53 = bitcast %class.SkTArray.235* %0 to i8**
  br i1 %52, label %57, label %54

54:                                               ; preds = %49
  %55 = load i8*, i8** %53, align 8
  tail call void @_Z7sk_freePv(i8* %55) #13
  %56 = load i64, i64* %3, align 8
  br label %57

57:                                               ; preds = %49, %54
  %58 = phi i64 [ %56, %54 ], [ %50, %49 ]
  store i8* %39, i8** %53, align 8
  %59 = and i64 %58, -4294967298
  %60 = or i64 %59, 1
  store i64 %60, i64* %3, align 8
  br label %61

61:                                               ; preds = %57, %23, %20
  ret void
}

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #1

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN24GrSimpleMeshDrawOpHelperD2Ev(%class.GrSimpleMeshDrawOpHelper*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD2Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.GrOp*, %class.GrOp** %3, align 8
  store %class.GrOp* null, %class.GrOp** %3, align 8
  %5 = icmp eq %class.GrOp* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrOp* %4 to void (%class.GrOp*)***
  %8 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %8, i64 1
  %10 = load void (%class.GrOp*)*, void (%class.GrOp*)** %9, align 8
  tail call void %10(%class.GrOp* nonnull %4) #13
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD0Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrOp*, %"class.std::__1::function.247"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps(%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline*, %"class.std::__1::function.247"*) local_unnamed_addr #1

declare void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet*, %"class.std::__1::function.247"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrSimpleMeshDrawOpHelperWithStencil* dereferenceable(24), %class.GrCaps* dereferenceable(232), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #1

declare void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState*, %struct.GrSimpleMesh* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass*, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #1

declare i32 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelperWithStencil*) local_unnamed_addr #1

declare i32 @_ZN35GrSimpleMeshDrawOpHelperWithStencil18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32, i32, %struct.SkRGBA4f*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %class.GrProgramInfo* @_ZN35GrSimpleMeshDrawOpHelperWithStencil28createProgramInfoWithStencilEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), %class.GrGeometryProcessor*, i8 zeroext, i32, i32) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #1

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.QuadEdgeEffect* @_ZN12SkArenaAlloc4makeIZN14QuadEdgeEffect4MakeEPS_RK8SkMatrixbbEUlPvE_EEDTclfp_LDnEEEOT_(%class.SkArenaAlloc*, %class.anon* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %0, i32 185, i32 8) #13
  %4 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = ptrtoint i8* %3 to i64
  %8 = sub i64 %7, %6
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds i8, i8* %3, i64 176
  store i8* %10, i8** %4, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %0, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZN14QuadEdgeEffect4MakeEPS_RK8SkMatrixbbEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESB_, i32 %9) #13
  %11 = bitcast i8* %3 to %class.QuadEdgeEffect*
  %12 = bitcast %class.anon* %1 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = bitcast i8* %3 to %class.GrGeometryProcessor*
  tail call void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor* %21, i32 90) #13
  %22 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV14QuadEdgeEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %3, i64 80
  %24 = getelementptr inbounds i8, i8* %3, i64 112
  %25 = getelementptr inbounds i8, i8* %3, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 48, i1 false) #13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 4 %13, i64 40, i1 false) #13
  %26 = getelementptr inbounds i8, i8* %3, i64 168
  store i8 %16, i8* %26, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp to i8*), i64 16, i1 false) #13
  %27 = select i1 %20, i64 133143986193, i64 133143986179
  %28 = getelementptr inbounds i8, i8* %3, i64 96
  %29 = bitcast i8* %28 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %3, i64 104
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.7 to i8*), i64 16, i1 false) #13
  %32 = getelementptr inbounds i8, i8* %3, i64 24
  %33 = bitcast i8* %32 to i8**
  store i8* %23, i8** %33, align 8
  %34 = getelementptr inbounds i8, i8* %3, i64 32
  %35 = bitcast i8* %34 to i32*
  store i32 3, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %3, i64 36
  %37 = bitcast i8* %36 to i32*
  %38 = getelementptr inbounds i8, i8* %3, i64 40
  %39 = bitcast i8* %38 to i64*
  %40 = trunc i64 %27 to i32
  store i64 8, i64* %39, align 8
  store i32 2, i32* %37, align 4
  %41 = add nsw i32 %40, -1
  %42 = lshr exact i32 %41, 1
  %43 = trunc i32 %42 to i16
  %44 = lshr i16 771, %43
  %45 = and i16 %44, 1
  %46 = icmp ne i16 %45, 0
  call void @llvm.assume(i1 %46)
  %47 = zext i32 %42 to i64
  %48 = getelementptr inbounds [10 x i64], [10 x i64]* @switch.table._ZN12SkArenaAlloc4makeIZN14QuadEdgeEffect4MakeEPS_RK8SkMatrixbbEUlPvE_EEDTclfp_LDnEEEOT_, i64 0, i64 %47
  %49 = load i64, i64* %48, align 8
  store i32 3, i32* %37, align 4
  store i64 %49, i64* %39, align 8
  ret %class.QuadEdgeEffect* %11
}

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #1

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZN14QuadEdgeEffect4MakeEPS_RK8SkMatrixbbEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESB_(i8*) #4 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -185
  %3 = bitcast i8* %2 to %class.QuadEdgeEffect*
  %4 = bitcast i8* %2 to void (%class.QuadEdgeEffect*)***
  %5 = load void (%class.QuadEdgeEffect*)**, void (%class.QuadEdgeEffect*)*** %4, align 8
  %6 = load void (%class.QuadEdgeEffect*)*, void (%class.QuadEdgeEffect*)** %5, align 8
  tail call void %6(%class.QuadEdgeEffect* %3) #13
  ret i8* %2
}

declare void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11GrProcessorD2Ev(%class.GrProcessor*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14QuadEdgeEffectD0Ev(%class.QuadEdgeEffect*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.QuadEdgeEffect* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK14QuadEdgeEffect4nameEv(%class.QuadEdgeEffect*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14QuadEdgeEffect19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.QuadEdgeEffect*, %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.QuadEdgeEffect, %class.QuadEdgeEffect* %0, i64 0, i32 6
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = zext i8 %5 to i32
  %7 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %8 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %8, i64 2
  %10 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %9, align 8
  tail call void %10(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0)) #13
  %11 = getelementptr inbounds %class.QuadEdgeEffect, %class.QuadEdgeEffect* %0, i64 0, i32 5
  %12 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %1, i64 0, i32 2
  %13 = bitcast i56* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 1048576
  %16 = icmp eq i64 %15, 0
  %17 = getelementptr inbounds %class.QuadEdgeEffect, %class.QuadEdgeEffect* %0, i64 0, i32 5, i32 1
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %39

19:                                               ; preds = %3
  %20 = trunc i32 %18 to i8
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  %23 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %11) #13
  %24 = zext i8 %23 to i32
  store i32 %24, i32* %17, align 4
  br label %25

25:                                               ; preds = %22, %19
  %26 = phi i32 [ %24, %22 ], [ %18, %19 ]
  %27 = and i32 %26, 15
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %51, label %29

29:                                               ; preds = %25
  %30 = trunc i32 %26 to i8
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %11) #13
  %34 = zext i8 %33 to i32
  store i32 %34, i32* %17, align 4
  br label %35

35:                                               ; preds = %32, %29
  %36 = phi i32 [ %34, %32 ], [ %26, %29 ]
  %37 = and i32 %36, 12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %35, %3
  %40 = phi i32 [ %36, %35 ], [ %18, %3 ]
  %41 = and i32 %40, 192
  %42 = icmp eq i32 %41, 128
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  %44 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %11) #13
  %45 = zext i8 %44 to i32
  store i32 %45, i32* %17, align 4
  br label %46

46:                                               ; preds = %43, %39
  %47 = phi i32 [ %45, %43 ], [ %40, %39 ]
  %48 = and i32 %47, 8
  %49 = icmp eq i32 %48, 0
  %50 = select i1 %49, i32 2, i32 3
  br label %51

51:                                               ; preds = %25, %35, %46
  %52 = phi i32 [ 0, %25 ], [ 1, %35 ], [ %50, %46 ]
  %53 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %7, align 8
  %54 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %53, i64 2
  %55 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %54, align 8
  tail call void %55(%class.GrProcessorKeyBuilder* %2, i32 2, i32 %52, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0)) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGLSLGeometryProcessor* @_ZNK14QuadEdgeEffect18createGLSLInstanceERK12GrShaderCaps(%class.QuadEdgeEffect*, %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 72) #19
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to i64*
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to %"struct.GrGLSLGeometryProcessor::TransformInfo"**
  store %"struct.GrGLSLGeometryProcessor::TransformInfo"* null, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %8, align 8
  store i64 1, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN14QuadEdgeEffect13GLSLProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13InvalidMatrixEv() #13
  %11 = bitcast %class.SkMatrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %11, i64 40, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %3, i64 64
  %13 = bitcast i8* %12 to i32*
  store i32 -1, i32* %13, align 4
  %14 = bitcast i8* %3 to %class.GrGLSLGeometryProcessor*
  ret %class.GrGLSLGeometryProcessor* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor16onTextureSamplerEi(%class.GrGeometryProcessor*, i32) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.8, i64 0, i64 0), i32 304, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i64 0, i64 0)) #20
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #3

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13InvalidMatrixEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD2Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.258, %class.SkTArray.258* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %19, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %26, label %23

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %18, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15
  tail call void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"* %17) #13
  %18 = add nuw nsw i64 %15, 1
  %19 = load i64, i64* %4, align 8
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = icmp ult i64 %18, %21
  br i1 %22, label %14, label %10

23:                                               ; preds = %10
  %24 = bitcast %class.SkTArray.258* %3 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_Z7sk_freePv(i8* %25) #13
  br label %26

26:                                               ; preds = %10, %23
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14QuadEdgeEffect13GLSLProcessorD0Ev(%"class.QuadEdgeEffect::GLSLProcessor"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.QuadEdgeEffect::GLSLProcessor", %"class.QuadEdgeEffect::GLSLProcessor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.QuadEdgeEffect::GLSLProcessor", %"class.QuadEdgeEffect::GLSLProcessor"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.QuadEdgeEffect::GLSLProcessor", %"class.QuadEdgeEffect::GLSLProcessor"* %0, i64 0, i32 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.258, %class.SkTArray.258* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %24, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %31, label %28

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %23, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %17) #13
  %18 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %18) #13
  %19 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %19) #13
  %20 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %20) #13
  %21 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %21) #13
  %22 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %22) #13
  %23 = add nuw nsw i64 %15, 1
  %24 = load i64, i64* %4, align 8
  %25 = lshr i64 %24, 1
  %26 = and i64 %25, 2147483647
  %27 = icmp ult i64 %23, %26
  br i1 %27, label %14, label %10

28:                                               ; preds = %10
  %29 = bitcast %class.SkTArray.258* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_Z7sk_freePv(i8* %30) #13
  br label %31

31:                                               ; preds = %10, %28
  %32 = bitcast %"class.QuadEdgeEffect::GLSLProcessor"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14QuadEdgeEffect13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor(%"class.QuadEdgeEffect::GLSLProcessor"*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144), %class.GrGeometryProcessor* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.QuadEdgeEffect::GLSLProcessor", %"class.QuadEdgeEffect::GLSLProcessor"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 1, i32 4
  %7 = bitcast %"class.GrGeometryProcessor::AttributeSet"* %6 to %class.SkMatrix*
  %8 = getelementptr inbounds %"class.QuadEdgeEffect::GLSLProcessor", %"class.QuadEdgeEffect::GLSLProcessor"* %0, i64 0, i32 1
  tail call void @_ZN23GrGLSLGeometryProcessor12SetTransformERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK16GrResourceHandleINS0_17UniformHandleKindEERK8SkMatrixPSB_(%class.GrGLSLProgramDataManager* dereferenceable(8) %1, %class.GrShaderCaps* dereferenceable(144) %2, %class.GrResourceHandle* dereferenceable(4) %5, %class.SkMatrix* dereferenceable(40) %7, %class.SkMatrix* %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.13, i64 0, i64 0), i32 139, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #20
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.13, i64 0, i64 0), i32 145, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #20
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14QuadEdgeEffect13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE(%"class.QuadEdgeEffect::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"* dereferenceable(88), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.GrGLSLVarying, align 8
  %6 = alloca %class.GrShaderVar, align 8
  %7 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 6
  %8 = bitcast %class.GrGeometryProcessor** %7 to %class.QuadEdgeEffect**
  %9 = load %class.QuadEdgeEffect*, %class.QuadEdgeEffect** %8, align 8
  %10 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 0
  %11 = load %class.GrGLSLVertexBuilder*, %class.GrGLSLVertexBuilder** %10, align 8
  %12 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 2
  %13 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %12, align 8
  %14 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 3
  %15 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %14, align 8
  %16 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 4
  %17 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %16, align 8
  %18 = bitcast %class.QuadEdgeEffect* %9 to %class.GrGeometryProcessor*
  tail call void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler* %15, %class.GrGeometryProcessor* dereferenceable(80) %18) #13
  %19 = bitcast %class.GrGLSLVarying* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #13
  %20 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 0
  %21 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 1
  %22 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 2
  %23 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %5, i64 0, i32 5
  store i32 24, i32* %20, align 8
  %24 = bitcast i32* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 36, i1 false)
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), %class.GrGLSLVarying* nonnull %5, i32 0) #13
  %25 = bitcast %class.GrGLSLVertexBuilder* %11 to %class.GrGLSLShaderBuilder*
  %26 = load i8*, i8** %22, align 8
  %27 = getelementptr inbounds %class.QuadEdgeEffect, %class.QuadEdgeEffect* %9, i64 0, i32 4, i32 0
  %28 = load i8*, i8** %27, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i8* %26, i8* %28)
  %29 = bitcast %class.GrGLSLFPFragmentBuilder* %13 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr i8, i8* %30, i64 -24
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %class.GrGLSLFPFragmentBuilder* %13 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 %33
  %36 = bitcast i8* %35 to %class.GrGLSLShaderBuilder*
  %37 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 7
  %38 = load i8*, i8** %37, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %36, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), i8* %38)
  %39 = getelementptr inbounds %class.QuadEdgeEffect, %class.QuadEdgeEffect* %9, i64 0, i32 3
  %40 = load i8*, i8** %37, align 8
  call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %15, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %39, i8* %40, i32 0) #13
  %41 = getelementptr inbounds %class.QuadEdgeEffect, %class.QuadEdgeEffect* %9, i64 0, i32 2, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderPNS_8GrGPArgsEPKc(%class.GrGLSLVertexBuilder* %11, %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i8* %42) #13
  %43 = getelementptr inbounds %class.QuadEdgeEffect, %class.QuadEdgeEffect* %9, i64 0, i32 6
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %61, label %46

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 5
  %48 = load %class.GrShaderCaps*, %class.GrShaderCaps** %47, align 8
  %49 = load i8*, i8** %41, align 8, !noalias !4
  %50 = getelementptr inbounds %class.QuadEdgeEffect, %class.QuadEdgeEffect* %9, i64 0, i32 2, i32 2
  %51 = load i32, i32* %50, align 4, !noalias !4
  %52 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13, !noalias !4
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %4, i8* %49) #13, !noalias !4
  %53 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 0
  store i32 %51, i32* %53, align 8, !alias.scope !4
  %54 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 1
  store i32 2, i32* %54, align 4, !alias.scope !4
  %55 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 2
  store i32 0, i32* %55, align 8, !alias.scope !4
  %56 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %56, %class.SkString* nonnull dereferenceable(8) %4) #13
  %57 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %57) #13
  %58 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %6, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %58) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13, !noalias !4
  %59 = getelementptr inbounds %class.QuadEdgeEffect, %class.QuadEdgeEffect* %9, i64 0, i32 5
  %60 = getelementptr inbounds %"class.QuadEdgeEffect::GLSLProcessor", %"class.QuadEdgeEffect::GLSLProcessor"* %0, i64 0, i32 2
  call void @_ZN23GrGLSLGeometryProcessor15WriteLocalCoordEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsE11GrShaderVarRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder* %11, %class.GrGLSLUniformHandler* %17, %class.GrShaderCaps* dereferenceable(144) %48, %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, %class.GrShaderVar* nonnull %6, %class.SkMatrix* dereferenceable(40) %59, %class.GrResourceHandle* %60) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* %58) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* %57) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* %56) #13
  br label %61

61:                                               ; preds = %3, %46
  %62 = load i8*, i8** %29, align 8
  %63 = getelementptr i8, i8* %62, i64 -24
  %64 = bitcast i8* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds i8, i8* %34, i64 %65
  %67 = bitcast i8* %66 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %67, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0))
  %68 = load i8*, i8** %29, align 8
  %69 = getelementptr i8, i8* %68, i64 -24
  %70 = bitcast i8* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds i8, i8* %34, i64 %71
  %73 = bitcast i8* %72 to %class.GrGLSLShaderBuilder*
  %74 = load i8*, i8** %23, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %73, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i64 0, i64 0), i8* %74)
  %75 = load i8*, i8** %29, align 8
  %76 = getelementptr i8, i8* %75, i64 -24
  %77 = bitcast i8* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds i8, i8* %34, i64 %78
  %80 = bitcast i8* %79 to %class.GrGLSLShaderBuilder*
  %81 = load i8*, i8** %23, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %80, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i64 0, i64 0), i8* %81)
  %82 = load i8*, i8** %29, align 8
  %83 = getelementptr i8, i8* %82, i64 -24
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds i8, i8* %34, i64 %85
  %87 = bitcast i8* %86 to %class.GrGLSLShaderBuilder*
  %88 = load i8*, i8** %23, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %87, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20, i64 0, i64 0), i8* %88, i8* %88)
  %89 = load i8*, i8** %29, align 8
  %90 = getelementptr i8, i8* %89, i64 -24
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds i8, i8* %34, i64 %92
  %94 = bitcast i8* %93 to %class.GrGLSLShaderBuilder*
  %95 = load i8*, i8** %23, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %94, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.21, i64 0, i64 0), i8* %95, i8* %95)
  %96 = load i8*, i8** %29, align 8
  %97 = getelementptr i8, i8* %96, i64 -24
  %98 = bitcast i8* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds i8, i8* %34, i64 %99
  %101 = bitcast i8* %100 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %101, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0))
  %102 = load i8*, i8** %29, align 8
  %103 = getelementptr i8, i8* %102, i64 -24
  %104 = bitcast i8* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds i8, i8* %34, i64 %105
  %107 = bitcast i8* %106 to %class.GrGLSLShaderBuilder*
  %108 = load i8*, i8** %23, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %107, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.23, i64 0, i64 0), i8* %108, i8* %108)
  %109 = load i8*, i8** %29, align 8
  %110 = getelementptr i8, i8* %109, i64 -24
  %111 = bitcast i8* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds i8, i8* %34, i64 %112
  %114 = bitcast i8* %113 to %class.GrGLSLShaderBuilder*
  %115 = load i8*, i8** %23, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %114, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24, i64 0, i64 0), i8* %115, i8* %115, i8* %115)
  %116 = load i8*, i8** %29, align 8
  %117 = getelementptr i8, i8* %116, i64 -24
  %118 = bitcast i8* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds i8, i8* %34, i64 %119
  %121 = bitcast i8* %120 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %121, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.25, i64 0, i64 0))
  %122 = load i8*, i8** %29, align 8
  %123 = getelementptr i8, i8* %122, i64 -24
  %124 = bitcast i8* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds i8, i8* %34, i64 %125
  %127 = bitcast i8* %126 to %class.GrGLSLShaderBuilder*
  %128 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %129 = load i8*, i8** %128, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %127, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26, i64 0, i64 0), i8* %129)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD0Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %2) #13
  %3 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #13
  %4 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %4) #13
  %5 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %5) #13
  %6 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %6) #13
  %7 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %7) #13
  ret void
}

declare void @_ZN23GrGLSLGeometryProcessor12SetTransformERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK16GrResourceHandleINS0_17UniformHandleKindEERK8SkMatrixPSB_(%class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144), %class.GrResourceHandle* dereferenceable(4), %class.SkMatrix* dereferenceable(40), %class.SkMatrix*) local_unnamed_addr #1

declare void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler*, %class.GrGeometryProcessor* dereferenceable(80)) local_unnamed_addr #1

declare void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler*, i8*, %class.GrGLSLVarying*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #13
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

declare void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler*, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16), i8*, i32) local_unnamed_addr #1

declare void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderPNS_8GrGPArgsEPKc(%class.GrGLSLVertexBuilder*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*, i8*) local_unnamed_addr #1

declare void @_ZN23GrGLSLGeometryProcessor15WriteLocalCoordEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsE11GrShaderVarRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps* dereferenceable(144), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*, %class.GrShaderVar*, %class.SkMatrix* dereferenceable(40), %class.GrResourceHandle*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #13

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #13

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #1

declare void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp*, %"class.GrMeshDrawOp::Target"*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #1

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @_ZZN9SkTDArrayIN12_GLOBAL__N_114AAConvexPathOp8MeshDrawEE22resizeStorageToAtLeastEiENKUlvE_clEv() unnamed_addr #14 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.31, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i64 0, i64 0)) #20
  unreachable
}

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #1

declare void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"*, %class.SkPath* dereferenceable(16), i1 zeroext) unnamed_addr #1

declare i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"*, %struct.SkPoint*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL22update_degenerate_testP18DegenerateTestDataRK7SkPoint(%struct.DegenerateTestData*, %struct.SkPoint* nocapture readonly dereferenceable(8)) unnamed_addr #8 {
  %3 = getelementptr inbounds %struct.DegenerateTestData, %struct.DegenerateTestData* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %57 [
    i32 0, label %5
    i32 1, label %10
    i32 2, label %41
    i32 3, label %58
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.DegenerateTestData, %struct.DegenerateTestData* %0, i64 0, i32 1
  %7 = bitcast %struct.SkPoint* %1 to i64*
  %8 = bitcast %struct.SkPoint* %6 to i64*
  %9 = load i64, i64* %7, align 4
  store i64 %9, i64* %8, align 4
  store i32 1, i32* %3, align 4
  br label %58

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.DegenerateTestData, %struct.DegenerateTestData* %0, i64 0, i32 1, i32 0
  %12 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = bitcast float* %11 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  %16 = fsub <2 x float> %13, %15
  %17 = fmul <2 x float> %16, %16
  %18 = extractelement <2 x float> %17, i32 0
  %19 = extractelement <2 x float> %17, i32 1
  %20 = fadd float %18, %19
  %21 = fcmp ogt float %20, 3.906250e-03
  br i1 %21, label %22, label %58

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.DegenerateTestData, %struct.DegenerateTestData* %0, i64 0, i32 1, i32 1
  %24 = getelementptr inbounds %struct.DegenerateTestData, %struct.DegenerateTestData* %0, i64 0, i32 2
  %25 = bitcast %struct.SkPoint* %24 to <2 x float>*
  store <2 x float> %16, <2 x float>* %25, align 4
  %26 = tail call zeroext i1 @_ZN7SkPoint9normalizeEv(%struct.SkPoint* %24) #13
  %27 = getelementptr inbounds %struct.DegenerateTestData, %struct.DegenerateTestData* %0, i64 0, i32 2, i32 1
  %28 = load float, float* %27, align 4
  %29 = insertelement <2 x float> undef, float %28, i32 0
  %30 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %24, i64 0, i32 0
  %31 = load float, float* %30, align 4
  %32 = fsub float -0.000000e+00, %31
  %33 = insertelement <2 x float> %29, float %32, i32 1
  store <2 x float> %33, <2 x float>* %25, align 4
  %34 = load float, float* %11, align 4
  %35 = fmul float %34, %28
  %36 = load float, float* %23, align 4
  %37 = fmul float %36, %32
  %38 = fadd float %35, %37
  %39 = fsub float -0.000000e+00, %38
  %40 = getelementptr inbounds %struct.DegenerateTestData, %struct.DegenerateTestData* %0, i64 0, i32 3
  store float %39, float* %40, align 4
  store i32 2, i32* %3, align 4
  br label %58

41:                                               ; preds = %2
  %42 = getelementptr inbounds %struct.DegenerateTestData, %struct.DegenerateTestData* %0, i64 0, i32 2, i32 0
  %43 = bitcast float* %42 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 4
  %45 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %46 = load <2 x float>, <2 x float>* %45, align 4
  %47 = fmul <2 x float> %44, %46
  %48 = extractelement <2 x float> %47, i32 0
  %49 = extractelement <2 x float> %47, i32 1
  %50 = fadd float %48, %49
  %51 = getelementptr inbounds %struct.DegenerateTestData, %struct.DegenerateTestData* %0, i64 0, i32 3
  %52 = load float, float* %51, align 4
  %53 = fadd float %52, %50
  %54 = tail call float @llvm.fabs.f32(float %53)
  %55 = fcmp ogt float %54, 6.250000e-02
  br i1 %55, label %56, label %58

56:                                               ; preds = %41
  store i32 3, i32* %3, align 4
  br label %58

57:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.28, i64 0, i64 0), i32 221, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.35, i64 0, i64 0)) #20
  unreachable

58:                                               ; preds = %41, %56, %10, %22, %2, %5
  ret void
}

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN7SkPoint9normalizeEv(%struct.SkPoint*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI7SegmentLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.286*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.286, %class.SkTArray.286* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 44) #13
  %45 = load i64, i64* %4, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %35
  %50 = mul nuw nsw i64 %47, 44
  %51 = bitcast %class.SkTArray.286* %0 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %52, i64 %50, i1 false) #13
  %53 = load i64, i64* %4, align 8
  br label %54

54:                                               ; preds = %35, %49
  %55 = phi i64 [ %45, %35 ], [ %53, %49 ]
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  %58 = bitcast %class.SkTArray.286* %0 to i8**
  br i1 %57, label %62, label %59

59:                                               ; preds = %54
  %60 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %60) #13
  %61 = load i64, i64* %4, align 8
  br label %62

62:                                               ; preds = %54, %59
  %63 = phi i64 [ %61, %59 ], [ %55, %54 ]
  store i8* %44, i8** %58, align 8
  %64 = and i64 %63, -4294967298
  %65 = or i64 %64, 1
  store i64 %65, i64* %4, align 8
  br label %66

66:                                               ; preds = %62, %32, %21
  ret void
}

declare float @_ZN11SkPointPriv31DistanceToLineSegmentBetweenSqdERK7SkPointS2_S2_(%struct.SkPoint* dereferenceable(8), %struct.SkPoint* dereferenceable(8), %struct.SkPoint* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK7SkConic15computeQuadPOW2Ef(%struct.SkConic*, float) local_unnamed_addr #1

declare i32 @_ZNK7SkConic17chopIntoQuadsPOW2EP7SkPointi(%struct.SkConic*, %struct.SkPoint*, i32) local_unnamed_addr #1

declare void @_ZN11GrPathUtils38convertCubicToQuadsConstrainToTangentsEPK7SkPointf20SkPathFirstDirectionP8SkTArrayIS0_Lb1EE(%struct.SkPoint*, float, i32, %class.SkTArray.298*) local_unnamed_addr #1

declare void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint*, float, %struct.SkPoint*) local_unnamed_addr #1

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI4DrawLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.289*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.289, %class.SkTArray.289* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #13
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 2
  %47 = and i64 %46, 17179869176
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray.289* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #13
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray.289* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #13
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #16

declare float @_ZN11SkPointPriv24DistanceToLineBetweenSqdERK7SkPointS2_S2_PNS_4SideE(%struct.SkPoint* dereferenceable(8), %struct.SkPoint* dereferenceable(8), %struct.SkPoint* dereferenceable(8), i32*) local_unnamed_addr #1

declare void @_ZN11GrPathUtils12QuadUVMatrix3setEPK7SkPoint(%"class.GrPathUtils::QuadUVMatrix"*, %struct.SkPoint*) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #17

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc23allocUninitializedArrayI12GrSimpleMeshEEPT_mENUlPcE_8__invokeES4_(i8*) #4 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -13
  %3 = bitcast i8* %2 to i32*
  %4 = load i32, i32* %3, align 1
  %5 = zext i32 %4 to i64
  %6 = mul nsw i64 %5, -48
  %7 = getelementptr inbounds i8, i8* %2, i64 %6
  %8 = bitcast i8* %7 to %struct.GrSimpleMesh*
  %9 = icmp eq i32 %4, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %1, %29
  %11 = phi i64 [ %30, %29 ], [ 0, %1 ]
  %12 = getelementptr inbounds %struct.GrSimpleMesh, %struct.GrSimpleMesh* %8, i64 %11, i32 8, i32 0
  %13 = load %class.GrBuffer*, %class.GrBuffer** %12, align 8
  %14 = icmp eq %class.GrBuffer* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = bitcast %class.GrBuffer* %13 to void (%class.GrBuffer*)***
  %17 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %17, i64 3
  %19 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %18, align 8
  tail call void %19(%class.GrBuffer* nonnull %13) #13
  br label %20

20:                                               ; preds = %15, %10
  %21 = getelementptr inbounds %struct.GrSimpleMesh, %struct.GrSimpleMesh* %8, i64 %11, i32 0, i32 0
  %22 = load %class.GrBuffer*, %class.GrBuffer** %21, align 8
  %23 = icmp eq %class.GrBuffer* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %class.GrBuffer* %22 to void (%class.GrBuffer*)***
  %26 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %26, i64 3
  %28 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %27, align 8
  tail call void %28(%class.GrBuffer* nonnull %22) #13
  br label %29

29:                                               ; preds = %24, %20
  %30 = add nuw nsw i64 %11, 1
  %31 = icmp eq i64 %30, %5
  br i1 %31, label %32, label %10

32:                                               ; preds = %29, %1
  ret i8* %7
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @_ZZN9SkTDArrayIN12_GLOBAL__N_114AAConvexPathOp8MeshDrawEE11adjustCountEiENKUlvE_clEv() unnamed_addr #14 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.31, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #20
  unreachable
}

declare void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet*, %class.GrPaint* dereferenceable(48)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j(%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #21
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #14 comdat {
  tail call void @abort() #20
  unreachable
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #18

; Function Attrs: nounwind
declare void @llvm.assume(i1) #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nofree nounwind readonly }
attributes #19 = { builtin nounwind }
attributes #20 = { noreturn nounwind }
attributes #21 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv: argument 0"}
!6 = distinct !{!6, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv"}
