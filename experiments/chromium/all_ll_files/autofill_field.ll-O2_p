; ModuleID = '../../components/autofill/core/browser/autofill_field.cc'
source_filename = "../../components/autofill/core/browser/autofill_field.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.autofill::AutofillField" = type <{ i32 (...)**, %"struct.autofill::FormFieldData", %"class.absl::optional.19", %"class.std::__1::basic_string", i32, i8, [3 x i8], %"class.std::__1::vector.26", i8, [7 x i8], %"class.absl::optional.34", i32, %"class.autofill::AutofillType", i32, i32, %"class.autofill::DenseSet", %"class.std::__1::map", i32, %"class.absl::optional.47", [4 x i8], i64, i8, i8, [6 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.autofill::FormFieldData" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", %"class.url::Origin", i32, %"class.std::__1::basic_string.1", i64, i8, i32, i8, i8, i32, i32, i32, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.gfx::RectF", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.autofill::internal::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias.10" }
%"class.base::StrongAlias.10" = type { i32 }
%"class.autofill::FormRendererId" = type { %"class.util::IdType.11" }
%"class.util::IdType.11" = type { %"class.base::StrongAlias.12" }
%"class.base::StrongAlias.12" = type { i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.13 }
%union.anon.13 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.autofill::FieldSignature" }
%"class.autofill::FieldSignature" = type { %"class.util::IdType.24" }
%"class.util::IdType.24" = type { %"class.base::StrongAlias.25" }
%"class.base::StrongAlias.25" = type { i32 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"*, %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"*, %"class.std::__1::__compressed_pair.29" }
%"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i32, i8, [3 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"* }
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { %"class.autofill::PasswordRequirementsSpec" }
%"class.autofill::PasswordRequirementsSpec" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, i32, i32, i32, i32 }
%"class.autofill::PasswordRequirementsSpec_CharacterClass" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", i32, i32 }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string.1"* }
%"class.autofill::AutofillType" = type { i32, i32, i32 }
%"class.autofill::DenseSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [2 x i64] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i64 }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.72" }
%"struct.std::__1::pair.72" = type { i32, %"class.std::__1::vector.65" }
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { i32*, i32*, %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { i32* }
%"class.std::__1::map.56" = type { %"class.std::__1::__tree.57" }
%"class.std::__1::__tree.57" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__tree_node.74" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.73", [4 x i8] }
%"struct.std::__1::__value_type.73" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.google::protobuf::internal::InternalMetadata::ContainerBase" = type { %"class.google::protobuf::Arena"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.85", %"struct.std::__1::atomic.85", %"struct.std::__1::atomic.89", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__cxx_atomic_impl.87" }
%"struct.std::__1::__cxx_atomic_impl.87" = type { %"struct.std::__1::__cxx_atomic_base_impl.88" }
%"struct.std::__1::__cxx_atomic_base_impl.88" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__cxx_atomic_impl.92" }
%"struct.std::__1::__cxx_atomic_impl.92" = type { %"struct.std::__1::__cxx_atomic_base_impl.93" }
%"struct.std::__1::__cxx_atomic_base_impl.93" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }

$_ZNSt3__16__treeINS_12__value_typeIN8autofill15ServerFieldTypeENS_6vectorINS2_17AutofillDataModel13ValidityStateENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4absl17optional_internal18optional_data_baseIN8autofill24PasswordRequirementsSpecEE6assignIS3_EEvOT_ = comdat any

@_ZTVN8autofill13AutofillFieldE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::AutofillField"*)* @_ZN8autofill13AutofillFieldD2Ev to i8*), i8* bitcast (void (%"class.autofill::AutofillField"*)* @_ZN8autofill13AutofillFieldD0Ev to i8*)] }, align 8
@_ZN8autofill8features45kAutofillEnableSupportForMoreStructureInNamesE = external global %"struct.base::Feature", align 8
@_ZN8autofill8features49kAutofillEnableSupportForMoreStructureInAddressesE = external global %"struct.base::Feature", align 8
@_ZN8autofill8features34kAutofillServerTypeTakesPrecedenceE = external global %"struct.base::Feature", align 8
@_ZN8autofill8features30kAutofillFixFillableFieldTypesE = external global %"struct.base::Feature", align 8

@_ZN8autofill13AutofillFieldC1Ev = hidden unnamed_addr alias void (%"class.autofill::AutofillField"*), void (%"class.autofill::AutofillField"*)* @_ZN8autofill13AutofillFieldC2Ev
@_ZN8autofill13AutofillFieldC1ENS_14FieldSignatureE = hidden unnamed_addr alias void (%"class.autofill::AutofillField"*, i32), void (%"class.autofill::AutofillField"*, i32)* @_ZN8autofill13AutofillFieldC2ENS_14FieldSignatureE
@_ZN8autofill13AutofillFieldC1ERKNS_13FormFieldDataE = hidden unnamed_addr alias void (%"class.autofill::AutofillField"*, %"struct.autofill::FormFieldData"*), void (%"class.autofill::AutofillField"*, %"struct.autofill::FormFieldData"*)* @_ZN8autofill13AutofillFieldC2ERKNS_13FormFieldDataE
@_ZN8autofill13AutofillFieldC1ERKNS_13FormFieldDataERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE = hidden unnamed_addr alias void (%"class.autofill::AutofillField"*, %"struct.autofill::FormFieldData"*, %"class.std::__1::basic_string"*), void (%"class.autofill::AutofillField"*, %"struct.autofill::FormFieldData"*, %"class.std::__1::basic_string"*)* @_ZN8autofill13AutofillFieldC2ERKNS_13FormFieldDataERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE
@_ZN8autofill13AutofillFieldD1Ev = hidden unnamed_addr alias void (%"class.autofill::AutofillField"*), void (%"class.autofill::AutofillField"*)* @_ZN8autofill13AutofillFieldD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillFieldC2Ev(%"class.autofill::AutofillField"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1
  tail call void @_ZN8autofill13FormFieldDataC2Ev(%"struct.autofill::FormFieldData"* %2) #9
  %3 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill13AutofillFieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon.38* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 80, i1 false) #9
  %10 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 29, i1 false)
  %12 = bitcast %"class.std::__1::vector.26"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 25, i1 false)
  store i32 1, i32* %10, align 8
  %13 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 12
  tail call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* %13, i32 0) #9
  %14 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 13
  %15 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node_base"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #9
  %19 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false)
  store %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"** %17, align 8
  %20 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 17
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 20
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 21
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 22
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 24
  %26 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 29
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 30
  store i8 0, i8* %27, align 4
  %28 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 53, i1 false)
  ret void
}

declare void @_ZN8autofill13FormFieldDataC2Ev(%"struct.autofill::FormFieldData"*) unnamed_addr #1

declare void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillFieldC2ENS_14FieldSignatureE(%"class.autofill::AutofillField"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1
  tail call void @_ZN8autofill13FormFieldDataC2Ev(%"struct.autofill::FormFieldData"* %3) #9
  %4 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill13AutofillFieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %5, align 4
  %6 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 7
  %9 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %union.anon.38* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 80, i1 false) #9
  %12 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %13 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 29, i1 false)
  %14 = bitcast %"class.std::__1::vector.26"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 25, i1 false)
  store i32 1, i32* %12, align 8
  %15 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 12
  tail call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* %15, i32 0) #9
  %16 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 13
  %17 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %19 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_node_base"** %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = bitcast i32* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false)
  store %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::__tree_end_node"** %19, align 8
  %22 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 17
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 20
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 21
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 22
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 24
  %28 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 29
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 30
  store i8 0, i8* %29, align 4
  %30 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 53, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillFieldC2ERKNS_13FormFieldDataE(%"class.autofill::AutofillField"*, %"struct.autofill::FormFieldData"* dereferenceable(584)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1
  tail call void @_ZN8autofill13FormFieldDataC2ERKS0_(%"struct.autofill::FormFieldData"* %3, %"struct.autofill::FormFieldData"* dereferenceable(584) %1) #9
  %4 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill13AutofillFieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %union.anon.38* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 80, i1 false) #9
  %11 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 29, i1 false)
  %13 = bitcast %"class.std::__1::vector.26"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 25, i1 false)
  store i32 1, i32* %11, align 8
  %14 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 12
  tail call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* %14, i32 0) #9
  %15 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 13
  %16 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node_base"** %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false)
  store %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"** %18, align 8
  %21 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 17
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 20
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 21
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 22
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 24
  %27 = bitcast %"struct.autofill::FormFieldData"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %2
  %32 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %33 = bitcast %"struct.autofill::FormFieldData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false) #9
  br label %209

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp ult i64 %38, 11
  br i1 %39, label %40, label %45

40:                                               ; preds = %34
  %41 = bitcast %"class.std::__1::basic_string"* %26 to i16*
  %42 = trunc i64 %38 to i8
  %43 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  store i8 %42, i8* %44, align 1
  br label %62

45:                                               ; preds = %34
  %46 = icmp ugt i64 %38, 9223372036854775791
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = bitcast %"class.std::__1::basic_string"* %26 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %48) #10
  unreachable

49:                                               ; preds = %45
  %50 = add nuw nsw i64 %38, 8
  %51 = and i64 %50, -8
  %52 = icmp slt i64 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  tail call void @abort() #10
  unreachable

54:                                               ; preds = %49
  %55 = shl i64 %51, 1
  %56 = tail call i8* @_Znwm(i64 %55) #11
  %57 = bitcast i8* %56 to i16*
  %58 = bitcast %"class.std::__1::basic_string"* %26 to i8**
  store i8* %56, i8** %58, align 8
  %59 = or i64 %51, -9223372036854775808
  %60 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %38, i64* %61, align 8
  br label %62

62:                                               ; preds = %54, %40
  %63 = phi i16* [ %41, %40 ], [ %57, %54 ]
  %64 = add nuw nsw i64 %38, 1
  %65 = add i64 %38, 1
  %66 = icmp ult i64 %65, 16
  br i1 %66, label %156, label %67

67:                                               ; preds = %62
  %68 = add i64 %38, 1
  %69 = getelementptr i16, i16* %63, i64 %68
  %70 = getelementptr i16, i16* %36, i64 %68
  %71 = icmp ult i16* %63, %70
  %72 = icmp ult i16* %36, %69
  %73 = and i1 %71, %72
  br i1 %73, label %156, label %74

74:                                               ; preds = %67
  %75 = and i64 %65, -16
  %76 = sub i64 %64, %75
  %77 = getelementptr i16, i16* %36, i64 %75
  %78 = getelementptr i16, i16* %63, i64 %75
  %79 = add i64 %75, -16
  %80 = lshr exact i64 %79, 4
  %81 = add nuw nsw i64 %80, 1
  %82 = and i64 %81, 3
  %83 = icmp ult i64 %79, 48
  br i1 %83, label %135, label %84

84:                                               ; preds = %74
  %85 = sub nsw i64 %81, %82
  br label %86

86:                                               ; preds = %86, %84
  %87 = phi i64 [ 0, %84 ], [ %132, %86 ]
  %88 = phi i64 [ %85, %84 ], [ %133, %86 ]
  %89 = getelementptr i16, i16* %36, i64 %87
  %90 = getelementptr i16, i16* %63, i64 %87
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !2
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !2
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !5, !noalias !2
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !5, !noalias !2
  %99 = or i64 %87, 16
  %100 = getelementptr i16, i16* %36, i64 %99
  %101 = getelementptr i16, i16* %63, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !2
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !2
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !5, !noalias !2
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !5, !noalias !2
  %110 = or i64 %87, 32
  %111 = getelementptr i16, i16* %36, i64 %110
  %112 = getelementptr i16, i16* %63, i64 %110
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !2
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !2
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !5, !noalias !2
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !5, !noalias !2
  %121 = or i64 %87, 48
  %122 = getelementptr i16, i16* %36, i64 %121
  %123 = getelementptr i16, i16* %63, i64 %121
  %124 = bitcast i16* %122 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !2
  %126 = getelementptr i16, i16* %122, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !2
  %129 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = getelementptr i16, i16* %123, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !5, !noalias !2
  %132 = add i64 %87, 64
  %133 = add i64 %88, -4
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %86, !llvm.loop !7

135:                                              ; preds = %86, %74
  %136 = phi i64 [ 0, %74 ], [ %132, %86 ]
  %137 = icmp eq i64 %82, 0
  br i1 %137, label %154, label %138

138:                                              ; preds = %135, %138
  %139 = phi i64 [ %151, %138 ], [ %136, %135 ]
  %140 = phi i64 [ %152, %138 ], [ %82, %135 ]
  %141 = getelementptr i16, i16* %36, i64 %139
  %142 = getelementptr i16, i16* %63, i64 %139
  %143 = bitcast i16* %141 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !2
  %145 = getelementptr i16, i16* %141, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !2
  %148 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %148, align 2, !alias.scope !5, !noalias !2
  %149 = getelementptr i16, i16* %142, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %150, align 2, !alias.scope !5, !noalias !2
  %151 = add i64 %139, 16
  %152 = add i64 %140, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %138, !llvm.loop !9

154:                                              ; preds = %138, %135
  %155 = icmp eq i64 %65, %75
  br i1 %155, label %209, label %156

156:                                              ; preds = %154, %67, %62
  %157 = phi i64 [ %64, %67 ], [ %64, %62 ], [ %76, %154 ]
  %158 = phi i16* [ %36, %67 ], [ %36, %62 ], [ %77, %154 ]
  %159 = phi i16* [ %63, %67 ], [ %63, %62 ], [ %78, %154 ]
  %160 = add i64 %157, -1
  %161 = and i64 %157, 7
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %174, label %163

163:                                              ; preds = %156, %163
  %164 = phi i64 [ %169, %163 ], [ %157, %156 ]
  %165 = phi i16* [ %171, %163 ], [ %158, %156 ]
  %166 = phi i16* [ %170, %163 ], [ %159, %156 ]
  %167 = phi i64 [ %172, %163 ], [ %161, %156 ]
  %168 = load i16, i16* %165, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %164, -1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = getelementptr inbounds i16, i16* %165, i64 1
  %172 = add i64 %167, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %163, !llvm.loop !11

174:                                              ; preds = %163, %156
  %175 = phi i64 [ %157, %156 ], [ %169, %163 ]
  %176 = phi i16* [ %158, %156 ], [ %171, %163 ]
  %177 = phi i16* [ %159, %156 ], [ %170, %163 ]
  %178 = icmp ult i64 %160, 7
  br i1 %178, label %209, label %179

179:                                              ; preds = %174, %179
  %180 = phi i64 [ %205, %179 ], [ %175, %174 ]
  %181 = phi i16* [ %207, %179 ], [ %176, %174 ]
  %182 = phi i16* [ %206, %179 ], [ %177, %174 ]
  %183 = load i16, i16* %181, align 2
  store i16 %183, i16* %182, align 2
  %184 = getelementptr inbounds i16, i16* %182, i64 1
  %185 = getelementptr inbounds i16, i16* %181, i64 1
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %182, i64 2
  %188 = getelementptr inbounds i16, i16* %181, i64 2
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %182, i64 3
  %191 = getelementptr inbounds i16, i16* %181, i64 3
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %182, i64 4
  %194 = getelementptr inbounds i16, i16* %181, i64 4
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %182, i64 5
  %197 = getelementptr inbounds i16, i16* %181, i64 5
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %182, i64 6
  %200 = getelementptr inbounds i16, i16* %181, i64 6
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %182, i64 7
  %203 = getelementptr inbounds i16, i16* %181, i64 7
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = add i64 %180, -8
  %206 = getelementptr inbounds i16, i16* %182, i64 8
  %207 = getelementptr inbounds i16, i16* %181, i64 8
  %208 = icmp eq i64 %205, 0
  br i1 %208, label %209, label %179, !llvm.loop !12

209:                                              ; preds = %174, %179, %154, %31
  %210 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 25
  %211 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %1, i64 0, i32 3
  %212 = bitcast %"class.std::__1::basic_string"* %211 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %212, i64 0, i32 1, i32 1
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %209
  %217 = bitcast %"class.std::__1::basic_string"* %210 to i8*
  %218 = bitcast %"class.std::__1::basic_string"* %211 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 24, i1 false) #9
  br label %394

219:                                              ; preds = %209
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %211, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load i16*, i16** %220, align 8
  %222 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %223 = load i64, i64* %222, align 8
  %224 = icmp ult i64 %223, 11
  br i1 %224, label %225, label %230

225:                                              ; preds = %219
  %226 = bitcast %"class.std::__1::basic_string"* %210 to i16*
  %227 = trunc i64 %223 to i8
  %228 = bitcast %"class.std::__1::basic_string"* %210 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %228, i64 0, i32 1, i32 1
  store i8 %227, i8* %229, align 1
  br label %247

230:                                              ; preds = %219
  %231 = icmp ugt i64 %223, 9223372036854775791
  br i1 %231, label %232, label %234

232:                                              ; preds = %230
  %233 = bitcast %"class.std::__1::basic_string"* %210 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %233) #10
  unreachable

234:                                              ; preds = %230
  %235 = add nuw nsw i64 %223, 8
  %236 = and i64 %235, -8
  %237 = icmp slt i64 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %234
  tail call void @abort() #10
  unreachable

239:                                              ; preds = %234
  %240 = shl i64 %236, 1
  %241 = tail call i8* @_Znwm(i64 %240) #11
  %242 = bitcast i8* %241 to i16*
  %243 = bitcast %"class.std::__1::basic_string"* %210 to i8**
  store i8* %241, i8** %243, align 8
  %244 = or i64 %236, -9223372036854775808
  %245 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %223, i64* %246, align 8
  br label %247

247:                                              ; preds = %239, %225
  %248 = phi i16* [ %226, %225 ], [ %242, %239 ]
  %249 = add nuw nsw i64 %223, 1
  %250 = add i64 %223, 1
  %251 = icmp ult i64 %250, 16
  br i1 %251, label %341, label %252

252:                                              ; preds = %247
  %253 = add i64 %223, 1
  %254 = getelementptr i16, i16* %248, i64 %253
  %255 = getelementptr i16, i16* %221, i64 %253
  %256 = icmp ult i16* %248, %255
  %257 = icmp ult i16* %221, %254
  %258 = and i1 %256, %257
  br i1 %258, label %341, label %259

259:                                              ; preds = %252
  %260 = and i64 %250, -16
  %261 = sub i64 %249, %260
  %262 = getelementptr i16, i16* %221, i64 %260
  %263 = getelementptr i16, i16* %248, i64 %260
  %264 = add i64 %260, -16
  %265 = lshr exact i64 %264, 4
  %266 = add nuw nsw i64 %265, 1
  %267 = and i64 %266, 3
  %268 = icmp ult i64 %264, 48
  br i1 %268, label %320, label %269

269:                                              ; preds = %259
  %270 = sub nsw i64 %266, %267
  br label %271

271:                                              ; preds = %271, %269
  %272 = phi i64 [ 0, %269 ], [ %317, %271 ]
  %273 = phi i64 [ %270, %269 ], [ %318, %271 ]
  %274 = getelementptr i16, i16* %221, i64 %272
  %275 = getelementptr i16, i16* %248, i64 %272
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !13
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !13
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !16, !noalias !13
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !16, !noalias !13
  %284 = or i64 %272, 16
  %285 = getelementptr i16, i16* %221, i64 %284
  %286 = getelementptr i16, i16* %248, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !13
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !13
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !16, !noalias !13
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !16, !noalias !13
  %295 = or i64 %272, 32
  %296 = getelementptr i16, i16* %221, i64 %295
  %297 = getelementptr i16, i16* %248, i64 %295
  %298 = bitcast i16* %296 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !13
  %300 = getelementptr i16, i16* %296, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  %302 = load <8 x i16>, <8 x i16>* %301, align 2, !alias.scope !13
  %303 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %303, align 2, !alias.scope !16, !noalias !13
  %304 = getelementptr i16, i16* %297, i64 8
  %305 = bitcast i16* %304 to <8 x i16>*
  store <8 x i16> %302, <8 x i16>* %305, align 2, !alias.scope !16, !noalias !13
  %306 = or i64 %272, 48
  %307 = getelementptr i16, i16* %221, i64 %306
  %308 = getelementptr i16, i16* %248, i64 %306
  %309 = bitcast i16* %307 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !13
  %311 = getelementptr i16, i16* %307, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  %313 = load <8 x i16>, <8 x i16>* %312, align 2, !alias.scope !13
  %314 = bitcast i16* %308 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %314, align 2, !alias.scope !16, !noalias !13
  %315 = getelementptr i16, i16* %308, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %313, <8 x i16>* %316, align 2, !alias.scope !16, !noalias !13
  %317 = add i64 %272, 64
  %318 = add i64 %273, -4
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %271, !llvm.loop !18

320:                                              ; preds = %271, %259
  %321 = phi i64 [ 0, %259 ], [ %317, %271 ]
  %322 = icmp eq i64 %267, 0
  br i1 %322, label %339, label %323

323:                                              ; preds = %320, %323
  %324 = phi i64 [ %336, %323 ], [ %321, %320 ]
  %325 = phi i64 [ %337, %323 ], [ %267, %320 ]
  %326 = getelementptr i16, i16* %221, i64 %324
  %327 = getelementptr i16, i16* %248, i64 %324
  %328 = bitcast i16* %326 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !13
  %330 = getelementptr i16, i16* %326, i64 8
  %331 = bitcast i16* %330 to <8 x i16>*
  %332 = load <8 x i16>, <8 x i16>* %331, align 2, !alias.scope !13
  %333 = bitcast i16* %327 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %333, align 2, !alias.scope !16, !noalias !13
  %334 = getelementptr i16, i16* %327, i64 8
  %335 = bitcast i16* %334 to <8 x i16>*
  store <8 x i16> %332, <8 x i16>* %335, align 2, !alias.scope !16, !noalias !13
  %336 = add i64 %324, 16
  %337 = add i64 %325, -1
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %339, label %323, !llvm.loop !19

339:                                              ; preds = %323, %320
  %340 = icmp eq i64 %250, %260
  br i1 %340, label %394, label %341

341:                                              ; preds = %339, %252, %247
  %342 = phi i64 [ %249, %252 ], [ %249, %247 ], [ %261, %339 ]
  %343 = phi i16* [ %221, %252 ], [ %221, %247 ], [ %262, %339 ]
  %344 = phi i16* [ %248, %252 ], [ %248, %247 ], [ %263, %339 ]
  %345 = add i64 %342, -1
  %346 = and i64 %342, 7
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %359, label %348

348:                                              ; preds = %341, %348
  %349 = phi i64 [ %354, %348 ], [ %342, %341 ]
  %350 = phi i16* [ %356, %348 ], [ %343, %341 ]
  %351 = phi i16* [ %355, %348 ], [ %344, %341 ]
  %352 = phi i64 [ %357, %348 ], [ %346, %341 ]
  %353 = load i16, i16* %350, align 2
  store i16 %353, i16* %351, align 2
  %354 = add i64 %349, -1
  %355 = getelementptr inbounds i16, i16* %351, i64 1
  %356 = getelementptr inbounds i16, i16* %350, i64 1
  %357 = add i64 %352, -1
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %348, !llvm.loop !20

359:                                              ; preds = %348, %341
  %360 = phi i64 [ %342, %341 ], [ %354, %348 ]
  %361 = phi i16* [ %343, %341 ], [ %356, %348 ]
  %362 = phi i16* [ %344, %341 ], [ %355, %348 ]
  %363 = icmp ult i64 %345, 7
  br i1 %363, label %394, label %364

364:                                              ; preds = %359, %364
  %365 = phi i64 [ %390, %364 ], [ %360, %359 ]
  %366 = phi i16* [ %392, %364 ], [ %361, %359 ]
  %367 = phi i16* [ %391, %364 ], [ %362, %359 ]
  %368 = load i16, i16* %366, align 2
  store i16 %368, i16* %367, align 2
  %369 = getelementptr inbounds i16, i16* %367, i64 1
  %370 = getelementptr inbounds i16, i16* %366, i64 1
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %367, i64 2
  %373 = getelementptr inbounds i16, i16* %366, i64 2
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %367, i64 3
  %376 = getelementptr inbounds i16, i16* %366, i64 3
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = getelementptr inbounds i16, i16* %367, i64 4
  %379 = getelementptr inbounds i16, i16* %366, i64 4
  %380 = load i16, i16* %379, align 2
  store i16 %380, i16* %378, align 2
  %381 = getelementptr inbounds i16, i16* %367, i64 5
  %382 = getelementptr inbounds i16, i16* %366, i64 5
  %383 = load i16, i16* %382, align 2
  store i16 %383, i16* %381, align 2
  %384 = getelementptr inbounds i16, i16* %367, i64 6
  %385 = getelementptr inbounds i16, i16* %366, i64 6
  %386 = load i16, i16* %385, align 2
  store i16 %386, i16* %384, align 2
  %387 = getelementptr inbounds i16, i16* %367, i64 7
  %388 = getelementptr inbounds i16, i16* %366, i64 7
  %389 = load i16, i16* %388, align 2
  store i16 %389, i16* %387, align 2
  %390 = add i64 %365, -8
  %391 = getelementptr inbounds i16, i16* %367, i64 8
  %392 = getelementptr inbounds i16, i16* %366, i64 8
  %393 = icmp eq i64 %390, 0
  br i1 %393, label %394, label %364, !llvm.loop !21

394:                                              ; preds = %359, %364, %339, %216
  %395 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 26
  store i32 0, i32* %395, align 8
  %396 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 27
  store i8 0, i8* %396, align 4
  %397 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 29
  store i32 0, i32* %397, align 8
  %398 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 30
  store i8 0, i8* %398, align 4
  %399 = bitcast %"struct.autofill::FormFieldData"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %400 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %399, i64 0, i32 1, i32 1
  %401 = load i8, i8* %400, align 1
  %402 = icmp slt i8 %401, 0
  %403 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %404 = load i16*, i16** %403, align 8
  %405 = bitcast %"struct.autofill::FormFieldData"* %3 to i16*
  %406 = select i1 %402, i16* %404, i16* %405
  %407 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %408 = load i64, i64* %407, align 8
  %409 = zext i8 %401 to i64
  %410 = select i1 %402, i64 %408, i64 %409
  %411 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1, i32 5
  %412 = bitcast %"class.std::__1::basic_string.1"* %411 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %413 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %412, i64 0, i32 1, i32 0
  %414 = load i8, i8* %413, align 1
  %415 = icmp slt i8 %414, 0
  %416 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %411, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = load i8*, i8** %416, align 8
  %418 = bitcast %"class.std::__1::basic_string.1"* %411 to i8*
  %419 = select i1 %415, i8* %417, i8* %418
  %420 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %421 = load i64, i64* %420, align 8
  %422 = zext i8 %414 to i64
  %423 = select i1 %415, i64 %421, i64 %422
  %424 = tail call i32 @_ZN8autofill36CalculateFieldSignatureByNameAndTypeEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_IcNS3_IcEEEE(i16* %406, i64 %410, i8* %419, i64 %423) #9
  %425 = load i8, i8* %5, align 4, !range !22
  %426 = icmp eq i8 %425, 0
  %427 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i32 %424, i32* %427, align 4
  br i1 %426, label %428, label %429

428:                                              ; preds = %394
  store i8 1, i8* %5, align 4
  br label %429

429:                                              ; preds = %394, %428
  ret void
}

declare void @_ZN8autofill13FormFieldDataC2ERKS0_(%"struct.autofill::FormFieldData"*, %"struct.autofill::FormFieldData"* dereferenceable(584)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN8autofill36CalculateFieldSignatureByNameAndTypeEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_IcNS3_IcEEEE(i16*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillFieldC2ERKNS_13FormFieldDataERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.autofill::AutofillField"*, %"struct.autofill::FormFieldData"* dereferenceable(584), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1
  tail call void @_ZN8autofill13FormFieldDataC2ERKS0_(%"struct.autofill::FormFieldData"* %4, %"struct.autofill::FormFieldData"* dereferenceable(584) %1) #9
  %5 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill13AutofillFieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #9
  br label %190

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %23 = trunc i64 %19 to i8
  %24 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  store i8 %23, i8* %25, align 1
  br label %43

26:                                               ; preds = %15
  %27 = icmp ugt i64 %19, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %29) #10
  unreachable

30:                                               ; preds = %26
  %31 = add nuw nsw i64 %19, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @abort() #10
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = tail call i8* @_Znwm(i64 %36) #11
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  store i8* %37, i8** %39, align 8
  %40 = or i64 %32, -9223372036854775808
  %41 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %42, align 8
  br label %43

43:                                               ; preds = %35, %21
  %44 = phi i16* [ %22, %21 ], [ %38, %35 ]
  %45 = add nuw nsw i64 %19, 1
  %46 = add i64 %19, 1
  %47 = icmp ult i64 %46, 16
  br i1 %47, label %137, label %48

48:                                               ; preds = %43
  %49 = add i64 %19, 1
  %50 = getelementptr i16, i16* %44, i64 %49
  %51 = getelementptr i16, i16* %17, i64 %49
  %52 = icmp ult i16* %44, %51
  %53 = icmp ult i16* %17, %50
  %54 = and i1 %52, %53
  br i1 %54, label %137, label %55

55:                                               ; preds = %48
  %56 = and i64 %46, -16
  %57 = sub i64 %45, %56
  %58 = getelementptr i16, i16* %17, i64 %56
  %59 = getelementptr i16, i16* %44, i64 %56
  %60 = add i64 %56, -16
  %61 = lshr exact i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 48
  br i1 %64, label %116, label %65

65:                                               ; preds = %55
  %66 = sub nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %113, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %114, %67 ]
  %70 = getelementptr i16, i16* %17, i64 %68
  %71 = getelementptr i16, i16* %44, i64 %68
  %72 = bitcast i16* %70 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !23
  %74 = getelementptr i16, i16* %70, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !23
  %77 = bitcast i16* %71 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %77, align 2, !alias.scope !26, !noalias !23
  %78 = getelementptr i16, i16* %71, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %79, align 2, !alias.scope !26, !noalias !23
  %80 = or i64 %68, 16
  %81 = getelementptr i16, i16* %17, i64 %80
  %82 = getelementptr i16, i16* %44, i64 %80
  %83 = bitcast i16* %81 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !23
  %85 = getelementptr i16, i16* %81, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !23
  %88 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !26, !noalias !23
  %89 = getelementptr i16, i16* %82, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !26, !noalias !23
  %91 = or i64 %68, 32
  %92 = getelementptr i16, i16* %17, i64 %91
  %93 = getelementptr i16, i16* %44, i64 %91
  %94 = bitcast i16* %92 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !23
  %96 = getelementptr i16, i16* %92, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !23
  %99 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !26, !noalias !23
  %100 = getelementptr i16, i16* %93, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !26, !noalias !23
  %102 = or i64 %68, 48
  %103 = getelementptr i16, i16* %17, i64 %102
  %104 = getelementptr i16, i16* %44, i64 %102
  %105 = bitcast i16* %103 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !23
  %107 = getelementptr i16, i16* %103, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !23
  %110 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !26, !noalias !23
  %111 = getelementptr i16, i16* %104, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !26, !noalias !23
  %113 = add i64 %68, 64
  %114 = add i64 %69, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %67, !llvm.loop !28

116:                                              ; preds = %67, %55
  %117 = phi i64 [ 0, %55 ], [ %113, %67 ]
  %118 = icmp eq i64 %63, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %132, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %133, %119 ], [ %63, %116 ]
  %122 = getelementptr i16, i16* %17, i64 %120
  %123 = getelementptr i16, i16* %44, i64 %120
  %124 = bitcast i16* %122 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !23
  %126 = getelementptr i16, i16* %122, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !23
  %129 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !26, !noalias !23
  %130 = getelementptr i16, i16* %123, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !26, !noalias !23
  %132 = add i64 %120, 16
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %119, !llvm.loop !29

135:                                              ; preds = %119, %116
  %136 = icmp eq i64 %46, %56
  br i1 %136, label %190, label %137

137:                                              ; preds = %135, %48, %43
  %138 = phi i64 [ %45, %48 ], [ %45, %43 ], [ %57, %135 ]
  %139 = phi i16* [ %17, %48 ], [ %17, %43 ], [ %58, %135 ]
  %140 = phi i16* [ %44, %48 ], [ %44, %43 ], [ %59, %135 ]
  %141 = add i64 %138, -1
  %142 = and i64 %138, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %137, %144
  %145 = phi i64 [ %150, %144 ], [ %138, %137 ]
  %146 = phi i16* [ %152, %144 ], [ %139, %137 ]
  %147 = phi i16* [ %151, %144 ], [ %140, %137 ]
  %148 = phi i64 [ %153, %144 ], [ %142, %137 ]
  %149 = load i16, i16* %146, align 2
  store i16 %149, i16* %147, align 2
  %150 = add i64 %145, -1
  %151 = getelementptr inbounds i16, i16* %147, i64 1
  %152 = getelementptr inbounds i16, i16* %146, i64 1
  %153 = add i64 %148, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %144, !llvm.loop !30

155:                                              ; preds = %144, %137
  %156 = phi i64 [ %138, %137 ], [ %150, %144 ]
  %157 = phi i16* [ %139, %137 ], [ %152, %144 ]
  %158 = phi i16* [ %140, %137 ], [ %151, %144 ]
  %159 = icmp ult i64 %141, 7
  br i1 %159, label %190, label %160

160:                                              ; preds = %155, %160
  %161 = phi i64 [ %186, %160 ], [ %156, %155 ]
  %162 = phi i16* [ %188, %160 ], [ %157, %155 ]
  %163 = phi i16* [ %187, %160 ], [ %158, %155 ]
  %164 = load i16, i16* %162, align 2
  store i16 %164, i16* %163, align 2
  %165 = getelementptr inbounds i16, i16* %163, i64 1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %163, i64 2
  %169 = getelementptr inbounds i16, i16* %162, i64 2
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %163, i64 3
  %172 = getelementptr inbounds i16, i16* %162, i64 3
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %163, i64 4
  %175 = getelementptr inbounds i16, i16* %162, i64 4
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %163, i64 5
  %178 = getelementptr inbounds i16, i16* %162, i64 5
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %163, i64 6
  %181 = getelementptr inbounds i16, i16* %162, i64 6
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %163, i64 7
  %184 = getelementptr inbounds i16, i16* %162, i64 7
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = add i64 %161, -8
  %187 = getelementptr inbounds i16, i16* %163, i64 8
  %188 = getelementptr inbounds i16, i16* %162, i64 8
  %189 = icmp eq i64 %186, 0
  br i1 %189, label %190, label %160, !llvm.loop !31

190:                                              ; preds = %155, %160, %135, %12
  %191 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 4
  store i32 0, i32* %191, align 8
  %192 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 5
  store i8 0, i8* %192, align 4
  %193 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 7
  %194 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %194, align 8
  %195 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %196 = bitcast %union.anon.38* %195 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 0, i64 80, i1 false) #9
  %197 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %198 = bitcast %"class.std::__1::vector.26"* %193 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %198, i8 0, i64 25, i1 false)
  store i32 1, i32* %197, align 8
  %199 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 12
  tail call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* %199, i32 0) #9
  %200 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 13
  %201 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %202 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %203 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 0
  %204 = bitcast %"class.std::__1::__tree_node_base"** %201 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 16, i1 false) #9
  %205 = bitcast i32* %200 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %205, i8 0, i64 24, i1 false)
  store %"class.std::__1::__tree_end_node"* %202, %"class.std::__1::__tree_end_node"** %203, align 8
  %206 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 17
  store i32 0, i32* %206, align 8
  %207 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %207, align 4
  %208 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 20
  store i64 0, i64* %208, align 8
  %209 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 21
  store i8 0, i8* %209, align 8
  %210 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 22
  store i8 0, i8* %210, align 1
  %211 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 24
  %212 = bitcast %"struct.autofill::FormFieldData"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %212, i64 0, i32 1, i32 1
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %190
  %217 = bitcast %"class.std::__1::basic_string"* %211 to i8*
  %218 = bitcast %"struct.autofill::FormFieldData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 24, i1 false) #9
  br label %394

219:                                              ; preds = %190
  %220 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load i16*, i16** %220, align 8
  %222 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %223 = load i64, i64* %222, align 8
  %224 = icmp ult i64 %223, 11
  br i1 %224, label %225, label %230

225:                                              ; preds = %219
  %226 = bitcast %"class.std::__1::basic_string"* %211 to i16*
  %227 = trunc i64 %223 to i8
  %228 = bitcast %"class.std::__1::basic_string"* %211 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %228, i64 0, i32 1, i32 1
  store i8 %227, i8* %229, align 1
  br label %247

230:                                              ; preds = %219
  %231 = icmp ugt i64 %223, 9223372036854775791
  br i1 %231, label %232, label %234

232:                                              ; preds = %230
  %233 = bitcast %"class.std::__1::basic_string"* %211 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %233) #10
  unreachable

234:                                              ; preds = %230
  %235 = add nuw nsw i64 %223, 8
  %236 = and i64 %235, -8
  %237 = icmp slt i64 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %234
  tail call void @abort() #10
  unreachable

239:                                              ; preds = %234
  %240 = shl i64 %236, 1
  %241 = tail call i8* @_Znwm(i64 %240) #11
  %242 = bitcast i8* %241 to i16*
  %243 = bitcast %"class.std::__1::basic_string"* %211 to i8**
  store i8* %241, i8** %243, align 8
  %244 = or i64 %236, -9223372036854775808
  %245 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %223, i64* %246, align 8
  br label %247

247:                                              ; preds = %239, %225
  %248 = phi i16* [ %226, %225 ], [ %242, %239 ]
  %249 = add nuw nsw i64 %223, 1
  %250 = add i64 %223, 1
  %251 = icmp ult i64 %250, 16
  br i1 %251, label %341, label %252

252:                                              ; preds = %247
  %253 = add i64 %223, 1
  %254 = getelementptr i16, i16* %248, i64 %253
  %255 = getelementptr i16, i16* %221, i64 %253
  %256 = icmp ult i16* %248, %255
  %257 = icmp ult i16* %221, %254
  %258 = and i1 %256, %257
  br i1 %258, label %341, label %259

259:                                              ; preds = %252
  %260 = and i64 %250, -16
  %261 = sub i64 %249, %260
  %262 = getelementptr i16, i16* %221, i64 %260
  %263 = getelementptr i16, i16* %248, i64 %260
  %264 = add i64 %260, -16
  %265 = lshr exact i64 %264, 4
  %266 = add nuw nsw i64 %265, 1
  %267 = and i64 %266, 3
  %268 = icmp ult i64 %264, 48
  br i1 %268, label %320, label %269

269:                                              ; preds = %259
  %270 = sub nsw i64 %266, %267
  br label %271

271:                                              ; preds = %271, %269
  %272 = phi i64 [ 0, %269 ], [ %317, %271 ]
  %273 = phi i64 [ %270, %269 ], [ %318, %271 ]
  %274 = getelementptr i16, i16* %221, i64 %272
  %275 = getelementptr i16, i16* %248, i64 %272
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !32
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !32
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !35, !noalias !32
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !35, !noalias !32
  %284 = or i64 %272, 16
  %285 = getelementptr i16, i16* %221, i64 %284
  %286 = getelementptr i16, i16* %248, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !32
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !32
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !35, !noalias !32
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !35, !noalias !32
  %295 = or i64 %272, 32
  %296 = getelementptr i16, i16* %221, i64 %295
  %297 = getelementptr i16, i16* %248, i64 %295
  %298 = bitcast i16* %296 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !32
  %300 = getelementptr i16, i16* %296, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  %302 = load <8 x i16>, <8 x i16>* %301, align 2, !alias.scope !32
  %303 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %303, align 2, !alias.scope !35, !noalias !32
  %304 = getelementptr i16, i16* %297, i64 8
  %305 = bitcast i16* %304 to <8 x i16>*
  store <8 x i16> %302, <8 x i16>* %305, align 2, !alias.scope !35, !noalias !32
  %306 = or i64 %272, 48
  %307 = getelementptr i16, i16* %221, i64 %306
  %308 = getelementptr i16, i16* %248, i64 %306
  %309 = bitcast i16* %307 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !32
  %311 = getelementptr i16, i16* %307, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  %313 = load <8 x i16>, <8 x i16>* %312, align 2, !alias.scope !32
  %314 = bitcast i16* %308 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %314, align 2, !alias.scope !35, !noalias !32
  %315 = getelementptr i16, i16* %308, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %313, <8 x i16>* %316, align 2, !alias.scope !35, !noalias !32
  %317 = add i64 %272, 64
  %318 = add i64 %273, -4
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %271, !llvm.loop !37

320:                                              ; preds = %271, %259
  %321 = phi i64 [ 0, %259 ], [ %317, %271 ]
  %322 = icmp eq i64 %267, 0
  br i1 %322, label %339, label %323

323:                                              ; preds = %320, %323
  %324 = phi i64 [ %336, %323 ], [ %321, %320 ]
  %325 = phi i64 [ %337, %323 ], [ %267, %320 ]
  %326 = getelementptr i16, i16* %221, i64 %324
  %327 = getelementptr i16, i16* %248, i64 %324
  %328 = bitcast i16* %326 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !32
  %330 = getelementptr i16, i16* %326, i64 8
  %331 = bitcast i16* %330 to <8 x i16>*
  %332 = load <8 x i16>, <8 x i16>* %331, align 2, !alias.scope !32
  %333 = bitcast i16* %327 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %333, align 2, !alias.scope !35, !noalias !32
  %334 = getelementptr i16, i16* %327, i64 8
  %335 = bitcast i16* %334 to <8 x i16>*
  store <8 x i16> %332, <8 x i16>* %335, align 2, !alias.scope !35, !noalias !32
  %336 = add i64 %324, 16
  %337 = add i64 %325, -1
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %339, label %323, !llvm.loop !38

339:                                              ; preds = %323, %320
  %340 = icmp eq i64 %250, %260
  br i1 %340, label %394, label %341

341:                                              ; preds = %339, %252, %247
  %342 = phi i64 [ %249, %252 ], [ %249, %247 ], [ %261, %339 ]
  %343 = phi i16* [ %221, %252 ], [ %221, %247 ], [ %262, %339 ]
  %344 = phi i16* [ %248, %252 ], [ %248, %247 ], [ %263, %339 ]
  %345 = add i64 %342, -1
  %346 = and i64 %342, 7
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %359, label %348

348:                                              ; preds = %341, %348
  %349 = phi i64 [ %354, %348 ], [ %342, %341 ]
  %350 = phi i16* [ %356, %348 ], [ %343, %341 ]
  %351 = phi i16* [ %355, %348 ], [ %344, %341 ]
  %352 = phi i64 [ %357, %348 ], [ %346, %341 ]
  %353 = load i16, i16* %350, align 2
  store i16 %353, i16* %351, align 2
  %354 = add i64 %349, -1
  %355 = getelementptr inbounds i16, i16* %351, i64 1
  %356 = getelementptr inbounds i16, i16* %350, i64 1
  %357 = add i64 %352, -1
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %348, !llvm.loop !39

359:                                              ; preds = %348, %341
  %360 = phi i64 [ %342, %341 ], [ %354, %348 ]
  %361 = phi i16* [ %343, %341 ], [ %356, %348 ]
  %362 = phi i16* [ %344, %341 ], [ %355, %348 ]
  %363 = icmp ult i64 %345, 7
  br i1 %363, label %394, label %364

364:                                              ; preds = %359, %364
  %365 = phi i64 [ %390, %364 ], [ %360, %359 ]
  %366 = phi i16* [ %392, %364 ], [ %361, %359 ]
  %367 = phi i16* [ %391, %364 ], [ %362, %359 ]
  %368 = load i16, i16* %366, align 2
  store i16 %368, i16* %367, align 2
  %369 = getelementptr inbounds i16, i16* %367, i64 1
  %370 = getelementptr inbounds i16, i16* %366, i64 1
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %367, i64 2
  %373 = getelementptr inbounds i16, i16* %366, i64 2
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %367, i64 3
  %376 = getelementptr inbounds i16, i16* %366, i64 3
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = getelementptr inbounds i16, i16* %367, i64 4
  %379 = getelementptr inbounds i16, i16* %366, i64 4
  %380 = load i16, i16* %379, align 2
  store i16 %380, i16* %378, align 2
  %381 = getelementptr inbounds i16, i16* %367, i64 5
  %382 = getelementptr inbounds i16, i16* %366, i64 5
  %383 = load i16, i16* %382, align 2
  store i16 %383, i16* %381, align 2
  %384 = getelementptr inbounds i16, i16* %367, i64 6
  %385 = getelementptr inbounds i16, i16* %366, i64 6
  %386 = load i16, i16* %385, align 2
  store i16 %386, i16* %384, align 2
  %387 = getelementptr inbounds i16, i16* %367, i64 7
  %388 = getelementptr inbounds i16, i16* %366, i64 7
  %389 = load i16, i16* %388, align 2
  store i16 %389, i16* %387, align 2
  %390 = add i64 %365, -8
  %391 = getelementptr inbounds i16, i16* %367, i64 8
  %392 = getelementptr inbounds i16, i16* %366, i64 8
  %393 = icmp eq i64 %390, 0
  br i1 %393, label %394, label %364, !llvm.loop !40

394:                                              ; preds = %359, %364, %339, %216
  %395 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 25
  %396 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %1, i64 0, i32 3
  %397 = bitcast %"class.std::__1::basic_string"* %396 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %398 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %397, i64 0, i32 1, i32 1
  %399 = load i8, i8* %398, align 1
  %400 = icmp slt i8 %399, 0
  br i1 %400, label %404, label %401

401:                                              ; preds = %394
  %402 = bitcast %"class.std::__1::basic_string"* %395 to i8*
  %403 = bitcast %"class.std::__1::basic_string"* %396 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %402, i8* align 8 %403, i64 24, i1 false) #9
  br label %579

404:                                              ; preds = %394
  %405 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %396, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %406 = load i16*, i16** %405, align 8
  %407 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %408 = load i64, i64* %407, align 8
  %409 = icmp ult i64 %408, 11
  br i1 %409, label %410, label %415

410:                                              ; preds = %404
  %411 = bitcast %"class.std::__1::basic_string"* %395 to i16*
  %412 = trunc i64 %408 to i8
  %413 = bitcast %"class.std::__1::basic_string"* %395 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %414 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %413, i64 0, i32 1, i32 1
  store i8 %412, i8* %414, align 1
  br label %432

415:                                              ; preds = %404
  %416 = icmp ugt i64 %408, 9223372036854775791
  br i1 %416, label %417, label %419

417:                                              ; preds = %415
  %418 = bitcast %"class.std::__1::basic_string"* %395 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %418) #10
  unreachable

419:                                              ; preds = %415
  %420 = add nuw nsw i64 %408, 8
  %421 = and i64 %420, -8
  %422 = icmp slt i64 %421, 0
  br i1 %422, label %423, label %424

423:                                              ; preds = %419
  tail call void @abort() #10
  unreachable

424:                                              ; preds = %419
  %425 = shl i64 %421, 1
  %426 = tail call i8* @_Znwm(i64 %425) #11
  %427 = bitcast i8* %426 to i16*
  %428 = bitcast %"class.std::__1::basic_string"* %395 to i8**
  store i8* %426, i8** %428, align 8
  %429 = or i64 %421, -9223372036854775808
  %430 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %429, i64* %430, align 8
  %431 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %408, i64* %431, align 8
  br label %432

432:                                              ; preds = %424, %410
  %433 = phi i16* [ %411, %410 ], [ %427, %424 ]
  %434 = add nuw nsw i64 %408, 1
  %435 = add i64 %408, 1
  %436 = icmp ult i64 %435, 16
  br i1 %436, label %526, label %437

437:                                              ; preds = %432
  %438 = add i64 %408, 1
  %439 = getelementptr i16, i16* %433, i64 %438
  %440 = getelementptr i16, i16* %406, i64 %438
  %441 = icmp ult i16* %433, %440
  %442 = icmp ult i16* %406, %439
  %443 = and i1 %441, %442
  br i1 %443, label %526, label %444

444:                                              ; preds = %437
  %445 = and i64 %435, -16
  %446 = sub i64 %434, %445
  %447 = getelementptr i16, i16* %406, i64 %445
  %448 = getelementptr i16, i16* %433, i64 %445
  %449 = add i64 %445, -16
  %450 = lshr exact i64 %449, 4
  %451 = add nuw nsw i64 %450, 1
  %452 = and i64 %451, 3
  %453 = icmp ult i64 %449, 48
  br i1 %453, label %505, label %454

454:                                              ; preds = %444
  %455 = sub nsw i64 %451, %452
  br label %456

456:                                              ; preds = %456, %454
  %457 = phi i64 [ 0, %454 ], [ %502, %456 ]
  %458 = phi i64 [ %455, %454 ], [ %503, %456 ]
  %459 = getelementptr i16, i16* %406, i64 %457
  %460 = getelementptr i16, i16* %433, i64 %457
  %461 = bitcast i16* %459 to <8 x i16>*
  %462 = load <8 x i16>, <8 x i16>* %461, align 2, !alias.scope !41
  %463 = getelementptr i16, i16* %459, i64 8
  %464 = bitcast i16* %463 to <8 x i16>*
  %465 = load <8 x i16>, <8 x i16>* %464, align 2, !alias.scope !41
  %466 = bitcast i16* %460 to <8 x i16>*
  store <8 x i16> %462, <8 x i16>* %466, align 2, !alias.scope !44, !noalias !41
  %467 = getelementptr i16, i16* %460, i64 8
  %468 = bitcast i16* %467 to <8 x i16>*
  store <8 x i16> %465, <8 x i16>* %468, align 2, !alias.scope !44, !noalias !41
  %469 = or i64 %457, 16
  %470 = getelementptr i16, i16* %406, i64 %469
  %471 = getelementptr i16, i16* %433, i64 %469
  %472 = bitcast i16* %470 to <8 x i16>*
  %473 = load <8 x i16>, <8 x i16>* %472, align 2, !alias.scope !41
  %474 = getelementptr i16, i16* %470, i64 8
  %475 = bitcast i16* %474 to <8 x i16>*
  %476 = load <8 x i16>, <8 x i16>* %475, align 2, !alias.scope !41
  %477 = bitcast i16* %471 to <8 x i16>*
  store <8 x i16> %473, <8 x i16>* %477, align 2, !alias.scope !44, !noalias !41
  %478 = getelementptr i16, i16* %471, i64 8
  %479 = bitcast i16* %478 to <8 x i16>*
  store <8 x i16> %476, <8 x i16>* %479, align 2, !alias.scope !44, !noalias !41
  %480 = or i64 %457, 32
  %481 = getelementptr i16, i16* %406, i64 %480
  %482 = getelementptr i16, i16* %433, i64 %480
  %483 = bitcast i16* %481 to <8 x i16>*
  %484 = load <8 x i16>, <8 x i16>* %483, align 2, !alias.scope !41
  %485 = getelementptr i16, i16* %481, i64 8
  %486 = bitcast i16* %485 to <8 x i16>*
  %487 = load <8 x i16>, <8 x i16>* %486, align 2, !alias.scope !41
  %488 = bitcast i16* %482 to <8 x i16>*
  store <8 x i16> %484, <8 x i16>* %488, align 2, !alias.scope !44, !noalias !41
  %489 = getelementptr i16, i16* %482, i64 8
  %490 = bitcast i16* %489 to <8 x i16>*
  store <8 x i16> %487, <8 x i16>* %490, align 2, !alias.scope !44, !noalias !41
  %491 = or i64 %457, 48
  %492 = getelementptr i16, i16* %406, i64 %491
  %493 = getelementptr i16, i16* %433, i64 %491
  %494 = bitcast i16* %492 to <8 x i16>*
  %495 = load <8 x i16>, <8 x i16>* %494, align 2, !alias.scope !41
  %496 = getelementptr i16, i16* %492, i64 8
  %497 = bitcast i16* %496 to <8 x i16>*
  %498 = load <8 x i16>, <8 x i16>* %497, align 2, !alias.scope !41
  %499 = bitcast i16* %493 to <8 x i16>*
  store <8 x i16> %495, <8 x i16>* %499, align 2, !alias.scope !44, !noalias !41
  %500 = getelementptr i16, i16* %493, i64 8
  %501 = bitcast i16* %500 to <8 x i16>*
  store <8 x i16> %498, <8 x i16>* %501, align 2, !alias.scope !44, !noalias !41
  %502 = add i64 %457, 64
  %503 = add i64 %458, -4
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %505, label %456, !llvm.loop !46

505:                                              ; preds = %456, %444
  %506 = phi i64 [ 0, %444 ], [ %502, %456 ]
  %507 = icmp eq i64 %452, 0
  br i1 %507, label %524, label %508

508:                                              ; preds = %505, %508
  %509 = phi i64 [ %521, %508 ], [ %506, %505 ]
  %510 = phi i64 [ %522, %508 ], [ %452, %505 ]
  %511 = getelementptr i16, i16* %406, i64 %509
  %512 = getelementptr i16, i16* %433, i64 %509
  %513 = bitcast i16* %511 to <8 x i16>*
  %514 = load <8 x i16>, <8 x i16>* %513, align 2, !alias.scope !41
  %515 = getelementptr i16, i16* %511, i64 8
  %516 = bitcast i16* %515 to <8 x i16>*
  %517 = load <8 x i16>, <8 x i16>* %516, align 2, !alias.scope !41
  %518 = bitcast i16* %512 to <8 x i16>*
  store <8 x i16> %514, <8 x i16>* %518, align 2, !alias.scope !44, !noalias !41
  %519 = getelementptr i16, i16* %512, i64 8
  %520 = bitcast i16* %519 to <8 x i16>*
  store <8 x i16> %517, <8 x i16>* %520, align 2, !alias.scope !44, !noalias !41
  %521 = add i64 %509, 16
  %522 = add i64 %510, -1
  %523 = icmp eq i64 %522, 0
  br i1 %523, label %524, label %508, !llvm.loop !47

524:                                              ; preds = %508, %505
  %525 = icmp eq i64 %435, %445
  br i1 %525, label %579, label %526

526:                                              ; preds = %524, %437, %432
  %527 = phi i64 [ %434, %437 ], [ %434, %432 ], [ %446, %524 ]
  %528 = phi i16* [ %406, %437 ], [ %406, %432 ], [ %447, %524 ]
  %529 = phi i16* [ %433, %437 ], [ %433, %432 ], [ %448, %524 ]
  %530 = add i64 %527, -1
  %531 = and i64 %527, 7
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %544, label %533

533:                                              ; preds = %526, %533
  %534 = phi i64 [ %539, %533 ], [ %527, %526 ]
  %535 = phi i16* [ %541, %533 ], [ %528, %526 ]
  %536 = phi i16* [ %540, %533 ], [ %529, %526 ]
  %537 = phi i64 [ %542, %533 ], [ %531, %526 ]
  %538 = load i16, i16* %535, align 2
  store i16 %538, i16* %536, align 2
  %539 = add i64 %534, -1
  %540 = getelementptr inbounds i16, i16* %536, i64 1
  %541 = getelementptr inbounds i16, i16* %535, i64 1
  %542 = add i64 %537, -1
  %543 = icmp eq i64 %542, 0
  br i1 %543, label %544, label %533, !llvm.loop !48

544:                                              ; preds = %533, %526
  %545 = phi i64 [ %527, %526 ], [ %539, %533 ]
  %546 = phi i16* [ %528, %526 ], [ %541, %533 ]
  %547 = phi i16* [ %529, %526 ], [ %540, %533 ]
  %548 = icmp ult i64 %530, 7
  br i1 %548, label %579, label %549

549:                                              ; preds = %544, %549
  %550 = phi i64 [ %575, %549 ], [ %545, %544 ]
  %551 = phi i16* [ %577, %549 ], [ %546, %544 ]
  %552 = phi i16* [ %576, %549 ], [ %547, %544 ]
  %553 = load i16, i16* %551, align 2
  store i16 %553, i16* %552, align 2
  %554 = getelementptr inbounds i16, i16* %552, i64 1
  %555 = getelementptr inbounds i16, i16* %551, i64 1
  %556 = load i16, i16* %555, align 2
  store i16 %556, i16* %554, align 2
  %557 = getelementptr inbounds i16, i16* %552, i64 2
  %558 = getelementptr inbounds i16, i16* %551, i64 2
  %559 = load i16, i16* %558, align 2
  store i16 %559, i16* %557, align 2
  %560 = getelementptr inbounds i16, i16* %552, i64 3
  %561 = getelementptr inbounds i16, i16* %551, i64 3
  %562 = load i16, i16* %561, align 2
  store i16 %562, i16* %560, align 2
  %563 = getelementptr inbounds i16, i16* %552, i64 4
  %564 = getelementptr inbounds i16, i16* %551, i64 4
  %565 = load i16, i16* %564, align 2
  store i16 %565, i16* %563, align 2
  %566 = getelementptr inbounds i16, i16* %552, i64 5
  %567 = getelementptr inbounds i16, i16* %551, i64 5
  %568 = load i16, i16* %567, align 2
  store i16 %568, i16* %566, align 2
  %569 = getelementptr inbounds i16, i16* %552, i64 6
  %570 = getelementptr inbounds i16, i16* %551, i64 6
  %571 = load i16, i16* %570, align 2
  store i16 %571, i16* %569, align 2
  %572 = getelementptr inbounds i16, i16* %552, i64 7
  %573 = getelementptr inbounds i16, i16* %551, i64 7
  %574 = load i16, i16* %573, align 2
  store i16 %574, i16* %572, align 2
  %575 = add i64 %550, -8
  %576 = getelementptr inbounds i16, i16* %552, i64 8
  %577 = getelementptr inbounds i16, i16* %551, i64 8
  %578 = icmp eq i64 %575, 0
  br i1 %578, label %579, label %549, !llvm.loop !49

579:                                              ; preds = %544, %549, %524, %401
  %580 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 26
  store i32 0, i32* %580, align 8
  %581 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 27
  store i8 0, i8* %581, align 4
  %582 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 29
  store i32 0, i32* %582, align 8
  %583 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 30
  store i8 0, i8* %583, align 4
  %584 = bitcast %"struct.autofill::FormFieldData"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %585 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %584, i64 0, i32 1, i32 1
  %586 = load i8, i8* %585, align 1
  %587 = icmp slt i8 %586, 0
  %588 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %589 = load i16*, i16** %588, align 8
  %590 = bitcast %"struct.autofill::FormFieldData"* %4 to i16*
  %591 = select i1 %587, i16* %589, i16* %590
  %592 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %593 = load i64, i64* %592, align 8
  %594 = zext i8 %586 to i64
  %595 = select i1 %587, i64 %593, i64 %594
  %596 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1, i32 5
  %597 = bitcast %"class.std::__1::basic_string.1"* %596 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %598 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %597, i64 0, i32 1, i32 0
  %599 = load i8, i8* %598, align 1
  %600 = icmp slt i8 %599, 0
  %601 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %596, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %602 = load i8*, i8** %601, align 8
  %603 = bitcast %"class.std::__1::basic_string.1"* %596 to i8*
  %604 = select i1 %600, i8* %602, i8* %603
  %605 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %606 = load i64, i64* %605, align 8
  %607 = zext i8 %599 to i64
  %608 = select i1 %600, i64 %606, i64 %607
  %609 = tail call i32 @_ZN8autofill36CalculateFieldSignatureByNameAndTypeEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_IcNS3_IcEEEE(i16* %591, i64 %595, i8* %604, i64 %608) #9
  %610 = load i8, i8* %6, align 4, !range !22
  %611 = icmp eq i8 %610, 0
  %612 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i32 %609, i32* %612, align 4
  br i1 %611, label %613, label %614

613:                                              ; preds = %579
  store i8 1, i8* %6, align 4
  br label %614

614:                                              ; preds = %579, %613
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillFieldD2Ev(%"class.autofill::AutofillField"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill13AutofillFieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 25
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 24
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0
  %22 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8autofill15ServerFieldTypeENS_6vectorINS2_17AutofillDataModel13ValidityStateENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %21, %"class.std::__1::__tree_node"* %24) #9
  %25 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !22
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN8autofill24PasswordRequirementsSpecD1Ev(%"class.autofill::PasswordRequirementsSpec"* %29) #9
  store i8 0, i8* %25, align 8
  br label %30

30:                                               ; preds = %20, %28
  %31 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 7
  %32 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"*, %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"** %32, align 8
  %34 = icmp eq %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"* %33, null
  br i1 %34, label %49, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"* %33 to i8*
  %37 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 7, i32 0, i32 1
  %38 = load %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"*, %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"** %37, align 8
  %39 = icmp eq %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"* %38, %33
  br i1 %39, label %47, label %40

40:                                               ; preds = %35, %40
  %41 = phi %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"* [ %42, %40 ], [ %38, %35 ]
  %42 = getelementptr inbounds %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction", %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"* %41, i64 -1
  tail call void @_ZN8autofill68AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPredictionD1Ev(%"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"* %42) #9
  %43 = icmp eq %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"* %42, %33
  br i1 %43, label %44, label %40

44:                                               ; preds = %40
  %45 = bitcast %"class.std::__1::vector.26"* %31 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %35
  %48 = phi i8* [ %46, %44 ], [ %36, %35 ]
  store %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"* %33, %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"** %37, align 8
  tail call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %30, %47
  %50 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 3
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = bitcast %"class.std::__1::basic_string"* %50 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %49, %55
  %59 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1
  tail call void @_ZN8autofill13FormFieldDataD2Ev(%"struct.autofill::FormFieldData"* %59) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8autofill13FormFieldDataD2Ev(%"struct.autofill::FormFieldData"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillFieldD0Ev(%"class.autofill::AutofillField"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8autofill13AutofillFieldD2Ev(%"class.autofill::AutofillField"* %0) #9
  %2 = bitcast %"class.autofill::AutofillField"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.autofill::AutofillField"* @_ZN8autofill13AutofillField30CreateForPasswordManagerUploadENS_14FieldSignatureE(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 912) #11
  %3 = bitcast i8* %2 to %"class.autofill::AutofillField"*
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to %"struct.autofill::FormFieldData"*
  tail call void @_ZN8autofill13FormFieldDataC2Ev(%"struct.autofill::FormFieldData"* %5) #9
  %6 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8autofill13AutofillFieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 592
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds i8, i8* %2, i64 596
  %9 = bitcast i8* %8 to i32*
  store i32 %0, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 600
  %11 = getelementptr inbounds i8, i8* %2, i64 632
  %12 = getelementptr inbounds i8, i8* %2, i64 664
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 672
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 80, i1 false) #9
  %14 = getelementptr inbounds i8, i8* %2, i64 752
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 29, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 25, i1 false) #9
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %2, i64 756
  %17 = bitcast i8* %16 to %"class.autofill::AutofillType"*
  tail call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* %17, i32 0) #9
  %18 = getelementptr inbounds i8, i8* %2, i64 768
  %19 = getelementptr inbounds i8, i8* %2, i64 800
  %20 = getelementptr inbounds i8, i8* %2, i64 792
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #9
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 816
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %2, i64 820
  store i8 0, i8* %24, align 4
  %25 = getelementptr inbounds i8, i8* %2, i64 832
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %2, i64 840
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds i8, i8* %2, i64 841
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %2, i64 848
  %30 = getelementptr inbounds i8, i8* %2, i64 904
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %2, i64 908
  store i8 0, i8* %32, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 53, i1 false) #9
  ret %"class.autofill::AutofillField"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillField18set_heuristic_typeENS_15ServerFieldTypeE(%"class.autofill::AutofillField"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.autofill::AutofillType", align 4
  %4 = icmp ult i32 %1, 118
  %5 = icmp ne i32 %1, 61
  %6 = and i1 %4, %5
  %7 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %8 = select i1 %6, i32 %1, i32 1
  store i32 %8, i32* %7, align 8
  %9 = bitcast %"class.autofill::AutofillType"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #9
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %3, i32 0) #9
  %10 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 12
  %11 = bitcast %"class.autofill::AutofillType"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* nonnull align 4 %9, i64 12, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillField15set_server_typeENS_15ServerFieldTypeE(%"class.autofill::AutofillField"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.autofill::AutofillType", align 4
  %4 = add i32 %1, -20
  %5 = icmp ult i32 %4, 5
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 4
  store i32 %1, i32* %7, align 8
  %8 = bitcast %"class.autofill::AutofillType"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #9
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %3, i32 0) #9
  %9 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 12
  %10 = bitcast %"class.autofill::AutofillType"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* nonnull align 4 %8, i64 12, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #9
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillField29add_possible_types_validitiesERKNSt3__13mapINS_15ServerFieldTypeENS_17AutofillDataModel13ValidityStateENS1_4lessIS3_EENS1_9allocatorINS1_4pairIKS3_S5_EEEEEE(%"class.autofill::AutofillField"*, %"class.std::__1::map.56"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::map.56", %"class.std::__1::map.56"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::map.56", %"class.std::__1::map.56"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16
  %9 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::map"* %8 to i64*
  %15 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  br label %17

16:                                               ; preds = %181, %2
  ret void

17:                                               ; preds = %7, %181
  %18 = phi %"class.std::__1::__tree_end_node"* [ %4, %7 ], [ %182, %181 ]
  %19 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node.74"*
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.74", %"class.std::__1::__tree_node.74"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %51, label %23

23:                                               ; preds = %17
  %24 = load i32, i32* %20, align 4
  br label %25

25:                                               ; preds = %47, %23
  %26 = phi %"class.std::__1::__tree_node"* [ %50, %47 ], [ %21, %23 ]
  %27 = phi %"class.std::__1::__tree_node_base"** [ %49, %47 ], [ %11, %23 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 1, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %24, %29
  br i1 %30, label %31, label %37

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %47

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %51

37:                                               ; preds = %25
  %38 = icmp slt i32 %29, %24
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 1
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %51

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %51

47:                                               ; preds = %39, %31
  %48 = phi %"class.std::__1::__tree_node_base"* [ %33, %31 ], [ %41, %39 ]
  %49 = phi %"class.std::__1::__tree_node_base"** [ %32, %31 ], [ %40, %39 ]
  %50 = bitcast %"class.std::__1::__tree_node_base"* %48 to %"class.std::__1::__tree_node"*
  br label %25

51:                                               ; preds = %17, %45, %43, %35
  %52 = phi %"class.std::__1::__tree_end_node"* [ %36, %35 ], [ %44, %43 ], [ %46, %45 ], [ %9, %17 ]
  %53 = phi %"class.std::__1::__tree_node_base"** [ %32, %35 ], [ %40, %43 ], [ %27, %45 ], [ %12, %17 ]
  %54 = bitcast %"class.std::__1::__tree_node_base"** %53 to %"class.std::__1::__tree_node"**
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %80

57:                                               ; preds = %51
  %58 = tail call i8* @_Znwm(i64 64) #11, !noalias !50
  %59 = getelementptr inbounds i8, i8* %58, i64 32
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %20, align 4, !noalias !50
  store i32 %61, i32* %60, align 8, !noalias !50
  %62 = getelementptr inbounds i8, i8* %58, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #9, !noalias !50
  %63 = bitcast i8* %58 to %"class.std::__1::__tree_node"*
  %64 = bitcast i8* %58 to %"class.std::__1::__tree_node_base"*
  %65 = getelementptr inbounds i8, i8* %58, i64 16
  %66 = bitcast i8* %65 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %52, %"class.std::__1::__tree_end_node"** %66, align 8
  %67 = bitcast %"class.std::__1::__tree_node_base"** %53 to i8**
  store i8* %58, i8** %67, align 8
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %57
  %73 = ptrtoint %"class.std::__1::__tree_node_base"* %70 to i64
  store i64 %73, i64* %14, align 8
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %75

75:                                               ; preds = %72, %57
  %76 = phi %"class.std::__1::__tree_node_base"* [ %64, %57 ], [ %74, %72 ]
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %77, %"class.std::__1::__tree_node_base"* %76) #9
  %78 = load i64, i64* %15, align 8
  %79 = add i64 %78, 1
  store i64 %79, i64* %15, align 8
  br label %80

80:                                               ; preds = %51, %75
  %81 = phi %"class.std::__1::__tree_node"* [ %63, %75 ], [ %55, %51 ]
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 1, i32 0, i32 1
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to i32*
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %86 = load i32*, i32** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = icmp eq i32* %86, %88
  %90 = ptrtoint i32* %88 to i64
  br i1 %89, label %96, label %91

91:                                               ; preds = %80
  %92 = load i32, i32* %84, align 4
  store i32 %92, i32* %86, align 4
  %93 = getelementptr inbounds i32, i32* %86, i64 1
  %94 = ptrtoint i32* %93 to i64
  %95 = bitcast i32** %85 to i64*
  store i64 %94, i64* %95, align 8
  br label %153

96:                                               ; preds = %80
  %97 = ptrtoint i32* %86 to i64
  %98 = bitcast i32** %85 to i64*
  %99 = bitcast %"class.std::__1::vector.65"* %82 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %97, %100
  %102 = ashr exact i64 %101, 2
  %103 = add nsw i64 %102, 1
  %104 = icmp ugt i64 %103, 4611686018427387903
  br i1 %104, label %105, label %107

105:                                              ; preds = %96
  %106 = bitcast %"class.std::__1::vector.65"* %82 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %106) #10
  unreachable

107:                                              ; preds = %96
  %108 = bitcast i32** %87 to i64*
  %109 = sub i64 %90, %100
  %110 = ashr exact i64 %109, 2
  %111 = icmp ult i64 %110, 2305843009213693951
  br i1 %111, label %112, label %120

112:                                              ; preds = %107
  %113 = ashr exact i64 %109, 1
  %114 = icmp ult i64 %113, %103
  %115 = select i1 %114, i64 %103, i64 %113
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %112
  %118 = icmp ugt i64 %115, 4611686018427387903
  br i1 %118, label %119, label %120

119:                                              ; preds = %117
  tail call void @abort() #10
  unreachable

120:                                              ; preds = %117, %107
  %121 = phi i64 [ %115, %117 ], [ 4611686018427387903, %107 ]
  %122 = shl i64 %121, 2
  %123 = tail call i8* @_Znwm(i64 %122) #11
  %124 = bitcast i8* %123 to i32*
  br label %125

125:                                              ; preds = %120, %112
  %126 = phi i64 [ %121, %120 ], [ 0, %112 ]
  %127 = phi i32* [ %124, %120 ], [ null, %112 ]
  %128 = getelementptr inbounds i32, i32* %127, i64 %102
  %129 = getelementptr inbounds i32, i32* %127, i64 %126
  %130 = ptrtoint i32* %129 to i64
  %131 = load i32, i32* %84, align 4
  store i32 %131, i32* %128, align 4
  %132 = getelementptr inbounds i32, i32* %128, i64 1
  %133 = ptrtoint i32* %132 to i64
  %134 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %82, i64 0, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = load i64, i64* %98, align 8
  %137 = ptrtoint i32* %135 to i64
  %138 = sub i64 %136, %137
  %139 = ashr exact i64 %138, 2
  %140 = sub nsw i64 0, %139
  %141 = getelementptr inbounds i32, i32* %128, i64 %140
  %142 = ptrtoint i32* %141 to i64
  %143 = icmp sgt i64 %138, 0
  br i1 %143, label %144, label %148

144:                                              ; preds = %125
  %145 = bitcast i32* %141 to i8*
  %146 = bitcast i32* %135 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %146, i64 %138, i1 false) #9
  %147 = load i32*, i32** %134, align 8
  br label %148

148:                                              ; preds = %144, %125
  %149 = phi i32* [ %135, %125 ], [ %147, %144 ]
  store i64 %142, i64* %99, align 8
  store i64 %133, i64* %98, align 8
  store i64 %130, i64* %108, align 8
  %150 = icmp eq i32* %149, null
  br i1 %150, label %153, label %151

151:                                              ; preds = %148
  %152 = bitcast i32* %149 to i8*
  tail call void @_ZdlPv(i8* %152) #11
  br label %153

153:                                              ; preds = %91, %148, %151
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 1, i32 0
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %157, label %165

157:                                              ; preds = %153
  %158 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node_base"*
  %159 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 2
  %160 = bitcast %"class.std::__1::__tree_end_node"* %159 to %"class.std::__1::__tree_end_node"**
  %161 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %160, align 8
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %161, i64 0, i32 0
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %158
  br i1 %164, label %181, label %172

165:                                              ; preds = %153, %165
  %166 = phi %"class.std::__1::__tree_node_base"* [ %168, %165 ], [ %155, %153 ]
  %167 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %166, i64 0, i32 0, i32 0
  %168 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %167, align 8
  %169 = icmp eq %"class.std::__1::__tree_node_base"* %168, null
  br i1 %169, label %170, label %165

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %166, i64 0, i32 0
  br label %181

172:                                              ; preds = %157, %172
  %173 = phi %"class.std::__1::__tree_end_node"** [ %176, %172 ], [ %160, %157 ]
  %174 = bitcast %"class.std::__1::__tree_end_node"** %173 to %"class.std::__1::__tree_node_base"**
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %175, i64 0, i32 2
  %177 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %176, align 8
  %178 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %177, i64 0, i32 0
  %179 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %178, align 8
  %180 = icmp eq %"class.std::__1::__tree_node_base"* %179, %175
  br i1 %180, label %181, label %172

181:                                              ; preds = %172, %157, %170
  %182 = phi %"class.std::__1::__tree_end_node"* [ %171, %170 ], [ %161, %157 ], [ %177, %172 ]
  %183 = icmp eq %"class.std::__1::__tree_end_node"* %182, %5
  br i1 %183, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillField32get_validities_for_possible_typeENS_15ServerFieldTypeE(%"class.std::__1::vector.65"* noalias sret, %"class.autofill::AutofillField"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %1, i64 0, i32 16
  %5 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %1, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %30, label %9

9:                                                ; preds = %3, %9
  %10 = phi %"class.std::__1::__tree_end_node"* [ %20, %9 ], [ %5, %3 ]
  %11 = phi %"class.std::__1::__tree_node"* [ %21, %9 ], [ %7, %3 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, %2
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_node_base"** %15 to %"class.std::__1::__tree_node"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node"* %11 to %"class.std::__1::__tree_node"**
  %19 = select i1 %14, %"class.std::__1::__tree_node"** %16, %"class.std::__1::__tree_node"** %18
  %20 = select i1 %14, %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"* %17
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %23, label %9

23:                                               ; preds = %9
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %20, %5
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, %2
  br i1 %29, label %30, label %40

30:                                               ; preds = %25, %23, %3
  %31 = tail call i8* @_Znwm(i64 4) #11
  %32 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %0, i64 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::vector.65"* %0 to i8**
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds i8, i8* %31, i64 4
  %35 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast i32** %35 to i8**
  store i8* %34, i8** %36, align 8
  %37 = bitcast i32** %32 to i64*
  %38 = bitcast i8* %31 to i32*
  store i32 0, i32* %38, align 4
  %39 = ptrtoint i8* %34 to i64
  store i64 %39, i64* %37, align 8
  br label %133

40:                                               ; preds = %25
  %41 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %1, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %58, %40
  %43 = phi %"class.std::__1::__tree_node"* [ %61, %58 ], [ %7, %40 ]
  %44 = phi %"class.std::__1::__tree_node_base"** [ %60, %58 ], [ %41, %40 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 1, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %46, %2
  br i1 %47, label %48, label %52

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %62, label %58

52:                                               ; preds = %42
  %53 = icmp slt i32 %46, %2
  br i1 %53, label %54, label %62

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 1
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %54, %48
  %59 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %56, %54 ]
  %60 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %55, %54 ]
  %61 = bitcast %"class.std::__1::__tree_node_base"* %59 to %"class.std::__1::__tree_node"*
  br label %42

62:                                               ; preds = %52, %54, %48
  %63 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %55, %54 ], [ %44, %52 ]
  %64 = bitcast %"class.std::__1::__tree_node_base"** %63 to %"class.std::__1::__tree_node"**
  %65 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node"* %65, null
  br i1 %66, label %67, label %94

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 0
  %69 = tail call i8* @_Znwm(i64 64) #11, !noalias !53
  %70 = getelementptr inbounds i8, i8* %69, i64 32
  %71 = bitcast i8* %70 to i32*
  store i32 %2, i32* %71, align 8, !noalias !53
  %72 = getelementptr inbounds i8, i8* %69, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #9, !noalias !53
  %73 = bitcast i8* %69 to %"class.std::__1::__tree_node"*
  %74 = bitcast i8* %69 to %"class.std::__1::__tree_node_base"*
  %75 = getelementptr inbounds i8, i8* %69, i64 16
  %76 = bitcast i8* %75 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %68, %"class.std::__1::__tree_end_node"** %76, align 8
  %77 = bitcast %"class.std::__1::__tree_node_base"** %63 to i8**
  store i8* %69, i8** %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %4, i64 0, i32 0, i32 0
  %79 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 0, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %67
  %84 = ptrtoint %"class.std::__1::__tree_node_base"* %81 to i64
  %85 = bitcast %"class.std::__1::map"* %4 to i64*
  store i64 %84, i64* %85, align 8
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  br label %87

87:                                               ; preds = %83, %67
  %88 = phi %"class.std::__1::__tree_node_base"* [ %74, %67 ], [ %86, %83 ]
  %89 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %1, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %90, %"class.std::__1::__tree_node_base"* %88) #9
  %91 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %1, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  store i64 %93, i64* %91, align 8
  br label %94

94:                                               ; preds = %62, %87
  %95 = phi %"class.std::__1::__tree_node"* [ %73, %87 ], [ %65, %62 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %95, i64 0, i32 1, i32 0, i32 1
  %97 = bitcast %"class.std::__1::vector.65"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #9
  %98 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %95, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %99 = bitcast i32** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.std::__1::vector.65"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %100, %102
  %104 = ashr exact i64 %103, 2
  %105 = icmp eq i64 %103, 0
  br i1 %105, label %133, label %106

106:                                              ; preds = %94
  %107 = icmp ugt i64 %104, 4611686018427387903
  br i1 %107, label %108, label %110

108:                                              ; preds = %106
  %109 = bitcast %"class.std::__1::vector.65"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %109) #10
  unreachable

110:                                              ; preds = %106
  %111 = tail call i8* @_Znwm(i64 %103) #11
  %112 = bitcast i8* %111 to i32*
  %113 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %0, i64 0, i32 0, i32 1
  %114 = bitcast i32** %113 to i8**
  store i8* %111, i8** %114, align 8
  %115 = bitcast %"class.std::__1::vector.65"* %0 to i8**
  store i8* %111, i8** %115, align 8
  %116 = getelementptr inbounds i32, i32* %112, i64 %104
  %117 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %116, i32** %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %96, i64 0, i32 0, i32 0
  %119 = load i32*, i32** %118, align 8
  %120 = load i64, i64* %99, align 8
  %121 = bitcast i32** %113 to i64*
  %122 = ptrtoint i8* %111 to i64
  %123 = ptrtoint i32* %119 to i64
  %124 = sub i64 %120, %123
  %125 = icmp sgt i64 %124, 0
  br i1 %125, label %126, label %131

126:                                              ; preds = %110
  %127 = lshr exact i64 %124, 2
  %128 = bitcast i32* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %111, i8* align 4 %128, i64 %124, i1 false) #9
  %129 = getelementptr inbounds i32, i32* %112, i64 %127
  %130 = ptrtoint i32* %129 to i64
  br label %131

131:                                              ; preds = %126, %110
  %132 = phi i64 [ %130, %126 ], [ %122, %110 ]
  store i64 %132, i64* %121, align 8
  br label %133

133:                                              ; preds = %131, %94, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillField11SetHtmlTypeENS_13HtmlFieldTypeENS_13HtmlFieldModeE(%"class.autofill::AutofillField"* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.autofill::AutofillType", align 4
  %5 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 13
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 14
  store i32 %2, i32* %6, align 4
  %7 = bitcast %"class.autofill::AutofillType"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #9
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %4, i32 0) #9
  %8 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 12
  %9 = bitcast %"class.autofill::AutofillType"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* nonnull align 4 %7, i64 12, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #9
  %10 = icmp eq i32 %1, 32
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 17
  store i32 1, i32* %12, align 8
  br label %18

13:                                               ; preds = %3
  %14 = icmp eq i32 %1, 33
  %15 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 17
  br i1 %14, label %16, label %17

16:                                               ; preds = %13
  store i32 2, i32* %15, align 8
  br label %18

17:                                               ; preds = %13
  store i32 0, i32* %15, align 8
  br label %18

18:                                               ; preds = %16, %17, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillField9SetTypeToERKNS_12AutofillTypeE(%"class.autofill::AutofillField"* nocapture, %"class.autofill::AutofillType"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 12
  %4 = bitcast %"class.autofill::AutofillType"* %3 to i8*
  %5 = bitcast %"class.autofill::AutofillType"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 12, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK8autofill13AutofillField12ComputedTypeEv(%"class.autofill::AutofillField"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.autofill::AutofillType", align 4
  %3 = alloca %"class.autofill::AutofillType", align 4
  %4 = alloca %"class.autofill::AutofillType", align 8
  %5 = alloca %"class.autofill::AutofillType", align 4
  %6 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 13
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 4
  %10 = tail call i32 @_ZN8autofill24GroupTypeOfHtmlFieldTypeENS_13HtmlFieldTypeENS_13HtmlFieldModeE(i32 %7, i32 %9) #9
  %11 = icmp eq i32 %10, 8
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = load i32, i32* %6, align 8
  %14 = load i32, i32* %8, align 4
  %15 = tail call i32 @_ZN8autofill24GroupTypeOfHtmlFieldTypeENS_13HtmlFieldTypeENS_13HtmlFieldModeE(i32 %13, i32 %14) #9
  %16 = icmp eq i32 %15, 7
  br i1 %16, label %17, label %28

17:                                               ; preds = %12, %1
  %18 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = tail call i32 @_ZN8autofill26GroupTypeOfServerFieldTypeENS_15ServerFieldTypeE(i32 %19) #9
  %21 = icmp eq i32 %20, 8
  br i1 %21, label %26, label %22

22:                                               ; preds = %17
  %23 = load i32, i32* %18, align 8
  %24 = tail call i32 @_ZN8autofill26GroupTypeOfServerFieldTypeENS_15ServerFieldTypeE(i32 %23) #9
  %25 = icmp eq i32 %24, 7
  br i1 %25, label %26, label %28

26:                                               ; preds = %22, %17
  %27 = load i32, i32* %18, align 8
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %4, i32 %27) #9
  br label %116

28:                                               ; preds = %22, %12
  %29 = load i32, i32* %6, align 8
  switch i32 %29, label %57 [
    i32 22, label %30
    i32 0, label %60
    i32 45, label %42
  ]

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 4
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -2
  %34 = icmp eq i32 %33, 56
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %4, i32 %32) #9
  br label %116

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, -2
  %40 = icmp eq i32 %39, 56
  br i1 %40, label %41, label %57

41:                                               ; preds = %36
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %4, i32 %38) #9
  br label %116

42:                                               ; preds = %28
  %43 = bitcast %"class.autofill::AutofillType"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 4
  %45 = load i32, i32* %44, align 8
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %2, i32 %45) #9
  %46 = call i32 @_ZNK8autofill12AutofillType5groupEv(%"class.autofill::AutofillType"* nonnull %2) #9
  %47 = icmp eq i32 %46, 9
  %48 = bitcast %"class.autofill::AutofillType"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %48) #9
  br i1 %47, label %49, label %50

49:                                               ; preds = %42
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %48) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %43) #9
  br label %60

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %52 = load i32, i32* %51, align 8
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %3, i32 %52) #9
  %53 = call i32 @_ZNK8autofill12AutofillType5groupEv(%"class.autofill::AutofillType"* nonnull %3) #9
  %54 = icmp eq i32 %53, 9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %48) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %43) #9
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = load i32, i32* %6, align 8
  br label %57

57:                                               ; preds = %55, %28, %36
  %58 = phi i32 [ %56, %55 ], [ %29, %28 ], [ 22, %36 ]
  %59 = load i32, i32* %8, align 4
  call void @_ZN8autofill12AutofillTypeC1ENS_13HtmlFieldTypeENS_13HtmlFieldModeE(%"class.autofill::AutofillType"* nonnull %4, i32 %58, i32 %59) #9
  br label %116

60:                                               ; preds = %28, %49, %50
  %61 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 4
  %62 = load i32, i32* %61, align 8
  switch i32 %62, label %81 [
    i32 0, label %63
    i32 7, label %66
    i32 51, label %70
    i32 3, label %74
    i32 5, label %83
  ]

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %65 = load i32, i32* %64, align 8
  br label %114

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 51
  br i1 %69, label %78, label %81

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 7
  br i1 %73, label %78, label %81

74:                                               ; preds = %60
  %75 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 91
  br i1 %77, label %78, label %81

78:                                               ; preds = %74, %70, %66
  %79 = phi i32 [ 91, %74 ], [ 7, %70 ], [ 51, %66 ]
  %80 = bitcast %"class.autofill::AutofillType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %80) #9
  br label %102

81:                                               ; preds = %60, %74, %70, %66
  %82 = bitcast %"class.autofill::AutofillType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %82) #9
  br label %88

83:                                               ; preds = %60
  %84 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 92
  %87 = bitcast %"class.autofill::AutofillType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %87) #9
  br i1 %86, label %102, label %88

88:                                               ; preds = %83, %81
  %89 = phi i8* [ %82, %81 ], [ %87, %83 ]
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %5, i32 %62) #9
  %90 = call i32 @_ZNK8autofill12AutofillType5groupEv(%"class.autofill::AutofillType"* nonnull %5) #9
  %91 = icmp eq i32 %90, 10
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 59
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %89) #9
  br i1 %95, label %114, label %97

96:                                               ; preds = %88
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %89) #9
  br label %97

97:                                               ; preds = %92, %96
  %98 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8autofill8features45kAutofillEnableSupportForMoreStructureInNamesE) #9
  br i1 %98, label %99, label %105

99:                                               ; preds = %97
  %100 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %101 = load i32, i32* %100, align 8
  switch i32 %101, label %105 [
    i32 109, label %114
    i32 107, label %114
  ]

102:                                              ; preds = %83, %78
  %103 = phi i32 [ %79, %78 ], [ 92, %83 ]
  %104 = phi i8* [ %80, %78 ], [ %87, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %104) #9
  br label %114

105:                                              ; preds = %99, %97
  %106 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8autofill8features49kAutofillEnableSupportForMoreStructureInAddressesE) #9
  br i1 %106, label %107, label %112

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, -103
  %111 = icmp ugt i32 %110, 1
  br i1 %111, label %112, label %114

112:                                              ; preds = %105, %107
  %113 = load i32, i32* %61, align 8
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %4, i32 %113) #9
  br label %116

114:                                              ; preds = %63, %99, %99, %92, %102, %107
  %115 = phi i32 [ %65, %63 ], [ %101, %99 ], [ %101, %99 ], [ 59, %92 ], [ %103, %102 ], [ %109, %107 ]
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %4, i32 %115) #9
  br label %116

116:                                              ; preds = %112, %114, %57, %41, %35, %26
  %117 = bitcast %"class.autofill::AutofillType"* %4 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %4, i64 0, i32 2
  %120 = load i32, i32* %119, align 8
  %121 = insertvalue { i64, i32 } undef, i64 %118, 0
  %122 = insertvalue { i64, i32 } %121, i32 %120, 1
  ret { i64, i32 } %122
}

declare i32 @_ZN8autofill24GroupTypeOfHtmlFieldTypeENS_13HtmlFieldTypeENS_13HtmlFieldModeE(i32, i32) local_unnamed_addr #1

declare i32 @_ZN8autofill26GroupTypeOfServerFieldTypeENS_15ServerFieldTypeE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8autofill13AutofillField22IsCreditCardPredictionEv(%"class.autofill::AutofillField"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.autofill::AutofillType", align 4
  %3 = alloca %"class.autofill::AutofillType", align 4
  %4 = bitcast %"class.autofill::AutofillType"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %2, i32 %6) #9
  %7 = call i32 @_ZNK8autofill12AutofillType5groupEv(%"class.autofill::AutofillType"* nonnull %2) #9
  %8 = icmp eq i32 %7, 9
  %9 = bitcast %"class.autofill::AutofillType"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #9
  br i1 %8, label %15, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %3, i32 %12) #9
  %13 = call i32 @_ZNK8autofill12AutofillType5groupEv(%"class.autofill::AutofillType"* nonnull %3) #9
  %14 = icmp eq i32 %13, 9
  br label %15

15:                                               ; preds = %10, %1
  %16 = phi i1 [ true, %1 ], [ %14, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #9
  ret i1 %16
}

declare void @_ZN8autofill12AutofillTypeC1ENS_13HtmlFieldTypeENS_13HtmlFieldModeE(%"class.autofill::AutofillType"*, i32, i32) unnamed_addr #1

declare i32 @_ZNK8autofill12AutofillType5groupEv(%"class.autofill::AutofillType"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK8autofill13AutofillField4TypeEv(%"class.autofill::AutofillField"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.autofill::AutofillType", align 8
  %3 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8autofill8features34kAutofillServerTypeTakesPrecedenceE) #9
  br i1 %3, label %4, label %13

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 4, !range !22
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %2, i32 %10) #9
  br label %26

13:                                               ; preds = %8, %4, %1
  %14 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 12
  %15 = tail call i32 @_ZNK8autofill12AutofillType15GetStorableTypeEv(%"class.autofill::AutofillType"* %14) #9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.autofill::AutofillType"* %2 to i8*
  %19 = bitcast %"class.autofill::AutofillType"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 4 %19, i64 12, i1 false)
  br label %26

20:                                               ; preds = %13
  %21 = tail call { i64, i32 } @_ZNK8autofill13AutofillField12ComputedTypeEv(%"class.autofill::AutofillField"* %0)
  %22 = extractvalue { i64, i32 } %21, 0
  %23 = extractvalue { i64, i32 } %21, 1
  %24 = bitcast %"class.autofill::AutofillType"* %2 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %2, i64 0, i32 2
  store i32 %23, i32* %25, align 8
  br label %26

26:                                               ; preds = %20, %17, %12
  %27 = bitcast %"class.autofill::AutofillType"* %2 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %2, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = insertvalue { i64, i32 } undef, i64 %28, 0
  %32 = insertvalue { i64, i32 } %31, i32 %30, 1
  ret { i64, i32 } %32
}

declare i32 @_ZNK8autofill12AutofillType15GetStorableTypeEv(%"class.autofill::AutofillType"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8autofill13AutofillField7IsEmptyEv(%"class.autofill::AutofillField"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1, i32 4
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = icmp eq i64 %13, 0
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8autofill13AutofillField17GetFieldSignatureEv(%"class.autofill::AutofillField"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !22
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  br label %36

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %17 = select i1 %13, i16* %15, i16* %16
  %18 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %12 to i64
  %21 = select i1 %13, i64 %19, i64 %20
  %22 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1, i32 5
  %23 = bitcast %"class.std::__1::basic_string.1"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string.1"* %22 to i8*
  %30 = select i1 %26, i8* %28, i8* %29
  %31 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %25 to i64
  %34 = select i1 %26, i64 %32, i64 %33
  %35 = tail call i32 @_ZN8autofill36CalculateFieldSignatureByNameAndTypeEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_IcNS3_IcEEEE(i16* %17, i64 %21, i8* %30, i64 %34) #9
  br label %36

36:                                               ; preds = %8, %5
  %37 = phi i32 [ %7, %5 ], [ %35, %8 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill13AutofillField19FieldSignatureAsStrEv(%"class.std::__1::basic_string.1"* noalias sret, %"class.autofill::AutofillField"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !22
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  br label %37

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %1, i64 0, i32 1, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %18 = select i1 %14, i16* %16, i16* %17
  %19 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  %23 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %1, i64 0, i32 1, i32 5
  %24 = bitcast %"class.std::__1::basic_string.1"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %"class.std::__1::basic_string.1"* %23 to i8*
  %31 = select i1 %27, i8* %29, i8* %30
  %32 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %1, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %26 to i64
  %35 = select i1 %27, i64 %33, i64 %34
  %36 = tail call i32 @_ZN8autofill36CalculateFieldSignatureByNameAndTypeEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_IcNS3_IcEEEE(i16* %18, i64 %22, i8* %31, i64 %35) #9
  br label %37

37:                                               ; preds = %6, %9
  %38 = phi i32 [ %8, %6 ], [ %36, %9 ]
  tail call void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string.1"* sret %0, i32 %38) #9
  ret void
}

declare void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string.1"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8autofill13AutofillField15IsFieldFillableEv(%"class.autofill::AutofillField"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.autofill::AutofillType", align 8
  %3 = alloca %"class.autofill::AutofillType", align 8
  %4 = alloca %"class.autofill::AutofillType", align 8
  %5 = alloca %"class.autofill::AutofillType", align 8
  %6 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8autofill8features30kAutofillFixFillableFieldTypesE) #9
  br i1 %6, label %41, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.autofill::AutofillType"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #9
  %9 = bitcast %"class.autofill::AutofillType"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9)
  %10 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8autofill8features34kAutofillServerTypeTakesPrecedenceE) #9
  br i1 %10, label %11, label %20

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 5
  %13 = load i8, i8* %12, align 4, !range !22
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %3, i32 %17) #9
  br label %32

20:                                               ; preds = %15, %11, %7
  %21 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 12
  %22 = tail call i32 @_ZNK8autofill12AutofillType15GetStorableTypeEv(%"class.autofill::AutofillType"* %21) #9
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.autofill::AutofillType"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 4 %25, i64 12, i1 false) #9
  br label %32

26:                                               ; preds = %20
  %27 = tail call { i64, i32 } @_ZNK8autofill13AutofillField12ComputedTypeEv(%"class.autofill::AutofillField"* %0) #9
  %28 = extractvalue { i64, i32 } %27, 0
  %29 = extractvalue { i64, i32 } %27, 1
  %30 = bitcast %"class.autofill::AutofillType"* %3 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %3, i64 0, i32 2
  store i32 %29, i32* %31, align 8
  br label %32

32:                                               ; preds = %19, %24, %26
  %33 = bitcast %"class.autofill::AutofillType"* %3 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %3, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9)
  %37 = bitcast %"class.autofill::AutofillType"* %4 to i64*
  store i64 %34, i64* %37, align 8
  %38 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %4, i64 0, i32 2
  store i32 %36, i32* %38, align 8
  %39 = call zeroext i1 @_ZNK8autofill12AutofillType9IsUnknownEv(%"class.autofill::AutofillType"* nonnull %4) #9
  %40 = xor i1 %39, true
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #9
  br label %75

41:                                               ; preds = %1
  %42 = bitcast %"class.autofill::AutofillType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %42) #9
  %43 = bitcast %"class.autofill::AutofillType"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %43)
  %44 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8autofill8features34kAutofillServerTypeTakesPrecedenceE) #9
  br i1 %44, label %45, label %54

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 5
  %47 = load i8, i8* %46, align 4, !range !22
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 4
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %2, i32 %51) #9
  br label %66

54:                                               ; preds = %49, %45, %41
  %55 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 12
  %56 = tail call i32 @_ZNK8autofill12AutofillType15GetStorableTypeEv(%"class.autofill::AutofillType"* %55) #9
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.autofill::AutofillType"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 4 %59, i64 12, i1 false) #9
  br label %66

60:                                               ; preds = %54
  %61 = tail call { i64, i32 } @_ZNK8autofill13AutofillField12ComputedTypeEv(%"class.autofill::AutofillField"* %0) #9
  %62 = extractvalue { i64, i32 } %61, 0
  %63 = extractvalue { i64, i32 } %61, 1
  %64 = bitcast %"class.autofill::AutofillType"* %2 to i64*
  store i64 %62, i64* %64, align 8
  %65 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %2, i64 0, i32 2
  store i32 %63, i32* %65, align 8
  br label %66

66:                                               ; preds = %53, %58, %60
  %67 = bitcast %"class.autofill::AutofillType"* %2 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %2, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %43)
  %71 = bitcast %"class.autofill::AutofillType"* %5 to i64*
  store i64 %68, i64* %71, align 8
  %72 = getelementptr inbounds %"class.autofill::AutofillType", %"class.autofill::AutofillType"* %5, i64 0, i32 2
  store i32 %70, i32* %72, align 8
  %73 = call i32 @_ZNK8autofill12AutofillType15GetStorableTypeEv(%"class.autofill::AutofillType"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %42) #9
  %74 = call zeroext i1 @_ZN8autofill19IsFillableFieldTypeENS_15ServerFieldTypeE(i32 %73) #9
  br label %75

75:                                               ; preds = %66, %32
  %76 = phi i1 [ %74, %66 ], [ %40, %32 ]
  ret i1 %76
}

declare zeroext i1 @_ZNK8autofill12AutofillType9IsUnknownEv(%"class.autofill::AutofillType"*) local_unnamed_addr #1

declare zeroext i1 @_ZN8autofill19IsFillableFieldTypeENS_15ServerFieldTypeE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillField23SetPasswordRequirementsENS_24PasswordRequirementsSpecE(%"class.autofill::AutofillField"*, %"class.autofill::PasswordRequirementsSpec"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 10, i32 0, i32 0
  tail call void @_ZN4absl17optional_internal18optional_data_baseIN8autofill24PasswordRequirementsSpecEE6assignIS3_EEvOT_(%"class.absl::optional_internal::optional_data_base.36"* %3, %"class.autofill::PasswordRequirementsSpec"* dereferenceable(80) %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill13AutofillField32NormalizePossibleTypesValiditiesEv(%"class.autofill::AutofillField"*) local_unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %246, %1
  %3 = phi i64 [ 0, %1 ], [ %247, %246 ]
  %4 = lshr i64 %3, 6
  %5 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i64 %4
  %6 = and i64 %3, 62
  %7 = shl i64 1, %6
  %8 = load i64, i64* %5, align 8
  %9 = and i64 %7, %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = or i64 %3, 1
  %13 = icmp eq i64 %12, 119
  br i1 %13, label %27, label %238

14:                                               ; preds = %238, %2
  %15 = phi i64 [ %3, %2 ], [ %12, %238 ]
  %16 = trunc i64 %15 to i32
  %17 = icmp eq i32 %16, 119
  br i1 %17, label %27, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16
  %20 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node"**
  %22 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %19, i64 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::map"* %19 to i64*
  %26 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  br label %28

27:                                               ; preds = %11, %235, %232, %14
  ret void

28:                                               ; preds = %18, %235
  %29 = phi i32 [ %16, %18 ], [ %236, %235 ]
  %30 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8
  %31 = icmp eq %"class.std::__1::__tree_node"* %30, null
  br i1 %31, label %58, label %32

32:                                               ; preds = %28, %54
  %33 = phi %"class.std::__1::__tree_node"* [ %57, %54 ], [ %30, %28 ]
  %34 = phi %"class.std::__1::__tree_node_base"** [ %56, %54 ], [ %22, %28 ]
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 1, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %29, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %54

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 0
  br label %58

44:                                               ; preds = %32
  %45 = icmp slt i32 %36, %29
  br i1 %45, label %46, label %52

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 1
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 0
  br label %58

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 0
  br label %58

54:                                               ; preds = %46, %38
  %55 = phi %"class.std::__1::__tree_node_base"* [ %40, %38 ], [ %48, %46 ]
  %56 = phi %"class.std::__1::__tree_node_base"** [ %39, %38 ], [ %47, %46 ]
  %57 = bitcast %"class.std::__1::__tree_node_base"* %55 to %"class.std::__1::__tree_node"*
  br label %32

58:                                               ; preds = %28, %52, %50, %42
  %59 = phi %"class.std::__1::__tree_end_node"* [ %43, %42 ], [ %51, %50 ], [ %53, %52 ], [ %20, %28 ]
  %60 = phi %"class.std::__1::__tree_node_base"** [ %39, %42 ], [ %47, %50 ], [ %34, %52 ], [ %23, %28 ]
  %61 = bitcast %"class.std::__1::__tree_node_base"** %60 to %"class.std::__1::__tree_node"**
  %62 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node"* %62, null
  br i1 %63, label %64, label %86

64:                                               ; preds = %58
  %65 = tail call i8* @_Znwm(i64 64) #11, !noalias !56
  %66 = getelementptr inbounds i8, i8* %65, i64 32
  %67 = bitcast i8* %66 to i32*
  store i32 %29, i32* %67, align 8, !noalias !56
  %68 = getelementptr inbounds i8, i8* %65, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #9, !noalias !56
  %69 = bitcast i8* %65 to %"class.std::__1::__tree_node"*
  %70 = bitcast i8* %65 to %"class.std::__1::__tree_node_base"*
  %71 = getelementptr inbounds i8, i8* %65, i64 16
  %72 = bitcast i8* %71 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %59, %"class.std::__1::__tree_end_node"** %72, align 8
  %73 = bitcast %"class.std::__1::__tree_node_base"** %60 to i8**
  store i8* %65, i8** %73, align 8
  %74 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %64
  %79 = ptrtoint %"class.std::__1::__tree_node_base"* %76 to i64
  store i64 %79, i64* %25, align 8
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  br label %81

81:                                               ; preds = %78, %64
  %82 = phi %"class.std::__1::__tree_node_base"* [ %70, %64 ], [ %80, %78 ]
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %83, %"class.std::__1::__tree_node_base"* %82) #9
  %84 = load i64, i64* %26, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %26, align 8
  br label %86

86:                                               ; preds = %58, %81
  %87 = phi %"class.std::__1::__tree_node"* [ %69, %81 ], [ %62, %58 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %87, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  %90 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %87, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %91 = load i32*, i32** %90, align 8
  %92 = icmp eq i32* %89, %91
  br i1 %92, label %93, label %219

93:                                               ; preds = %86
  %94 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8
  %95 = icmp eq %"class.std::__1::__tree_node"* %94, null
  br i1 %95, label %122, label %96

96:                                               ; preds = %93, %118
  %97 = phi %"class.std::__1::__tree_node"* [ %121, %118 ], [ %94, %93 ]
  %98 = phi %"class.std::__1::__tree_node_base"** [ %120, %118 ], [ %22, %93 ]
  %99 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 1, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp slt i32 %29, %100
  br i1 %101, label %102, label %108

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %106, label %118

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 0
  br label %122

108:                                              ; preds = %96
  %109 = icmp slt i32 %100, %29
  br i1 %109, label %110, label %116

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 1
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node_base"* %112, null
  br i1 %113, label %114, label %118

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 0
  br label %122

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 0
  br label %122

118:                                              ; preds = %110, %102
  %119 = phi %"class.std::__1::__tree_node_base"* [ %104, %102 ], [ %112, %110 ]
  %120 = phi %"class.std::__1::__tree_node_base"** [ %103, %102 ], [ %111, %110 ]
  %121 = bitcast %"class.std::__1::__tree_node_base"* %119 to %"class.std::__1::__tree_node"*
  br label %96

122:                                              ; preds = %93, %116, %114, %106
  %123 = phi %"class.std::__1::__tree_end_node"* [ %107, %106 ], [ %115, %114 ], [ %117, %116 ], [ %20, %93 ]
  %124 = phi %"class.std::__1::__tree_node_base"** [ %103, %106 ], [ %111, %114 ], [ %98, %116 ], [ %23, %93 ]
  %125 = bitcast %"class.std::__1::__tree_node_base"** %124 to %"class.std::__1::__tree_node"**
  %126 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node"* %126, null
  br i1 %127, label %128, label %150

128:                                              ; preds = %122
  %129 = tail call i8* @_Znwm(i64 64) #11, !noalias !59
  %130 = getelementptr inbounds i8, i8* %129, i64 32
  %131 = bitcast i8* %130 to i32*
  store i32 %29, i32* %131, align 8, !noalias !59
  %132 = getelementptr inbounds i8, i8* %129, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 24, i1 false) #9, !noalias !59
  %133 = bitcast i8* %129 to %"class.std::__1::__tree_node"*
  %134 = bitcast i8* %129 to %"class.std::__1::__tree_node_base"*
  %135 = getelementptr inbounds i8, i8* %129, i64 16
  %136 = bitcast i8* %135 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %123, %"class.std::__1::__tree_end_node"** %136, align 8
  %137 = bitcast %"class.std::__1::__tree_node_base"** %124 to i8**
  store i8* %129, i8** %137, align 8
  %138 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %138, i64 0, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %145, label %142

142:                                              ; preds = %128
  %143 = ptrtoint %"class.std::__1::__tree_node_base"* %140 to i64
  store i64 %143, i64* %25, align 8
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  br label %145

145:                                              ; preds = %142, %128
  %146 = phi %"class.std::__1::__tree_node_base"* [ %134, %128 ], [ %144, %142 ]
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %147, %"class.std::__1::__tree_node_base"* %146) #9
  %148 = load i64, i64* %26, align 8
  %149 = add i64 %148, 1
  store i64 %149, i64* %26, align 8
  br label %150

150:                                              ; preds = %122, %145
  %151 = phi %"class.std::__1::__tree_node"* [ %133, %145 ], [ %126, %122 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 1, i32 0, i32 1
  %153 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %154 = load i32*, i32** %153, align 8
  %155 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %156 = load i32*, i32** %155, align 8
  %157 = icmp ult i32* %154, %156
  %158 = ptrtoint i32* %156 to i64
  br i1 %157, label %159, label %163

159:                                              ; preds = %150
  store i32 0, i32* %154, align 4
  %160 = getelementptr inbounds i32, i32* %154, i64 1
  %161 = ptrtoint i32* %160 to i64
  %162 = bitcast i32** %153 to i64*
  store i64 %161, i64* %162, align 8
  br label %219

163:                                              ; preds = %150
  %164 = ptrtoint i32* %154 to i64
  %165 = bitcast i32** %153 to i64*
  %166 = bitcast %"class.std::__1::vector.65"* %152 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = sub i64 %164, %167
  %169 = ashr exact i64 %168, 2
  %170 = add nsw i64 %169, 1
  %171 = icmp ugt i64 %170, 4611686018427387903
  br i1 %171, label %172, label %174

172:                                              ; preds = %163
  %173 = bitcast %"class.std::__1::vector.65"* %152 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %173) #10
  unreachable

174:                                              ; preds = %163
  %175 = bitcast i32** %155 to i64*
  %176 = sub i64 %158, %167
  %177 = ashr exact i64 %176, 2
  %178 = icmp ult i64 %177, 2305843009213693951
  br i1 %178, label %179, label %187

179:                                              ; preds = %174
  %180 = ashr exact i64 %176, 1
  %181 = icmp ult i64 %180, %170
  %182 = select i1 %181, i64 %170, i64 %180
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %192, label %184

184:                                              ; preds = %179
  %185 = icmp ugt i64 %182, 4611686018427387903
  br i1 %185, label %186, label %187

186:                                              ; preds = %184
  tail call void @abort() #10
  unreachable

187:                                              ; preds = %184, %174
  %188 = phi i64 [ %182, %184 ], [ 4611686018427387903, %174 ]
  %189 = shl i64 %188, 2
  %190 = tail call i8* @_Znwm(i64 %189) #11
  %191 = bitcast i8* %190 to i32*
  br label %192

192:                                              ; preds = %187, %179
  %193 = phi i64 [ %188, %187 ], [ 0, %179 ]
  %194 = phi i32* [ %191, %187 ], [ null, %179 ]
  %195 = getelementptr inbounds i32, i32* %194, i64 %169
  %196 = getelementptr inbounds i32, i32* %194, i64 %193
  %197 = ptrtoint i32* %196 to i64
  store i32 0, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %195, i64 1
  %199 = ptrtoint i32* %198 to i64
  %200 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %152, i64 0, i32 0, i32 0
  %201 = load i32*, i32** %200, align 8
  %202 = load i64, i64* %165, align 8
  %203 = ptrtoint i32* %201 to i64
  %204 = sub i64 %202, %203
  %205 = ashr exact i64 %204, 2
  %206 = sub nsw i64 0, %205
  %207 = getelementptr inbounds i32, i32* %195, i64 %206
  %208 = ptrtoint i32* %207 to i64
  %209 = icmp sgt i64 %204, 0
  br i1 %209, label %210, label %214

210:                                              ; preds = %192
  %211 = bitcast i32* %207 to i8*
  %212 = bitcast i32* %201 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %212, i64 %204, i1 false) #9
  %213 = load i32*, i32** %200, align 8
  br label %214

214:                                              ; preds = %210, %192
  %215 = phi i32* [ %201, %192 ], [ %213, %210 ]
  store i64 %208, i64* %166, align 8
  store i64 %199, i64* %165, align 8
  store i64 %197, i64* %175, align 8
  %216 = icmp eq i32* %215, null
  br i1 %216, label %219, label %217

217:                                              ; preds = %214
  %218 = bitcast i32* %215 to i8*
  tail call void @_ZdlPv(i8* %218) #11
  br label %219

219:                                              ; preds = %217, %214, %159, %86
  %220 = add i32 %29, 1
  %221 = icmp ult i32 %220, 119
  br i1 %221, label %222, label %235

222:                                              ; preds = %219, %232
  %223 = phi i32 [ %233, %232 ], [ %220, %219 ]
  %224 = zext i32 %223 to i64
  %225 = lshr i64 %224, 6
  %226 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i64 %225
  %227 = and i64 %224, 63
  %228 = shl i64 1, %227
  %229 = load i64, i64* %226, align 8
  %230 = and i64 %228, %229
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %222
  %233 = add i32 %223, 1
  %234 = icmp eq i32 %233, 119
  br i1 %234, label %27, label %222

235:                                              ; preds = %222, %219
  %236 = phi i32 [ %220, %219 ], [ %223, %222 ]
  %237 = icmp eq i32 %236, 119
  br i1 %237, label %27, label %28

238:                                              ; preds = %11
  %239 = lshr i64 %3, 6
  %240 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i64 %239
  %241 = and i64 %12, 63
  %242 = shl i64 1, %241
  %243 = load i64, i64* %240, align 8
  %244 = and i64 %242, %243
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %246, label %14

246:                                              ; preds = %238
  %247 = add nuw nsw i64 %3, 2
  br label %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN8autofill24PasswordRequirementsSpecD1Ev(%"class.autofill::PasswordRequirementsSpec"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8autofill68AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPredictionD1Ev(%"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN8autofill15ServerFieldTypeENS_6vectorINS2_17AutofillDataModel13ValidityStateENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8autofill15ServerFieldTypeENS_6vectorINS2_17AutofillDataModel13ValidityStateENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8autofill15ServerFieldTypeENS_6vectorINS2_17AutofillDataModel13ValidityStateENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !22
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !22
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !22
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl17optional_internal18optional_data_baseIN8autofill24PasswordRequirementsSpecEE6assignIS3_EEvOT_(%"class.absl::optional_internal::optional_data_base.36"*, %"class.autofill::PasswordRequirementsSpec"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.36", %"class.absl::optional_internal::optional_data_base.36"* %0, i64 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !22
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.36", %"class.absl::optional_internal::optional_data_base.36"* %0, i64 0, i32 0, i32 1, i32 0
  br i1 %5, label %41, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.36", %"class.absl::optional_internal::optional_data_base.36"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  %13 = and i64 %10, -2
  br i1 %12, label %18, label %14, !prof !62

14:                                               ; preds = %7
  %15 = inttoptr i64 %13 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %16 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %15, i64 0, i32 0
  %17 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %16, align 8
  br label %20

18:                                               ; preds = %7
  %19 = inttoptr i64 %13 to %"class.google::protobuf::Arena"*
  br label %20

20:                                               ; preds = %18, %14
  %21 = phi %"class.google::protobuf::Arena"* [ %17, %14 ], [ %19, %18 ]
  %22 = getelementptr inbounds %"class.autofill::PasswordRequirementsSpec", %"class.autofill::PasswordRequirementsSpec"* %1, i64 0, i32 0, i32 1
  %23 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  %27 = and i64 %24, -2
  br i1 %26, label %32, label %28, !prof !62

28:                                               ; preds = %20
  %29 = inttoptr i64 %27 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %30 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %29, i64 0, i32 0
  %31 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %30, align 8
  br label %34

32:                                               ; preds = %20
  %33 = inttoptr i64 %27 to %"class.google::protobuf::Arena"*
  br label %34

34:                                               ; preds = %32, %28
  %35 = phi %"class.google::protobuf::Arena"* [ %31, %28 ], [ %33, %32 ]
  %36 = icmp eq %"class.google::protobuf::Arena"* %21, %35
  br i1 %36, label %37, label %40

37:                                               ; preds = %34
  %38 = icmp eq %"class.autofill::PasswordRequirementsSpec"* %6, %1
  br i1 %38, label %76, label %39

39:                                               ; preds = %37
  tail call void @_ZN8autofill24PasswordRequirementsSpec12InternalSwapEPS0_(%"class.autofill::PasswordRequirementsSpec"* %6, %"class.autofill::PasswordRequirementsSpec"* %1) #9
  br label %76

40:                                               ; preds = %34
  tail call void @_ZN8autofill24PasswordRequirementsSpec8CopyFromERKS0_(%"class.autofill::PasswordRequirementsSpec"* %6, %"class.autofill::PasswordRequirementsSpec"* dereferenceable(80) %1) #9
  br label %76

41:                                               ; preds = %2
  tail call void @_ZN8autofill24PasswordRequirementsSpecC2EPN6google8protobuf5ArenaE(%"class.autofill::PasswordRequirementsSpec"* %6, %"class.google::protobuf::Arena"* null) #9
  %42 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.36", %"class.absl::optional_internal::optional_data_base.36"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %43 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 1
  %46 = icmp eq i64 %45, 0
  %47 = and i64 %44, -2
  br i1 %46, label %52, label %48, !prof !62

48:                                               ; preds = %41
  %49 = inttoptr i64 %47 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %50 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %49, i64 0, i32 0
  %51 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %50, align 8
  br label %54

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"class.google::protobuf::Arena"*
  br label %54

54:                                               ; preds = %52, %48
  %55 = phi %"class.google::protobuf::Arena"* [ %51, %48 ], [ %53, %52 ]
  %56 = getelementptr inbounds %"class.autofill::PasswordRequirementsSpec", %"class.autofill::PasswordRequirementsSpec"* %1, i64 0, i32 0, i32 1
  %57 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %59, 0
  %61 = and i64 %58, -2
  br i1 %60, label %66, label %62, !prof !62

62:                                               ; preds = %54
  %63 = inttoptr i64 %61 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %64 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %63, i64 0, i32 0
  %65 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %64, align 8
  br label %68

66:                                               ; preds = %54
  %67 = inttoptr i64 %61 to %"class.google::protobuf::Arena"*
  br label %68

68:                                               ; preds = %66, %62
  %69 = phi %"class.google::protobuf::Arena"* [ %65, %62 ], [ %67, %66 ]
  %70 = icmp eq %"class.google::protobuf::Arena"* %55, %69
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = icmp eq %"class.autofill::PasswordRequirementsSpec"* %6, %1
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  tail call void @_ZN8autofill24PasswordRequirementsSpec12InternalSwapEPS0_(%"class.autofill::PasswordRequirementsSpec"* %6, %"class.autofill::PasswordRequirementsSpec"* %1) #9
  br label %75

74:                                               ; preds = %68
  tail call void @_ZN8autofill24PasswordRequirementsSpec8CopyFromERKS0_(%"class.autofill::PasswordRequirementsSpec"* %6, %"class.autofill::PasswordRequirementsSpec"* dereferenceable(80) %1) #9
  br label %75

75:                                               ; preds = %71, %73, %74
  store i8 1, i8* %3, align 8
  br label %76

76:                                               ; preds = %40, %39, %37, %75
  ret void
}

declare void @_ZN8autofill24PasswordRequirementsSpec12InternalSwapEPS0_(%"class.autofill::PasswordRequirementsSpec"*, %"class.autofill::PasswordRequirementsSpec"*) local_unnamed_addr #1

declare void @_ZN8autofill24PasswordRequirementsSpec8CopyFromERKS0_(%"class.autofill::PasswordRequirementsSpec"*, %"class.autofill::PasswordRequirementsSpec"* dereferenceable(80)) local_unnamed_addr #1

declare void @_ZN8autofill24PasswordRequirementsSpecC2EPN6google8protobuf5ArenaE(%"class.autofill::PasswordRequirementsSpec"*, %"class.google::protobuf::Arena"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{i8 0, i8 2}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !8}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !8}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !8}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !10}
!40 = distinct !{!40, !8}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !8}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !10}
!49 = distinct !{!49, !8}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill15ServerFieldTypeENS_6vectorINS2_17AutofillDataModel13ValidityStateENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill15ServerFieldTypeENS_6vectorINS2_17AutofillDataModel13ValidityStateENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill15ServerFieldTypeENS_6vectorINS2_17AutofillDataModel13ValidityStateENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_: argument 0"}
!55 = distinct !{!55, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill15ServerFieldTypeENS_6vectorINS2_17AutofillDataModel13ValidityStateENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill15ServerFieldTypeENS_6vectorINS2_17AutofillDataModel13ValidityStateENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_: argument 0"}
!58 = distinct !{!58, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill15ServerFieldTypeENS_6vectorINS2_17AutofillDataModel13ValidityStateENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill15ServerFieldTypeENS_6vectorINS2_17AutofillDataModel13ValidityStateENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_: argument 0"}
!61 = distinct !{!61, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill15ServerFieldTypeENS_6vectorINS2_17AutofillDataModel13ValidityStateENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_"}
!62 = !{!"branch_weights", i32 2000, i32 1}
