; ModuleID = '../../cc/metrics/jank_injector.cc'
source_filename = "../../cc/metrics/jank_injector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.base::NoDestructor" = type { [24 x i8] }
%"class.cc::ScopedJankInjectionEnabler" = type { i8 }
%"class.cc::JankInjector" = type <{ %"struct.cc::JankInjector::JankConfig", i64, i64, i8, [7 x i8] }>
%"struct.cc::JankInjector::JankConfig" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.5", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.base::TimeTicks"*, %"class.base::TimeTicks"*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.base::TimeTicks"* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS7_NS5_IS7_EEEEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISM_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS7_NS5_IS7_EEEEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS7_NS5_IS7_EEEEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEElEERKT_ = comdat any

@_ZN2cc12_GLOBAL__N_123g_jank_enabled_for_testE = internal unnamed_addr global i1 false, align 1
@_ZN8features29kJankInjectionAblationFeatureE = external global %"struct.base::Feature", align 8
@_ZN2cc12_GLOBAL__N_127kJankInjectionTargetPercentE = internal unnamed_addr constant [8 x i8] c"percent\00", align 1
@_ZN2cc12_GLOBAL__N_125kJankInjectionClusterSizeE = internal unnamed_addr constant [8 x i8] c"cluster\00", align 1
@.str = private unnamed_addr constant [13 x i8] c"ScheduleJank\00", align 1
@.str.1 = private unnamed_addr constant [34 x i8] c"../../cc/metrics/jank_injector.cc\00", align 1
@_ZZN2cc12_GLOBAL__N_122IsJankInjectionEnabledEvE7enabled = internal unnamed_addr global i8 0, align 1
@_ZGVZN2cc12_GLOBAL__N_122IsJankInjectionEnabledEvE7enabled = internal global i64 0, align 8
@_ZZN2cc12_GLOBAL__N_128IsJankInjectionEnabledForURLERK4GURLE12allowed_urls = internal global %"class.base::NoDestructor" zeroinitializer, align 16
@_ZGVZN2cc12_GLOBAL__N_128IsJankInjectionEnabledForURLERK4GURLE12allowed_urls = internal global i64 0, align 8
@_ZN2cc12_GLOBAL__N_125kJankInjectionAllowedURLsE = internal unnamed_addr constant [13 x i8] c"allowed_urls\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c",\00", align 1
@_ZZN2cc12_GLOBAL__N_17RunJankENS0_19JankInjectionParamsEE27trace_event_unique_atomic91 = internal global i64 0, align 8
@.str.6 = private unnamed_addr constant [13 x i8] c"cc,benchmark\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"Injected Jank\00", align 1

@_ZN2cc26ScopedJankInjectionEnablerC1Ev = hidden unnamed_addr alias void (%"class.cc::ScopedJankInjectionEnabler"*), void (%"class.cc::ScopedJankInjectionEnabler"*)* @_ZN2cc26ScopedJankInjectionEnablerC2Ev
@_ZN2cc26ScopedJankInjectionEnablerD1Ev = hidden unnamed_addr alias void (%"class.cc::ScopedJankInjectionEnabler"*), void (%"class.cc::ScopedJankInjectionEnabler"*)* @_ZN2cc26ScopedJankInjectionEnablerD2Ev
@_ZN2cc12JankInjectorC1Ev = hidden unnamed_addr alias void (%"class.cc::JankInjector"*), void (%"class.cc::JankInjector"*)* @_ZN2cc12JankInjectorC2Ev
@_ZN2cc12JankInjectorD1Ev = hidden unnamed_addr alias void (%"class.cc::JankInjector"*), void (%"class.cc::JankInjector"*)* @_ZN2cc12JankInjectorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc26ScopedJankInjectionEnablerC2Ev(%"class.cc::ScopedJankInjectionEnabler"* nocapture readnone) unnamed_addr #0 align 2 {
  store i1 true, i1* @_ZN2cc12_GLOBAL__N_123g_jank_enabled_for_testE, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc26ScopedJankInjectionEnablerD2Ev(%"class.cc::ScopedJankInjectionEnabler"* nocapture readnone) unnamed_addr #0 align 2 {
  store i1 false, i1* @_ZN2cc12_GLOBAL__N_123g_jank_enabled_for_testE, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12JankInjectorC2Ev(%"class.cc::JankInjector"* nocapture) unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 0, i32 0
  store i32 10, i32* %4, align 4
  %5 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 0, i32 1
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 1
  %7 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 17, i1 false)
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN2cc12_GLOBAL__N_122IsJankInjectionEnabledEvE7enabled to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %16, !prof !2

10:                                               ; preds = %1
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2cc12_GLOBAL__N_122IsJankInjectionEnabledEvE7enabled) #15
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features29kJankInjectionAblationFeatureE) #15
  %15 = zext i1 %14 to i8
  store i8 %15, i8* @_ZZN2cc12_GLOBAL__N_122IsJankInjectionEnabledEvE7enabled, align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2cc12_GLOBAL__N_122IsJankInjectionEnabledEvE7enabled) #15
  br label %16

16:                                               ; preds = %1, %10, %13
  %17 = load i8, i8* @_ZZN2cc12_GLOBAL__N_122IsJankInjectionEnabledEvE7enabled, align 1, !range !3
  %18 = icmp ne i8 %17, 0
  %19 = load i1, i1* @_ZN2cc12_GLOBAL__N_123g_jank_enabled_for_testE, align 1
  %20 = or i1 %19, %18
  br i1 %20, label %21, label %46

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #15
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 7, i8* %24, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN2cc12_GLOBAL__N_127kJankInjectionTargetPercentE, i64 0, i64 0), i64 7, i1 false) #15
  %25 = getelementptr inbounds i8, i8* %22, i64 7
  store i8 0, i8* %25, align 1
  %26 = load i32, i32* %4, align 8
  %27 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features29kJankInjectionAblationFeatureE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 %26) #15
  store i32 %27, i32* %4, align 8
  %28 = load i8, i8* %24, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #16
  br label %33

33:                                               ; preds = %21, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #15
  %34 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #15
  %35 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 7, i8* %36, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN2cc12_GLOBAL__N_125kJankInjectionClusterSizeE, i64 0, i64 0), i64 7, i1 false) #15
  %37 = getelementptr inbounds i8, i8* %34, i64 7
  store i8 0, i8* %37, align 1
  %38 = load i32, i32* %5, align 4
  %39 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features29kJankInjectionAblationFeatureE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 %38) #15
  store i32 %39, i32* %5, align 4
  %40 = load i8, i8* %36, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #16
  br label %45

45:                                               ; preds = %33, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #15
  br label %46

46:                                               ; preds = %45, %16
  ret void
}

declare i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc12JankInjectorD2Ev(%"class.cc::JankInjector"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc12JankInjector9IsEnabledERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::allocator", align 1
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::allocator", align 1
  %5 = alloca %"class.std::__1::allocator", align 1
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %class.GURL, align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::map", align 16
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZN2cc12_GLOBAL__N_122IsJankInjectionEnabledEvE7enabled to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %22, !prof !2

16:                                               ; preds = %1
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2cc12_GLOBAL__N_122IsJankInjectionEnabledEvE7enabled) #15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features29kJankInjectionAblationFeatureE) #15
  %21 = zext i1 %20 to i8
  store i8 %21, i8* @_ZZN2cc12_GLOBAL__N_122IsJankInjectionEnabledEvE7enabled, align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2cc12_GLOBAL__N_122IsJankInjectionEnabledEvE7enabled) #15
  br label %22

22:                                               ; preds = %1, %16, %19
  %23 = load i8, i8* @_ZZN2cc12_GLOBAL__N_122IsJankInjectionEnabledEvE7enabled, align 1, !range !3
  %24 = icmp ne i8 %23, 0
  %25 = load i1, i1* @_ZN2cc12_GLOBAL__N_123g_jank_enabled_for_testE, align 1
  %26 = or i1 %25, %24
  br i1 %26, label %27, label %294

27:                                               ; preds = %22
  %28 = load atomic i8, i8* bitcast (i64* @_ZGVZN2cc12_GLOBAL__N_128IsJankInjectionEnabledForURLERK4GURLE12allowed_urls to i8*) acquire, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %218, !prof !2

30:                                               ; preds = %27
  %31 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2cc12_GLOBAL__N_128IsJankInjectionEnabledForURLERK4GURLE12allowed_urls) #15
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %218, label %33

33:                                               ; preds = %30
  %34 = bitcast %"class.std::__1::map"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %39 = bitcast %"class.std::__1::__tree_node_base"** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #15, !alias.scope !4
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %35, align 16, !alias.scope !4
  %40 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #15, !noalias !4
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false) #15, !noalias !4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #15, !noalias !4
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 12, i8* %45, align 1, !noalias !4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN2cc12_GLOBAL__N_125kJankInjectionAllowedURLsE, i64 0, i64 0), i64 12, i1 false) #15
  %46 = getelementptr inbounds i8, i8* %43, i64 12
  store i8 0, i8* %46, align 4, !noalias !4
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, %"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features29kJankInjectionAblationFeatureE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #15
  %47 = load i8, i8* %45, align 1, !noalias !4
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8, !noalias !4
  call void @_ZdlPv(i8* %51) #16
  br label %52

52:                                               ; preds = %49, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #15, !noalias !4
  %53 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #15, !noalias !4
  %54 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1, !noalias !4
  %57 = icmp slt i8 %56, 0
  %58 = load i8*, i8** %41, align 8, !noalias !4
  %59 = select i1 %57, i8* %58, i8* %40
  %60 = load i64, i64* %42, align 8, !noalias !4
  %61 = zext i8 %56 to i64
  %62 = select i1 %57, i64 %60, i64 %61
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %8, i8* %59, i64 %62, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1, i32 1, i32 0) #15
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %64 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %63, align 8, !noalias !4
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %66 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %65, align 8, !noalias !4
  %67 = icmp eq %"class.std::__1::basic_string"* %64, %66
  br i1 %67, label %91, label %68

68:                                               ; preds = %52
  %69 = bitcast %class.GURL* %9 to i8*
  %70 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %71 = getelementptr inbounds %class.GURL, %class.GURL* %9, i64 0, i32 2, i32 3, i32 1
  %72 = getelementptr inbounds %class.GURL, %class.GURL* %9, i64 0, i32 0
  %73 = getelementptr inbounds %class.GURL, %class.GURL* %9, i64 0, i32 2, i32 3, i32 0
  %74 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %4, i64 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0
  %76 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  %77 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %78 = bitcast %"class.std::__1::map"* %12 to i64*
  %79 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %80 = getelementptr inbounds %class.GURL, %class.GURL* %9, i64 0, i32 2, i32 5, i32 1
  %81 = getelementptr inbounds %class.GURL, %class.GURL* %9, i64 0, i32 2, i32 5, i32 0
  %82 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %5, i64 0, i32 0
  %83 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %120

89:                                               ; preds = %199
  %90 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %63, align 8, !noalias !4
  br label %91

91:                                               ; preds = %89, %52
  %92 = phi %"class.std::__1::basic_string"* [ %90, %89 ], [ %64, %52 ]
  %93 = icmp eq %"class.std::__1::basic_string"* %92, null
  br i1 %93, label %115, label %94

94:                                               ; preds = %91
  %95 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  %96 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %65, align 8, !noalias !4
  %97 = icmp eq %"class.std::__1::basic_string"* %96, %92
  br i1 %97, label %113, label %98

98:                                               ; preds = %94, %108
  %99 = phi %"class.std::__1::basic_string"* [ %100, %108 ], [ %96, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 -1
  %101 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #16
  br label %108

108:                                              ; preds = %105, %98
  %109 = icmp eq %"class.std::__1::basic_string"* %100, %92
  br i1 %109, label %110, label %98

110:                                              ; preds = %108
  %111 = bitcast %"class.std::__1::vector"* %8 to i8**
  %112 = load i8*, i8** %111, align 8, !noalias !4
  br label %113

113:                                              ; preds = %110, %94
  %114 = phi i8* [ %112, %110 ], [ %95, %94 ]
  store %"class.std::__1::basic_string"* %92, %"class.std::__1::basic_string"** %65, align 8, !noalias !4
  call void @_ZdlPv(i8* %114) #16
  br label %115

115:                                              ; preds = %113, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #15, !noalias !4
  %116 = load i8, i8* %55, align 1, !noalias !4
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %202

118:                                              ; preds = %115
  %119 = load i8*, i8** %41, align 8, !noalias !4
  call void @_ZdlPv(i8* %119) #16
  br label %202

120:                                              ; preds = %199, %68
  %121 = phi %"class.std::__1::basic_string"* [ %64, %68 ], [ %200, %199 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %69) #15, !noalias !4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 120, i1 false) #15, !noalias !4
  %122 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  %129 = select i1 %125, i8* %127, i8* %128
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = zext i8 %124 to i64
  %133 = select i1 %125, i64 %131, i64 %132
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %9, i8* %129, i64 %133) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #15, !noalias !4
  %134 = load i32, i32* %71, align 4, !noalias !7
  %135 = icmp slt i32 %134, 1
  br i1 %135, label %136, label %137

136:                                              ; preds = %120
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 24, i1 false) #15, !alias.scope !12, !noalias !4
  br label %141

137:                                              ; preds = %120
  %138 = load i32, i32* %73, align 8, !noalias !7
  %139 = sext i32 %138 to i64
  %140 = sext i32 %134 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %74) #15, !noalias !7
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %72, i64 %139, i64 %140, %"class.std::__1::allocator"* nonnull dereferenceable(1) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %74) #15, !noalias !7
  br label %141

141:                                              ; preds = %137, %136
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #15, !noalias !4
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8, !noalias !4
  %142 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS7_NS5_IS7_EEEEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISM_EERKT_(%"class.std::__1::__tree"* nonnull %75, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #15
  %143 = bitcast %"class.std::__1::__tree_node_base"** %142 to %"class.std::__1::__tree_node"**
  %144 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node"* %144, null
  br i1 %145, label %146, label %168

146:                                              ; preds = %141
  %147 = call i8* @_Znwm(i64 80) #16, !noalias !13
  %148 = getelementptr inbounds i8, i8* %147, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* nonnull align 8 %70, i64 24, i1 false) #15, !noalias !16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 24, i1 false) #15, !noalias !16
  %149 = getelementptr inbounds i8, i8* %147, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 24, i1 false) #15, !noalias !16
  %150 = load i64, i64* %77, align 8, !noalias !4
  %151 = bitcast i8* %147 to %"class.std::__1::__tree_node"*
  %152 = bitcast i8* %147 to %"class.std::__1::__tree_node_base"*
  %153 = getelementptr inbounds i8, i8* %147, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 0, i64 16, i1 false) #15, !noalias !4
  %154 = bitcast i8* %153 to i64*
  store i64 %150, i64* %154, align 8, !noalias !4
  %155 = bitcast %"class.std::__1::__tree_node_base"** %142 to i8**
  store i8* %147, i8** %155, align 8
  %156 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 16, !alias.scope !4
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %156, i64 0, i32 0
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %157, align 8
  %159 = icmp eq %"class.std::__1::__tree_node_base"* %158, null
  br i1 %159, label %163, label %160

160:                                              ; preds = %146
  %161 = ptrtoint %"class.std::__1::__tree_node_base"* %158 to i64
  store i64 %161, i64* %78, align 16, !alias.scope !4
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %142, align 8
  br label %163

163:                                              ; preds = %160, %146
  %164 = phi %"class.std::__1::__tree_node_base"* [ %152, %146 ], [ %162, %160 ]
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8, !alias.scope !4
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %165, %"class.std::__1::__tree_node_base"* %164) #15
  %166 = load i64, i64* %37, align 16, !alias.scope !4
  %167 = add i64 %166, 1
  store i64 %167, i64* %37, align 16, !alias.scope !4
  br label %168

168:                                              ; preds = %163, %141
  %169 = phi %"class.std::__1::__tree_node"* [ %144, %141 ], [ %151, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #15, !noalias !4
  %170 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %169, i64 0, i32 1, i32 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #15, !noalias !4
  %171 = load i32, i32* %80, align 4, !noalias !17
  %172 = icmp slt i32 %171, 1
  br i1 %172, label %173, label %174

173:                                              ; preds = %168
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 24, i1 false) #15, !alias.scope !22, !noalias !4
  br label %178

174:                                              ; preds = %168
  %175 = load i32, i32* %81, align 8, !noalias !17
  %176 = sext i32 %175 to i64
  %177 = sext i32 %171 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %82) #15, !noalias !17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %72, i64 %176, i64 %177, %"class.std::__1::allocator"* nonnull dereferenceable(1) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %82) #15, !noalias !17
  br label %178

178:                                              ; preds = %174, %173
  %179 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %169, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %180 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %179, align 8
  %181 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %169, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %182 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %181, align 8
  %183 = icmp ult %"class.std::__1::basic_string"* %180, %182
  br i1 %183, label %184, label %189

184:                                              ; preds = %178
  %185 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* nonnull align 8 %79, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 24, i1 false) #15, !noalias !4
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 1
  %187 = ptrtoint %"class.std::__1::basic_string"* %186 to i64
  %188 = bitcast %"class.std::__1::basic_string"** %179 to i64*
  store i64 %187, i64* %188, align 8
  br label %194

189:                                              ; preds = %178
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector"* %170, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #15
  %190 = load i8, i8* %84, align 1, !noalias !4
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %192, label %194

192:                                              ; preds = %189
  %193 = load i8*, i8** %85, align 8, !noalias !4
  call void @_ZdlPv(i8* %193) #16
  br label %194

194:                                              ; preds = %192, %189, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #15, !noalias !4
  %195 = load i8, i8* %87, align 1, !noalias !4
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %194
  %198 = load i8*, i8** %88, align 8, !noalias !4
  call void @_ZdlPv(i8* %198) #16
  br label %199

199:                                              ; preds = %197, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #15, !noalias !4
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %69) #15, !noalias !4
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 1
  %201 = icmp eq %"class.std::__1::basic_string"* %200, %66
  br i1 %201, label %89, label %120

202:                                              ; preds = %118, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #15, !noalias !4
  %203 = bitcast %"class.std::__1::map"* %12 to <2 x i64>*
  %204 = load <2 x i64>, <2 x i64>* %203, align 16
  store <2 x i64> %204, <2 x i64>* bitcast (%"class.base::NoDestructor"* @_ZZN2cc12_GLOBAL__N_128IsJankInjectionEnabledForURLERK4GURLE12allowed_urls to <2 x i64>*), align 16
  %205 = load i64, i64* %37, align 16
  store i64 %205, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN2cc12_GLOBAL__N_128IsJankInjectionEnabledForURLERK4GURLE12allowed_urls, i64 0, i32 0, i64 16) to i64*), align 16
  %206 = icmp eq i64 %205, 0
  %207 = extractelement <2 x i64> %204, i32 1
  br i1 %206, label %208, label %210

208:                                              ; preds = %202
  %209 = inttoptr i64 %207 to %"class.std::__1::__tree_node"*
  store i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN2cc12_GLOBAL__N_128IsJankInjectionEnabledForURLERK4GURLE12allowed_urls, i64 0, i32 0, i64 8), i8** bitcast (%"class.base::NoDestructor"* @_ZZN2cc12_GLOBAL__N_128IsJankInjectionEnabledForURLERK4GURLE12allowed_urls to i8**), align 16
  br label %215

210:                                              ; preds = %202
  %211 = inttoptr i64 %207 to %"class.std::__1::__tree_node_base"*
  %212 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %211, i64 0, i32 2
  %213 = bitcast %"class.std::__1::__tree_end_node"** %212 to i8**
  store i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN2cc12_GLOBAL__N_128IsJankInjectionEnabledForURLERK4GURLE12allowed_urls, i64 0, i32 0, i64 8), i8** %213, align 8
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %35, align 16
  %214 = bitcast %"class.std::__1::__tree_end_node"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %214, i8 0, i64 16, i1 false) #15
  br label %215

215:                                              ; preds = %210, %208
  %216 = phi %"class.std::__1::__tree_node"* [ %209, %208 ], [ null, %210 ]
  %217 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS7_NS5_IS7_EEEEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree"* nonnull %217, %"class.std::__1::__tree_node"* %216) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2cc12_GLOBAL__N_128IsJankInjectionEnabledForURLERK4GURLE12allowed_urls) #15
  br label %218

218:                                              ; preds = %215, %30, %27
  %219 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN2cc12_GLOBAL__N_128IsJankInjectionEnabledForURLERK4GURLE12allowed_urls, i64 0, i32 0, i64 16) to i64*), align 16
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %294, label %221

221:                                              ; preds = %218
  %222 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %222) #15
  %223 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 3, i32 1
  %224 = load i32, i32* %223, align 4, !noalias !23
  %225 = icmp slt i32 %224, 1
  br i1 %225, label %226, label %227

226:                                              ; preds = %221
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %222, i8 0, i64 24, i1 false) #15, !alias.scope !23
  br label %234

227:                                              ; preds = %221
  %228 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %229 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 3, i32 0
  %230 = load i32, i32* %229, align 4, !noalias !23
  %231 = sext i32 %230 to i64
  %232 = sext i32 %224 to i64
  %233 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %233) #15, !noalias !23
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %13, %"class.std::__1::basic_string"* dereferenceable(24) %228, i64 %231, i64 %232, %"class.std::__1::allocator"* nonnull dereferenceable(1) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %233) #15, !noalias !23
  br label %234

234:                                              ; preds = %227, %226
  %235 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS7_NS5_IS7_EEEEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEElEERKT_(%"class.std::__1::__tree"* bitcast (%"class.base::NoDestructor"* @_ZZN2cc12_GLOBAL__N_128IsJankInjectionEnabledForURLERK4GURLE12allowed_urls to %"class.std::__1::__tree"*), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #15
  %236 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %237 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %236, i64 0, i32 1, i32 0
  %238 = load i8, i8* %237, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %240, label %243

240:                                              ; preds = %234
  %241 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load i8*, i8** %241, align 8
  call void @_ZdlPv(i8* %242) #16
  br label %243

243:                                              ; preds = %240, %234
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #15
  %244 = icmp eq %"class.std::__1::__tree_end_node"* %235, bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN2cc12_GLOBAL__N_128IsJankInjectionEnabledForURLERK4GURLE12allowed_urls, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*)
  br i1 %244, label %294, label %245

245:                                              ; preds = %243
  %246 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 7
  %247 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = icmp slt i32 %248, 1
  br i1 %249, label %264, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = sext i32 %252 to i64
  %254 = bitcast %class.GURL* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %254, i64 0, i32 1, i32 0
  %256 = load i8, i8* %255, align 1
  %257 = icmp slt i8 %256, 0
  %258 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  %260 = bitcast %class.GURL* %0 to i8*
  %261 = select i1 %257, i8* %259, i8* %260
  %262 = getelementptr inbounds i8, i8* %261, i64 %253
  %263 = sext i32 %248 to i64
  br label %264

264:                                              ; preds = %250, %245
  %265 = phi i8* [ %262, %250 ], [ null, %245 ]
  %266 = phi i64 [ %263, %250 ], [ 0, %245 ]
  %267 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 8
  %268 = bitcast %"class.std::__1::__tree_end_node"* %267 to %"class.std::__1::basic_string"**
  %269 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %268, align 8
  %270 = bitcast %"class.std::__1::__tree_end_node"* %246 to %"class.std::__1::basic_string"**
  %271 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %270, align 8
  %272 = icmp eq %"class.std::__1::basic_string"* %271, %269
  br i1 %272, label %291, label %273

273:                                              ; preds = %264, %288
  %274 = phi %"class.std::__1::basic_string"* [ %289, %288 ], [ %271, %264 ]
  %275 = bitcast %"class.std::__1::basic_string"* %274 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %275, i64 0, i32 1, i32 0
  %277 = load i8, i8* %276, align 1
  %278 = icmp slt i8 %277, 0
  %279 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %274, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = bitcast %"class.std::__1::basic_string"* %274 to i8*
  %282 = select i1 %278, i8* %280, i8* %281
  %283 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %274, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %284 = load i64, i64* %283, align 8
  %285 = zext i8 %277 to i64
  %286 = select i1 %278, i64 %284, i64 %285
  %287 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %265, i64 %266, i8* %282, i64 %286, i32 0) #15
  br i1 %287, label %291, label %288

288:                                              ; preds = %273
  %289 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %274, i64 1
  %290 = icmp eq %"class.std::__1::basic_string"* %289, %269
  br i1 %290, label %291, label %273

291:                                              ; preds = %288, %273, %264
  %292 = phi %"class.std::__1::basic_string"* [ %269, %264 ], [ %269, %288 ], [ %274, %273 ]
  %293 = icmp ne %"class.std::__1::basic_string"* %269, %292
  br label %294

294:                                              ; preds = %291, %243, %218, %22
  %295 = phi i1 [ false, %22 ], [ false, %218 ], [ %293, %291 ], [ false, %243 ]
  ret i1 %295
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12JankInjector20ScheduleJankIfNeededERKN3viz14BeginFrameArgsEPN4base22SingleThreadTaskRunnerE(%"class.cc::JankInjector"* nocapture, %"struct.viz::BeginFrameArgs"* nocapture readonly dereferenceable(64), %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  br i1 %8, label %11, label %71

11:                                               ; preds = %3
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %71, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = mul i64 %15, 100
  %17 = udiv i64 %16, %10
  %18 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = icmp ult i64 %17, %20
  br i1 %21, label %22, label %71

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = add i64 %15, %25
  %27 = mul i64 %26, 100
  %28 = add i64 %10, %25
  %29 = udiv i64 %27, %28
  %30 = icmp ugt i64 %29, %20
  br i1 %30, label %71, label %31

31:                                               ; preds = %22
  %32 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = getelementptr inbounds %"struct.viz::BeginFrameArgs", %"struct.viz::BeginFrameArgs"* %1, i64 0, i32 2, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp slt i64 %34, 0
  %36 = sub i64 0, %34
  %37 = select i1 %35, i64 %36, i64 %34
  %38 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %37, i64 %25) #15
  %39 = extractvalue { i64, i1 } %38, 1
  %40 = extractvalue { i64, i1 } %38, 0
  %41 = lshr i64 %34, 63
  %42 = add nuw i64 %41, 9223372036854775807
  %43 = icmp ugt i64 %40, %42
  %44 = or i1 %39, %43
  %45 = sub i64 0, %40
  %46 = select i1 %35, i64 %45, i64 %40
  %47 = icmp sgt i64 %34, -1
  %48 = select i1 %47, i64 9223372036854775807, i64 -9223372036854775808
  %49 = select i1 %44, i64 %48, i64 %46
  %50 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to %"class.base::TaskRunner"*
  %51 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 183) #15
  %52 = call i8* @_Znwm(i64 56) #16, !noalias !28
  %53 = bitcast i8* %52 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %53, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS4_EE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !28
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i64*
  store i64 ptrtoint (void (i64, i8)* @_ZN2cc12_GLOBAL__N_17RunJankENS0_19JankInjectionParamsE to i64), i64* %55, align 8, !noalias !28
  %56 = getelementptr inbounds i8, i8* %52, i64 40
  %57 = bitcast i8* %56 to i64*
  store i64 %49, i64* %57, align 8, !noalias !28
  %58 = getelementptr inbounds i8, i8* %52, i64 48
  store i8 1, i8* %58, align 8, !noalias !28
  %59 = getelementptr inbounds i8, i8* %52, i64 49
  %60 = bitcast %"class.base::OnceCallback"* %5 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 1 %59, i8 -86, i64 7, i1 false) #15
  store i8* %52, i8** %60, align 8, !alias.scope !28
  %61 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %50, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #15
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #15
  %63 = load i32, i32* %23, align 4
  %64 = zext i32 %63 to i64
  %65 = bitcast i64* %9 to <2 x i64>*
  %66 = load <2 x i64>, <2 x i64>* %65, align 8
  %67 = insertelement <2 x i64> undef, i64 %64, i32 0
  %68 = shufflevector <2 x i64> %67, <2 x i64> undef, <2 x i32> zeroinitializer
  %69 = add <2 x i64> %66, %68
  %70 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  br label %75

71:                                               ; preds = %3, %22, %13, %11
  %72 = phi i64 [ %10, %22 ], [ %10, %13 ], [ 0, %11 ], [ %10, %3 ]
  %73 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 1
  %74 = add i64 %72, 1
  store i64 %74, i64* %73, align 8
  br label %75

75:                                               ; preds = %71, %31
  %76 = phi i8 [ 0, %71 ], [ 1, %31 ]
  store i8 %76, i8* %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc12JankInjector22ShouldJankCurrentFrameERKN3viz14BeginFrameArgsE(%"class.cc::JankInjector"* nocapture readonly, %"struct.viz::BeginFrameArgs"* nocapture readnone dereferenceable(64)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %28

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %28, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = mul i64 %12, 100
  %14 = udiv i64 %13, %8
  %15 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = icmp ult i64 %14, %17
  br i1 %18, label %19, label %28

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = add i64 %12, %22
  %24 = mul i64 %23, 100
  %25 = add i64 %8, %22
  %26 = udiv i64 %24, %25
  %27 = icmp ule i64 %26, %17
  br label %28

28:                                               ; preds = %19, %10, %6, %2
  %29 = phi i1 [ false, %2 ], [ false, %6 ], [ %27, %19 ], [ false, %10 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12JankInjector12ScheduleJankERKN3viz14BeginFrameArgsEPN4base22SingleThreadTaskRunnerE(%"class.cc::JankInjector"* nocapture, %"struct.viz::BeginFrameArgs"* nocapture readonly dereferenceable(64), %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.viz::BeginFrameArgs", %"struct.viz::BeginFrameArgs"* %1, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = zext i32 %7 to i64
  %11 = icmp slt i64 %9, 0
  %12 = sub i64 0, %9
  %13 = select i1 %11, i64 %12, i64 %9
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 %10) #15
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = lshr i64 %9, 63
  %18 = add nuw i64 %17, 9223372036854775807
  %19 = icmp ugt i64 %16, %18
  %20 = or i1 %15, %19
  %21 = sub i64 0, %16
  %22 = select i1 %11, i64 %21, i64 %16
  %23 = icmp sgt i64 %9, -1
  %24 = select i1 %23, i64 9223372036854775807, i64 -9223372036854775808
  %25 = select i1 %20, i64 %24, i64 %22
  %26 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to %"class.base::TaskRunner"*
  %27 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 183) #15
  %28 = call i8* @_Znwm(i64 56) #16, !noalias !33
  %29 = bitcast i8* %28 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %29, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS4_EE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !33
  %30 = getelementptr inbounds i8, i8* %28, i64 32
  %31 = bitcast i8* %30 to i64*
  store i64 ptrtoint (void (i64, i8)* @_ZN2cc12_GLOBAL__N_17RunJankENS0_19JankInjectionParamsE to i64), i64* %31, align 8, !noalias !33
  %32 = getelementptr inbounds i8, i8* %28, i64 40
  %33 = bitcast i8* %32 to i64*
  store i64 %25, i64* %33, align 8, !noalias !33
  %34 = getelementptr inbounds i8, i8* %28, i64 48
  store i8 1, i8* %34, align 8, !noalias !33
  %35 = getelementptr inbounds i8, i8* %28, i64 49
  %36 = bitcast %"class.base::OnceCallback"* %5 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 -86, i64 7, i1 false)
  store i8* %28, i8** %36, align 8, !alias.scope !33
  %37 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %26, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #15
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #15
  %39 = load i32, i32* %6, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.cc::JankInjector", %"class.cc::JankInjector"* %0, i64 0, i32 1
  %42 = bitcast i64* %41 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 8
  %44 = insertelement <2 x i64> undef, i64 %40, i32 0
  %45 = shufflevector <2 x i64> %44, <2 x i64> undef, <2 x i32> zeroinitializer
  %46 = add <2 x i64> %43, %45
  %47 = bitcast i64* %41 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %47, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2cc12_GLOBAL__N_17RunJankENS0_19JankInjectionParamsE(i64, i8) #1 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.std::__1::vector.30", align 8
  %5 = load atomic i64, i64* @_ZZN2cc12_GLOBAL__N_17RunJankENS0_19JankInjectionParamsEE27trace_event_unique_atomic91 monotonic, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %11, !prof !38

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0)) #15
  %10 = ptrtoint i8* %9 to i64
  store atomic volatile i64 %10, i64* @_ZZN2cc12_GLOBAL__N_17RunJankENS0_19JankInjectionParamsEE27trace_event_unique_atomic91 monotonic, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 25
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %22, label %16, !prof !39

16:                                               ; preds = %11
  %17 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %18 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %20 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %20, i64* %19, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %17, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  br label %22

22:                                               ; preds = %11, %16
  %23 = phi i8* [ null, %11 ], [ %12, %16 ]
  %24 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %11 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), %16 ]
  %25 = phi i64 [ -6148914691236517206, %11 ], [ %21, %16 ]
  %26 = and i8 %1, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %126, label %28

28:                                               ; preds = %22
  %29 = call i64 @_ZN4base9TimeTicks3NowEv() #15
  %30 = bitcast %"class.std::__1::vector.30"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #15
  %31 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %4, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %4, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #15
  %34 = call i64 @_ZN4base9TimeTicks3NowEv() #15
  %35 = sub nsw i64 %34, %29
  %36 = icmp slt i64 %35, %0
  br i1 %36, label %37, label %118

37:                                               ; preds = %28
  %38 = bitcast %"class.base::TimeTicks"** %32 to i64*
  %39 = bitcast %"class.std::__1::vector.30"* %4 to i64*
  %40 = bitcast %"class.base::TimeTicks"** %33 to i64*
  br label %41

41:                                               ; preds = %37, %114
  %42 = call i64 @_ZN4base9TimeTicks3NowEv() #15
  %43 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %32, align 8
  %44 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %33, align 8
  %45 = icmp ult %"class.base::TimeTicks"* %43, %44
  %46 = ptrtoint %"class.base::TimeTicks"* %44 to i64
  br i1 %45, label %47, label %51

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %43, i64 0, i32 0, i32 0
  store i64 %42, i64* %48, align 8
  %49 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %43, i64 1
  %50 = ptrtoint %"class.base::TimeTicks"* %49 to i64
  store i64 %50, i64* %38, align 8
  br label %96

51:                                               ; preds = %41
  %52 = ptrtoint %"class.base::TimeTicks"* %43 to i64
  %53 = load i64, i64* %39, align 8
  %54 = sub i64 %52, %53
  %55 = ashr exact i64 %54, 3
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 2305843009213693951
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = bitcast %"class.std::__1::vector.30"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %59) #17
  unreachable

60:                                               ; preds = %51
  %61 = sub i64 %46, %53
  %62 = ashr exact i64 %61, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %72

64:                                               ; preds = %60
  %65 = ashr exact i64 %61, 2
  %66 = icmp ult i64 %65, %56
  %67 = select i1 %66, i64 %56, i64 %65
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %64
  %70 = icmp ugt i64 %67, 2305843009213693951
  br i1 %70, label %71, label %72

71:                                               ; preds = %69
  call void @abort() #17
  unreachable

72:                                               ; preds = %69, %60
  %73 = phi i64 [ %67, %69 ], [ 2305843009213693951, %60 ]
  %74 = shl i64 %73, 3
  %75 = call i8* @_Znwm(i64 %74) #16
  %76 = bitcast i8* %75 to %"class.base::TimeTicks"*
  br label %77

77:                                               ; preds = %72, %64
  %78 = phi i64 [ %73, %72 ], [ 0, %64 ]
  %79 = phi i8* [ %75, %72 ], [ null, %64 ]
  %80 = phi %"class.base::TimeTicks"* [ %76, %72 ], [ null, %64 ]
  %81 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %80, i64 %55
  %82 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %80, i64 %78
  %83 = ptrtoint %"class.base::TimeTicks"* %82 to i64
  %84 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %81, i64 0, i32 0, i32 0
  store i64 %42, i64* %84, align 8
  %85 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %81, i64 1
  %86 = ptrtoint %"class.base::TimeTicks"* %85 to i64
  %87 = ptrtoint %"class.base::TimeTicks"* %80 to i64
  %88 = icmp sgt i64 %54, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %77
  %90 = inttoptr i64 %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %90, i64 %54, i1 false) #15
  br label %91

91:                                               ; preds = %89, %77
  store i64 %87, i64* %39, align 8
  store i64 %86, i64* %38, align 8
  store i64 %83, i64* %40, align 8
  %92 = icmp eq i64 %53, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %91
  %94 = inttoptr i64 %53 to i8*
  call void @_ZdlPv(i8* %94) #16
  %95 = load i64, i64* %38, align 8
  br label %96

96:                                               ; preds = %47, %91, %93
  %97 = phi i64 [ %50, %47 ], [ %86, %91 ], [ %95, %93 ]
  %98 = load i64, i64* %39, align 8
  %99 = sub i64 %97, %98
  %100 = ashr exact i64 %99, 3
  %101 = icmp ugt i64 %100, 100
  %102 = inttoptr i64 %98 to %"class.base::TimeTicks"*
  br i1 %101, label %103, label %114

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %102, i64 1
  %105 = ptrtoint %"class.base::TimeTicks"* %104 to i64
  %106 = sub i64 %97, %105
  %107 = ashr exact i64 %106, 3
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %103
  %110 = inttoptr i64 %98 to i8*
  %111 = bitcast %"class.base::TimeTicks"* %104 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 %106, i1 false) #15
  br label %112

112:                                              ; preds = %103, %109
  %113 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %102, i64 %107
  store %"class.base::TimeTicks"* %113, %"class.base::TimeTicks"** %32, align 8
  br label %114

114:                                              ; preds = %112, %96
  %115 = call i64 @_ZN4base9TimeTicks3NowEv() #15
  %116 = sub nsw i64 %115, %29
  %117 = icmp slt i64 %116, %0
  br i1 %117, label %41, label %118

118:                                              ; preds = %114, %28
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %30) #15
  %119 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %31, align 8
  %120 = icmp eq %"class.base::TimeTicks"* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %118
  %122 = ptrtoint %"class.base::TimeTicks"* %119 to i64
  %123 = bitcast %"class.base::TimeTicks"** %32 to i64*
  store i64 %122, i64* %123, align 8
  %124 = bitcast %"class.base::TimeTicks"* %119 to i8*
  call void @_ZdlPv(i8* %124) #16
  br label %125

125:                                              ; preds = %118, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #15
  br label %127

126:                                              ; preds = %22
  call void @_ZN4base14PlatformThread5SleepENS_9TimeDeltaE(i64 %0) #15
  br label %127

127:                                              ; preds = %126, %125
  %128 = icmp eq i8* %23, null
  br i1 %128, label %133, label %129

129:                                              ; preds = %127
  %130 = load i8, i8* %23, align 1
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %129
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %23, i8* %24, i64 %25) #15
  br label %133

133:                                              ; preds = %127, %129, %132
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

declare void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS7_NS5_IS7_EEEEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISM_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #15
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #15
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #15
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #15
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #16
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #16
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS7_NS5_IS7_EEEEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %47, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS7_NS5_IS7_EEEEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS7_NS5_IS7_EEEEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #15
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %19 = icmp eq %"class.std::__1::basic_string"* %18, %13
  br i1 %19, label %35, label %20

20:                                               ; preds = %15, %30
  %21 = phi %"class.std::__1::basic_string"* [ %22, %30 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 -1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #16
  br label %30

30:                                               ; preds = %27, %20
  %31 = icmp eq %"class.std::__1::basic_string"* %22, %13
  br i1 %31, label %32, label %20

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector"* %11 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %15
  %36 = phi i8* [ %34, %32 ], [ %16, %15 ]
  store %"class.std::__1::basic_string"* %13, %"class.std::__1::basic_string"** %17, align 8
  tail call void @_ZdlPv(i8* %36) #16
  br label %37

37:                                               ; preds = %35, %4
  %38 = bitcast %"struct.std::__1::pair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #16
  br label %45

45:                                               ; preds = %37, %42
  %46 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %46) #16
  br label %47

47:                                               ; preds = %2, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS7_NS5_IS7_EEEEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #15
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #14

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #2

declare void @_ZN4base14PlatformThread5SleepENS_9TimeDeltaE(i64) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture readonly) #1 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (i64, i8)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = load void (i64, i8)*, void (i64, i8)** %3, align 8
  %6 = bitcast void ()** %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %9 = bitcast void ()** %8 to i8*
  %10 = load i8, i8* %9, align 8
  tail call void %5(i64 %7, i8 %10) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #16
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN2cc12_GLOBAL__N_114GetAllowedURLsEv: argument 0"}
!6 = distinct !{!6, !"_ZN2cc12_GLOBAL__N_114GetAllowedURLsEv"}
!7 = !{!8, !10, !5}
!8 = distinct !{!8, !9, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!9 = distinct !{!9, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!10 = distinct !{!10, !11, !"_ZNK4GURL4hostEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4GURL4hostEv"}
!12 = !{!8, !10}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS7_NS5_IS7_EEEEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS7_NS5_IS7_EEEEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_"}
!16 = !{!14, !5}
!17 = !{!18, !20, !5}
!18 = distinct !{!18, !19, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!19 = distinct !{!19, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!20 = distinct !{!20, !21, !"_ZNK4GURL4pathEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4GURL4pathEv"}
!22 = !{!18, !20}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!25 = distinct !{!25, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!26 = distinct !{!26, !27, !"_ZNK4GURL4hostEv: argument 0"}
!27 = distinct !{!27, !"_ZNK4GURL4hostEv"}
!28 = !{!29, !31}
!29 = distinct !{!29, !30, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS5_EEEDcOT0_DpOT1_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS5_EEEDcOT0_DpOT1_"}
!31 = distinct !{!31, !32, !"_ZN4base8BindOnceIPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8BindOnceIPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!33 = !{!34, !36}
!34 = distinct !{!34, !35, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS5_EEEDcOT0_DpOT1_: argument 0"}
!35 = distinct !{!35, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS5_EEEDcOT0_DpOT1_"}
!36 = distinct !{!36, !37, !"_ZN4base8BindOnceIPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8BindOnceIPFvN2cc12_GLOBAL__N_119JankInjectionParamsEEJS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!38 = !{!"branch_weights", i32 1, i32 2000}
!39 = !{!"branch_weights", i32 2000, i32 1}
