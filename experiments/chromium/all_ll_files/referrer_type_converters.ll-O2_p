; ModuleID = '../../content/public/common/referrer_type_converters.cc'
source_filename = "../../content/public/common/referrer_type_converters.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::mojom::Referrer"* }
%"class.blink::mojom::Referrer" = type <{ %class.GURL, i32, [4 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"struct.content::Referrer" = type <{ %class.GURL, i32, [4 x i8] }>

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom8ReferrerEEEN7content8ReferrerEE7ConvertERKS7_(%"class.mojo::StructPtr"* noalias nocapture sret, %"struct.content::Referrer"* dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.content::Referrer", %"struct.content::Referrer"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.content::Referrer", %"struct.content::Referrer"* %1, i64 0, i32 1
  %5 = tail call i8* @_Znwm(i64 128) #3, !noalias !2
  %6 = bitcast i8* %5 to %"class.blink::mojom::Referrer"*
  %7 = load i32, i32* %4, align 4, !noalias !2
  tail call void @_ZN5blink5mojom8ReferrerC1ERK4GURLN7network5mojom14ReferrerPolicyE(%"class.blink::mojom::Referrer"* nonnull %6, %class.GURL* dereferenceable(120) %3, i32 %7) #4, !noalias !2
  %8 = ptrtoint i8* %5 to i64
  %9 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %8, i64* %9, align 8, !alias.scope !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterIN7content8ReferrerENS_9StructPtrIN5blink5mojom8ReferrerEEEE7ConvertERKS7_(%"struct.content::Referrer"* noalias sret, %"class.mojo::StructPtr"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::mojom::Referrer"*, %"class.blink::mojom::Referrer"** %3, align 8
  %5 = icmp eq %"class.blink::mojom::Referrer"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.content::Referrer", %"struct.content::Referrer"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1Ev(%class.GURL* %7) #4
  br label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::mojom::Referrer", %"class.blink::mojom::Referrer"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::mojom::Referrer", %"class.blink::mojom::Referrer"* %4, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.content::Referrer", %"struct.content::Referrer"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %12, %class.GURL* dereferenceable(120) %9) #4
  br label %13

13:                                               ; preds = %8, %6
  %14 = phi i32 [ %11, %8 ], [ 1, %6 ]
  %15 = getelementptr inbounds %"struct.content::Referrer", %"struct.content::Referrer"* %0, i64 0, i32 1
  store i32 %14, i32* %15, align 8
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN5blink5mojom8ReferrerC1ERK4GURLN7network5mojom14ReferrerPolicyE(%"class.blink::mojom::Referrer"*, %class.GURL* dereferenceable(120), i32) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { builtin nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink5mojom8Referrer3NewIJRK4GURLRKN7network5mojom14ReferrerPolicyEEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink5mojom8Referrer3NewIJRK4GURLRKN7network5mojom14ReferrerPolicyEEEEN4mojo9StructPtrIS1_EEDpOT_"}
