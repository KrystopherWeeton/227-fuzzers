; ModuleID = '../../third_party/skia/src/core/SkBlitter_A8.cpp'
source_filename = "../../third_party/skia/src/core/SkBlitter_A8.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkA8_Coverage_Blitter = type { %class.SkRasterBlitter }
%class.SkRasterBlitter = type { %class.SkBlitter, %class.SkPixmap }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkPaint = type <{ %class.sk_sp.7, %class.sk_sp.8, %class.sk_sp.9, %class.sk_sp.10, %class.sk_sp.11, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.7 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.8 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.9 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.10 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.11 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }

$_ZN15SkRasterBlitterD2Ev = comdat any

$_ZN21SkA8_Coverage_BlitterD0Ev = comdat any

$_ZN9SkBlitter10blitAntiH2Eiijj = comdat any

$_ZN9SkBlitter10blitAntiV2Eiijj = comdat any

$_ZNK9SkBlitter20requestRowsPreservedEv = comdat any

$_ZN9SkBlitter15allocBlitMemoryEm = comdat any

$_ZN15SkRasterBlitterD0Ev = comdat any

$_ZTV15SkRasterBlitter = comdat any

@_ZTV21SkA8_Coverage_Blitter = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRasterBlitter*)* @_ZN15SkRasterBlitterD2Ev to i8*), i8* bitcast (void (%class.SkA8_Coverage_Blitter*)* @_ZN21SkA8_Coverage_BlitterD0Ev to i8*), i8* bitcast (void (%class.SkA8_Coverage_Blitter*, i32, i32, i32)* @_ZN21SkA8_Coverage_Blitter5blitHEiii to i8*), i8* bitcast (void (%class.SkA8_Coverage_Blitter*, i32, i32, i8*, i16*)* @_ZN21SkA8_Coverage_Blitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkA8_Coverage_Blitter*, i32, i32, i32, i8)* @_ZN21SkA8_Coverage_Blitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkA8_Coverage_Blitter*, i32, i32, i32, i32)* @_ZN21SkA8_Coverage_Blitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkA8_Coverage_Blitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN21SkA8_Coverage_Blitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkA8_Coverage_Blitter*, i32*)* @_ZN21SkA8_Coverage_Blitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*)] }, align 8
@_ZTV15SkRasterBlitter = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRasterBlitter*)* @_ZN15SkRasterBlitterD2Ev to i8*), i8* bitcast (void (%class.SkRasterBlitter*)* @_ZN15SkRasterBlitterD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i8)* @_ZN9SkBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*)] }, comdat, align 8

@_ZN21SkA8_Coverage_BlitterC1ERK8SkPixmapRK7SkPaint = hidden unnamed_addr alias void (%class.SkA8_Coverage_Blitter*, %class.SkPixmap*, %class.SkPaint*), void (%class.SkA8_Coverage_Blitter*, %class.SkPixmap*, %class.SkPaint*)* @_ZN21SkA8_Coverage_BlitterC2ERK8SkPixmapRK7SkPaint

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkA8_Coverage_BlitterC2ERK8SkPixmapRK7SkPaint(%class.SkA8_Coverage_Blitter* nocapture, %class.SkPixmap* nocapture readonly dereferenceable(40), %class.SkPaint* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %class.SkAutoMalloc* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15SkRasterBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1
  %8 = bitcast %class.SkPixmap* %7 to i8*
  %9 = bitcast %class.SkPixmap* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false) #9
  %10 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8
  %13 = icmp eq %class.SkColorSpace* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %3, %14
  store %class.SkColorSpace* %12, %class.SkColorSpace** %10, align 8
  %18 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %19 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 1
  %20 = bitcast i32* %19 to i64*
  %21 = bitcast i32* %18 to i64*
  %22 = load i64, i64* %20, align 8
  store i64 %22, i64* %21, align 8
  %23 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 2, i32 1
  %24 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1
  %25 = bitcast %struct.SkISize* %24 to i64*
  %26 = bitcast %struct.SkISize* %23 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21SkA8_Coverage_Blitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkA8_Coverage_Blitter9blitAntiHEiiPKhPKs(%class.SkA8_Coverage_Blitter* nocapture readonly, i32, i32, i8* nocapture readonly, i16* nocapture readonly) unnamed_addr #0 align 2 {
  %6 = load i16, i16* %4, align 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = sext i32 %2 to i64
  %14 = mul i64 %12, %13
  %15 = getelementptr inbounds i8, i8* %10, i64 %14
  %16 = sext i32 %1 to i64
  %17 = getelementptr inbounds i8, i8* %15, i64 %16
  br label %18

18:                                               ; preds = %8, %27
  %19 = phi i16 [ %31, %27 ], [ %6, %8 ]
  %20 = phi i8* [ %30, %27 ], [ %17, %8 ]
  %21 = phi i16* [ %28, %27 ], [ %4, %8 ]
  %22 = phi i8* [ %29, %27 ], [ %3, %8 ]
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  %25 = sext i16 %19 to i64
  br i1 %24, label %27, label %26

26:                                               ; preds = %18
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %20, i8 %23, i64 %25, i1 false)
  br label %27

27:                                               ; preds = %18, %26
  %28 = getelementptr inbounds i16, i16* %21, i64 %25
  %29 = getelementptr inbounds i8, i8* %22, i64 %25
  %30 = getelementptr inbounds i8, i8* %20, i64 %25
  %31 = load i16, i16* %28, align 2
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %33, label %18

33:                                               ; preds = %27, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkA8_Coverage_Blitter5blitHEiii(%class.SkA8_Coverage_Blitter* nocapture readonly, i32, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = sext i32 %2 to i64
  %8 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = mul i64 %9, %7
  %11 = getelementptr inbounds i8, i8* %6, i64 %10
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds i8, i8* %11, i64 %12
  %14 = sext i32 %3 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %13, i8 -1, i64 %14, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN21SkA8_Coverage_Blitter5blitVEiiih(%class.SkA8_Coverage_Blitter* nocapture readonly, i32, i32, i32, i8 zeroext) unnamed_addr #2 align 2 {
  %6 = icmp eq i8 %4, 0
  br i1 %6, label %47, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp sgt i32 %3, 0
  br i1 %10, label %11, label %47

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = sext i32 %2 to i64
  %15 = mul i64 %9, %14
  %16 = getelementptr inbounds i8, i8* %13, i64 %15
  %17 = sext i32 %1 to i64
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  %19 = add nsw i32 %3, -1
  %20 = and i32 %3, 7
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %11, %22
  %23 = phi i8* [ %27, %22 ], [ %18, %11 ]
  %24 = phi i32 [ %26, %22 ], [ %3, %11 ]
  %25 = phi i32 [ %28, %22 ], [ %20, %11 ]
  %26 = add nsw i32 %24, -1
  store i8 %4, i8* %23, align 1
  %27 = getelementptr inbounds i8, i8* %23, i64 %9
  %28 = add i32 %25, -1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %22, !llvm.loop !2

30:                                               ; preds = %22, %11
  %31 = phi i8* [ %18, %11 ], [ %27, %22 ]
  %32 = phi i32 [ %3, %11 ], [ %26, %22 ]
  %33 = icmp ult i32 %19, 7
  br i1 %33, label %47, label %34

34:                                               ; preds = %30, %34
  %35 = phi i8* [ %45, %34 ], [ %31, %30 ]
  %36 = phi i32 [ %44, %34 ], [ %32, %30 ]
  store i8 %4, i8* %35, align 1
  %37 = getelementptr inbounds i8, i8* %35, i64 %9
  store i8 %4, i8* %37, align 1
  %38 = getelementptr inbounds i8, i8* %37, i64 %9
  store i8 %4, i8* %38, align 1
  %39 = getelementptr inbounds i8, i8* %38, i64 %9
  store i8 %4, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %39, i64 %9
  store i8 %4, i8* %40, align 1
  %41 = getelementptr inbounds i8, i8* %40, i64 %9
  store i8 %4, i8* %41, align 1
  %42 = getelementptr inbounds i8, i8* %41, i64 %9
  store i8 %4, i8* %42, align 1
  %43 = getelementptr inbounds i8, i8* %42, i64 %9
  %44 = add nsw i32 %36, -8
  store i8 %4, i8* %43, align 1
  %45 = getelementptr inbounds i8, i8* %43, i64 %9
  %46 = icmp sgt i32 %44, 0
  br i1 %46, label %34, label %47

47:                                               ; preds = %30, %34, %7, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkA8_Coverage_Blitter8blitRectEiiii(%class.SkA8_Coverage_Blitter* nocapture readonly, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp sgt i32 %4, 0
  br i1 %8, label %9, label %46

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = sext i32 %2 to i64
  %13 = mul i64 %7, %12
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds i8, i8* %14, i64 %15
  %17 = sext i32 %3 to i64
  %18 = add nsw i32 %4, -1
  %19 = and i32 %4, 7
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %9, %21
  %22 = phi i8* [ %26, %21 ], [ %16, %9 ]
  %23 = phi i32 [ %25, %21 ], [ %4, %9 ]
  %24 = phi i32 [ %27, %21 ], [ %19, %9 ]
  %25 = add nsw i32 %23, -1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %22, i8 -1, i64 %17, i1 false)
  %26 = getelementptr inbounds i8, i8* %22, i64 %7
  %27 = add i32 %24, -1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %21, !llvm.loop !4

29:                                               ; preds = %21, %9
  %30 = phi i8* [ %16, %9 ], [ %26, %21 ]
  %31 = phi i32 [ %4, %9 ], [ %25, %21 ]
  %32 = icmp ult i32 %18, 7
  br i1 %32, label %46, label %33

33:                                               ; preds = %29, %33
  %34 = phi i8* [ %44, %33 ], [ %30, %29 ]
  %35 = phi i32 [ %43, %33 ], [ %31, %29 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %34, i8 -1, i64 %17, i1 false)
  %36 = getelementptr inbounds i8, i8* %34, i64 %7
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 -1, i64 %17, i1 false)
  %37 = getelementptr inbounds i8, i8* %36, i64 %7
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %37, i8 -1, i64 %17, i1 false)
  %38 = getelementptr inbounds i8, i8* %37, i64 %7
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %38, i8 -1, i64 %17, i1 false)
  %39 = getelementptr inbounds i8, i8* %38, i64 %7
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %39, i8 -1, i64 %17, i1 false)
  %40 = getelementptr inbounds i8, i8* %39, i64 %7
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 -1, i64 %17, i1 false)
  %41 = getelementptr inbounds i8, i8* %40, i64 %7
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 -1, i64 %17, i1 false)
  %42 = getelementptr inbounds i8, i8* %41, i64 %7
  %43 = add nsw i32 %35, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %42, i8 -1, i64 %17, i1 false)
  %44 = getelementptr inbounds i8, i8* %42, i64 %7
  %45 = icmp sgt i32 %43, 0
  br i1 %45, label %33, label %46

46:                                               ; preds = %29, %33, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkA8_Coverage_Blitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkA8_Coverage_Blitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 3
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 1
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkBlitter* %8, %struct.SkMask* dereferenceable(32) %1, %struct.SkIRect* dereferenceable(16) %2) #9
  br label %82

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = sub i32 %15, %13
  %17 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = sext i32 %11 to i64
  %20 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = icmp sgt i32 %16, 0
  br i1 %23, label %24, label %82

24:                                               ; preds = %9
  %25 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %19
  %28 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = sub nsw i64 0, %30
  %32 = getelementptr inbounds i8, i8* %27, i64 %31
  %33 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sub nsw i32 %13, %34
  %36 = mul i32 %35, %21
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %32, i64 %37
  %39 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = sext i32 %13 to i64
  %42 = mul i64 %18, %41
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  %44 = getelementptr inbounds i8, i8* %43, i64 %19
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = sub i32 %46, %11
  %48 = sext i32 %47 to i64
  %49 = xor i32 %13, -1
  %50 = add i32 %15, %49
  %51 = and i32 %16, 3
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %63, label %53

53:                                               ; preds = %24, %53
  %54 = phi i8* [ %60, %53 ], [ %38, %24 ]
  %55 = phi i8* [ %59, %53 ], [ %44, %24 ]
  %56 = phi i32 [ %58, %53 ], [ %16, %24 ]
  %57 = phi i32 [ %61, %53 ], [ %51, %24 ]
  %58 = add nsw i32 %56, -1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %54, i64 %48, i1 false)
  %59 = getelementptr inbounds i8, i8* %55, i64 %18
  %60 = getelementptr inbounds i8, i8* %54, i64 %22
  %61 = add i32 %57, -1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %53, !llvm.loop !5

63:                                               ; preds = %53, %24
  %64 = phi i8* [ %38, %24 ], [ %60, %53 ]
  %65 = phi i8* [ %44, %24 ], [ %59, %53 ]
  %66 = phi i32 [ %16, %24 ], [ %58, %53 ]
  %67 = icmp ult i32 %50, 3
  br i1 %67, label %82, label %68

68:                                               ; preds = %63, %68
  %69 = phi i8* [ %80, %68 ], [ %64, %63 ]
  %70 = phi i8* [ %79, %68 ], [ %65, %63 ]
  %71 = phi i32 [ %78, %68 ], [ %66, %63 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %69, i64 %48, i1 false)
  %72 = getelementptr inbounds i8, i8* %70, i64 %18
  %73 = getelementptr inbounds i8, i8* %69, i64 %22
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %73, i64 %48, i1 false)
  %74 = getelementptr inbounds i8, i8* %72, i64 %18
  %75 = getelementptr inbounds i8, i8* %73, i64 %22
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* align 1 %75, i64 %48, i1 false)
  %76 = getelementptr inbounds i8, i8* %74, i64 %18
  %77 = getelementptr inbounds i8, i8* %75, i64 %22
  %78 = add nsw i32 %71, -4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %77, i64 %48, i1 false)
  %79 = getelementptr inbounds i8, i8* %76, i64 %18
  %80 = getelementptr inbounds i8, i8* %77, i64 %22
  %81 = icmp sgt i32 %78, 0
  br i1 %81, label %68, label %82

82:                                               ; preds = %63, %68, %9, %7
  ret void
}

declare void @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkBlitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.SkPixmap* @_ZN21SkA8_Coverage_Blitter17justAnOpaqueColorEPj(%class.SkA8_Coverage_Blitter* nocapture readnone, i32* nocapture readnone) unnamed_addr #4 align 2 {
  ret %class.SkPixmap* null
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkRasterBlitterD2Ev(%class.SkRasterBlitter*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRasterBlitter, %class.SkRasterBlitter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15SkRasterBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRasterBlitter, %class.SkRasterBlitter* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %class.SkRasterBlitter, %class.SkRasterBlitter* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %13) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21SkA8_Coverage_BlitterD0Ev(%class.SkA8_Coverage_Blitter*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15SkRasterBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %class.SkA8_Coverage_Blitter, %class.SkA8_Coverage_Blitter* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %13) #9
  %14 = bitcast %class.SkA8_Coverage_Blitter* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  ret void
}

declare void @_ZN9SkBlitter12blitAntiRectEiiiihh(%class.SkBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiH2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [3 x i16], align 2
  %7 = alloca [2 x i8], align 1
  %8 = bitcast [3 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %8) #9
  %9 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 2
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #9
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1
  store i16 1, i16* %9, align 2
  store i16 1, i16* %10, align 2
  store i16 0, i16* %11, align 2
  %14 = trunc i32 %3 to i8
  store i8 %14, i8* %12, align 1
  %15 = trunc i32 %4 to i8
  store i8 %15, i8* %13, align 1
  %16 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %17 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %17, i64 3
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %18, align 8
  call void %19(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %12, i16* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiV2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [2 x i16], align 2
  %7 = alloca [1 x i8], align 1
  %8 = bitcast [2 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9
  %9 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #9
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %12 = trunc i32 %3 to i8
  store i8 %12, i8* %11, align 1
  %13 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %14 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %14, i64 3
  %16 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %15, align 8
  call void %16(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %11, i16* nonnull %9) #9
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %17 = trunc i32 %4 to i8
  store i8 %17, i8* %11, align 1
  %18 = add nsw i32 %2, 1
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %19, i64 3
  %21 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %20, align 8
  call void %21(%class.SkBlitter* %0, i32 %1, i32 %18, i8* nonnull %11, i16* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9
  ret void
}

declare zeroext i1 @_ZNK9SkBlitter13isNullBlitterEv(%class.SkBlitter*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9SkBlitter20requestRowsPreservedEv(%class.SkBlitter*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN9SkBlitter15allocBlitMemoryEm(%class.SkBlitter*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #9
  %9 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* %8, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_Z7sk_freePv(i8* nonnull %10) #9
  br label %13

13:                                               ; preds = %12, %7
  store i64 %1, i64* %4, align 8
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  ret i8* %16
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkRasterBlitterD0Ev(%class.SkRasterBlitter*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN9SkBlitter5blitVEiiih(%class.SkBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #3

declare void @_ZN9SkBlitter8blitRectEiiii(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #3

declare %class.SkPixmap* @_ZN9SkBlitter17justAnOpaqueColorEPj(%class.SkBlitter*, i32*) unnamed_addr #3

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9SkBlitterD2Ev(%class.SkBlitter*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
