; ModuleID = '../../third_party/icu/source/i18n/decNumber.cpp'
source_filename = "../../third_party/icu/source/i18n/decNumber.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.decNumber = type { i32, i32, i8, [1 x i8] }
%struct.decContext = type { i32, i32, i32, i32, i32, i32, i8 }

@_ZL9DECPOWERS = internal unnamed_addr constant [10 x i32] [i32 1, i32 10, i32 100, i32 1000, i32 10000, i32 100000, i32 1000000, i32 10000000, i32 100000000, i32 1000000000], align 16
@.str = private unnamed_addr constant [9 x i8] c"infinity\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"INFINITY\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@_ZL8d2utable = internal unnamed_addr constant [50 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./01", align 16
@.str.4 = private unnamed_addr constant [8 x i8] c"+Normal\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"-Normal\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"+Zero\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"-Zero\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"+Subnormal\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"-Subnormal\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"+Infinity\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"-Infinity\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"NaN\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"sNaN\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"Invalid\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"decNumber 3.61\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"inity\00", align 1
@_ZL7multies = internal unnamed_addr constant [5 x i32] [i32 131073, i32 26215, i32 5243, i32 1049, i32 210], align 16
@.str.18 = private unnamed_addr constant [42 x i8] c"2.302585092994045684017991454684364207601\00", align 1
@.str.19 = private unnamed_addr constant [43 x i8] c"0.6931471805599453094172321214581765680755\00", align 1
@_ZL4LNnn = internal unnamed_addr constant [90 x i16] [i16 9016, i16 8652, i16 8316, i16 8008, i16 7724, i16 7456, i16 7208, i16 6972, i16 6748, i16 6540, i16 6340, i16 6148, i16 5968, i16 5792, i16 5628, i16 5464, i16 5312, i16 5164, i16 5020, i16 4884, i16 4748, i16 4620, i16 4496, i16 4376, i16 4256, i16 4144, i16 4032, i16 -26303, i16 -27355, i16 -28379, i16 -29379, i16 -30355, i16 -31307, i16 -32239, i16 32389, i16 31501, i16 30629, i16 29777, i16 28945, i16 28129, i16 27329, i16 26545, i16 25777, i16 25021, i16 24281, i16 23553, i16 22837, i16 22137, i16 21445, i16 20769, i16 20101, i16 19445, i16 18801, i16 18165, i16 17541, i16 16925, i16 16321, i16 15721, i16 15133, i16 14553, i16 13985, i16 13421, i16 12865, i16 12317, i16 11777, i16 11241, i16 10717, i16 10197, i16 9685, i16 9177, i16 8677, i16 8185, i16 7697, i16 7213, i16 6737, i16 6269, i16 5801, i16 5341, i16 4889, i16 4437, i16 -25606, i16 -30002, i16 31186, i16 26886, i16 22630, i16 18418, i16 14254, i16 10130, i16 6046, i16 20055], align 16
@_ZL7uarrone = internal constant [1 x i8] c"\01", align 1
@_ZL6resmap = internal unnamed_addr constant [10 x i8] c"\00\03\03\03\03\05\07\07\07\07", align 1
@switch.table.uprv_decNumberClassToString_69 = private unnamed_addr constant [10 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)], align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberFromInt32_69(%struct.decNumber* returned, i32) local_unnamed_addr #0 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = icmp eq i32 %1, -2147483648
  %6 = sub nsw i32 0, %1
  %7 = select i1 %5, i32 -2147483648, i32 %6
  br label %8

8:                                                ; preds = %4, %2
  %9 = phi i32 [ %1, %2 ], [ %7, %4 ]
  %10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %12, align 4
  %13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %13, align 1
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %47, label %15

15:                                               ; preds = %8, %15
  %16 = phi i8* [ %21, %15 ], [ %13, %8 ]
  %17 = phi i32 [ %20, %15 ], [ %9, %8 ]
  %18 = urem i32 %17, 10
  %19 = trunc i32 %18 to i8
  store i8 %19, i8* %16, align 1
  %20 = udiv i32 %17, 10
  %21 = getelementptr inbounds i8, i8* %16, i64 1
  %22 = icmp ult i32 %17, 10
  br i1 %22, label %23, label %15

23:                                               ; preds = %15
  %24 = ptrtoint i8* %21 to i64
  %25 = ptrtoint i8* %13 to i64
  %26 = sub i64 %24, %25
  %27 = trunc i64 %26 to i32
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %45, label %29

29:                                               ; preds = %23
  %30 = shl i64 %26, 32
  %31 = add i64 %30, -4294967296
  %32 = ashr exact i64 %31, 32
  %33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %32
  br label %34

34:                                               ; preds = %41, %29
  %35 = phi i32 [ %42, %41 ], [ %27, %29 ]
  %36 = phi i8* [ %43, %41 ], [ %33, %29 ]
  %37 = load i8, i8* %36, align 1
  %38 = icmp ne i8 %37, 0
  %39 = icmp eq i32 %35, 1
  %40 = or i1 %39, %38
  br i1 %40, label %45, label %41

41:                                               ; preds = %34
  %42 = add nsw i32 %35, -1
  %43 = getelementptr inbounds i8, i8* %36, i64 -1
  %44 = icmp ult i8* %43, %13
  br i1 %44, label %45, label %34

45:                                               ; preds = %41, %34, %23
  %46 = phi i32 [ %27, %23 ], [ %42, %41 ], [ %35, %34 ]
  store i32 %46, i32* %12, align 4
  br label %47

47:                                               ; preds = %8, %45
  %48 = icmp slt i32 %1, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  store i8 -128, i8* %10, align 4
  br label %50

50:                                               ; preds = %49, %47
  ret %struct.decNumber* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberFromUInt32_69(%struct.decNumber* returned, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %6, align 1
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %40, label %8

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %14, %8 ], [ %6, %2 ]
  %10 = phi i32 [ %13, %8 ], [ %1, %2 ]
  %11 = urem i32 %10, 10
  %12 = trunc i32 %11 to i8
  store i8 %12, i8* %9, align 1
  %13 = udiv i32 %10, 10
  %14 = getelementptr inbounds i8, i8* %9, i64 1
  %15 = icmp ult i32 %10, 10
  br i1 %15, label %16, label %8

16:                                               ; preds = %8
  %17 = ptrtoint i8* %14 to i64
  %18 = ptrtoint i8* %6 to i64
  %19 = sub i64 %17, %18
  %20 = trunc i64 %19 to i32
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %38, label %22

22:                                               ; preds = %16
  %23 = shl i64 %19, 32
  %24 = add i64 %23, -4294967296
  %25 = ashr exact i64 %24, 32
  %26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %25
  br label %27

27:                                               ; preds = %34, %22
  %28 = phi i32 [ %35, %34 ], [ %20, %22 ]
  %29 = phi i8* [ %36, %34 ], [ %26, %22 ]
  %30 = load i8, i8* %29, align 1
  %31 = icmp ne i8 %30, 0
  %32 = icmp eq i32 %28, 1
  %33 = or i1 %32, %31
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = add nsw i32 %28, -1
  %36 = getelementptr inbounds i8, i8* %29, i64 -1
  %37 = icmp ult i8* %36, %6
  br i1 %37, label %38, label %27

38:                                               ; preds = %27, %34, %16
  %39 = phi i32 [ %20, %16 ], [ %28, %27 ], [ %35, %34 ]
  store i32 %39, i32* %5, align 4
  br label %40

40:                                               ; preds = %2, %38
  ret %struct.decNumber* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden %struct.decNumber* @uprv_decNumberZero_69(%struct.decNumber* returned) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %5, align 1
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uprv_decNumberToInt32_69(%struct.decNumber* nocapture readonly, %struct.decContext*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, 112
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %153

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 10
  br i1 %10, label %153, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %153

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = icmp sgt i32 %9, 1
  br i1 %19, label %20, label %142

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %22 = zext i32 %9 to i64
  %23 = add nsw i64 %22, -1
  %24 = icmp ult i64 %23, 8
  br i1 %24, label %117, label %25

25:                                               ; preds = %20
  %26 = and i64 %23, -8
  %27 = or i64 %26, 1
  %28 = getelementptr i8, i8* %21, i64 %26
  %29 = add nsw i64 %26, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %29, 0
  br i1 %33, label %81, label %34

34:                                               ; preds = %25
  %35 = sub nuw nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi <4 x i32> [ zeroinitializer, %34 ], [ %76, %36 ]
  %39 = phi <4 x i32> [ zeroinitializer, %34 ], [ %77, %36 ]
  %40 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %41 = getelementptr i8, i8* %21, i64 %37
  %42 = bitcast i8* %41 to <4 x i8>*
  %43 = load <4 x i8>, <4 x i8>* %42, align 1
  %44 = getelementptr i8, i8* %41, i64 4
  %45 = bitcast i8* %44 to <4 x i8>*
  %46 = load <4 x i8>, <4 x i8>* %45, align 1
  %47 = zext <4 x i8> %43 to <4 x i32>
  %48 = zext <4 x i8> %46 to <4 x i32>
  %49 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %37
  %50 = bitcast i32* %49 to <4 x i32>*
  %51 = load <4 x i32>, <4 x i32>* %50, align 16
  %52 = getelementptr inbounds i32, i32* %49, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  %54 = load <4 x i32>, <4 x i32>* %53, align 16
  %55 = mul <4 x i32> %51, %47
  %56 = mul <4 x i32> %54, %48
  %57 = add <4 x i32> %55, %38
  %58 = add <4 x i32> %56, %39
  %59 = or i64 %37, 8
  %60 = getelementptr i8, i8* %21, i64 %59
  %61 = bitcast i8* %60 to <4 x i8>*
  %62 = load <4 x i8>, <4 x i8>* %61, align 1
  %63 = getelementptr i8, i8* %60, i64 4
  %64 = bitcast i8* %63 to <4 x i8>*
  %65 = load <4 x i8>, <4 x i8>* %64, align 1
  %66 = zext <4 x i8> %62 to <4 x i32>
  %67 = zext <4 x i8> %65 to <4 x i32>
  %68 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %59
  %69 = bitcast i32* %68 to <4 x i32>*
  %70 = load <4 x i32>, <4 x i32>* %69, align 16
  %71 = getelementptr inbounds i32, i32* %68, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  %73 = load <4 x i32>, <4 x i32>* %72, align 16
  %74 = mul <4 x i32> %70, %66
  %75 = mul <4 x i32> %73, %67
  %76 = add <4 x i32> %74, %57
  %77 = add <4 x i32> %75, %58
  %78 = add i64 %37, 16
  %79 = add i64 %40, -2
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !2

81:                                               ; preds = %36, %25
  %82 = phi <4 x i32> [ undef, %25 ], [ %76, %36 ]
  %83 = phi <4 x i32> [ undef, %25 ], [ %77, %36 ]
  %84 = phi i64 [ 0, %25 ], [ %78, %36 ]
  %85 = phi <4 x i32> [ zeroinitializer, %25 ], [ %76, %36 ]
  %86 = phi <4 x i32> [ zeroinitializer, %25 ], [ %77, %36 ]
  %87 = icmp eq i64 %32, 0
  br i1 %87, label %107, label %88

88:                                               ; preds = %81
  %89 = getelementptr i8, i8* %21, i64 %84
  %90 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %84
  %91 = getelementptr inbounds i32, i32* %90, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 16
  %94 = getelementptr i8, i8* %89, i64 4
  %95 = bitcast i8* %94 to <4 x i8>*
  %96 = load <4 x i8>, <4 x i8>* %95, align 1
  %97 = zext <4 x i8> %96 to <4 x i32>
  %98 = mul <4 x i32> %93, %97
  %99 = add <4 x i32> %98, %86
  %100 = bitcast i32* %90 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 16
  %102 = bitcast i8* %89 to <4 x i8>*
  %103 = load <4 x i8>, <4 x i8>* %102, align 1
  %104 = zext <4 x i8> %103 to <4 x i32>
  %105 = mul <4 x i32> %101, %104
  %106 = add <4 x i32> %105, %85
  br label %107

107:                                              ; preds = %81, %88
  %108 = phi <4 x i32> [ %82, %81 ], [ %106, %88 ]
  %109 = phi <4 x i32> [ %83, %81 ], [ %99, %88 ]
  %110 = add <4 x i32> %109, %108
  %111 = shufflevector <4 x i32> %110, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %112 = add <4 x i32> %110, %111
  %113 = shufflevector <4 x i32> %112, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %114 = add <4 x i32> %112, %113
  %115 = extractelement <4 x i32> %114, i32 0
  %116 = icmp eq i64 %23, %26
  br i1 %116, label %135, label %117

117:                                              ; preds = %107, %20
  %118 = phi i64 [ 1, %20 ], [ %27, %107 ]
  %119 = phi i32 [ 0, %20 ], [ %115, %107 ]
  %120 = phi i8* [ %21, %20 ], [ %28, %107 ]
  br label %121

121:                                              ; preds = %117, %121
  %122 = phi i64 [ %133, %121 ], [ %118, %117 ]
  %123 = phi i32 [ %131, %121 ], [ %119, %117 ]
  %124 = phi i8* [ %132, %121 ], [ %120, %117 ]
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = add nsw i64 %122, -1
  %128 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = mul i32 %129, %126
  %131 = add i32 %130, %123
  %132 = getelementptr inbounds i8, i8* %124, i64 1
  %133 = add nuw nsw i64 %122, 1
  %134 = icmp eq i64 %133, %22
  br i1 %134, label %135, label %121, !llvm.loop !4

135:                                              ; preds = %121, %107
  %136 = phi i32 [ %115, %107 ], [ %131, %121 ]
  %137 = icmp ugt i32 %136, 214748364
  br i1 %137, label %153, label %138

138:                                              ; preds = %135
  %139 = icmp eq i32 %136, 214748364
  %140 = icmp ugt i8 %17, 7
  %141 = and i1 %140, %139
  br i1 %141, label %149, label %142

142:                                              ; preds = %15, %138
  %143 = phi i32 [ %136, %138 ], [ 0, %15 ]
  %144 = mul i32 %143, 10
  %145 = add i32 %144, %18
  %146 = icmp slt i8 %4, 0
  %147 = sub nsw i32 0, %145
  %148 = select i1 %146, i32 %147, i32 %145
  br label %155

149:                                              ; preds = %138
  %150 = icmp sgt i8 %4, -1
  %151 = icmp ne i8 %17, 8
  %152 = or i1 %150, %151
  br i1 %152, label %153, label %155

153:                                              ; preds = %135, %11, %2, %149, %7
  %154 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %1, i32 128) #8
  br label %155

155:                                              ; preds = %142, %149, %153
  %156 = phi i32 [ 0, %153 ], [ -2147483648, %149 ], [ %148, %142 ]
  ret i32 %156
}

declare %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uprv_decNumberToUInt32_69(%struct.decNumber* nocapture readonly, %struct.decContext*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, 112
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %153

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 10
  br i1 %10, label %153, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %153

15:                                               ; preds = %11
  %16 = icmp slt i8 %4, 0
  %17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %18 = load i8, i8* %17, align 1
  br i1 %16, label %19, label %23

19:                                               ; preds = %15
  %20 = icmp eq i8 %18, 0
  %21 = icmp eq i32 %9, 1
  %22 = and i1 %21, %20
  br i1 %22, label %148, label %153

23:                                               ; preds = %15
  %24 = zext i8 %18 to i32
  %25 = icmp sgt i32 %9, 1
  br i1 %25, label %26, label %148

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %28 = zext i32 %9 to i64
  %29 = add nsw i64 %28, -1
  %30 = icmp ult i64 %29, 8
  br i1 %30, label %123, label %31

31:                                               ; preds = %26
  %32 = and i64 %29, -8
  %33 = or i64 %32, 1
  %34 = getelementptr i8, i8* %27, i64 %32
  %35 = add nsw i64 %32, -8
  %36 = lshr exact i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %35, 0
  br i1 %39, label %87, label %40

40:                                               ; preds = %31
  %41 = sub nuw nsw i64 %37, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %84, %42 ]
  %44 = phi <4 x i32> [ zeroinitializer, %40 ], [ %82, %42 ]
  %45 = phi <4 x i32> [ zeroinitializer, %40 ], [ %83, %42 ]
  %46 = phi i64 [ %41, %40 ], [ %85, %42 ]
  %47 = getelementptr i8, i8* %27, i64 %43
  %48 = bitcast i8* %47 to <4 x i8>*
  %49 = load <4 x i8>, <4 x i8>* %48, align 1
  %50 = getelementptr i8, i8* %47, i64 4
  %51 = bitcast i8* %50 to <4 x i8>*
  %52 = load <4 x i8>, <4 x i8>* %51, align 1
  %53 = zext <4 x i8> %49 to <4 x i32>
  %54 = zext <4 x i8> %52 to <4 x i32>
  %55 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %43
  %56 = bitcast i32* %55 to <4 x i32>*
  %57 = load <4 x i32>, <4 x i32>* %56, align 16
  %58 = getelementptr inbounds i32, i32* %55, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  %60 = load <4 x i32>, <4 x i32>* %59, align 16
  %61 = mul <4 x i32> %57, %53
  %62 = mul <4 x i32> %60, %54
  %63 = add <4 x i32> %61, %44
  %64 = add <4 x i32> %62, %45
  %65 = or i64 %43, 8
  %66 = getelementptr i8, i8* %27, i64 %65
  %67 = bitcast i8* %66 to <4 x i8>*
  %68 = load <4 x i8>, <4 x i8>* %67, align 1
  %69 = getelementptr i8, i8* %66, i64 4
  %70 = bitcast i8* %69 to <4 x i8>*
  %71 = load <4 x i8>, <4 x i8>* %70, align 1
  %72 = zext <4 x i8> %68 to <4 x i32>
  %73 = zext <4 x i8> %71 to <4 x i32>
  %74 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %65
  %75 = bitcast i32* %74 to <4 x i32>*
  %76 = load <4 x i32>, <4 x i32>* %75, align 16
  %77 = getelementptr inbounds i32, i32* %74, i64 4
  %78 = bitcast i32* %77 to <4 x i32>*
  %79 = load <4 x i32>, <4 x i32>* %78, align 16
  %80 = mul <4 x i32> %76, %72
  %81 = mul <4 x i32> %79, %73
  %82 = add <4 x i32> %80, %63
  %83 = add <4 x i32> %81, %64
  %84 = add i64 %43, 16
  %85 = add i64 %46, -2
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %42, !llvm.loop !6

87:                                               ; preds = %42, %31
  %88 = phi <4 x i32> [ undef, %31 ], [ %82, %42 ]
  %89 = phi <4 x i32> [ undef, %31 ], [ %83, %42 ]
  %90 = phi i64 [ 0, %31 ], [ %84, %42 ]
  %91 = phi <4 x i32> [ zeroinitializer, %31 ], [ %82, %42 ]
  %92 = phi <4 x i32> [ zeroinitializer, %31 ], [ %83, %42 ]
  %93 = icmp eq i64 %38, 0
  br i1 %93, label %113, label %94

94:                                               ; preds = %87
  %95 = getelementptr i8, i8* %27, i64 %90
  %96 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %90
  %97 = getelementptr inbounds i32, i32* %96, i64 4
  %98 = bitcast i32* %97 to <4 x i32>*
  %99 = load <4 x i32>, <4 x i32>* %98, align 16
  %100 = getelementptr i8, i8* %95, i64 4
  %101 = bitcast i8* %100 to <4 x i8>*
  %102 = load <4 x i8>, <4 x i8>* %101, align 1
  %103 = zext <4 x i8> %102 to <4 x i32>
  %104 = mul <4 x i32> %99, %103
  %105 = add <4 x i32> %104, %92
  %106 = bitcast i32* %96 to <4 x i32>*
  %107 = load <4 x i32>, <4 x i32>* %106, align 16
  %108 = bitcast i8* %95 to <4 x i8>*
  %109 = load <4 x i8>, <4 x i8>* %108, align 1
  %110 = zext <4 x i8> %109 to <4 x i32>
  %111 = mul <4 x i32> %107, %110
  %112 = add <4 x i32> %111, %91
  br label %113

113:                                              ; preds = %87, %94
  %114 = phi <4 x i32> [ %88, %87 ], [ %112, %94 ]
  %115 = phi <4 x i32> [ %89, %87 ], [ %105, %94 ]
  %116 = add <4 x i32> %115, %114
  %117 = shufflevector <4 x i32> %116, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %118 = add <4 x i32> %116, %117
  %119 = shufflevector <4 x i32> %118, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %120 = add <4 x i32> %118, %119
  %121 = extractelement <4 x i32> %120, i32 0
  %122 = icmp eq i64 %29, %32
  br i1 %122, label %141, label %123

123:                                              ; preds = %113, %26
  %124 = phi i64 [ 1, %26 ], [ %33, %113 ]
  %125 = phi i32 [ 0, %26 ], [ %121, %113 ]
  %126 = phi i8* [ %27, %26 ], [ %34, %113 ]
  br label %127

127:                                              ; preds = %123, %127
  %128 = phi i64 [ %139, %127 ], [ %124, %123 ]
  %129 = phi i32 [ %137, %127 ], [ %125, %123 ]
  %130 = phi i8* [ %138, %127 ], [ %126, %123 ]
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = add nsw i64 %128, -1
  %134 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = mul i32 %135, %132
  %137 = add i32 %136, %129
  %138 = getelementptr inbounds i8, i8* %130, i64 1
  %139 = add nuw nsw i64 %128, 1
  %140 = icmp eq i64 %139, %28
  br i1 %140, label %141, label %127, !llvm.loop !7

141:                                              ; preds = %127, %113
  %142 = phi i32 [ %121, %113 ], [ %137, %127 ]
  %143 = icmp ugt i32 %142, 429496729
  br i1 %143, label %153, label %144

144:                                              ; preds = %141
  %145 = icmp eq i32 %142, 429496729
  %146 = icmp ugt i8 %18, 5
  %147 = and i1 %146, %145
  br i1 %147, label %153, label %148

148:                                              ; preds = %23, %19, %144
  %149 = phi i32 [ %24, %144 ], [ %24, %23 ], [ 0, %19 ]
  %150 = phi i32 [ %142, %144 ], [ 0, %23 ], [ 0, %19 ]
  %151 = mul i32 %150, 10
  %152 = add i32 %151, %149
  br label %155

153:                                              ; preds = %144, %141, %11, %2, %7, %19
  %154 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %1, i32 128) #8
  br label %155

155:                                              ; preds = %148, %153
  %156 = phi i32 [ 0, %153 ], [ %152, %148 ]
  ret i32 %156
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @uprv_decNumberToString_69(%struct.decNumber* readonly, i8* returned) local_unnamed_addr #3 {
  tail call fastcc void @_ZL11decToStringPK9decNumberPch(%struct.decNumber* %0, i8* %1, i8 zeroext 0)
  ret i8* %1
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL11decToStringPK9decNumberPch(%struct.decNumber* readonly, i8* nocapture, i8 zeroext) unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 50
  br i1 %9, label %10, label %15

10:                                               ; preds = %3
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  br label %15

15:                                               ; preds = %3, %10
  %16 = phi i32 [ %14, %10 ], [ %8, %3 ]
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %17
  %19 = getelementptr inbounds i8, i8* %18, i64 -1
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %21 = load i8, i8* %20, align 4
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %15
  store i8 45, i8* %1, align 1
  %24 = getelementptr inbounds i8, i8* %1, i64 1
  %25 = load i8, i8* %20, align 4
  br label %26

26:                                               ; preds = %23, %15
  %27 = phi i8 [ %25, %23 ], [ %21, %15 ]
  %28 = phi i8* [ %24, %23 ], [ %1, %15 ]
  %29 = zext i8 %27 to i32
  %30 = and i32 %29, 112
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %54, label %32

32:                                               ; preds = %26
  %33 = and i32 %29, 64
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = bitcast i8* %28 to i32*
  store i32 6712905, i32* %36, align 1
  %37 = getelementptr inbounds i8, i8* %28, i64 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i64 6, i1 false)
  br label %501

38:                                               ; preds = %32
  %39 = and i32 %29, 16
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  store i8 115, i8* %28, align 1
  %42 = getelementptr inbounds i8, i8* %28, i64 1
  br label %43

43:                                               ; preds = %38, %41
  %44 = phi i8* [ %42, %41 ], [ %28, %38 ]
  %45 = bitcast i8* %44 to i32*
  store i32 5136718, i32* %45, align 1
  %46 = getelementptr inbounds i8, i8* %44, i64 3
  %47 = icmp eq i32 %5, 0
  br i1 %47, label %48, label %501

48:                                               ; preds = %43
  %49 = load i8, i8* %6, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %48
  %52 = load i32, i32* %7, align 4
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %501, label %57

54:                                               ; preds = %48, %26
  %55 = phi i8* [ %28, %26 ], [ %46, %48 ]
  %56 = load i32, i32* %7, align 4
  br label %57

57:                                               ; preds = %54, %51
  %58 = phi i32 [ %56, %54 ], [ %52, %51 ]
  %59 = phi i8* [ %55, %54 ], [ %46, %51 ]
  %60 = icmp slt i32 %58, 50
  br i1 %60, label %61, label %66

61:                                               ; preds = %57
  %62 = sext i32 %58 to i64
  %63 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  br label %66

66:                                               ; preds = %57, %61
  %67 = phi i32 [ %65, %61 ], [ %58, %57 ]
  %68 = sub i32 %58, %67
  %69 = icmp eq i32 %5, 0
  br i1 %69, label %70, label %134

70:                                               ; preds = %66
  %71 = icmp ult i8* %19, %6
  br i1 %71, label %132, label %72

72:                                               ; preds = %70, %128
  %73 = phi i8* [ %130, %128 ], [ %19, %70 ]
  %74 = phi i8* [ %129, %128 ], [ %59, %70 ]
  %75 = phi i32 [ 0, %128 ], [ %68, %70 ]
  %76 = icmp sgt i32 %75, -1
  br i1 %76, label %77, label %128

77:                                               ; preds = %72
  %78 = load i8, i8* %73, align 1
  %79 = zext i8 %78 to i32
  %80 = sext i32 %75 to i64
  br label %81

81:                                               ; preds = %77, %124
  %82 = phi i64 [ %80, %77 ], [ %126, %124 ]
  %83 = phi i32 [ %79, %77 ], [ %116, %124 ]
  %84 = phi i8* [ %74, %77 ], [ %125, %124 ]
  store i8 48, i8* %84, align 1
  %85 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %82
  %86 = load i32, i32* %85, align 4
  %87 = shl i32 %86, 1
  %88 = icmp ugt i32 %83, %87
  br i1 %88, label %89, label %106

89:                                               ; preds = %81
  %90 = shl i32 %86, 3
  %91 = icmp ult i32 %83, %90
  %92 = select i1 %91, i8 48, i8 56
  %93 = select i1 %91, i32 0, i32 %90
  %94 = sub i32 %83, %93
  %95 = shl i32 %86, 2
  %96 = and i32 %95, 2147483644
  %97 = icmp ult i32 %94, %96
  %98 = or i8 %92, 4
  %99 = select i1 %97, i8 %92, i8 %98
  %100 = select i1 %97, i32 0, i32 %96
  %101 = sub i32 %94, %100
  %102 = and i1 %91, %97
  br i1 %102, label %104, label %103

103:                                              ; preds = %89
  store i8 %99, i8* %84, align 1
  br label %104

104:                                              ; preds = %89, %103
  %105 = lshr exact i32 %96, 1
  br label %106

106:                                              ; preds = %104, %81
  %107 = phi i8 [ %99, %104 ], [ 48, %81 ]
  %108 = phi i32 [ %101, %104 ], [ %83, %81 ]
  %109 = phi i32 [ %105, %104 ], [ %87, %81 ]
  %110 = icmp ult i32 %108, %109
  %111 = select i1 %110, i32 0, i32 %109
  %112 = sub i32 %108, %111
  %113 = lshr i32 %109, 1
  %114 = icmp ult i32 %112, %113
  %115 = select i1 %114, i32 0, i32 %113
  %116 = sub i32 %112, %115
  %117 = and i1 %110, %114
  br i1 %117, label %124, label %118

118:                                              ; preds = %106
  %119 = add nsw i8 %107, 2
  %120 = select i1 %110, i8 %107, i8 %119
  %121 = xor i1 %114, true
  %122 = zext i1 %121 to i8
  %123 = add i8 %120, %122
  store i8 %123, i8* %84, align 1
  br label %124

124:                                              ; preds = %106, %118
  %125 = getelementptr inbounds i8, i8* %84, i64 1
  %126 = add nsw i64 %82, -1
  %127 = icmp sgt i64 %82, 0
  br i1 %127, label %81, label %128

128:                                              ; preds = %124, %72
  %129 = phi i8* [ %74, %72 ], [ %125, %124 ]
  %130 = getelementptr inbounds i8, i8* %73, i64 -1
  %131 = icmp ult i8* %130, %6
  br i1 %131, label %132, label %72

132:                                              ; preds = %128, %70
  %133 = phi i8* [ %59, %70 ], [ %129, %128 ]
  store i8 0, i8* %133, align 1
  br label %501

134:                                              ; preds = %66
  %135 = add nsw i32 %58, %5
  %136 = icmp sgt i32 %5, 0
  %137 = icmp slt i32 %135, -5
  %138 = or i1 %136, %137
  br i1 %138, label %139, label %176

139:                                              ; preds = %134
  %140 = add nsw i32 %135, -1
  %141 = icmp ne i8 %2, 0
  %142 = icmp ne i32 %140, 0
  %143 = and i1 %141, %142
  br i1 %143, label %144, label %172

144:                                              ; preds = %139
  %145 = icmp slt i32 %135, 1
  br i1 %145, label %146, label %152

146:                                              ; preds = %144
  %147 = sub i32 1, %135
  %148 = srem i32 %147, 3
  %149 = icmp eq i32 %148, 0
  %150 = sub nsw i32 3, %148
  %151 = select i1 %149, i32 0, i32 %150
  br label %154

152:                                              ; preds = %144
  %153 = srem i32 %140, 3
  br label %154

154:                                              ; preds = %146, %152
  %155 = phi i32 [ %153, %152 ], [ %151, %146 ]
  %156 = sub nsw i32 %140, %155
  %157 = load i8, i8* %6, align 1
  %158 = icmp eq i8 %157, 0
  %159 = icmp eq i32 %58, 1
  %160 = and i1 %159, %158
  br i1 %160, label %161, label %165

161:                                              ; preds = %154
  %162 = load i8, i8* %20, align 4
  %163 = and i8 %162, 112
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %161, %154
  %166 = add nsw i32 %155, 1
  br label %176

167:                                              ; preds = %161
  %168 = icmp eq i32 %155, 0
  br i1 %168, label %172, label %169

169:                                              ; preds = %167
  %170 = add nsw i32 %156, 3
  %171 = add nsw i32 %155, -2
  br label %176

172:                                              ; preds = %139, %167
  %173 = phi i32 [ %156, %167 ], [ %140, %139 ]
  %174 = load i8, i8* %19, align 1
  %175 = zext i8 %174 to i32
  br label %182

176:                                              ; preds = %165, %169, %134
  %177 = phi i32 [ 0, %134 ], [ %170, %169 ], [ %156, %165 ]
  %178 = phi i32 [ %135, %134 ], [ %171, %169 ], [ %166, %165 ]
  %179 = load i8, i8* %19, align 1
  %180 = zext i8 %179 to i32
  %181 = icmp sgt i32 %178, 0
  br i1 %181, label %182, label %342

182:                                              ; preds = %172, %176
  %183 = phi i32 [ %175, %172 ], [ %180, %176 ]
  %184 = phi i32 [ 1, %172 ], [ %178, %176 ]
  %185 = phi i32 [ %173, %172 ], [ %177, %176 ]
  br label %186

186:                                              ; preds = %182, %243
  %187 = phi i32 [ %235, %243 ], [ %183, %182 ]
  %188 = phi i8* [ %201, %243 ], [ %19, %182 ]
  %189 = phi i8* [ %245, %243 ], [ %59, %182 ]
  %190 = phi i32 [ %246, %243 ], [ %68, %182 ]
  %191 = phi i32 [ %244, %243 ], [ %184, %182 ]
  %192 = icmp slt i32 %190, 0
  br i1 %192, label %193, label %199

193:                                              ; preds = %186
  %194 = icmp eq i8* %188, %6
  br i1 %194, label %248, label %195

195:                                              ; preds = %193
  %196 = getelementptr inbounds i8, i8* %188, i64 -1
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  br label %199

199:                                              ; preds = %186, %195
  %200 = phi i32 [ 0, %195 ], [ %190, %186 ]
  %201 = phi i8* [ %196, %195 ], [ %188, %186 ]
  %202 = phi i32 [ %198, %195 ], [ %187, %186 ]
  store i8 48, i8* %189, align 1
  %203 = sext i32 %200 to i64
  %204 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = shl i32 %205, 1
  %207 = icmp ugt i32 %202, %206
  br i1 %207, label %208, label %225

208:                                              ; preds = %199
  %209 = shl i32 %205, 3
  %210 = icmp ult i32 %202, %209
  %211 = select i1 %210, i8 48, i8 56
  %212 = select i1 %210, i32 0, i32 %209
  %213 = sub i32 %202, %212
  %214 = shl i32 %205, 2
  %215 = and i32 %214, 2147483644
  %216 = icmp ult i32 %213, %215
  %217 = or i8 %211, 4
  %218 = select i1 %216, i8 %211, i8 %217
  %219 = select i1 %216, i32 0, i32 %215
  %220 = sub i32 %213, %219
  %221 = and i1 %210, %216
  br i1 %221, label %223, label %222

222:                                              ; preds = %208
  store i8 %218, i8* %189, align 1
  br label %223

223:                                              ; preds = %208, %222
  %224 = lshr exact i32 %215, 1
  br label %225

225:                                              ; preds = %223, %199
  %226 = phi i8 [ %218, %223 ], [ 48, %199 ]
  %227 = phi i32 [ %220, %223 ], [ %202, %199 ]
  %228 = phi i32 [ %224, %223 ], [ %206, %199 ]
  %229 = icmp ult i32 %227, %228
  %230 = select i1 %229, i32 0, i32 %228
  %231 = sub i32 %227, %230
  %232 = lshr i32 %228, 1
  %233 = icmp ult i32 %231, %232
  %234 = select i1 %233, i32 0, i32 %232
  %235 = sub i32 %231, %234
  %236 = and i1 %229, %233
  br i1 %236, label %243, label %237

237:                                              ; preds = %225
  %238 = add nsw i8 %226, 2
  %239 = select i1 %229, i8 %226, i8 %238
  %240 = xor i1 %233, true
  %241 = zext i1 %240 to i8
  %242 = add i8 %239, %241
  store i8 %242, i8* %189, align 1
  br label %243

243:                                              ; preds = %225, %237
  %244 = add nsw i32 %191, -1
  %245 = getelementptr inbounds i8, i8* %189, i64 1
  %246 = add nsw i32 %200, -1
  %247 = icmp sgt i32 %244, 0
  br i1 %247, label %186, label %248

248:                                              ; preds = %243, %193
  %249 = phi i32 [ %191, %193 ], [ %244, %243 ]
  %250 = phi i32 [ %190, %193 ], [ %246, %243 ]
  %251 = phi i8* [ %189, %193 ], [ %245, %243 ]
  %252 = phi i8* [ %6, %193 ], [ %201, %243 ]
  %253 = phi i32 [ %187, %193 ], [ %235, %243 ]
  %254 = load i32, i32* %7, align 4
  %255 = icmp slt i32 %184, %254
  br i1 %255, label %276, label %256

256:                                              ; preds = %248
  %257 = icmp sgt i32 %249, 0
  br i1 %257, label %258, label %433

258:                                              ; preds = %256
  %259 = zext i32 %249 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %251, i8 48, i64 %259, i1 false)
  %260 = add nsw i32 %249, -1
  %261 = and i32 %249, 7
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %271, label %263

263:                                              ; preds = %258, %263
  %264 = phi i8* [ %268, %263 ], [ %251, %258 ]
  %265 = phi i32 [ %267, %263 ], [ %249, %258 ]
  %266 = phi i32 [ %269, %263 ], [ %261, %258 ]
  %267 = add nsw i32 %265, -1
  %268 = getelementptr inbounds i8, i8* %264, i64 1
  %269 = add i32 %266, -1
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %263, !llvm.loop !8

271:                                              ; preds = %263, %258
  %272 = phi i8* [ %251, %258 ], [ %268, %263 ]
  %273 = phi i32 [ %249, %258 ], [ %267, %263 ]
  %274 = phi i8* [ undef, %258 ], [ %268, %263 ]
  %275 = icmp ult i32 %260, 7
  br i1 %275, label %433, label %336

276:                                              ; preds = %248
  store i8 46, i8* %251, align 1
  br label %277

277:                                              ; preds = %334, %276
  %278 = phi i32 [ %250, %276 ], [ %335, %334 ]
  %279 = phi i8* [ %251, %276 ], [ %282, %334 ]
  %280 = phi i8* [ %252, %276 ], [ %292, %334 ]
  %281 = phi i32 [ %253, %276 ], [ %326, %334 ]
  %282 = getelementptr inbounds i8, i8* %279, i64 1
  %283 = icmp slt i32 %278, 0
  br i1 %283, label %284, label %290

284:                                              ; preds = %277
  %285 = icmp eq i8* %280, %6
  br i1 %285, label %433, label %286

286:                                              ; preds = %284
  %287 = getelementptr inbounds i8, i8* %280, i64 -1
  %288 = load i8, i8* %287, align 1
  %289 = zext i8 %288 to i32
  br label %290

290:                                              ; preds = %277, %286
  %291 = phi i32 [ 0, %286 ], [ %278, %277 ]
  %292 = phi i8* [ %287, %286 ], [ %280, %277 ]
  %293 = phi i32 [ %289, %286 ], [ %281, %277 ]
  store i8 48, i8* %282, align 1
  %294 = sext i32 %291 to i64
  %295 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = shl i32 %296, 1
  %298 = icmp ugt i32 %293, %297
  br i1 %298, label %299, label %316

299:                                              ; preds = %290
  %300 = shl i32 %296, 3
  %301 = icmp ult i32 %293, %300
  %302 = select i1 %301, i8 48, i8 56
  %303 = select i1 %301, i32 0, i32 %300
  %304 = sub i32 %293, %303
  %305 = shl i32 %296, 2
  %306 = and i32 %305, 2147483644
  %307 = icmp ult i32 %304, %306
  %308 = or i8 %302, 4
  %309 = select i1 %307, i8 %302, i8 %308
  %310 = select i1 %307, i32 0, i32 %306
  %311 = sub i32 %304, %310
  %312 = and i1 %301, %307
  br i1 %312, label %314, label %313

313:                                              ; preds = %299
  store i8 %309, i8* %282, align 1
  br label %314

314:                                              ; preds = %299, %313
  %315 = lshr exact i32 %306, 1
  br label %316

316:                                              ; preds = %314, %290
  %317 = phi i8 [ %309, %314 ], [ 48, %290 ]
  %318 = phi i32 [ %311, %314 ], [ %293, %290 ]
  %319 = phi i32 [ %315, %314 ], [ %297, %290 ]
  %320 = icmp ult i32 %318, %319
  %321 = select i1 %320, i32 0, i32 %319
  %322 = sub i32 %318, %321
  %323 = lshr i32 %319, 1
  %324 = icmp ult i32 %322, %323
  %325 = select i1 %324, i32 0, i32 %323
  %326 = sub i32 %322, %325
  %327 = and i1 %320, %324
  br i1 %327, label %334, label %328

328:                                              ; preds = %316
  %329 = add nsw i8 %317, 2
  %330 = select i1 %320, i8 %317, i8 %329
  %331 = xor i1 %324, true
  %332 = zext i1 %331 to i8
  %333 = add i8 %330, %332
  store i8 %333, i8* %282, align 1
  br label %334

334:                                              ; preds = %316, %328
  %335 = add nsw i32 %291, -1
  br label %277

336:                                              ; preds = %271, %336
  %337 = phi i8* [ %340, %336 ], [ %272, %271 ]
  %338 = phi i32 [ %339, %336 ], [ %273, %271 ]
  %339 = add nsw i32 %338, -8
  %340 = getelementptr inbounds i8, i8* %337, i64 8
  %341 = icmp sgt i32 %339, 0
  br i1 %341, label %336, label %433

342:                                              ; preds = %176
  store i8 48, i8* %59, align 1
  %343 = getelementptr inbounds i8, i8* %59, i64 1
  store i8 46, i8* %343, align 1
  %344 = getelementptr inbounds i8, i8* %59, i64 2
  %345 = icmp slt i32 %178, 0
  br i1 %345, label %346, label %372

346:                                              ; preds = %342
  %347 = xor i32 %178, -1
  %348 = zext i32 %347 to i64
  %349 = add nuw nsw i64 %348, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %344, i8 48, i64 %349, i1 false)
  %350 = sub i32 0, %178
  %351 = and i32 %350, 7
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %361, label %353

353:                                              ; preds = %346, %353
  %354 = phi i8* [ %358, %353 ], [ %344, %346 ]
  %355 = phi i32 [ %357, %353 ], [ %178, %346 ]
  %356 = phi i32 [ %359, %353 ], [ %351, %346 ]
  %357 = add nsw i32 %355, 1
  %358 = getelementptr inbounds i8, i8* %354, i64 1
  %359 = add i32 %356, -1
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %361, label %353, !llvm.loop !10

361:                                              ; preds = %353, %346
  %362 = phi i8* [ undef, %346 ], [ %358, %353 ]
  %363 = phi i8* [ %344, %346 ], [ %358, %353 ]
  %364 = phi i32 [ %178, %346 ], [ %357, %353 ]
  %365 = icmp ugt i32 %178, -8
  br i1 %365, label %372, label %366

366:                                              ; preds = %361, %366
  %367 = phi i8* [ %370, %366 ], [ %363, %361 ]
  %368 = phi i32 [ %369, %366 ], [ %364, %361 ]
  %369 = add nsw i32 %368, 8
  %370 = getelementptr inbounds i8, i8* %367, i64 8
  %371 = icmp eq i32 %369, 0
  br i1 %371, label %372, label %366

372:                                              ; preds = %361, %366, %342
  %373 = phi i8* [ %344, %342 ], [ %362, %361 ], [ %370, %366 ]
  br label %374

374:                                              ; preds = %372, %430
  %375 = phi i32 [ %432, %430 ], [ %68, %372 ]
  %376 = phi i8* [ %431, %430 ], [ %373, %372 ]
  %377 = phi i8* [ %388, %430 ], [ %19, %372 ]
  %378 = phi i32 [ %422, %430 ], [ %180, %372 ]
  %379 = icmp slt i32 %375, 0
  br i1 %379, label %380, label %386

380:                                              ; preds = %374
  %381 = icmp eq i8* %377, %6
  br i1 %381, label %433, label %382

382:                                              ; preds = %380
  %383 = getelementptr inbounds i8, i8* %377, i64 -1
  %384 = load i8, i8* %383, align 1
  %385 = zext i8 %384 to i32
  br label %386

386:                                              ; preds = %374, %382
  %387 = phi i32 [ 0, %382 ], [ %375, %374 ]
  %388 = phi i8* [ %383, %382 ], [ %377, %374 ]
  %389 = phi i32 [ %385, %382 ], [ %378, %374 ]
  store i8 48, i8* %376, align 1
  %390 = sext i32 %387 to i64
  %391 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %390
  %392 = load i32, i32* %391, align 4
  %393 = shl i32 %392, 1
  %394 = icmp ugt i32 %389, %393
  br i1 %394, label %395, label %412

395:                                              ; preds = %386
  %396 = shl i32 %392, 3
  %397 = icmp ult i32 %389, %396
  %398 = select i1 %397, i8 48, i8 56
  %399 = select i1 %397, i32 0, i32 %396
  %400 = sub i32 %389, %399
  %401 = shl i32 %392, 2
  %402 = and i32 %401, 2147483644
  %403 = icmp ult i32 %400, %402
  %404 = or i8 %398, 4
  %405 = select i1 %403, i8 %398, i8 %404
  %406 = select i1 %403, i32 0, i32 %402
  %407 = sub i32 %400, %406
  %408 = and i1 %397, %403
  br i1 %408, label %410, label %409

409:                                              ; preds = %395
  store i8 %405, i8* %376, align 1
  br label %410

410:                                              ; preds = %395, %409
  %411 = lshr exact i32 %402, 1
  br label %412

412:                                              ; preds = %410, %386
  %413 = phi i8 [ %405, %410 ], [ 48, %386 ]
  %414 = phi i32 [ %407, %410 ], [ %389, %386 ]
  %415 = phi i32 [ %411, %410 ], [ %393, %386 ]
  %416 = icmp ult i32 %414, %415
  %417 = select i1 %416, i32 0, i32 %415
  %418 = sub i32 %414, %417
  %419 = lshr i32 %415, 1
  %420 = icmp ult i32 %418, %419
  %421 = select i1 %420, i32 0, i32 %419
  %422 = sub i32 %418, %421
  %423 = and i1 %416, %420
  br i1 %423, label %430, label %424

424:                                              ; preds = %412
  %425 = add nsw i8 %413, 2
  %426 = select i1 %416, i8 %413, i8 %425
  %427 = xor i1 %420, true
  %428 = zext i1 %427 to i8
  %429 = add i8 %426, %428
  store i8 %429, i8* %376, align 1
  br label %430

430:                                              ; preds = %412, %424
  %431 = getelementptr inbounds i8, i8* %376, i64 1
  %432 = add nsw i32 %387, -1
  br label %374

433:                                              ; preds = %380, %271, %336, %284, %256
  %434 = phi i32 [ %185, %256 ], [ %185, %284 ], [ %185, %336 ], [ %185, %271 ], [ %177, %380 ]
  %435 = phi i8* [ %251, %256 ], [ %282, %284 ], [ %274, %271 ], [ %340, %336 ], [ %376, %380 ]
  %436 = icmp eq i32 %434, 0
  br i1 %436, label %499, label %437

437:                                              ; preds = %433
  store i8 69, i8* %435, align 1
  %438 = getelementptr inbounds i8, i8* %435, i64 1
  store i8 43, i8* %438, align 1
  %439 = getelementptr inbounds i8, i8* %435, i64 2
  %440 = icmp slt i32 %434, 0
  br i1 %440, label %441, label %443

441:                                              ; preds = %437
  store i8 45, i8* %438, align 1
  %442 = sub nsw i32 0, %434
  br label %443

443:                                              ; preds = %441, %437
  %444 = phi i32 [ %434, %437 ], [ %442, %441 ]
  br label %445

445:                                              ; preds = %443, %489
  %446 = phi i64 [ %497, %489 ], [ 9, %443 ]
  %447 = phi i8 [ %496, %489 ], [ 0, %443 ]
  %448 = phi i32 [ %486, %489 ], [ %444, %443 ]
  %449 = phi i8* [ %494, %489 ], [ %439, %443 ]
  store i8 48, i8* %449, align 1
  %450 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %446
  %451 = load i32, i32* %450, align 4
  %452 = shl i32 %451, 1
  %453 = icmp ugt i32 %448, %452
  br i1 %453, label %454, label %471

454:                                              ; preds = %445
  %455 = shl i32 %451, 3
  %456 = icmp ult i32 %448, %455
  %457 = select i1 %456, i8 48, i8 56
  %458 = select i1 %456, i32 0, i32 %455
  %459 = sub i32 %448, %458
  %460 = shl i32 %451, 2
  %461 = and i32 %460, 2147483644
  %462 = icmp ult i32 %459, %461
  %463 = or i8 %457, 4
  %464 = select i1 %462, i8 %457, i8 %463
  %465 = select i1 %462, i32 0, i32 %461
  %466 = sub i32 %459, %465
  %467 = and i1 %456, %462
  br i1 %467, label %469, label %468

468:                                              ; preds = %454
  store i8 %464, i8* %449, align 1
  br label %469

469:                                              ; preds = %454, %468
  %470 = lshr exact i32 %461, 1
  br label %471

471:                                              ; preds = %469, %445
  %472 = phi i8 [ %464, %469 ], [ 48, %445 ]
  %473 = phi i32 [ %466, %469 ], [ %448, %445 ]
  %474 = phi i32 [ %470, %469 ], [ %452, %445 ]
  %475 = icmp ult i32 %473, %474
  %476 = add nsw i8 %472, 2
  %477 = select i1 %475, i8 %472, i8 %476
  %478 = select i1 %475, i32 0, i32 %474
  %479 = sub i32 %473, %478
  %480 = lshr i32 %474, 1
  %481 = icmp ult i32 %479, %480
  %482 = xor i1 %481, true
  %483 = zext i1 %482 to i8
  %484 = add i8 %477, %483
  %485 = select i1 %481, i32 0, i32 %480
  %486 = sub i32 %479, %485
  %487 = and i1 %475, %481
  br i1 %487, label %489, label %488

488:                                              ; preds = %471
  store i8 %484, i8* %449, align 1
  br label %489

489:                                              ; preds = %471, %488
  %490 = icmp ne i8 %484, 48
  %491 = icmp ne i8 %447, 0
  %492 = or i1 %491, %490
  %493 = getelementptr inbounds i8, i8* %449, i64 1
  %494 = select i1 %492, i8* %493, i8* %449
  %495 = zext i1 %490 to i8
  %496 = or i8 %447, %495
  %497 = add nsw i64 %446, -1
  %498 = icmp eq i64 %446, 0
  br i1 %498, label %499, label %445

499:                                              ; preds = %489, %433
  %500 = phi i8* [ %435, %433 ], [ %494, %489 ]
  store i8 0, i8* %500, align 1
  br label %501

501:                                              ; preds = %51, %43, %499, %132, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @uprv_decNumberToEngString_69(%struct.decNumber* readonly, i8* returned) local_unnamed_addr #3 {
  tail call fastcc void @_ZL11decToStringPK9decNumberPch(%struct.decNumber* %0, i8* %1, i8 zeroext 1)
  ret i8* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberFromString_69(%struct.decNumber* returned, i8*, %struct.decContext*) local_unnamed_addr #3 {
  %4 = alloca [45 x i8], align 16
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds [45 x i8], [45 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 45, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 45, i1 false)
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 -1431655766, i32* %5, align 4
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %37, %3
  %11 = phi i8 [ 0, %3 ], [ %38, %37 ]
  %12 = phi i32 [ 0, %3 ], [ %39, %37 ]
  %13 = phi i8* [ null, %3 ], [ %40, %37 ]
  %14 = phi i8* [ %1, %3 ], [ %41, %37 ]
  %15 = phi i8* [ null, %3 ], [ %42, %37 ]
  %16 = phi i8* [ %1, %3 ], [ %43, %37 ]
  %17 = load i8, i8* %16, align 1
  %18 = add i8 %17, -48
  %19 = icmp ult i8 %18, 10
  br i1 %19, label %20, label %22

20:                                               ; preds = %10
  %21 = add nsw i32 %12, 1
  br label %37

22:                                               ; preds = %10
  %23 = icmp eq i8 %17, 46
  %24 = icmp eq i8* %13, null
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = icmp eq i8* %16, %14
  %28 = getelementptr inbounds i8, i8* %14, i64 1
  %29 = select i1 %27, i8* %28, i8* %14
  br label %37

30:                                               ; preds = %22
  %31 = icmp eq i8* %16, %1
  br i1 %31, label %32, label %44

32:                                               ; preds = %30
  switch i8 %17, label %44 [
    i8 45, label %33
    i8 43, label %35
  ]

33:                                               ; preds = %32
  %34 = getelementptr inbounds i8, i8* %14, i64 1
  br label %37

35:                                               ; preds = %32
  %36 = getelementptr inbounds i8, i8* %14, i64 1
  br label %37

37:                                               ; preds = %26, %35, %33, %20
  %38 = phi i8 [ %11, %20 ], [ -128, %33 ], [ %11, %35 ], [ %11, %26 ]
  %39 = phi i32 [ %21, %20 ], [ %12, %33 ], [ %12, %35 ], [ %12, %26 ]
  %40 = phi i8* [ %13, %20 ], [ %13, %33 ], [ %13, %35 ], [ %16, %26 ]
  %41 = phi i8* [ %14, %20 ], [ %34, %33 ], [ %36, %35 ], [ %29, %26 ]
  %42 = phi i8* [ %16, %20 ], [ %15, %33 ], [ %15, %35 ], [ %15, %26 ]
  %43 = getelementptr inbounds i8, i8* %16, i64 1
  br label %10

44:                                               ; preds = %32, %30
  %45 = phi i8* [ %1, %32 ], [ %16, %30 ]
  %46 = icmp eq i8* %15, null
  br i1 %46, label %47, label %143

47:                                               ; preds = %44
  store i32 1, i32* %6, align 4
  %48 = load i8, i8* %45, align 1
  %49 = icmp eq i8 %48, 0
  %50 = icmp ne i8* %13, null
  %51 = or i1 %50, %49
  br i1 %51, label %306, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %53, align 4
  %54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %55, align 4
  %56 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %56, align 1
  br label %57

57:                                               ; preds = %69, %52
  %58 = phi i8* [ %45, %52 ], [ %70, %69 ]
  %59 = phi i8* [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), %52 ], [ %71, %69 ]
  %60 = phi i8* [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), %52 ], [ %72, %69 ]
  %61 = load i8, i8* %58, align 1
  %62 = load i8, i8* %59, align 1
  %63 = icmp eq i8 %61, %62
  br i1 %63, label %67, label %64

64:                                               ; preds = %57
  %65 = load i8, i8* %60, align 1
  %66 = icmp eq i8 %61, %65
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %57
  %68 = icmp eq i8 %61, 0
  br i1 %68, label %89, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds i8, i8* %58, i64 1
  %71 = getelementptr inbounds i8, i8* %59, i64 1
  %72 = getelementptr inbounds i8, i8* %60, i64 1
  br label %57

73:                                               ; preds = %64, %85
  %74 = phi i8* [ %86, %85 ], [ %45, %64 ]
  %75 = phi i8* [ %87, %85 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), %64 ]
  %76 = phi i8* [ %88, %85 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), %64 ]
  %77 = load i8, i8* %74, align 1
  %78 = load i8, i8* %75, align 1
  %79 = icmp eq i8 %77, %78
  br i1 %79, label %83, label %80

80:                                               ; preds = %73
  %81 = load i8, i8* %76, align 1
  %82 = icmp eq i8 %77, %81
  br i1 %82, label %83, label %91

83:                                               ; preds = %80, %73
  %84 = icmp eq i8 %77, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %74, i64 1
  %87 = getelementptr inbounds i8, i8* %75, i64 1
  %88 = getelementptr inbounds i8, i8* %76, i64 1
  br label %73

89:                                               ; preds = %67, %83
  %90 = or i8 %11, 64
  store i8 %90, i8* %53, align 4
  store i32 0, i32* %6, align 4
  br label %315

91:                                               ; preds = %80
  %92 = or i8 %11, 32
  store i8 %92, i8* %53, align 4
  %93 = load i8, i8* %45, align 1
  switch i8 %93, label %98 [
    i8 115, label %94
    i8 83, label %94
  ]

94:                                               ; preds = %91, %91
  %95 = getelementptr inbounds i8, i8* %45, i64 1
  %96 = or i8 %11, 16
  store i8 %96, i8* %53, align 4
  %97 = load i8, i8* %95, align 1
  br label %98

98:                                               ; preds = %91, %94
  %99 = phi i8 [ %92, %91 ], [ %96, %94 ]
  %100 = phi i8 [ %93, %91 ], [ %97, %94 ]
  %101 = phi i8* [ %45, %91 ], [ %95, %94 ]
  switch i8 %100, label %295 [
    i8 110, label %102
    i8 78, label %102
  ]

102:                                              ; preds = %98, %98
  %103 = getelementptr inbounds i8, i8* %101, i64 1
  %104 = load i8, i8* %103, align 1
  switch i8 %104, label %295 [
    i8 97, label %105
    i8 65, label %105
  ]

105:                                              ; preds = %102, %102
  %106 = getelementptr inbounds i8, i8* %101, i64 2
  %107 = load i8, i8* %106, align 1
  switch i8 %107, label %295 [
    i8 110, label %108
    i8 78, label %108
  ]

108:                                              ; preds = %105, %105
  %109 = getelementptr inbounds i8, i8* %101, i64 3
  br label %110

110:                                              ; preds = %116, %108
  %111 = phi i8* [ %109, %108 ], [ %117, %116 ]
  %112 = load i8, i8* %111, align 1
  switch i8 %112, label %113 [
    i8 48, label %116
    i8 0, label %118
  ]

113:                                              ; preds = %110
  %114 = add i8 %112, -48
  %115 = icmp ugt i8 %114, 9
  br i1 %115, label %127, label %119

116:                                              ; preds = %110
  %117 = getelementptr inbounds i8, i8* %111, i64 1
  br label %110

118:                                              ; preds = %110
  store i32 0, i32* %6, align 4
  br label %315

119:                                              ; preds = %113, %119
  %120 = phi i8* [ %122, %119 ], [ %111, %113 ]
  %121 = phi i32 [ %123, %119 ], [ %12, %113 ]
  %122 = getelementptr inbounds i8, i8* %120, i64 1
  %123 = add nsw i32 %121, 1
  %124 = load i8, i8* %122, align 1
  %125 = add i8 %124, -48
  %126 = icmp ugt i8 %125, 9
  br i1 %126, label %127, label %119

127:                                              ; preds = %119, %113
  %128 = phi i8 [ %112, %113 ], [ %124, %119 ]
  %129 = phi i32 [ %12, %113 ], [ %123, %119 ]
  %130 = phi i8* [ null, %113 ], [ %120, %119 ]
  %131 = icmp eq i8 %128, 0
  br i1 %131, label %132, label %295

132:                                              ; preds = %127
  %133 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp slt i32 %129, %134
  br i1 %135, label %142, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 6
  %138 = load i8, i8* %137, align 4
  %139 = icmp ne i8 %138, 0
  %140 = icmp sgt i32 %129, %134
  %141 = or i1 %140, %139
  br i1 %141, label %295, label %142

142:                                              ; preds = %136, %132
  store i32 0, i32* %6, align 4
  br label %202

143:                                              ; preds = %44
  %144 = icmp eq i8 %17, 0
  br i1 %144, label %202, label %145

145:                                              ; preds = %143
  store i32 1, i32* %6, align 4
  %146 = load i8, i8* %45, align 1
  switch i8 %146, label %306 [
    i8 101, label %147
    i8 69, label %147
  ]

147:                                              ; preds = %145, %145
  %148 = getelementptr inbounds i8, i8* %45, i64 1
  %149 = load i8, i8* %148, align 1
  switch i8 %149, label %155 [
    i8 45, label %151
    i8 43, label %150
  ]

150:                                              ; preds = %147
  br label %151

151:                                              ; preds = %147, %150
  %152 = phi i8 [ 0, %150 ], [ 1, %147 ]
  %153 = getelementptr inbounds i8, i8* %45, i64 2
  %154 = load i8, i8* %153, align 1
  br label %155

155:                                              ; preds = %151, %147
  %156 = phi i8 [ %154, %151 ], [ %149, %147 ]
  %157 = phi i8* [ %153, %151 ], [ %148, %147 ]
  %158 = phi i8 [ %152, %151 ], [ 0, %147 ]
  %159 = icmp eq i8 %156, 0
  br i1 %159, label %295, label %160

160:                                              ; preds = %155, %164
  %161 = phi i8 [ %166, %164 ], [ %156, %155 ]
  %162 = phi i8* [ %165, %164 ], [ %157, %155 ]
  %163 = icmp eq i8 %161, 48
  br i1 %163, label %164, label %168

164:                                              ; preds = %160
  %165 = getelementptr inbounds i8, i8* %162, i64 1
  %166 = load i8, i8* %165, align 1
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %168, label %160

168:                                              ; preds = %164, %160
  %169 = load i8, i8* %162, align 1
  %170 = add i8 %169, -48
  %171 = icmp ugt i8 %170, 9
  br i1 %171, label %185, label %172

172:                                              ; preds = %168, %172
  %173 = phi i8 [ %182, %172 ], [ %169, %168 ]
  %174 = phi i32 [ %179, %172 ], [ 0, %168 ]
  %175 = phi i64 [ %180, %172 ], [ 0, %168 ]
  %176 = sext i8 %173 to i32
  %177 = mul i32 %174, 10
  %178 = add i32 %177, -48
  %179 = add i32 %178, %176
  %180 = add nuw nsw i64 %175, 1
  %181 = getelementptr inbounds i8, i8* %162, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = add i8 %182, -48
  %184 = icmp ugt i8 %183, 9
  br i1 %184, label %185, label %172

185:                                              ; preds = %172, %168
  %186 = phi i64 [ 0, %168 ], [ %180, %172 ]
  %187 = phi i32 [ 0, %168 ], [ %179, %172 ]
  %188 = phi i8 [ %169, %168 ], [ %182, %172 ]
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %295

190:                                              ; preds = %185
  %191 = icmp ugt i64 %186, 9
  br i1 %191, label %192, label %197

192:                                              ; preds = %190
  %193 = icmp ne i64 %186, 10
  %194 = icmp sgt i8 %161, 49
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 1999999998, i32 %187
  br label %197

197:                                              ; preds = %192, %190
  %198 = phi i32 [ %187, %190 ], [ %196, %192 ]
  %199 = icmp eq i8 %158, 0
  %200 = sub nsw i32 0, %198
  %201 = select i1 %199, i32 %198, i32 %200
  store i32 0, i32* %6, align 4
  br label %202

202:                                              ; preds = %197, %143, %142
  %203 = phi i32 [ 0, %142 ], [ %201, %197 ], [ 0, %143 ]
  %204 = phi i8 [ %99, %142 ], [ %11, %197 ], [ %11, %143 ]
  %205 = phi i32 [ %129, %142 ], [ %12, %197 ], [ %12, %143 ]
  %206 = phi i8* [ %111, %142 ], [ %14, %197 ], [ %14, %143 ]
  %207 = phi i8* [ %130, %142 ], [ %15, %197 ], [ %15, %143 ]
  %208 = load i8, i8* %206, align 1
  %209 = icmp eq i8 %208, 48
  %210 = icmp ult i8* %206, %207
  %211 = and i1 %209, %210
  br i1 %211, label %212, label %224

212:                                              ; preds = %202, %222
  %213 = phi i8 [ %223, %222 ], [ 48, %202 ]
  %214 = phi i8* [ %220, %222 ], [ %206, %202 ]
  %215 = phi i32 [ %219, %222 ], [ %205, %202 ]
  switch i8 %213, label %224 [
    i8 46, label %218
    i8 48, label %216
  ]

216:                                              ; preds = %212
  %217 = add nsw i32 %215, -1
  br label %218

218:                                              ; preds = %212, %216
  %219 = phi i32 [ %215, %212 ], [ %217, %216 ]
  %220 = getelementptr inbounds i8, i8* %214, i64 1
  %221 = icmp eq i8* %220, %207
  br i1 %221, label %224, label %222

222:                                              ; preds = %218
  %223 = load i8, i8* %220, align 1
  br label %212

224:                                              ; preds = %212, %218, %202
  %225 = phi i32 [ %205, %202 ], [ %219, %218 ], [ %215, %212 ]
  %226 = phi i8* [ %206, %202 ], [ %207, %218 ], [ %214, %212 ]
  %227 = icmp ne i8* %13, null
  %228 = icmp ult i8* %13, %207
  %229 = and i1 %227, %228
  %230 = ptrtoint i8* %207 to i64
  %231 = ptrtoint i8* %13 to i64
  %232 = sub i64 %230, %231
  %233 = trunc i64 %232 to i32
  %234 = select i1 %229, i32 %233, i32 0
  %235 = sub nsw i32 %203, %234
  %236 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  %238 = icmp sgt i32 %225, %237
  br i1 %238, label %241, label %239

239:                                              ; preds = %224
  %240 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  br label %256

241:                                              ; preds = %224
  %242 = icmp slt i32 %225, 50
  br i1 %242, label %243, label %250

243:                                              ; preds = %241
  %244 = sext i32 %225 to i64
  %245 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i32
  %248 = add nsw i64 %244, -46
  %249 = icmp ult i64 %248, 4
  br i1 %249, label %250, label %256

250:                                              ; preds = %241, %243
  %251 = phi i32 [ %247, %243 ], [ %225, %241 ]
  %252 = sext i32 %251 to i64
  %253 = tail call noalias i8* @uprv_malloc_69(i64 %252) #9
  %254 = icmp eq i8* %253, null
  br i1 %254, label %255, label %256

255:                                              ; preds = %250
  store i32 16, i32* %6, align 4
  br label %306

256:                                              ; preds = %243, %250, %239
  %257 = phi i8* [ %240, %239 ], [ %253, %250 ], [ %7, %243 ]
  %258 = phi i8* [ null, %239 ], [ %253, %250 ], [ null, %243 ]
  %259 = icmp ult i8* %207, %226
  br i1 %259, label %272, label %260

260:                                              ; preds = %256, %268
  %261 = phi i8* [ %269, %268 ], [ %257, %256 ]
  %262 = phi i8* [ %270, %268 ], [ %207, %256 ]
  %263 = load i8, i8* %262, align 1
  %264 = icmp eq i8 %263, 46
  br i1 %264, label %268, label %265

265:                                              ; preds = %260
  %266 = add i8 %263, -48
  store i8 %266, i8* %261, align 1
  %267 = getelementptr inbounds i8, i8* %261, i64 1
  br label %268

268:                                              ; preds = %260, %265
  %269 = phi i8* [ %261, %260 ], [ %267, %265 ]
  %270 = getelementptr inbounds i8, i8* %262, i64 -1
  %271 = icmp ult i8* %270, %226
  br i1 %271, label %272, label %260

272:                                              ; preds = %268, %256
  %273 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %204, i8* %273, align 4
  %274 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %235, i32* %274, align 4
  %275 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %225, i32* %275, align 4
  %276 = load i32, i32* %236, align 4
  %277 = icmp sgt i32 %225, %276
  br i1 %277, label %278, label %279

278:                                              ; preds = %272
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* %2, i8* %257, i32 %225, i32* nonnull %5, i32* nonnull %6)
  br label %291

279:                                              ; preds = %272
  %280 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 2
  %281 = load i32, i32* %280, align 4
  %282 = sub nsw i32 %281, %225
  %283 = icmp sgt i32 %235, %282
  br i1 %283, label %284, label %290

284:                                              ; preds = %279
  %285 = add nsw i32 %235, -1
  %286 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = sub nsw i32 %287, %276
  %289 = icmp sgt i32 %285, %288
  br i1 %289, label %290, label %292

290:                                              ; preds = %279, %284
  store i32 0, i32* %5, align 4
  br label %291

291:                                              ; preds = %278, %290
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %2, i32* nonnull %5, i32* nonnull %6)
  br label %292

292:                                              ; preds = %291, %284
  %293 = icmp eq i8* %258, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %292
  call void @uprv_free_69(i8* nonnull %258) #8
  br label %295

295:                                              ; preds = %185, %155, %105, %102, %98, %136, %127, %292, %294
  %296 = load i32, i32* %6, align 4
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %315, label %298

298:                                              ; preds = %295
  %299 = and i32 %296, 221
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %298
  %302 = and i32 %296, 1073741824
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %306, label %304

304:                                              ; preds = %301
  %305 = and i32 %296, -1073741825
  br label %312

306:                                              ; preds = %255, %47, %145, %301
  %307 = phi i32 [ %296, %301 ], [ 1, %145 ], [ 1, %47 ], [ 16, %255 ]
  %308 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %309 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %309, align 4
  %310 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %310, align 4
  %311 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %311, align 1
  store i8 32, i8* %308, align 4
  br label %312

312:                                              ; preds = %298, %304, %306
  %313 = phi i32 [ %305, %304 ], [ %307, %306 ], [ %296, %298 ]
  %314 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 %313) #8
  br label %315

315:                                              ; preds = %89, %118, %295, %312
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 45, i8* nonnull %7) #8
  ret %struct.decNumber* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber*, %struct.decContext* nocapture readonly, i8* readonly, i32, i32* nocapture, i32* nocapture) unnamed_addr #0 {
  %7 = bitcast %struct.decNumber* %0 to i8*
  %8 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sub i32 %3, %9
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %137

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %14 = icmp eq i8* %13, %2
  br i1 %14, label %131, label %15

15:                                               ; preds = %12
  %16 = icmp sgt i32 %3, 0
  br i1 %16, label %17, label %129

17:                                               ; preds = %15
  %18 = add nsw i32 %3, -1
  %19 = zext i32 %18 to i64
  %20 = add nuw nsw i64 %19, 1
  %21 = icmp ult i64 %20, 32
  br i1 %21, label %116, label %22

22:                                               ; preds = %17
  %23 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %24 = add nsw i32 %3, -1
  %25 = zext i32 %24 to i64
  %26 = add nuw nsw i64 %25, 10
  %27 = getelementptr i8, i8* %7, i64 %26
  %28 = add nuw nsw i64 %25, 1
  %29 = getelementptr i8, i8* %2, i64 %28
  %30 = icmp ult i8* %23, %29
  %31 = icmp ugt i8* %27, %2
  %32 = and i1 %30, %31
  br i1 %32, label %116, label %33

33:                                               ; preds = %22
  %34 = and i64 %20, 8589934560
  %35 = trunc i64 %34 to i32
  %36 = sub i32 %3, %35
  %37 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %34
  %38 = getelementptr i8, i8* %2, i64 %34
  %39 = add nsw i64 %34, -32
  %40 = lshr exact i64 %39, 5
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 3
  %43 = icmp ult i64 %39, 96
  br i1 %43, label %95, label %44

44:                                               ; preds = %33
  %45 = sub nsw i64 %41, %42
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ 0, %44 ], [ %92, %46 ]
  %48 = phi i64 [ %45, %44 ], [ %93, %46 ]
  %49 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %47
  %50 = getelementptr i8, i8* %2, i64 %47
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1, !alias.scope !11
  %53 = getelementptr i8, i8* %50, i64 16
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1, !alias.scope !11
  %56 = bitcast i8* %49 to <16 x i8>*
  store <16 x i8> %52, <16 x i8>* %56, align 1, !alias.scope !14, !noalias !11
  %57 = getelementptr i8, i8* %49, i64 16
  %58 = bitcast i8* %57 to <16 x i8>*
  store <16 x i8> %55, <16 x i8>* %58, align 1, !alias.scope !14, !noalias !11
  %59 = or i64 %47, 32
  %60 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %59
  %61 = getelementptr i8, i8* %2, i64 %59
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1, !alias.scope !11
  %64 = getelementptr i8, i8* %61, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !alias.scope !11
  %67 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %63, <16 x i8>* %67, align 1, !alias.scope !14, !noalias !11
  %68 = getelementptr i8, i8* %60, i64 16
  %69 = bitcast i8* %68 to <16 x i8>*
  store <16 x i8> %66, <16 x i8>* %69, align 1, !alias.scope !14, !noalias !11
  %70 = or i64 %47, 64
  %71 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %70
  %72 = getelementptr i8, i8* %2, i64 %70
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1, !alias.scope !11
  %75 = getelementptr i8, i8* %72, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  %77 = load <16 x i8>, <16 x i8>* %76, align 1, !alias.scope !11
  %78 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %74, <16 x i8>* %78, align 1, !alias.scope !14, !noalias !11
  %79 = getelementptr i8, i8* %71, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  store <16 x i8> %77, <16 x i8>* %80, align 1, !alias.scope !14, !noalias !11
  %81 = or i64 %47, 96
  %82 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %81
  %83 = getelementptr i8, i8* %2, i64 %81
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1, !alias.scope !11
  %86 = getelementptr i8, i8* %83, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1, !alias.scope !11
  %89 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %89, align 1, !alias.scope !14, !noalias !11
  %90 = getelementptr i8, i8* %82, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %91, align 1, !alias.scope !14, !noalias !11
  %92 = add i64 %47, 128
  %93 = add i64 %48, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %46, !llvm.loop !16

95:                                               ; preds = %46, %33
  %96 = phi i64 [ 0, %33 ], [ %92, %46 ]
  %97 = icmp eq i64 %42, 0
  br i1 %97, label %114, label %98

98:                                               ; preds = %95, %98
  %99 = phi i64 [ %111, %98 ], [ %96, %95 ]
  %100 = phi i64 [ %112, %98 ], [ %42, %95 ]
  %101 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %99
  %102 = getelementptr i8, i8* %2, i64 %99
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !11
  %105 = getelementptr i8, i8* %102, i64 16
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !11
  %108 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %108, align 1, !alias.scope !14, !noalias !11
  %109 = getelementptr i8, i8* %101, i64 16
  %110 = bitcast i8* %109 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %110, align 1, !alias.scope !14, !noalias !11
  %111 = add i64 %99, 32
  %112 = add i64 %100, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %98, !llvm.loop !17

114:                                              ; preds = %98, %95
  %115 = icmp eq i64 %20, %34
  br i1 %115, label %129, label %116

116:                                              ; preds = %114, %22, %17
  %117 = phi i32 [ %3, %22 ], [ %3, %17 ], [ %36, %114 ]
  %118 = phi i8* [ %13, %22 ], [ %13, %17 ], [ %37, %114 ]
  %119 = phi i8* [ %2, %22 ], [ %2, %17 ], [ %38, %114 ]
  br label %120

120:                                              ; preds = %116, %120
  %121 = phi i32 [ %127, %120 ], [ %117, %116 ]
  %122 = phi i8* [ %125, %120 ], [ %118, %116 ]
  %123 = phi i8* [ %126, %120 ], [ %119, %116 ]
  %124 = load i8, i8* %123, align 1
  store i8 %124, i8* %122, align 1
  %125 = getelementptr inbounds i8, i8* %122, i64 1
  %126 = getelementptr inbounds i8, i8* %123, i64 1
  %127 = add nsw i32 %121, -1
  %128 = icmp sgt i32 %127, 0
  br i1 %128, label %120, label %129, !llvm.loop !18

129:                                              ; preds = %120, %114, %15
  %130 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %3, i32* %130, align 4
  br label %131

131:                                              ; preds = %12, %129
  %132 = load i32, i32* %4, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %437, label %134

134:                                              ; preds = %131
  %135 = load i32, i32* %5, align 4
  %136 = or i32 %135, 2080
  store i32 %136, i32* %5, align 4
  br label %437

137:                                              ; preds = %6
  %138 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = add nsw i32 %139, %10
  store i32 %140, i32* %138, align 4
  %141 = load i32, i32* %5, align 4
  %142 = or i32 %141, 2048
  store i32 %142, i32* %5, align 4
  %143 = load i32, i32* %4, align 4
  %144 = icmp sgt i32 %143, 1
  br i1 %144, label %145, label %146

145:                                              ; preds = %137
  store i32 1, i32* %4, align 4
  br label %146

146:                                              ; preds = %145, %137
  %147 = phi i32 [ 1, %145 ], [ %143, %137 ]
  %148 = icmp slt i32 %9, 0
  br i1 %148, label %162, label %149

149:                                              ; preds = %146
  %150 = icmp sgt i32 %10, 1
  br i1 %150, label %151, label %218

151:                                              ; preds = %149
  %152 = add i32 %3, -2
  %153 = sub i32 %152, %9
  %154 = zext i32 %153 to i64
  %155 = add nuw nsw i64 %154, 1
  %156 = xor i32 %9, -1
  %157 = add i32 %156, %3
  %158 = and i32 %157, 3
  %159 = icmp ult i32 %153, 3
  br i1 %159, label %196, label %160

160:                                              ; preds = %151
  %161 = sub i32 %157, %158
  br label %184

162:                                              ; preds = %146
  %163 = icmp slt i32 %147, 1
  br i1 %163, label %164, label %178

164:                                              ; preds = %162
  %165 = icmp sgt i32 %3, 0
  br i1 %165, label %166, label %176

166:                                              ; preds = %164, %172
  %167 = phi i32 [ %174, %172 ], [ %3, %164 ]
  %168 = phi i8* [ %173, %172 ], [ %2, %164 ]
  %169 = load i8, i8* %168, align 1
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %172, label %171

171:                                              ; preds = %166
  store i32 1, i32* %4, align 4
  br label %178

172:                                              ; preds = %166
  %173 = getelementptr inbounds i8, i8* %168, i64 1
  %174 = add nsw i32 %167, -1
  %175 = icmp sgt i32 %174, 0
  br i1 %175, label %166, label %176

176:                                              ; preds = %172, %164
  %177 = icmp eq i32 %147, 0
  br i1 %177, label %181, label %178

178:                                              ; preds = %162, %171, %176
  %179 = load i32, i32* %5, align 4
  %180 = or i32 %179, 32
  store i32 %180, i32* %5, align 4
  br label %181

181:                                              ; preds = %176, %178
  %182 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %182, align 1
  %183 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %183, align 4
  br label %437

184:                                              ; preds = %451, %160
  %185 = phi i32 [ %147, %160 ], [ %452, %451 ]
  %186 = phi i8* [ %2, %160 ], [ %453, %451 ]
  %187 = phi i32 [ %161, %160 ], [ %454, %451 ]
  %188 = load i8, i8* %186, align 1
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %191, label %190

190:                                              ; preds = %184
  store i32 1, i32* %4, align 4
  br label %191

191:                                              ; preds = %184, %190
  %192 = phi i32 [ %185, %184 ], [ 1, %190 ]
  %193 = getelementptr inbounds i8, i8* %186, i64 1
  %194 = load i8, i8* %193, align 1
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %439, label %438

196:                                              ; preds = %451, %151
  %197 = phi i32 [ undef, %151 ], [ %452, %451 ]
  %198 = phi i32 [ %147, %151 ], [ %452, %451 ]
  %199 = phi i8* [ %2, %151 ], [ %453, %451 ]
  %200 = icmp eq i32 %158, 0
  br i1 %200, label %213, label %201

201:                                              ; preds = %196, %208
  %202 = phi i32 [ %209, %208 ], [ %198, %196 ]
  %203 = phi i8* [ %210, %208 ], [ %199, %196 ]
  %204 = phi i32 [ %211, %208 ], [ %158, %196 ]
  %205 = load i8, i8* %203, align 1
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %208, label %207

207:                                              ; preds = %201
  store i32 1, i32* %4, align 4
  br label %208

208:                                              ; preds = %207, %201
  %209 = phi i32 [ %202, %201 ], [ 1, %207 ]
  %210 = getelementptr inbounds i8, i8* %203, i64 1
  %211 = add i32 %204, -1
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %201, !llvm.loop !19

213:                                              ; preds = %208, %196
  %214 = phi i32 [ %197, %196 ], [ %209, %208 ]
  %215 = getelementptr i8, i8* %2, i64 %155
  %216 = xor i32 %9, -1
  %217 = add i32 %216, %3
  br label %218

218:                                              ; preds = %213, %149
  %219 = phi i32 [ %147, %149 ], [ %214, %213 ]
  %220 = phi i8* [ %2, %149 ], [ %215, %213 ]
  %221 = phi i32 [ 0, %149 ], [ %217, %213 ]
  %222 = sub nsw i32 %10, %221
  %223 = add nsw i32 %222, -1
  %224 = icmp eq i32 %223, 0
  %225 = load i8, i8* %220, align 1
  br i1 %224, label %226, label %363

226:                                              ; preds = %218
  %227 = icmp ugt i8 %225, 4
  br i1 %227, label %228, label %232

228:                                              ; preds = %226
  %229 = icmp eq i8 %225, 5
  %230 = add nsw i32 %219, 5
  %231 = select i1 %229, i32 %230, i32 7
  br label %234

232:                                              ; preds = %226
  %233 = icmp eq i8 %225, 0
  br i1 %233, label %236, label %234

234:                                              ; preds = %228, %232
  %235 = phi i32 [ 3, %232 ], [ %231, %228 ]
  store i32 %235, i32* %4, align 4
  br label %236

236:                                              ; preds = %234, %232
  %237 = load i32, i32* %8, align 4
  %238 = icmp slt i32 %237, 1
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %240, align 1
  %241 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %241, align 4
  br label %431

242:                                              ; preds = %236
  %243 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %237, i32* %243, align 4
  %244 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %245 = add nsw i32 %237, -1
  %246 = zext i32 %245 to i64
  %247 = add nuw nsw i64 %246, 1
  %248 = icmp ult i64 %247, 32
  br i1 %248, label %350, label %249

249:                                              ; preds = %242
  %250 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %251 = add nsw i32 %237, -1
  %252 = zext i32 %251 to i64
  %253 = add nuw nsw i64 %252, 10
  %254 = getelementptr i8, i8* %7, i64 %253
  %255 = getelementptr i8, i8* %220, i64 1
  %256 = add nuw nsw i64 %252, 2
  %257 = getelementptr i8, i8* %220, i64 %256
  %258 = icmp ult i8* %250, %257
  %259 = icmp ult i8* %255, %254
  %260 = and i1 %258, %259
  br i1 %260, label %350, label %261

261:                                              ; preds = %249
  %262 = and i64 %247, 8589934560
  %263 = getelementptr i8, i8* %220, i64 %262
  %264 = trunc i64 %262 to i32
  %265 = sub i32 %237, %264
  %266 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %262
  %267 = add nsw i64 %262, -32
  %268 = lshr exact i64 %267, 5
  %269 = add nuw nsw i64 %268, 1
  %270 = and i64 %269, 3
  %271 = icmp ult i64 %267, 96
  br i1 %271, label %327, label %272

272:                                              ; preds = %261
  %273 = sub nsw i64 %269, %270
  %274 = getelementptr i8, i8* %220, i64 1
  %275 = getelementptr i8, i8* %220, i64 1
  %276 = getelementptr i8, i8* %220, i64 1
  %277 = getelementptr i8, i8* %220, i64 1
  br label %278

278:                                              ; preds = %278, %272
  %279 = phi i64 [ 0, %272 ], [ %324, %278 ]
  %280 = phi i64 [ %273, %272 ], [ %325, %278 ]
  %281 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %279
  %282 = getelementptr inbounds i8, i8* %274, i64 %279
  %283 = bitcast i8* %282 to <16 x i8>*
  %284 = load <16 x i8>, <16 x i8>* %283, align 1, !alias.scope !20
  %285 = getelementptr inbounds i8, i8* %282, i64 16
  %286 = bitcast i8* %285 to <16 x i8>*
  %287 = load <16 x i8>, <16 x i8>* %286, align 1, !alias.scope !20
  %288 = bitcast i8* %281 to <16 x i8>*
  store <16 x i8> %284, <16 x i8>* %288, align 1, !alias.scope !23, !noalias !20
  %289 = getelementptr i8, i8* %281, i64 16
  %290 = bitcast i8* %289 to <16 x i8>*
  store <16 x i8> %287, <16 x i8>* %290, align 1, !alias.scope !23, !noalias !20
  %291 = or i64 %279, 32
  %292 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %291
  %293 = getelementptr inbounds i8, i8* %275, i64 %291
  %294 = bitcast i8* %293 to <16 x i8>*
  %295 = load <16 x i8>, <16 x i8>* %294, align 1, !alias.scope !20
  %296 = getelementptr inbounds i8, i8* %293, i64 16
  %297 = bitcast i8* %296 to <16 x i8>*
  %298 = load <16 x i8>, <16 x i8>* %297, align 1, !alias.scope !20
  %299 = bitcast i8* %292 to <16 x i8>*
  store <16 x i8> %295, <16 x i8>* %299, align 1, !alias.scope !23, !noalias !20
  %300 = getelementptr i8, i8* %292, i64 16
  %301 = bitcast i8* %300 to <16 x i8>*
  store <16 x i8> %298, <16 x i8>* %301, align 1, !alias.scope !23, !noalias !20
  %302 = or i64 %279, 64
  %303 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %302
  %304 = getelementptr inbounds i8, i8* %276, i64 %302
  %305 = bitcast i8* %304 to <16 x i8>*
  %306 = load <16 x i8>, <16 x i8>* %305, align 1, !alias.scope !20
  %307 = getelementptr inbounds i8, i8* %304, i64 16
  %308 = bitcast i8* %307 to <16 x i8>*
  %309 = load <16 x i8>, <16 x i8>* %308, align 1, !alias.scope !20
  %310 = bitcast i8* %303 to <16 x i8>*
  store <16 x i8> %306, <16 x i8>* %310, align 1, !alias.scope !23, !noalias !20
  %311 = getelementptr i8, i8* %303, i64 16
  %312 = bitcast i8* %311 to <16 x i8>*
  store <16 x i8> %309, <16 x i8>* %312, align 1, !alias.scope !23, !noalias !20
  %313 = or i64 %279, 96
  %314 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %313
  %315 = getelementptr inbounds i8, i8* %277, i64 %313
  %316 = bitcast i8* %315 to <16 x i8>*
  %317 = load <16 x i8>, <16 x i8>* %316, align 1, !alias.scope !20
  %318 = getelementptr inbounds i8, i8* %315, i64 16
  %319 = bitcast i8* %318 to <16 x i8>*
  %320 = load <16 x i8>, <16 x i8>* %319, align 1, !alias.scope !20
  %321 = bitcast i8* %314 to <16 x i8>*
  store <16 x i8> %317, <16 x i8>* %321, align 1, !alias.scope !23, !noalias !20
  %322 = getelementptr i8, i8* %314, i64 16
  %323 = bitcast i8* %322 to <16 x i8>*
  store <16 x i8> %320, <16 x i8>* %323, align 1, !alias.scope !23, !noalias !20
  %324 = add i64 %279, 128
  %325 = add i64 %280, -4
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %278, !llvm.loop !25

327:                                              ; preds = %278, %261
  %328 = phi i64 [ 0, %261 ], [ %324, %278 ]
  %329 = icmp eq i64 %270, 0
  br i1 %329, label %348, label %330

330:                                              ; preds = %327
  %331 = getelementptr i8, i8* %220, i64 1
  br label %332

332:                                              ; preds = %332, %330
  %333 = phi i64 [ %328, %330 ], [ %345, %332 ]
  %334 = phi i64 [ %270, %330 ], [ %346, %332 ]
  %335 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %333
  %336 = getelementptr inbounds i8, i8* %331, i64 %333
  %337 = bitcast i8* %336 to <16 x i8>*
  %338 = load <16 x i8>, <16 x i8>* %337, align 1, !alias.scope !20
  %339 = getelementptr inbounds i8, i8* %336, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  %341 = load <16 x i8>, <16 x i8>* %340, align 1, !alias.scope !20
  %342 = bitcast i8* %335 to <16 x i8>*
  store <16 x i8> %338, <16 x i8>* %342, align 1, !alias.scope !23, !noalias !20
  %343 = getelementptr i8, i8* %335, i64 16
  %344 = bitcast i8* %343 to <16 x i8>*
  store <16 x i8> %341, <16 x i8>* %344, align 1, !alias.scope !23, !noalias !20
  %345 = add i64 %333, 32
  %346 = add i64 %334, -1
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %332, !llvm.loop !26

348:                                              ; preds = %332, %327
  %349 = icmp eq i64 %247, %262
  br i1 %349, label %431, label %350

350:                                              ; preds = %348, %249, %242
  %351 = phi i8* [ %220, %249 ], [ %220, %242 ], [ %263, %348 ]
  %352 = phi i32 [ %237, %249 ], [ %237, %242 ], [ %265, %348 ]
  %353 = phi i8* [ %244, %249 ], [ %244, %242 ], [ %266, %348 ]
  br label %354

354:                                              ; preds = %350, %354
  %355 = phi i8* [ %358, %354 ], [ %351, %350 ]
  %356 = phi i32 [ %361, %354 ], [ %352, %350 ]
  %357 = phi i8* [ %360, %354 ], [ %353, %350 ]
  %358 = getelementptr inbounds i8, i8* %355, i64 1
  %359 = load i8, i8* %358, align 1
  store i8 %359, i8* %357, align 1
  %360 = getelementptr inbounds i8, i8* %357, i64 1
  %361 = add nsw i32 %356, -1
  %362 = icmp sgt i32 %361, 0
  br i1 %362, label %354, label %431, !llvm.loop !27

363:                                              ; preds = %218
  %364 = zext i8 %225 to i32
  %365 = lshr i32 %364, %223
  %366 = zext i32 %223 to i64
  %367 = getelementptr inbounds [5 x i32], [5 x i32]* @_ZL7multies, i64 0, i64 %366
  %368 = load i32, i32* %367, align 4
  %369 = mul i32 %368, %365
  %370 = lshr i32 %369, 17
  %371 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %366
  %372 = load i32, i32* %371, align 4
  %373 = mul i32 %370, %372
  %374 = icmp eq i32 %373, %364
  br i1 %374, label %376, label %375

375:                                              ; preds = %363
  store i32 1, i32* %4, align 4
  br label %376

376:                                              ; preds = %363, %375
  %377 = phi i32 [ %219, %363 ], [ 1, %375 ]
  %378 = mul nuw nsw i32 %370, 6554
  %379 = lshr i32 %378, 16
  %380 = mul nsw i32 %379, -10
  %381 = add nsw i32 %380, %370
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds [10 x i8], [10 x i8]* @_ZL6resmap, i64 0, i64 %382
  %384 = load i8, i8* %383, align 1
  %385 = zext i8 %384 to i32
  %386 = add nsw i32 %377, %385
  store i32 %386, i32* %4, align 4
  %387 = load i32, i32* %8, align 4
  %388 = icmp slt i32 %387, 1
  br i1 %388, label %389, label %392

389:                                              ; preds = %376
  %390 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %390, align 1
  %391 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %391, align 4
  br label %431

392:                                              ; preds = %376
  %393 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %387, i32* %393, align 4
  %394 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %395 = trunc i32 %379 to i8
  store i8 %395, i8* %394, align 1
  %396 = sub i32 1, %222
  %397 = sub i32 %387, %396
  %398 = icmp slt i32 %397, 1
  br i1 %398, label %431, label %399

399:                                              ; preds = %392
  %400 = zext i32 %222 to i64
  %401 = getelementptr inbounds [5 x i32], [5 x i32]* @_ZL7multies, i64 0, i64 %400
  %402 = load i32, i32* %401, align 4
  %403 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %400
  %404 = load i32, i32* %403, align 4
  %405 = zext i32 %396 to i64
  %406 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %405
  %407 = load i32, i32* %406, align 4
  br label %412

408:                                              ; preds = %412
  %409 = trunc i32 %422 to i8
  store i8 %409, i8* %430, align 1
  %410 = sub i32 %428, %396
  %411 = icmp slt i32 %410, 1
  br i1 %411, label %431, label %412

412:                                              ; preds = %399, %408
  %413 = phi i32 [ %397, %399 ], [ %410, %408 ]
  %414 = phi i32 [ %379, %399 ], [ %422, %408 ]
  %415 = phi i8* [ %394, %399 ], [ %430, %408 ]
  %416 = phi i8* [ %220, %399 ], [ %417, %408 ]
  %417 = getelementptr inbounds i8, i8* %416, i64 1
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i32
  %420 = lshr i32 %419, %222
  %421 = mul i32 %420, %402
  %422 = lshr i32 %421, 17
  %423 = mul i32 %422, %404
  %424 = sub i32 %419, %423
  %425 = mul i32 %424, %407
  %426 = add i32 %425, %414
  %427 = trunc i32 %426 to i8
  store i8 %427, i8* %415, align 1
  %428 = sub i32 %413, %222
  %429 = icmp slt i32 %428, 1
  %430 = getelementptr inbounds i8, i8* %415, i64 1
  br i1 %429, label %431, label %408

431:                                              ; preds = %408, %412, %354, %348, %392, %389, %239
  %432 = load i32, i32* %4, align 4
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %437, label %434

434:                                              ; preds = %431
  %435 = load i32, i32* %5, align 4
  %436 = or i32 %435, 32
  store i32 %436, i32* %5, align 4
  br label %437

437:                                              ; preds = %434, %431, %134, %131, %181
  ret void

438:                                              ; preds = %191
  store i32 1, i32* %4, align 4
  br label %439

439:                                              ; preds = %438, %191
  %440 = phi i32 [ %192, %191 ], [ 1, %438 ]
  %441 = getelementptr inbounds i8, i8* %186, i64 2
  %442 = load i8, i8* %441, align 1
  %443 = icmp eq i8 %442, 0
  br i1 %443, label %445, label %444

444:                                              ; preds = %439
  store i32 1, i32* %4, align 4
  br label %445

445:                                              ; preds = %444, %439
  %446 = phi i32 [ %440, %439 ], [ 1, %444 ]
  %447 = getelementptr inbounds i8, i8* %186, i64 3
  %448 = load i8, i8* %447, align 1
  %449 = icmp eq i8 %448, 0
  br i1 %449, label %451, label %450

450:                                              ; preds = %445
  store i32 1, i32* %4, align 4
  br label %451

451:                                              ; preds = %450, %445
  %452 = phi i32 [ %446, %445 ], [ 1, %450 ]
  %453 = getelementptr inbounds i8, i8* %186, i64 4
  %454 = add i32 %187, -4
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %196, label %184
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber*, %struct.decContext* nocapture readonly, i32* nocapture, i32* nocapture) unnamed_addr #3 {
  %5 = alloca %struct.decNumber, align 4
  %6 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sub nsw i32 %7, %9
  %11 = add nsw i32 %10, 1
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, %11
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = load i32, i32* %2, align 4
  br label %38

17:                                               ; preds = %4
  %18 = bitcast %struct.decNumber* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %18) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 -86, i64 12, i1 false)
  %19 = icmp sgt i32 %13, %10
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call fastcc void @_ZL15decSetSubnormalP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %1, i32* %2, i32* %3)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %18) #8
  br label %81

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i64 0, i32 2
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i64 0, i32 1
  %24 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i64 0, i32 0
  store i32 1, i32* %24, align 4
  %25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i64 0, i32 3, i64 0
  store i8 1, i8* %25, align 1
  store i32 %7, i32* %23, align 4
  %26 = call fastcc i32 @_ZL10decComparePK9decNumberS1_h(%struct.decNumber* %0, %struct.decNumber* nonnull %5, i8 zeroext 1)
  %27 = icmp eq i32 %26, -2147483648
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  %29 = load i32, i32* %3, align 4
  %30 = or i32 %29, 16
  store i32 %30, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %18) #8
  br label %81

31:                                               ; preds = %21
  %32 = load i32, i32* %2, align 4
  %33 = icmp slt i32 %32, 0
  %34 = icmp eq i32 %26, 0
  %35 = and i1 %34, %33
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  call fastcc void @_ZL13decApplyRoundP9decNumberP10decContextiPj(%struct.decNumber* %0, %struct.decContext* %1, i32 %32, i32* %3)
  call fastcc void @_ZL15decSetSubnormalP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %1, i32* %2, i32* %3)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %18) #8
  br label %81

37:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %18) #8
  br label %38

38:                                               ; preds = %15, %37
  %39 = phi i32 [ %16, %15 ], [ %32, %37 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  call fastcc void @_ZL13decApplyRoundP9decNumberP10decContextiPj(%struct.decNumber* %0, %struct.decContext* %1, i32 %39, i32* %3)
  br label %42

42:                                               ; preds = %38, %41
  %43 = load i32, i32* %12, align 4
  %44 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = sub nsw i32 %45, %47
  %49 = add nsw i32 %48, 1
  %50 = icmp sgt i32 %43, %49
  br i1 %50, label %51, label %81

51:                                               ; preds = %42
  %52 = load i32, i32* %8, align 4
  %53 = add i32 %45, 1
  %54 = sub i32 %53, %52
  %55 = icmp sgt i32 %43, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %51
  call fastcc void @_ZL14decSetOverflowP9decNumberP10decContextPj(%struct.decNumber* %0, %struct.decContext* %1, i32* %3)
  br label %81

57:                                               ; preds = %51
  %58 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 6
  %59 = load i8, i8* %58, align 4
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %81, label %61

61:                                               ; preds = %57
  %62 = sub nsw i32 %43, %49
  %63 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 0
  %66 = icmp eq i32 %52, 1
  %67 = and i1 %66, %65
  br i1 %67, label %68, label %73

68:                                               ; preds = %61
  %69 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %70 = load i8, i8* %69, align 4
  %71 = and i8 %70, 112
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %68, %61
  %74 = call fastcc i32 @_ZL14decShiftToMostPhii(i8* %63, i32 %52, i32 %62)
  store i32 %74, i32* %8, align 4
  %75 = load i32, i32* %12, align 4
  br label %76

76:                                               ; preds = %73, %68
  %77 = phi i32 [ %75, %73 ], [ %43, %68 ]
  %78 = sub nsw i32 %77, %62
  store i32 %78, i32* %12, align 4
  %79 = load i32, i32* %3, align 4
  %80 = or i32 %79, 1024
  store i32 %80, i32* %3, align 4
  br label %81

81:                                               ; preds = %57, %42, %36, %28, %20, %76, %56
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberAbs_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %4 = alloca %struct.decNumber, align 4
  %5 = alloca i32, align 4
  %6 = bitcast %struct.decNumber* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -86, i64 12, i1 false)
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 0, i32* %5, align 4
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 2
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 1
  %10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 0
  store i32 1, i32* %10, align 4
  %11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 3, i64 0
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %9, align 4
  %14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %15 = load i8, i8* %14, align 4
  %16 = and i8 %15, -128
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* nonnull %4, %struct.decNumber* %1, %struct.decContext* %2, i8 zeroext %16, i32* nonnull %5)
  %17 = load i32, i32* %5, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %35, label %19

19:                                               ; preds = %3
  %20 = and i32 %17, 221
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %19
  %23 = and i32 %17, 1073741824
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  %26 = and i32 %17, -1073741825
  br label %32

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %29 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %30, align 4
  %31 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %31, align 1
  store i8 32, i8* %28, align 4
  br label %32

32:                                               ; preds = %19, %25, %27
  %33 = phi i32 [ %26, %25 ], [ %17, %27 ], [ %17, %19 ]
  %34 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 %33) #8
  br label %35

35:                                               ; preds = %3, %32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber*, %struct.decNumber*, %struct.decNumber*, %struct.decContext* nocapture readonly, i8 zeroext, i32* nocapture) unnamed_addr #3 {
  %7 = bitcast %struct.decNumber* %0 to i8*
  %8 = ptrtoint %struct.decNumber* %1 to i64
  %9 = bitcast %struct.decNumber* %1 to i8*
  %10 = alloca i32, align 4
  %11 = alloca [92 x i8], align 16
  %12 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 -1431655766, i32* %10, align 4
  %13 = getelementptr inbounds [92 x i8], [92 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 92, i1 false)
  %14 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %17 = load i8, i8* %16, align 4
  %18 = zext i8 %17 to i32
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %20 = load i8, i8* %19, align 4
  %21 = xor i8 %20, %4
  %22 = xor i8 %21, %17
  %23 = and i8 %22, -128
  %24 = or i8 %20, %17
  %25 = and i8 %24, 112
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %50, label %27

27:                                               ; preds = %6
  %28 = and i8 %24, 48
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  tail call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* %5)
  br label %731

31:                                               ; preds = %27
  %32 = and i32 %18, 64
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31
  %35 = and i8 %20, 64
  %36 = icmp ne i8 %35, 0
  %37 = icmp ne i8 %23, 0
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = load i32, i32* %5, align 4
  %41 = or i32 %40, 128
  store i32 %41, i32* %5, align 4
  br label %731

42:                                               ; preds = %31, %34
  %43 = phi i8 [ %17, %34 ], [ %21, %31 ]
  %44 = and i8 %43, -128
  %45 = or i8 %44, 64
  %46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %47 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %48, align 4
  %49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %49, align 1
  store i8 %45, i8* %46, align 4
  br label %731

50:                                               ; preds = %6
  %51 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %117

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 1
  %58 = and i32 %18, 112
  %59 = icmp eq i32 %58, 0
  %60 = and i1 %59, %57
  br i1 %60, label %61, label %117

61:                                               ; preds = %54
  %62 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  store i32 0, i32* %10, align 4
  %64 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %20, i8* %64, align 4
  %65 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 0
  %69 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* %3, i8* %68, i32 %70, i32* nonnull %10, i32* %5) #8
  %71 = load i8, i8* %64, align 4
  %72 = xor i8 %71, %4
  store i8 %72, i8* %64, align 4
  %73 = load i32, i32* %67, align 4
  %74 = sub nsw i32 %63, %73
  %75 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %96

78:                                               ; preds = %61
  %79 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 1
  %82 = and i8 %72, 112
  %83 = icmp eq i8 %82, 0
  %84 = and i1 %83, %81
  br i1 %84, label %85, label %96

85:                                               ; preds = %78
  %86 = icmp slt i32 %74, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  store i32 %63, i32* %67, align 4
  br label %88

88:                                               ; preds = %87, %85
  %89 = icmp eq i8 %23, 0
  br i1 %89, label %116, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 3
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 6
  br i1 %93, label %95, label %94

94:                                               ; preds = %90
  store i8 0, i8* %64, align 4
  br label %116

95:                                               ; preds = %90
  store i8 -128, i8* %64, align 4
  br label %116

96:                                               ; preds = %78, %61
  %97 = icmp slt i32 %74, 0
  br i1 %97, label %98, label %116

98:                                               ; preds = %96
  %99 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = sub nsw i32 %100, %74
  %102 = load i32, i32* %14, align 4
  %103 = icmp sgt i32 %101, %102
  br i1 %103, label %104, label %109

104:                                              ; preds = %98
  %105 = sub nsw i32 %100, %102
  %106 = load i32, i32* %5, align 4
  %107 = or i32 %106, 2048
  store i32 %107, i32* %5, align 4
  %108 = load i32, i32* %99, align 4
  br label %109

109:                                              ; preds = %104, %98
  %110 = phi i32 [ %108, %104 ], [ %100, %98 ]
  %111 = phi i32 [ %105, %104 ], [ %74, %98 ]
  %112 = sub nsw i32 0, %111
  %113 = tail call fastcc i32 @_ZL14decShiftToMostPhii(i8* %75, i32 %110, i32 %112)
  store i32 %113, i32* %99, align 4
  %114 = load i32, i32* %67, align 4
  %115 = add nsw i32 %114, %111
  store i32 %115, i32* %67, align 4
  br label %116

116:                                              ; preds = %88, %96, %109, %95, %94
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %10, i32* %5)
  br label %731

117:                                              ; preds = %54, %50
  %118 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %160

121:                                              ; preds = %117
  %122 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 1
  %125 = and i8 %20, 112
  %126 = icmp eq i8 %125, 0
  %127 = and i1 %126, %124
  br i1 %127, label %128, label %160

128:                                              ; preds = %121
  %129 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  store i32 0, i32* %10, align 4
  %131 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %17, i8* %131, align 4
  %132 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %133, i32* %134, align 4
  %135 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* %3, i8* %51, i32 %136, i32* nonnull %10, i32* %5) #8
  %137 = load i32, i32* %134, align 4
  %138 = sub nsw i32 %130, %137
  %139 = icmp slt i32 %138, 0
  br i1 %139, label %140, label %159

140:                                              ; preds = %128
  %141 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = sub nsw i32 %142, %138
  %144 = load i32, i32* %14, align 4
  %145 = icmp sgt i32 %143, %144
  br i1 %145, label %146, label %151

146:                                              ; preds = %140
  %147 = sub nsw i32 %142, %144
  %148 = load i32, i32* %5, align 4
  %149 = or i32 %148, 2048
  store i32 %149, i32* %5, align 4
  %150 = load i32, i32* %141, align 4
  br label %151

151:                                              ; preds = %146, %140
  %152 = phi i32 [ %150, %146 ], [ %142, %140 ]
  %153 = phi i32 [ %147, %146 ], [ %138, %140 ]
  %154 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %155 = sub nsw i32 0, %153
  %156 = tail call fastcc i32 @_ZL14decShiftToMostPhii(i8* %154, i32 %152, i32 %155)
  store i32 %156, i32* %141, align 4
  %157 = load i32, i32* %134, align 4
  %158 = add nsw i32 %157, %153
  store i32 %158, i32* %134, align 4
  br label %159

159:                                              ; preds = %151, %128
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %10, i32* %5)
  br label %731

160:                                              ; preds = %121, %117
  %161 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = sub nsw i32 %162, %164
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %513

167:                                              ; preds = %160
  %168 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp slt i32 %169, 2
  br i1 %170, label %171, label %569

171:                                              ; preds = %167
  %172 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 2
  %173 = load i32, i32* %172, align 4
  %174 = icmp slt i32 %162, %173
  br i1 %174, label %569, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = sub i32 1, %15
  %179 = add i32 %178, %177
  %180 = icmp sgt i32 %162, %179
  %181 = icmp sgt i32 %169, %15
  %182 = or i1 %181, %180
  br i1 %182, label %569, label %183

183:                                              ; preds = %175
  %184 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = icmp sgt i32 %185, %15
  br i1 %186, label %569, label %187

187:                                              ; preds = %183
  %188 = zext i8 %52 to i32
  %189 = icmp eq i8 %23, 0
  %190 = zext i8 %119 to i32
  br i1 %189, label %191, label %342

191:                                              ; preds = %187
  %192 = add nuw nsw i32 %190, %188
  %193 = icmp ult i32 %192, 10
  br i1 %193, label %194, label %569

194:                                              ; preds = %191
  %195 = icmp sgt i32 %185, 0
  br i1 %195, label %201, label %196

196:                                              ; preds = %194
  %197 = sext i32 %185 to i64
  %198 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = icmp slt i32 %192, %199
  br i1 %200, label %201, label %569

201:                                              ; preds = %196, %194
  %202 = icmp eq %struct.decNumber* %0, %1
  br i1 %202, label %339, label %203

203:                                              ; preds = %201
  %204 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %17, i8* %204, align 4
  %205 = load i32, i32* %163, align 4
  %206 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %205, i32* %206, align 4
  %207 = load i32, i32* %184, align 4
  %208 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %207, i32* %208, align 4
  %209 = load i8, i8* %51, align 1
  %210 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %209, i8* %210, align 1
  %211 = load i32, i32* %184, align 4
  %212 = icmp sgt i32 %211, 1
  br i1 %212, label %213, label %339

213:                                              ; preds = %203
  %214 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %215 = icmp slt i32 %211, 50
  %216 = sext i32 %211 to i64
  br i1 %215, label %217, label %221

217:                                              ; preds = %213
  %218 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %216
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  br label %221

221:                                              ; preds = %217, %213
  %222 = phi i64 [ %220, %217 ], [ %216, %213 ]
  %223 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %222
  %224 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %225 = add nsw i64 %222, 9
  %226 = getelementptr i8, i8* %9, i64 %225
  %227 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %228 = icmp ugt i8* %226, %227
  %229 = select i1 %228, i8* %226, i8* %227
  %230 = sub i64 -10, %8
  %231 = getelementptr i8, i8* %229, i64 %230
  %232 = ptrtoint i8* %231 to i64
  %233 = icmp ult i8* %231, inttoptr (i64 32 to i8*)
  br i1 %233, label %329, label %234

234:                                              ; preds = %221
  %235 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %236 = add nsw i64 %222, 9
  %237 = getelementptr i8, i8* %9, i64 %236
  %238 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %239 = icmp ugt i8* %237, %238
  %240 = select i1 %239, i8* %237, i8* %238
  %241 = ptrtoint i8* %240 to i64
  %242 = sub i64 %241, %8
  %243 = getelementptr i8, i8* %7, i64 %242
  %244 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %245 = icmp ult i8* %235, %240
  %246 = icmp ult i8* %244, %243
  %247 = and i1 %245, %246
  br i1 %247, label %329, label %248

248:                                              ; preds = %234
  %249 = and i64 %232, -32
  %250 = getelementptr i8, i8* %214, i64 %249
  %251 = getelementptr i8, i8* %224, i64 %249
  %252 = add i64 %249, -32
  %253 = lshr exact i64 %252, 5
  %254 = add nuw nsw i64 %253, 1
  %255 = and i64 %254, 3
  %256 = icmp ult i64 %252, 96
  br i1 %256, label %308, label %257

257:                                              ; preds = %248
  %258 = sub nsw i64 %254, %255
  br label %259

259:                                              ; preds = %259, %257
  %260 = phi i64 [ 0, %257 ], [ %305, %259 ]
  %261 = phi i64 [ %258, %257 ], [ %306, %259 ]
  %262 = getelementptr i8, i8* %214, i64 %260
  %263 = getelementptr i8, i8* %224, i64 %260
  %264 = bitcast i8* %263 to <16 x i8>*
  %265 = load <16 x i8>, <16 x i8>* %264, align 1, !alias.scope !28
  %266 = getelementptr i8, i8* %263, i64 16
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !alias.scope !28
  %269 = bitcast i8* %262 to <16 x i8>*
  store <16 x i8> %265, <16 x i8>* %269, align 1, !alias.scope !31, !noalias !28
  %270 = getelementptr i8, i8* %262, i64 16
  %271 = bitcast i8* %270 to <16 x i8>*
  store <16 x i8> %268, <16 x i8>* %271, align 1, !alias.scope !31, !noalias !28
  %272 = or i64 %260, 32
  %273 = getelementptr i8, i8* %214, i64 %272
  %274 = getelementptr i8, i8* %224, i64 %272
  %275 = bitcast i8* %274 to <16 x i8>*
  %276 = load <16 x i8>, <16 x i8>* %275, align 1, !alias.scope !28
  %277 = getelementptr i8, i8* %274, i64 16
  %278 = bitcast i8* %277 to <16 x i8>*
  %279 = load <16 x i8>, <16 x i8>* %278, align 1, !alias.scope !28
  %280 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %276, <16 x i8>* %280, align 1, !alias.scope !31, !noalias !28
  %281 = getelementptr i8, i8* %273, i64 16
  %282 = bitcast i8* %281 to <16 x i8>*
  store <16 x i8> %279, <16 x i8>* %282, align 1, !alias.scope !31, !noalias !28
  %283 = or i64 %260, 64
  %284 = getelementptr i8, i8* %214, i64 %283
  %285 = getelementptr i8, i8* %224, i64 %283
  %286 = bitcast i8* %285 to <16 x i8>*
  %287 = load <16 x i8>, <16 x i8>* %286, align 1, !alias.scope !28
  %288 = getelementptr i8, i8* %285, i64 16
  %289 = bitcast i8* %288 to <16 x i8>*
  %290 = load <16 x i8>, <16 x i8>* %289, align 1, !alias.scope !28
  %291 = bitcast i8* %284 to <16 x i8>*
  store <16 x i8> %287, <16 x i8>* %291, align 1, !alias.scope !31, !noalias !28
  %292 = getelementptr i8, i8* %284, i64 16
  %293 = bitcast i8* %292 to <16 x i8>*
  store <16 x i8> %290, <16 x i8>* %293, align 1, !alias.scope !31, !noalias !28
  %294 = or i64 %260, 96
  %295 = getelementptr i8, i8* %214, i64 %294
  %296 = getelementptr i8, i8* %224, i64 %294
  %297 = bitcast i8* %296 to <16 x i8>*
  %298 = load <16 x i8>, <16 x i8>* %297, align 1, !alias.scope !28
  %299 = getelementptr i8, i8* %296, i64 16
  %300 = bitcast i8* %299 to <16 x i8>*
  %301 = load <16 x i8>, <16 x i8>* %300, align 1, !alias.scope !28
  %302 = bitcast i8* %295 to <16 x i8>*
  store <16 x i8> %298, <16 x i8>* %302, align 1, !alias.scope !31, !noalias !28
  %303 = getelementptr i8, i8* %295, i64 16
  %304 = bitcast i8* %303 to <16 x i8>*
  store <16 x i8> %301, <16 x i8>* %304, align 1, !alias.scope !31, !noalias !28
  %305 = add i64 %260, 128
  %306 = add i64 %261, -4
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %259, !llvm.loop !33

308:                                              ; preds = %259, %248
  %309 = phi i64 [ 0, %248 ], [ %305, %259 ]
  %310 = icmp eq i64 %255, 0
  br i1 %310, label %327, label %311

311:                                              ; preds = %308, %311
  %312 = phi i64 [ %324, %311 ], [ %309, %308 ]
  %313 = phi i64 [ %325, %311 ], [ %255, %308 ]
  %314 = getelementptr i8, i8* %214, i64 %312
  %315 = getelementptr i8, i8* %224, i64 %312
  %316 = bitcast i8* %315 to <16 x i8>*
  %317 = load <16 x i8>, <16 x i8>* %316, align 1, !alias.scope !28
  %318 = getelementptr i8, i8* %315, i64 16
  %319 = bitcast i8* %318 to <16 x i8>*
  %320 = load <16 x i8>, <16 x i8>* %319, align 1, !alias.scope !28
  %321 = bitcast i8* %314 to <16 x i8>*
  store <16 x i8> %317, <16 x i8>* %321, align 1, !alias.scope !31, !noalias !28
  %322 = getelementptr i8, i8* %314, i64 16
  %323 = bitcast i8* %322 to <16 x i8>*
  store <16 x i8> %320, <16 x i8>* %323, align 1, !alias.scope !31, !noalias !28
  %324 = add i64 %312, 32
  %325 = add i64 %313, -1
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %311, !llvm.loop !34

327:                                              ; preds = %311, %308
  %328 = icmp eq i64 %249, %232
  br i1 %328, label %339, label %329

329:                                              ; preds = %327, %234, %221
  %330 = phi i8* [ %214, %234 ], [ %214, %221 ], [ %250, %327 ]
  %331 = phi i8* [ %224, %234 ], [ %224, %221 ], [ %251, %327 ]
  br label %332

332:                                              ; preds = %329, %332
  %333 = phi i8* [ %337, %332 ], [ %330, %329 ]
  %334 = phi i8* [ %336, %332 ], [ %331, %329 ]
  %335 = load i8, i8* %334, align 1
  store i8 %335, i8* %333, align 1
  %336 = getelementptr inbounds i8, i8* %334, i64 1
  %337 = getelementptr inbounds i8, i8* %333, i64 1
  %338 = icmp ult i8* %336, %223
  br i1 %338, label %332, label %339, !llvm.loop !35

339:                                              ; preds = %332, %327, %203, %201
  %340 = trunc i32 %192 to i8
  %341 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %340, i8* %341, align 1
  br label %731

342:                                              ; preds = %187
  %343 = sub nsw i32 %188, %190
  %344 = icmp sgt i32 %343, 0
  br i1 %344, label %345, label %569

345:                                              ; preds = %342
  %346 = icmp eq %struct.decNumber* %0, %1
  br i1 %346, label %483, label %347

347:                                              ; preds = %345
  %348 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %17, i8* %348, align 4
  %349 = load i32, i32* %163, align 4
  %350 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %349, i32* %350, align 4
  %351 = load i32, i32* %184, align 4
  %352 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %351, i32* %352, align 4
  %353 = load i8, i8* %51, align 1
  %354 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %353, i8* %354, align 1
  %355 = load i32, i32* %184, align 4
  %356 = icmp sgt i32 %355, 1
  br i1 %356, label %357, label %483

357:                                              ; preds = %347
  %358 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %359 = icmp slt i32 %355, 50
  %360 = sext i32 %355 to i64
  br i1 %359, label %361, label %365

361:                                              ; preds = %357
  %362 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %360
  %363 = load i8, i8* %362, align 1
  %364 = zext i8 %363 to i64
  br label %365

365:                                              ; preds = %361, %357
  %366 = phi i64 [ %364, %361 ], [ %360, %357 ]
  %367 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %366
  %368 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %369 = add nsw i64 %366, 9
  %370 = getelementptr i8, i8* %9, i64 %369
  %371 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %372 = icmp ugt i8* %370, %371
  %373 = select i1 %372, i8* %370, i8* %371
  %374 = sub i64 -10, %8
  %375 = getelementptr i8, i8* %373, i64 %374
  %376 = ptrtoint i8* %375 to i64
  %377 = icmp ult i8* %375, inttoptr (i64 32 to i8*)
  br i1 %377, label %473, label %378

378:                                              ; preds = %365
  %379 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %380 = add nsw i64 %366, 9
  %381 = getelementptr i8, i8* %9, i64 %380
  %382 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %383 = icmp ugt i8* %381, %382
  %384 = select i1 %383, i8* %381, i8* %382
  %385 = ptrtoint i8* %384 to i64
  %386 = sub i64 %385, %8
  %387 = getelementptr i8, i8* %7, i64 %386
  %388 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %389 = icmp ult i8* %379, %384
  %390 = icmp ult i8* %388, %387
  %391 = and i1 %389, %390
  br i1 %391, label %473, label %392

392:                                              ; preds = %378
  %393 = and i64 %376, -32
  %394 = getelementptr i8, i8* %358, i64 %393
  %395 = getelementptr i8, i8* %368, i64 %393
  %396 = add i64 %393, -32
  %397 = lshr exact i64 %396, 5
  %398 = add nuw nsw i64 %397, 1
  %399 = and i64 %398, 3
  %400 = icmp ult i64 %396, 96
  br i1 %400, label %452, label %401

401:                                              ; preds = %392
  %402 = sub nsw i64 %398, %399
  br label %403

403:                                              ; preds = %403, %401
  %404 = phi i64 [ 0, %401 ], [ %449, %403 ]
  %405 = phi i64 [ %402, %401 ], [ %450, %403 ]
  %406 = getelementptr i8, i8* %358, i64 %404
  %407 = getelementptr i8, i8* %368, i64 %404
  %408 = bitcast i8* %407 to <16 x i8>*
  %409 = load <16 x i8>, <16 x i8>* %408, align 1, !alias.scope !36
  %410 = getelementptr i8, i8* %407, i64 16
  %411 = bitcast i8* %410 to <16 x i8>*
  %412 = load <16 x i8>, <16 x i8>* %411, align 1, !alias.scope !36
  %413 = bitcast i8* %406 to <16 x i8>*
  store <16 x i8> %409, <16 x i8>* %413, align 1, !alias.scope !39, !noalias !36
  %414 = getelementptr i8, i8* %406, i64 16
  %415 = bitcast i8* %414 to <16 x i8>*
  store <16 x i8> %412, <16 x i8>* %415, align 1, !alias.scope !39, !noalias !36
  %416 = or i64 %404, 32
  %417 = getelementptr i8, i8* %358, i64 %416
  %418 = getelementptr i8, i8* %368, i64 %416
  %419 = bitcast i8* %418 to <16 x i8>*
  %420 = load <16 x i8>, <16 x i8>* %419, align 1, !alias.scope !36
  %421 = getelementptr i8, i8* %418, i64 16
  %422 = bitcast i8* %421 to <16 x i8>*
  %423 = load <16 x i8>, <16 x i8>* %422, align 1, !alias.scope !36
  %424 = bitcast i8* %417 to <16 x i8>*
  store <16 x i8> %420, <16 x i8>* %424, align 1, !alias.scope !39, !noalias !36
  %425 = getelementptr i8, i8* %417, i64 16
  %426 = bitcast i8* %425 to <16 x i8>*
  store <16 x i8> %423, <16 x i8>* %426, align 1, !alias.scope !39, !noalias !36
  %427 = or i64 %404, 64
  %428 = getelementptr i8, i8* %358, i64 %427
  %429 = getelementptr i8, i8* %368, i64 %427
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !36
  %432 = getelementptr i8, i8* %429, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  %434 = load <16 x i8>, <16 x i8>* %433, align 1, !alias.scope !36
  %435 = bitcast i8* %428 to <16 x i8>*
  store <16 x i8> %431, <16 x i8>* %435, align 1, !alias.scope !39, !noalias !36
  %436 = getelementptr i8, i8* %428, i64 16
  %437 = bitcast i8* %436 to <16 x i8>*
  store <16 x i8> %434, <16 x i8>* %437, align 1, !alias.scope !39, !noalias !36
  %438 = or i64 %404, 96
  %439 = getelementptr i8, i8* %358, i64 %438
  %440 = getelementptr i8, i8* %368, i64 %438
  %441 = bitcast i8* %440 to <16 x i8>*
  %442 = load <16 x i8>, <16 x i8>* %441, align 1, !alias.scope !36
  %443 = getelementptr i8, i8* %440, i64 16
  %444 = bitcast i8* %443 to <16 x i8>*
  %445 = load <16 x i8>, <16 x i8>* %444, align 1, !alias.scope !36
  %446 = bitcast i8* %439 to <16 x i8>*
  store <16 x i8> %442, <16 x i8>* %446, align 1, !alias.scope !39, !noalias !36
  %447 = getelementptr i8, i8* %439, i64 16
  %448 = bitcast i8* %447 to <16 x i8>*
  store <16 x i8> %445, <16 x i8>* %448, align 1, !alias.scope !39, !noalias !36
  %449 = add i64 %404, 128
  %450 = add i64 %405, -4
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %452, label %403, !llvm.loop !41

452:                                              ; preds = %403, %392
  %453 = phi i64 [ 0, %392 ], [ %449, %403 ]
  %454 = icmp eq i64 %399, 0
  br i1 %454, label %471, label %455

455:                                              ; preds = %452, %455
  %456 = phi i64 [ %468, %455 ], [ %453, %452 ]
  %457 = phi i64 [ %469, %455 ], [ %399, %452 ]
  %458 = getelementptr i8, i8* %358, i64 %456
  %459 = getelementptr i8, i8* %368, i64 %456
  %460 = bitcast i8* %459 to <16 x i8>*
  %461 = load <16 x i8>, <16 x i8>* %460, align 1, !alias.scope !36
  %462 = getelementptr i8, i8* %459, i64 16
  %463 = bitcast i8* %462 to <16 x i8>*
  %464 = load <16 x i8>, <16 x i8>* %463, align 1, !alias.scope !36
  %465 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %461, <16 x i8>* %465, align 1, !alias.scope !39, !noalias !36
  %466 = getelementptr i8, i8* %458, i64 16
  %467 = bitcast i8* %466 to <16 x i8>*
  store <16 x i8> %464, <16 x i8>* %467, align 1, !alias.scope !39, !noalias !36
  %468 = add i64 %456, 32
  %469 = add i64 %457, -1
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %471, label %455, !llvm.loop !42

471:                                              ; preds = %455, %452
  %472 = icmp eq i64 %393, %376
  br i1 %472, label %483, label %473

473:                                              ; preds = %471, %378, %365
  %474 = phi i8* [ %358, %378 ], [ %358, %365 ], [ %394, %471 ]
  %475 = phi i8* [ %368, %378 ], [ %368, %365 ], [ %395, %471 ]
  br label %476

476:                                              ; preds = %473, %476
  %477 = phi i8* [ %481, %476 ], [ %474, %473 ]
  %478 = phi i8* [ %480, %476 ], [ %475, %473 ]
  %479 = load i8, i8* %478, align 1
  store i8 %479, i8* %477, align 1
  %480 = getelementptr inbounds i8, i8* %478, i64 1
  %481 = getelementptr inbounds i8, i8* %477, i64 1
  %482 = icmp ult i8* %480, %367
  br i1 %482, label %476, label %483, !llvm.loop !43

483:                                              ; preds = %476, %471, %347, %345
  %484 = trunc i32 %343 to i8
  %485 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %484, i8* %485, align 1
  %486 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %487 = load i32, i32* %486, align 4
  %488 = icmp slt i32 %487, 50
  br i1 %488, label %489, label %495

489:                                              ; preds = %483
  %490 = sext i32 %487 to i64
  %491 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %490
  %492 = load i8, i8* %491, align 1
  %493 = zext i8 %492 to i32
  %494 = icmp eq i32 %487, 0
  br i1 %494, label %511, label %495

495:                                              ; preds = %483, %489
  %496 = phi i32 [ %493, %489 ], [ %487, %483 ]
  %497 = add nsw i32 %496, -1
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %498
  br label %500

500:                                              ; preds = %507, %495
  %501 = phi i32 [ %508, %507 ], [ %496, %495 ]
  %502 = phi i8* [ %509, %507 ], [ %499, %495 ]
  %503 = load i8, i8* %502, align 1
  %504 = icmp ne i8 %503, 0
  %505 = icmp eq i32 %501, 1
  %506 = or i1 %505, %504
  br i1 %506, label %511, label %507

507:                                              ; preds = %500
  %508 = add nsw i32 %501, -1
  %509 = getelementptr inbounds i8, i8* %502, i64 -1
  %510 = icmp ult i8* %509, %485
  br i1 %510, label %511, label %500

511:                                              ; preds = %500, %507, %489
  %512 = phi i32 [ 0, %489 ], [ %501, %500 ], [ %508, %507 ]
  store i32 %512, i32* %486, align 4
  br label %731

513:                                              ; preds = %160
  %514 = icmp slt i32 %165, 0
  %515 = sub nsw i32 0, %165
  %516 = select i1 %514, i8 %21, i8 %17
  %517 = select i1 %514, i32 %515, i32 %165
  %518 = select i1 %514, %struct.decNumber* %1, %struct.decNumber* %2
  %519 = select i1 %514, %struct.decNumber* %2, %struct.decNumber* %1
  %520 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %518, i64 0, i32 0
  %521 = load i32, i32* %520, align 4
  %522 = add nsw i32 %521, %517
  %523 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %519, i64 0, i32 0
  %524 = load i32, i32* %523, align 4
  %525 = add i32 %15, 1
  %526 = add i32 %525, %524
  %527 = icmp sgt i32 %522, %526
  br i1 %527, label %528, label %553

528:                                              ; preds = %513
  %529 = sub nsw i32 %15, %521
  %530 = icmp eq i8 %23, 0
  %531 = select i1 %530, i32 1, i32 -1
  store i32 %531, i32* %10, align 4
  %532 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %518, i64 0, i32 2
  %533 = load i8, i8* %532, align 4
  %534 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %533, i8* %534, align 4
  %535 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %518, i64 0, i32 1
  %536 = load i32, i32* %535, align 4
  %537 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %536, i32* %537, align 4
  %538 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %518, i64 0, i32 3, i64 0
  %539 = load i32, i32* %520, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* %3, i8* %538, i32 %539, i32* nonnull %10, i32* %5) #8
  %540 = icmp sgt i32 %529, 0
  br i1 %540, label %541, label %548

541:                                              ; preds = %528
  %542 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %543 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %544 = load i32, i32* %543, align 4
  %545 = tail call fastcc i32 @_ZL14decShiftToMostPhii(i8* %542, i32 %544, i32 %529)
  store i32 %545, i32* %543, align 4
  %546 = load i32, i32* %537, align 4
  %547 = sub nsw i32 %546, %529
  store i32 %547, i32* %537, align 4
  br label %548

548:                                              ; preds = %541, %528
  %549 = icmp sgt i32 %165, -1
  br i1 %549, label %550, label %568

550:                                              ; preds = %548
  %551 = load i8, i8* %534, align 4
  %552 = xor i8 %551, %4
  store i8 %552, i8* %534, align 4
  br label %568

553:                                              ; preds = %513
  %554 = add nuw nsw i32 %517, 1
  %555 = icmp ult i32 %554, 50
  br i1 %555, label %556, label %561

556:                                              ; preds = %553
  %557 = zext i32 %554 to i64
  %558 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %557
  %559 = load i8, i8* %558, align 1
  %560 = zext i8 %559 to i32
  br label %561

561:                                              ; preds = %556, %553
  %562 = phi i32 [ %560, %556 ], [ %554, %553 ]
  %563 = add nsw i32 %562, -1
  %564 = sub nsw i32 %517, %563
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %565
  %567 = load i32, i32* %566, align 4
  br label %569

568:                                              ; preds = %550, %548
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %10, i32* %5)
  br label %731

569:                                              ; preds = %167, %171, %175, %183, %196, %191, %342, %561
  %570 = phi i32 [ %521, %561 ], [ %169, %342 ], [ %169, %191 ], [ %169, %196 ], [ %169, %183 ], [ %169, %175 ], [ %169, %171 ], [ %169, %167 ]
  %571 = phi i32 [ %563, %561 ], [ 0, %342 ], [ 0, %191 ], [ 0, %196 ], [ 0, %183 ], [ 0, %175 ], [ 0, %171 ], [ 0, %167 ]
  %572 = phi i32 [ %567, %561 ], [ 1, %342 ], [ 1, %191 ], [ 1, %196 ], [ 1, %183 ], [ 1, %175 ], [ 1, %171 ], [ 1, %167 ]
  %573 = phi i8 [ %516, %561 ], [ %17, %342 ], [ %17, %191 ], [ %17, %196 ], [ %17, %183 ], [ %17, %175 ], [ %17, %171 ], [ %17, %167 ]
  %574 = phi i32 [ %517, %561 ], [ 0, %342 ], [ 0, %191 ], [ 0, %196 ], [ 0, %183 ], [ 0, %175 ], [ 0, %171 ], [ 0, %167 ]
  %575 = phi %struct.decNumber* [ %518, %561 ], [ %2, %342 ], [ %2, %191 ], [ %2, %196 ], [ %2, %183 ], [ %2, %175 ], [ %2, %171 ], [ %2, %167 ]
  %576 = phi %struct.decNumber* [ %519, %561 ], [ %1, %342 ], [ %1, %191 ], [ %1, %196 ], [ %1, %183 ], [ %1, %175 ], [ %1, %171 ], [ %1, %167 ]
  %577 = icmp ne i8 %23, 0
  %578 = sub nsw i32 0, %572
  %579 = select i1 %577, i32 %578, i32 %572
  %580 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %575, i64 0, i32 0
  %581 = add nsw i32 %570, %574
  %582 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %576, i64 0, i32 0
  %583 = load i32, i32* %582, align 4
  %584 = icmp sgt i32 %583, %581
  %585 = select i1 %584, i32 %583, i32 %581
  %586 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %587 = icmp slt i32 %585, %15
  br i1 %587, label %588, label %592

588:                                              ; preds = %569
  %589 = icmp eq %struct.decNumber* %575, %0
  %590 = icmp sgt i32 %571, 0
  %591 = and i1 %590, %589
  br i1 %591, label %592, label %610

592:                                              ; preds = %569, %588
  %593 = icmp slt i32 %585, 50
  br i1 %593, label %594, label %599

594:                                              ; preds = %592
  %595 = sext i32 %585 to i64
  %596 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %595
  %597 = load i8, i8* %596, align 1
  %598 = zext i8 %597 to i32
  br label %599

599:                                              ; preds = %592, %594
  %600 = phi i32 [ %598, %594 ], [ %585, %592 ]
  %601 = icmp ugt i32 %600, 91
  br i1 %601, label %602, label %610

602:                                              ; preds = %599
  %603 = add nuw nsw i32 %600, 1
  %604 = sext i32 %603 to i64
  %605 = tail call noalias i8* @uprv_malloc_69(i64 %604) #9
  %606 = icmp eq i8* %605, null
  br i1 %606, label %607, label %610

607:                                              ; preds = %602
  %608 = load i32, i32* %5, align 4
  %609 = or i32 %608, 16
  store i32 %609, i32* %5, align 4
  br label %731

610:                                              ; preds = %599, %602, %588
  %611 = phi i8* [ %586, %588 ], [ %605, %602 ], [ %13, %599 ]
  %612 = phi i8* [ null, %588 ], [ %605, %602 ], [ null, %599 ]
  %613 = and i8 %573, -128
  %614 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %613, i8* %614, align 4
  %615 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %576, i64 0, i32 1
  %616 = load i32, i32* %615, align 4
  %617 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %616, i32* %617, align 4
  %618 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %576, i64 0, i32 3, i64 0
  %619 = load i32, i32* %582, align 4
  %620 = icmp slt i32 %619, 50
  br i1 %620, label %621, label %626

621:                                              ; preds = %610
  %622 = sext i32 %619 to i64
  %623 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %622
  %624 = load i8, i8* %623, align 1
  %625 = zext i8 %624 to i32
  br label %626

626:                                              ; preds = %610, %621
  %627 = phi i32 [ %625, %621 ], [ %619, %610 ]
  %628 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %575, i64 0, i32 3, i64 0
  %629 = load i32, i32* %580, align 4
  %630 = icmp slt i32 %629, 50
  br i1 %630, label %631, label %636

631:                                              ; preds = %626
  %632 = sext i32 %629 to i64
  %633 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %632
  %634 = load i8, i8* %633, align 1
  %635 = zext i8 %634 to i32
  br label %636

636:                                              ; preds = %626, %631
  %637 = phi i32 [ %635, %631 ], [ %629, %626 ]
  %638 = call fastcc i32 @_ZL13decUnitAddSubPKhiS0_iiPhi(i8* %618, i32 %627, i8* %628, i32 %637, i32 %571, i8* %611, i32 %579)
  %639 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %638, i32* %639, align 4
  %640 = icmp slt i32 %638, 0
  br i1 %640, label %641, label %645

641:                                              ; preds = %636
  %642 = sub nsw i32 0, %638
  store i32 %642, i32* %639, align 4
  %643 = load i8, i8* %614, align 4
  %644 = xor i8 %643, -128
  store i8 %644, i8* %614, align 4
  br label %645

645:                                              ; preds = %641, %636
  %646 = phi i32 [ %642, %641 ], [ %638, %636 ]
  store i32 0, i32* %10, align 4
  %647 = icmp eq i8* %611, %586
  br i1 %647, label %679, label %648

648:                                              ; preds = %645
  %649 = icmp sgt i32 %646, %15
  br i1 %649, label %650, label %676

650:                                              ; preds = %648
  %651 = icmp slt i32 %646, 50
  br i1 %651, label %652, label %658

652:                                              ; preds = %650
  %653 = sext i32 %646 to i64
  %654 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %653
  %655 = load i8, i8* %654, align 1
  %656 = zext i8 %655 to i32
  %657 = icmp eq i32 %646, 0
  br i1 %657, label %674, label %658

658:                                              ; preds = %650, %652
  %659 = phi i32 [ %656, %652 ], [ %646, %650 ]
  %660 = add nsw i32 %659, -1
  %661 = sext i32 %660 to i64
  %662 = getelementptr inbounds i8, i8* %611, i64 %661
  br label %663

663:                                              ; preds = %670, %658
  %664 = phi i32 [ %671, %670 ], [ %659, %658 ]
  %665 = phi i8* [ %672, %670 ], [ %662, %658 ]
  %666 = load i8, i8* %665, align 1
  %667 = icmp ne i8 %666, 0
  %668 = icmp eq i32 %664, 1
  %669 = or i1 %668, %667
  br i1 %669, label %674, label %670

670:                                              ; preds = %663
  %671 = add nsw i32 %664, -1
  %672 = getelementptr inbounds i8, i8* %665, i64 -1
  %673 = icmp ult i8* %672, %611
  br i1 %673, label %674, label %663

674:                                              ; preds = %663, %670, %652
  %675 = phi i32 [ 0, %652 ], [ %664, %663 ], [ %671, %670 ]
  store i32 %675, i32* %639, align 4
  br label %676

676:                                              ; preds = %674, %648
  %677 = phi i32 [ %675, %674 ], [ %646, %648 ]
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* %3, i8* %611, i32 %677, i32* nonnull %10, i32* %5)
  %678 = load i32, i32* %639, align 4
  br label %679

679:                                              ; preds = %645, %676
  %680 = phi i32 [ %646, %645 ], [ %678, %676 ]
  %681 = icmp slt i32 %680, 50
  br i1 %681, label %682, label %688

682:                                              ; preds = %679
  %683 = sext i32 %680 to i64
  %684 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %683
  %685 = load i8, i8* %684, align 1
  %686 = zext i8 %685 to i32
  %687 = icmp eq i32 %680, 0
  br i1 %687, label %704, label %688

688:                                              ; preds = %679, %682
  %689 = phi i32 [ %686, %682 ], [ %680, %679 ]
  %690 = add nsw i32 %689, -1
  %691 = sext i32 %690 to i64
  %692 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %691
  br label %693

693:                                              ; preds = %700, %688
  %694 = phi i32 [ %701, %700 ], [ %689, %688 ]
  %695 = phi i8* [ %702, %700 ], [ %692, %688 ]
  %696 = load i8, i8* %695, align 1
  %697 = icmp ne i8 %696, 0
  %698 = icmp eq i32 %694, 1
  %699 = or i1 %698, %697
  br i1 %699, label %704, label %700

700:                                              ; preds = %693
  %701 = add nsw i32 %694, -1
  %702 = getelementptr inbounds i8, i8* %695, i64 -1
  %703 = icmp ult i8* %702, %586
  br i1 %703, label %704, label %693

704:                                              ; preds = %693, %700, %682
  %705 = phi i32 [ 0, %682 ], [ %694, %693 ], [ %701, %700 ]
  store i32 %705, i32* %639, align 4
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %10, i32* %5)
  %706 = load i8, i8* %586, align 1
  %707 = icmp eq i8 %706, 0
  br i1 %707, label %708, label %728

708:                                              ; preds = %704
  %709 = load i32, i32* %639, align 4
  %710 = icmp eq i32 %709, 1
  br i1 %710, label %711, label %728

711:                                              ; preds = %708
  %712 = load i8, i8* %614, align 4
  %713 = and i8 %712, 112
  %714 = icmp eq i8 %713, 0
  %715 = and i1 %577, %714
  br i1 %715, label %716, label %728

716:                                              ; preds = %711
  %717 = load i32, i32* %5, align 4
  %718 = and i32 %717, 32
  %719 = icmp eq i32 %718, 0
  br i1 %719, label %720, label %728

720:                                              ; preds = %716
  %721 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 3
  %722 = load i32, i32* %721, align 4
  %723 = icmp eq i32 %722, 6
  br i1 %723, label %724, label %726

724:                                              ; preds = %720
  %725 = or i8 %712, -128
  store i8 %725, i8* %614, align 4
  br label %728

726:                                              ; preds = %720
  %727 = and i8 %712, 127
  store i8 %727, i8* %614, align 4
  br label %728

728:                                              ; preds = %724, %726, %716, %711, %708, %704
  %729 = icmp eq i8* %612, null
  br i1 %729, label %731, label %730

730:                                              ; preds = %728
  call void @uprv_free_69(i8* nonnull %612) #8
  br label %731

731:                                              ; preds = %339, %511, %568, %607, %159, %116, %42, %39, %30, %728, %730
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberAdd_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 0, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberAnd_69(%struct.decNumber*, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %20

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 4
  %11 = icmp ugt i8 %10, 15
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %18 = load i8, i8* %17, align 4
  %19 = icmp ugt i8 %18, 15
  br i1 %19, label %20, label %26

20:                                               ; preds = %16, %8, %12, %4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %22 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %23, align 4
  %24 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %24, align 1
  store i8 32, i8* %21, align 4
  %25 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 128) #8
  br label %132

26:                                               ; preds = %16
  %27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %28 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 0
  %29 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %30 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, 50
  br i1 %32, label %33, label %38

33:                                               ; preds = %26
  %34 = sext i32 %31 to i64
  %35 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  br label %38

38:                                               ; preds = %26, %33
  %39 = phi i32 [ %37, %33 ], [ %31, %26 ]
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %40
  %42 = getelementptr inbounds i8, i8* %41, i64 -1
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, 50
  br i1 %45, label %46, label %51

46:                                               ; preds = %38
  %47 = sext i32 %44 to i64
  %48 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  br label %51

51:                                               ; preds = %38, %46
  %52 = phi i32 [ %50, %46 ], [ %44, %38 ]
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 %53
  %55 = getelementptr inbounds i8, i8* %54, i64 -1
  %56 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %57, 50
  %59 = sext i32 %57 to i64
  br i1 %58, label %60, label %64

60:                                               ; preds = %51
  %61 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %59
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i64
  br label %64

64:                                               ; preds = %51, %60
  %65 = phi i64 [ %63, %60 ], [ %59, %51 ]
  %66 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %65
  %67 = getelementptr inbounds i8, i8* %66, i64 -1
  %68 = icmp ugt i8* %29, %67
  br i1 %68, label %104, label %69

69:                                               ; preds = %64, %99
  %70 = phi i8* [ %102, %99 ], [ %29, %64 ]
  %71 = phi i8* [ %101, %99 ], [ %28, %64 ]
  %72 = phi i8* [ %100, %99 ], [ %27, %64 ]
  %73 = icmp ugt i8* %72, %42
  br i1 %73, label %76, label %74

74:                                               ; preds = %69
  %75 = load i8, i8* %72, align 1
  br label %76

76:                                               ; preds = %69, %74
  %77 = phi i8 [ %75, %74 ], [ 0, %69 ]
  %78 = icmp ugt i8* %71, %55
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = load i8, i8* %71, align 1
  br label %81

81:                                               ; preds = %76, %79
  %82 = phi i8 [ %80, %79 ], [ 0, %76 ]
  store i8 0, i8* %70, align 1
  %83 = or i8 %82, %77
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %99, label %85

85:                                               ; preds = %81
  store i8 0, i8* %70, align 1
  %86 = and i8 %77, 1
  %87 = and i8 %86, %82
  %88 = icmp eq i8 %87, 0
  %89 = select i1 %88, i8 0, i8 1
  store i8 %89, i8* %70, align 1
  %90 = urem i8 %77, 10
  %91 = urem i8 %82, 10
  %92 = or i8 %91, %90
  %93 = icmp ugt i8 %92, 1
  br i1 %93, label %94, label %99

94:                                               ; preds = %85
  %95 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %96 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %96, align 4
  %97 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %97, align 4
  store i8 0, i8* %29, align 1
  store i8 32, i8* %95, align 4
  %98 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 128) #8
  br label %132

99:                                               ; preds = %85, %81
  %100 = getelementptr inbounds i8, i8* %72, i64 1
  %101 = getelementptr inbounds i8, i8* %71, i64 1
  %102 = getelementptr inbounds i8, i8* %70, i64 1
  %103 = icmp ugt i8* %102, %67
  br i1 %103, label %104, label %69

104:                                              ; preds = %99, %64
  %105 = phi i8* [ %29, %64 ], [ %102, %99 ]
  %106 = ptrtoint i8* %105 to i64
  %107 = ptrtoint i8* %29 to i64
  %108 = sub i64 %106, %107
  %109 = trunc i64 %108 to i32
  %110 = icmp slt i32 %109, 1
  br i1 %110, label %127, label %111

111:                                              ; preds = %104
  %112 = shl i64 %108, 32
  %113 = add i64 %112, -4294967296
  %114 = ashr exact i64 %113, 32
  %115 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %114
  br label %116

116:                                              ; preds = %123, %111
  %117 = phi i32 [ %124, %123 ], [ %109, %111 ]
  %118 = phi i8* [ %125, %123 ], [ %115, %111 ]
  %119 = load i8, i8* %118, align 1
  %120 = icmp ne i8 %119, 0
  %121 = icmp eq i32 %117, 1
  %122 = or i1 %121, %120
  br i1 %122, label %127, label %123

123:                                              ; preds = %116
  %124 = add nsw i32 %117, -1
  %125 = getelementptr inbounds i8, i8* %118, i64 -1
  %126 = icmp ult i8* %125, %29
  br i1 %126, label %127, label %116

127:                                              ; preds = %116, %123, %104
  %128 = phi i32 [ %109, %104 ], [ %117, %116 ], [ %124, %123 ]
  %129 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %128, i32* %129, align 4
  %130 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %130, align 4
  %131 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %131, align 4
  br label %132

132:                                              ; preds = %94, %127, %20
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberCompare_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %8 = load i8, i8* %7, align 4
  %9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %10 = load i8, i8* %9, align 4
  %11 = or i8 %10, %8
  %12 = and i8 %11, 48
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %27

14:                                               ; preds = %4
  %15 = tail call fastcc i32 @_ZL10decComparePK9decNumberS1_h(%struct.decNumber* %1, %struct.decNumber* %2, i8 zeroext 0) #8
  %16 = icmp eq i32 %15, -2147483648
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  store i32 16, i32* %5, align 4
  br label %38

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %21, align 4
  %22 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %15, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18
  store i8 1, i8* %22, align 1
  %25 = icmp slt i32 %15, 0
  br i1 %25, label %26, label %47

26:                                               ; preds = %24
  store i8 -128, i8* %19, align 4
  br label %47

27:                                               ; preds = %4
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* nonnull %5) #8
  %28 = load i32, i32* %5, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %47, label %30

30:                                               ; preds = %27
  %31 = and i32 %28, 221
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %30
  %34 = and i32 %28, 1073741824
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = and i32 %28, -1073741825
  br label %44

38:                                               ; preds = %17, %33
  %39 = phi i32 [ 16, %17 ], [ %28, %33 ]
  %40 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %41 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %42, align 4
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %43, align 1
  store i8 32, i8* %40, align 4
  br label %44

44:                                               ; preds = %30, %36, %38
  %45 = phi i32 [ %37, %36 ], [ %39, %38 ], [ %28, %30 ]
  %46 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %45) #8
  br label %47

47:                                               ; preds = %26, %24, %18, %27, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL12decCompareOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber*, %struct.decNumber*, %struct.decNumber*, %struct.decContext* nocapture readonly, i8 zeroext, i32* nocapture) unnamed_addr #3 {
  %7 = alloca i32, align 4
  %8 = icmp eq i8 %4, 4
  %9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 4
  br i1 %8, label %14, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %13 = load i8, i8* %12, align 4
  br label %21

14:                                               ; preds = %6
  %15 = icmp slt i8 %10, 0
  %16 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %17 = load i8, i8* %16, align 4
  %18 = icmp slt i8 %17, 0
  br i1 %15, label %19, label %20

19:                                               ; preds = %14
  br i1 %18, label %21, label %141

20:                                               ; preds = %14
  br i1 %18, label %141, label %21

21:                                               ; preds = %11, %19, %20
  %22 = phi i8 [ %13, %11 ], [ %17, %19 ], [ %17, %20 ]
  %23 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %24 = zext i8 %10 to i32
  %25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %26 = zext i8 %22 to i32
  %27 = or i8 %22, %10
  %28 = and i8 %27, 48
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %114, label %30

30:                                               ; preds = %21
  switch i8 %4, label %34 [
    i8 1, label %113
    i8 6, label %31
  ]

31:                                               ; preds = %30
  %32 = load i32, i32* %5, align 4
  %33 = or i32 %32, 1073741952
  store i32 %33, i32* %5, align 4
  br label %113

34:                                               ; preds = %30
  br i1 %8, label %35, label %99

35:                                               ; preds = %34
  %36 = and i32 %24, 48
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %94, label %38

38:                                               ; preds = %35
  %39 = and i32 %26, 48
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %94, label %41

41:                                               ; preds = %38
  %42 = and i32 %24, 16
  %43 = icmp eq i32 %42, 0
  %44 = and i32 %26, 32
  %45 = icmp eq i32 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %94

47:                                               ; preds = %41
  %48 = and i8 %10, 32
  %49 = icmp eq i8 %48, 0
  %50 = and i8 %22, 16
  %51 = icmp eq i8 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %94

53:                                               ; preds = %47
  %54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, 50
  br i1 %57, label %58, label %63

58:                                               ; preds = %53
  %59 = sext i32 %56 to i64
  %60 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  br label %63

63:                                               ; preds = %53, %58
  %64 = phi i32 [ %62, %58 ], [ %56, %53 ]
  %65 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %66, 50
  br i1 %67, label %68, label %73

68:                                               ; preds = %63
  %69 = sext i32 %66 to i64
  %70 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  br label %73

73:                                               ; preds = %63, %68
  %74 = phi i32 [ %72, %68 ], [ %66, %63 ]
  %75 = icmp sgt i32 %64, %74
  br i1 %75, label %94, label %76

76:                                               ; preds = %73
  %77 = icmp slt i32 %64, %74
  br i1 %77, label %94, label %78

78:                                               ; preds = %76
  %79 = sext i32 %64 to i64
  %80 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %79
  %81 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 %79
  br label %82

82:                                               ; preds = %92, %78
  %83 = phi i8* [ %80, %78 ], [ %86, %92 ]
  %84 = phi i8* [ %81, %78 ], [ %85, %92 ]
  %85 = getelementptr inbounds i8, i8* %84, i64 -1
  %86 = getelementptr inbounds i8, i8* %83, i64 -1
  %87 = icmp ult i8* %86, %54
  br i1 %87, label %94, label %88

88:                                               ; preds = %82
  %89 = load i8, i8* %86, align 1
  %90 = load i8, i8* %85, align 1
  %91 = icmp ugt i8 %89, %90
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  %93 = icmp ult i8 %89, %90
  br i1 %93, label %94, label %82

94:                                               ; preds = %92, %88, %82, %76, %73, %47, %41, %38, %35
  %95 = phi i32 [ -1, %35 ], [ 1, %38 ], [ -1, %41 ], [ 1, %47 ], [ 1, %73 ], [ -1, %76 ], [ 1, %88 ], [ -1, %92 ], [ 0, %82 ]
  %96 = icmp slt i8 %10, 0
  %97 = sub nsw i32 0, %95
  %98 = select i1 %96, i32 %97, i32 %95
  br label %123

99:                                               ; preds = %34
  %100 = and i8 %27, 16
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %113

102:                                              ; preds = %99
  %103 = and i32 %24, 48
  %104 = icmp eq i32 %103, 0
  %105 = and i32 %26, 48
  %106 = icmp eq i32 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %113

108:                                              ; preds = %102
  %109 = and i8 %10, 32
  %110 = icmp eq i8 %109, 0
  %111 = select i1 %110, i32 1, i32 -1
  %112 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #8
  store i32 0, i32* %7, align 4
  br label %180

113:                                              ; preds = %31, %99, %30, %102
  tail call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* %5)
  br label %194

114:                                              ; preds = %21
  %115 = add i8 %4, -7
  %116 = icmp ult i8 %115, 2
  %117 = zext i1 %116 to i8
  %118 = tail call fastcc i32 @_ZL10decComparePK9decNumberS1_h(%struct.decNumber* %1, %struct.decNumber* %2, i8 zeroext %117)
  %119 = icmp eq i32 %118, -2147483648
  br i1 %119, label %120, label %123

120:                                              ; preds = %114
  %121 = load i32, i32* %5, align 4
  %122 = or i32 %121, 16
  store i32 %122, i32* %5, align 4
  br label %194

123:                                              ; preds = %94, %114
  %124 = phi i32 [ %118, %114 ], [ %98, %94 ]
  switch i8 %4, label %151 [
    i8 1, label %125
    i8 6, label %125
    i8 4, label %125
    i8 5, label %194
  ]

125:                                              ; preds = %123, %123, %123
  %126 = icmp eq i32 %124, 0
  %127 = and i1 %8, %126
  br i1 %127, label %128, label %141

128:                                              ; preds = %125
  %129 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %130, %132
  br i1 %133, label %141, label %134

134:                                              ; preds = %128
  %135 = icmp slt i32 %130, %132
  %136 = select i1 %135, i32 -1, i32 1
  %137 = load i8, i8* %23, align 4
  %138 = icmp slt i8 %137, 0
  %139 = sub nsw i32 0, %136
  %140 = select i1 %138, i32 %139, i32 %136
  br label %141

141:                                              ; preds = %20, %19, %134, %128, %125
  %142 = phi i32 [ 0, %128 ], [ %124, %125 ], [ %140, %134 ], [ -1, %19 ], [ 1, %20 ]
  %143 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %143, align 4
  %144 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %144, align 4
  %145 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %145, align 4
  %146 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %146, align 1
  %147 = icmp eq i32 %142, 0
  br i1 %147, label %194, label %148

148:                                              ; preds = %141
  store i8 1, i8* %146, align 1
  %149 = icmp slt i32 %142, 0
  br i1 %149, label %150, label %194

150:                                              ; preds = %148
  store i8 -128, i8* %143, align 4
  br label %194

151:                                              ; preds = %123
  %152 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %152) #8
  store i32 0, i32* %7, align 4
  %153 = icmp eq i32 %124, 0
  br i1 %153, label %154, label %176

154:                                              ; preds = %151
  %155 = load i8, i8* %23, align 4
  %156 = and i8 %155, -128
  %157 = load i8, i8* %25, align 4
  %158 = and i8 %157, -128
  %159 = icmp eq i8 %156, %158
  br i1 %159, label %163, label %160

160:                                              ; preds = %154
  %161 = icmp eq i8 %156, 0
  %162 = select i1 %161, i32 1, i32 -1
  br label %176

163:                                              ; preds = %154
  %164 = and i8 %157, %155
  %165 = icmp slt i8 %164, 0
  %166 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %169 = load i32, i32* %168, align 4
  br i1 %165, label %170, label %173

170:                                              ; preds = %163
  %171 = icmp slt i32 %167, %169
  %172 = select i1 %171, i32 1, i32 -1
  br label %176

173:                                              ; preds = %163
  %174 = icmp sgt i32 %167, %169
  %175 = select i1 %174, i32 1, i32 -1
  br label %176

176:                                              ; preds = %160, %170, %173, %151
  %177 = phi i32 [ %124, %151 ], [ %162, %160 ], [ %172, %170 ], [ %175, %173 ]
  switch i8 %4, label %180 [
    i8 3, label %178
    i8 8, label %178
  ]

178:                                              ; preds = %176, %176
  %179 = sub nsw i32 0, %177
  br label %180

180:                                              ; preds = %108, %176, %178
  %181 = phi i8* [ %152, %178 ], [ %152, %176 ], [ %112, %108 ]
  %182 = phi i32 [ %179, %178 ], [ %177, %176 ], [ %111, %108 ]
  %183 = icmp sgt i32 %182, 0
  %184 = select i1 %183, %struct.decNumber* %1, %struct.decNumber* %2
  %185 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %184, i64 0, i32 2
  %186 = load i8, i8* %185, align 4
  %187 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %186, i8* %187, align 4
  %188 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %184, i64 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %189, i32* %190, align 4
  %191 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %184, i64 0, i32 3, i64 0
  %192 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %184, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* %3, i8* %191, i32 %193, i32* nonnull %7, i32* %5) #8
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %7, i32* %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %181) #8
  br label %194

194:                                              ; preds = %113, %123, %141, %148, %150, %180, %120
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberCompareSignal_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %8 = load i8, i8* %7, align 4
  %9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %10 = load i8, i8* %9, align 4
  %11 = or i8 %10, %8
  %12 = and i8 %11, 48
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %27

14:                                               ; preds = %4
  %15 = tail call fastcc i32 @_ZL10decComparePK9decNumberS1_h(%struct.decNumber* %1, %struct.decNumber* %2, i8 zeroext 0) #8
  %16 = icmp eq i32 %15, -2147483648
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  store i32 16, i32* %5, align 4
  br label %38

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %21, align 4
  %22 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %15, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18
  store i8 1, i8* %22, align 1
  %25 = icmp slt i32 %15, 0
  br i1 %25, label %26, label %47

26:                                               ; preds = %24
  store i8 -128, i8* %19, align 4
  br label %47

27:                                               ; preds = %4
  store i32 1073741952, i32* %5, align 4
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* nonnull %5) #8
  %28 = load i32, i32* %5, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %47, label %30

30:                                               ; preds = %27
  %31 = and i32 %28, 221
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %30
  %34 = and i32 %28, 1073741824
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = and i32 %28, -1073741825
  br label %44

38:                                               ; preds = %17, %33
  %39 = phi i32 [ 16, %17 ], [ %28, %33 ]
  %40 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %41 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %42, align 4
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %43, align 1
  store i8 32, i8* %40, align 4
  br label %44

44:                                               ; preds = %30, %36, %38
  %45 = phi i32 [ %37, %36 ], [ %39, %38 ], [ %28, %30 ]
  %46 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %45) #8
  br label %47

47:                                               ; preds = %26, %24, %18, %27, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberCompareTotal_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL12decCompareOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 4, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberCompareTotalMag_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %5 = ptrtoint %struct.decNumber* %2 to i64
  %6 = bitcast %struct.decNumber* %2 to i8*
  %7 = ptrtoint %struct.decNumber* %1 to i64
  %8 = bitcast %struct.decNumber* %1 to i8*
  %9 = alloca i32, align 4
  %10 = alloca [4 x %struct.decNumber], align 16
  %11 = alloca [4 x %struct.decNumber], align 16
  %12 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 0, i32* %9, align 4
  %13 = bitcast [4 x %struct.decNumber]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 48, i1 false)
  %14 = bitcast [4 x %struct.decNumber]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 48, i1 false)
  %15 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %171

18:                                               ; preds = %4
  %19 = getelementptr inbounds [4 x %struct.decNumber], [4 x %struct.decNumber]* %10, i64 0, i64 0
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 50
  br i1 %22, label %23, label %28

23:                                               ; preds = %18
  %24 = sext i32 %21 to i64
  %25 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  br label %28

28:                                               ; preds = %18, %23
  %29 = phi i32 [ %27, %23 ], [ %21, %18 ]
  %30 = add nuw i32 %29, 11
  %31 = icmp ugt i32 %30, 48
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  %34 = tail call noalias i8* @uprv_malloc_69(i64 %33) #9
  %35 = bitcast i8* %34 to %struct.decNumber*
  %36 = icmp eq i8* %34, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store i32 16, i32* %9, align 4
  br label %356

38:                                               ; preds = %32, %28
  %39 = phi i8* [ null, %28 ], [ %34, %32 ]
  %40 = phi %struct.decNumber* [ null, %28 ], [ %35, %32 ]
  %41 = phi %struct.decNumber* [ %19, %28 ], [ %35, %32 ]
  %42 = icmp eq %struct.decNumber* %41, %1
  br i1 %42, label %167, label %43

43:                                               ; preds = %38
  %44 = load i8, i8* %15, align 4
  %45 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %41, i64 0, i32 2
  store i8 %44, i8* %45, align 4
  %46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %41, i64 0, i32 1
  store i32 %47, i32* %48, align 4
  %49 = load i32, i32* %20, align 4
  %50 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %41, i64 0, i32 0
  store i32 %49, i32* %50, align 4
  %51 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %52 = load i8, i8* %51, align 1
  %53 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %41, i64 0, i32 3, i64 0
  store i8 %52, i8* %53, align 1
  %54 = icmp sgt i32 %49, 1
  br i1 %54, label %55, label %167

55:                                               ; preds = %43
  %56 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %41, i64 0, i32 3, i64 1
  %57 = icmp slt i32 %49, 50
  %58 = sext i32 %49 to i64
  br i1 %57, label %59, label %63

59:                                               ; preds = %55
  %60 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %58
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  br label %63

63:                                               ; preds = %59, %55
  %64 = phi i64 [ %62, %59 ], [ %58, %55 ]
  %65 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %64
  %66 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %67 = add nsw i64 %64, 9
  %68 = getelementptr i8, i8* %8, i64 %67
  %69 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %70 = icmp ugt i8* %68, %69
  %71 = select i1 %70, i8* %68, i8* %69
  %72 = sub i64 -10, %7
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = icmp ult i8* %73, inttoptr (i64 32 to i8*)
  br i1 %75, label %157, label %76

76:                                               ; preds = %63
  %77 = and i64 %74, -32
  %78 = getelementptr i8, i8* %56, i64 %77
  %79 = getelementptr i8, i8* %66, i64 %77
  %80 = add i64 %77, -32
  %81 = lshr exact i64 %80, 5
  %82 = add nuw nsw i64 %81, 1
  %83 = and i64 %82, 3
  %84 = icmp ult i64 %80, 96
  br i1 %84, label %136, label %85

85:                                               ; preds = %76
  %86 = sub nsw i64 %82, %83
  br label %87

87:                                               ; preds = %87, %85
  %88 = phi i64 [ 0, %85 ], [ %133, %87 ]
  %89 = phi i64 [ %86, %85 ], [ %134, %87 ]
  %90 = getelementptr i8, i8* %56, i64 %88
  %91 = getelementptr i8, i8* %66, i64 %88
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1
  %94 = getelementptr i8, i8* %91, i64 16
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1
  %97 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %97, align 1
  %98 = getelementptr i8, i8* %90, i64 16
  %99 = bitcast i8* %98 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %99, align 1
  %100 = or i64 %88, 32
  %101 = getelementptr i8, i8* %56, i64 %100
  %102 = getelementptr i8, i8* %66, i64 %100
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = getelementptr i8, i8* %102, i64 16
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1
  %108 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %108, align 1
  %109 = getelementptr i8, i8* %101, i64 16
  %110 = bitcast i8* %109 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %110, align 1
  %111 = or i64 %88, 64
  %112 = getelementptr i8, i8* %56, i64 %111
  %113 = getelementptr i8, i8* %66, i64 %111
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1
  %116 = getelementptr i8, i8* %113, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1
  %119 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %119, align 1
  %120 = getelementptr i8, i8* %112, i64 16
  %121 = bitcast i8* %120 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %121, align 1
  %122 = or i64 %88, 96
  %123 = getelementptr i8, i8* %56, i64 %122
  %124 = getelementptr i8, i8* %66, i64 %122
  %125 = bitcast i8* %124 to <16 x i8>*
  %126 = load <16 x i8>, <16 x i8>* %125, align 1
  %127 = getelementptr i8, i8* %124, i64 16
  %128 = bitcast i8* %127 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1
  %130 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %126, <16 x i8>* %130, align 1
  %131 = getelementptr i8, i8* %123, i64 16
  %132 = bitcast i8* %131 to <16 x i8>*
  store <16 x i8> %129, <16 x i8>* %132, align 1
  %133 = add i64 %88, 128
  %134 = add i64 %89, -4
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %87, !llvm.loop !44

136:                                              ; preds = %87, %76
  %137 = phi i64 [ 0, %76 ], [ %133, %87 ]
  %138 = icmp eq i64 %83, 0
  br i1 %138, label %155, label %139

139:                                              ; preds = %136, %139
  %140 = phi i64 [ %152, %139 ], [ %137, %136 ]
  %141 = phi i64 [ %153, %139 ], [ %83, %136 ]
  %142 = getelementptr i8, i8* %56, i64 %140
  %143 = getelementptr i8, i8* %66, i64 %140
  %144 = bitcast i8* %143 to <16 x i8>*
  %145 = load <16 x i8>, <16 x i8>* %144, align 1
  %146 = getelementptr i8, i8* %143, i64 16
  %147 = bitcast i8* %146 to <16 x i8>*
  %148 = load <16 x i8>, <16 x i8>* %147, align 1
  %149 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %145, <16 x i8>* %149, align 1
  %150 = getelementptr i8, i8* %142, i64 16
  %151 = bitcast i8* %150 to <16 x i8>*
  store <16 x i8> %148, <16 x i8>* %151, align 1
  %152 = add i64 %140, 32
  %153 = add i64 %141, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %139, !llvm.loop !45

155:                                              ; preds = %139, %136
  %156 = icmp eq i64 %77, %74
  br i1 %156, label %167, label %157

157:                                              ; preds = %155, %63
  %158 = phi i8* [ %56, %63 ], [ %78, %155 ]
  %159 = phi i8* [ %66, %63 ], [ %79, %155 ]
  br label %160

160:                                              ; preds = %157, %160
  %161 = phi i8* [ %165, %160 ], [ %158, %157 ]
  %162 = phi i8* [ %164, %160 ], [ %159, %157 ]
  %163 = load i8, i8* %162, align 1
  store i8 %163, i8* %161, align 1
  %164 = getelementptr inbounds i8, i8* %162, i64 1
  %165 = getelementptr inbounds i8, i8* %161, i64 1
  %166 = icmp ult i8* %164, %65
  br i1 %166, label %160, label %167, !llvm.loop !46

167:                                              ; preds = %160, %155, %38, %43
  %168 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %41, i64 0, i32 2
  %169 = load i8, i8* %168, align 4
  %170 = and i8 %169, 127
  store i8 %170, i8* %168, align 4
  br label %171

171:                                              ; preds = %167, %4
  %172 = phi %struct.decNumber* [ %41, %167 ], [ %1, %4 ]
  %173 = phi i8* [ %39, %167 ], [ null, %4 ]
  %174 = phi %struct.decNumber* [ %40, %167 ], [ null, %4 ]
  %175 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %176 = load i8, i8* %175, align 4
  %177 = icmp slt i8 %176, 0
  br i1 %177, label %178, label %333

178:                                              ; preds = %171
  %179 = getelementptr inbounds [4 x %struct.decNumber], [4 x %struct.decNumber]* %11, i64 0, i64 0
  %180 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = icmp slt i32 %181, 50
  br i1 %182, label %183, label %188

183:                                              ; preds = %178
  %184 = sext i32 %181 to i64
  %185 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  br label %188

188:                                              ; preds = %178, %183
  %189 = phi i32 [ %187, %183 ], [ %181, %178 ]
  %190 = add nuw i32 %189, 11
  %191 = icmp ugt i32 %190, 48
  br i1 %191, label %192, label %200

192:                                              ; preds = %188
  %193 = zext i32 %190 to i64
  %194 = call noalias i8* @uprv_malloc_69(i64 %193) #9
  %195 = bitcast i8* %194 to %struct.decNumber*
  %196 = icmp eq i8* %194, null
  br i1 %196, label %197, label %200

197:                                              ; preds = %192
  %198 = load i32, i32* %9, align 4
  %199 = or i32 %198, 16
  store i32 %199, i32* %9, align 4
  br label %337

200:                                              ; preds = %192, %188
  %201 = phi i8* [ null, %188 ], [ %194, %192 ]
  %202 = phi %struct.decNumber* [ null, %188 ], [ %195, %192 ]
  %203 = phi %struct.decNumber* [ %179, %188 ], [ %195, %192 ]
  %204 = icmp eq %struct.decNumber* %203, %2
  br i1 %204, label %329, label %205

205:                                              ; preds = %200
  %206 = load i8, i8* %175, align 4
  %207 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %203, i64 0, i32 2
  store i8 %206, i8* %207, align 4
  %208 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %203, i64 0, i32 1
  store i32 %209, i32* %210, align 4
  %211 = load i32, i32* %180, align 4
  %212 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %203, i64 0, i32 0
  store i32 %211, i32* %212, align 4
  %213 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 0
  %214 = load i8, i8* %213, align 1
  %215 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %203, i64 0, i32 3, i64 0
  store i8 %214, i8* %215, align 1
  %216 = icmp sgt i32 %211, 1
  br i1 %216, label %217, label %329

217:                                              ; preds = %205
  %218 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %203, i64 0, i32 3, i64 1
  %219 = icmp slt i32 %211, 50
  %220 = sext i32 %211 to i64
  br i1 %219, label %221, label %225

221:                                              ; preds = %217
  %222 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %220
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  br label %225

225:                                              ; preds = %221, %217
  %226 = phi i64 [ %224, %221 ], [ %220, %217 ]
  %227 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 %226
  %228 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 1
  %229 = add nsw i64 %226, 9
  %230 = getelementptr i8, i8* %6, i64 %229
  %231 = getelementptr %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 2
  %232 = icmp ugt i8* %230, %231
  %233 = select i1 %232, i8* %230, i8* %231
  %234 = sub i64 -10, %5
  %235 = getelementptr i8, i8* %233, i64 %234
  %236 = ptrtoint i8* %235 to i64
  %237 = icmp ult i8* %235, inttoptr (i64 32 to i8*)
  br i1 %237, label %319, label %238

238:                                              ; preds = %225
  %239 = and i64 %236, -32
  %240 = getelementptr i8, i8* %218, i64 %239
  %241 = getelementptr i8, i8* %228, i64 %239
  %242 = add i64 %239, -32
  %243 = lshr exact i64 %242, 5
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 3
  %246 = icmp ult i64 %242, 96
  br i1 %246, label %298, label %247

247:                                              ; preds = %238
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %295, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %296, %249 ]
  %252 = getelementptr i8, i8* %218, i64 %250
  %253 = getelementptr i8, i8* %228, i64 %250
  %254 = bitcast i8* %253 to <16 x i8>*
  %255 = load <16 x i8>, <16 x i8>* %254, align 1
  %256 = getelementptr i8, i8* %253, i64 16
  %257 = bitcast i8* %256 to <16 x i8>*
  %258 = load <16 x i8>, <16 x i8>* %257, align 1
  %259 = bitcast i8* %252 to <16 x i8>*
  store <16 x i8> %255, <16 x i8>* %259, align 1
  %260 = getelementptr i8, i8* %252, i64 16
  %261 = bitcast i8* %260 to <16 x i8>*
  store <16 x i8> %258, <16 x i8>* %261, align 1
  %262 = or i64 %250, 32
  %263 = getelementptr i8, i8* %218, i64 %262
  %264 = getelementptr i8, i8* %228, i64 %262
  %265 = bitcast i8* %264 to <16 x i8>*
  %266 = load <16 x i8>, <16 x i8>* %265, align 1
  %267 = getelementptr i8, i8* %264, i64 16
  %268 = bitcast i8* %267 to <16 x i8>*
  %269 = load <16 x i8>, <16 x i8>* %268, align 1
  %270 = bitcast i8* %263 to <16 x i8>*
  store <16 x i8> %266, <16 x i8>* %270, align 1
  %271 = getelementptr i8, i8* %263, i64 16
  %272 = bitcast i8* %271 to <16 x i8>*
  store <16 x i8> %269, <16 x i8>* %272, align 1
  %273 = or i64 %250, 64
  %274 = getelementptr i8, i8* %218, i64 %273
  %275 = getelementptr i8, i8* %228, i64 %273
  %276 = bitcast i8* %275 to <16 x i8>*
  %277 = load <16 x i8>, <16 x i8>* %276, align 1
  %278 = getelementptr i8, i8* %275, i64 16
  %279 = bitcast i8* %278 to <16 x i8>*
  %280 = load <16 x i8>, <16 x i8>* %279, align 1
  %281 = bitcast i8* %274 to <16 x i8>*
  store <16 x i8> %277, <16 x i8>* %281, align 1
  %282 = getelementptr i8, i8* %274, i64 16
  %283 = bitcast i8* %282 to <16 x i8>*
  store <16 x i8> %280, <16 x i8>* %283, align 1
  %284 = or i64 %250, 96
  %285 = getelementptr i8, i8* %218, i64 %284
  %286 = getelementptr i8, i8* %228, i64 %284
  %287 = bitcast i8* %286 to <16 x i8>*
  %288 = load <16 x i8>, <16 x i8>* %287, align 1
  %289 = getelementptr i8, i8* %286, i64 16
  %290 = bitcast i8* %289 to <16 x i8>*
  %291 = load <16 x i8>, <16 x i8>* %290, align 1
  %292 = bitcast i8* %285 to <16 x i8>*
  store <16 x i8> %288, <16 x i8>* %292, align 1
  %293 = getelementptr i8, i8* %285, i64 16
  %294 = bitcast i8* %293 to <16 x i8>*
  store <16 x i8> %291, <16 x i8>* %294, align 1
  %295 = add i64 %250, 128
  %296 = add i64 %251, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %249, !llvm.loop !47

298:                                              ; preds = %249, %238
  %299 = phi i64 [ 0, %238 ], [ %295, %249 ]
  %300 = icmp eq i64 %245, 0
  br i1 %300, label %317, label %301

301:                                              ; preds = %298, %301
  %302 = phi i64 [ %314, %301 ], [ %299, %298 ]
  %303 = phi i64 [ %315, %301 ], [ %245, %298 ]
  %304 = getelementptr i8, i8* %218, i64 %302
  %305 = getelementptr i8, i8* %228, i64 %302
  %306 = bitcast i8* %305 to <16 x i8>*
  %307 = load <16 x i8>, <16 x i8>* %306, align 1
  %308 = getelementptr i8, i8* %305, i64 16
  %309 = bitcast i8* %308 to <16 x i8>*
  %310 = load <16 x i8>, <16 x i8>* %309, align 1
  %311 = bitcast i8* %304 to <16 x i8>*
  store <16 x i8> %307, <16 x i8>* %311, align 1
  %312 = getelementptr i8, i8* %304, i64 16
  %313 = bitcast i8* %312 to <16 x i8>*
  store <16 x i8> %310, <16 x i8>* %313, align 1
  %314 = add i64 %302, 32
  %315 = add i64 %303, -1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %301, !llvm.loop !48

317:                                              ; preds = %301, %298
  %318 = icmp eq i64 %239, %236
  br i1 %318, label %329, label %319

319:                                              ; preds = %317, %225
  %320 = phi i8* [ %218, %225 ], [ %240, %317 ]
  %321 = phi i8* [ %228, %225 ], [ %241, %317 ]
  br label %322

322:                                              ; preds = %319, %322
  %323 = phi i8* [ %327, %322 ], [ %320, %319 ]
  %324 = phi i8* [ %326, %322 ], [ %321, %319 ]
  %325 = load i8, i8* %324, align 1
  store i8 %325, i8* %323, align 1
  %326 = getelementptr inbounds i8, i8* %324, i64 1
  %327 = getelementptr inbounds i8, i8* %323, i64 1
  %328 = icmp ult i8* %326, %227
  br i1 %328, label %322, label %329, !llvm.loop !49

329:                                              ; preds = %322, %317, %200, %205
  %330 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %203, i64 0, i32 2
  %331 = load i8, i8* %330, align 4
  %332 = and i8 %331, 127
  store i8 %332, i8* %330, align 4
  br label %333

333:                                              ; preds = %329, %171
  %334 = phi %struct.decNumber* [ %203, %329 ], [ %2, %171 ]
  %335 = phi i8* [ %201, %329 ], [ null, %171 ]
  %336 = phi %struct.decNumber* [ %202, %329 ], [ null, %171 ]
  call fastcc void @_ZL12decCompareOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %172, %struct.decNumber* %334, %struct.decContext* %3, i8 zeroext 4, i32* nonnull %9)
  br label %337

337:                                              ; preds = %333, %197
  %338 = phi i8* [ null, %197 ], [ %335, %333 ]
  %339 = phi %struct.decNumber* [ null, %197 ], [ %336, %333 ]
  %340 = icmp eq %struct.decNumber* %174, null
  br i1 %340, label %342, label %341

341:                                              ; preds = %337
  call void @uprv_free_69(i8* %173) #8
  br label %342

342:                                              ; preds = %337, %341
  %343 = icmp eq %struct.decNumber* %339, null
  br i1 %343, label %345, label %344

344:                                              ; preds = %342
  call void @uprv_free_69(i8* %338) #8
  br label %345

345:                                              ; preds = %342, %344
  %346 = load i32, i32* %9, align 4
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %365, label %348

348:                                              ; preds = %345
  %349 = and i32 %346, 221
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %362, label %351

351:                                              ; preds = %348
  %352 = and i32 %346, 1073741824
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %356, label %354

354:                                              ; preds = %351
  %355 = and i32 %346, -1073741825
  br label %362

356:                                              ; preds = %37, %351
  %357 = phi i32 [ 16, %37 ], [ %346, %351 ]
  %358 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %359 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %359, align 4
  %360 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %360, align 4
  %361 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %361, align 1
  store i8 32, i8* %358, align 4
  br label %362

362:                                              ; preds = %348, %354, %356
  %363 = phi i32 [ %355, %354 ], [ %357, %356 ], [ %346, %348 ]
  %364 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %363) #8
  br label %365

365:                                              ; preds = %345, %362
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberCopy_69(%struct.decNumber* returned, %struct.decNumber* readonly) local_unnamed_addr #0 {
  %3 = bitcast %struct.decNumber* %0 to i8*
  %4 = ptrtoint %struct.decNumber* %1 to i64
  %5 = bitcast %struct.decNumber* %1 to i8*
  %6 = icmp eq %struct.decNumber* %0, %1
  br i1 %6, label %149, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %9, i8* %10, align 4
  %11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %18, i8* %19, align 1
  %20 = load i32, i32* %14, align 4
  %21 = icmp sgt i32 %20, 1
  br i1 %21, label %22, label %149

22:                                               ; preds = %7
  %23 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %24 = icmp slt i32 %20, 50
  %25 = sext i32 %20 to i64
  br i1 %24, label %26, label %31

26:                                               ; preds = %22
  %27 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %25
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = icmp ugt i32 %20, 1
  br i1 %30, label %31, label %149

31:                                               ; preds = %22, %26
  %32 = phi i64 [ %29, %26 ], [ %25, %22 ]
  %33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %32
  %34 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %35 = add nsw i64 %32, 9
  %36 = getelementptr i8, i8* %5, i64 %35
  %37 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %38 = icmp ugt i8* %36, %37
  %39 = select i1 %38, i8* %36, i8* %37
  %40 = sub i64 -10, %4
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = icmp ult i8* %41, inttoptr (i64 32 to i8*)
  br i1 %43, label %139, label %44

44:                                               ; preds = %31
  %45 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %46 = add nsw i64 %32, 9
  %47 = getelementptr i8, i8* %5, i64 %46
  %48 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %49 = icmp ugt i8* %47, %48
  %50 = select i1 %49, i8* %47, i8* %48
  %51 = ptrtoint i8* %50 to i64
  %52 = sub i64 %51, %4
  %53 = getelementptr i8, i8* %3, i64 %52
  %54 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %55 = icmp ult i8* %45, %50
  %56 = icmp ult i8* %54, %53
  %57 = and i1 %55, %56
  br i1 %57, label %139, label %58

58:                                               ; preds = %44
  %59 = and i64 %42, -32
  %60 = getelementptr i8, i8* %23, i64 %59
  %61 = getelementptr i8, i8* %34, i64 %59
  %62 = add i64 %59, -32
  %63 = lshr exact i64 %62, 5
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 96
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i8, i8* %23, i64 %70
  %73 = getelementptr i8, i8* %34, i64 %70
  %74 = bitcast i8* %73 to <16 x i8>*
  %75 = load <16 x i8>, <16 x i8>* %74, align 1, !alias.scope !50
  %76 = getelementptr i8, i8* %73, i64 16
  %77 = bitcast i8* %76 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 1, !alias.scope !50
  %79 = bitcast i8* %72 to <16 x i8>*
  store <16 x i8> %75, <16 x i8>* %79, align 1, !alias.scope !53, !noalias !50
  %80 = getelementptr i8, i8* %72, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  store <16 x i8> %78, <16 x i8>* %81, align 1, !alias.scope !53, !noalias !50
  %82 = or i64 %70, 32
  %83 = getelementptr i8, i8* %23, i64 %82
  %84 = getelementptr i8, i8* %34, i64 %82
  %85 = bitcast i8* %84 to <16 x i8>*
  %86 = load <16 x i8>, <16 x i8>* %85, align 1, !alias.scope !50
  %87 = getelementptr i8, i8* %84, i64 16
  %88 = bitcast i8* %87 to <16 x i8>*
  %89 = load <16 x i8>, <16 x i8>* %88, align 1, !alias.scope !50
  %90 = bitcast i8* %83 to <16 x i8>*
  store <16 x i8> %86, <16 x i8>* %90, align 1, !alias.scope !53, !noalias !50
  %91 = getelementptr i8, i8* %83, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  store <16 x i8> %89, <16 x i8>* %92, align 1, !alias.scope !53, !noalias !50
  %93 = or i64 %70, 64
  %94 = getelementptr i8, i8* %23, i64 %93
  %95 = getelementptr i8, i8* %34, i64 %93
  %96 = bitcast i8* %95 to <16 x i8>*
  %97 = load <16 x i8>, <16 x i8>* %96, align 1, !alias.scope !50
  %98 = getelementptr i8, i8* %95, i64 16
  %99 = bitcast i8* %98 to <16 x i8>*
  %100 = load <16 x i8>, <16 x i8>* %99, align 1, !alias.scope !50
  %101 = bitcast i8* %94 to <16 x i8>*
  store <16 x i8> %97, <16 x i8>* %101, align 1, !alias.scope !53, !noalias !50
  %102 = getelementptr i8, i8* %94, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  store <16 x i8> %100, <16 x i8>* %103, align 1, !alias.scope !53, !noalias !50
  %104 = or i64 %70, 96
  %105 = getelementptr i8, i8* %23, i64 %104
  %106 = getelementptr i8, i8* %34, i64 %104
  %107 = bitcast i8* %106 to <16 x i8>*
  %108 = load <16 x i8>, <16 x i8>* %107, align 1, !alias.scope !50
  %109 = getelementptr i8, i8* %106, i64 16
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !50
  %112 = bitcast i8* %105 to <16 x i8>*
  store <16 x i8> %108, <16 x i8>* %112, align 1, !alias.scope !53, !noalias !50
  %113 = getelementptr i8, i8* %105, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %114, align 1, !alias.scope !53, !noalias !50
  %115 = add i64 %70, 128
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !55

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i8, i8* %23, i64 %122
  %125 = getelementptr i8, i8* %34, i64 %122
  %126 = bitcast i8* %125 to <16 x i8>*
  %127 = load <16 x i8>, <16 x i8>* %126, align 1, !alias.scope !50
  %128 = getelementptr i8, i8* %125, i64 16
  %129 = bitcast i8* %128 to <16 x i8>*
  %130 = load <16 x i8>, <16 x i8>* %129, align 1, !alias.scope !50
  %131 = bitcast i8* %124 to <16 x i8>*
  store <16 x i8> %127, <16 x i8>* %131, align 1, !alias.scope !53, !noalias !50
  %132 = getelementptr i8, i8* %124, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  store <16 x i8> %130, <16 x i8>* %133, align 1, !alias.scope !53, !noalias !50
  %134 = add i64 %122, 32
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !56

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %59, %42
  br i1 %138, label %149, label %139

139:                                              ; preds = %137, %44, %31
  %140 = phi i8* [ %23, %44 ], [ %23, %31 ], [ %60, %137 ]
  %141 = phi i8* [ %34, %44 ], [ %34, %31 ], [ %61, %137 ]
  br label %142

142:                                              ; preds = %139, %142
  %143 = phi i8* [ %147, %142 ], [ %140, %139 ]
  %144 = phi i8* [ %146, %142 ], [ %141, %139 ]
  %145 = load i8, i8* %144, align 1
  store i8 %145, i8* %143, align 1
  %146 = getelementptr inbounds i8, i8* %144, i64 1
  %147 = getelementptr inbounds i8, i8* %143, i64 1
  %148 = icmp ult i8* %146, %33
  br i1 %148, label %142, label %149, !llvm.loop !57

149:                                              ; preds = %142, %137, %26, %7, %2
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberDivide_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL11decDivideOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext -128, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL11decDivideOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber*, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext* nocapture readonly, i8 zeroext, i32*) unnamed_addr #3 {
  %7 = bitcast %struct.decNumber* %0 to i8*
  %8 = ptrtoint %struct.decNumber* %1 to i64
  %9 = bitcast %struct.decNumber* %1 to i8*
  %10 = alloca [47 x i8], align 16
  %11 = alloca [73 x i8], align 16
  %12 = alloca i32, align 4
  %13 = getelementptr inbounds [47 x i8], [47 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 47, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 47, i1 false)
  %14 = getelementptr inbounds [73 x i8], [73 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 73, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 73, i1 false)
  %15 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #8
  store i32 -1431655766, i32* %12, align 4
  %16 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %19 = load i8, i8* %18, align 4
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %22 = load i8, i8* %21, align 4
  %23 = zext i8 %22 to i32
  %24 = xor i8 %22, %19
  %25 = and i8 %24, -128
  %26 = or i8 %22, %19
  %27 = and i8 %26, 112
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %76, label %29

29:                                               ; preds = %6
  %30 = and i8 %26, 48
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  tail call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* %5)
  br label %973

33:                                               ; preds = %29
  %34 = and i32 %20, 64
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %51, label %36

36:                                               ; preds = %33
  %37 = and i32 %23, 64
  %38 = icmp eq i32 %37, 0
  %39 = and i8 %4, 80
  %40 = icmp eq i8 %39, 0
  %41 = and i1 %40, %38
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = load i32, i32* %5, align 4
  %44 = or i32 %43, 128
  store i32 %44, i32* %5, align 4
  br label %973

45:                                               ; preds = %36
  %46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %47 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %48, align 4
  %49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %49, align 1
  %50 = or i8 %25, 64
  store i8 %50, i8* %46, align 4
  br label %973

51:                                               ; preds = %33
  store i32 0, i32* %12, align 4
  %52 = and i8 %4, 80
  %53 = icmp eq i8 %52, 0
  %54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  br i1 %53, label %62, label %55

55:                                               ; preds = %51
  store i8 %19, i8* %54, align 4
  %56 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %60 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* %3, i8* %59, i32 %61, i32* nonnull %12, i32* %5) #8
  br label %75

62:                                               ; preds = %51
  %63 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %64, align 4
  %65 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %65, align 1
  store i8 %25, i8* %54, align 4
  %66 = icmp slt i8 %4, 0
  br i1 %66, label %67, label %75

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = load i32, i32* %16, align 4
  %71 = add i32 %69, 1
  %72 = sub i32 %71, %70
  store i32 %72, i32* %63, align 4
  %73 = load i32, i32* %5, align 4
  %74 = or i32 %73, 1024
  store i32 %74, i32* %5, align 4
  br label %75

75:                                               ; preds = %62, %67, %55
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %12, i32* %5)
  br label %973

76:                                               ; preds = %6
  %77 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %118

80:                                               ; preds = %76
  %81 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 1
  %84 = and i32 %23, 112
  %85 = icmp eq i32 %84, 0
  %86 = and i1 %85, %83
  br i1 %86, label %87, label %118

87:                                               ; preds = %80
  %88 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %105

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 1
  %95 = and i32 %20, 112
  %96 = icmp eq i32 %95, 0
  %97 = and i1 %96, %94
  br i1 %97, label %98, label %105

98:                                               ; preds = %91
  %99 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %99, align 4
  %100 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %100, align 4
  %101 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %101, align 4
  %102 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %102, align 1
  %103 = load i32, i32* %5, align 4
  %104 = or i32 %103, 8
  store i32 %104, i32* %5, align 4
  br label %973

105:                                              ; preds = %91, %87
  %106 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %106, align 4
  %107 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %107, align 4
  %108 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %108, align 4
  %109 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %109, align 1
  %110 = and i8 %4, 80
  %111 = icmp eq i8 %110, 0
  %112 = load i32, i32* %5, align 4
  br i1 %111, label %115, label %113

113:                                              ; preds = %105
  %114 = or i32 %112, 128
  store i32 %114, i32* %5, align 4
  br label %973

115:                                              ; preds = %105
  %116 = or i32 %112, 2
  store i32 %116, i32* %5, align 4
  %117 = or i8 %25, 64
  store i8 %117, i8* %106, align 4
  br label %973

118:                                              ; preds = %80, %76
  %119 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp eq i8 %120, 0
  %122 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %431

124:                                              ; preds = %118
  %125 = icmp eq i32 %123, 1
  %126 = and i8 %19, 112
  %127 = icmp eq i8 %126, 0
  %128 = and i1 %127, %125
  br i1 %128, label %129, label %431

129:                                              ; preds = %124
  %130 = icmp slt i8 %4, 0
  br i1 %130, label %131, label %277

131:                                              ; preds = %129
  store i32 0, i32* %12, align 4
  %132 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub nsw i32 %133, %135
  %137 = icmp eq %struct.decNumber* %0, %1
  br i1 %137, label %274, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %19, i8* %139, align 4
  %140 = load i32, i32* %132, align 4
  %141 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %140, i32* %141, align 4
  %142 = load i32, i32* %122, align 4
  %143 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %142, i32* %143, align 4
  %144 = load i8, i8* %119, align 1
  %145 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %144, i8* %145, align 1
  %146 = load i32, i32* %122, align 4
  %147 = icmp sgt i32 %146, 1
  br i1 %147, label %148, label %274

148:                                              ; preds = %138
  %149 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %150 = icmp slt i32 %146, 50
  %151 = sext i32 %146 to i64
  br i1 %150, label %152, label %156

152:                                              ; preds = %148
  %153 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %151
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i64
  br label %156

156:                                              ; preds = %152, %148
  %157 = phi i64 [ %155, %152 ], [ %151, %148 ]
  %158 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %157
  %159 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %160 = add nsw i64 %157, 9
  %161 = getelementptr i8, i8* %9, i64 %160
  %162 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %163 = icmp ugt i8* %161, %162
  %164 = select i1 %163, i8* %161, i8* %162
  %165 = sub i64 -10, %8
  %166 = getelementptr i8, i8* %164, i64 %165
  %167 = ptrtoint i8* %166 to i64
  %168 = icmp ult i8* %166, inttoptr (i64 32 to i8*)
  br i1 %168, label %264, label %169

169:                                              ; preds = %156
  %170 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %171 = add nsw i64 %157, 9
  %172 = getelementptr i8, i8* %9, i64 %171
  %173 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %174 = icmp ugt i8* %172, %173
  %175 = select i1 %174, i8* %172, i8* %173
  %176 = ptrtoint i8* %175 to i64
  %177 = sub i64 %176, %8
  %178 = getelementptr i8, i8* %7, i64 %177
  %179 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %180 = icmp ult i8* %170, %175
  %181 = icmp ult i8* %179, %178
  %182 = and i1 %180, %181
  br i1 %182, label %264, label %183

183:                                              ; preds = %169
  %184 = and i64 %167, -32
  %185 = getelementptr i8, i8* %149, i64 %184
  %186 = getelementptr i8, i8* %159, i64 %184
  %187 = add i64 %184, -32
  %188 = lshr exact i64 %187, 5
  %189 = add nuw nsw i64 %188, 1
  %190 = and i64 %189, 3
  %191 = icmp ult i64 %187, 96
  br i1 %191, label %243, label %192

192:                                              ; preds = %183
  %193 = sub nsw i64 %189, %190
  br label %194

194:                                              ; preds = %194, %192
  %195 = phi i64 [ 0, %192 ], [ %240, %194 ]
  %196 = phi i64 [ %193, %192 ], [ %241, %194 ]
  %197 = getelementptr i8, i8* %149, i64 %195
  %198 = getelementptr i8, i8* %159, i64 %195
  %199 = bitcast i8* %198 to <16 x i8>*
  %200 = load <16 x i8>, <16 x i8>* %199, align 1, !alias.scope !58
  %201 = getelementptr i8, i8* %198, i64 16
  %202 = bitcast i8* %201 to <16 x i8>*
  %203 = load <16 x i8>, <16 x i8>* %202, align 1, !alias.scope !58
  %204 = bitcast i8* %197 to <16 x i8>*
  store <16 x i8> %200, <16 x i8>* %204, align 1, !alias.scope !61, !noalias !58
  %205 = getelementptr i8, i8* %197, i64 16
  %206 = bitcast i8* %205 to <16 x i8>*
  store <16 x i8> %203, <16 x i8>* %206, align 1, !alias.scope !61, !noalias !58
  %207 = or i64 %195, 32
  %208 = getelementptr i8, i8* %149, i64 %207
  %209 = getelementptr i8, i8* %159, i64 %207
  %210 = bitcast i8* %209 to <16 x i8>*
  %211 = load <16 x i8>, <16 x i8>* %210, align 1, !alias.scope !58
  %212 = getelementptr i8, i8* %209, i64 16
  %213 = bitcast i8* %212 to <16 x i8>*
  %214 = load <16 x i8>, <16 x i8>* %213, align 1, !alias.scope !58
  %215 = bitcast i8* %208 to <16 x i8>*
  store <16 x i8> %211, <16 x i8>* %215, align 1, !alias.scope !61, !noalias !58
  %216 = getelementptr i8, i8* %208, i64 16
  %217 = bitcast i8* %216 to <16 x i8>*
  store <16 x i8> %214, <16 x i8>* %217, align 1, !alias.scope !61, !noalias !58
  %218 = or i64 %195, 64
  %219 = getelementptr i8, i8* %149, i64 %218
  %220 = getelementptr i8, i8* %159, i64 %218
  %221 = bitcast i8* %220 to <16 x i8>*
  %222 = load <16 x i8>, <16 x i8>* %221, align 1, !alias.scope !58
  %223 = getelementptr i8, i8* %220, i64 16
  %224 = bitcast i8* %223 to <16 x i8>*
  %225 = load <16 x i8>, <16 x i8>* %224, align 1, !alias.scope !58
  %226 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %222, <16 x i8>* %226, align 1, !alias.scope !61, !noalias !58
  %227 = getelementptr i8, i8* %219, i64 16
  %228 = bitcast i8* %227 to <16 x i8>*
  store <16 x i8> %225, <16 x i8>* %228, align 1, !alias.scope !61, !noalias !58
  %229 = or i64 %195, 96
  %230 = getelementptr i8, i8* %149, i64 %229
  %231 = getelementptr i8, i8* %159, i64 %229
  %232 = bitcast i8* %231 to <16 x i8>*
  %233 = load <16 x i8>, <16 x i8>* %232, align 1, !alias.scope !58
  %234 = getelementptr i8, i8* %231, i64 16
  %235 = bitcast i8* %234 to <16 x i8>*
  %236 = load <16 x i8>, <16 x i8>* %235, align 1, !alias.scope !58
  %237 = bitcast i8* %230 to <16 x i8>*
  store <16 x i8> %233, <16 x i8>* %237, align 1, !alias.scope !61, !noalias !58
  %238 = getelementptr i8, i8* %230, i64 16
  %239 = bitcast i8* %238 to <16 x i8>*
  store <16 x i8> %236, <16 x i8>* %239, align 1, !alias.scope !61, !noalias !58
  %240 = add i64 %195, 128
  %241 = add i64 %196, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %194, !llvm.loop !63

243:                                              ; preds = %194, %183
  %244 = phi i64 [ 0, %183 ], [ %240, %194 ]
  %245 = icmp eq i64 %190, 0
  br i1 %245, label %262, label %246

246:                                              ; preds = %243, %246
  %247 = phi i64 [ %259, %246 ], [ %244, %243 ]
  %248 = phi i64 [ %260, %246 ], [ %190, %243 ]
  %249 = getelementptr i8, i8* %149, i64 %247
  %250 = getelementptr i8, i8* %159, i64 %247
  %251 = bitcast i8* %250 to <16 x i8>*
  %252 = load <16 x i8>, <16 x i8>* %251, align 1, !alias.scope !58
  %253 = getelementptr i8, i8* %250, i64 16
  %254 = bitcast i8* %253 to <16 x i8>*
  %255 = load <16 x i8>, <16 x i8>* %254, align 1, !alias.scope !58
  %256 = bitcast i8* %249 to <16 x i8>*
  store <16 x i8> %252, <16 x i8>* %256, align 1, !alias.scope !61, !noalias !58
  %257 = getelementptr i8, i8* %249, i64 16
  %258 = bitcast i8* %257 to <16 x i8>*
  store <16 x i8> %255, <16 x i8>* %258, align 1, !alias.scope !61, !noalias !58
  %259 = add i64 %247, 32
  %260 = add i64 %248, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %246, !llvm.loop !64

262:                                              ; preds = %246, %243
  %263 = icmp eq i64 %184, %167
  br i1 %263, label %274, label %264

264:                                              ; preds = %262, %169, %156
  %265 = phi i8* [ %149, %169 ], [ %149, %156 ], [ %185, %262 ]
  %266 = phi i8* [ %159, %169 ], [ %159, %156 ], [ %186, %262 ]
  br label %267

267:                                              ; preds = %264, %267
  %268 = phi i8* [ %272, %267 ], [ %265, %264 ]
  %269 = phi i8* [ %271, %267 ], [ %266, %264 ]
  %270 = load i8, i8* %269, align 1
  store i8 %270, i8* %268, align 1
  %271 = getelementptr inbounds i8, i8* %269, i64 1
  %272 = getelementptr inbounds i8, i8* %268, i64 1
  %273 = icmp ult i8* %271, %158
  br i1 %273, label %267, label %274, !llvm.loop !65

274:                                              ; preds = %267, %262, %131, %138
  %275 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %25, i8* %275, align 4
  %276 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %136, i32* %276, align 4
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %12, i32* %5)
  br label %973

277:                                              ; preds = %129
  %278 = and i8 %4, 32
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %285, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %282 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %282, align 4
  %283 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %283, align 4
  %284 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %284, align 1
  store i8 %25, i8* %281, align 4
  br label %973

285:                                              ; preds = %277
  %286 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq %struct.decNumber* %0, %1
  br i1 %288, label %426, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %19, i8* %290, align 4
  %291 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %292 = load i32, i32* %291, align 4
  %293 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %292, i32* %293, align 4
  %294 = load i32, i32* %122, align 4
  %295 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %294, i32* %295, align 4
  %296 = load i8, i8* %119, align 1
  %297 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %296, i8* %297, align 1
  %298 = load i32, i32* %122, align 4
  %299 = icmp sgt i32 %298, 1
  br i1 %299, label %300, label %426

300:                                              ; preds = %289
  %301 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %302 = icmp slt i32 %298, 50
  %303 = sext i32 %298 to i64
  br i1 %302, label %304, label %308

304:                                              ; preds = %300
  %305 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %303
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i64
  br label %308

308:                                              ; preds = %304, %300
  %309 = phi i64 [ %307, %304 ], [ %303, %300 ]
  %310 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %309
  %311 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %312 = add nsw i64 %309, 9
  %313 = getelementptr i8, i8* %9, i64 %312
  %314 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %315 = icmp ugt i8* %313, %314
  %316 = select i1 %315, i8* %313, i8* %314
  %317 = sub i64 -10, %8
  %318 = getelementptr i8, i8* %316, i64 %317
  %319 = ptrtoint i8* %318 to i64
  %320 = icmp ult i8* %318, inttoptr (i64 32 to i8*)
  br i1 %320, label %416, label %321

321:                                              ; preds = %308
  %322 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %323 = add nsw i64 %309, 9
  %324 = getelementptr i8, i8* %9, i64 %323
  %325 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %326 = icmp ugt i8* %324, %325
  %327 = select i1 %326, i8* %324, i8* %325
  %328 = ptrtoint i8* %327 to i64
  %329 = sub i64 %328, %8
  %330 = getelementptr i8, i8* %7, i64 %329
  %331 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %332 = icmp ult i8* %322, %327
  %333 = icmp ult i8* %331, %330
  %334 = and i1 %332, %333
  br i1 %334, label %416, label %335

335:                                              ; preds = %321
  %336 = and i64 %319, -32
  %337 = getelementptr i8, i8* %301, i64 %336
  %338 = getelementptr i8, i8* %311, i64 %336
  %339 = add i64 %336, -32
  %340 = lshr exact i64 %339, 5
  %341 = add nuw nsw i64 %340, 1
  %342 = and i64 %341, 3
  %343 = icmp ult i64 %339, 96
  br i1 %343, label %395, label %344

344:                                              ; preds = %335
  %345 = sub nsw i64 %341, %342
  br label %346

346:                                              ; preds = %346, %344
  %347 = phi i64 [ 0, %344 ], [ %392, %346 ]
  %348 = phi i64 [ %345, %344 ], [ %393, %346 ]
  %349 = getelementptr i8, i8* %301, i64 %347
  %350 = getelementptr i8, i8* %311, i64 %347
  %351 = bitcast i8* %350 to <16 x i8>*
  %352 = load <16 x i8>, <16 x i8>* %351, align 1, !alias.scope !66
  %353 = getelementptr i8, i8* %350, i64 16
  %354 = bitcast i8* %353 to <16 x i8>*
  %355 = load <16 x i8>, <16 x i8>* %354, align 1, !alias.scope !66
  %356 = bitcast i8* %349 to <16 x i8>*
  store <16 x i8> %352, <16 x i8>* %356, align 1, !alias.scope !69, !noalias !66
  %357 = getelementptr i8, i8* %349, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  store <16 x i8> %355, <16 x i8>* %358, align 1, !alias.scope !69, !noalias !66
  %359 = or i64 %347, 32
  %360 = getelementptr i8, i8* %301, i64 %359
  %361 = getelementptr i8, i8* %311, i64 %359
  %362 = bitcast i8* %361 to <16 x i8>*
  %363 = load <16 x i8>, <16 x i8>* %362, align 1, !alias.scope !66
  %364 = getelementptr i8, i8* %361, i64 16
  %365 = bitcast i8* %364 to <16 x i8>*
  %366 = load <16 x i8>, <16 x i8>* %365, align 1, !alias.scope !66
  %367 = bitcast i8* %360 to <16 x i8>*
  store <16 x i8> %363, <16 x i8>* %367, align 1, !alias.scope !69, !noalias !66
  %368 = getelementptr i8, i8* %360, i64 16
  %369 = bitcast i8* %368 to <16 x i8>*
  store <16 x i8> %366, <16 x i8>* %369, align 1, !alias.scope !69, !noalias !66
  %370 = or i64 %347, 64
  %371 = getelementptr i8, i8* %301, i64 %370
  %372 = getelementptr i8, i8* %311, i64 %370
  %373 = bitcast i8* %372 to <16 x i8>*
  %374 = load <16 x i8>, <16 x i8>* %373, align 1, !alias.scope !66
  %375 = getelementptr i8, i8* %372, i64 16
  %376 = bitcast i8* %375 to <16 x i8>*
  %377 = load <16 x i8>, <16 x i8>* %376, align 1, !alias.scope !66
  %378 = bitcast i8* %371 to <16 x i8>*
  store <16 x i8> %374, <16 x i8>* %378, align 1, !alias.scope !69, !noalias !66
  %379 = getelementptr i8, i8* %371, i64 16
  %380 = bitcast i8* %379 to <16 x i8>*
  store <16 x i8> %377, <16 x i8>* %380, align 1, !alias.scope !69, !noalias !66
  %381 = or i64 %347, 96
  %382 = getelementptr i8, i8* %301, i64 %381
  %383 = getelementptr i8, i8* %311, i64 %381
  %384 = bitcast i8* %383 to <16 x i8>*
  %385 = load <16 x i8>, <16 x i8>* %384, align 1, !alias.scope !66
  %386 = getelementptr i8, i8* %383, i64 16
  %387 = bitcast i8* %386 to <16 x i8>*
  %388 = load <16 x i8>, <16 x i8>* %387, align 1, !alias.scope !66
  %389 = bitcast i8* %382 to <16 x i8>*
  store <16 x i8> %385, <16 x i8>* %389, align 1, !alias.scope !69, !noalias !66
  %390 = getelementptr i8, i8* %382, i64 16
  %391 = bitcast i8* %390 to <16 x i8>*
  store <16 x i8> %388, <16 x i8>* %391, align 1, !alias.scope !69, !noalias !66
  %392 = add i64 %347, 128
  %393 = add i64 %348, -4
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %395, label %346, !llvm.loop !71

395:                                              ; preds = %346, %335
  %396 = phi i64 [ 0, %335 ], [ %392, %346 ]
  %397 = icmp eq i64 %342, 0
  br i1 %397, label %414, label %398

398:                                              ; preds = %395, %398
  %399 = phi i64 [ %411, %398 ], [ %396, %395 ]
  %400 = phi i64 [ %412, %398 ], [ %342, %395 ]
  %401 = getelementptr i8, i8* %301, i64 %399
  %402 = getelementptr i8, i8* %311, i64 %399
  %403 = bitcast i8* %402 to <16 x i8>*
  %404 = load <16 x i8>, <16 x i8>* %403, align 1, !alias.scope !66
  %405 = getelementptr i8, i8* %402, i64 16
  %406 = bitcast i8* %405 to <16 x i8>*
  %407 = load <16 x i8>, <16 x i8>* %406, align 1, !alias.scope !66
  %408 = bitcast i8* %401 to <16 x i8>*
  store <16 x i8> %404, <16 x i8>* %408, align 1, !alias.scope !69, !noalias !66
  %409 = getelementptr i8, i8* %401, i64 16
  %410 = bitcast i8* %409 to <16 x i8>*
  store <16 x i8> %407, <16 x i8>* %410, align 1, !alias.scope !69, !noalias !66
  %411 = add i64 %399, 32
  %412 = add i64 %400, -1
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %414, label %398, !llvm.loop !72

414:                                              ; preds = %398, %395
  %415 = icmp eq i64 %336, %319
  br i1 %415, label %426, label %416

416:                                              ; preds = %414, %321, %308
  %417 = phi i8* [ %301, %321 ], [ %301, %308 ], [ %337, %414 ]
  %418 = phi i8* [ %311, %321 ], [ %311, %308 ], [ %338, %414 ]
  br label %419

419:                                              ; preds = %416, %419
  %420 = phi i8* [ %424, %419 ], [ %417, %416 ]
  %421 = phi i8* [ %423, %419 ], [ %418, %416 ]
  %422 = load i8, i8* %421, align 1
  store i8 %422, i8* %420, align 1
  %423 = getelementptr inbounds i8, i8* %421, i64 1
  %424 = getelementptr inbounds i8, i8* %420, i64 1
  %425 = icmp ult i8* %423, %310
  br i1 %425, label %419, label %426, !llvm.loop !73

426:                                              ; preds = %419, %414, %285, %289
  %427 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %428 = load i32, i32* %427, align 4
  %429 = icmp slt i32 %287, %428
  br i1 %429, label %430, label %973

430:                                              ; preds = %426
  store i32 %287, i32* %427, align 4
  br label %973

431:                                              ; preds = %118, %124
  %432 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %433 = load i32, i32* %432, align 4
  %434 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %435 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %436 = load i32, i32* %435, align 4
  %437 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %438 = load i32, i32* %437, align 4
  %439 = add i32 %123, %433
  %440 = sub i32 %439, %436
  %441 = sub i32 %440, %438
  %442 = icmp slt i32 %441, 0
  br i1 %442, label %443, label %466

443:                                              ; preds = %431
  %444 = zext i8 %4 to i32
  %445 = icmp eq i8 %4, -128
  br i1 %445, label %466, label %446

446:                                              ; preds = %443
  %447 = and i32 %444, 32
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %454, label %449

449:                                              ; preds = %446
  %450 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %451 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %451, align 4
  %452 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %452, align 4
  %453 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %453, align 1
  store i8 %25, i8* %450, align 4
  br label %973

454:                                              ; preds = %446
  %455 = icmp sgt i32 %433, %436
  br i1 %455, label %466, label %456

456:                                              ; preds = %454
  %457 = and i32 %444, 64
  %458 = icmp ne i32 %457, 0
  %459 = icmp slt i32 %441, -1
  %460 = or i1 %458, %459
  br i1 %460, label %461, label %466

461:                                              ; preds = %456
  store i32 0, i32* %12, align 4
  %462 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %19, i8* %462, align 4
  %463 = load i32, i32* %432, align 4
  %464 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %463, i32* %464, align 4
  %465 = load i32, i32* %434, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* %3, i8* %119, i32 %465, i32* nonnull %12, i32* %5) #8
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %12, i32* %5)
  br label %973

466:                                              ; preds = %454, %456, %443, %431
  %467 = add nsw i32 %17, 1
  %468 = icmp slt i32 %467, 50
  %469 = sext i32 %467 to i64
  br i1 %468, label %470, label %476

470:                                              ; preds = %466
  %471 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %469
  %472 = load i8, i8* %471, align 1
  %473 = zext i8 %472 to i64
  %474 = or i64 %469, 1
  %475 = icmp eq i64 %474, 49
  br i1 %475, label %476, label %486

476:                                              ; preds = %466, %470
  %477 = phi i64 [ %473, %470 ], [ %469, %466 ]
  %478 = tail call noalias i8* @uprv_malloc_69(i64 %477) #9
  %479 = icmp eq i8* %478, null
  br i1 %479, label %483, label %480

480:                                              ; preds = %476
  %481 = load i32, i32* %437, align 4
  %482 = load i32, i32* %434, align 4
  br label %486

483:                                              ; preds = %476
  %484 = load i32, i32* %5, align 4
  %485 = or i32 %484, 16
  store i32 %485, i32* %5, align 4
  br label %973

486:                                              ; preds = %480, %470
  %487 = phi i32 [ %123, %470 ], [ %482, %480 ]
  %488 = phi i32 [ %438, %470 ], [ %481, %480 ]
  %489 = phi i64 [ %473, %470 ], [ %477, %480 ]
  %490 = phi i8* [ null, %470 ], [ %478, %480 ]
  %491 = phi i8* [ %13, %470 ], [ %478, %480 ]
  %492 = add nsw i32 %488, %17
  %493 = add nsw i32 %492, -1
  %494 = icmp slt i32 %487, %492
  %495 = select i1 %494, i32 %493, i32 %487
  %496 = icmp slt i32 %495, 50
  br i1 %496, label %497, label %502

497:                                              ; preds = %486
  %498 = sext i32 %495 to i64
  %499 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %498
  %500 = load i8, i8* %499, align 1
  %501 = zext i8 %500 to i32
  br label %502

502:                                              ; preds = %486, %497
  %503 = phi i32 [ %501, %497 ], [ %495, %486 ]
  %504 = add nuw nsw i32 %503, 2
  %505 = zext i8 %4 to i32
  %506 = icmp slt i8 %4, 0
  %507 = add nuw nsw i32 %503, 3
  %508 = select i1 %506, i32 %504, i32 %507
  %509 = icmp ugt i32 %508, 72
  br i1 %509, label %510, label %520

510:                                              ; preds = %502
  %511 = add nuw nsw i32 %508, 1
  %512 = sext i32 %511 to i64
  %513 = tail call noalias i8* @uprv_malloc_69(i64 %512) #9
  %514 = icmp eq i8* %513, null
  br i1 %514, label %517, label %515

515:                                              ; preds = %510
  %516 = load i32, i32* %434, align 4
  br label %520

517:                                              ; preds = %510
  %518 = load i32, i32* %5, align 4
  %519 = or i32 %518, 16
  store i32 %519, i32* %5, align 4
  br label %970

520:                                              ; preds = %515, %502
  %521 = phi i32 [ %487, %502 ], [ %516, %515 ]
  %522 = phi i8* [ %14, %502 ], [ %513, %515 ]
  %523 = phi i8* [ null, %502 ], [ %513, %515 ]
  %524 = sext i32 %508 to i64
  %525 = getelementptr inbounds i8, i8* %522, i64 %524
  %526 = getelementptr inbounds i8, i8* %525, i64 -1
  %527 = icmp slt i32 %521, 50
  br i1 %527, label %528, label %533

528:                                              ; preds = %520
  %529 = sext i32 %521 to i64
  %530 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %529
  %531 = load i8, i8* %530, align 1
  %532 = zext i8 %531 to i32
  br label %533

533:                                              ; preds = %520, %528
  %534 = phi i32 [ %532, %528 ], [ %521, %520 ]
  %535 = sext i32 %534 to i64
  %536 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %535
  %537 = getelementptr inbounds i8, i8* %536, i64 -1
  %538 = icmp ult i8* %537, %119
  br i1 %538, label %539, label %542

539:                                              ; preds = %542, %533
  %540 = phi i8* [ %526, %533 ], [ %546, %542 ]
  %541 = icmp ult i8* %540, %522
  br i1 %541, label %553, label %549

542:                                              ; preds = %533, %542
  %543 = phi i8* [ %547, %542 ], [ %537, %533 ]
  %544 = phi i8* [ %546, %542 ], [ %526, %533 ]
  %545 = load i8, i8* %543, align 1
  store i8 %545, i8* %544, align 1
  %546 = getelementptr inbounds i8, i8* %544, i64 -1
  %547 = getelementptr inbounds i8, i8* %543, i64 -1
  %548 = icmp ult i8* %547, %119
  br i1 %548, label %539, label %542

549:                                              ; preds = %539, %549
  %550 = phi i8* [ %551, %549 ], [ %540, %539 ]
  store i8 0, i8* %550, align 1
  %551 = getelementptr inbounds i8, i8* %550, i64 -1
  %552 = icmp ult i8* %551, %522
  br i1 %552, label %553, label %549

553:                                              ; preds = %549, %539
  %554 = load i32, i32* %437, align 4
  %555 = icmp slt i32 %554, 50
  br i1 %555, label %556, label %561

556:                                              ; preds = %553
  %557 = sext i32 %554 to i64
  %558 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %557
  %559 = load i8, i8* %558, align 1
  %560 = zext i8 %559 to i32
  br label %561

561:                                              ; preds = %553, %556
  %562 = phi i32 [ %560, %556 ], [ %554, %553 ]
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 %563
  %565 = getelementptr inbounds i8, i8* %564, i64 -1
  %566 = load i8, i8* %565, align 1
  %567 = zext i8 %566 to i32
  %568 = icmp sgt i32 %562, 1
  %569 = zext i1 %568 to i32
  %570 = add nuw nsw i32 %569, %567
  %571 = mul nuw nsw i32 %567, 10
  br i1 %568, label %572, label %580

572:                                              ; preds = %561
  %573 = getelementptr inbounds i8, i8* %564, i64 -2
  %574 = load i8, i8* %573, align 1
  %575 = zext i8 %574 to i32
  %576 = icmp ne i32 %562, 2
  %577 = zext i1 %576 to i32
  %578 = or i32 %571, %577
  %579 = add nuw nsw i32 %578, %575
  br label %580

580:                                              ; preds = %572, %561
  %581 = phi i32 [ %571, %561 ], [ %579, %572 ]
  %582 = load i8, i8* %526, align 1
  %583 = icmp ult i8 %582, 10
  br i1 %583, label %586, label %584

584:                                              ; preds = %580
  %585 = zext i8 %582 to i32
  br label %589

586:                                              ; preds = %589, %580
  %587 = phi i32 [ %441, %580 ], [ %592, %589 ]
  %588 = icmp ult i8 %566, 10
  br i1 %588, label %603, label %596

589:                                              ; preds = %584, %589
  %590 = phi i32* [ getelementptr inbounds ([10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 1), %584 ], [ %593, %589 ]
  %591 = phi i32 [ %441, %584 ], [ %592, %589 ]
  %592 = add nsw i32 %591, -1
  %593 = getelementptr inbounds i32, i32* %590, i64 1
  %594 = load i32, i32* %593, align 4
  %595 = icmp ugt i32 %594, %585
  br i1 %595, label %586, label %589

596:                                              ; preds = %586, %596
  %597 = phi i32* [ %600, %596 ], [ getelementptr inbounds ([10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 1), %586 ]
  %598 = phi i32 [ %599, %596 ], [ %587, %586 ]
  %599 = add nsw i32 %598, 1
  %600 = getelementptr inbounds i32, i32* %597, i64 1
  %601 = load i32, i32* %600, align 4
  %602 = icmp ugt i32 %601, %567
  br i1 %602, label %603, label %596

603:                                              ; preds = %596, %586
  %604 = phi i32 [ %587, %586 ], [ %599, %596 ]
  br i1 %506, label %630, label %605

605:                                              ; preds = %603
  %606 = load i32, i32* %434, align 4
  %607 = icmp slt i32 %606, 50
  br i1 %607, label %608, label %613

608:                                              ; preds = %605
  %609 = sext i32 %606 to i64
  %610 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %609
  %611 = load i8, i8* %610, align 1
  %612 = zext i8 %611 to i32
  br label %613

613:                                              ; preds = %605, %608
  %614 = phi i32 [ %612, %608 ], [ %606, %605 ]
  %615 = icmp slt i32 %604, 0
  %616 = sub nsw i32 0, %604
  %617 = select i1 %615, i32 %616, i32 1
  %618 = call fastcc i32 @_ZL15decShiftToLeastPhii(i8* %522, i32 %508, i32 %617)
  %619 = add nsw i32 %617, %604
  %620 = sub i32 %508, %617
  %621 = sub i32 %620, %614
  %622 = icmp sgt i32 %617, 0
  br i1 %622, label %623, label %638

623:                                              ; preds = %613
  %624 = add nsw i32 %617, -1
  %625 = zext i32 %624 to i64
  %626 = xor i64 %625, -1
  %627 = add nsw i64 %626, %524
  %628 = getelementptr i8, i8* %522, i64 %627
  %629 = zext i32 %617 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %628, i8 0, i64 %629, i1 false)
  br label %638

630:                                              ; preds = %603
  %631 = load i32, i32* %432, align 4
  %632 = load i32, i32* %435, align 4
  %633 = sub nsw i32 %631, %632
  %634 = icmp ult i8 %582, %566
  br i1 %634, label %635, label %638

635:                                              ; preds = %630
  %636 = add nsw i32 %508, -1
  %637 = add nsw i32 %604, -1
  br label %638

638:                                              ; preds = %623, %613, %630, %635
  %639 = phi i32 [ %636, %635 ], [ %504, %630 ], [ %507, %613 ], [ %507, %623 ]
  %640 = phi i32 [ 0, %635 ], [ 0, %630 ], [ %621, %613 ], [ %621, %623 ]
  %641 = phi i32 [ %637, %635 ], [ %604, %630 ], [ %619, %613 ], [ %619, %623 ]
  %642 = phi i32 [ %633, %635 ], [ %633, %630 ], [ 0, %613 ], [ 0, %623 ]
  %643 = getelementptr inbounds i8, i8* %491, i64 %489
  %644 = getelementptr inbounds i8, i8* %643, i64 -1
  %645 = and i32 %505, 80
  %646 = icmp eq i32 %645, 0
  %647 = xor i1 %506, true
  %648 = sext i32 %639 to i64
  br label %649

649:                                              ; preds = %770, %638
  %650 = phi i64 [ %771, %770 ], [ %648, %638 ]
  %651 = phi i8* [ %756, %770 ], [ %644, %638 ]
  %652 = phi i32 [ %757, %770 ], [ 0, %638 ]
  %653 = phi i32 [ %758, %770 ], [ 0, %638 ]
  %654 = phi i8* [ %679, %770 ], [ %526, %638 ]
  %655 = phi i32 [ %733, %770 ], [ %508, %638 ]
  %656 = phi i32 [ %772, %770 ], [ %641, %638 ]
  %657 = sub nsw i64 %650, %563
  %658 = getelementptr inbounds i8, i8* %522, i64 %657
  %659 = trunc i64 %650 to i32
  %660 = trunc i64 %657 to i32
  br label %661

661:                                              ; preds = %723, %649
  %662 = phi i8* [ %654, %649 ], [ %679, %723 ]
  %663 = phi i32 [ %655, %649 ], [ %680, %723 ]
  %664 = phi i8 [ 0, %649 ], [ %728, %723 ]
  %665 = load i8, i8* %662, align 1
  %666 = icmp eq i8 %665, 0
  %667 = icmp ugt i8* %662, %522
  %668 = and i1 %667, %666
  br i1 %668, label %669, label %678

669:                                              ; preds = %661, %669
  %670 = phi i32 [ %672, %669 ], [ %663, %661 ]
  %671 = phi i8* [ %673, %669 ], [ %662, %661 ]
  %672 = add nsw i32 %670, -1
  %673 = getelementptr inbounds i8, i8* %671, i64 -1
  %674 = load i8, i8* %673, align 1
  %675 = icmp eq i8 %674, 0
  %676 = icmp ugt i8* %673, %522
  %677 = and i1 %676, %675
  br i1 %677, label %669, label %678

678:                                              ; preds = %669, %661
  %679 = phi i8* [ %662, %661 ], [ %673, %669 ]
  %680 = phi i32 [ %663, %661 ], [ %672, %669 ]
  %681 = phi i8 [ %665, %661 ], [ %674, %669 ]
  %682 = sext i32 %680 to i64
  %683 = icmp sgt i64 %650, %682
  br i1 %683, label %732, label %684

684:                                              ; preds = %678
  %685 = icmp eq i32 %680, %659
  br i1 %685, label %686, label %715

686:                                              ; preds = %684, %698
  %687 = phi i8* [ %699, %698 ], [ %679, %684 ]
  %688 = phi i8* [ %700, %698 ], [ %565, %684 ]
  %689 = icmp ult i8* %688, %77
  br i1 %689, label %692, label %690

690:                                              ; preds = %686
  %691 = load i8, i8* %688, align 1
  br label %692

692:                                              ; preds = %686, %690
  %693 = phi i8 [ %691, %690 ], [ 0, %686 ]
  %694 = load i8, i8* %687, align 1
  %695 = icmp ne i8 %694, %693
  %696 = icmp eq i8* %687, %522
  %697 = or i1 %696, %695
  br i1 %697, label %701, label %698

698:                                              ; preds = %692
  %699 = getelementptr inbounds i8, i8* %687, i64 -1
  %700 = getelementptr inbounds i8, i8* %688, i64 -1
  br label %686

701:                                              ; preds = %692
  %702 = icmp ult i8 %694, %693
  br i1 %702, label %732, label %703

703:                                              ; preds = %701
  %704 = icmp eq i8 %694, %693
  br i1 %704, label %705, label %707

705:                                              ; preds = %703
  %706 = add i8 %664, 1
  store i8 0, i8* %522, align 1
  br label %732

707:                                              ; preds = %703
  %708 = zext i8 %681 to i32
  %709 = mul nuw nsw i32 %708, 10
  %710 = getelementptr inbounds i8, i8* %679, i64 -1
  %711 = load i8, i8* %710, align 1
  %712 = zext i8 %711 to i32
  %713 = add nuw nsw i32 %709, %712
  %714 = sdiv i32 %713, %581
  br label %723

715:                                              ; preds = %684
  %716 = zext i8 %681 to i32
  %717 = mul nuw nsw i32 %716, 10
  %718 = getelementptr inbounds i8, i8* %679, i64 -1
  %719 = load i8, i8* %718, align 1
  %720 = zext i8 %719 to i32
  %721 = add nuw nsw i32 %717, %720
  %722 = udiv i32 %721, %570
  br label %723

723:                                              ; preds = %707, %715
  %724 = phi i32 [ %714, %707 ], [ %722, %715 ]
  %725 = icmp eq i32 %724, 0
  %726 = select i1 %725, i32 1, i32 %724
  %727 = trunc i32 %726 to i8
  %728 = add i8 %664, %727
  %729 = sub nsw i32 %680, %660
  %730 = sub nsw i32 0, %726
  %731 = call fastcc i32 @_ZL13decUnitAddSubPKhiS0_iiPhi(i8* %658, i32 %729, i8* %77, i32 %562, i32 0, i8* %658, i32 %730)
  br label %661

732:                                              ; preds = %701, %678, %705
  %733 = phi i32 [ 1, %705 ], [ %680, %678 ], [ %680, %701 ]
  %734 = phi i8 [ %706, %705 ], [ %664, %678 ], [ %664, %701 ]
  %735 = icmp eq i32 %652, 0
  %736 = icmp eq i8 %734, 0
  %737 = and i1 %735, %736
  br i1 %737, label %755, label %738

738:                                              ; preds = %732
  store i8 %734, i8* %651, align 1
  %739 = add nsw i32 %653, 1
  br i1 %735, label %740, label %750

740:                                              ; preds = %738
  %741 = zext i8 %734 to i32
  %742 = icmp ult i8 %734, 10
  br i1 %742, label %750, label %743

743:                                              ; preds = %740, %743
  %744 = phi i32* [ %747, %743 ], [ getelementptr inbounds ([10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 1), %740 ]
  %745 = phi i32 [ %746, %743 ], [ %739, %740 ]
  %746 = add nsw i32 %745, 1
  %747 = getelementptr inbounds i32, i32* %744, i64 1
  %748 = load i32, i32* %747, align 4
  %749 = icmp ugt i32 %748, %741
  br i1 %749, label %750, label %743

750:                                              ; preds = %743, %740, %738
  %751 = phi i32 [ %739, %738 ], [ %739, %740 ], [ %746, %743 ]
  %752 = add nsw i32 %652, 1
  %753 = getelementptr inbounds i8, i8* %651, i64 -1
  %754 = icmp sgt i32 %751, %17
  br i1 %754, label %773, label %755

755:                                              ; preds = %732, %750
  %756 = phi i8* [ %753, %750 ], [ %651, %732 ]
  %757 = phi i32 [ %752, %750 ], [ 0, %732 ]
  %758 = phi i32 [ %751, %750 ], [ %653, %732 ]
  %759 = load i8, i8* %522, align 1
  %760 = icmp eq i8 %759, 0
  %761 = icmp eq i32 %733, 1
  %762 = and i1 %761, %760
  br i1 %762, label %763, label %767

763:                                              ; preds = %755
  %764 = icmp sgt i32 %656, %642
  %765 = or i1 %764, %647
  %766 = and i1 %646, %765
  br i1 %766, label %767, label %773

767:                                              ; preds = %763, %755
  %768 = icmp ne i32 %656, 0
  %769 = or i1 %506, %768
  br i1 %769, label %770, label %773

770:                                              ; preds = %767
  %771 = add i64 %650, -1
  %772 = add nsw i32 %656, -1
  br label %649

773:                                              ; preds = %767, %763, %750
  %774 = phi i8* [ %756, %767 ], [ %756, %763 ], [ %753, %750 ]
  %775 = phi i32 [ %757, %767 ], [ %757, %763 ], [ %752, %750 ]
  %776 = phi i32 [ %758, %767 ], [ %758, %763 ], [ %751, %750 ]
  %777 = icmp eq i32 %775, 0
  br i1 %777, label %778, label %779

778:                                              ; preds = %773
  store i8 0, i8* %774, align 1
  br label %781

779:                                              ; preds = %773
  %780 = getelementptr inbounds i8, i8* %774, i64 1
  br label %781

781:                                              ; preds = %779, %778
  %782 = phi i8* [ %774, %778 ], [ %780, %779 ]
  %783 = phi i32 [ 1, %778 ], [ %776, %779 ]
  store i32 0, i32* %12, align 4
  br i1 %506, label %784, label %790

784:                                              ; preds = %781
  %785 = load i8, i8* %522, align 1
  %786 = icmp ne i8 %785, 0
  %787 = icmp sgt i32 %733, 1
  %788 = or i1 %787, %786
  br i1 %788, label %789, label %959

789:                                              ; preds = %784
  store i32 1, i32* %12, align 4
  br label %959

790:                                              ; preds = %781
  %791 = add nsw i32 %783, %656
  %792 = icmp sgt i32 %791, %17
  br i1 %792, label %793, label %796

793:                                              ; preds = %790
  %794 = load i32, i32* %5, align 4
  %795 = or i32 %794, 4
  store i32 %795, i32* %5, align 4
  br label %967

796:                                              ; preds = %790
  br i1 %646, label %959, label %797

797:                                              ; preds = %796
  %798 = load i8, i8* %18, align 4
  %799 = load i8, i8* %522, align 1
  %800 = icmp eq i8 %799, 0
  %801 = icmp eq i32 %733, 1
  %802 = and i1 %801, %800
  br i1 %802, label %803, label %813

803:                                              ; preds = %797
  %804 = load i32, i32* %432, align 4
  %805 = load i32, i32* %435, align 4
  %806 = icmp slt i32 %805, %804
  %807 = select i1 %806, i32 %805, i32 %804
  %808 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %809 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %810 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %810, align 4
  %811 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %811, align 1
  store i32 %807, i32* %809, align 4
  %812 = and i8 %798, -128
  store i8 %812, i8* %808, align 4
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %12, i32* %5)
  br label %967

813:                                              ; preds = %797
  %814 = load i8, i8* %782, align 1
  %815 = and i8 %814, 1
  %816 = add nsw i32 %656, %640
  %817 = load i32, i32* %432, align 4
  %818 = sub i32 %816, %817
  %819 = load i32, i32* %435, align 4
  %820 = add nsw i32 %818, %819
  %821 = icmp slt i32 %640, %820
  %822 = select i1 %821, i32 %640, i32 %820
  %823 = call fastcc i32 @_ZL15decShiftToLeastPhii(i8* %522, i32 %733, i32 %822)
  %824 = icmp slt i32 %823, 1
  br i1 %824, label %843, label %825

825:                                              ; preds = %813
  %826 = add nsw i32 %823, -1
  %827 = sext i32 %826 to i64
  %828 = getelementptr inbounds i8, i8* %522, i64 %827
  br label %829

829:                                              ; preds = %836, %825
  %830 = phi i32 [ %837, %836 ], [ %823, %825 ]
  %831 = phi i8* [ %838, %836 ], [ %828, %825 ]
  %832 = load i8, i8* %831, align 1
  %833 = icmp ne i8 %832, 0
  %834 = icmp eq i32 %830, 1
  %835 = or i1 %834, %833
  br i1 %835, label %840, label %836

836:                                              ; preds = %829
  %837 = add nsw i32 %830, -1
  %838 = getelementptr inbounds i8, i8* %831, i64 -1
  %839 = icmp ult i8* %838, %522
  br i1 %839, label %840, label %829

840:                                              ; preds = %829, %836
  %841 = phi i32 [ %837, %836 ], [ %830, %829 ]
  %842 = icmp slt i32 %841, 50
  br i1 %842, label %843, label %849

843:                                              ; preds = %813, %840
  %844 = phi i32 [ %841, %840 ], [ %823, %813 ]
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %845
  %847 = load i8, i8* %846, align 1
  %848 = zext i8 %847 to i32
  br label %849

849:                                              ; preds = %840, %843
  %850 = phi i32 [ %844, %843 ], [ %841, %840 ]
  %851 = phi i32 [ %848, %843 ], [ %841, %840 ]
  %852 = load i32, i32* %432, align 4
  %853 = load i32, i32* %435, align 4
  %854 = icmp slt i32 %853, %852
  %855 = select i1 %854, i32 %853, i32 %852
  %856 = and i32 %505, 16
  %857 = icmp eq i32 %856, 0
  br i1 %857, label %959, label %858

858:                                              ; preds = %849
  %859 = call fastcc i32 @_ZL13decUnitAddSubPKhiS0_iiPhi(i8* %522, i32 %851, i8* %522, i32 %851, i32 0, i8* %522, i32 1)
  %860 = load i32, i32* %437, align 4
  %861 = icmp slt i32 %860, 50
  br i1 %861, label %862, label %867

862:                                              ; preds = %858
  %863 = sext i32 %860 to i64
  %864 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %863
  %865 = load i8, i8* %864, align 1
  %866 = zext i8 %865 to i32
  br label %867

867:                                              ; preds = %858, %862
  %868 = phi i32 [ %866, %862 ], [ %860, %858 ]
  %869 = load i32, i32* %435, align 4
  %870 = sub nsw i32 %869, %855
  %871 = call fastcc i32 @_ZL14decUnitComparePKhiS0_ii(i8* %522, i32 %859, i8* %77, i32 %868, i32 %870)
  %872 = icmp eq i32 %871, -2147483648
  br i1 %872, label %877, label %873

873:                                              ; preds = %867
  %874 = sext i32 %859 to i64
  %875 = getelementptr inbounds i8, i8* %522, i64 %874
  %876 = icmp sgt i32 %859, 0
  br i1 %876, label %880, label %893

877:                                              ; preds = %867
  %878 = load i32, i32* %5, align 4
  %879 = or i32 %878, 16
  store i32 %879, i32* %5, align 4
  br label %967

880:                                              ; preds = %873, %890
  %881 = phi i8* [ %891, %890 ], [ %522, %873 ]
  %882 = load i8, i8* %881, align 1
  %883 = and i8 %882, 1
  %884 = lshr i8 %882, 1
  store i8 %884, i8* %881, align 1
  %885 = icmp eq i8 %883, 0
  br i1 %885, label %890, label %886

886:                                              ; preds = %880
  %887 = getelementptr inbounds i8, i8* %881, i64 -1
  %888 = load i8, i8* %887, align 1
  %889 = add i8 %888, 5
  store i8 %889, i8* %887, align 1
  br label %890

890:                                              ; preds = %880, %886
  %891 = getelementptr inbounds i8, i8* %881, i64 1
  %892 = icmp ult i8* %891, %875
  br i1 %892, label %880, label %893

893:                                              ; preds = %890, %873
  %894 = icmp sgt i32 %871, 0
  br i1 %894, label %899, label %895

895:                                              ; preds = %893
  %896 = icmp eq i32 %871, 0
  %897 = icmp ne i8 %815, 0
  %898 = and i1 %897, %896
  br i1 %898, label %899, label %959

899:                                              ; preds = %895, %893
  %900 = icmp eq i32 %783, %17
  br i1 %900, label %901, label %923

901:                                              ; preds = %899
  %902 = icmp sgt i32 %17, 1
  %903 = load i8, i8* %782, align 1
  br i1 %902, label %904, label %909

904:                                              ; preds = %901, %918
  %905 = phi i8 [ %922, %918 ], [ %903, %901 ]
  %906 = phi i8* [ %920, %918 ], [ %782, %901 ]
  %907 = phi i32 [ %919, %918 ], [ %17, %901 ]
  %908 = icmp eq i8 %905, 9
  br i1 %908, label %918, label %923

909:                                              ; preds = %918, %901
  %910 = phi i32 [ %17, %901 ], [ %919, %918 ]
  %911 = phi i8 [ %903, %901 ], [ %922, %918 ]
  %912 = zext i8 %911 to i32
  %913 = sext i32 %910 to i64
  %914 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %913
  %915 = load i32, i32* %914, align 4
  %916 = add i32 %915, -1
  %917 = icmp eq i32 %916, %912
  br i1 %917, label %956, label %923

918:                                              ; preds = %904
  %919 = add nsw i32 %907, -1
  %920 = getelementptr inbounds i8, i8* %906, i64 1
  %921 = icmp sgt i32 %919, 1
  %922 = load i8, i8* %920, align 1
  br i1 %921, label %904, label %909

923:                                              ; preds = %904, %899, %909
  %924 = load i32, i32* %435, align 4
  %925 = sub nsw i32 %924, %855
  %926 = load i32, i32* %437, align 4
  %927 = icmp slt i32 %926, 50
  br i1 %927, label %928, label %933

928:                                              ; preds = %923
  %929 = sext i32 %926 to i64
  %930 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %929
  %931 = load i8, i8* %930, align 1
  %932 = zext i8 %931 to i32
  br label %933

933:                                              ; preds = %923, %928
  %934 = phi i32 [ %932, %928 ], [ %926, %923 ]
  %935 = call fastcc i32 @_ZL13decUnitAddSubPKhiS0_iiPhi(i8* %522, i32 %851, i8* %77, i32 %934, i32 %925, i8* %522, i32 -1)
  %936 = sub nsw i32 0, %935
  %937 = icmp sgt i32 %935, -1
  br i1 %937, label %953, label %938

938:                                              ; preds = %933
  %939 = xor i32 %935, -1
  %940 = sext i32 %939 to i64
  %941 = getelementptr inbounds i8, i8* %522, i64 %940
  br label %942

942:                                              ; preds = %949, %938
  %943 = phi i32 [ %950, %949 ], [ %936, %938 ]
  %944 = phi i8* [ %951, %949 ], [ %941, %938 ]
  %945 = load i8, i8* %944, align 1
  %946 = icmp ne i8 %945, 0
  %947 = icmp eq i32 %943, 1
  %948 = or i1 %947, %946
  br i1 %948, label %953, label %949

949:                                              ; preds = %942
  %950 = add nsw i32 %943, -1
  %951 = getelementptr inbounds i8, i8* %944, i64 -1
  %952 = icmp ult i8* %951, %522
  br i1 %952, label %953, label %942

953:                                              ; preds = %949, %942, %933
  %954 = phi i32 [ %936, %933 ], [ %943, %942 ], [ %950, %949 ]
  %955 = xor i8 %798, -128
  br label %959

956:                                              ; preds = %909
  %957 = load i32, i32* %5, align 4
  %958 = or i32 %957, 4
  store i32 %958, i32* %5, align 4
  br label %967

959:                                              ; preds = %895, %953, %849, %796, %789, %784
  %960 = phi i8* [ %782, %789 ], [ %782, %784 ], [ %782, %796 ], [ %522, %849 ], [ %522, %953 ], [ %522, %895 ]
  %961 = phi i32 [ %783, %789 ], [ %783, %784 ], [ %783, %796 ], [ %850, %849 ], [ %954, %953 ], [ %850, %895 ]
  %962 = phi i32 [ %656, %789 ], [ %656, %784 ], [ %656, %796 ], [ %855, %849 ], [ %855, %953 ], [ %855, %895 ]
  %963 = phi i8 [ %25, %789 ], [ %25, %784 ], [ %25, %796 ], [ %798, %849 ], [ %955, %953 ], [ %798, %895 ]
  %964 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %962, i32* %964, align 4
  %965 = and i8 %963, -128
  %966 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %965, i8* %966, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* %3, i8* %960, i32 %961, i32* nonnull %12, i32* %5)
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %12, i32* %5)
  br label %967

967:                                              ; preds = %956, %877, %803, %959, %793
  %968 = icmp eq i8* %523, null
  br i1 %968, label %970, label %969

969:                                              ; preds = %967
  call void @uprv_free_69(i8* nonnull %523) #8
  br label %970

970:                                              ; preds = %517, %967, %969
  %971 = icmp eq i8* %490, null
  br i1 %971, label %973, label %972

972:                                              ; preds = %970
  call void @uprv_free_69(i8* nonnull %490) #8
  br label %973

973:                                              ; preds = %32, %42, %45, %75, %98, %113, %115, %274, %280, %430, %426, %483, %449, %461, %970, %972
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 73, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 47, i8* nonnull %13) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberDivideInteger_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL11decDivideOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 32, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberExp_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  store i32 0, i32* %4, align 4
  %6 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 999999
  br i1 %8, label %38, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 999999
  br i1 %12, label %38, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, -999999
  br i1 %16, label %38, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 999999
  br i1 %20, label %38, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %19, 1999996
  %25 = add i32 %24, %23
  %26 = icmp ugt i32 %25, 2999996
  br i1 %26, label %27, label %40

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 0
  %31 = icmp eq i32 %19, 1
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %38

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %35 = load i8, i8* %34, align 4
  %36 = and i8 %35, 112
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %13, %9, %3, %33, %27, %17
  %39 = phi i32 [ 64, %13 ], [ 64, %9 ], [ 64, %3 ], [ 128, %33 ], [ 128, %27 ], [ 128, %17 ]
  store i32 %39, i32* %4, align 4
  br label %43

40:                                               ; preds = %33, %21
  call fastcc void @_ZL8decExpOpP9decNumberPKS_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decContext* %2, i32* nonnull %4)
  %41 = load i32, i32* %4, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %60, label %43

43:                                               ; preds = %38, %40
  %44 = phi i32 [ %39, %38 ], [ %41, %40 ]
  %45 = and i32 %44, 221
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %43
  %48 = and i32 %44, 1073741824
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = and i32 %44, -1073741825
  br label %57

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %55, align 4
  %56 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %56, align 1
  store i8 32, i8* %53, align 4
  br label %57

57:                                               ; preds = %43, %50, %52
  %58 = phi i32 [ %51, %50 ], [ %44, %52 ], [ %44, %43 ]
  %59 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 %58) #8
  br label %60

60:                                               ; preds = %40, %57
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL8decExpOpP9decNumberPKS_P10decContextPj(%struct.decNumber*, %struct.decNumber*, %struct.decContext* nocapture readonly, i32* nocapture) unnamed_addr #3 {
  %5 = bitcast %struct.decNumber* %0 to i8*
  %6 = ptrtoint %struct.decNumber* %1 to i64
  %7 = bitcast %struct.decNumber* %1 to i8*
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.decContext, align 4
  %11 = alloca %struct.decContext, align 4
  %12 = alloca %struct.decContext, align 4
  %13 = alloca [7 x %struct.decNumber], align 16
  %14 = alloca [8 x %struct.decNumber], align 16
  %15 = alloca [15 x %struct.decNumber], align 16
  %16 = alloca [3 x %struct.decNumber], align 16
  %17 = alloca %struct.decNumber, align 4
  %18 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #8
  store i32 0, i32* %8, align 4
  %19 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #8
  store i32 -1431655766, i32* %9, align 4
  %20 = bitcast %struct.decContext* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -86, i64 28, i1 false)
  %21 = bitcast %struct.decContext* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 -86, i64 28, i1 false)
  %22 = bitcast %struct.decContext* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -86, i64 28, i1 false)
  %23 = bitcast [7 x %struct.decNumber]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 84, i8* nonnull %23) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 84, i1 false)
  %24 = bitcast [8 x %struct.decNumber]* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %24) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 96, i1 false)
  %25 = getelementptr inbounds [8 x %struct.decNumber], [8 x %struct.decNumber]* %14, i64 0, i64 0
  %26 = bitcast [15 x %struct.decNumber]* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 180, i8* nonnull %26) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 -86, i64 180, i1 false)
  %27 = getelementptr inbounds [15 x %struct.decNumber], [15 x %struct.decNumber]* %15, i64 0, i64 0
  %28 = bitcast [3 x %struct.decNumber]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %28) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 36, i1 false)
  %29 = getelementptr inbounds [3 x %struct.decNumber], [3 x %struct.decNumber]* %16, i64 0, i64 0
  %30 = bitcast %struct.decNumber* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %30) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %30, i8 -86, i64 12, i1 false)
  %31 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %32 = load i8, i8* %31, align 4
  %33 = zext i8 %32 to i32
  %34 = and i32 %33, 112
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %188, label %36

36:                                               ; preds = %4
  %37 = and i32 %33, 64
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %187, label %39

39:                                               ; preds = %36
  %40 = icmp slt i8 %32, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %44, align 4
  %45 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %45, align 1
  br label %744

46:                                               ; preds = %39
  %47 = icmp eq %struct.decNumber* %0, %1
  br i1 %47, label %744, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %32, i8* %49, align 4
  %50 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %51, i32* %52, align 4
  %53 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %57, i8* %58, align 1
  %59 = load i32, i32* %53, align 4
  %60 = icmp sgt i32 %59, 1
  br i1 %60, label %61, label %744

61:                                               ; preds = %48
  %62 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %63 = icmp slt i32 %59, 50
  %64 = sext i32 %59 to i64
  br i1 %63, label %65, label %69

65:                                               ; preds = %61
  %66 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  br label %69

69:                                               ; preds = %65, %61
  %70 = phi i64 [ %68, %65 ], [ %64, %61 ]
  %71 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %70
  %72 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %73 = add nsw i64 %70, 9
  %74 = getelementptr i8, i8* %7, i64 %73
  %75 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %76 = icmp ugt i8* %74, %75
  %77 = select i1 %76, i8* %74, i8* %75
  %78 = sub i64 -10, %6
  %79 = getelementptr i8, i8* %77, i64 %78
  %80 = ptrtoint i8* %79 to i64
  %81 = icmp ult i8* %79, inttoptr (i64 32 to i8*)
  br i1 %81, label %177, label %82

82:                                               ; preds = %69
  %83 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %84 = add nsw i64 %70, 9
  %85 = getelementptr i8, i8* %7, i64 %84
  %86 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %87 = icmp ugt i8* %85, %86
  %88 = select i1 %87, i8* %85, i8* %86
  %89 = ptrtoint i8* %88 to i64
  %90 = sub i64 %89, %6
  %91 = getelementptr i8, i8* %5, i64 %90
  %92 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %93 = icmp ult i8* %83, %88
  %94 = icmp ult i8* %92, %91
  %95 = and i1 %93, %94
  br i1 %95, label %177, label %96

96:                                               ; preds = %82
  %97 = and i64 %80, -32
  %98 = getelementptr i8, i8* %62, i64 %97
  %99 = getelementptr i8, i8* %72, i64 %97
  %100 = add i64 %97, -32
  %101 = lshr exact i64 %100, 5
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 3
  %104 = icmp ult i64 %100, 96
  br i1 %104, label %156, label %105

105:                                              ; preds = %96
  %106 = sub nsw i64 %102, %103
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %153, %107 ]
  %109 = phi i64 [ %106, %105 ], [ %154, %107 ]
  %110 = getelementptr i8, i8* %62, i64 %108
  %111 = getelementptr i8, i8* %72, i64 %108
  %112 = bitcast i8* %111 to <16 x i8>*
  %113 = load <16 x i8>, <16 x i8>* %112, align 1, !alias.scope !74
  %114 = getelementptr i8, i8* %111, i64 16
  %115 = bitcast i8* %114 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 1, !alias.scope !74
  %117 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %113, <16 x i8>* %117, align 1, !alias.scope !77, !noalias !74
  %118 = getelementptr i8, i8* %110, i64 16
  %119 = bitcast i8* %118 to <16 x i8>*
  store <16 x i8> %116, <16 x i8>* %119, align 1, !alias.scope !77, !noalias !74
  %120 = or i64 %108, 32
  %121 = getelementptr i8, i8* %62, i64 %120
  %122 = getelementptr i8, i8* %72, i64 %120
  %123 = bitcast i8* %122 to <16 x i8>*
  %124 = load <16 x i8>, <16 x i8>* %123, align 1, !alias.scope !74
  %125 = getelementptr i8, i8* %122, i64 16
  %126 = bitcast i8* %125 to <16 x i8>*
  %127 = load <16 x i8>, <16 x i8>* %126, align 1, !alias.scope !74
  %128 = bitcast i8* %121 to <16 x i8>*
  store <16 x i8> %124, <16 x i8>* %128, align 1, !alias.scope !77, !noalias !74
  %129 = getelementptr i8, i8* %121, i64 16
  %130 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %127, <16 x i8>* %130, align 1, !alias.scope !77, !noalias !74
  %131 = or i64 %108, 64
  %132 = getelementptr i8, i8* %62, i64 %131
  %133 = getelementptr i8, i8* %72, i64 %131
  %134 = bitcast i8* %133 to <16 x i8>*
  %135 = load <16 x i8>, <16 x i8>* %134, align 1, !alias.scope !74
  %136 = getelementptr i8, i8* %133, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  %138 = load <16 x i8>, <16 x i8>* %137, align 1, !alias.scope !74
  %139 = bitcast i8* %132 to <16 x i8>*
  store <16 x i8> %135, <16 x i8>* %139, align 1, !alias.scope !77, !noalias !74
  %140 = getelementptr i8, i8* %132, i64 16
  %141 = bitcast i8* %140 to <16 x i8>*
  store <16 x i8> %138, <16 x i8>* %141, align 1, !alias.scope !77, !noalias !74
  %142 = or i64 %108, 96
  %143 = getelementptr i8, i8* %62, i64 %142
  %144 = getelementptr i8, i8* %72, i64 %142
  %145 = bitcast i8* %144 to <16 x i8>*
  %146 = load <16 x i8>, <16 x i8>* %145, align 1, !alias.scope !74
  %147 = getelementptr i8, i8* %144, i64 16
  %148 = bitcast i8* %147 to <16 x i8>*
  %149 = load <16 x i8>, <16 x i8>* %148, align 1, !alias.scope !74
  %150 = bitcast i8* %143 to <16 x i8>*
  store <16 x i8> %146, <16 x i8>* %150, align 1, !alias.scope !77, !noalias !74
  %151 = getelementptr i8, i8* %143, i64 16
  %152 = bitcast i8* %151 to <16 x i8>*
  store <16 x i8> %149, <16 x i8>* %152, align 1, !alias.scope !77, !noalias !74
  %153 = add i64 %108, 128
  %154 = add i64 %109, -4
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %107, !llvm.loop !79

156:                                              ; preds = %107, %96
  %157 = phi i64 [ 0, %96 ], [ %153, %107 ]
  %158 = icmp eq i64 %103, 0
  br i1 %158, label %175, label %159

159:                                              ; preds = %156, %159
  %160 = phi i64 [ %172, %159 ], [ %157, %156 ]
  %161 = phi i64 [ %173, %159 ], [ %103, %156 ]
  %162 = getelementptr i8, i8* %62, i64 %160
  %163 = getelementptr i8, i8* %72, i64 %160
  %164 = bitcast i8* %163 to <16 x i8>*
  %165 = load <16 x i8>, <16 x i8>* %164, align 1, !alias.scope !74
  %166 = getelementptr i8, i8* %163, i64 16
  %167 = bitcast i8* %166 to <16 x i8>*
  %168 = load <16 x i8>, <16 x i8>* %167, align 1, !alias.scope !74
  %169 = bitcast i8* %162 to <16 x i8>*
  store <16 x i8> %165, <16 x i8>* %169, align 1, !alias.scope !77, !noalias !74
  %170 = getelementptr i8, i8* %162, i64 16
  %171 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %168, <16 x i8>* %171, align 1, !alias.scope !77, !noalias !74
  %172 = add i64 %160, 32
  %173 = add i64 %161, -1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %159, !llvm.loop !80

175:                                              ; preds = %159, %156
  %176 = icmp eq i64 %97, %80
  br i1 %176, label %744, label %177

177:                                              ; preds = %175, %82, %69
  %178 = phi i8* [ %62, %82 ], [ %62, %69 ], [ %98, %175 ]
  %179 = phi i8* [ %72, %82 ], [ %72, %69 ], [ %99, %175 ]
  br label %180

180:                                              ; preds = %177, %180
  %181 = phi i8* [ %185, %180 ], [ %178, %177 ]
  %182 = phi i8* [ %184, %180 ], [ %179, %177 ]
  %183 = load i8, i8* %182, align 1
  store i8 %183, i8* %181, align 1
  %184 = getelementptr inbounds i8, i8* %182, i64 1
  %185 = getelementptr inbounds i8, i8* %181, i64 1
  %186 = icmp ult i8* %184, %71
  br i1 %186, label %180, label %744, !llvm.loop !81

187:                                              ; preds = %36
  tail call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* null, %struct.decContext* %2, i32* %3)
  br label %744

188:                                              ; preds = %4
  %189 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %190 = load i8, i8* %189, align 1
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %192, label %201

192:                                              ; preds = %188
  %193 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %194, 1
  br i1 %195, label %196, label %201

196:                                              ; preds = %192
  %197 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %197, align 4
  %198 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %198, align 4
  %199 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %199, align 4
  %200 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 1, i8* %200, align 1
  br label %744

201:                                              ; preds = %192, %188
  %202 = getelementptr inbounds [3 x %struct.decNumber], [3 x %struct.decNumber]* %16, i64 0, i64 0, i32 2
  store i8 0, i8* %202, align 8
  %203 = getelementptr inbounds [3 x %struct.decNumber], [3 x %struct.decNumber]* %16, i64 0, i64 0, i32 1
  %204 = getelementptr inbounds [3 x %struct.decNumber], [3 x %struct.decNumber]* %16, i64 0, i64 0, i32 0
  store i32 1, i32* %204, align 16
  %205 = getelementptr inbounds [3 x %struct.decNumber], [3 x %struct.decNumber]* %16, i64 0, i64 0, i32 3, i64 0
  store i8 4, i8* %205, align 1
  %206 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = sub nsw i32 0, %207
  %209 = icmp slt i8 %32, 0
  %210 = xor i32 %207, -1
  %211 = select i1 %209, i32 %210, i32 %208
  store i32 %211, i32* %203, align 4
  %212 = call fastcc i32 @_ZL10decComparePK9decNumberS1_h(%struct.decNumber* nonnull %29, %struct.decNumber* %1, i8 zeroext 1)
  %213 = icmp eq i32 %212, -2147483648
  br i1 %213, label %214, label %217

214:                                              ; preds = %201
  %215 = load i32, i32* %3, align 4
  %216 = or i32 %215, 16
  store i32 %216, i32* %3, align 4
  br label %744

217:                                              ; preds = %201
  %218 = icmp sgt i32 %212, -1
  br i1 %218, label %219, label %230

219:                                              ; preds = %217
  %220 = load i32, i32* %206, align 4
  %221 = add nsw i32 %220, -1
  %222 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %222, align 4
  %223 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %223, align 4
  %224 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %224, align 4
  %225 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 1, i8* %225, align 1
  %226 = call fastcc i32 @_ZL14decShiftToMostPhii(i8* %225, i32 1, i32 %221)
  store i32 %226, i32* %224, align 4
  %227 = sub i32 1, %220
  store i32 %227, i32* %223, align 4
  %228 = load i32, i32* %3, align 4
  %229 = or i32 %228, 2080
  store i32 %229, i32* %3, align 4
  br label %744

230:                                              ; preds = %217
  %231 = call %struct.decContext* @uprv_decContextDefault_69(%struct.decContext* nonnull %10, i32 64) #8
  %232 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 1
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %struct.decContext, %struct.decContext* %10, i64 0, i32 1
  store i32 %233, i32* %234, align 4
  %235 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %struct.decContext, %struct.decContext* %10, i64 0, i32 2
  store i32 %236, i32* %237, align 4
  %238 = getelementptr inbounds %struct.decContext, %struct.decContext* %10, i64 0, i32 6
  store i8 0, i8* %238, align 4
  %239 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  %243 = add nsw i32 %242, %240
  %244 = icmp sgt i32 %243, 8
  br i1 %244, label %245, label %253

245:                                              ; preds = %230
  %246 = getelementptr inbounds [15 x %struct.decNumber], [15 x %struct.decNumber]* %15, i64 0, i64 0, i32 2
  store i8 0, i8* %246, align 8
  %247 = getelementptr inbounds [15 x %struct.decNumber], [15 x %struct.decNumber]* %15, i64 0, i64 0, i32 1
  store i32 0, i32* %247, align 4
  %248 = getelementptr inbounds [15 x %struct.decNumber], [15 x %struct.decNumber]* %15, i64 0, i64 0, i32 0
  store i32 1, i32* %248, align 16
  %249 = getelementptr inbounds [15 x %struct.decNumber], [15 x %struct.decNumber]* %15, i64 0, i64 0, i32 3, i64 0
  store i8 2, i8* %249, align 1
  %250 = load i8, i8* %31, align 4
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %646

252:                                              ; preds = %245
  store i32 -2, i32* %247, align 4
  br label %646

253:                                              ; preds = %230
  %254 = icmp sgt i32 %242, 8
  %255 = zext i1 %254 to i32
  %256 = sub nsw i32 8, %243
  %257 = icmp sgt i32 %256, %255
  %258 = select i1 %257, i32 %255, i32 %256
  %259 = add i32 %258, %242
  %260 = sub i32 0, %259
  %261 = add nsw i32 %258, %243
  %262 = icmp slt i32 %261, 0
  %263 = select i1 %262, i32 0, i32 %261
  %264 = select i1 %262, i32 %240, i32 %260
  %265 = icmp eq i32 %240, %264
  br i1 %265, label %417, label %266

266:                                              ; preds = %253
  %267 = getelementptr inbounds [7 x %struct.decNumber], [7 x %struct.decNumber]* %13, i64 0, i64 0
  %268 = icmp slt i32 %242, 50
  br i1 %268, label %269, label %274

269:                                              ; preds = %266
  %270 = sext i32 %242 to i64
  %271 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %270
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  br label %274

274:                                              ; preds = %266, %269
  %275 = phi i32 [ %273, %269 ], [ %242, %266 ]
  %276 = add nuw i32 %275, 11
  %277 = icmp ugt i32 %276, 84
  br i1 %277, label %278, label %283

278:                                              ; preds = %274
  %279 = zext i32 %276 to i64
  %280 = call noalias i8* @uprv_malloc_69(i64 %279) #9
  %281 = bitcast i8* %280 to %struct.decNumber*
  %282 = icmp eq i8* %280, null
  br i1 %282, label %414, label %283

283:                                              ; preds = %278, %274
  %284 = phi i8* [ null, %274 ], [ %280, %278 ]
  %285 = phi %struct.decNumber* [ null, %274 ], [ %281, %278 ]
  %286 = phi %struct.decNumber* [ %267, %274 ], [ %281, %278 ]
  %287 = icmp eq %struct.decNumber* %286, %1
  br i1 %287, label %410, label %288

288:                                              ; preds = %283
  %289 = load i8, i8* %31, align 4
  %290 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %286, i64 0, i32 2
  store i8 %289, i8* %290, align 4
  %291 = load i32, i32* %239, align 4
  %292 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %286, i64 0, i32 1
  store i32 %291, i32* %292, align 4
  %293 = load i32, i32* %241, align 4
  %294 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %286, i64 0, i32 0
  store i32 %293, i32* %294, align 4
  %295 = load i8, i8* %189, align 1
  %296 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %286, i64 0, i32 3, i64 0
  store i8 %295, i8* %296, align 1
  %297 = icmp sgt i32 %293, 1
  br i1 %297, label %298, label %410

298:                                              ; preds = %288
  %299 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %286, i64 0, i32 3, i64 1
  %300 = icmp slt i32 %293, 50
  %301 = sext i32 %293 to i64
  br i1 %300, label %302, label %306

302:                                              ; preds = %298
  %303 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %301
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i64
  br label %306

306:                                              ; preds = %302, %298
  %307 = phi i64 [ %305, %302 ], [ %301, %298 ]
  %308 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %307
  %309 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %310 = add nsw i64 %307, 9
  %311 = getelementptr i8, i8* %7, i64 %310
  %312 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %313 = icmp ugt i8* %311, %312
  %314 = select i1 %313, i8* %311, i8* %312
  %315 = sub i64 -10, %6
  %316 = getelementptr i8, i8* %314, i64 %315
  %317 = ptrtoint i8* %316 to i64
  %318 = icmp ult i8* %316, inttoptr (i64 32 to i8*)
  br i1 %318, label %400, label %319

319:                                              ; preds = %306
  %320 = and i64 %317, -32
  %321 = getelementptr i8, i8* %299, i64 %320
  %322 = getelementptr i8, i8* %309, i64 %320
  %323 = add i64 %320, -32
  %324 = lshr exact i64 %323, 5
  %325 = add nuw nsw i64 %324, 1
  %326 = and i64 %325, 3
  %327 = icmp ult i64 %323, 96
  br i1 %327, label %379, label %328

328:                                              ; preds = %319
  %329 = sub nsw i64 %325, %326
  br label %330

330:                                              ; preds = %330, %328
  %331 = phi i64 [ 0, %328 ], [ %376, %330 ]
  %332 = phi i64 [ %329, %328 ], [ %377, %330 ]
  %333 = getelementptr i8, i8* %299, i64 %331
  %334 = getelementptr i8, i8* %309, i64 %331
  %335 = bitcast i8* %334 to <16 x i8>*
  %336 = load <16 x i8>, <16 x i8>* %335, align 1
  %337 = getelementptr i8, i8* %334, i64 16
  %338 = bitcast i8* %337 to <16 x i8>*
  %339 = load <16 x i8>, <16 x i8>* %338, align 1
  %340 = bitcast i8* %333 to <16 x i8>*
  store <16 x i8> %336, <16 x i8>* %340, align 1
  %341 = getelementptr i8, i8* %333, i64 16
  %342 = bitcast i8* %341 to <16 x i8>*
  store <16 x i8> %339, <16 x i8>* %342, align 1
  %343 = or i64 %331, 32
  %344 = getelementptr i8, i8* %299, i64 %343
  %345 = getelementptr i8, i8* %309, i64 %343
  %346 = bitcast i8* %345 to <16 x i8>*
  %347 = load <16 x i8>, <16 x i8>* %346, align 1
  %348 = getelementptr i8, i8* %345, i64 16
  %349 = bitcast i8* %348 to <16 x i8>*
  %350 = load <16 x i8>, <16 x i8>* %349, align 1
  %351 = bitcast i8* %344 to <16 x i8>*
  store <16 x i8> %347, <16 x i8>* %351, align 1
  %352 = getelementptr i8, i8* %344, i64 16
  %353 = bitcast i8* %352 to <16 x i8>*
  store <16 x i8> %350, <16 x i8>* %353, align 1
  %354 = or i64 %331, 64
  %355 = getelementptr i8, i8* %299, i64 %354
  %356 = getelementptr i8, i8* %309, i64 %354
  %357 = bitcast i8* %356 to <16 x i8>*
  %358 = load <16 x i8>, <16 x i8>* %357, align 1
  %359 = getelementptr i8, i8* %356, i64 16
  %360 = bitcast i8* %359 to <16 x i8>*
  %361 = load <16 x i8>, <16 x i8>* %360, align 1
  %362 = bitcast i8* %355 to <16 x i8>*
  store <16 x i8> %358, <16 x i8>* %362, align 1
  %363 = getelementptr i8, i8* %355, i64 16
  %364 = bitcast i8* %363 to <16 x i8>*
  store <16 x i8> %361, <16 x i8>* %364, align 1
  %365 = or i64 %331, 96
  %366 = getelementptr i8, i8* %299, i64 %365
  %367 = getelementptr i8, i8* %309, i64 %365
  %368 = bitcast i8* %367 to <16 x i8>*
  %369 = load <16 x i8>, <16 x i8>* %368, align 1
  %370 = getelementptr i8, i8* %367, i64 16
  %371 = bitcast i8* %370 to <16 x i8>*
  %372 = load <16 x i8>, <16 x i8>* %371, align 1
  %373 = bitcast i8* %366 to <16 x i8>*
  store <16 x i8> %369, <16 x i8>* %373, align 1
  %374 = getelementptr i8, i8* %366, i64 16
  %375 = bitcast i8* %374 to <16 x i8>*
  store <16 x i8> %372, <16 x i8>* %375, align 1
  %376 = add i64 %331, 128
  %377 = add i64 %332, -4
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %379, label %330, !llvm.loop !82

379:                                              ; preds = %330, %319
  %380 = phi i64 [ 0, %319 ], [ %376, %330 ]
  %381 = icmp eq i64 %326, 0
  br i1 %381, label %398, label %382

382:                                              ; preds = %379, %382
  %383 = phi i64 [ %395, %382 ], [ %380, %379 ]
  %384 = phi i64 [ %396, %382 ], [ %326, %379 ]
  %385 = getelementptr i8, i8* %299, i64 %383
  %386 = getelementptr i8, i8* %309, i64 %383
  %387 = bitcast i8* %386 to <16 x i8>*
  %388 = load <16 x i8>, <16 x i8>* %387, align 1
  %389 = getelementptr i8, i8* %386, i64 16
  %390 = bitcast i8* %389 to <16 x i8>*
  %391 = load <16 x i8>, <16 x i8>* %390, align 1
  %392 = bitcast i8* %385 to <16 x i8>*
  store <16 x i8> %388, <16 x i8>* %392, align 1
  %393 = getelementptr i8, i8* %385, i64 16
  %394 = bitcast i8* %393 to <16 x i8>*
  store <16 x i8> %391, <16 x i8>* %394, align 1
  %395 = add i64 %383, 32
  %396 = add i64 %384, -1
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %398, label %382, !llvm.loop !83

398:                                              ; preds = %382, %379
  %399 = icmp eq i64 %320, %317
  br i1 %399, label %410, label %400

400:                                              ; preds = %398, %306
  %401 = phi i8* [ %299, %306 ], [ %321, %398 ]
  %402 = phi i8* [ %309, %306 ], [ %322, %398 ]
  br label %403

403:                                              ; preds = %400, %403
  %404 = phi i8* [ %408, %403 ], [ %401, %400 ]
  %405 = phi i8* [ %407, %403 ], [ %402, %400 ]
  %406 = load i8, i8* %405, align 1
  store i8 %406, i8* %404, align 1
  %407 = getelementptr inbounds i8, i8* %405, i64 1
  %408 = getelementptr inbounds i8, i8* %404, i64 1
  %409 = icmp ult i8* %407, %308
  br i1 %409, label %403, label %410, !llvm.loop !84

410:                                              ; preds = %403, %398, %288, %283
  %411 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %286, i64 0, i32 1
  store i32 %264, i32* %411, align 4
  %412 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %286, i64 0, i32 0
  %413 = load i32, i32* %412, align 4
  br label %417

414:                                              ; preds = %278
  %415 = load i32, i32* %3, align 4
  %416 = or i32 %415, 16
  store i32 %416, i32* %3, align 4
  br label %744

417:                                              ; preds = %410, %253
  %418 = phi i32 [ %242, %253 ], [ %413, %410 ]
  %419 = phi %struct.decNumber* [ %1, %253 ], [ %286, %410 ]
  %420 = phi i8* [ null, %253 ], [ %284, %410 ]
  %421 = phi %struct.decNumber* [ null, %253 ], [ %285, %410 ]
  %422 = ptrtoint %struct.decNumber* %419 to i64
  %423 = bitcast %struct.decNumber* %419 to i8*
  %424 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %419, i64 0, i32 0
  %425 = load i32, i32* %206, align 4
  %426 = icmp slt i32 %418, %425
  %427 = select i1 %426, i32 %425, i32 %418
  %428 = add nsw i32 %427, %263
  %429 = add nsw i32 %428, 2
  %430 = shl nsw i32 %429, 1
  %431 = icmp slt i32 %429, 25
  br i1 %431, label %432, label %437

432:                                              ; preds = %417
  %433 = sext i32 %430 to i64
  %434 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %433
  %435 = load i8, i8* %434, align 2
  %436 = zext i8 %435 to i32
  br label %437

437:                                              ; preds = %417, %432
  %438 = phi i32 [ %436, %432 ], [ %430, %417 ]
  %439 = add i32 %438, 11
  %440 = icmp ugt i32 %439, 180
  br i1 %440, label %441, label %449

441:                                              ; preds = %437
  %442 = zext i32 %439 to i64
  %443 = call noalias i8* @uprv_malloc_69(i64 %442) #9
  %444 = bitcast i8* %443 to %struct.decNumber*
  %445 = icmp eq i8* %443, null
  br i1 %445, label %446, label %449

446:                                              ; preds = %441
  %447 = load i32, i32* %3, align 4
  %448 = or i32 %447, 16
  store i32 %448, i32* %3, align 4
  br label %729

449:                                              ; preds = %441, %437
  %450 = phi i8* [ null, %437 ], [ %443, %441 ]
  %451 = phi %struct.decNumber* [ null, %437 ], [ %444, %441 ]
  %452 = phi %struct.decNumber* [ %27, %437 ], [ %444, %441 ]
  %453 = add nsw i32 %428, 4
  %454 = icmp slt i32 %453, 50
  br i1 %454, label %455, label %460

455:                                              ; preds = %449
  %456 = sext i32 %453 to i64
  %457 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %456
  %458 = load i8, i8* %457, align 1
  %459 = zext i8 %458 to i32
  br label %460

460:                                              ; preds = %449, %455
  %461 = phi i32 [ %459, %455 ], [ %453, %449 ]
  %462 = add nuw i32 %461, 11
  %463 = icmp ugt i32 %462, 96
  br i1 %463, label %464, label %472

464:                                              ; preds = %460
  %465 = zext i32 %462 to i64
  %466 = call noalias i8* @uprv_malloc_69(i64 %465) #9
  %467 = bitcast i8* %466 to %struct.decNumber*
  %468 = icmp eq i8* %466, null
  br i1 %468, label %469, label %472

469:                                              ; preds = %464
  %470 = load i32, i32* %3, align 4
  %471 = or i32 %470, 16
  store i32 %471, i32* %3, align 4
  br label %729

472:                                              ; preds = %464, %460
  %473 = phi i8* [ null, %460 ], [ %466, %464 ]
  %474 = phi %struct.decNumber* [ null, %460 ], [ %467, %464 ]
  %475 = phi %struct.decNumber* [ %25, %460 ], [ %467, %464 ]
  %476 = bitcast %struct.decNumber* %475 to i8*
  %477 = icmp eq %struct.decNumber* %475, %419
  br i1 %477, label %617, label %478

478:                                              ; preds = %472
  %479 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %419, i64 0, i32 2
  %480 = load i8, i8* %479, align 4
  %481 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %475, i64 0, i32 2
  store i8 %480, i8* %481, align 4
  %482 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %419, i64 0, i32 1
  %483 = load i32, i32* %482, align 4
  %484 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %475, i64 0, i32 1
  store i32 %483, i32* %484, align 4
  %485 = load i32, i32* %424, align 4
  %486 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %475, i64 0, i32 0
  store i32 %485, i32* %486, align 4
  %487 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %419, i64 0, i32 3, i64 0
  %488 = load i8, i8* %487, align 1
  %489 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %475, i64 0, i32 3, i64 0
  store i8 %488, i8* %489, align 1
  %490 = icmp sgt i32 %485, 1
  br i1 %490, label %491, label %617

491:                                              ; preds = %478
  %492 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %475, i64 0, i32 3, i64 1
  %493 = icmp slt i32 %485, 50
  %494 = sext i32 %485 to i64
  br i1 %493, label %495, label %499

495:                                              ; preds = %491
  %496 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %494
  %497 = load i8, i8* %496, align 1
  %498 = zext i8 %497 to i64
  br label %499

499:                                              ; preds = %495, %491
  %500 = phi i64 [ %498, %495 ], [ %494, %491 ]
  %501 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %419, i64 0, i32 3, i64 %500
  %502 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %419, i64 0, i32 3, i64 1
  %503 = add nsw i64 %500, 9
  %504 = getelementptr i8, i8* %423, i64 %503
  %505 = getelementptr %struct.decNumber, %struct.decNumber* %419, i64 0, i32 3, i64 2
  %506 = icmp ugt i8* %504, %505
  %507 = select i1 %506, i8* %504, i8* %505
  %508 = sub i64 -10, %422
  %509 = getelementptr i8, i8* %507, i64 %508
  %510 = ptrtoint i8* %509 to i64
  %511 = icmp ult i8* %509, inttoptr (i64 32 to i8*)
  br i1 %511, label %607, label %512

512:                                              ; preds = %499
  %513 = getelementptr %struct.decNumber, %struct.decNumber* %475, i64 0, i32 3, i64 1
  %514 = add nsw i64 %500, 9
  %515 = getelementptr i8, i8* %423, i64 %514
  %516 = getelementptr %struct.decNumber, %struct.decNumber* %419, i64 0, i32 3, i64 2
  %517 = icmp ugt i8* %515, %516
  %518 = select i1 %517, i8* %515, i8* %516
  %519 = ptrtoint i8* %518 to i64
  %520 = sub i64 %519, %422
  %521 = getelementptr i8, i8* %476, i64 %520
  %522 = getelementptr %struct.decNumber, %struct.decNumber* %419, i64 0, i32 3, i64 1
  %523 = icmp ult i8* %513, %518
  %524 = icmp ult i8* %522, %521
  %525 = and i1 %523, %524
  br i1 %525, label %607, label %526

526:                                              ; preds = %512
  %527 = and i64 %510, -32
  %528 = getelementptr i8, i8* %492, i64 %527
  %529 = getelementptr i8, i8* %502, i64 %527
  %530 = add i64 %527, -32
  %531 = lshr exact i64 %530, 5
  %532 = add nuw nsw i64 %531, 1
  %533 = and i64 %532, 3
  %534 = icmp ult i64 %530, 96
  br i1 %534, label %586, label %535

535:                                              ; preds = %526
  %536 = sub nsw i64 %532, %533
  br label %537

537:                                              ; preds = %537, %535
  %538 = phi i64 [ 0, %535 ], [ %583, %537 ]
  %539 = phi i64 [ %536, %535 ], [ %584, %537 ]
  %540 = getelementptr i8, i8* %492, i64 %538
  %541 = getelementptr i8, i8* %502, i64 %538
  %542 = bitcast i8* %541 to <16 x i8>*
  %543 = load <16 x i8>, <16 x i8>* %542, align 1, !alias.scope !85
  %544 = getelementptr i8, i8* %541, i64 16
  %545 = bitcast i8* %544 to <16 x i8>*
  %546 = load <16 x i8>, <16 x i8>* %545, align 1, !alias.scope !85
  %547 = bitcast i8* %540 to <16 x i8>*
  store <16 x i8> %543, <16 x i8>* %547, align 1, !alias.scope !88, !noalias !85
  %548 = getelementptr i8, i8* %540, i64 16
  %549 = bitcast i8* %548 to <16 x i8>*
  store <16 x i8> %546, <16 x i8>* %549, align 1, !alias.scope !88, !noalias !85
  %550 = or i64 %538, 32
  %551 = getelementptr i8, i8* %492, i64 %550
  %552 = getelementptr i8, i8* %502, i64 %550
  %553 = bitcast i8* %552 to <16 x i8>*
  %554 = load <16 x i8>, <16 x i8>* %553, align 1, !alias.scope !85
  %555 = getelementptr i8, i8* %552, i64 16
  %556 = bitcast i8* %555 to <16 x i8>*
  %557 = load <16 x i8>, <16 x i8>* %556, align 1, !alias.scope !85
  %558 = bitcast i8* %551 to <16 x i8>*
  store <16 x i8> %554, <16 x i8>* %558, align 1, !alias.scope !88, !noalias !85
  %559 = getelementptr i8, i8* %551, i64 16
  %560 = bitcast i8* %559 to <16 x i8>*
  store <16 x i8> %557, <16 x i8>* %560, align 1, !alias.scope !88, !noalias !85
  %561 = or i64 %538, 64
  %562 = getelementptr i8, i8* %492, i64 %561
  %563 = getelementptr i8, i8* %502, i64 %561
  %564 = bitcast i8* %563 to <16 x i8>*
  %565 = load <16 x i8>, <16 x i8>* %564, align 1, !alias.scope !85
  %566 = getelementptr i8, i8* %563, i64 16
  %567 = bitcast i8* %566 to <16 x i8>*
  %568 = load <16 x i8>, <16 x i8>* %567, align 1, !alias.scope !85
  %569 = bitcast i8* %562 to <16 x i8>*
  store <16 x i8> %565, <16 x i8>* %569, align 1, !alias.scope !88, !noalias !85
  %570 = getelementptr i8, i8* %562, i64 16
  %571 = bitcast i8* %570 to <16 x i8>*
  store <16 x i8> %568, <16 x i8>* %571, align 1, !alias.scope !88, !noalias !85
  %572 = or i64 %538, 96
  %573 = getelementptr i8, i8* %492, i64 %572
  %574 = getelementptr i8, i8* %502, i64 %572
  %575 = bitcast i8* %574 to <16 x i8>*
  %576 = load <16 x i8>, <16 x i8>* %575, align 1, !alias.scope !85
  %577 = getelementptr i8, i8* %574, i64 16
  %578 = bitcast i8* %577 to <16 x i8>*
  %579 = load <16 x i8>, <16 x i8>* %578, align 1, !alias.scope !85
  %580 = bitcast i8* %573 to <16 x i8>*
  store <16 x i8> %576, <16 x i8>* %580, align 1, !alias.scope !88, !noalias !85
  %581 = getelementptr i8, i8* %573, i64 16
  %582 = bitcast i8* %581 to <16 x i8>*
  store <16 x i8> %579, <16 x i8>* %582, align 1, !alias.scope !88, !noalias !85
  %583 = add i64 %538, 128
  %584 = add i64 %539, -4
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %537, !llvm.loop !90

586:                                              ; preds = %537, %526
  %587 = phi i64 [ 0, %526 ], [ %583, %537 ]
  %588 = icmp eq i64 %533, 0
  br i1 %588, label %605, label %589

589:                                              ; preds = %586, %589
  %590 = phi i64 [ %602, %589 ], [ %587, %586 ]
  %591 = phi i64 [ %603, %589 ], [ %533, %586 ]
  %592 = getelementptr i8, i8* %492, i64 %590
  %593 = getelementptr i8, i8* %502, i64 %590
  %594 = bitcast i8* %593 to <16 x i8>*
  %595 = load <16 x i8>, <16 x i8>* %594, align 1, !alias.scope !85
  %596 = getelementptr i8, i8* %593, i64 16
  %597 = bitcast i8* %596 to <16 x i8>*
  %598 = load <16 x i8>, <16 x i8>* %597, align 1, !alias.scope !85
  %599 = bitcast i8* %592 to <16 x i8>*
  store <16 x i8> %595, <16 x i8>* %599, align 1, !alias.scope !88, !noalias !85
  %600 = getelementptr i8, i8* %592, i64 16
  %601 = bitcast i8* %600 to <16 x i8>*
  store <16 x i8> %598, <16 x i8>* %601, align 1, !alias.scope !88, !noalias !85
  %602 = add i64 %590, 32
  %603 = add i64 %591, -1
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %605, label %589, !llvm.loop !91

605:                                              ; preds = %589, %586
  %606 = icmp eq i64 %527, %510
  br i1 %606, label %617, label %607

607:                                              ; preds = %605, %512, %499
  %608 = phi i8* [ %492, %512 ], [ %492, %499 ], [ %528, %605 ]
  %609 = phi i8* [ %502, %512 ], [ %502, %499 ], [ %529, %605 ]
  br label %610

610:                                              ; preds = %607, %610
  %611 = phi i8* [ %615, %610 ], [ %608, %607 ]
  %612 = phi i8* [ %614, %610 ], [ %609, %607 ]
  %613 = load i8, i8* %612, align 1
  store i8 %613, i8* %611, align 1
  %614 = getelementptr inbounds i8, i8* %612, i64 1
  %615 = getelementptr inbounds i8, i8* %611, i64 1
  %616 = icmp ult i8* %614, %501
  br i1 %616, label %610, label %617, !llvm.loop !92

617:                                              ; preds = %610, %605, %472, %478
  %618 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %452, i64 0, i32 2
  store i8 0, i8* %618, align 4
  %619 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %452, i64 0, i32 1
  store i32 0, i32* %619, align 4
  %620 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %452, i64 0, i32 0
  store i32 1, i32* %620, align 4
  %621 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %452, i64 0, i32 3, i64 0
  store i8 1, i8* %621, align 1
  store i8 0, i8* %202, align 8
  store i32 0, i32* %203, align 4
  store i32 1, i32* %204, align 16
  store i8 2, i8* %205, align 1
  %622 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i64 0, i32 2
  store i8 0, i8* %622, align 4
  %623 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i64 0, i32 1
  store i32 0, i32* %623, align 4
  %624 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i64 0, i32 0
  store i32 1, i32* %624, align 4
  %625 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i64 0, i32 3, i64 0
  store i8 1, i8* %625, align 1
  %626 = call %struct.decContext* @uprv_decContextDefault_69(%struct.decContext* nonnull %11, i32 64) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* nonnull align 4 %21, i64 28, i1 false)
  %627 = getelementptr inbounds %struct.decContext, %struct.decContext* %10, i64 0, i32 0
  store i32 %430, i32* %627, align 4
  %628 = getelementptr inbounds %struct.decContext, %struct.decContext* %11, i64 0, i32 0
  store i32 %429, i32* %628, align 4
  %629 = getelementptr inbounds %struct.decContext, %struct.decContext* %11, i64 0, i32 2
  store i32 -999999999, i32* %629, align 4
  %630 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %475, i64 0, i32 0
  %631 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %475, i64 0, i32 1
  br label %632

632:                                              ; preds = %643, %617
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %452, %struct.decNumber* %452, %struct.decNumber* %475, %struct.decContext* nonnull %10, i8 zeroext 0, i32* %3)
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %475, %struct.decNumber* %475, %struct.decNumber* %419, %struct.decContext* nonnull %11, i32* nonnull %8)
  call fastcc void @_ZL11decDivideOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %475, %struct.decNumber* %475, %struct.decNumber* nonnull %29, %struct.decContext* nonnull %11, i8 zeroext -128, i32* nonnull %8)
  %633 = load i32, i32* %620, align 4
  %634 = load i32, i32* %619, align 4
  %635 = add nsw i32 %634, %633
  %636 = load i32, i32* %630, align 4
  %637 = load i32, i32* %631, align 4
  %638 = add i32 %636, %429
  %639 = add i32 %638, %637
  %640 = icmp sle i32 %635, %639
  %641 = icmp slt i32 %633, %429
  %642 = or i1 %641, %640
  br i1 %642, label %643, label %644

643:                                              ; preds = %632
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* nonnull %29, %struct.decNumber* nonnull %29, %struct.decNumber* nonnull %17, %struct.decContext* nonnull %12, i8 zeroext 0, i32* nonnull %8)
  br label %632

644:                                              ; preds = %632
  %645 = icmp sgt i32 %261, 0
  br i1 %645, label %646, label %698

646:                                              ; preds = %245, %252, %644
  %647 = phi i32 [ %263, %644 ], [ 8, %252 ], [ 8, %245 ]
  %648 = phi i32 [ %429, %644 ], [ 9, %252 ], [ 9, %245 ]
  %649 = phi %struct.decNumber* [ %452, %644 ], [ %27, %252 ], [ %27, %245 ]
  %650 = phi %struct.decNumber* [ %451, %644 ], [ null, %252 ], [ null, %245 ]
  %651 = phi i8* [ %450, %644 ], [ null, %252 ], [ null, %245 ]
  %652 = phi %struct.decNumber* [ %475, %644 ], [ %25, %252 ], [ %25, %245 ]
  %653 = phi %struct.decNumber* [ %474, %644 ], [ null, %252 ], [ null, %245 ]
  %654 = phi i8* [ %473, %644 ], [ null, %252 ], [ null, %245 ]
  %655 = phi %struct.decNumber* [ %421, %644 ], [ null, %252 ], [ null, %245 ]
  %656 = phi i8* [ %420, %644 ], [ null, %252 ], [ null, %245 ]
  %657 = zext i32 %647 to i64
  %658 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %657
  %659 = load i32, i32* %658, align 4
  %660 = add nsw i32 %648, 2
  %661 = getelementptr inbounds %struct.decContext, %struct.decContext* %10, i64 0, i32 0
  store i32 %660, i32* %661, align 4
  %662 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %652, i64 0, i32 2
  store i8 0, i8* %662, align 4
  %663 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %652, i64 0, i32 1
  store i32 0, i32* %663, align 4
  %664 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %652, i64 0, i32 0
  store i32 1, i32* %664, align 4
  %665 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %652, i64 0, i32 3, i64 0
  store i8 1, i8* %665, align 1
  br label %666

666:                                              ; preds = %696, %646
  %667 = phi i32 [ 0, %646 ], [ %691, %696 ]
  %668 = phi i32 [ 1, %646 ], [ %697, %696 ]
  %669 = phi i32 [ %659, %646 ], [ %687, %696 ]
  %670 = load i32, i32* %3, align 4
  %671 = and i32 %670, 8704
  %672 = icmp eq i32 %671, 0
  br i1 %672, label %686, label %673

673:                                              ; preds = %666
  %674 = and i32 %670, 512
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %676, label %698

676:                                              ; preds = %673
  %677 = load i8, i8* %665, align 1
  %678 = icmp eq i8 %677, 0
  br i1 %678, label %679, label %686

679:                                              ; preds = %676
  %680 = load i32, i32* %664, align 4
  %681 = icmp eq i32 %680, 1
  br i1 %681, label %682, label %686

682:                                              ; preds = %679
  %683 = load i8, i8* %662, align 4
  %684 = and i8 %683, 112
  %685 = icmp eq i8 %684, 0
  br i1 %685, label %698, label %686

686:                                              ; preds = %666, %676, %679, %682
  %687 = shl i32 %669, 1
  %688 = icmp slt i32 %687, 0
  br i1 %688, label %689, label %690

689:                                              ; preds = %686
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %652, %struct.decNumber* %652, %struct.decNumber* %649, %struct.decContext* nonnull %10, i32* %3)
  br label %690

690:                                              ; preds = %689, %686
  %691 = phi i32 [ 1, %689 ], [ %667, %686 ]
  %692 = icmp eq i32 %668, 31
  br i1 %692, label %698, label %693

693:                                              ; preds = %690
  %694 = icmp eq i32 %691, 0
  br i1 %694, label %696, label %695

695:                                              ; preds = %693
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %652, %struct.decNumber* %652, %struct.decNumber* %652, %struct.decContext* nonnull %10, i32* %3)
  br label %696

696:                                              ; preds = %693, %695
  %697 = add nuw nsw i32 %668, 1
  br label %666

698:                                              ; preds = %682, %690, %673, %644
  %699 = phi %struct.decNumber* [ %451, %644 ], [ %650, %673 ], [ %650, %690 ], [ %650, %682 ]
  %700 = phi i8* [ %450, %644 ], [ %651, %673 ], [ %651, %690 ], [ %651, %682 ]
  %701 = phi %struct.decNumber* [ %474, %644 ], [ %653, %673 ], [ %653, %690 ], [ %653, %682 ]
  %702 = phi i8* [ %473, %644 ], [ %654, %673 ], [ %654, %690 ], [ %654, %682 ]
  %703 = phi %struct.decNumber* [ %421, %644 ], [ %655, %673 ], [ %655, %690 ], [ %655, %682 ]
  %704 = phi i8* [ %420, %644 ], [ %656, %673 ], [ %656, %690 ], [ %656, %682 ]
  %705 = phi %struct.decNumber* [ %452, %644 ], [ %652, %673 ], [ %652, %690 ], [ %652, %682 ]
  store i32 1, i32* %9, align 4
  %706 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %705, i64 0, i32 3, i64 0
  %707 = load i8, i8* %706, align 1
  %708 = icmp eq i8 %707, 0
  %709 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %705, i64 0, i32 0
  %710 = load i32, i32* %709, align 4
  %711 = icmp eq i32 %710, 1
  %712 = and i1 %708, %711
  br i1 %712, label %713, label %719

713:                                              ; preds = %698
  %714 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %705, i64 0, i32 2
  %715 = load i8, i8* %714, align 4
  %716 = and i8 %715, 112
  %717 = icmp eq i8 %716, 0
  br i1 %717, label %718, label %719

718:                                              ; preds = %713
  store i32 0, i32* %9, align 4
  br label %719

719:                                              ; preds = %698, %718, %713
  %720 = phi i32 [ 1, %718 ], [ 1, %713 ], [ %710, %698 ]
  %721 = load i32, i32* %206, align 4
  %722 = getelementptr inbounds %struct.decContext, %struct.decContext* %10, i64 0, i32 0
  store i32 %721, i32* %722, align 4
  %723 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %705, i64 0, i32 2
  %724 = load i8, i8* %723, align 4
  %725 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %724, i8* %725, align 4
  %726 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %705, i64 0, i32 1
  %727 = load i32, i32* %726, align 4
  %728 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %727, i32* %728, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* nonnull %10, i8* %706, i32 %720, i32* nonnull %9, i32* %3) #8
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %2, i32* nonnull %9, i32* %3)
  br label %729

729:                                              ; preds = %469, %446, %719
  %730 = phi i8* [ %704, %719 ], [ %420, %469 ], [ %420, %446 ]
  %731 = phi %struct.decNumber* [ %703, %719 ], [ %421, %469 ], [ %421, %446 ]
  %732 = phi i8* [ %702, %719 ], [ null, %469 ], [ null, %446 ]
  %733 = phi %struct.decNumber* [ %701, %719 ], [ null, %469 ], [ null, %446 ]
  %734 = phi i8* [ %700, %719 ], [ %450, %469 ], [ null, %446 ]
  %735 = phi %struct.decNumber* [ %699, %719 ], [ %451, %469 ], [ null, %446 ]
  %736 = icmp eq %struct.decNumber* %731, null
  br i1 %736, label %738, label %737

737:                                              ; preds = %729
  call void @uprv_free_69(i8* %730) #8
  br label %738

738:                                              ; preds = %729, %737
  %739 = icmp eq %struct.decNumber* %735, null
  br i1 %739, label %741, label %740

740:                                              ; preds = %738
  call void @uprv_free_69(i8* %734) #8
  br label %741

741:                                              ; preds = %738, %740
  %742 = icmp eq %struct.decNumber* %733, null
  br i1 %742, label %744, label %743

743:                                              ; preds = %741
  call void @uprv_free_69(i8* %732) #8
  br label %744

744:                                              ; preds = %180, %175, %414, %48, %46, %219, %214, %196, %187, %41, %741, %743
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %28) #8
  call void @llvm.lifetime.end.p0i8(i64 180, i8* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 84, i8* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberFMA_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.decContext, align 4
  %8 = alloca [7 x %struct.decNumber], align 16
  %9 = alloca %struct.decNumber, align 4
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  store i32 0, i32* %6, align 4
  %11 = bitcast %struct.decContext* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 28, i1 false)
  %12 = bitcast [7 x %struct.decNumber]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 84, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 84, i1 false)
  %13 = bitcast %struct.decNumber* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 12, i1 false)
  %14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %15 = load i8, i8* %14, align 4
  %16 = and i8 %15, 112
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %48

18:                                               ; preds = %5
  %19 = getelementptr inbounds %struct.decContext, %struct.decContext* %4, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 999999
  br i1 %21, label %46, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.decContext, %struct.decContext* %4, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, 999999
  br i1 %25, label %46, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.decContext, %struct.decContext* %4, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, -999999
  br i1 %29, label %46, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, 999999
  br i1 %33, label %46, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = add nsw i32 %32, 1999996
  %38 = add i32 %37, %36
  %39 = icmp ugt i32 %38, 2999996
  br i1 %39, label %40, label %48

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 0
  %44 = icmp eq i32 %32, 1
  %45 = and i1 %44, %43
  br i1 %45, label %48, label %46

46:                                               ; preds = %30, %40, %18, %22, %26
  %47 = phi i32 [ 64, %26 ], [ 64, %22 ], [ 64, %18 ], [ 128, %40 ], [ 128, %30 ]
  store i32 %47, i32* %6, align 4
  br label %173

48:                                               ; preds = %40, %34, %5
  %49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %50 = load i8, i8* %49, align 4
  %51 = and i8 %50, 112
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %83

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.decContext, %struct.decContext* %4, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, 999999
  br i1 %56, label %81, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.decContext, %struct.decContext* %4, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp sgt i32 %59, 999999
  br i1 %60, label %81, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.decContext, %struct.decContext* %4, i64 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp slt i32 %63, -999999
  br i1 %64, label %81, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, 999999
  br i1 %68, label %81, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = add nsw i32 %67, 1999996
  %73 = add i32 %72, %71
  %74 = icmp ugt i32 %73, 2999996
  br i1 %74, label %75, label %83

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 0
  %79 = icmp eq i32 %67, 1
  %80 = and i1 %79, %78
  br i1 %80, label %83, label %81

81:                                               ; preds = %65, %75, %53, %57, %61
  %82 = phi i32 [ 64, %61 ], [ 64, %57 ], [ 64, %53 ], [ 128, %75 ], [ 128, %65 ]
  store i32 %82, i32* %6, align 4
  br label %173

83:                                               ; preds = %75, %69, %48
  %84 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i64 0, i32 2
  %85 = load i8, i8* %84, align 4
  %86 = and i8 %85, 112
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %118

88:                                               ; preds = %83
  %89 = getelementptr inbounds %struct.decContext, %struct.decContext* %4, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp sgt i32 %90, 999999
  br i1 %91, label %116, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.decContext, %struct.decContext* %4, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 999999
  br i1 %95, label %116, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.decContext, %struct.decContext* %4, i64 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = icmp slt i32 %98, -999999
  br i1 %99, label %116, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp sgt i32 %102, 999999
  br i1 %103, label %116, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = add nsw i32 %102, 1999996
  %108 = add i32 %107, %106
  %109 = icmp ugt i32 %108, 2999996
  br i1 %109, label %110, label %118

110:                                              ; preds = %104
  %111 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i64 0, i32 3, i64 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 0
  %114 = icmp eq i32 %102, 1
  %115 = and i1 %114, %113
  br i1 %115, label %118, label %116

116:                                              ; preds = %100, %110, %88, %92, %96
  %117 = phi i32 [ 64, %96 ], [ 64, %92 ], [ 64, %88 ], [ 128, %110 ], [ 128, %100 ]
  store i32 %117, i32* %6, align 4
  br label %173

118:                                              ; preds = %110, %104, %83
  %119 = bitcast %struct.decContext* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 %119, i64 28, i1 false)
  %120 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = add nsw i32 %123, %121
  %125 = getelementptr inbounds %struct.decContext, %struct.decContext* %7, i64 0, i32 0
  store i32 %124, i32* %125, align 4
  %126 = getelementptr inbounds %struct.decContext, %struct.decContext* %7, i64 0, i32 1
  store i32 999999999, i32* %126, align 4
  %127 = getelementptr inbounds %struct.decContext, %struct.decContext* %7, i64 0, i32 2
  store i32 -999999999, i32* %127, align 4
  %128 = getelementptr inbounds [7 x %struct.decNumber], [7 x %struct.decNumber]* %8, i64 0, i64 0
  %129 = icmp slt i32 %124, 50
  br i1 %129, label %130, label %135

130:                                              ; preds = %118
  %131 = sext i32 %124 to i64
  %132 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  br label %135

135:                                              ; preds = %118, %130
  %136 = phi i32 [ %134, %130 ], [ %124, %118 ]
  %137 = add nuw i32 %136, 11
  %138 = icmp ugt i32 %137, 84
  br i1 %138, label %139, label %145

139:                                              ; preds = %135
  %140 = zext i32 %137 to i64
  %141 = tail call noalias i8* @uprv_malloc_69(i64 %140) #9
  %142 = bitcast i8* %141 to %struct.decNumber*
  %143 = icmp eq i8* %141, null
  br i1 %143, label %144, label %145

144:                                              ; preds = %139
  store i32 16, i32* %6, align 4
  br label %182

145:                                              ; preds = %139, %135
  %146 = phi i8* [ null, %135 ], [ %141, %139 ]
  %147 = phi %struct.decNumber* [ null, %135 ], [ %142, %139 ]
  %148 = phi %struct.decNumber* [ %128, %135 ], [ %142, %139 ]
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %148, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* nonnull %7, i32* nonnull %6)
  %149 = load i32, i32* %6, align 4
  %150 = trunc i32 %149 to i8
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %165

152:                                              ; preds = %145
  %153 = and i32 %149, 1073741824
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %160

155:                                              ; preds = %152
  %156 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %157 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %157, align 4
  %158 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %158, align 4
  %159 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %159, align 1
  store i8 32, i8* %156, align 4
  br label %167

160:                                              ; preds = %152
  %161 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i64 0, i32 2
  store i8 0, i8* %161, align 4
  %162 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i64 0, i32 1
  store i32 0, i32* %162, align 4
  %163 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i64 0, i32 0
  store i32 1, i32* %163, align 4
  %164 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i64 0, i32 3, i64 0
  store i8 0, i8* %164, align 1
  br label %165

165:                                              ; preds = %160, %145
  %166 = phi %struct.decNumber* [ %9, %160 ], [ %3, %145 ]
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %148, %struct.decNumber* %166, %struct.decContext* %4, i8 zeroext 0, i32* nonnull %6)
  br label %167

167:                                              ; preds = %165, %155
  %168 = icmp eq %struct.decNumber* %147, null
  br i1 %168, label %170, label %169

169:                                              ; preds = %167
  call void @uprv_free_69(i8* %146) #8
  br label %170

170:                                              ; preds = %167, %169
  %171 = load i32, i32* %6, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %191, label %173

173:                                              ; preds = %46, %81, %116, %170
  %174 = phi i32 [ %171, %170 ], [ %47, %46 ], [ %82, %81 ], [ %117, %116 ]
  %175 = and i32 %174, 221
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %173
  %178 = and i32 %174, 1073741824
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %177
  %181 = and i32 %174, -1073741825
  br label %188

182:                                              ; preds = %144, %177
  %183 = phi i32 [ 16, %144 ], [ %174, %177 ]
  %184 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %185 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %185, align 4
  %186 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %186, align 4
  %187 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %187, align 1
  store i8 32, i8* %184, align 4
  br label %188

188:                                              ; preds = %173, %180, %182
  %189 = phi i32 [ %181, %180 ], [ %183, %182 ], [ %174, %173 ]
  %190 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %4, i32 %189) #8
  br label %191

191:                                              ; preds = %170, %188
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 84, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber*, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext* nocapture readonly, i32* nocapture) unnamed_addr #3 {
  %6 = alloca i32, align 4
  %7 = alloca [145 x i8], align 16
  %8 = alloca [10 x i32], align 16
  %9 = alloca [10 x i32], align 16
  %10 = alloca [20 x i64], align 16
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 0, i32* %6, align 4
  %12 = getelementptr inbounds [145 x i8], [145 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 145, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 145, i1 false)
  %13 = bitcast [10 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 40, i1 false)
  %14 = getelementptr inbounds [10 x i32], [10 x i32]* %8, i64 0, i64 0
  %15 = bitcast [10 x i32]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 40, i1 false)
  %16 = getelementptr inbounds [10 x i32], [10 x i32]* %9, i64 0, i64 0
  %17 = bitcast [20 x i64]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %17) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 160, i1 false)
  %18 = getelementptr inbounds [20 x i64], [20 x i64]* %10, i64 0, i64 0
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %20 = load i8, i8* %19, align 4
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = xor i8 %23, %20
  %25 = and i8 %24, -128
  %26 = or i8 %23, %20
  %27 = and i8 %26, 112
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %71, label %29

29:                                               ; preds = %5
  %30 = and i8 %26, 48
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  tail call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* %4)
  br label %477

33:                                               ; preds = %29
  %34 = and i32 %21, 64
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %47

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 1
  %44 = and i32 %21, 112
  %45 = icmp eq i32 %44, 0
  %46 = and i1 %45, %43
  br i1 %46, label %62, label %47

47:                                               ; preds = %40, %36, %33
  %48 = zext i8 %23 to i32
  %49 = and i32 %48, 64
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %65

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %65

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 1
  %59 = and i32 %48, 112
  %60 = icmp eq i32 %59, 0
  %61 = and i1 %60, %58
  br i1 %61, label %62, label %65

62:                                               ; preds = %55, %40
  %63 = load i32, i32* %4, align 4
  %64 = or i32 %63, 128
  store i32 %64, i32* %4, align 4
  br label %477

65:                                               ; preds = %55, %51, %47
  %66 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %67 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %67, align 4
  %68 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %68, align 4
  %69 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %69, align 1
  %70 = or i8 %25, 64
  store i8 %70, i8* %66, align 4
  br label %477

71:                                               ; preds = %5
  %72 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %73, %75
  %77 = select i1 %76, %struct.decNumber* %1, %struct.decNumber* %2
  %78 = select i1 %76, %struct.decNumber* %2, %struct.decNumber* %1
  %79 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %77, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp sgt i32 %80, 2
  %82 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %78, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %335

84:                                               ; preds = %71
  %85 = add nsw i32 %83, 8
  %86 = sdiv i32 %85, 9
  %87 = add nuw nsw i32 %80, 8
  %88 = sdiv i32 %87, 9
  %89 = add nsw i32 %86, %88
  %90 = icmp sgt i32 %85, 98
  br i1 %90, label %91, label %96

91:                                               ; preds = %84
  %92 = shl nsw i32 %86, 2
  %93 = sext i32 %92 to i64
  %94 = tail call noalias i8* @uprv_malloc_69(i64 %93) #9
  %95 = bitcast i8* %94 to i32*
  br label %96

96:                                               ; preds = %91, %84
  %97 = phi i32* [ %95, %91 ], [ %14, %84 ]
  %98 = phi i8* [ %94, %91 ], [ null, %84 ]
  %99 = phi i32* [ %95, %91 ], [ null, %84 ]
  %100 = icmp sgt i32 %87, 98
  br i1 %100, label %101, label %106

101:                                              ; preds = %96
  %102 = shl nsw i32 %88, 2
  %103 = sext i32 %102 to i64
  %104 = tail call noalias i8* @uprv_malloc_69(i64 %103) #9
  %105 = bitcast i8* %104 to i32*
  br label %106

106:                                              ; preds = %101, %96
  %107 = phi i32* [ %105, %101 ], [ %16, %96 ]
  %108 = phi i8* [ %104, %101 ], [ null, %96 ]
  %109 = phi i32* [ %105, %101 ], [ null, %96 ]
  %110 = sext i32 %89 to i64
  %111 = add nsw i32 %89, 7
  %112 = sdiv i32 %111, 8
  %113 = add nsw i32 %112, %89
  %114 = shl i32 %113, 3
  %115 = icmp sgt i32 %114, 160
  br i1 %115, label %116, label %120

116:                                              ; preds = %106
  %117 = sext i32 %114 to i64
  %118 = tail call noalias i8* @uprv_malloc_69(i64 %117) #9
  %119 = bitcast i8* %118 to i64*
  br label %120

120:                                              ; preds = %116, %106
  %121 = phi i8* [ %118, %116 ], [ null, %106 ]
  %122 = phi i64* [ %119, %116 ], [ %18, %106 ]
  %123 = ptrtoint i64* %122 to i64
  %124 = icmp eq i32* %97, null
  %125 = icmp eq i32* %107, null
  %126 = or i1 %124, %125
  %127 = icmp eq i64* %122, null
  %128 = or i1 %126, %127
  br i1 %128, label %129, label %132

129:                                              ; preds = %120
  %130 = load i32, i32* %4, align 4
  %131 = or i32 %130, 16
  store i32 %131, i32* %4, align 4
  br label %463

132:                                              ; preds = %120
  %133 = bitcast i64* %122 to i8*
  %134 = sext i32 %112 to i64
  %135 = getelementptr inbounds i64, i64* %122, i64 %134
  %136 = bitcast i64* %135 to i8*
  %137 = load i32, i32* %82, align 4
  %138 = icmp sgt i32 %137, 0
  br i1 %138, label %139, label %165

139:                                              ; preds = %132
  %140 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %78, i64 0, i32 3, i64 0
  br label %141

141:                                              ; preds = %162, %139
  %142 = phi i8* [ %157, %162 ], [ %140, %139 ]
  %143 = phi i32 [ %158, %162 ], [ %137, %139 ]
  %144 = phi i32* [ %163, %162 ], [ %97, %139 ]
  store i32 0, i32* %144, align 4
  br label %145

145:                                              ; preds = %141, %145
  %146 = phi i32 [ 0, %141 ], [ %155, %145 ]
  %147 = phi i64 [ 0, %141 ], [ %156, %145 ]
  %148 = phi i8* [ %142, %141 ], [ %157, %145 ]
  %149 = phi i32 [ %143, %141 ], [ %158, %145 ]
  %150 = load i8, i8* %148, align 1
  %151 = zext i8 %150 to i32
  %152 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %147
  %153 = load i32, i32* %152, align 4
  %154 = mul i32 %153, %151
  %155 = add i32 %146, %154
  store i32 %155, i32* %144, align 4
  %156 = add nuw nsw i64 %147, 1
  %157 = getelementptr inbounds i8, i8* %148, i64 1
  %158 = add nsw i32 %149, -1
  %159 = icmp ult i64 %156, 9
  %160 = icmp sgt i32 %158, 0
  %161 = and i1 %160, %159
  br i1 %161, label %145, label %162

162:                                              ; preds = %145
  %163 = getelementptr inbounds i32, i32* %144, i64 1
  %164 = icmp sgt i32 %158, 0
  br i1 %164, label %141, label %165

165:                                              ; preds = %162, %132
  %166 = phi i32* [ %97, %132 ], [ %163, %162 ]
  %167 = getelementptr inbounds i32, i32* %166, i64 -1
  %168 = load i32, i32* %79, align 4
  %169 = icmp sgt i32 %168, 0
  br i1 %169, label %170, label %196

170:                                              ; preds = %165
  %171 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %77, i64 0, i32 3, i64 0
  br label %172

172:                                              ; preds = %193, %170
  %173 = phi i8* [ %188, %193 ], [ %171, %170 ]
  %174 = phi i32 [ %189, %193 ], [ %168, %170 ]
  %175 = phi i32* [ %194, %193 ], [ %107, %170 ]
  store i32 0, i32* %175, align 4
  br label %176

176:                                              ; preds = %172, %176
  %177 = phi i32 [ 0, %172 ], [ %186, %176 ]
  %178 = phi i64 [ 0, %172 ], [ %187, %176 ]
  %179 = phi i8* [ %173, %172 ], [ %188, %176 ]
  %180 = phi i32 [ %174, %172 ], [ %189, %176 ]
  %181 = load i8, i8* %179, align 1
  %182 = zext i8 %181 to i32
  %183 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %178
  %184 = load i32, i32* %183, align 4
  %185 = mul i32 %184, %182
  %186 = add i32 %177, %185
  store i32 %186, i32* %175, align 4
  %187 = add nuw nsw i64 %178, 1
  %188 = getelementptr inbounds i8, i8* %179, i64 1
  %189 = add nsw i32 %180, -1
  %190 = icmp ult i64 %187, 9
  %191 = icmp sgt i32 %189, 0
  %192 = and i1 %191, %190
  br i1 %192, label %176, label %193

193:                                              ; preds = %176
  %194 = getelementptr inbounds i32, i32* %175, i64 1
  %195 = icmp sgt i32 %189, 0
  br i1 %195, label %172, label %196

196:                                              ; preds = %193, %165
  %197 = phi i32* [ %107, %165 ], [ %194, %193 ]
  %198 = getelementptr inbounds i32, i32* %197, i64 -1
  %199 = getelementptr inbounds i64, i64* %135, i64 %110
  %200 = icmp sgt i32 %89, 0
  br i1 %200, label %201, label %214

201:                                              ; preds = %196
  %202 = add nsw i64 %134, 1
  %203 = getelementptr i64, i64* %122, i64 %202
  %204 = icmp ugt i64* %199, %203
  %205 = select i1 %204, i64* %199, i64* %203
  %206 = sub nsw i64 0, %134
  %207 = getelementptr i64, i64* %205, i64 %206
  %208 = bitcast i64* %207 to i8*
  %209 = xor i64 %123, -1
  %210 = getelementptr i8, i8* %208, i64 %209
  %211 = ptrtoint i8* %210 to i64
  %212 = add i64 %211, 8
  %213 = and i64 %212, -8
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 %213, i1 false)
  br label %214

214:                                              ; preds = %201, %196
  %215 = icmp ugt i32* %107, %198
  br i1 %215, label %220, label %216

216:                                              ; preds = %214
  %217 = ptrtoint i32* %107 to i64
  %218 = icmp ugt i32* %97, %167
  %219 = icmp slt i32 %89, 1
  br label %221

220:                                              ; preds = %277, %214
  br i1 %200, label %281, label %330

221:                                              ; preds = %216, %277
  %222 = phi i32 [ 18, %216 ], [ %278, %277 ]
  %223 = phi i32* [ %107, %216 ], [ %279, %277 ]
  br i1 %218, label %242, label %224

224:                                              ; preds = %221
  %225 = ptrtoint i32* %223 to i64
  %226 = sub i64 %225, %217
  %227 = ashr exact i64 %226, 2
  %228 = getelementptr inbounds i64, i64* %135, i64 %227
  br label %229

229:                                              ; preds = %224, %229
  %230 = phi i64* [ %240, %229 ], [ %228, %224 ]
  %231 = phi i32* [ %239, %229 ], [ %97, %224 ]
  %232 = load i32, i32* %231, align 4
  %233 = zext i32 %232 to i64
  %234 = load i32, i32* %223, align 4
  %235 = zext i32 %234 to i64
  %236 = mul nuw i64 %235, %233
  %237 = load i64, i64* %230, align 8
  %238 = add i64 %236, %237
  store i64 %238, i64* %230, align 8
  %239 = getelementptr inbounds i32, i32* %231, i64 1
  %240 = getelementptr inbounds i64, i64* %230, i64 1
  %241 = icmp ugt i32* %239, %167
  br i1 %241, label %242, label %229

242:                                              ; preds = %229, %221
  %243 = add nsw i32 %222, -1
  %244 = icmp sgt i32 %222, 1
  %245 = icmp ne i32* %223, %198
  %246 = and i1 %244, %245
  %247 = or i1 %246, %219
  %248 = select i1 %246, i32 %243, i32 18
  br i1 %247, label %277, label %249

249:                                              ; preds = %242, %274
  %250 = phi i64* [ %275, %274 ], [ %135, %242 ]
  %251 = load i64, i64* %250, align 8
  %252 = icmp ult i64 %251, 1000000000
  br i1 %252, label %274, label %253

253:                                              ; preds = %249
  %254 = udiv i64 %251, 1000000000
  %255 = icmp ult i64 %251, 1000000000000000000
  br i1 %255, label %265, label %256

256:                                              ; preds = %253
  %257 = udiv i64 %251, 1000000000000000000
  %258 = getelementptr inbounds i64, i64* %250, i64 2
  %259 = load i64, i64* %258, align 8
  %260 = add i64 %259, %257
  store i64 %260, i64* %258, align 8
  %261 = mul i64 %257, -1000000000000000000
  %262 = add i64 %261, %251
  store i64 %262, i64* %250, align 8
  %263 = mul nsw i64 %257, -1000000000
  %264 = add nsw i64 %263, %254
  br label %265

265:                                              ; preds = %253, %256
  %266 = phi i64 [ %262, %256 ], [ %251, %253 ]
  %267 = phi i64 [ %264, %256 ], [ %254, %253 ]
  %268 = and i64 %267, 4294967295
  %269 = getelementptr inbounds i64, i64* %250, i64 1
  %270 = load i64, i64* %269, align 8
  %271 = add i64 %270, %268
  store i64 %271, i64* %269, align 8
  %272 = mul nsw i64 %268, -1000000000
  %273 = add i64 %266, %272
  store i64 %273, i64* %250, align 8
  br label %274

274:                                              ; preds = %249, %265
  %275 = getelementptr inbounds i64, i64* %250, i64 1
  %276 = icmp ult i64* %275, %199
  br i1 %276, label %249, label %277

277:                                              ; preds = %274, %242
  %278 = phi i32 [ %248, %242 ], [ 18, %274 ]
  %279 = getelementptr inbounds i32, i32* %223, i64 1
  %280 = icmp ugt i32* %279, %198
  br i1 %280, label %220, label %221

281:                                              ; preds = %220, %281
  %282 = phi i64* [ %328, %281 ], [ %135, %220 ]
  %283 = phi i8* [ %327, %281 ], [ %133, %220 ]
  %284 = load i64, i64* %282, align 8
  %285 = trunc i64 %284 to i32
  %286 = udiv i32 %285, 10
  %287 = mul i32 %286, -10
  %288 = add i32 %287, %285
  %289 = trunc i32 %288 to i8
  store i8 %289, i8* %283, align 1
  %290 = getelementptr inbounds i8, i8* %283, i64 1
  %291 = udiv i32 %285, 100
  %292 = mul nsw i32 %291, -10
  %293 = add nsw i32 %292, %286
  %294 = trunc i32 %293 to i8
  store i8 %294, i8* %290, align 1
  %295 = getelementptr inbounds i8, i8* %283, i64 2
  %296 = udiv i32 %285, 1000
  %297 = mul nsw i32 %296, -10
  %298 = add nsw i32 %297, %291
  %299 = trunc i32 %298 to i8
  store i8 %299, i8* %295, align 1
  %300 = getelementptr inbounds i8, i8* %283, i64 3
  %301 = udiv i32 %285, 10000
  %302 = mul nsw i32 %301, -10
  %303 = add nsw i32 %302, %296
  %304 = trunc i32 %303 to i8
  store i8 %304, i8* %300, align 1
  %305 = getelementptr inbounds i8, i8* %283, i64 4
  %306 = udiv i32 %285, 100000
  %307 = mul nsw i32 %306, -10
  %308 = add nsw i32 %307, %301
  %309 = trunc i32 %308 to i8
  store i8 %309, i8* %305, align 1
  %310 = getelementptr inbounds i8, i8* %283, i64 5
  %311 = udiv i32 %285, 1000000
  %312 = mul nsw i32 %311, -10
  %313 = add nsw i32 %312, %306
  %314 = trunc i32 %313 to i8
  store i8 %314, i8* %310, align 1
  %315 = getelementptr inbounds i8, i8* %283, i64 6
  %316 = udiv i32 %285, 10000000
  %317 = mul nsw i32 %316, -10
  %318 = add nsw i32 %317, %311
  %319 = trunc i32 %318 to i8
  store i8 %319, i8* %315, align 1
  %320 = getelementptr inbounds i8, i8* %283, i64 7
  %321 = udiv i32 %285, 100000000
  %322 = mul nsw i32 %321, -10
  %323 = add nsw i32 %322, %316
  %324 = trunc i32 %323 to i8
  store i8 %324, i8* %320, align 1
  %325 = getelementptr inbounds i8, i8* %283, i64 8
  %326 = trunc i32 %321 to i8
  store i8 %326, i8* %325, align 1
  %327 = getelementptr inbounds i8, i8* %283, i64 9
  %328 = getelementptr inbounds i64, i64* %282, i64 1
  %329 = icmp ult i64* %328, %199
  br i1 %329, label %281, label %330

330:                                              ; preds = %281, %220
  %331 = phi i8* [ %133, %220 ], [ %327, %281 ]
  %332 = ptrtoint i8* %331 to i64
  %333 = sub i64 %332, %123
  %334 = trunc i64 %333 to i32
  br label %408

335:                                              ; preds = %71
  %336 = icmp slt i32 %83, 50
  br i1 %336, label %337, label %342

337:                                              ; preds = %335
  %338 = sext i32 %83 to i64
  %339 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %338
  %340 = load i8, i8* %339, align 1
  %341 = zext i8 %340 to i32
  br label %342

342:                                              ; preds = %335, %337
  %343 = phi i32 [ %341, %337 ], [ %83, %335 ]
  %344 = sext i32 %80 to i64
  %345 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %344
  %346 = load i8, i8* %345, align 1
  %347 = zext i8 %346 to i32
  %348 = add nuw nsw i32 %343, %347
  %349 = icmp sgt i32 %348, 145
  br i1 %349, label %350, label %359

350:                                              ; preds = %342
  %351 = sext i32 %348 to i64
  %352 = tail call noalias i8* @uprv_malloc_69(i64 %351) #9
  %353 = icmp eq i8* %352, null
  br i1 %353, label %356, label %354

354:                                              ; preds = %350
  %355 = load i32, i32* %82, align 4
  br label %359

356:                                              ; preds = %350
  %357 = load i32, i32* %4, align 4
  %358 = or i32 %357, 16
  store i32 %358, i32* %4, align 4
  br label %477

359:                                              ; preds = %354, %342
  %360 = phi i32 [ %83, %342 ], [ %355, %354 ]
  %361 = phi i8* [ %12, %342 ], [ %352, %354 ]
  %362 = phi i8* [ null, %342 ], [ %352, %354 ]
  store i8 0, i8* %361, align 1
  %363 = icmp slt i32 %360, 50
  br i1 %363, label %364, label %369

364:                                              ; preds = %359
  %365 = sext i32 %360 to i64
  %366 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %365
  %367 = load i8, i8* %366, align 1
  %368 = zext i8 %367 to i32
  br label %369

369:                                              ; preds = %359, %364
  %370 = phi i32 [ %368, %364 ], [ %360, %359 ]
  %371 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %77, i64 0, i32 3, i64 0
  %372 = load i32, i32* %79, align 4
  %373 = icmp slt i32 %372, 50
  %374 = sext i32 %372 to i64
  br i1 %373, label %375, label %382

375:                                              ; preds = %369
  %376 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %374
  %377 = load i8, i8* %376, align 1
  %378 = zext i8 %377 to i64
  %379 = icmp eq i32 %372, 0
  br i1 %379, label %380, label %382

380:                                              ; preds = %375
  %381 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %25, i8* %381, align 4
  br label %418

382:                                              ; preds = %369, %375
  %383 = phi i64 [ %378, %375 ], [ %374, %369 ]
  %384 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %77, i64 0, i32 3, i64 %383
  %385 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %78, i64 0, i32 3, i64 0
  br label %386

386:                                              ; preds = %382, %403
  %387 = phi i64 [ 0, %382 ], [ %405, %403 ]
  %388 = phi i8* [ %371, %382 ], [ %406, %403 ]
  %389 = phi i32 [ 1, %382 ], [ %404, %403 ]
  %390 = load i8, i8* %388, align 1
  %391 = icmp eq i8 %390, 0
  br i1 %391, label %399, label %392

392:                                              ; preds = %386
  %393 = zext i8 %390 to i32
  %394 = getelementptr inbounds i8, i8* %361, i64 %387
  %395 = trunc i64 %387 to i32
  %396 = sub nsw i32 %389, %395
  %397 = call fastcc i32 @_ZL13decUnitAddSubPKhiS0_iiPhi(i8* %394, i32 %396, i8* %385, i32 %370, i32 0, i8* %394, i32 %393)
  %398 = add nsw i32 %397, %395
  br label %403

399:                                              ; preds = %386
  %400 = sext i32 %389 to i64
  %401 = getelementptr inbounds i8, i8* %361, i64 %400
  store i8 0, i8* %401, align 1
  %402 = add nsw i32 %389, 1
  br label %403

403:                                              ; preds = %399, %392
  %404 = phi i32 [ %398, %392 ], [ %402, %399 ]
  %405 = add nuw i64 %387, 1
  %406 = getelementptr inbounds i8, i8* %388, i64 1
  %407 = icmp ult i8* %406, %384
  br i1 %407, label %386, label %408

408:                                              ; preds = %403, %330
  %409 = phi i32 [ %334, %330 ], [ %404, %403 ]
  %410 = phi i8* [ %133, %330 ], [ %361, %403 ]
  %411 = phi i8* [ %121, %330 ], [ %362, %403 ]
  %412 = phi i8* [ %98, %330 ], [ null, %403 ]
  %413 = phi i32* [ %99, %330 ], [ null, %403 ]
  %414 = phi i8* [ %108, %330 ], [ null, %403 ]
  %415 = phi i32* [ %109, %330 ], [ null, %403 ]
  %416 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %25, i8* %416, align 4
  %417 = icmp slt i32 %409, 1
  br i1 %417, label %440, label %418

418:                                              ; preds = %380, %408
  %419 = phi i32* [ null, %380 ], [ %415, %408 ]
  %420 = phi i8* [ null, %380 ], [ %414, %408 ]
  %421 = phi i32* [ null, %380 ], [ %413, %408 ]
  %422 = phi i8* [ null, %380 ], [ %412, %408 ]
  %423 = phi i8* [ %362, %380 ], [ %411, %408 ]
  %424 = phi i8* [ %361, %380 ], [ %410, %408 ]
  %425 = phi i32 [ 1, %380 ], [ %409, %408 ]
  %426 = add nsw i32 %425, -1
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds i8, i8* %424, i64 %427
  br label %429

429:                                              ; preds = %436, %418
  %430 = phi i32 [ %437, %436 ], [ %425, %418 ]
  %431 = phi i8* [ %438, %436 ], [ %428, %418 ]
  %432 = load i8, i8* %431, align 1
  %433 = icmp ne i8 %432, 0
  %434 = icmp eq i32 %430, 1
  %435 = or i1 %434, %433
  br i1 %435, label %440, label %436

436:                                              ; preds = %429
  %437 = add nsw i32 %430, -1
  %438 = getelementptr inbounds i8, i8* %431, i64 -1
  %439 = icmp ult i8* %438, %424
  br i1 %439, label %440, label %429

440:                                              ; preds = %429, %436, %408
  %441 = phi i32* [ %415, %408 ], [ %419, %436 ], [ %419, %429 ]
  %442 = phi i8* [ %414, %408 ], [ %420, %436 ], [ %420, %429 ]
  %443 = phi i32* [ %413, %408 ], [ %421, %436 ], [ %421, %429 ]
  %444 = phi i8* [ %412, %408 ], [ %422, %436 ], [ %422, %429 ]
  %445 = phi i8* [ %411, %408 ], [ %423, %436 ], [ %423, %429 ]
  %446 = phi i8* [ %410, %408 ], [ %424, %436 ], [ %424, %429 ]
  %447 = phi i32 [ %409, %408 ], [ %430, %429 ], [ %437, %436 ]
  %448 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %447, i32* %448, align 4
  %449 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %78, i64 0, i32 1
  %450 = load i32, i32* %449, align 4
  %451 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %77, i64 0, i32 1
  %452 = load i32, i32* %451, align 4
  %453 = add nsw i32 %452, %450
  %454 = icmp slt i32 %450, 0
  br i1 %454, label %455, label %460

455:                                              ; preds = %440
  %456 = icmp slt i32 %452, 0
  %457 = icmp sgt i32 %453, 0
  %458 = and i1 %456, %457
  %459 = select i1 %458, i32 -1999999998, i32 %453
  br label %460

460:                                              ; preds = %455, %440
  %461 = phi i32 [ %453, %440 ], [ %459, %455 ]
  %462 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %461, i32* %462, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* %3, i8* %446, i32 %447, i32* nonnull %6, i32* %4)
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %6, i32* %4)
  br label %463

463:                                              ; preds = %460, %129
  %464 = phi i8* [ %121, %129 ], [ %445, %460 ]
  %465 = phi i8* [ %98, %129 ], [ %444, %460 ]
  %466 = phi i32* [ %99, %129 ], [ %443, %460 ]
  %467 = phi i8* [ %108, %129 ], [ %442, %460 ]
  %468 = phi i32* [ %109, %129 ], [ %441, %460 ]
  %469 = icmp eq i8* %464, null
  br i1 %469, label %471, label %470

470:                                              ; preds = %463
  call void @uprv_free_69(i8* nonnull %464) #8
  br label %471

471:                                              ; preds = %463, %470
  %472 = icmp eq i32* %468, null
  br i1 %472, label %474, label %473

473:                                              ; preds = %471
  call void @uprv_free_69(i8* %467) #8
  br label %474

474:                                              ; preds = %471, %473
  %475 = icmp eq i32* %466, null
  br i1 %475, label %477, label %476

476:                                              ; preds = %474
  call void @uprv_free_69(i8* %465) #8
  br label %477

477:                                              ; preds = %356, %476, %474, %65, %62, %32
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 145, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberInvert_69(%struct.decNumber*, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp ugt i8 %9, 15
  br i1 %10, label %11, label %17

11:                                               ; preds = %7, %3
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %14, align 4
  %15 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %15, align 1
  store i8 32, i8* %12, align 4
  %16 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 128) #8
  br label %96

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 50
  br i1 %22, label %23, label %28

23:                                               ; preds = %17
  %24 = sext i32 %21 to i64
  %25 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  br label %28

28:                                               ; preds = %17, %23
  %29 = phi i32 [ %27, %23 ], [ %21, %17 ]
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %30
  %32 = getelementptr inbounds i8, i8* %31, i64 -1
  %33 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 50
  %36 = sext i32 %34 to i64
  br i1 %35, label %37, label %41

37:                                               ; preds = %28
  %38 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %36
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  br label %41

41:                                               ; preds = %28, %37
  %42 = phi i64 [ %40, %37 ], [ %36, %28 ]
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %42
  %44 = getelementptr inbounds i8, i8* %43, i64 -1
  %45 = icmp ugt i8* %19, %44
  br i1 %45, label %68, label %46

46:                                               ; preds = %41, %64
  %47 = phi i8* [ %66, %64 ], [ %19, %41 ]
  %48 = phi i8* [ %65, %64 ], [ %18, %41 ]
  %49 = icmp ugt i8* %48, %32
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = load i8, i8* %48, align 1
  br label %52

52:                                               ; preds = %46, %50
  %53 = phi i8 [ %51, %50 ], [ 0, %46 ]
  store i8 0, i8* %47, align 1
  %54 = and i8 %53, 1
  %55 = icmp eq i8 %54, 0
  %56 = select i1 %55, i8 1, i8 0
  store i8 %56, i8* %47, align 1
  %57 = urem i8 %53, 10
  %58 = icmp ugt i8 %57, 1
  br i1 %58, label %59, label %64

59:                                               ; preds = %52
  %60 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %61 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %62, align 4
  store i8 0, i8* %19, align 1
  store i8 32, i8* %60, align 4
  %63 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 128) #8
  br label %96

64:                                               ; preds = %52
  %65 = getelementptr inbounds i8, i8* %48, i64 1
  %66 = getelementptr inbounds i8, i8* %47, i64 1
  %67 = icmp ugt i8* %66, %44
  br i1 %67, label %68, label %46

68:                                               ; preds = %64, %41
  %69 = phi i8* [ %19, %41 ], [ %66, %64 ]
  %70 = ptrtoint i8* %69 to i64
  %71 = ptrtoint i8* %19 to i64
  %72 = sub i64 %70, %71
  %73 = trunc i64 %72 to i32
  %74 = icmp slt i32 %73, 1
  br i1 %74, label %91, label %75

75:                                               ; preds = %68
  %76 = shl i64 %72, 32
  %77 = add i64 %76, -4294967296
  %78 = ashr exact i64 %77, 32
  %79 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %78
  br label %80

80:                                               ; preds = %87, %75
  %81 = phi i32 [ %88, %87 ], [ %73, %75 ]
  %82 = phi i8* [ %89, %87 ], [ %79, %75 ]
  %83 = load i8, i8* %82, align 1
  %84 = icmp ne i8 %83, 0
  %85 = icmp eq i32 %81, 1
  %86 = or i1 %85, %84
  br i1 %86, label %91, label %87

87:                                               ; preds = %80
  %88 = add nsw i32 %81, -1
  %89 = getelementptr inbounds i8, i8* %82, i64 -1
  %90 = icmp ult i8* %89, %19
  br i1 %90, label %91, label %80

91:                                               ; preds = %80, %87, %68
  %92 = phi i32 [ %73, %68 ], [ %81, %80 ], [ %88, %87 ]
  %93 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %94, align 4
  %95 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %95, align 4
  br label %96

96:                                               ; preds = %59, %91, %11
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberLn_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  store i32 0, i32* %4, align 4
  %6 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 999999
  br i1 %8, label %38, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 999999
  br i1 %12, label %38, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, -999999
  br i1 %16, label %38, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 999999
  br i1 %20, label %38, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %19, 1999996
  %25 = add i32 %24, %23
  %26 = icmp ugt i32 %25, 2999996
  br i1 %26, label %27, label %40

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 0
  %31 = icmp eq i32 %19, 1
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %38

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %35 = load i8, i8* %34, align 4
  %36 = and i8 %35, 112
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %13, %9, %3, %33, %27, %17
  %39 = phi i32 [ 64, %13 ], [ 64, %9 ], [ 64, %3 ], [ 128, %33 ], [ 128, %27 ], [ 128, %17 ]
  store i32 %39, i32* %4, align 4
  br label %43

40:                                               ; preds = %33, %21
  call fastcc void @_ZL7decLnOpP9decNumberPKS_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decContext* %2, i32* nonnull %4)
  %41 = load i32, i32* %4, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %60, label %43

43:                                               ; preds = %38, %40
  %44 = phi i32 [ %39, %38 ], [ %41, %40 ]
  %45 = and i32 %44, 221
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %43
  %48 = and i32 %44, 1073741824
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = and i32 %44, -1073741825
  br label %57

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %55, align 4
  %56 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %56, align 1
  store i8 32, i8* %53, align 4
  br label %57

57:                                               ; preds = %43, %50, %52
  %58 = phi i32 [ %51, %50 ], [ %44, %52 ], [ %44, %43 ]
  %59 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 %58) #8
  br label %60

60:                                               ; preds = %40, %57
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL7decLnOpP9decNumberPKS_P10decContextPj(%struct.decNumber*, %struct.decNumber*, %struct.decContext* nocapture readonly, i32* nocapture) unnamed_addr #3 {
  %5 = bitcast %struct.decNumber* %0 to i8*
  %6 = ptrtoint %struct.decNumber* %1 to i64
  %7 = bitcast %struct.decNumber* %1 to i8*
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [5 x %struct.decNumber], align 16
  %11 = alloca [8 x %struct.decNumber], align 16
  %12 = alloca %struct.decNumber, align 4
  %13 = alloca %struct.decNumber, align 4
  %14 = alloca %struct.decContext, align 4
  %15 = alloca %struct.decContext, align 4
  %16 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  store i32 0, i32* %8, align 4
  %17 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #8
  store i32 -1431655766, i32* %9, align 4
  %18 = bitcast [5 x %struct.decNumber]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %18) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 60, i1 false)
  %19 = getelementptr inbounds [5 x %struct.decNumber], [5 x %struct.decNumber]* %10, i64 0, i64 0
  %20 = bitcast [8 x %struct.decNumber]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 96, i1 false)
  %21 = getelementptr inbounds [8 x %struct.decNumber], [8 x %struct.decNumber]* %11, i64 0, i64 0
  %22 = bitcast %struct.decNumber* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -86, i64 12, i1 false)
  %23 = bitcast %struct.decNumber* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 -86, i64 12, i1 false)
  %24 = bitcast %struct.decContext* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %24) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %24, i8 -86, i64 28, i1 false)
  %25 = bitcast %struct.decContext* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %25) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %25, i8 -86, i64 28, i1 false)
  %26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %27 = load i8, i8* %26, align 4
  %28 = zext i8 %27 to i32
  %29 = and i32 %28, 112
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %181, label %31

31:                                               ; preds = %4
  %32 = and i32 %28, 64
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %180, label %34

34:                                               ; preds = %31
  %35 = icmp slt i8 %27, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %34
  %37 = load i32, i32* %3, align 4
  %38 = or i32 %37, 128
  store i32 %38, i32* %3, align 4
  br label %540

39:                                               ; preds = %34
  %40 = icmp eq %struct.decNumber* %0, %1
  br i1 %40, label %540, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %27, i8* %42, align 4
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %50, i8* %51, align 1
  %52 = load i32, i32* %46, align 4
  %53 = icmp sgt i32 %52, 1
  br i1 %53, label %54, label %540

54:                                               ; preds = %41
  %55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %56 = icmp slt i32 %52, 50
  %57 = sext i32 %52 to i64
  br i1 %56, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %57
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i64
  br label %62

62:                                               ; preds = %58, %54
  %63 = phi i64 [ %61, %58 ], [ %57, %54 ]
  %64 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %63
  %65 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %66 = add nsw i64 %63, 9
  %67 = getelementptr i8, i8* %7, i64 %66
  %68 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %69 = icmp ugt i8* %67, %68
  %70 = select i1 %69, i8* %67, i8* %68
  %71 = sub i64 -10, %6
  %72 = getelementptr i8, i8* %70, i64 %71
  %73 = ptrtoint i8* %72 to i64
  %74 = icmp ult i8* %72, inttoptr (i64 32 to i8*)
  br i1 %74, label %170, label %75

75:                                               ; preds = %62
  %76 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %77 = add nsw i64 %63, 9
  %78 = getelementptr i8, i8* %7, i64 %77
  %79 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %80 = icmp ugt i8* %78, %79
  %81 = select i1 %80, i8* %78, i8* %79
  %82 = ptrtoint i8* %81 to i64
  %83 = sub i64 %82, %6
  %84 = getelementptr i8, i8* %5, i64 %83
  %85 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %86 = icmp ult i8* %76, %81
  %87 = icmp ult i8* %85, %84
  %88 = and i1 %86, %87
  br i1 %88, label %170, label %89

89:                                               ; preds = %75
  %90 = and i64 %73, -32
  %91 = getelementptr i8, i8* %55, i64 %90
  %92 = getelementptr i8, i8* %65, i64 %90
  %93 = add i64 %90, -32
  %94 = lshr exact i64 %93, 5
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 3
  %97 = icmp ult i64 %93, 96
  br i1 %97, label %149, label %98

98:                                               ; preds = %89
  %99 = sub nsw i64 %95, %96
  br label %100

100:                                              ; preds = %100, %98
  %101 = phi i64 [ 0, %98 ], [ %146, %100 ]
  %102 = phi i64 [ %99, %98 ], [ %147, %100 ]
  %103 = getelementptr i8, i8* %55, i64 %101
  %104 = getelementptr i8, i8* %65, i64 %101
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 1, !alias.scope !93
  %107 = getelementptr i8, i8* %104, i64 16
  %108 = bitcast i8* %107 to <16 x i8>*
  %109 = load <16 x i8>, <16 x i8>* %108, align 1, !alias.scope !93
  %110 = bitcast i8* %103 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %110, align 1, !alias.scope !96, !noalias !93
  %111 = getelementptr i8, i8* %103, i64 16
  %112 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> %109, <16 x i8>* %112, align 1, !alias.scope !96, !noalias !93
  %113 = or i64 %101, 32
  %114 = getelementptr i8, i8* %55, i64 %113
  %115 = getelementptr i8, i8* %65, i64 %113
  %116 = bitcast i8* %115 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 1, !alias.scope !93
  %118 = getelementptr i8, i8* %115, i64 16
  %119 = bitcast i8* %118 to <16 x i8>*
  %120 = load <16 x i8>, <16 x i8>* %119, align 1, !alias.scope !93
  %121 = bitcast i8* %114 to <16 x i8>*
  store <16 x i8> %117, <16 x i8>* %121, align 1, !alias.scope !96, !noalias !93
  %122 = getelementptr i8, i8* %114, i64 16
  %123 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %120, <16 x i8>* %123, align 1, !alias.scope !96, !noalias !93
  %124 = or i64 %101, 64
  %125 = getelementptr i8, i8* %55, i64 %124
  %126 = getelementptr i8, i8* %65, i64 %124
  %127 = bitcast i8* %126 to <16 x i8>*
  %128 = load <16 x i8>, <16 x i8>* %127, align 1, !alias.scope !93
  %129 = getelementptr i8, i8* %126, i64 16
  %130 = bitcast i8* %129 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !93
  %132 = bitcast i8* %125 to <16 x i8>*
  store <16 x i8> %128, <16 x i8>* %132, align 1, !alias.scope !96, !noalias !93
  %133 = getelementptr i8, i8* %125, i64 16
  %134 = bitcast i8* %133 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %134, align 1, !alias.scope !96, !noalias !93
  %135 = or i64 %101, 96
  %136 = getelementptr i8, i8* %55, i64 %135
  %137 = getelementptr i8, i8* %65, i64 %135
  %138 = bitcast i8* %137 to <16 x i8>*
  %139 = load <16 x i8>, <16 x i8>* %138, align 1, !alias.scope !93
  %140 = getelementptr i8, i8* %137, i64 16
  %141 = bitcast i8* %140 to <16 x i8>*
  %142 = load <16 x i8>, <16 x i8>* %141, align 1, !alias.scope !93
  %143 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %139, <16 x i8>* %143, align 1, !alias.scope !96, !noalias !93
  %144 = getelementptr i8, i8* %136, i64 16
  %145 = bitcast i8* %144 to <16 x i8>*
  store <16 x i8> %142, <16 x i8>* %145, align 1, !alias.scope !96, !noalias !93
  %146 = add i64 %101, 128
  %147 = add i64 %102, -4
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %100, !llvm.loop !98

149:                                              ; preds = %100, %89
  %150 = phi i64 [ 0, %89 ], [ %146, %100 ]
  %151 = icmp eq i64 %96, 0
  br i1 %151, label %168, label %152

152:                                              ; preds = %149, %152
  %153 = phi i64 [ %165, %152 ], [ %150, %149 ]
  %154 = phi i64 [ %166, %152 ], [ %96, %149 ]
  %155 = getelementptr i8, i8* %55, i64 %153
  %156 = getelementptr i8, i8* %65, i64 %153
  %157 = bitcast i8* %156 to <16 x i8>*
  %158 = load <16 x i8>, <16 x i8>* %157, align 1, !alias.scope !93
  %159 = getelementptr i8, i8* %156, i64 16
  %160 = bitcast i8* %159 to <16 x i8>*
  %161 = load <16 x i8>, <16 x i8>* %160, align 1, !alias.scope !93
  %162 = bitcast i8* %155 to <16 x i8>*
  store <16 x i8> %158, <16 x i8>* %162, align 1, !alias.scope !96, !noalias !93
  %163 = getelementptr i8, i8* %155, i64 16
  %164 = bitcast i8* %163 to <16 x i8>*
  store <16 x i8> %161, <16 x i8>* %164, align 1, !alias.scope !96, !noalias !93
  %165 = add i64 %153, 32
  %166 = add i64 %154, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %152, !llvm.loop !99

168:                                              ; preds = %152, %149
  %169 = icmp eq i64 %90, %73
  br i1 %169, label %540, label %170

170:                                              ; preds = %168, %75, %62
  %171 = phi i8* [ %55, %75 ], [ %55, %62 ], [ %91, %168 ]
  %172 = phi i8* [ %65, %75 ], [ %65, %62 ], [ %92, %168 ]
  br label %173

173:                                              ; preds = %170, %173
  %174 = phi i8* [ %178, %173 ], [ %171, %170 ]
  %175 = phi i8* [ %177, %173 ], [ %172, %170 ]
  %176 = load i8, i8* %175, align 1
  store i8 %176, i8* %174, align 1
  %177 = getelementptr inbounds i8, i8* %175, i64 1
  %178 = getelementptr inbounds i8, i8* %174, i64 1
  %179 = icmp ult i8* %177, %64
  br i1 %179, label %173, label %540, !llvm.loop !100

180:                                              ; preds = %31
  tail call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* null, %struct.decContext* %2, i32* %3)
  br label %540

181:                                              ; preds = %4
  %182 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %185, label %194

185:                                              ; preds = %181
  %186 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = icmp eq i32 %187, 1
  br i1 %188, label %189, label %194

189:                                              ; preds = %185
  %190 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %191 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %191, align 4
  %192 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %192, align 4
  %193 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %193, align 1
  store i8 -64, i8* %190, align 4
  br label %540

194:                                              ; preds = %185, %181
  %195 = icmp slt i8 %27, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %194
  %197 = load i32, i32* %3, align 4
  %198 = or i32 %197, 128
  store i32 %198, i32* %3, align 4
  br label %540

199:                                              ; preds = %194
  %200 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = icmp slt i32 %204, 41
  %206 = and i1 %202, %205
  br i1 %206, label %207, label %234

207:                                              ; preds = %199
  br i1 %184, label %208, label %222

208:                                              ; preds = %207
  %209 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %210 = load i8, i8* %209, align 1
  %211 = icmp eq i8 %210, 1
  br i1 %211, label %212, label %234

212:                                              ; preds = %208
  %213 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, 2
  br i1 %215, label %216, label %234

216:                                              ; preds = %212
  %217 = bitcast %struct.decContext* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 %217, i64 28, i1 false)
  %218 = getelementptr inbounds %struct.decContext, %struct.decContext* %14, i64 0, i32 3
  store i32 3, i32* %218, align 4
  %219 = call %struct.decNumber* @uprv_decNumberFromString_69(%struct.decNumber* %0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), %struct.decContext* nonnull %14)
  %220 = load i32, i32* %3, align 4
  %221 = or i32 %220, 2080
  store i32 %221, i32* %3, align 4
  br label %540

222:                                              ; preds = %207
  %223 = icmp eq i8 %183, 2
  br i1 %223, label %224, label %234

224:                                              ; preds = %222
  %225 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %234

228:                                              ; preds = %224
  %229 = bitcast %struct.decContext* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 %229, i64 28, i1 false)
  %230 = getelementptr inbounds %struct.decContext, %struct.decContext* %14, i64 0, i32 3
  store i32 3, i32* %230, align 4
  %231 = call %struct.decNumber* @uprv_decNumberFromString_69(%struct.decNumber* %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19, i64 0, i64 0), %struct.decContext* nonnull %14)
  %232 = load i32, i32* %3, align 4
  %233 = or i32 %232, 2080
  store i32 %233, i32* %3, align 4
  br label %540

234:                                              ; preds = %199, %208, %212, %222, %224
  %235 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 0
  %238 = icmp sgt i32 %204, 7
  %239 = select i1 %238, i32 %204, i32 7
  %240 = icmp slt i32 %236, %239
  %241 = select i1 %240, i32 %239, i32 %236
  %242 = add nuw nsw i32 %241, 2
  %243 = icmp sgt i32 %242, 16
  %244 = select i1 %243, i32 %242, i32 16
  %245 = icmp slt i32 %244, 50
  br i1 %245, label %246, label %251

246:                                              ; preds = %234
  %247 = zext i32 %244 to i64
  %248 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %247
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i32
  br label %251

251:                                              ; preds = %234, %246
  %252 = phi i32 [ %250, %246 ], [ %242, %234 ]
  %253 = add nuw i32 %252, 11
  %254 = icmp ugt i32 %253, 60
  br i1 %254, label %255, label %265

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  %257 = tail call noalias i8* @uprv_malloc_69(i64 %256) #9
  %258 = bitcast i8* %257 to %struct.decNumber*
  %259 = icmp eq i8* %257, null
  br i1 %259, label %262, label %260

260:                                              ; preds = %255
  %261 = load i32, i32* %235, align 4
  br label %265

262:                                              ; preds = %255
  %263 = load i32, i32* %3, align 4
  %264 = or i32 %263, 16
  store i32 %264, i32* %3, align 4
  br label %540

265:                                              ; preds = %260, %251
  %266 = phi i32 [ %236, %251 ], [ %261, %260 ]
  %267 = phi i8* [ null, %251 ], [ %257, %260 ]
  %268 = phi %struct.decNumber* [ null, %251 ], [ %258, %260 ]
  %269 = phi %struct.decNumber* [ %19, %251 ], [ %258, %260 ]
  %270 = add nsw i32 %266, %242
  %271 = icmp sgt i32 %270, 16
  %272 = select i1 %271, i32 %270, i32 16
  %273 = icmp slt i32 %272, 50
  br i1 %273, label %274, label %279

274:                                              ; preds = %265
  %275 = zext i32 %272 to i64
  %276 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %275
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i32
  br label %279

279:                                              ; preds = %265, %274
  %280 = phi i32 [ %278, %274 ], [ %270, %265 ]
  %281 = add nuw i32 %280, 11
  %282 = icmp ugt i32 %281, 96
  br i1 %282, label %283, label %291

283:                                              ; preds = %279
  %284 = zext i32 %281 to i64
  %285 = tail call noalias i8* @uprv_malloc_69(i64 %284) #9
  %286 = bitcast i8* %285 to %struct.decNumber*
  %287 = icmp eq i8* %285, null
  br i1 %287, label %288, label %291

288:                                              ; preds = %283
  %289 = load i32, i32* %3, align 4
  %290 = or i32 %289, 16
  store i32 %290, i32* %3, align 4
  br label %532

291:                                              ; preds = %283, %279
  %292 = phi i8* [ null, %279 ], [ %285, %283 ]
  %293 = phi %struct.decNumber* [ null, %279 ], [ %286, %283 ]
  %294 = phi %struct.decNumber* [ %21, %279 ], [ %286, %283 ]
  %295 = call %struct.decContext* @uprv_decContextDefault_69(%struct.decContext* nonnull %14, i32 64) #8
  %296 = load i32, i32* %200, align 4
  %297 = load i32, i32* %235, align 4
  %298 = add nsw i32 %297, %296
  %299 = icmp sgt i32 %298, -1
  br i1 %299, label %304, label %300

300:                                              ; preds = %291
  %301 = icmp eq i32 %298, -2147483648
  %302 = sub nsw i32 0, %298
  %303 = select i1 %301, i32 -2147483648, i32 %302
  br label %304

304:                                              ; preds = %300, %291
  %305 = phi i32 [ %298, %291 ], [ %303, %300 ]
  %306 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %269, i64 0, i32 2
  store i8 0, i8* %306, align 4
  %307 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %269, i64 0, i32 1
  store i32 0, i32* %307, align 4
  %308 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %269, i64 0, i32 0
  store i32 1, i32* %308, align 4
  %309 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %269, i64 0, i32 3, i64 0
  store i8 0, i8* %309, align 1
  %310 = icmp eq i32 %305, 0
  br i1 %310, label %343, label %311

311:                                              ; preds = %304, %311
  %312 = phi i8* [ %317, %311 ], [ %309, %304 ]
  %313 = phi i32 [ %316, %311 ], [ %305, %304 ]
  %314 = urem i32 %313, 10
  %315 = trunc i32 %314 to i8
  store i8 %315, i8* %312, align 1
  %316 = udiv i32 %313, 10
  %317 = getelementptr inbounds i8, i8* %312, i64 1
  %318 = icmp ult i32 %313, 10
  br i1 %318, label %319, label %311

319:                                              ; preds = %311
  %320 = ptrtoint i8* %317 to i64
  %321 = ptrtoint i8* %309 to i64
  %322 = sub i64 %320, %321
  %323 = trunc i64 %322 to i32
  %324 = icmp slt i32 %323, 1
  br i1 %324, label %341, label %325

325:                                              ; preds = %319
  %326 = shl i64 %322, 32
  %327 = add i64 %326, -4294967296
  %328 = ashr exact i64 %327, 32
  %329 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %269, i64 0, i32 3, i64 %328
  br label %330

330:                                              ; preds = %337, %325
  %331 = phi i32 [ %338, %337 ], [ %323, %325 ]
  %332 = phi i8* [ %339, %337 ], [ %329, %325 ]
  %333 = load i8, i8* %332, align 1
  %334 = icmp ne i8 %333, 0
  %335 = icmp eq i32 %331, 1
  %336 = or i1 %335, %334
  br i1 %336, label %341, label %337

337:                                              ; preds = %330
  %338 = add nsw i32 %331, -1
  %339 = getelementptr inbounds i8, i8* %332, i64 -1
  %340 = icmp ult i8* %339, %309
  br i1 %340, label %341, label %330

341:                                              ; preds = %337, %330, %319
  %342 = phi i32 [ %323, %319 ], [ %331, %330 ], [ %338, %337 ]
  store i32 %342, i32* %308, align 4
  br label %343

343:                                              ; preds = %341, %304
  %344 = icmp slt i32 %298, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %343
  store i8 -128, i8* %306, align 4
  br label %346

346:                                              ; preds = %345, %343
  %347 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %294, i64 0, i32 2
  store i8 0, i8* %347, align 4
  %348 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %294, i64 0, i32 1
  %349 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %294, i64 0, i32 0
  %350 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %294, i64 0, i32 3, i64 0
  store i8 5, i8* %350, align 1
  %351 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %294, i64 0, i32 3, i64 1
  store i8 8, i8* %351, align 1
  %352 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %294, i64 0, i32 3, i64 2
  store i8 5, i8* %352, align 1
  %353 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %294, i64 0, i32 3, i64 3
  store i8 2, i8* %353, align 1
  %354 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %294, i64 0, i32 3, i64 4
  store i8 0, i8* %354, align 1
  %355 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %294, i64 0, i32 3, i64 5
  store i8 3, i8* %355, align 1
  %356 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %294, i64 0, i32 3, i64 6
  store i8 2, i8* %356, align 1
  %357 = ptrtoint i8* %350 to i64
  store i32 7, i32* %349, align 4
  store i32 -6, i32* %348, align 4
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %269, %struct.decNumber* %269, %struct.decNumber* %294, %struct.decContext* nonnull %14, i32* nonnull %8)
  store i32 0, i32* %9, align 4
  %358 = getelementptr inbounds %struct.decContext, %struct.decContext* %14, i64 0, i32 0
  store i32 2, i32* %358, align 4
  %359 = getelementptr inbounds %struct.decContext, %struct.decContext* %14, i64 0, i32 3
  store i32 5, i32* %359, align 4
  %360 = load i8, i8* %26, align 4
  store i8 %360, i8* %347, align 4
  %361 = load i32, i32* %200, align 4
  store i32 %361, i32* %348, align 4
  %362 = load i32, i32* %235, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %294, %struct.decContext* nonnull %14, i8* %182, i32 %362, i32* nonnull %9, i32* nonnull %8) #8
  store i32 0, i32* %348, align 4
  %363 = call fastcc i32 @_ZL9decGetIntPK9decNumber(%struct.decNumber* %294)
  %364 = icmp slt i32 %363, 10
  %365 = mul i32 %363, 10
  %366 = select i1 %364, i32 %365, i32 %363
  %367 = add nsw i32 %366, -10
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds [90 x i16], [90 x i16]* @_ZL4LNnn, i64 0, i64 %368
  %370 = load i16, i16* %369, align 2
  %371 = zext i16 %370 to i32
  %372 = lshr i32 %371, 2
  store i8 0, i8* %347, align 4
  store i32 0, i32* %348, align 4
  store i32 1, i32* %349, align 4
  store i8 0, i8* %350, align 1
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %405, label %374

374:                                              ; preds = %346, %374
  %375 = phi i8* [ %380, %374 ], [ %350, %346 ]
  %376 = phi i32 [ %379, %374 ], [ %372, %346 ]
  %377 = urem i32 %376, 10
  %378 = trunc i32 %377 to i8
  store i8 %378, i8* %375, align 1
  %379 = udiv i32 %376, 10
  %380 = getelementptr inbounds i8, i8* %375, i64 1
  %381 = icmp ult i32 %376, 10
  br i1 %381, label %382, label %374

382:                                              ; preds = %374
  %383 = ptrtoint i8* %380 to i64
  %384 = sub i64 %383, %357
  %385 = trunc i64 %384 to i32
  %386 = icmp slt i32 %385, 1
  br i1 %386, label %403, label %387

387:                                              ; preds = %382
  %388 = shl i64 %384, 32
  %389 = add i64 %388, -4294967296
  %390 = ashr exact i64 %389, 32
  %391 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %294, i64 0, i32 3, i64 %390
  br label %392

392:                                              ; preds = %399, %387
  %393 = phi i32 [ %400, %399 ], [ %385, %387 ]
  %394 = phi i8* [ %401, %399 ], [ %391, %387 ]
  %395 = load i8, i8* %394, align 1
  %396 = icmp ne i8 %395, 0
  %397 = icmp eq i32 %393, 1
  %398 = or i1 %397, %396
  br i1 %398, label %403, label %399

399:                                              ; preds = %392
  %400 = add nsw i32 %393, -1
  %401 = getelementptr inbounds i8, i8* %394, i64 -1
  %402 = icmp ult i8* %401, %350
  br i1 %402, label %403, label %392

403:                                              ; preds = %399, %392, %382
  %404 = phi i32 [ %385, %382 ], [ %393, %392 ], [ %400, %399 ]
  store i32 %404, i32* %349, align 4
  br label %405

405:                                              ; preds = %346, %403
  %406 = and i32 %371, 3
  %407 = sub nuw nsw i32 -3, %406
  store i32 %407, i32* %348, align 4
  store i8 -128, i8* %347, align 4
  store i32 16, i32* %358, align 4
  store i32 3, i32* %359, align 4
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %269, %struct.decNumber* %269, %struct.decNumber* %294, %struct.decContext* nonnull %14, i8 zeroext 0, i32* nonnull %8)
  %408 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i64 0, i32 2
  store i8 0, i8* %408, align 4
  %409 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i64 0, i32 1
  store i32 0, i32* %409, align 4
  %410 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i64 0, i32 0
  store i32 1, i32* %410, align 4
  %411 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i64 0, i32 3, i64 0
  store i8 1, i8* %411, align 1
  %412 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 1
  %413 = load i32, i32* %412, align 4
  %414 = getelementptr inbounds %struct.decContext, %struct.decContext* %14, i64 0, i32 1
  store i32 %413, i32* %414, align 4
  %415 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 2
  %416 = load i32, i32* %415, align 4
  %417 = getelementptr inbounds %struct.decContext, %struct.decContext* %14, i64 0, i32 2
  store i32 %416, i32* %417, align 4
  %418 = getelementptr inbounds %struct.decContext, %struct.decContext* %14, i64 0, i32 6
  store i8 0, i8* %418, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* nonnull align 4 %24, i64 28, i1 false)
  %419 = getelementptr inbounds %struct.decContext, %struct.decContext* %15, i64 0, i32 1
  store i32 1999998, i32* %419, align 4
  %420 = getelementptr inbounds %struct.decContext, %struct.decContext* %15, i64 0, i32 2
  store i32 -1999998, i32* %420, align 4
  store i32 9, i32* %358, align 4
  %421 = load i32, i32* %235, align 4
  %422 = add nsw i32 %421, 9
  %423 = getelementptr inbounds %struct.decContext, %struct.decContext* %15, i64 0, i32 0
  br label %424

424:                                              ; preds = %508, %405
  %425 = phi i32 [ %422, %405 ], [ %513, %508 ]
  %426 = phi i32 [ 9, %405 ], [ %511, %508 ]
  store i32 %425, i32* %423, align 4
  %427 = icmp eq i32 %426, %242
  br label %428

428:                                              ; preds = %424, %507
  %429 = load i8, i8* %306, align 4
  %430 = xor i8 %429, -128
  store i8 %430, i8* %306, align 4
  call fastcc void @_ZL8decExpOpP9decNumberPKS_P10decContextPj(%struct.decNumber* %294, %struct.decNumber* %269, %struct.decContext* nonnull %15, i32* nonnull %8)
  %431 = load i8, i8* %306, align 4
  %432 = xor i8 %431, -128
  store i8 %432, i8* %306, align 4
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %294, %struct.decNumber* %294, %struct.decNumber* %1, %struct.decContext* nonnull %15, i32* nonnull %8)
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %294, %struct.decNumber* %294, %struct.decNumber* nonnull %12, %struct.decContext* nonnull %15, i8 zeroext -128, i32* nonnull %8)
  %433 = load i8, i8* %350, align 1
  %434 = icmp eq i8 %433, 0
  %435 = load i32, i32* %349, align 4
  %436 = icmp eq i32 %435, 1
  %437 = and i1 %434, %436
  br i1 %437, label %438, label %444

438:                                              ; preds = %428
  %439 = load i8, i8* %347, align 4
  %440 = and i8 %439, 112
  %441 = icmp eq i8 %440, 0
  br i1 %441, label %442, label %444

442:                                              ; preds = %438
  %443 = load i32, i32* %308, align 4
  br label %454

444:                                              ; preds = %428, %438
  %445 = phi i32 [ 1, %438 ], [ %435, %428 ]
  %446 = load i32, i32* %308, align 4
  %447 = load i32, i32* %307, align 4
  %448 = add nsw i32 %447, %446
  %449 = load i32, i32* %348, align 4
  %450 = add nsw i32 %449, %445
  %451 = load i32, i32* %237, align 4
  %452 = add nsw i32 %450, %451
  %453 = icmp sgt i32 %448, %452
  br i1 %453, label %454, label %507

454:                                              ; preds = %442, %444
  %455 = phi i32 [ 1, %442 ], [ %445, %444 ]
  %456 = phi i32 [ %443, %442 ], [ %446, %444 ]
  %457 = icmp eq i32 %456, %242
  br i1 %457, label %514, label %458

458:                                              ; preds = %454
  %459 = load i8, i8* %309, align 1
  %460 = icmp eq i8 %459, 0
  %461 = icmp eq i32 %456, 1
  %462 = and i1 %461, %460
  br i1 %462, label %463, label %497

463:                                              ; preds = %458
  %464 = load i8, i8* %306, align 4
  %465 = and i8 %464, 112
  %466 = icmp eq i8 %465, 0
  br i1 %466, label %467, label %497

467:                                              ; preds = %463
  %468 = load i8, i8* %26, align 4
  %469 = load i8, i8* %408, align 4
  %470 = or i8 %469, %468
  %471 = and i8 %470, 48
  %472 = icmp eq i8 %471, 0
  br i1 %472, label %474, label %473

473:                                              ; preds = %467
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* nonnull %13, %struct.decNumber* %1, %struct.decNumber* nonnull %12, %struct.decContext* nonnull %14, i32* nonnull %8) #8
  br label %489

474:                                              ; preds = %467
  %475 = call fastcc i32 @_ZL10decComparePK9decNumberS1_h(%struct.decNumber* %1, %struct.decNumber* nonnull %12, i8 zeroext 0) #8
  %476 = icmp eq i32 %475, -2147483648
  br i1 %476, label %477, label %480

477:                                              ; preds = %474
  %478 = load i32, i32* %8, align 4
  %479 = or i32 %478, 16
  store i32 %479, i32* %8, align 4
  br label %489

480:                                              ; preds = %474
  %481 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %13, i64 0, i32 2
  store i8 0, i8* %481, align 4
  %482 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %13, i64 0, i32 1
  store i32 0, i32* %482, align 4
  %483 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %13, i64 0, i32 0
  store i32 1, i32* %483, align 4
  %484 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %13, i64 0, i32 3, i64 0
  store i8 0, i8* %484, align 1
  %485 = icmp eq i32 %475, 0
  br i1 %485, label %489, label %486

486:                                              ; preds = %480
  store i8 1, i8* %484, align 1
  %487 = icmp slt i32 %475, 0
  br i1 %487, label %488, label %489

488:                                              ; preds = %486
  store i8 -128, i8* %481, align 4
  br label %489

489:                                              ; preds = %473, %477, %480, %486, %488
  %490 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %13, i64 0, i32 3, i64 0
  %491 = load i8, i8* %490, align 1
  %492 = icmp eq i8 %491, 0
  br i1 %492, label %493, label %494

493:                                              ; preds = %489
  store i32 0, i32* %307, align 4
  br label %514

494:                                              ; preds = %489
  %495 = load i32, i32* %3, align 4
  %496 = or i32 %495, 2080
  store i32 %496, i32* %3, align 4
  br label %514

497:                                              ; preds = %463, %458
  %498 = icmp eq i32 %455, 1
  %499 = and i1 %434, %498
  br i1 %499, label %500, label %507

500:                                              ; preds = %497
  %501 = load i8, i8* %347, align 4
  %502 = and i8 %501, 112
  %503 = icmp eq i8 %502, 0
  br i1 %503, label %504, label %507

504:                                              ; preds = %500
  %505 = load i32, i32* %307, align 4
  %506 = sub nsw i32 %505, %242
  store i32 %506, i32* %348, align 4
  br label %507

507:                                              ; preds = %497, %500, %504, %444
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %269, %struct.decNumber* %269, %struct.decNumber* %294, %struct.decContext* nonnull %14, i8 zeroext 0, i32* nonnull %8)
  br i1 %427, label %428, label %508

508:                                              ; preds = %507
  %509 = shl nsw i32 %426, 1
  %510 = icmp sgt i32 %509, %242
  %511 = select i1 %510, i32 %242, i32 %509
  store i32 %511, i32* %358, align 4
  %512 = load i32, i32* %235, align 4
  %513 = add nsw i32 %512, %511
  br label %424

514:                                              ; preds = %454, %493, %494
  store i32 1, i32* %9, align 4
  %515 = load i8, i8* %309, align 1
  %516 = icmp eq i8 %515, 0
  %517 = load i32, i32* %308, align 4
  %518 = icmp eq i32 %517, 1
  %519 = and i1 %516, %518
  br i1 %519, label %520, label %525

520:                                              ; preds = %514
  %521 = load i8, i8* %306, align 4
  %522 = and i8 %521, 112
  %523 = icmp eq i8 %522, 0
  br i1 %523, label %524, label %525

524:                                              ; preds = %520
  store i32 0, i32* %9, align 4
  br label %525

525:                                              ; preds = %514, %524, %520
  %526 = phi i32 [ 1, %524 ], [ 1, %520 ], [ %517, %514 ]
  %527 = load i32, i32* %237, align 4
  store i32 %527, i32* %358, align 4
  %528 = load i8, i8* %306, align 4
  %529 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %528, i8* %529, align 4
  %530 = load i32, i32* %307, align 4
  %531 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %530, i32* %531, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* nonnull %14, i8* %309, i32 %526, i32* nonnull %9, i32* %3) #8
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %2, i32* nonnull %9, i32* %3)
  br label %532

532:                                              ; preds = %525, %288
  %533 = phi i8* [ null, %288 ], [ %292, %525 ]
  %534 = phi %struct.decNumber* [ null, %288 ], [ %293, %525 ]
  %535 = icmp eq %struct.decNumber* %268, null
  br i1 %535, label %537, label %536

536:                                              ; preds = %532
  call void @uprv_free_69(i8* %267) #8
  br label %537

537:                                              ; preds = %532, %536
  %538 = icmp eq %struct.decNumber* %534, null
  br i1 %538, label %540, label %539

539:                                              ; preds = %537
  call void @uprv_free_69(i8* %533) #8
  br label %540

540:                                              ; preds = %173, %168, %36, %180, %189, %196, %216, %228, %262, %39, %41, %537, %539
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %25) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberLogB_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %4 = bitcast %struct.decNumber* %0 to i8*
  %5 = ptrtoint %struct.decNumber* %1 to i64
  %6 = bitcast %struct.decNumber* %1 to i8*
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 0, i32* %7, align 4
  %9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 4
  %11 = zext i8 %10 to i32
  %12 = and i32 %11, 48
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* null, %struct.decContext* %2, i32* nonnull %7)
  br label %231

15:                                               ; preds = %3
  %16 = and i32 %11, 64
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %163, label %18

18:                                               ; preds = %15
  %19 = icmp eq %struct.decNumber* %0, %1
  br i1 %19, label %159, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %10, i8* %21, align 4
  %22 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %29 = load i8, i8* %28, align 1
  %30 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %29, i8* %30, align 1
  %31 = load i32, i32* %25, align 4
  %32 = icmp sgt i32 %31, 1
  br i1 %32, label %33, label %159

33:                                               ; preds = %20
  %34 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %35 = icmp slt i32 %31, 50
  %36 = sext i32 %31 to i64
  br i1 %35, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %36
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  br label %41

41:                                               ; preds = %37, %33
  %42 = phi i64 [ %40, %37 ], [ %36, %33 ]
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %42
  %44 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %45 = add nsw i64 %42, 9
  %46 = getelementptr i8, i8* %6, i64 %45
  %47 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %48 = icmp ugt i8* %46, %47
  %49 = select i1 %48, i8* %46, i8* %47
  %50 = sub i64 -10, %5
  %51 = getelementptr i8, i8* %49, i64 %50
  %52 = ptrtoint i8* %51 to i64
  %53 = icmp ult i8* %51, inttoptr (i64 32 to i8*)
  br i1 %53, label %149, label %54

54:                                               ; preds = %41
  %55 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %56 = add nsw i64 %42, 9
  %57 = getelementptr i8, i8* %6, i64 %56
  %58 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %59 = icmp ugt i8* %57, %58
  %60 = select i1 %59, i8* %57, i8* %58
  %61 = ptrtoint i8* %60 to i64
  %62 = sub i64 %61, %5
  %63 = getelementptr i8, i8* %4, i64 %62
  %64 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %65 = icmp ult i8* %55, %60
  %66 = icmp ult i8* %64, %63
  %67 = and i1 %65, %66
  br i1 %67, label %149, label %68

68:                                               ; preds = %54
  %69 = and i64 %52, -32
  %70 = getelementptr i8, i8* %34, i64 %69
  %71 = getelementptr i8, i8* %44, i64 %69
  %72 = add i64 %69, -32
  %73 = lshr exact i64 %72, 5
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 3
  %76 = icmp ult i64 %72, 96
  br i1 %76, label %128, label %77

77:                                               ; preds = %68
  %78 = sub nsw i64 %74, %75
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %125, %79 ]
  %81 = phi i64 [ %78, %77 ], [ %126, %79 ]
  %82 = getelementptr i8, i8* %34, i64 %80
  %83 = getelementptr i8, i8* %44, i64 %80
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1, !alias.scope !101
  %86 = getelementptr i8, i8* %83, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1, !alias.scope !101
  %89 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %89, align 1, !alias.scope !104, !noalias !101
  %90 = getelementptr i8, i8* %82, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %91, align 1, !alias.scope !104, !noalias !101
  %92 = or i64 %80, 32
  %93 = getelementptr i8, i8* %34, i64 %92
  %94 = getelementptr i8, i8* %44, i64 %92
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1, !alias.scope !101
  %97 = getelementptr i8, i8* %94, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1, !alias.scope !101
  %100 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %100, align 1, !alias.scope !104, !noalias !101
  %101 = getelementptr i8, i8* %93, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %102, align 1, !alias.scope !104, !noalias !101
  %103 = or i64 %80, 64
  %104 = getelementptr i8, i8* %34, i64 %103
  %105 = getelementptr i8, i8* %44, i64 %103
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !101
  %108 = getelementptr i8, i8* %105, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1, !alias.scope !101
  %111 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %111, align 1, !alias.scope !104, !noalias !101
  %112 = getelementptr i8, i8* %104, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %113, align 1, !alias.scope !104, !noalias !101
  %114 = or i64 %80, 96
  %115 = getelementptr i8, i8* %34, i64 %114
  %116 = getelementptr i8, i8* %44, i64 %114
  %117 = bitcast i8* %116 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1, !alias.scope !101
  %119 = getelementptr i8, i8* %116, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1, !alias.scope !101
  %122 = bitcast i8* %115 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 1, !alias.scope !104, !noalias !101
  %123 = getelementptr i8, i8* %115, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %124, align 1, !alias.scope !104, !noalias !101
  %125 = add i64 %80, 128
  %126 = add i64 %81, -4
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %79, !llvm.loop !106

128:                                              ; preds = %79, %68
  %129 = phi i64 [ 0, %68 ], [ %125, %79 ]
  %130 = icmp eq i64 %75, 0
  br i1 %130, label %147, label %131

131:                                              ; preds = %128, %131
  %132 = phi i64 [ %144, %131 ], [ %129, %128 ]
  %133 = phi i64 [ %145, %131 ], [ %75, %128 ]
  %134 = getelementptr i8, i8* %34, i64 %132
  %135 = getelementptr i8, i8* %44, i64 %132
  %136 = bitcast i8* %135 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1, !alias.scope !101
  %138 = getelementptr i8, i8* %135, i64 16
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1, !alias.scope !101
  %141 = bitcast i8* %134 to <16 x i8>*
  store <16 x i8> %137, <16 x i8>* %141, align 1, !alias.scope !104, !noalias !101
  %142 = getelementptr i8, i8* %134, i64 16
  %143 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %140, <16 x i8>* %143, align 1, !alias.scope !104, !noalias !101
  %144 = add i64 %132, 32
  %145 = add i64 %133, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %131, !llvm.loop !107

147:                                              ; preds = %131, %128
  %148 = icmp eq i64 %69, %52
  br i1 %148, label %159, label %149

149:                                              ; preds = %147, %54, %41
  %150 = phi i8* [ %34, %54 ], [ %34, %41 ], [ %70, %147 ]
  %151 = phi i8* [ %44, %54 ], [ %44, %41 ], [ %71, %147 ]
  br label %152

152:                                              ; preds = %149, %152
  %153 = phi i8* [ %157, %152 ], [ %150, %149 ]
  %154 = phi i8* [ %156, %152 ], [ %151, %149 ]
  %155 = load i8, i8* %154, align 1
  store i8 %155, i8* %153, align 1
  %156 = getelementptr inbounds i8, i8* %154, i64 1
  %157 = getelementptr inbounds i8, i8* %153, i64 1
  %158 = icmp ult i8* %156, %43
  br i1 %158, label %152, label %159, !llvm.loop !108

159:                                              ; preds = %152, %147, %18, %20
  %160 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %161 = load i8, i8* %160, align 4
  %162 = and i8 %161, 127
  store i8 %162, i8* %160, align 4
  br label %231

163:                                              ; preds = %15
  %164 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp eq i8 %165, 0
  %167 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %179

169:                                              ; preds = %163
  %170 = icmp eq i32 %168, 1
  %171 = and i32 %11, 112
  %172 = icmp eq i32 %171, 0
  %173 = and i1 %172, %170
  br i1 %173, label %174, label %179

174:                                              ; preds = %169
  %175 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %176 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %176, align 4
  %177 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %177, align 4
  %178 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %178, align 1
  store i8 -64, i8* %175, align 4
  store i32 2, i32* %7, align 4
  br label %247

179:                                              ; preds = %163, %169
  %180 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = add nsw i32 %168, %181
  %183 = add nsw i32 %182, -1
  %184 = icmp sgt i32 %182, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %179
  %186 = icmp eq i32 %183, -2147483648
  %187 = sub i32 1, %182
  %188 = select i1 %186, i32 -2147483648, i32 %187
  br label %189

189:                                              ; preds = %185, %179
  %190 = phi i32 [ %183, %179 ], [ %188, %185 ]
  %191 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %191, align 4
  %192 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %192, align 4
  %193 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %193, align 4
  %194 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %194, align 1
  %195 = icmp eq i32 %190, 0
  br i1 %195, label %228, label %196

196:                                              ; preds = %189, %196
  %197 = phi i8* [ %202, %196 ], [ %194, %189 ]
  %198 = phi i32 [ %201, %196 ], [ %190, %189 ]
  %199 = urem i32 %198, 10
  %200 = trunc i32 %199 to i8
  store i8 %200, i8* %197, align 1
  %201 = udiv i32 %198, 10
  %202 = getelementptr inbounds i8, i8* %197, i64 1
  %203 = icmp ult i32 %198, 10
  br i1 %203, label %204, label %196

204:                                              ; preds = %196
  %205 = ptrtoint i8* %202 to i64
  %206 = ptrtoint i8* %194 to i64
  %207 = sub i64 %205, %206
  %208 = trunc i64 %207 to i32
  %209 = icmp slt i32 %208, 1
  br i1 %209, label %226, label %210

210:                                              ; preds = %204
  %211 = shl i64 %207, 32
  %212 = add i64 %211, -4294967296
  %213 = ashr exact i64 %212, 32
  %214 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %213
  br label %215

215:                                              ; preds = %222, %210
  %216 = phi i32 [ %223, %222 ], [ %208, %210 ]
  %217 = phi i8* [ %224, %222 ], [ %214, %210 ]
  %218 = load i8, i8* %217, align 1
  %219 = icmp ne i8 %218, 0
  %220 = icmp eq i32 %216, 1
  %221 = or i1 %220, %219
  br i1 %221, label %226, label %222

222:                                              ; preds = %215
  %223 = add nsw i32 %216, -1
  %224 = getelementptr inbounds i8, i8* %217, i64 -1
  %225 = icmp ult i8* %224, %194
  br i1 %225, label %226, label %215

226:                                              ; preds = %222, %215, %204
  %227 = phi i32 [ %208, %204 ], [ %216, %215 ], [ %223, %222 ]
  store i32 %227, i32* %193, align 4
  br label %228

228:                                              ; preds = %226, %189
  %229 = icmp slt i32 %182, 1
  br i1 %229, label %230, label %231

230:                                              ; preds = %228
  store i8 -128, i8* %191, align 4
  br label %231

231:                                              ; preds = %230, %228, %159, %14
  %232 = load i32, i32* %7, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %250, label %234

234:                                              ; preds = %231
  %235 = and i32 %232, 221
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %247, label %237

237:                                              ; preds = %234
  %238 = and i32 %232, 1073741824
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %242, label %240

240:                                              ; preds = %237
  %241 = and i32 %232, -1073741825
  br label %247

242:                                              ; preds = %237
  %243 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %244 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %244, align 4
  %245 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %245, align 4
  %246 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %246, align 1
  store i8 32, i8* %243, align 4
  br label %247

247:                                              ; preds = %174, %234, %240, %242
  %248 = phi i32 [ %241, %240 ], [ %232, %242 ], [ %232, %234 ], [ 2, %174 ]
  %249 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 %248) #8
  br label %250

250:                                              ; preds = %231, %247
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber*, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext* nocapture readonly, i32* nocapture) unnamed_addr #0 {
  %6 = ptrtoint %struct.decNumber* %0 to i64
  %7 = bitcast %struct.decNumber* %0 to i8*
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = zext i8 %9 to i32
  %11 = and i32 %10, 16
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %5
  %14 = load i32, i32* %4, align 4
  %15 = or i32 %14, 1073741952
  store i32 %15, i32* %4, align 4
  br label %30

16:                                               ; preds = %5
  %17 = icmp eq %struct.decNumber* %2, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %20 = load i8, i8* %19, align 4
  %21 = and i8 %20, 16
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = load i32, i32* %4, align 4
  %25 = or i32 %24, 1073741952
  store i32 %25, i32* %4, align 4
  br label %30

26:                                               ; preds = %18
  %27 = and i32 %10, 32
  %28 = icmp eq i32 %27, 0
  %29 = select i1 %28, %struct.decNumber* %2, %struct.decNumber* %1
  br label %30

30:                                               ; preds = %26, %16, %23, %13
  %31 = phi %struct.decNumber* [ %1, %13 ], [ %1, %16 ], [ %2, %23 ], [ %29, %26 ]
  %32 = bitcast %struct.decNumber* %31 to i8*
  %33 = ptrtoint %struct.decNumber* %31 to i64
  %34 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %35, %37
  br i1 %38, label %181, label %39

39:                                               ; preds = %30
  %40 = icmp eq %struct.decNumber* %31, %0
  br i1 %40, label %377, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i64 0, i32 2
  %43 = load i8, i8* %42, align 4
  %44 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %43, i8* %44, align 4
  %45 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %46, i32* %47, align 4
  %48 = load i32, i32* %34, align 4
  %49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 0
  %51 = load i8, i8* %50, align 1
  %52 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %51, i8* %52, align 1
  %53 = load i32, i32* %34, align 4
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %55, label %377

55:                                               ; preds = %41
  %56 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %57 = icmp slt i32 %53, 50
  %58 = sext i32 %53 to i64
  br i1 %57, label %59, label %63

59:                                               ; preds = %55
  %60 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %58
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  br label %63

63:                                               ; preds = %59, %55
  %64 = phi i64 [ %62, %59 ], [ %58, %55 ]
  %65 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 %64
  %66 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 1
  %67 = add nsw i64 %64, 9
  %68 = getelementptr i8, i8* %32, i64 %67
  %69 = getelementptr %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 2
  %70 = icmp ugt i8* %68, %69
  %71 = select i1 %70, i8* %68, i8* %69
  %72 = sub i64 -10, %33
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = icmp ult i8* %73, inttoptr (i64 32 to i8*)
  br i1 %75, label %171, label %76

76:                                               ; preds = %63
  %77 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %78 = add nsw i64 %64, 9
  %79 = getelementptr i8, i8* %32, i64 %78
  %80 = getelementptr %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 2
  %81 = icmp ugt i8* %79, %80
  %82 = select i1 %81, i8* %79, i8* %80
  %83 = ptrtoint i8* %82 to i64
  %84 = sub i64 %83, %33
  %85 = getelementptr i8, i8* %7, i64 %84
  %86 = getelementptr %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 1
  %87 = icmp ult i8* %77, %82
  %88 = icmp ult i8* %86, %85
  %89 = and i1 %87, %88
  br i1 %89, label %171, label %90

90:                                               ; preds = %76
  %91 = and i64 %74, -32
  %92 = getelementptr i8, i8* %56, i64 %91
  %93 = getelementptr i8, i8* %66, i64 %91
  %94 = add i64 %91, -32
  %95 = lshr exact i64 %94, 5
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 3
  %98 = icmp ult i64 %94, 96
  br i1 %98, label %150, label %99

99:                                               ; preds = %90
  %100 = sub nsw i64 %96, %97
  br label %101

101:                                              ; preds = %101, %99
  %102 = phi i64 [ 0, %99 ], [ %147, %101 ]
  %103 = phi i64 [ %100, %99 ], [ %148, %101 ]
  %104 = getelementptr i8, i8* %56, i64 %102
  %105 = getelementptr i8, i8* %66, i64 %102
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !109
  %108 = getelementptr i8, i8* %105, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1, !alias.scope !109
  %111 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %111, align 1, !alias.scope !112, !noalias !109
  %112 = getelementptr i8, i8* %104, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %113, align 1, !alias.scope !112, !noalias !109
  %114 = or i64 %102, 32
  %115 = getelementptr i8, i8* %56, i64 %114
  %116 = getelementptr i8, i8* %66, i64 %114
  %117 = bitcast i8* %116 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1, !alias.scope !109
  %119 = getelementptr i8, i8* %116, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1, !alias.scope !109
  %122 = bitcast i8* %115 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 1, !alias.scope !112, !noalias !109
  %123 = getelementptr i8, i8* %115, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %124, align 1, !alias.scope !112, !noalias !109
  %125 = or i64 %102, 64
  %126 = getelementptr i8, i8* %56, i64 %125
  %127 = getelementptr i8, i8* %66, i64 %125
  %128 = bitcast i8* %127 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1, !alias.scope !109
  %130 = getelementptr i8, i8* %127, i64 16
  %131 = bitcast i8* %130 to <16 x i8>*
  %132 = load <16 x i8>, <16 x i8>* %131, align 1, !alias.scope !109
  %133 = bitcast i8* %126 to <16 x i8>*
  store <16 x i8> %129, <16 x i8>* %133, align 1, !alias.scope !112, !noalias !109
  %134 = getelementptr i8, i8* %126, i64 16
  %135 = bitcast i8* %134 to <16 x i8>*
  store <16 x i8> %132, <16 x i8>* %135, align 1, !alias.scope !112, !noalias !109
  %136 = or i64 %102, 96
  %137 = getelementptr i8, i8* %56, i64 %136
  %138 = getelementptr i8, i8* %66, i64 %136
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1, !alias.scope !109
  %141 = getelementptr i8, i8* %138, i64 16
  %142 = bitcast i8* %141 to <16 x i8>*
  %143 = load <16 x i8>, <16 x i8>* %142, align 1, !alias.scope !109
  %144 = bitcast i8* %137 to <16 x i8>*
  store <16 x i8> %140, <16 x i8>* %144, align 1, !alias.scope !112, !noalias !109
  %145 = getelementptr i8, i8* %137, i64 16
  %146 = bitcast i8* %145 to <16 x i8>*
  store <16 x i8> %143, <16 x i8>* %146, align 1, !alias.scope !112, !noalias !109
  %147 = add i64 %102, 128
  %148 = add i64 %103, -4
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %101, !llvm.loop !114

150:                                              ; preds = %101, %90
  %151 = phi i64 [ 0, %90 ], [ %147, %101 ]
  %152 = icmp eq i64 %97, 0
  br i1 %152, label %169, label %153

153:                                              ; preds = %150, %153
  %154 = phi i64 [ %166, %153 ], [ %151, %150 ]
  %155 = phi i64 [ %167, %153 ], [ %97, %150 ]
  %156 = getelementptr i8, i8* %56, i64 %154
  %157 = getelementptr i8, i8* %66, i64 %154
  %158 = bitcast i8* %157 to <16 x i8>*
  %159 = load <16 x i8>, <16 x i8>* %158, align 1, !alias.scope !109
  %160 = getelementptr i8, i8* %157, i64 16
  %161 = bitcast i8* %160 to <16 x i8>*
  %162 = load <16 x i8>, <16 x i8>* %161, align 1, !alias.scope !109
  %163 = bitcast i8* %156 to <16 x i8>*
  store <16 x i8> %159, <16 x i8>* %163, align 1, !alias.scope !112, !noalias !109
  %164 = getelementptr i8, i8* %156, i64 16
  %165 = bitcast i8* %164 to <16 x i8>*
  store <16 x i8> %162, <16 x i8>* %165, align 1, !alias.scope !112, !noalias !109
  %166 = add i64 %154, 32
  %167 = add i64 %155, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %153, !llvm.loop !115

169:                                              ; preds = %153, %150
  %170 = icmp eq i64 %91, %74
  br i1 %170, label %377, label %171

171:                                              ; preds = %169, %76, %63
  %172 = phi i8* [ %56, %76 ], [ %56, %63 ], [ %92, %169 ]
  %173 = phi i8* [ %66, %76 ], [ %66, %63 ], [ %93, %169 ]
  br label %174

174:                                              ; preds = %171, %174
  %175 = phi i8* [ %179, %174 ], [ %172, %171 ]
  %176 = phi i8* [ %178, %174 ], [ %173, %171 ]
  %177 = load i8, i8* %176, align 1
  store i8 %177, i8* %175, align 1
  %178 = getelementptr inbounds i8, i8* %176, i64 1
  %179 = getelementptr inbounds i8, i8* %175, i64 1
  %180 = icmp ult i8* %178, %65
  br i1 %180, label %174, label %377, !llvm.loop !116

181:                                              ; preds = %30
  %182 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i64 0, i32 2
  %183 = load i8, i8* %182, align 4
  %184 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %183, i8* %184, align 4
  %185 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %186 = load i32, i32* %36, align 4
  %187 = icmp slt i32 %186, 50
  %188 = sext i32 %186 to i64
  br i1 %187, label %189, label %194

189:                                              ; preds = %181
  %190 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %188
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = icmp eq i32 %186, 0
  br i1 %193, label %315, label %194

194:                                              ; preds = %181, %189
  %195 = phi i64 [ %192, %189 ], [ %188, %181 ]
  %196 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %195
  %197 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 0
  %198 = add nsw i64 %195, 9
  %199 = getelementptr i8, i8* %7, i64 %198
  %200 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %201 = icmp ugt i8* %199, %200
  %202 = select i1 %201, i8* %199, i8* %200
  %203 = sub i64 -9, %6
  %204 = getelementptr i8, i8* %202, i64 %203
  %205 = ptrtoint i8* %204 to i64
  %206 = icmp ult i8* %204, inttoptr (i64 32 to i8*)
  br i1 %206, label %302, label %207

207:                                              ; preds = %194
  %208 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %209 = add nsw i64 %195, 9
  %210 = getelementptr i8, i8* %7, i64 %209
  %211 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %212 = icmp ugt i8* %210, %211
  %213 = select i1 %212, i8* %210, i8* %211
  %214 = getelementptr %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 0
  %215 = ptrtoint i8* %213 to i64
  %216 = sub i64 %215, %6
  %217 = getelementptr i8, i8* %32, i64 %216
  %218 = icmp ult i8* %208, %217
  %219 = icmp ult i8* %214, %213
  %220 = and i1 %218, %219
  br i1 %220, label %302, label %221

221:                                              ; preds = %207
  %222 = and i64 %205, -32
  %223 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %222
  %224 = getelementptr %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 %222
  %225 = add i64 %222, -32
  %226 = lshr exact i64 %225, 5
  %227 = add nuw nsw i64 %226, 1
  %228 = and i64 %227, 3
  %229 = icmp ult i64 %225, 96
  br i1 %229, label %281, label %230

230:                                              ; preds = %221
  %231 = sub nsw i64 %227, %228
  br label %232

232:                                              ; preds = %232, %230
  %233 = phi i64 [ 0, %230 ], [ %278, %232 ]
  %234 = phi i64 [ %231, %230 ], [ %279, %232 ]
  %235 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %233
  %236 = getelementptr %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 %233
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !117
  %239 = getelementptr i8, i8* %236, i64 16
  %240 = bitcast i8* %239 to <16 x i8>*
  %241 = load <16 x i8>, <16 x i8>* %240, align 1, !alias.scope !117
  %242 = bitcast i8* %235 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %242, align 1, !alias.scope !120, !noalias !117
  %243 = getelementptr i8, i8* %235, i64 16
  %244 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %241, <16 x i8>* %244, align 1, !alias.scope !120, !noalias !117
  %245 = or i64 %233, 32
  %246 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %245
  %247 = getelementptr %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 %245
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !117
  %250 = getelementptr i8, i8* %247, i64 16
  %251 = bitcast i8* %250 to <16 x i8>*
  %252 = load <16 x i8>, <16 x i8>* %251, align 1, !alias.scope !117
  %253 = bitcast i8* %246 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %253, align 1, !alias.scope !120, !noalias !117
  %254 = getelementptr i8, i8* %246, i64 16
  %255 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %252, <16 x i8>* %255, align 1, !alias.scope !120, !noalias !117
  %256 = or i64 %233, 64
  %257 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %256
  %258 = getelementptr %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 %256
  %259 = bitcast i8* %258 to <16 x i8>*
  %260 = load <16 x i8>, <16 x i8>* %259, align 1, !alias.scope !117
  %261 = getelementptr i8, i8* %258, i64 16
  %262 = bitcast i8* %261 to <16 x i8>*
  %263 = load <16 x i8>, <16 x i8>* %262, align 1, !alias.scope !117
  %264 = bitcast i8* %257 to <16 x i8>*
  store <16 x i8> %260, <16 x i8>* %264, align 1, !alias.scope !120, !noalias !117
  %265 = getelementptr i8, i8* %257, i64 16
  %266 = bitcast i8* %265 to <16 x i8>*
  store <16 x i8> %263, <16 x i8>* %266, align 1, !alias.scope !120, !noalias !117
  %267 = or i64 %233, 96
  %268 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %267
  %269 = getelementptr %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 %267
  %270 = bitcast i8* %269 to <16 x i8>*
  %271 = load <16 x i8>, <16 x i8>* %270, align 1, !alias.scope !117
  %272 = getelementptr i8, i8* %269, i64 16
  %273 = bitcast i8* %272 to <16 x i8>*
  %274 = load <16 x i8>, <16 x i8>* %273, align 1, !alias.scope !117
  %275 = bitcast i8* %268 to <16 x i8>*
  store <16 x i8> %271, <16 x i8>* %275, align 1, !alias.scope !120, !noalias !117
  %276 = getelementptr i8, i8* %268, i64 16
  %277 = bitcast i8* %276 to <16 x i8>*
  store <16 x i8> %274, <16 x i8>* %277, align 1, !alias.scope !120, !noalias !117
  %278 = add i64 %233, 128
  %279 = add i64 %234, -4
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %281, label %232, !llvm.loop !122

281:                                              ; preds = %232, %221
  %282 = phi i64 [ 0, %221 ], [ %278, %232 ]
  %283 = icmp eq i64 %228, 0
  br i1 %283, label %300, label %284

284:                                              ; preds = %281, %284
  %285 = phi i64 [ %297, %284 ], [ %282, %281 ]
  %286 = phi i64 [ %298, %284 ], [ %228, %281 ]
  %287 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %285
  %288 = getelementptr %struct.decNumber, %struct.decNumber* %31, i64 0, i32 3, i64 %285
  %289 = bitcast i8* %288 to <16 x i8>*
  %290 = load <16 x i8>, <16 x i8>* %289, align 1, !alias.scope !117
  %291 = getelementptr i8, i8* %288, i64 16
  %292 = bitcast i8* %291 to <16 x i8>*
  %293 = load <16 x i8>, <16 x i8>* %292, align 1, !alias.scope !117
  %294 = bitcast i8* %287 to <16 x i8>*
  store <16 x i8> %290, <16 x i8>* %294, align 1, !alias.scope !120, !noalias !117
  %295 = getelementptr i8, i8* %287, i64 16
  %296 = bitcast i8* %295 to <16 x i8>*
  store <16 x i8> %293, <16 x i8>* %296, align 1, !alias.scope !120, !noalias !117
  %297 = add i64 %285, 32
  %298 = add i64 %286, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %284, !llvm.loop !123

300:                                              ; preds = %284, %281
  %301 = icmp eq i64 %222, %205
  br i1 %301, label %312, label %302

302:                                              ; preds = %300, %207, %194
  %303 = phi i8* [ %185, %207 ], [ %185, %194 ], [ %223, %300 ]
  %304 = phi i8* [ %197, %207 ], [ %197, %194 ], [ %224, %300 ]
  br label %305

305:                                              ; preds = %302, %305
  %306 = phi i8* [ %309, %305 ], [ %303, %302 ]
  %307 = phi i8* [ %310, %305 ], [ %304, %302 ]
  %308 = load i8, i8* %307, align 1
  store i8 %308, i8* %306, align 1
  %309 = getelementptr inbounds i8, i8* %306, i64 1
  %310 = getelementptr inbounds i8, i8* %307, i64 1
  %311 = icmp ult i8* %309, %196
  br i1 %311, label %305, label %312, !llvm.loop !124

312:                                              ; preds = %305, %300
  %313 = load i32, i32* %36, align 4
  %314 = icmp slt i32 %313, 50
  br i1 %314, label %315, label %321

315:                                              ; preds = %189, %312
  %316 = phi i32 [ %313, %312 ], [ %186, %189 ]
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %317
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i32
  br label %321

321:                                              ; preds = %312, %315
  %322 = phi i32 [ %320, %315 ], [ %313, %312 ]
  %323 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %322, i32* %323, align 4
  %324 = load i32, i32* %36, align 4
  %325 = icmp sgt i32 %322, %324
  br i1 %325, label %326, label %377

326:                                              ; preds = %321
  %327 = icmp sgt i32 %324, 0
  br i1 %327, label %329, label %328

328:                                              ; preds = %326
  store i8 0, i8* %185, align 1
  br label %375

329:                                              ; preds = %326
  %330 = icmp slt i32 %324, 50
  %331 = sext i32 %324 to i64
  br i1 %330, label %332, label %337

332:                                              ; preds = %329
  %333 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %331
  %334 = load i8, i8* %333, align 1
  %335 = zext i8 %334 to i64
  %336 = zext i8 %334 to i32
  br label %337

337:                                              ; preds = %332, %329
  %338 = phi i64 [ %335, %332 ], [ %331, %329 ]
  %339 = phi i32 [ %336, %332 ], [ %324, %329 ]
  %340 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %338
  %341 = getelementptr inbounds i8, i8* %340, i64 -1
  %342 = add nuw nsw i32 %324, 1
  %343 = sub nsw i32 %342, %339
  %344 = icmp eq i32 %343, 1
  br i1 %344, label %353, label %345

345:                                              ; preds = %337
  %346 = sext i32 %343 to i64
  %347 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %346
  %348 = load i32, i32* %347, align 4
  %349 = load i8, i8* %341, align 1
  %350 = zext i8 %349 to i32
  %351 = urem i32 %350, %348
  %352 = trunc i32 %351 to i8
  store i8 %352, i8* %341, align 1
  br label %353

353:                                              ; preds = %345, %337
  %354 = ptrtoint i8* %341 to i64
  %355 = ptrtoint i8* %185 to i64
  %356 = sub i64 %354, %355
  %357 = trunc i64 %356 to i32
  %358 = add i32 %357, 1
  %359 = icmp slt i32 %358, 1
  br i1 %359, label %375, label %360

360:                                              ; preds = %353
  %361 = shl i64 %356, 32
  %362 = ashr exact i64 %361, 32
  %363 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %362
  br label %364

364:                                              ; preds = %371, %360
  %365 = phi i32 [ %372, %371 ], [ %358, %360 ]
  %366 = phi i8* [ %373, %371 ], [ %363, %360 ]
  %367 = load i8, i8* %366, align 1
  %368 = icmp ne i8 %367, 0
  %369 = icmp eq i32 %365, 1
  %370 = or i1 %369, %368
  br i1 %370, label %375, label %371

371:                                              ; preds = %364
  %372 = add nsw i32 %365, -1
  %373 = getelementptr inbounds i8, i8* %366, i64 -1
  %374 = icmp ult i8* %373, %185
  br i1 %374, label %375, label %364

375:                                              ; preds = %364, %371, %328, %353
  %376 = phi i32 [ 1, %328 ], [ %358, %353 ], [ %372, %371 ], [ %365, %364 ]
  store i32 %376, i32* %323, align 4
  br label %377

377:                                              ; preds = %174, %169, %41, %39, %321, %375
  %378 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %379 = load i8, i8* %378, align 4
  %380 = and i8 %379, -49
  %381 = or i8 %380, 32
  store i8 %381, i8* %378, align 4
  %382 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %382, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberCopyAbs_69(%struct.decNumber* returned, %struct.decNumber* readonly) local_unnamed_addr #0 {
  %3 = bitcast %struct.decNumber* %0 to i8*
  %4 = ptrtoint %struct.decNumber* %1 to i64
  %5 = bitcast %struct.decNumber* %1 to i8*
  %6 = icmp eq %struct.decNumber* %0, %1
  br i1 %6, label %148, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %9, i8* %10, align 4
  %11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %18, i8* %19, align 1
  %20 = load i32, i32* %14, align 4
  %21 = icmp sgt i32 %20, 1
  br i1 %21, label %22, label %148

22:                                               ; preds = %7
  %23 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %24 = icmp slt i32 %20, 50
  %25 = sext i32 %20 to i64
  br i1 %24, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %25
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  br label %30

30:                                               ; preds = %26, %22
  %31 = phi i64 [ %29, %26 ], [ %25, %22 ]
  %32 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %31
  %33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %34 = add nsw i64 %31, 9
  %35 = getelementptr i8, i8* %5, i64 %34
  %36 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %37 = icmp ugt i8* %35, %36
  %38 = select i1 %37, i8* %35, i8* %36
  %39 = sub i64 -10, %4
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = icmp ult i8* %40, inttoptr (i64 32 to i8*)
  br i1 %42, label %138, label %43

43:                                               ; preds = %30
  %44 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %45 = add nsw i64 %31, 9
  %46 = getelementptr i8, i8* %5, i64 %45
  %47 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %48 = icmp ugt i8* %46, %47
  %49 = select i1 %48, i8* %46, i8* %47
  %50 = ptrtoint i8* %49 to i64
  %51 = sub i64 %50, %4
  %52 = getelementptr i8, i8* %3, i64 %51
  %53 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %54 = icmp ult i8* %44, %49
  %55 = icmp ult i8* %53, %52
  %56 = and i1 %54, %55
  br i1 %56, label %138, label %57

57:                                               ; preds = %43
  %58 = and i64 %41, -32
  %59 = getelementptr i8, i8* %23, i64 %58
  %60 = getelementptr i8, i8* %33, i64 %58
  %61 = add i64 %58, -32
  %62 = lshr exact i64 %61, 5
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 96
  br i1 %65, label %117, label %66

66:                                               ; preds = %57
  %67 = sub nsw i64 %63, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %114, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %115, %68 ]
  %71 = getelementptr i8, i8* %23, i64 %69
  %72 = getelementptr i8, i8* %33, i64 %69
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1, !alias.scope !125
  %75 = getelementptr i8, i8* %72, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  %77 = load <16 x i8>, <16 x i8>* %76, align 1, !alias.scope !125
  %78 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %74, <16 x i8>* %78, align 1, !alias.scope !128, !noalias !125
  %79 = getelementptr i8, i8* %71, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  store <16 x i8> %77, <16 x i8>* %80, align 1, !alias.scope !128, !noalias !125
  %81 = or i64 %69, 32
  %82 = getelementptr i8, i8* %23, i64 %81
  %83 = getelementptr i8, i8* %33, i64 %81
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1, !alias.scope !125
  %86 = getelementptr i8, i8* %83, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1, !alias.scope !125
  %89 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %89, align 1, !alias.scope !128, !noalias !125
  %90 = getelementptr i8, i8* %82, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %91, align 1, !alias.scope !128, !noalias !125
  %92 = or i64 %69, 64
  %93 = getelementptr i8, i8* %23, i64 %92
  %94 = getelementptr i8, i8* %33, i64 %92
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1, !alias.scope !125
  %97 = getelementptr i8, i8* %94, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1, !alias.scope !125
  %100 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %100, align 1, !alias.scope !128, !noalias !125
  %101 = getelementptr i8, i8* %93, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %102, align 1, !alias.scope !128, !noalias !125
  %103 = or i64 %69, 96
  %104 = getelementptr i8, i8* %23, i64 %103
  %105 = getelementptr i8, i8* %33, i64 %103
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !125
  %108 = getelementptr i8, i8* %105, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1, !alias.scope !125
  %111 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %111, align 1, !alias.scope !128, !noalias !125
  %112 = getelementptr i8, i8* %104, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %113, align 1, !alias.scope !128, !noalias !125
  %114 = add i64 %69, 128
  %115 = add i64 %70, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %68, !llvm.loop !130

117:                                              ; preds = %68, %57
  %118 = phi i64 [ 0, %57 ], [ %114, %68 ]
  %119 = icmp eq i64 %64, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %133, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %134, %120 ], [ %64, %117 ]
  %123 = getelementptr i8, i8* %23, i64 %121
  %124 = getelementptr i8, i8* %33, i64 %121
  %125 = bitcast i8* %124 to <16 x i8>*
  %126 = load <16 x i8>, <16 x i8>* %125, align 1, !alias.scope !125
  %127 = getelementptr i8, i8* %124, i64 16
  %128 = bitcast i8* %127 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1, !alias.scope !125
  %130 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %126, <16 x i8>* %130, align 1, !alias.scope !128, !noalias !125
  %131 = getelementptr i8, i8* %123, i64 16
  %132 = bitcast i8* %131 to <16 x i8>*
  store <16 x i8> %129, <16 x i8>* %132, align 1, !alias.scope !128, !noalias !125
  %133 = add i64 %121, 32
  %134 = add i64 %122, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %120, !llvm.loop !131

136:                                              ; preds = %120, %117
  %137 = icmp eq i64 %58, %41
  br i1 %137, label %148, label %138

138:                                              ; preds = %136, %43, %30
  %139 = phi i8* [ %23, %43 ], [ %23, %30 ], [ %59, %136 ]
  %140 = phi i8* [ %33, %43 ], [ %33, %30 ], [ %60, %136 ]
  br label %141

141:                                              ; preds = %138, %141
  %142 = phi i8* [ %146, %141 ], [ %139, %138 ]
  %143 = phi i8* [ %145, %141 ], [ %140, %138 ]
  %144 = load i8, i8* %143, align 1
  store i8 %144, i8* %142, align 1
  %145 = getelementptr inbounds i8, i8* %143, i64 1
  %146 = getelementptr inbounds i8, i8* %142, i64 1
  %147 = icmp ult i8* %145, %32
  br i1 %147, label %141, label %148, !llvm.loop !132

148:                                              ; preds = %141, %136, %2, %7
  %149 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %150 = load i8, i8* %149, align 4
  %151 = and i8 %150, 127
  store i8 %151, i8* %149, align 4
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberLog10_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [5 x %struct.decNumber], align 16
  %7 = alloca [5 x %struct.decNumber], align 16
  %8 = alloca [2 x %struct.decNumber], align 16
  %9 = alloca %struct.decContext, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 0, i32* %4, align 4
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8
  store i32 0, i32* %5, align 4
  %14 = bitcast [5 x %struct.decNumber]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 60, i1 false)
  %15 = getelementptr inbounds [5 x %struct.decNumber], [5 x %struct.decNumber]* %6, i64 0, i64 0
  %16 = bitcast [5 x %struct.decNumber]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 60, i1 false)
  %17 = getelementptr inbounds [5 x %struct.decNumber], [5 x %struct.decNumber]* %7, i64 0, i64 0
  %18 = bitcast [2 x %struct.decNumber]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 24, i1 false)
  %19 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %8, i64 0, i64 0
  %20 = bitcast %struct.decContext* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -86, i64 28, i1 false)
  %21 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 999999
  br i1 %23, label %53, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, 999999
  br i1 %27, label %53, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, -999999
  br i1 %31, label %53, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, 999999
  br i1 %35, label %53, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %34, 1999996
  %40 = add i32 %39, %38
  %41 = icmp ugt i32 %40, 2999996
  br i1 %41, label %42, label %55

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  %46 = icmp eq i32 %34, 1
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %53

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %50 = load i8, i8* %49, align 4
  %51 = and i8 %50, 112
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %28, %24, %3, %48, %42, %32
  %54 = phi i32 [ 64, %28 ], [ 64, %24 ], [ 64, %3 ], [ 128, %48 ], [ 128, %42 ], [ 128, %32 ]
  store i32 %54, i32* %4, align 4
  br label %363

55:                                               ; preds = %36, %48
  %56 = call %struct.decContext* @uprv_decContextDefault_69(%struct.decContext* nonnull %9, i32 64) #8
  %57 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %58 = load i8, i8* %57, align 4
  %59 = zext i8 %58 to i32
  %60 = and i32 %59, 240
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %141

62:                                               ; preds = %55
  %63 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 0
  %66 = load i32, i32* %33, align 4
  br i1 %65, label %67, label %72

67:                                               ; preds = %62
  %68 = icmp eq i32 %66, 1
  %69 = and i32 %59, 112
  %70 = icmp eq i32 %69, 0
  %71 = and i1 %70, %68
  br i1 %71, label %141, label %72

72:                                               ; preds = %62, %67
  %73 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #8
  store i32 0, i32* %10, align 4
  %74 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74) #8
  store i32 0, i32* %11, align 4
  %75 = getelementptr inbounds %struct.decContext, %struct.decContext* %9, i64 0, i32 0
  store i32 1, i32* %75, align 4
  %76 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %8, i64 0, i64 0, i32 2
  store i8 %58, i8* %76, align 8
  %77 = load i32, i32* %37, align 4
  %78 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %8, i64 0, i64 0, i32 1
  store i32 %77, i32* %78, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* nonnull %19, %struct.decContext* nonnull %9, i8* %63, i32 %66, i32* nonnull %10, i32* nonnull %11) #8
  %79 = load i32, i32* %11, align 4
  %80 = and i32 %79, 32
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %140

82:                                               ; preds = %72
  %83 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %8, i64 0, i64 0, i32 3, i64 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %84, 1
  br i1 %85, label %86, label %140

86:                                               ; preds = %82
  %87 = load i32, i32* %78, align 4
  %88 = icmp sgt i32 %87, -1
  br i1 %88, label %94, label %89

89:                                               ; preds = %86
  %90 = icmp eq i32 %87, -2147483648
  %91 = sub nsw i32 0, %87
  %92 = select i1 %90, i32 -2147483648, i32 %91
  store i8 0, i8* %76, align 8
  store i32 0, i32* %78, align 4
  %93 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %8, i64 0, i64 0, i32 0
  store i32 1, i32* %93, align 16
  store i8 0, i8* %83, align 1
  br label %97

94:                                               ; preds = %86
  store i8 0, i8* %76, align 8
  store i32 0, i32* %78, align 4
  %95 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %8, i64 0, i64 0, i32 0
  store i32 1, i32* %95, align 16
  store i8 0, i8* %83, align 1
  %96 = icmp eq i32 %87, 0
  br i1 %96, label %134, label %97

97:                                               ; preds = %89, %94
  %98 = phi i32* [ %93, %89 ], [ %95, %94 ]
  %99 = phi i32 [ %92, %89 ], [ %87, %94 ]
  br label %100

100:                                              ; preds = %97, %100
  %101 = phi i8* [ %106, %100 ], [ %83, %97 ]
  %102 = phi i32 [ %105, %100 ], [ %99, %97 ]
  %103 = urem i32 %102, 10
  %104 = trunc i32 %103 to i8
  store i8 %104, i8* %101, align 1
  %105 = udiv i32 %102, 10
  %106 = getelementptr inbounds i8, i8* %101, i64 1
  %107 = icmp ult i32 %102, 10
  br i1 %107, label %108, label %100

108:                                              ; preds = %100
  %109 = ptrtoint i8* %106 to i64
  %110 = ptrtoint i8* %83 to i64
  %111 = sub i64 %109, %110
  %112 = trunc i64 %111 to i32
  %113 = icmp slt i32 %112, 1
  br i1 %113, label %130, label %114

114:                                              ; preds = %108
  %115 = shl i64 %111, 32
  %116 = add i64 %115, -4294967296
  %117 = ashr exact i64 %116, 32
  %118 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %8, i64 0, i64 0, i32 3, i64 %117
  br label %119

119:                                              ; preds = %126, %114
  %120 = phi i32 [ %127, %126 ], [ %112, %114 ]
  %121 = phi i8* [ %128, %126 ], [ %118, %114 ]
  %122 = load i8, i8* %121, align 1
  %123 = icmp ne i8 %122, 0
  %124 = icmp eq i32 %120, 1
  %125 = or i1 %124, %123
  br i1 %125, label %130, label %126

126:                                              ; preds = %119
  %127 = add nsw i32 %120, -1
  %128 = getelementptr inbounds i8, i8* %121, i64 -1
  %129 = icmp ult i8* %128, %83
  br i1 %129, label %130, label %119

130:                                              ; preds = %119, %126, %108
  %131 = phi i32 [ %112, %108 ], [ %120, %119 ], [ %127, %126 ]
  store i32 %131, i32* %98, align 16
  %132 = icmp slt i32 %87, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  store i8 -128, i8* %76, align 8
  br label %134

134:                                              ; preds = %94, %130, %133
  %135 = phi i32 [ %131, %130 ], [ %131, %133 ], [ 1, %94 ]
  store i32 0, i32* %10, align 4
  %136 = load i8, i8* %76, align 8
  %137 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %136, i8* %137, align 4
  %138 = load i32, i32* %78, align 4
  %139 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %138, i32* %139, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* %2, i8* %83, i32 %135, i32* nonnull %10, i32* nonnull %4) #8
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %2, i32* nonnull %10, i32* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #8
  br label %360

140:                                              ; preds = %82, %72
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #8
  br label %141

141:                                              ; preds = %140, %67, %55
  %142 = load i32, i32* %33, align 4
  %143 = add nsw i32 %142, 6
  %144 = load i32, i32* %21, align 4
  %145 = icmp sgt i32 %143, %144
  %146 = select i1 %145, i32 %143, i32 %144
  %147 = add nsw i32 %146, 3
  %148 = icmp slt i32 %147, 50
  br i1 %148, label %149, label %154

149:                                              ; preds = %141
  %150 = sext i32 %147 to i64
  %151 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  br label %154

154:                                              ; preds = %141, %149
  %155 = phi i32 [ %153, %149 ], [ %147, %141 ]
  %156 = add nuw i32 %155, 11
  %157 = icmp ugt i32 %156, 60
  br i1 %157, label %158, label %166

158:                                              ; preds = %154
  %159 = zext i32 %156 to i64
  %160 = call noalias i8* @uprv_malloc_69(i64 %159) #9
  %161 = bitcast i8* %160 to %struct.decNumber*
  %162 = icmp eq i8* %160, null
  br i1 %162, label %163, label %166

163:                                              ; preds = %158
  %164 = load i32, i32* %4, align 4
  %165 = or i32 %164, 16
  store i32 %165, i32* %4, align 4
  br label %363

166:                                              ; preds = %158, %154
  %167 = phi i8* [ null, %154 ], [ %160, %158 ]
  %168 = phi %struct.decNumber* [ null, %154 ], [ %161, %158 ]
  %169 = phi %struct.decNumber* [ %15, %154 ], [ %161, %158 ]
  %170 = ptrtoint %struct.decNumber* %169 to i64
  %171 = bitcast %struct.decNumber* %169 to i8*
  %172 = getelementptr inbounds %struct.decContext, %struct.decContext* %9, i64 0, i32 0
  store i32 %147, i32* %172, align 4
  %173 = getelementptr inbounds %struct.decContext, %struct.decContext* %9, i64 0, i32 1
  store i32 999999, i32* %173, align 4
  %174 = getelementptr inbounds %struct.decContext, %struct.decContext* %9, i64 0, i32 2
  store i32 -999999, i32* %174, align 4
  %175 = getelementptr inbounds %struct.decContext, %struct.decContext* %9, i64 0, i32 6
  store i8 0, i8* %175, align 4
  call fastcc void @_ZL7decLnOpP9decNumberPKS_P10decContextPj(%struct.decNumber* %169, %struct.decNumber* %1, %struct.decContext* nonnull %9, i32* nonnull %4)
  %176 = load i32, i32* %4, align 4
  %177 = and i32 %176, 221
  %178 = icmp ne i32 %177, 0
  %179 = and i32 %176, 1073741824
  %180 = icmp eq i32 %179, 0
  %181 = and i1 %178, %180
  br i1 %181, label %352, label %182

182:                                              ; preds = %166
  %183 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %169, i64 0, i32 2
  %184 = load i8, i8* %183, align 4
  %185 = and i8 %184, 112
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %187, label %195

187:                                              ; preds = %182
  %188 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %169, i64 0, i32 3, i64 0
  %189 = load i8, i8* %188, align 1
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %321

191:                                              ; preds = %187
  %192 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %169, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %195, label %321

195:                                              ; preds = %191, %182
  %196 = icmp eq %struct.decNumber* %169, %0
  br i1 %196, label %352, label %197

197:                                              ; preds = %195
  %198 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %184, i8* %198, align 4
  %199 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %169, i64 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %200, i32* %201, align 4
  %202 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %169, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %203, i32* %204, align 4
  %205 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %169, i64 0, i32 3, i64 0
  %206 = load i8, i8* %205, align 1
  %207 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %206, i8* %207, align 1
  %208 = icmp sgt i32 %203, 1
  br i1 %208, label %209, label %352

209:                                              ; preds = %197
  %210 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %211 = icmp slt i32 %203, 50
  %212 = sext i32 %203 to i64
  br i1 %211, label %213, label %217

213:                                              ; preds = %209
  %214 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %212
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  br label %217

217:                                              ; preds = %213, %209
  %218 = phi i64 [ %216, %213 ], [ %212, %209 ]
  %219 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %169, i64 0, i32 3, i64 %218
  %220 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %169, i64 0, i32 3, i64 1
  %221 = add nsw i64 %218, 9
  %222 = getelementptr i8, i8* %171, i64 %221
  %223 = getelementptr %struct.decNumber, %struct.decNumber* %169, i64 0, i32 3, i64 2
  %224 = icmp ugt i8* %222, %223
  %225 = select i1 %224, i8* %222, i8* %223
  %226 = sub i64 -10, %170
  %227 = getelementptr i8, i8* %225, i64 %226
  %228 = ptrtoint i8* %227 to i64
  %229 = icmp ult i8* %227, inttoptr (i64 32 to i8*)
  br i1 %229, label %311, label %230

230:                                              ; preds = %217
  %231 = and i64 %228, -32
  %232 = getelementptr i8, i8* %210, i64 %231
  %233 = getelementptr i8, i8* %220, i64 %231
  %234 = add i64 %231, -32
  %235 = lshr exact i64 %234, 5
  %236 = add nuw nsw i64 %235, 1
  %237 = and i64 %236, 3
  %238 = icmp ult i64 %234, 96
  br i1 %238, label %290, label %239

239:                                              ; preds = %230
  %240 = sub nsw i64 %236, %237
  br label %241

241:                                              ; preds = %241, %239
  %242 = phi i64 [ 0, %239 ], [ %287, %241 ]
  %243 = phi i64 [ %240, %239 ], [ %288, %241 ]
  %244 = getelementptr i8, i8* %210, i64 %242
  %245 = getelementptr i8, i8* %220, i64 %242
  %246 = bitcast i8* %245 to <16 x i8>*
  %247 = load <16 x i8>, <16 x i8>* %246, align 1
  %248 = getelementptr i8, i8* %245, i64 16
  %249 = bitcast i8* %248 to <16 x i8>*
  %250 = load <16 x i8>, <16 x i8>* %249, align 1
  %251 = bitcast i8* %244 to <16 x i8>*
  store <16 x i8> %247, <16 x i8>* %251, align 1
  %252 = getelementptr i8, i8* %244, i64 16
  %253 = bitcast i8* %252 to <16 x i8>*
  store <16 x i8> %250, <16 x i8>* %253, align 1
  %254 = or i64 %242, 32
  %255 = getelementptr i8, i8* %210, i64 %254
  %256 = getelementptr i8, i8* %220, i64 %254
  %257 = bitcast i8* %256 to <16 x i8>*
  %258 = load <16 x i8>, <16 x i8>* %257, align 1
  %259 = getelementptr i8, i8* %256, i64 16
  %260 = bitcast i8* %259 to <16 x i8>*
  %261 = load <16 x i8>, <16 x i8>* %260, align 1
  %262 = bitcast i8* %255 to <16 x i8>*
  store <16 x i8> %258, <16 x i8>* %262, align 1
  %263 = getelementptr i8, i8* %255, i64 16
  %264 = bitcast i8* %263 to <16 x i8>*
  store <16 x i8> %261, <16 x i8>* %264, align 1
  %265 = or i64 %242, 64
  %266 = getelementptr i8, i8* %210, i64 %265
  %267 = getelementptr i8, i8* %220, i64 %265
  %268 = bitcast i8* %267 to <16 x i8>*
  %269 = load <16 x i8>, <16 x i8>* %268, align 1
  %270 = getelementptr i8, i8* %267, i64 16
  %271 = bitcast i8* %270 to <16 x i8>*
  %272 = load <16 x i8>, <16 x i8>* %271, align 1
  %273 = bitcast i8* %266 to <16 x i8>*
  store <16 x i8> %269, <16 x i8>* %273, align 1
  %274 = getelementptr i8, i8* %266, i64 16
  %275 = bitcast i8* %274 to <16 x i8>*
  store <16 x i8> %272, <16 x i8>* %275, align 1
  %276 = or i64 %242, 96
  %277 = getelementptr i8, i8* %210, i64 %276
  %278 = getelementptr i8, i8* %220, i64 %276
  %279 = bitcast i8* %278 to <16 x i8>*
  %280 = load <16 x i8>, <16 x i8>* %279, align 1
  %281 = getelementptr i8, i8* %278, i64 16
  %282 = bitcast i8* %281 to <16 x i8>*
  %283 = load <16 x i8>, <16 x i8>* %282, align 1
  %284 = bitcast i8* %277 to <16 x i8>*
  store <16 x i8> %280, <16 x i8>* %284, align 1
  %285 = getelementptr i8, i8* %277, i64 16
  %286 = bitcast i8* %285 to <16 x i8>*
  store <16 x i8> %283, <16 x i8>* %286, align 1
  %287 = add i64 %242, 128
  %288 = add i64 %243, -4
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %290, label %241, !llvm.loop !133

290:                                              ; preds = %241, %230
  %291 = phi i64 [ 0, %230 ], [ %287, %241 ]
  %292 = icmp eq i64 %237, 0
  br i1 %292, label %309, label %293

293:                                              ; preds = %290, %293
  %294 = phi i64 [ %306, %293 ], [ %291, %290 ]
  %295 = phi i64 [ %307, %293 ], [ %237, %290 ]
  %296 = getelementptr i8, i8* %210, i64 %294
  %297 = getelementptr i8, i8* %220, i64 %294
  %298 = bitcast i8* %297 to <16 x i8>*
  %299 = load <16 x i8>, <16 x i8>* %298, align 1
  %300 = getelementptr i8, i8* %297, i64 16
  %301 = bitcast i8* %300 to <16 x i8>*
  %302 = load <16 x i8>, <16 x i8>* %301, align 1
  %303 = bitcast i8* %296 to <16 x i8>*
  store <16 x i8> %299, <16 x i8>* %303, align 1
  %304 = getelementptr i8, i8* %296, i64 16
  %305 = bitcast i8* %304 to <16 x i8>*
  store <16 x i8> %302, <16 x i8>* %305, align 1
  %306 = add i64 %294, 32
  %307 = add i64 %295, -1
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %309, label %293, !llvm.loop !134

309:                                              ; preds = %293, %290
  %310 = icmp eq i64 %231, %228
  br i1 %310, label %352, label %311

311:                                              ; preds = %309, %217
  %312 = phi i8* [ %210, %217 ], [ %232, %309 ]
  %313 = phi i8* [ %220, %217 ], [ %233, %309 ]
  br label %314

314:                                              ; preds = %311, %314
  %315 = phi i8* [ %319, %314 ], [ %312, %311 ]
  %316 = phi i8* [ %318, %314 ], [ %313, %311 ]
  %317 = load i8, i8* %316, align 1
  store i8 %317, i8* %315, align 1
  %318 = getelementptr inbounds i8, i8* %316, i64 1
  %319 = getelementptr inbounds i8, i8* %315, i64 1
  %320 = icmp ult i8* %318, %219
  br i1 %320, label %314, label %352, !llvm.loop !135

321:                                              ; preds = %191, %187
  %322 = load i32, i32* %21, align 4
  %323 = add nsw i32 %322, 3
  %324 = icmp slt i32 %323, 50
  br i1 %324, label %325, label %330

325:                                              ; preds = %321
  %326 = sext i32 %323 to i64
  %327 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %326
  %328 = load i8, i8* %327, align 1
  %329 = zext i8 %328 to i32
  br label %330

330:                                              ; preds = %321, %325
  %331 = phi i32 [ %329, %325 ], [ %323, %321 ]
  %332 = add nuw i32 %331, 11
  %333 = icmp ugt i32 %332, 60
  br i1 %333, label %334, label %342

334:                                              ; preds = %330
  %335 = zext i32 %332 to i64
  %336 = call noalias i8* @uprv_malloc_69(i64 %335) #9
  %337 = bitcast i8* %336 to %struct.decNumber*
  %338 = icmp eq i8* %336, null
  br i1 %338, label %339, label %342

339:                                              ; preds = %334
  %340 = load i32, i32* %4, align 4
  %341 = or i32 %340, 16
  store i32 %341, i32* %4, align 4
  br label %352

342:                                              ; preds = %334, %330
  %343 = phi i8* [ null, %330 ], [ %336, %334 ]
  %344 = phi %struct.decNumber* [ null, %330 ], [ %337, %334 ]
  %345 = phi %struct.decNumber* [ %17, %330 ], [ %337, %334 ]
  %346 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %8, i64 0, i64 0, i32 2
  store i8 0, i8* %346, align 8
  %347 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %8, i64 0, i64 0, i32 1
  store i32 0, i32* %347, align 4
  %348 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %8, i64 0, i64 0, i32 0
  %349 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %8, i64 0, i64 0, i32 3, i64 0
  %350 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %8, i64 0, i64 0, i32 3, i64 1
  store i8 1, i8* %350, align 1
  store i8 0, i8* %349, align 1
  store i32 2, i32* %348, align 16
  store i32 %323, i32* %172, align 4
  call fastcc void @_ZL7decLnOpP9decNumberPKS_P10decContextPj(%struct.decNumber* %345, %struct.decNumber* nonnull %19, %struct.decContext* nonnull %9, i32* nonnull %5)
  %351 = load i32, i32* %21, align 4
  store i32 %351, i32* %172, align 4
  call fastcc void @_ZL11decDivideOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %169, %struct.decNumber* %345, %struct.decContext* nonnull %9, i8 zeroext -128, i32* nonnull %4)
  br label %352

352:                                              ; preds = %314, %309, %197, %195, %166, %339, %342
  %353 = phi i8* [ null, %339 ], [ %343, %342 ], [ null, %166 ], [ null, %195 ], [ null, %197 ], [ null, %309 ], [ null, %314 ]
  %354 = phi %struct.decNumber* [ null, %339 ], [ %344, %342 ], [ null, %166 ], [ null, %195 ], [ null, %197 ], [ null, %309 ], [ null, %314 ]
  %355 = icmp eq %struct.decNumber* %168, null
  br i1 %355, label %357, label %356

356:                                              ; preds = %352
  call void @uprv_free_69(i8* %167) #8
  br label %357

357:                                              ; preds = %352, %356
  %358 = icmp eq %struct.decNumber* %354, null
  br i1 %358, label %360, label %359

359:                                              ; preds = %357
  call void @uprv_free_69(i8* %353) #8
  br label %360

360:                                              ; preds = %134, %357, %359
  %361 = load i32, i32* %4, align 4
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %380, label %363

363:                                              ; preds = %53, %163, %360
  %364 = phi i32 [ %165, %163 ], [ %361, %360 ], [ %54, %53 ]
  %365 = and i32 %364, 221
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %377, label %367

367:                                              ; preds = %363
  %368 = and i32 %364, 1073741824
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %372, label %370

370:                                              ; preds = %367
  %371 = and i32 %364, -1073741825
  br label %377

372:                                              ; preds = %367
  %373 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %374 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %374, align 4
  %375 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %375, align 4
  %376 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %376, align 1
  store i8 32, i8* %373, align 4
  br label %377

377:                                              ; preds = %363, %370, %372
  %378 = phi i32 [ %371, %370 ], [ %364, %372 ], [ %364, %363 ]
  %379 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 %378) #8
  br label %380

380:                                              ; preds = %360, %377
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  ret %struct.decNumber* %0
}

declare %struct.decContext* @uprv_decContextDefault_69(%struct.decContext*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberMax_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL12decCompareOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 2, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberMaxMag_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL12decCompareOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 7, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberMin_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL12decCompareOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 3, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberMinMag_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL12decCompareOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 8, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberMinus_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %4 = alloca %struct.decNumber, align 4
  %5 = alloca i32, align 4
  %6 = bitcast %struct.decNumber* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -86, i64 12, i1 false)
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 0, i32* %5, align 4
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 2
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 1
  %10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 0
  store i32 1, i32* %10, align 4
  %11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 3, i64 0
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %9, align 4
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* nonnull %4, %struct.decNumber* %1, %struct.decContext* %2, i8 zeroext -128, i32* nonnull %5)
  %14 = load i32, i32* %5, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %3
  %17 = and i32 %14, 221
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %16
  %20 = and i32 %14, 1073741824
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %19
  %23 = and i32 %14, -1073741825
  br label %29

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %28, align 1
  store i8 32, i8* %25, align 4
  br label %29

29:                                               ; preds = %16, %22, %24
  %30 = phi i32 [ %23, %22 ], [ %14, %24 ], [ %14, %16 ]
  %31 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 %30) #8
  br label %32

32:                                               ; preds = %3, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberNextMinus_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %4 = bitcast %struct.decNumber* %0 to i8*
  %5 = alloca %struct.decNumber, align 4
  %6 = alloca %struct.decContext, align 4
  %7 = alloca i32, align 4
  %8 = bitcast %struct.decNumber* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 12, i1 false)
  %9 = bitcast %struct.decContext* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %9) #8
  %10 = bitcast %struct.decContext* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %9, i8* align 4 %10, i64 28, i1 false)
  %11 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 0, i32* %7, align 4
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %13 = load i8, i8* %12, align 4
  %14 = and i8 %13, -64
  %15 = icmp eq i8 %14, 64
  br i1 %15, label %16, label %44

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %18, i32* %19, align 4
  %20 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %21 = icmp sgt i32 %18, 1
  br i1 %21, label %22, label %29

22:                                               ; preds = %16
  %23 = add nsw i32 %18, -1
  %24 = zext i32 %23 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %20, i8 9, i64 %24, i1 false) #8
  %25 = add nsw i32 %18, -2
  %26 = zext i32 %25 to i64
  %27 = add nuw nsw i64 %26, 10
  %28 = getelementptr i8, i8* %4, i64 %27
  br label %29

29:                                               ; preds = %22, %16
  %30 = phi i8* [ %20, %16 ], [ %28, %22 ]
  %31 = phi i32 [ %18, %16 ], [ 1, %22 ]
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = trunc i32 %34 to i8
  %36 = add i8 %35, -1
  store i8 %36, i8* %30, align 1
  %37 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %17, align 4
  %41 = add i32 %39, 1
  %42 = sub i32 %41, %40
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %42, i32* %43, align 4
  br label %69

44:                                               ; preds = %3
  %45 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i64 0, i32 2
  store i8 0, i8* %45, align 4
  %46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i64 0, i32 1
  %47 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i64 0, i32 0
  store i32 1, i32* %47, align 4
  %48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i64 0, i32 3, i64 0
  store i8 1, i8* %48, align 1
  store i32 -1000000000, i32* %46, align 4
  %49 = getelementptr inbounds %struct.decContext, %struct.decContext* %6, i64 0, i32 3
  store i32 6, i32* %49, align 4
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* nonnull %5, %struct.decContext* nonnull %6, i8 zeroext -128, i32* nonnull %7)
  %50 = load i32, i32* %7, align 4
  %51 = and i32 %50, 1073741952
  store i32 %51, i32* %7, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %69, label %53

53:                                               ; preds = %44
  %54 = trunc i32 %50 to i8
  %55 = icmp sgt i8 %54, -1
  br i1 %55, label %66, label %56

56:                                               ; preds = %53
  %57 = and i32 %50, 1073741824
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = and i32 %50, 128
  br label %66

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %63 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %64, align 4
  %65 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %65, align 1
  store i8 32, i8* %62, align 4
  br label %66

66:                                               ; preds = %53, %59, %61
  %67 = phi i32 [ %60, %59 ], [ %51, %61 ], [ %51, %53 ]
  %68 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 %67) #8
  br label %69

69:                                               ; preds = %66, %44, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberNextPlus_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %4 = bitcast %struct.decNumber* %0 to i8*
  %5 = alloca %struct.decNumber, align 4
  %6 = alloca %struct.decContext, align 4
  %7 = alloca i32, align 4
  %8 = bitcast %struct.decNumber* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 12, i1 false)
  %9 = bitcast %struct.decContext* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %9) #8
  %10 = bitcast %struct.decContext* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %9, i8* align 4 %10, i64 28, i1 false)
  %11 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 0, i32* %7, align 4
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %13 = load i8, i8* %12, align 4
  %14 = icmp ugt i8 %13, -65
  br i1 %14, label %15, label %43

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %17, i32* %18, align 4
  %19 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %20 = icmp sgt i32 %17, 1
  br i1 %20, label %21, label %28

21:                                               ; preds = %15
  %22 = add nsw i32 %17, -1
  %23 = zext i32 %22 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 9, i64 %23, i1 false) #8
  %24 = add nsw i32 %17, -2
  %25 = zext i32 %24 to i64
  %26 = add nuw nsw i64 %25, 10
  %27 = getelementptr i8, i8* %4, i64 %26
  br label %28

28:                                               ; preds = %21, %15
  %29 = phi i8* [ %19, %15 ], [ %27, %21 ]
  %30 = phi i32 [ %17, %15 ], [ 1, %21 ]
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = trunc i32 %33 to i8
  %35 = add i8 %34, -1
  store i8 %35, i8* %29, align 1
  %36 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %16, align 4
  %40 = add i32 %38, 1
  %41 = sub i32 %40, %39
  %42 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %41, i32* %42, align 4
  store i8 -128, i8* %36, align 4
  br label %68

43:                                               ; preds = %3
  %44 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i64 0, i32 2
  store i8 0, i8* %44, align 4
  %45 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i64 0, i32 1
  %46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i64 0, i32 0
  store i32 1, i32* %46, align 4
  %47 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i64 0, i32 3, i64 0
  store i8 1, i8* %47, align 1
  store i32 -1000000000, i32* %45, align 4
  %48 = getelementptr inbounds %struct.decContext, %struct.decContext* %6, i64 0, i32 3
  store i32 0, i32* %48, align 4
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* nonnull %5, %struct.decContext* nonnull %6, i8 zeroext 0, i32* nonnull %7)
  %49 = load i32, i32* %7, align 4
  %50 = and i32 %49, 1073741952
  store i32 %50, i32* %7, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %43
  %53 = trunc i32 %49 to i8
  %54 = icmp sgt i8 %53, -1
  br i1 %54, label %65, label %55

55:                                               ; preds = %52
  %56 = and i32 %49, 1073741824
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = and i32 %49, 128
  br label %65

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %62 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %62, align 4
  %63 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %63, align 4
  %64 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %64, align 1
  store i8 32, i8* %61, align 4
  br label %65

65:                                               ; preds = %52, %58, %60
  %66 = phi i32 [ %59, %58 ], [ %50, %60 ], [ %50, %52 ]
  %67 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 %66) #8
  br label %68

68:                                               ; preds = %65, %43, %28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberNextToward_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %5 = bitcast %struct.decNumber* %0 to i8*
  %6 = ptrtoint %struct.decNumber* %1 to i64
  %7 = bitcast %struct.decNumber* %1 to i8*
  %8 = alloca %struct.decNumber, align 4
  %9 = alloca %struct.decContext, align 4
  %10 = alloca i32, align 4
  %11 = bitcast %struct.decNumber* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 12, i1 false)
  %12 = bitcast %struct.decContext* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %12) #8
  %13 = bitcast %struct.decContext* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %12, i8* align 4 %13, i64 28, i1 false)
  %14 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #8
  store i32 0, i32* %10, align 4
  %15 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = and i8 %16, 48
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %21 = load i8, i8* %20, align 4
  %22 = and i8 %21, 48
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %19, %4
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* nonnull %10)
  br label %269

25:                                               ; preds = %19
  %26 = tail call fastcc i32 @_ZL10decComparePK9decNumberS1_h(%struct.decNumber* %1, %struct.decNumber* %2, i8 zeroext 0)
  switch i32 %26, label %177 [
    i32 -2147483648, label %27
    i32 0, label %28
  ]

27:                                               ; preds = %25
  store i32 16, i32* %10, align 4
  br label %280

28:                                               ; preds = %25
  %29 = load i8, i8* %20, align 4
  %30 = and i8 %29, -128
  %31 = icmp eq %struct.decNumber* %0, %1
  br i1 %31, label %172, label %32

32:                                               ; preds = %28
  %33 = load i8, i8* %15, align 4
  %34 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %33, i8* %34, align 4
  %35 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %42 = load i8, i8* %41, align 1
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %42, i8* %43, align 1
  %44 = load i32, i32* %38, align 4
  %45 = icmp sgt i32 %44, 1
  br i1 %45, label %46, label %172

46:                                               ; preds = %32
  %47 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %48 = icmp slt i32 %44, 50
  %49 = sext i32 %44 to i64
  br i1 %48, label %50, label %54

50:                                               ; preds = %46
  %51 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %49
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i64
  br label %54

54:                                               ; preds = %50, %46
  %55 = phi i64 [ %53, %50 ], [ %49, %46 ]
  %56 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %55
  %57 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %58 = add nsw i64 %55, 9
  %59 = getelementptr i8, i8* %7, i64 %58
  %60 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %61 = icmp ugt i8* %59, %60
  %62 = select i1 %61, i8* %59, i8* %60
  %63 = sub i64 -10, %6
  %64 = getelementptr i8, i8* %62, i64 %63
  %65 = ptrtoint i8* %64 to i64
  %66 = icmp ult i8* %64, inttoptr (i64 32 to i8*)
  br i1 %66, label %162, label %67

67:                                               ; preds = %54
  %68 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %69 = add nsw i64 %55, 9
  %70 = getelementptr i8, i8* %7, i64 %69
  %71 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %72 = icmp ugt i8* %70, %71
  %73 = select i1 %72, i8* %70, i8* %71
  %74 = ptrtoint i8* %73 to i64
  %75 = sub i64 %74, %6
  %76 = getelementptr i8, i8* %5, i64 %75
  %77 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %78 = icmp ult i8* %68, %73
  %79 = icmp ult i8* %77, %76
  %80 = and i1 %78, %79
  br i1 %80, label %162, label %81

81:                                               ; preds = %67
  %82 = and i64 %65, -32
  %83 = getelementptr i8, i8* %47, i64 %82
  %84 = getelementptr i8, i8* %57, i64 %82
  %85 = add i64 %82, -32
  %86 = lshr exact i64 %85, 5
  %87 = add nuw nsw i64 %86, 1
  %88 = and i64 %87, 3
  %89 = icmp ult i64 %85, 96
  br i1 %89, label %141, label %90

90:                                               ; preds = %81
  %91 = sub nsw i64 %87, %88
  br label %92

92:                                               ; preds = %92, %90
  %93 = phi i64 [ 0, %90 ], [ %138, %92 ]
  %94 = phi i64 [ %91, %90 ], [ %139, %92 ]
  %95 = getelementptr i8, i8* %47, i64 %93
  %96 = getelementptr i8, i8* %57, i64 %93
  %97 = bitcast i8* %96 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1, !alias.scope !136
  %99 = getelementptr i8, i8* %96, i64 16
  %100 = bitcast i8* %99 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1, !alias.scope !136
  %102 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %98, <16 x i8>* %102, align 1, !alias.scope !139, !noalias !136
  %103 = getelementptr i8, i8* %95, i64 16
  %104 = bitcast i8* %103 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %104, align 1, !alias.scope !139, !noalias !136
  %105 = or i64 %93, 32
  %106 = getelementptr i8, i8* %47, i64 %105
  %107 = getelementptr i8, i8* %57, i64 %105
  %108 = bitcast i8* %107 to <16 x i8>*
  %109 = load <16 x i8>, <16 x i8>* %108, align 1, !alias.scope !136
  %110 = getelementptr i8, i8* %107, i64 16
  %111 = bitcast i8* %110 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !136
  %113 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %109, <16 x i8>* %113, align 1, !alias.scope !139, !noalias !136
  %114 = getelementptr i8, i8* %106, i64 16
  %115 = bitcast i8* %114 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %115, align 1, !alias.scope !139, !noalias !136
  %116 = or i64 %93, 64
  %117 = getelementptr i8, i8* %47, i64 %116
  %118 = getelementptr i8, i8* %57, i64 %116
  %119 = bitcast i8* %118 to <16 x i8>*
  %120 = load <16 x i8>, <16 x i8>* %119, align 1, !alias.scope !136
  %121 = getelementptr i8, i8* %118, i64 16
  %122 = bitcast i8* %121 to <16 x i8>*
  %123 = load <16 x i8>, <16 x i8>* %122, align 1, !alias.scope !136
  %124 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %120, <16 x i8>* %124, align 1, !alias.scope !139, !noalias !136
  %125 = getelementptr i8, i8* %117, i64 16
  %126 = bitcast i8* %125 to <16 x i8>*
  store <16 x i8> %123, <16 x i8>* %126, align 1, !alias.scope !139, !noalias !136
  %127 = or i64 %93, 96
  %128 = getelementptr i8, i8* %47, i64 %127
  %129 = getelementptr i8, i8* %57, i64 %127
  %130 = bitcast i8* %129 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !136
  %132 = getelementptr i8, i8* %129, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !136
  %135 = bitcast i8* %128 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1, !alias.scope !139, !noalias !136
  %136 = getelementptr i8, i8* %128, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1, !alias.scope !139, !noalias !136
  %138 = add i64 %93, 128
  %139 = add i64 %94, -4
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %92, !llvm.loop !141

141:                                              ; preds = %92, %81
  %142 = phi i64 [ 0, %81 ], [ %138, %92 ]
  %143 = icmp eq i64 %88, 0
  br i1 %143, label %160, label %144

144:                                              ; preds = %141, %144
  %145 = phi i64 [ %157, %144 ], [ %142, %141 ]
  %146 = phi i64 [ %158, %144 ], [ %88, %141 ]
  %147 = getelementptr i8, i8* %47, i64 %145
  %148 = getelementptr i8, i8* %57, i64 %145
  %149 = bitcast i8* %148 to <16 x i8>*
  %150 = load <16 x i8>, <16 x i8>* %149, align 1, !alias.scope !136
  %151 = getelementptr i8, i8* %148, i64 16
  %152 = bitcast i8* %151 to <16 x i8>*
  %153 = load <16 x i8>, <16 x i8>* %152, align 1, !alias.scope !136
  %154 = bitcast i8* %147 to <16 x i8>*
  store <16 x i8> %150, <16 x i8>* %154, align 1, !alias.scope !139, !noalias !136
  %155 = getelementptr i8, i8* %147, i64 16
  %156 = bitcast i8* %155 to <16 x i8>*
  store <16 x i8> %153, <16 x i8>* %156, align 1, !alias.scope !139, !noalias !136
  %157 = add i64 %145, 32
  %158 = add i64 %146, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %144, !llvm.loop !142

160:                                              ; preds = %144, %141
  %161 = icmp eq i64 %82, %65
  br i1 %161, label %172, label %162

162:                                              ; preds = %160, %67, %54
  %163 = phi i8* [ %47, %67 ], [ %47, %54 ], [ %83, %160 ]
  %164 = phi i8* [ %57, %67 ], [ %57, %54 ], [ %84, %160 ]
  br label %165

165:                                              ; preds = %162, %165
  %166 = phi i8* [ %170, %165 ], [ %163, %162 ]
  %167 = phi i8* [ %169, %165 ], [ %164, %162 ]
  %168 = load i8, i8* %167, align 1
  store i8 %168, i8* %166, align 1
  %169 = getelementptr inbounds i8, i8* %167, i64 1
  %170 = getelementptr inbounds i8, i8* %166, i64 1
  %171 = icmp ult i8* %169, %56
  br i1 %171, label %165, label %172, !llvm.loop !143

172:                                              ; preds = %165, %160, %28, %32
  %173 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %174 = load i8, i8* %173, align 4
  %175 = and i8 %174, 127
  %176 = or i8 %175, %30
  store i8 %176, i8* %173, align 4
  br label %269

177:                                              ; preds = %25
  %178 = icmp slt i32 %26, 0
  %179 = load i8, i8* %15, align 4
  br i1 %178, label %180, label %210

180:                                              ; preds = %177
  %181 = icmp ugt i8 %179, -65
  br i1 %181, label %182, label %241

182:                                              ; preds = %180
  %183 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %184, i32* %185, align 4
  %186 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %187 = icmp sgt i32 %184, 1
  br i1 %187, label %188, label %195

188:                                              ; preds = %182
  %189 = add nsw i32 %184, -1
  %190 = zext i32 %189 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %186, i8 9, i64 %190, i1 false) #8
  %191 = add nsw i32 %184, -2
  %192 = zext i32 %191 to i64
  %193 = add nuw nsw i64 %192, 10
  %194 = getelementptr i8, i8* %5, i64 %193
  br label %195

195:                                              ; preds = %188, %182
  %196 = phi i8* [ %186, %182 ], [ %194, %188 ]
  %197 = phi i32 [ %184, %182 ], [ 1, %188 ]
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = trunc i32 %200 to i8
  %202 = add i8 %201, -1
  store i8 %202, i8* %196, align 1
  %203 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %203, align 4
  %204 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = load i32, i32* %183, align 4
  %207 = add i32 %205, 1
  %208 = sub i32 %207, %206
  %209 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %208, i32* %209, align 4
  store i8 -128, i8* %203, align 4
  br label %289

210:                                              ; preds = %177
  %211 = and i8 %179, -64
  %212 = icmp eq i8 %211, 64
  br i1 %212, label %213, label %241

213:                                              ; preds = %210
  %214 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %215, i32* %216, align 4
  %217 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %218 = icmp sgt i32 %215, 1
  br i1 %218, label %219, label %226

219:                                              ; preds = %213
  %220 = add nsw i32 %215, -1
  %221 = zext i32 %220 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %217, i8 9, i64 %221, i1 false) #8
  %222 = add nsw i32 %215, -2
  %223 = zext i32 %222 to i64
  %224 = add nuw nsw i64 %223, 10
  %225 = getelementptr i8, i8* %5, i64 %224
  br label %226

226:                                              ; preds = %219, %213
  %227 = phi i8* [ %217, %213 ], [ %225, %219 ]
  %228 = phi i32 [ %215, %213 ], [ 1, %219 ]
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = trunc i32 %231 to i8
  %233 = add i8 %232, -1
  store i8 %233, i8* %227, align 1
  %234 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %234, align 4
  %235 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = load i32, i32* %214, align 4
  %238 = add i32 %236, 1
  %239 = sub i32 %238, %237
  %240 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %239, i32* %240, align 4
  br label %289

241:                                              ; preds = %210, %180
  %242 = phi i32 [ 0, %180 ], [ 6, %210 ]
  %243 = phi i8 [ 0, %180 ], [ -128, %210 ]
  %244 = getelementptr inbounds %struct.decContext, %struct.decContext* %9, i64 0, i32 3
  store i32 %242, i32* %244, align 4
  %245 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 2
  store i8 0, i8* %245, align 4
  %246 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 1
  %247 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 0
  store i32 1, i32* %247, align 4
  %248 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 3, i64 0
  store i8 1, i8* %248, align 1
  store i32 -1000000000, i32* %246, align 4
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* nonnull %8, %struct.decContext* nonnull %9, i8 zeroext %243, i32* nonnull %10)
  %249 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %250 = load i8, i8* %249, align 4
  %251 = and i8 %250, 112
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %253, label %269

253:                                              ; preds = %241
  %254 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %255 = load i8, i8* %254, align 1
  %256 = icmp eq i8 %255, 0
  %257 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %258, 1
  %260 = and i1 %256, %259
  br i1 %260, label %269, label %261

261:                                              ; preds = %253
  %262 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = add nsw i32 %263, %258
  %265 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 2
  %266 = load i32, i32* %265, align 4
  %267 = icmp sgt i32 %264, %266
  br i1 %267, label %268, label %269

268:                                              ; preds = %261
  store i32 0, i32* %10, align 4
  br label %289

269:                                              ; preds = %261, %253, %241, %172, %24
  %270 = load i32, i32* %10, align 4
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %289, label %272

272:                                              ; preds = %269
  %273 = and i32 %270, 221
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %286, label %275

275:                                              ; preds = %272
  %276 = and i32 %270, 1073741824
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %280, label %278

278:                                              ; preds = %275
  %279 = and i32 %270, -1073741825
  br label %286

280:                                              ; preds = %27, %275
  %281 = phi i32 [ 16, %27 ], [ %270, %275 ]
  %282 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %283 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %283, align 4
  %284 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %284, align 4
  %285 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %285, align 1
  store i8 32, i8* %282, align 4
  br label %286

286:                                              ; preds = %272, %278, %280
  %287 = phi i32 [ %279, %278 ], [ %281, %280 ], [ %270, %272 ]
  %288 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %287) #8
  br label %289

289:                                              ; preds = %268, %286, %269, %226, %195
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL10decComparePK9decNumberS1_h(%struct.decNumber*, %struct.decNumber*, i8 zeroext) unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %13 = load i8, i8* %12, align 4
  %14 = and i8 %13, 112
  %15 = icmp ne i8 %14, 0
  %16 = zext i1 %15 to i32
  br label %17

17:                                               ; preds = %11, %7, %3
  %18 = phi i32 [ 1, %7 ], [ 1, %3 ], [ %16, %11 ]
  %19 = icmp eq i8 %2, 0
  br i1 %19, label %38, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %33

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %33

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %30 = load i8, i8* %29, align 4
  %31 = and i8 %30, 112
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %129, label %33

33:                                               ; preds = %28, %24, %20
  %34 = icmp eq i32 %18, 0
  br i1 %34, label %129, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %37 = load i8, i8* %36, align 4
  br label %72

38:                                               ; preds = %17
  %39 = icmp eq i32 %18, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %42 = load i8, i8* %41, align 4
  %43 = icmp slt i8 %42, 0
  %44 = select i1 %43, i32 -1, i32 %18
  br label %45

45:                                               ; preds = %40, %38
  %46 = phi i32 [ 0, %38 ], [ %44, %40 ]
  %47 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %59

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %56 = load i8, i8* %55, align 4
  %57 = and i8 %56, 112
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %54, %50, %45
  %60 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %61 = load i8, i8* %60, align 4
  %62 = icmp slt i8 %61, 0
  %63 = select i1 %62, i32 -1, i32 1
  br label %64

64:                                               ; preds = %59, %54
  %65 = phi i8 [ %56, %54 ], [ %61, %59 ]
  %66 = phi i32 [ 0, %54 ], [ %63, %59 ]
  %67 = icmp sgt i32 %46, %66
  br i1 %67, label %129, label %68

68:                                               ; preds = %64
  %69 = icmp slt i32 %46, %66
  br i1 %69, label %129, label %70

70:                                               ; preds = %68
  %71 = icmp eq i32 %46, 0
  br i1 %71, label %129, label %72

72:                                               ; preds = %35, %70
  %73 = phi i8 [ %37, %35 ], [ %65, %70 ]
  %74 = phi i32 [ 1, %35 ], [ %46, %70 ]
  %75 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %76 = load i8, i8* %75, align 4
  %77 = or i8 %73, %76
  %78 = and i8 %77, 64
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %88, label %80

80:                                               ; preds = %72
  %81 = and i8 %73, 64
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %129, label %83

83:                                               ; preds = %80
  %84 = and i8 %76, 64
  %85 = icmp eq i8 %84, 0
  %86 = sub nsw i32 0, %74
  %87 = select i1 %85, i32 %86, i32 0
  ret i32 %87

88:                                               ; preds = %72
  %89 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %90, %92
  %94 = sub nsw i32 0, %74
  %95 = select i1 %93, %struct.decNumber* %0, %struct.decNumber* %1
  %96 = select i1 %93, %struct.decNumber* %1, %struct.decNumber* %0
  %97 = select i1 %93, i32 %94, i32 %74
  %98 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %96, i64 0, i32 3, i64 0
  %99 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %96, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp slt i32 %100, 50
  br i1 %101, label %102, label %107

102:                                              ; preds = %88
  %103 = sext i32 %100 to i64
  %104 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  br label %107

107:                                              ; preds = %88, %102
  %108 = phi i32 [ %106, %102 ], [ %100, %88 ]
  %109 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %95, i64 0, i32 3, i64 0
  %110 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %95, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp slt i32 %111, 50
  br i1 %112, label %113, label %118

113:                                              ; preds = %107
  %114 = sext i32 %111 to i64
  %115 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  br label %118

118:                                              ; preds = %107, %113
  %119 = phi i32 [ %117, %113 ], [ %111, %107 ]
  %120 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %95, i64 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %96, i64 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = sub nsw i32 %121, %123
  %125 = tail call fastcc i32 @_ZL14decUnitComparePKhiS0_ii(i8* %98, i32 %108, i8* %109, i32 %119, i32 %124)
  %126 = icmp eq i32 %125, -2147483648
  %127 = mul nsw i32 %125, %97
  %128 = select i1 %126, i32 -2147483648, i32 %127
  br label %129

129:                                              ; preds = %80, %70, %68, %64, %33, %28, %118
  %130 = phi i32 [ %128, %118 ], [ %18, %28 ], [ -1, %33 ], [ 1, %64 ], [ -1, %68 ], [ 0, %70 ], [ %74, %80 ]
  ret i32 %130
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberCopySign_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decNumber* nocapture readonly) local_unnamed_addr #0 {
  %4 = bitcast %struct.decNumber* %0 to i8*
  %5 = ptrtoint %struct.decNumber* %1 to i64
  %6 = bitcast %struct.decNumber* %1 to i8*
  %7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %8 = load i8, i8* %7, align 4
  %9 = and i8 %8, -128
  %10 = icmp eq %struct.decNumber* %0, %1
  br i1 %10, label %152, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %13 = load i8, i8* %12, align 4
  %14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %13, i8* %14, align 4
  %15 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %22, i8* %23, align 1
  %24 = load i32, i32* %18, align 4
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %26, label %152

26:                                               ; preds = %11
  %27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %28 = icmp slt i32 %24, 50
  %29 = sext i32 %24 to i64
  br i1 %28, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %29
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  br label %34

34:                                               ; preds = %30, %26
  %35 = phi i64 [ %33, %30 ], [ %29, %26 ]
  %36 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %35
  %37 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %38 = add nsw i64 %35, 9
  %39 = getelementptr i8, i8* %6, i64 %38
  %40 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %41 = icmp ugt i8* %39, %40
  %42 = select i1 %41, i8* %39, i8* %40
  %43 = sub i64 -10, %5
  %44 = getelementptr i8, i8* %42, i64 %43
  %45 = ptrtoint i8* %44 to i64
  %46 = icmp ult i8* %44, inttoptr (i64 32 to i8*)
  br i1 %46, label %142, label %47

47:                                               ; preds = %34
  %48 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %49 = add nsw i64 %35, 9
  %50 = getelementptr i8, i8* %6, i64 %49
  %51 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %52 = icmp ugt i8* %50, %51
  %53 = select i1 %52, i8* %50, i8* %51
  %54 = ptrtoint i8* %53 to i64
  %55 = sub i64 %54, %5
  %56 = getelementptr i8, i8* %4, i64 %55
  %57 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %58 = icmp ult i8* %48, %53
  %59 = icmp ult i8* %57, %56
  %60 = and i1 %58, %59
  br i1 %60, label %142, label %61

61:                                               ; preds = %47
  %62 = and i64 %45, -32
  %63 = getelementptr i8, i8* %27, i64 %62
  %64 = getelementptr i8, i8* %37, i64 %62
  %65 = add i64 %62, -32
  %66 = lshr exact i64 %65, 5
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 96
  br i1 %69, label %121, label %70

70:                                               ; preds = %61
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i8, i8* %27, i64 %73
  %76 = getelementptr i8, i8* %37, i64 %73
  %77 = bitcast i8* %76 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 1, !alias.scope !144
  %79 = getelementptr i8, i8* %76, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !144
  %82 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %78, <16 x i8>* %82, align 1, !alias.scope !147, !noalias !144
  %83 = getelementptr i8, i8* %75, i64 16
  %84 = bitcast i8* %83 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %84, align 1, !alias.scope !147, !noalias !144
  %85 = or i64 %73, 32
  %86 = getelementptr i8, i8* %27, i64 %85
  %87 = getelementptr i8, i8* %37, i64 %85
  %88 = bitcast i8* %87 to <16 x i8>*
  %89 = load <16 x i8>, <16 x i8>* %88, align 1, !alias.scope !144
  %90 = getelementptr i8, i8* %87, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !144
  %93 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %89, <16 x i8>* %93, align 1, !alias.scope !147, !noalias !144
  %94 = getelementptr i8, i8* %86, i64 16
  %95 = bitcast i8* %94 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %95, align 1, !alias.scope !147, !noalias !144
  %96 = or i64 %73, 64
  %97 = getelementptr i8, i8* %27, i64 %96
  %98 = getelementptr i8, i8* %37, i64 %96
  %99 = bitcast i8* %98 to <16 x i8>*
  %100 = load <16 x i8>, <16 x i8>* %99, align 1, !alias.scope !144
  %101 = getelementptr i8, i8* %98, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !alias.scope !144
  %104 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %100, <16 x i8>* %104, align 1, !alias.scope !147, !noalias !144
  %105 = getelementptr i8, i8* %97, i64 16
  %106 = bitcast i8* %105 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %106, align 1, !alias.scope !147, !noalias !144
  %107 = or i64 %73, 96
  %108 = getelementptr i8, i8* %27, i64 %107
  %109 = getelementptr i8, i8* %37, i64 %107
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !144
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !144
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !147, !noalias !144
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !147, !noalias !144
  %118 = add i64 %73, 128
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !149

121:                                              ; preds = %72, %61
  %122 = phi i64 [ 0, %61 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i8, i8* %27, i64 %125
  %128 = getelementptr i8, i8* %37, i64 %125
  %129 = bitcast i8* %128 to <16 x i8>*
  %130 = load <16 x i8>, <16 x i8>* %129, align 1, !alias.scope !144
  %131 = getelementptr i8, i8* %128, i64 16
  %132 = bitcast i8* %131 to <16 x i8>*
  %133 = load <16 x i8>, <16 x i8>* %132, align 1, !alias.scope !144
  %134 = bitcast i8* %127 to <16 x i8>*
  store <16 x i8> %130, <16 x i8>* %134, align 1, !alias.scope !147, !noalias !144
  %135 = getelementptr i8, i8* %127, i64 16
  %136 = bitcast i8* %135 to <16 x i8>*
  store <16 x i8> %133, <16 x i8>* %136, align 1, !alias.scope !147, !noalias !144
  %137 = add i64 %125, 32
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !150

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %62, %45
  br i1 %141, label %152, label %142

142:                                              ; preds = %140, %47, %34
  %143 = phi i8* [ %27, %47 ], [ %27, %34 ], [ %63, %140 ]
  %144 = phi i8* [ %37, %47 ], [ %37, %34 ], [ %64, %140 ]
  br label %145

145:                                              ; preds = %142, %145
  %146 = phi i8* [ %150, %145 ], [ %143, %142 ]
  %147 = phi i8* [ %149, %145 ], [ %144, %142 ]
  %148 = load i8, i8* %147, align 1
  store i8 %148, i8* %146, align 1
  %149 = getelementptr inbounds i8, i8* %147, i64 1
  %150 = getelementptr inbounds i8, i8* %146, i64 1
  %151 = icmp ult i8* %149, %36
  br i1 %151, label %145, label %152, !llvm.loop !151

152:                                              ; preds = %145, %140, %3, %11
  %153 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %154 = load i8, i8* %153, align 4
  %155 = and i8 %154, 127
  %156 = or i8 %155, %9
  store i8 %156, i8* %153, align 4
  ret %struct.decNumber* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @uprv_decNumberIsNormal_69(%struct.decNumber* nocapture readonly, %struct.decContext* nocapture readonly) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, 112
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %23

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  %14 = and i1 %10, %13
  br i1 %14, label %23, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %12, %17
  %19 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %18, %20
  %22 = zext i1 %21 to i32
  br label %23

23:                                               ; preds = %7, %15, %2
  %24 = phi i32 [ 0, %2 ], [ %22, %15 ], [ 0, %7 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberOr_69(%struct.decNumber*, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %20

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 4
  %11 = icmp ugt i8 %10, 15
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %18 = load i8, i8* %17, align 4
  %19 = icmp ugt i8 %18, 15
  br i1 %19, label %20, label %26

20:                                               ; preds = %16, %8, %12, %4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %22 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %23, align 4
  %24 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %24, align 1
  store i8 32, i8* %21, align 4
  %25 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 128) #8
  br label %133

26:                                               ; preds = %16
  %27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %28 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 0
  %29 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %30 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, 50
  br i1 %32, label %33, label %38

33:                                               ; preds = %26
  %34 = sext i32 %31 to i64
  %35 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  br label %38

38:                                               ; preds = %26, %33
  %39 = phi i32 [ %37, %33 ], [ %31, %26 ]
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %40
  %42 = getelementptr inbounds i8, i8* %41, i64 -1
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, 50
  br i1 %45, label %46, label %51

46:                                               ; preds = %38
  %47 = sext i32 %44 to i64
  %48 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  br label %51

51:                                               ; preds = %38, %46
  %52 = phi i32 [ %50, %46 ], [ %44, %38 ]
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 %53
  %55 = getelementptr inbounds i8, i8* %54, i64 -1
  %56 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %57, 50
  %59 = sext i32 %57 to i64
  br i1 %58, label %60, label %64

60:                                               ; preds = %51
  %61 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %59
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i64
  br label %64

64:                                               ; preds = %51, %60
  %65 = phi i64 [ %63, %60 ], [ %59, %51 ]
  %66 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %65
  %67 = getelementptr inbounds i8, i8* %66, i64 -1
  %68 = icmp ugt i8* %29, %67
  br i1 %68, label %105, label %69

69:                                               ; preds = %64, %100
  %70 = phi i8* [ %103, %100 ], [ %29, %64 ]
  %71 = phi i8* [ %102, %100 ], [ %28, %64 ]
  %72 = phi i8* [ %101, %100 ], [ %27, %64 ]
  %73 = icmp ugt i8* %72, %42
  br i1 %73, label %76, label %74

74:                                               ; preds = %69
  %75 = load i8, i8* %72, align 1
  br label %76

76:                                               ; preds = %69, %74
  %77 = phi i8 [ %75, %74 ], [ 0, %69 ]
  %78 = icmp ugt i8* %71, %55
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = load i8, i8* %71, align 1
  br label %81

81:                                               ; preds = %76, %79
  %82 = phi i8 [ %80, %79 ], [ 0, %76 ]
  store i8 0, i8* %70, align 1
  %83 = or i8 %82, %77
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %100, label %85

85:                                               ; preds = %81
  %86 = or i8 %82, %77
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  store i8 1, i8* %70, align 1
  br label %90

90:                                               ; preds = %85, %89
  %91 = urem i8 %77, 10
  %92 = urem i8 %82, 10
  %93 = or i8 %92, %91
  %94 = icmp ugt i8 %93, 1
  br i1 %94, label %95, label %100

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %97 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %97, align 4
  %98 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %98, align 4
  store i8 0, i8* %29, align 1
  store i8 32, i8* %96, align 4
  %99 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 128) #8
  br label %133

100:                                              ; preds = %90, %81
  %101 = getelementptr inbounds i8, i8* %72, i64 1
  %102 = getelementptr inbounds i8, i8* %71, i64 1
  %103 = getelementptr inbounds i8, i8* %70, i64 1
  %104 = icmp ugt i8* %103, %67
  br i1 %104, label %105, label %69

105:                                              ; preds = %100, %64
  %106 = phi i8* [ %29, %64 ], [ %103, %100 ]
  %107 = ptrtoint i8* %106 to i64
  %108 = ptrtoint i8* %29 to i64
  %109 = sub i64 %107, %108
  %110 = trunc i64 %109 to i32
  %111 = icmp slt i32 %110, 1
  br i1 %111, label %128, label %112

112:                                              ; preds = %105
  %113 = shl i64 %109, 32
  %114 = add i64 %113, -4294967296
  %115 = ashr exact i64 %114, 32
  %116 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %115
  br label %117

117:                                              ; preds = %124, %112
  %118 = phi i32 [ %125, %124 ], [ %110, %112 ]
  %119 = phi i8* [ %126, %124 ], [ %116, %112 ]
  %120 = load i8, i8* %119, align 1
  %121 = icmp ne i8 %120, 0
  %122 = icmp eq i32 %118, 1
  %123 = or i1 %122, %121
  br i1 %123, label %128, label %124

124:                                              ; preds = %117
  %125 = add nsw i32 %118, -1
  %126 = getelementptr inbounds i8, i8* %119, i64 -1
  %127 = icmp ult i8* %126, %29
  br i1 %127, label %128, label %117

128:                                              ; preds = %117, %124, %105
  %129 = phi i32 [ %110, %105 ], [ %118, %117 ], [ %125, %124 ]
  %130 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %129, i32* %130, align 4
  %131 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %131, align 4
  %132 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %132, align 4
  br label %133

133:                                              ; preds = %95, %128, %20
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberPlus_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %4 = alloca %struct.decNumber, align 4
  %5 = alloca i32, align 4
  %6 = bitcast %struct.decNumber* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -86, i64 12, i1 false)
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 0, i32* %5, align 4
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 2
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 1
  %10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 0
  store i32 1, i32* %10, align 4
  %11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i64 0, i32 3, i64 0
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %9, align 4
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* nonnull %4, %struct.decNumber* %1, %struct.decContext* %2, i8 zeroext 0, i32* nonnull %5)
  %14 = load i32, i32* %5, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %3
  %17 = and i32 %14, 221
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %16
  %20 = and i32 %14, 1073741824
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %19
  %23 = and i32 %14, -1073741825
  br label %29

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %28, align 1
  store i8 32, i8* %25, align 4
  br label %29

29:                                               ; preds = %16, %22, %24
  %30 = phi i32 [ %23, %22 ], [ %14, %24 ], [ %14, %16 ]
  %31 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 %30) #8
  br label %32

32:                                               ; preds = %3, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberMultiply_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberPower_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.decContext, align 4
  %8 = alloca %struct.decNumber, align 4
  %9 = ptrtoint %struct.decNumber* %8 to i64
  %10 = bitcast %struct.decNumber* %8 to i8*
  %11 = alloca [5 x %struct.decNumber], align 16
  %12 = alloca [5 x %struct.decNumber], align 16
  %13 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #8
  store i32 0, i32* %5, align 4
  %16 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  store i32 0, i32* %6, align 4
  %17 = bitcast %struct.decContext* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %17) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -86, i64 28, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 -86, i64 12, i1 false)
  %18 = bitcast [5 x %struct.decNumber]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %18) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 60, i1 false)
  %19 = getelementptr inbounds [5 x %struct.decNumber], [5 x %struct.decNumber]* %11, i64 0, i64 0
  %20 = bitcast [5 x %struct.decNumber]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 60, i1 false)
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %22 = load i8, i8* %21, align 4
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %25 = load i8, i8* %24, align 4
  %26 = or i8 %25, %22
  %27 = and i8 %26, 112
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %81, label %29

29:                                               ; preds = %4
  %30 = and i8 %26, 48
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* nonnull %6)
  br label %727

33:                                               ; preds = %29
  %34 = and i8 %25, 64
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %33
  %37 = and i8 %25, -128
  %38 = icmp slt i8 %22, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 1
  %47 = and i32 %23, 112
  %48 = icmp eq i32 %47, 0
  %49 = and i1 %48, %46
  br i1 %49, label %51, label %50

50:                                               ; preds = %43, %39
  store i32 128, i32* %6, align 4
  br label %739

51:                                               ; preds = %43, %36
  %52 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 2
  store i8 0, i8* %52, align 4
  %53 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 1
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 0
  store i32 1, i32* %54, align 4
  %55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 3, i64 0
  store i8 1, i8* %55, align 1
  %56 = call %struct.decNumber* @uprv_decNumberCompare_69(%struct.decNumber* nonnull %19, %struct.decNumber* %1, %struct.decNumber* nonnull %8, %struct.decContext* %3)
  %57 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %57, align 4
  %58 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %58, align 4
  %59 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %59, align 4
  %60 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %60, align 1
  %61 = getelementptr inbounds [5 x %struct.decNumber], [5 x %struct.decNumber]* %11, i64 0, i64 0, i32 2
  %62 = load i8, i8* %61, align 8
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %51
  %65 = icmp eq i8 %37, 0
  br i1 %65, label %727, label %66

66:                                               ; preds = %64
  store i8 64, i8* %57, align 4
  br label %727

67:                                               ; preds = %51
  %68 = getelementptr inbounds [5 x %struct.decNumber], [5 x %struct.decNumber]* %11, i64 0, i64 0, i32 3, i64 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %78

71:                                               ; preds = %67
  %72 = load i32, i32* %13, align 4
  %73 = add nsw i32 %72, -1
  store i8 1, i8* %60, align 1
  %74 = call fastcc i32 @_ZL14decShiftToMostPhii(i8* %60, i32 1, i32 %73)
  store i32 %74, i32* %59, align 4
  %75 = sub i32 1, %72
  store i32 %75, i32* %58, align 4
  %76 = load i32, i32* %6, align 4
  %77 = or i32 %76, 2080
  store i32 %77, i32* %6, align 4
  br label %730

78:                                               ; preds = %67
  %79 = icmp eq i8 %37, 0
  br i1 %79, label %80, label %727

80:                                               ; preds = %78
  store i8 64, i8* %57, align 4
  br label %727

81:                                               ; preds = %33, %4
  %82 = tail call fastcc i32 @_ZL9decGetIntPK9decNumber(%struct.decNumber* %2)
  %83 = icmp eq i32 %82, -2147483648
  br i1 %83, label %90, label %84

84:                                               ; preds = %81
  %85 = trunc i32 %82 to i8
  %86 = and i8 %85, 1
  %87 = or i32 %82, 1
  %88 = icmp ne i32 %87, -2147483645
  %89 = zext i1 %88 to i8
  br label %90

90:                                               ; preds = %84, %81
  %91 = phi i8 [ 0, %81 ], [ 1, %84 ]
  %92 = phi i8 [ 0, %81 ], [ %89, %84 ]
  %93 = phi i8 [ 0, %81 ], [ %86, %84 ]
  %94 = icmp slt i8 %22, 0
  %95 = icmp ne i8 %93, 0
  %96 = and i1 %94, %95
  %97 = select i1 %96, i8 -128, i8 0
  %98 = and i32 %23, 64
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %117, label %100

100:                                              ; preds = %90
  %101 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %101, align 4
  %102 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %102, align 4
  %103 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %103, align 4
  %104 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %104, align 1
  %105 = icmp eq i32 %82, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %100
  store i8 1, i8* %104, align 1
  br label %727

107:                                              ; preds = %100
  %108 = icmp eq i8 %91, 0
  br i1 %108, label %109, label %113

109:                                              ; preds = %107
  %110 = load i8, i8* %21, align 4
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  store i32 128, i32* %6, align 4
  br label %739

113:                                              ; preds = %107, %109
  %114 = icmp slt i8 %25, 0
  %115 = or i8 %97, 64
  %116 = select i1 %114, i8 %97, i8 %115
  store i8 %116, i8* %101, align 4
  br label %727

117:                                              ; preds = %90
  %118 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %139

121:                                              ; preds = %117
  %122 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 1
  %125 = and i32 %23, 112
  %126 = icmp eq i32 %125, 0
  %127 = and i1 %126, %124
  br i1 %127, label %128, label %139

128:                                              ; preds = %121
  %129 = icmp eq i32 %82, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %128
  store i32 128, i32* %6, align 4
  br label %739

131:                                              ; preds = %128
  %132 = icmp slt i8 %25, 0
  %133 = or i8 %97, 64
  %134 = select i1 %132, i8 %133, i8 %97
  %135 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %136 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %136, align 4
  %137 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %137, align 4
  %138 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %138, align 1
  store i8 %134, i8* %135, align 4
  br label %727

139:                                              ; preds = %121, %117
  %140 = icmp ne i8 %92, 0
  br i1 %140, label %201, label %141

141:                                              ; preds = %139
  br i1 %94, label %142, label %143

142:                                              ; preds = %141
  store i32 128, i32* %6, align 4
  br label %739

143:                                              ; preds = %141
  %144 = icmp sgt i32 %14, 999999
  br i1 %144, label %169, label %145

145:                                              ; preds = %143
  %146 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = icmp sgt i32 %147, 999999
  br i1 %148, label %169, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 2
  %151 = load i32, i32* %150, align 4
  %152 = icmp slt i32 %151, -999999
  br i1 %152, label %169, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = icmp sgt i32 %155, 999999
  br i1 %156, label %169, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = add nsw i32 %155, 1999996
  %161 = add i32 %160, %159
  %162 = icmp ugt i32 %161, 2999996
  br i1 %162, label %163, label %171

163:                                              ; preds = %157
  %164 = icmp eq i32 %155, 1
  %165 = and i8 %22, 112
  %166 = or i8 %119, %165
  %167 = icmp eq i8 %166, 0
  %168 = and i1 %167, %164
  br i1 %168, label %171, label %169

169:                                              ; preds = %153, %163, %143, %145, %149
  %170 = phi i32 [ 64, %149 ], [ 64, %145 ], [ 64, %143 ], [ 128, %163 ], [ 128, %153 ]
  store i32 %170, i32* %6, align 4
  br label %730

171:                                              ; preds = %163, %157
  %172 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = icmp sgt i32 %173, 999999
  br i1 %174, label %189, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = add nsw i32 %173, 1999996
  %179 = add i32 %178, %177
  %180 = icmp ugt i32 %179, 2999996
  br i1 %180, label %181, label %190

181:                                              ; preds = %175
  %182 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp eq i32 %173, 1
  %185 = and i8 %25, 112
  %186 = or i8 %183, %185
  %187 = icmp eq i8 %186, 0
  %188 = and i1 %184, %187
  br i1 %188, label %190, label %189

189:                                              ; preds = %171, %181
  store i32 128, i32* %6, align 4
  br label %739

190:                                              ; preds = %181, %175
  %191 = call %struct.decContext* @uprv_decContextDefault_69(%struct.decContext* nonnull %7, i32 64) #8
  %192 = getelementptr inbounds %struct.decContext, %struct.decContext* %7, i64 0, i32 1
  store i32 999999, i32* %192, align 4
  %193 = getelementptr inbounds %struct.decContext, %struct.decContext* %7, i64 0, i32 2
  store i32 -999999, i32* %193, align 4
  %194 = getelementptr inbounds %struct.decContext, %struct.decContext* %7, i64 0, i32 6
  store i8 0, i8* %194, align 4
  %195 = load i32, i32* %154, align 4
  %196 = load i32, i32* %13, align 4
  %197 = icmp slt i32 %195, %196
  %198 = select i1 %197, i32 %196, i32 %195
  %199 = add nsw i32 %198, 10
  %200 = getelementptr inbounds %struct.decContext, %struct.decContext* %7, i64 0, i32 0
  store i32 %199, i32* %200, align 4
  br label %224

201:                                              ; preds = %139
  %202 = icmp eq i32 %82, 0
  br i1 %202, label %203, label %208

203:                                              ; preds = %201
  %204 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %204, align 4
  %205 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %205, align 4
  %206 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %206, align 4
  %207 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 1, i8* %207, align 1
  br label %727

208:                                              ; preds = %201
  %209 = icmp slt i32 %82, 0
  %210 = sub nsw i32 0, %82
  %211 = select i1 %209, i32 %210, i32 %82
  %212 = bitcast %struct.decContext* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 %212, i64 28, i1 false)
  %213 = getelementptr inbounds %struct.decContext, %struct.decContext* %7, i64 0, i32 3
  store i32 3, i32* %213, align 4
  %214 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = add i32 %14, 2
  %219 = add i32 %218, %215
  %220 = add i32 %219, %217
  %221 = getelementptr inbounds %struct.decContext, %struct.decContext* %7, i64 0, i32 0
  store i32 %220, i32* %221, align 4
  %222 = icmp sgt i32 %220, 999999999
  br i1 %222, label %223, label %224

223:                                              ; preds = %208
  store i32 128, i32* %6, align 4
  br label %739

224:                                              ; preds = %208, %190
  %225 = phi i32 [ %220, %208 ], [ %199, %190 ]
  %226 = phi i32 [ %211, %208 ], [ %82, %190 ]
  %227 = icmp slt i32 %225, 50
  br i1 %227, label %228, label %233

228:                                              ; preds = %224
  %229 = sext i32 %225 to i64
  %230 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %229
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i32
  br label %233

233:                                              ; preds = %224, %228
  %234 = phi i32 [ %232, %228 ], [ %225, %224 ]
  %235 = add nuw i32 %234, 11
  %236 = zext i32 %235 to i64
  %237 = icmp ugt i32 %235, 60
  br i1 %237, label %238, label %245

238:                                              ; preds = %233
  %239 = call noalias i8* @uprv_malloc_69(i64 %236) #9
  %240 = bitcast i8* %239 to %struct.decNumber*
  %241 = icmp eq i8* %239, null
  br i1 %241, label %242, label %245

242:                                              ; preds = %238
  %243 = load i32, i32* %6, align 4
  %244 = or i32 %243, 16
  store i32 %244, i32* %6, align 4
  br label %730

245:                                              ; preds = %238, %233
  %246 = phi %struct.decNumber* [ %19, %233 ], [ %240, %238 ]
  %247 = phi i8* [ null, %233 ], [ %239, %238 ]
  %248 = phi %struct.decNumber* [ null, %233 ], [ %240, %238 ]
  %249 = ptrtoint %struct.decNumber* %246 to i64
  %250 = bitcast %struct.decNumber* %246 to i8*
  br i1 %140, label %275, label %251

251:                                              ; preds = %245
  call fastcc void @_ZL7decLnOpP9decNumberPKS_P10decContextPj(%struct.decNumber* %246, %struct.decNumber* %1, %struct.decContext* nonnull %7, i32* nonnull %6)
  %252 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 3, i64 0
  %253 = load i8, i8* %252, align 1
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %255, label %274

255:                                              ; preds = %251
  %256 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 1
  br i1 %258, label %259, label %274

259:                                              ; preds = %255
  %260 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 2
  %261 = load i8, i8* %260, align 4
  %262 = and i8 %261, 112
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %264, label %274

264:                                              ; preds = %259
  store i8 1, i8* %252, align 1
  %265 = icmp eq i8 %91, 0
  br i1 %265, label %266, label %707

266:                                              ; preds = %264
  %267 = load i32, i32* %13, align 4
  %268 = add nsw i32 %267, -1
  %269 = call fastcc i32 @_ZL14decShiftToMostPhii(i8* %252, i32 1, i32 %268)
  store i32 %269, i32* %256, align 4
  %270 = sub i32 1, %267
  %271 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 1
  store i32 %270, i32* %271, align 4
  %272 = load i32, i32* %6, align 4
  %273 = or i32 %272, 2080
  store i32 %273, i32* %6, align 4
  br label %707

274:                                              ; preds = %259, %255, %251
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %246, %struct.decNumber* %246, %struct.decNumber* %2, %struct.decContext* nonnull %7, i32* nonnull %6)
  call fastcc void @_ZL8decExpOpP9decNumberPKS_P10decContextPj(%struct.decNumber* %246, %struct.decNumber* %246, %struct.decContext* nonnull %7, i32* nonnull %6)
  br label %707

275:                                              ; preds = %245
  %276 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 2
  store i8 0, i8* %276, align 4
  %277 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 1
  store i32 0, i32* %277, align 4
  %278 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 0
  store i32 1, i32* %278, align 4
  %279 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 3, i64 0
  store i8 1, i8* %279, align 1
  %280 = load i8, i8* %24, align 4
  %281 = icmp slt i8 %280, 0
  br i1 %281, label %282, label %540

282:                                              ; preds = %275
  %283 = getelementptr inbounds [5 x %struct.decNumber], [5 x %struct.decNumber]* %12, i64 0, i64 0
  %284 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 2
  store i8 0, i8* %284, align 4
  %285 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 1
  store i32 0, i32* %285, align 4
  %286 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 0
  store i32 1, i32* %286, align 4
  %287 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 3, i64 0
  store i8 1, i8* %287, align 1
  call fastcc void @_ZL11decDivideOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %246, %struct.decNumber* nonnull %8, %struct.decNumber* %1, %struct.decContext* nonnull %7, i8 zeroext -128, i32* nonnull %6)
  br i1 %237, label %288, label %292

288:                                              ; preds = %282
  %289 = call noalias i8* @uprv_malloc_69(i64 %236) #9
  %290 = bitcast i8* %289 to %struct.decNumber*
  %291 = icmp eq i8* %289, null
  br i1 %291, label %537, label %292

292:                                              ; preds = %288, %282
  %293 = phi i8* [ null, %282 ], [ %289, %288 ]
  %294 = phi %struct.decNumber* [ null, %282 ], [ %290, %288 ]
  %295 = phi %struct.decNumber* [ %283, %282 ], [ %290, %288 ]
  %296 = icmp eq %struct.decNumber* %295, %246
  br i1 %296, label %419, label %297

297:                                              ; preds = %292
  %298 = load i8, i8* %276, align 4
  %299 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %295, i64 0, i32 2
  store i8 %298, i8* %299, align 4
  %300 = load i32, i32* %277, align 4
  %301 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %295, i64 0, i32 1
  store i32 %300, i32* %301, align 4
  %302 = load i32, i32* %278, align 4
  %303 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %295, i64 0, i32 0
  store i32 %302, i32* %303, align 4
  %304 = load i8, i8* %279, align 1
  %305 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %295, i64 0, i32 3, i64 0
  store i8 %304, i8* %305, align 1
  %306 = icmp sgt i32 %302, 1
  br i1 %306, label %307, label %419

307:                                              ; preds = %297
  %308 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %295, i64 0, i32 3, i64 1
  %309 = icmp slt i32 %302, 50
  %310 = sext i32 %302 to i64
  br i1 %309, label %311, label %315

311:                                              ; preds = %307
  %312 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %310
  %313 = load i8, i8* %312, align 1
  %314 = zext i8 %313 to i64
  br label %315

315:                                              ; preds = %311, %307
  %316 = phi i64 [ %314, %311 ], [ %310, %307 ]
  %317 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 3, i64 %316
  %318 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 3, i64 1
  %319 = add nsw i64 %316, 9
  %320 = getelementptr i8, i8* %250, i64 %319
  %321 = getelementptr %struct.decNumber, %struct.decNumber* %246, i64 0, i32 3, i64 2
  %322 = icmp ugt i8* %320, %321
  %323 = select i1 %322, i8* %320, i8* %321
  %324 = sub i64 -10, %249
  %325 = getelementptr i8, i8* %323, i64 %324
  %326 = ptrtoint i8* %325 to i64
  %327 = icmp ult i8* %325, inttoptr (i64 32 to i8*)
  br i1 %327, label %409, label %328

328:                                              ; preds = %315
  %329 = and i64 %326, -32
  %330 = getelementptr i8, i8* %308, i64 %329
  %331 = getelementptr i8, i8* %318, i64 %329
  %332 = add i64 %329, -32
  %333 = lshr exact i64 %332, 5
  %334 = add nuw nsw i64 %333, 1
  %335 = and i64 %334, 3
  %336 = icmp ult i64 %332, 96
  br i1 %336, label %388, label %337

337:                                              ; preds = %328
  %338 = sub nsw i64 %334, %335
  br label %339

339:                                              ; preds = %339, %337
  %340 = phi i64 [ 0, %337 ], [ %385, %339 ]
  %341 = phi i64 [ %338, %337 ], [ %386, %339 ]
  %342 = getelementptr i8, i8* %308, i64 %340
  %343 = getelementptr i8, i8* %318, i64 %340
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1
  %346 = getelementptr i8, i8* %343, i64 16
  %347 = bitcast i8* %346 to <16 x i8>*
  %348 = load <16 x i8>, <16 x i8>* %347, align 1
  %349 = bitcast i8* %342 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %349, align 1
  %350 = getelementptr i8, i8* %342, i64 16
  %351 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %348, <16 x i8>* %351, align 1
  %352 = or i64 %340, 32
  %353 = getelementptr i8, i8* %308, i64 %352
  %354 = getelementptr i8, i8* %318, i64 %352
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1
  %357 = getelementptr i8, i8* %354, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  %359 = load <16 x i8>, <16 x i8>* %358, align 1
  %360 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %360, align 1
  %361 = getelementptr i8, i8* %353, i64 16
  %362 = bitcast i8* %361 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %362, align 1
  %363 = or i64 %340, 64
  %364 = getelementptr i8, i8* %308, i64 %363
  %365 = getelementptr i8, i8* %318, i64 %363
  %366 = bitcast i8* %365 to <16 x i8>*
  %367 = load <16 x i8>, <16 x i8>* %366, align 1
  %368 = getelementptr i8, i8* %365, i64 16
  %369 = bitcast i8* %368 to <16 x i8>*
  %370 = load <16 x i8>, <16 x i8>* %369, align 1
  %371 = bitcast i8* %364 to <16 x i8>*
  store <16 x i8> %367, <16 x i8>* %371, align 1
  %372 = getelementptr i8, i8* %364, i64 16
  %373 = bitcast i8* %372 to <16 x i8>*
  store <16 x i8> %370, <16 x i8>* %373, align 1
  %374 = or i64 %340, 96
  %375 = getelementptr i8, i8* %308, i64 %374
  %376 = getelementptr i8, i8* %318, i64 %374
  %377 = bitcast i8* %376 to <16 x i8>*
  %378 = load <16 x i8>, <16 x i8>* %377, align 1
  %379 = getelementptr i8, i8* %376, i64 16
  %380 = bitcast i8* %379 to <16 x i8>*
  %381 = load <16 x i8>, <16 x i8>* %380, align 1
  %382 = bitcast i8* %375 to <16 x i8>*
  store <16 x i8> %378, <16 x i8>* %382, align 1
  %383 = getelementptr i8, i8* %375, i64 16
  %384 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %381, <16 x i8>* %384, align 1
  %385 = add i64 %340, 128
  %386 = add i64 %341, -4
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %388, label %339, !llvm.loop !152

388:                                              ; preds = %339, %328
  %389 = phi i64 [ 0, %328 ], [ %385, %339 ]
  %390 = icmp eq i64 %335, 0
  br i1 %390, label %407, label %391

391:                                              ; preds = %388, %391
  %392 = phi i64 [ %404, %391 ], [ %389, %388 ]
  %393 = phi i64 [ %405, %391 ], [ %335, %388 ]
  %394 = getelementptr i8, i8* %308, i64 %392
  %395 = getelementptr i8, i8* %318, i64 %392
  %396 = bitcast i8* %395 to <16 x i8>*
  %397 = load <16 x i8>, <16 x i8>* %396, align 1
  %398 = getelementptr i8, i8* %395, i64 16
  %399 = bitcast i8* %398 to <16 x i8>*
  %400 = load <16 x i8>, <16 x i8>* %399, align 1
  %401 = bitcast i8* %394 to <16 x i8>*
  store <16 x i8> %397, <16 x i8>* %401, align 1
  %402 = getelementptr i8, i8* %394, i64 16
  %403 = bitcast i8* %402 to <16 x i8>*
  store <16 x i8> %400, <16 x i8>* %403, align 1
  %404 = add i64 %392, 32
  %405 = add i64 %393, -1
  %406 = icmp eq i64 %405, 0
  br i1 %406, label %407, label %391, !llvm.loop !153

407:                                              ; preds = %391, %388
  %408 = icmp eq i64 %329, %326
  br i1 %408, label %419, label %409

409:                                              ; preds = %407, %315
  %410 = phi i8* [ %308, %315 ], [ %330, %407 ]
  %411 = phi i8* [ %318, %315 ], [ %331, %407 ]
  br label %412

412:                                              ; preds = %409, %412
  %413 = phi i8* [ %417, %412 ], [ %410, %409 ]
  %414 = phi i8* [ %416, %412 ], [ %411, %409 ]
  %415 = load i8, i8* %414, align 1
  store i8 %415, i8* %413, align 1
  %416 = getelementptr inbounds i8, i8* %414, i64 1
  %417 = getelementptr inbounds i8, i8* %413, i64 1
  %418 = icmp ult i8* %416, %317
  br i1 %418, label %412, label %419, !llvm.loop !154

419:                                              ; preds = %412, %407, %292, %297
  %420 = load i8, i8* %284, align 4
  store i8 %420, i8* %276, align 4
  %421 = load i32, i32* %285, align 4
  store i32 %421, i32* %277, align 4
  %422 = load i32, i32* %286, align 4
  store i32 %422, i32* %278, align 4
  %423 = load i8, i8* %287, align 1
  store i8 %423, i8* %279, align 1
  %424 = icmp sgt i32 %422, 1
  br i1 %424, label %425, label %540

425:                                              ; preds = %419
  %426 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 3, i64 1
  %427 = icmp slt i32 %422, 50
  %428 = sext i32 %422 to i64
  br i1 %427, label %429, label %433

429:                                              ; preds = %425
  %430 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %428
  %431 = load i8, i8* %430, align 1
  %432 = zext i8 %431 to i64
  br label %433

433:                                              ; preds = %429, %425
  %434 = phi i64 [ %432, %429 ], [ %428, %425 ]
  %435 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 3, i64 %434
  %436 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 3, i64 1
  %437 = add nsw i64 %434, 9
  %438 = getelementptr i8, i8* %10, i64 %437
  %439 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 3, i64 2
  %440 = icmp ugt i8* %438, %439
  %441 = select i1 %440, i8* %438, i8* %439
  %442 = sub i64 -10, %9
  %443 = getelementptr i8, i8* %441, i64 %442
  %444 = ptrtoint i8* %443 to i64
  %445 = icmp ult i8* %443, inttoptr (i64 32 to i8*)
  br i1 %445, label %527, label %446

446:                                              ; preds = %433
  %447 = and i64 %444, -32
  %448 = getelementptr i8, i8* %426, i64 %447
  %449 = getelementptr i8, i8* %436, i64 %447
  %450 = add i64 %447, -32
  %451 = lshr exact i64 %450, 5
  %452 = add nuw nsw i64 %451, 1
  %453 = and i64 %452, 3
  %454 = icmp ult i64 %450, 96
  br i1 %454, label %506, label %455

455:                                              ; preds = %446
  %456 = sub nsw i64 %452, %453
  br label %457

457:                                              ; preds = %457, %455
  %458 = phi i64 [ 0, %455 ], [ %503, %457 ]
  %459 = phi i64 [ %456, %455 ], [ %504, %457 ]
  %460 = getelementptr i8, i8* %426, i64 %458
  %461 = getelementptr i8, i8* %436, i64 %458
  %462 = bitcast i8* %461 to <16 x i8>*
  %463 = load <16 x i8>, <16 x i8>* %462, align 1
  %464 = getelementptr i8, i8* %461, i64 16
  %465 = bitcast i8* %464 to <16 x i8>*
  %466 = load <16 x i8>, <16 x i8>* %465, align 1
  %467 = bitcast i8* %460 to <16 x i8>*
  store <16 x i8> %463, <16 x i8>* %467, align 1
  %468 = getelementptr i8, i8* %460, i64 16
  %469 = bitcast i8* %468 to <16 x i8>*
  store <16 x i8> %466, <16 x i8>* %469, align 1
  %470 = or i64 %458, 32
  %471 = getelementptr i8, i8* %426, i64 %470
  %472 = getelementptr i8, i8* %436, i64 %470
  %473 = bitcast i8* %472 to <16 x i8>*
  %474 = load <16 x i8>, <16 x i8>* %473, align 1
  %475 = getelementptr i8, i8* %472, i64 16
  %476 = bitcast i8* %475 to <16 x i8>*
  %477 = load <16 x i8>, <16 x i8>* %476, align 1
  %478 = bitcast i8* %471 to <16 x i8>*
  store <16 x i8> %474, <16 x i8>* %478, align 1
  %479 = getelementptr i8, i8* %471, i64 16
  %480 = bitcast i8* %479 to <16 x i8>*
  store <16 x i8> %477, <16 x i8>* %480, align 1
  %481 = or i64 %458, 64
  %482 = getelementptr i8, i8* %426, i64 %481
  %483 = getelementptr i8, i8* %436, i64 %481
  %484 = bitcast i8* %483 to <16 x i8>*
  %485 = load <16 x i8>, <16 x i8>* %484, align 1
  %486 = getelementptr i8, i8* %483, i64 16
  %487 = bitcast i8* %486 to <16 x i8>*
  %488 = load <16 x i8>, <16 x i8>* %487, align 1
  %489 = bitcast i8* %482 to <16 x i8>*
  store <16 x i8> %485, <16 x i8>* %489, align 1
  %490 = getelementptr i8, i8* %482, i64 16
  %491 = bitcast i8* %490 to <16 x i8>*
  store <16 x i8> %488, <16 x i8>* %491, align 1
  %492 = or i64 %458, 96
  %493 = getelementptr i8, i8* %426, i64 %492
  %494 = getelementptr i8, i8* %436, i64 %492
  %495 = bitcast i8* %494 to <16 x i8>*
  %496 = load <16 x i8>, <16 x i8>* %495, align 1
  %497 = getelementptr i8, i8* %494, i64 16
  %498 = bitcast i8* %497 to <16 x i8>*
  %499 = load <16 x i8>, <16 x i8>* %498, align 1
  %500 = bitcast i8* %493 to <16 x i8>*
  store <16 x i8> %496, <16 x i8>* %500, align 1
  %501 = getelementptr i8, i8* %493, i64 16
  %502 = bitcast i8* %501 to <16 x i8>*
  store <16 x i8> %499, <16 x i8>* %502, align 1
  %503 = add i64 %458, 128
  %504 = add i64 %459, -4
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %506, label %457, !llvm.loop !155

506:                                              ; preds = %457, %446
  %507 = phi i64 [ 0, %446 ], [ %503, %457 ]
  %508 = icmp eq i64 %453, 0
  br i1 %508, label %525, label %509

509:                                              ; preds = %506, %509
  %510 = phi i64 [ %522, %509 ], [ %507, %506 ]
  %511 = phi i64 [ %523, %509 ], [ %453, %506 ]
  %512 = getelementptr i8, i8* %426, i64 %510
  %513 = getelementptr i8, i8* %436, i64 %510
  %514 = bitcast i8* %513 to <16 x i8>*
  %515 = load <16 x i8>, <16 x i8>* %514, align 1
  %516 = getelementptr i8, i8* %513, i64 16
  %517 = bitcast i8* %516 to <16 x i8>*
  %518 = load <16 x i8>, <16 x i8>* %517, align 1
  %519 = bitcast i8* %512 to <16 x i8>*
  store <16 x i8> %515, <16 x i8>* %519, align 1
  %520 = getelementptr i8, i8* %512, i64 16
  %521 = bitcast i8* %520 to <16 x i8>*
  store <16 x i8> %518, <16 x i8>* %521, align 1
  %522 = add i64 %510, 32
  %523 = add i64 %511, -1
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %525, label %509, !llvm.loop !156

525:                                              ; preds = %509, %506
  %526 = icmp eq i64 %447, %444
  br i1 %526, label %540, label %527

527:                                              ; preds = %525, %433
  %528 = phi i8* [ %426, %433 ], [ %448, %525 ]
  %529 = phi i8* [ %436, %433 ], [ %449, %525 ]
  br label %530

530:                                              ; preds = %527, %530
  %531 = phi i8* [ %535, %530 ], [ %528, %527 ]
  %532 = phi i8* [ %534, %530 ], [ %529, %527 ]
  %533 = load i8, i8* %532, align 1
  store i8 %533, i8* %531, align 1
  %534 = getelementptr inbounds i8, i8* %532, i64 1
  %535 = getelementptr inbounds i8, i8* %531, i64 1
  %536 = icmp ult i8* %534, %435
  br i1 %536, label %530, label %540, !llvm.loop !157

537:                                              ; preds = %288
  %538 = load i32, i32* %6, align 4
  %539 = or i32 %538, 16
  store i32 %539, i32* %6, align 4
  br label %719

540:                                              ; preds = %530, %525, %419, %275
  %541 = phi i8* [ null, %275 ], [ %293, %419 ], [ %293, %525 ], [ %293, %530 ]
  %542 = phi %struct.decNumber* [ null, %275 ], [ %294, %419 ], [ %294, %525 ], [ %294, %530 ]
  %543 = phi %struct.decNumber* [ %1, %275 ], [ %295, %419 ], [ %295, %525 ], [ %295, %530 ]
  br label %544

544:                                              ; preds = %574, %540
  %545 = phi i32 [ %226, %540 ], [ %565, %574 ]
  %546 = phi i32 [ 1, %540 ], [ %575, %574 ]
  %547 = phi i8 [ 0, %540 ], [ %569, %574 ]
  %548 = load i32, i32* %6, align 4
  %549 = and i32 %548, 8704
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %564, label %551

551:                                              ; preds = %544
  %552 = and i32 %548, 512
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %554, label %580

554:                                              ; preds = %551
  %555 = load i8, i8* %279, align 1
  %556 = icmp eq i8 %555, 0
  br i1 %556, label %557, label %564

557:                                              ; preds = %554
  %558 = load i32, i32* %278, align 4
  %559 = icmp eq i32 %558, 1
  br i1 %559, label %560, label %564

560:                                              ; preds = %557
  %561 = load i8, i8* %276, align 4
  %562 = and i8 %561, 112
  %563 = icmp eq i8 %562, 0
  br i1 %563, label %580, label %564

564:                                              ; preds = %544, %554, %557, %560
  %565 = shl i32 %545, 1
  %566 = icmp slt i32 %565, 0
  br i1 %566, label %567, label %568

567:                                              ; preds = %564
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %246, %struct.decNumber* %246, %struct.decNumber* %543, %struct.decContext* nonnull %7, i32* nonnull %6)
  br label %568

568:                                              ; preds = %567, %564
  %569 = phi i8 [ 1, %567 ], [ %547, %564 ]
  %570 = icmp eq i32 %546, 31
  br i1 %570, label %576, label %571

571:                                              ; preds = %568
  %572 = icmp eq i8 %569, 0
  br i1 %572, label %574, label %573

573:                                              ; preds = %571
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %246, %struct.decNumber* %246, %struct.decNumber* %246, %struct.decContext* nonnull %7, i32* nonnull %6)
  br label %574

574:                                              ; preds = %571, %573
  %575 = add nuw nsw i32 %546, 1
  br label %544

576:                                              ; preds = %568
  %577 = load i32, i32* %6, align 4
  %578 = and i32 %577, 8704
  %579 = icmp eq i32 %578, 0
  br i1 %579, label %707, label %580

580:                                              ; preds = %560, %551, %576
  %581 = load i8, i8* %276, align 4
  %582 = and i8 %581, 127
  %583 = or i8 %582, %97
  store i8 %583, i8* %276, align 4
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %246, %struct.decContext* %3, i32* nonnull %5, i32* nonnull %6)
  %584 = icmp eq %struct.decNumber* %246, %0
  br i1 %584, label %719, label %585

585:                                              ; preds = %580
  %586 = load i8, i8* %276, align 4
  %587 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %586, i8* %587, align 4
  %588 = load i32, i32* %277, align 4
  %589 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %588, i32* %589, align 4
  %590 = load i32, i32* %278, align 4
  %591 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %590, i32* %591, align 4
  %592 = load i8, i8* %279, align 1
  %593 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %592, i8* %593, align 1
  %594 = icmp sgt i32 %590, 1
  br i1 %594, label %595, label %719

595:                                              ; preds = %585
  %596 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %597 = icmp slt i32 %590, 50
  %598 = sext i32 %590 to i64
  br i1 %597, label %599, label %603

599:                                              ; preds = %595
  %600 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %598
  %601 = load i8, i8* %600, align 1
  %602 = zext i8 %601 to i64
  br label %603

603:                                              ; preds = %599, %595
  %604 = phi i64 [ %602, %599 ], [ %598, %595 ]
  %605 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 3, i64 %604
  %606 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 3, i64 1
  %607 = add nsw i64 %604, 9
  %608 = getelementptr i8, i8* %250, i64 %607
  %609 = getelementptr %struct.decNumber, %struct.decNumber* %246, i64 0, i32 3, i64 2
  %610 = icmp ugt i8* %608, %609
  %611 = select i1 %610, i8* %608, i8* %609
  %612 = sub i64 -10, %249
  %613 = getelementptr i8, i8* %611, i64 %612
  %614 = ptrtoint i8* %613 to i64
  %615 = icmp ult i8* %613, inttoptr (i64 32 to i8*)
  br i1 %615, label %697, label %616

616:                                              ; preds = %603
  %617 = and i64 %614, -32
  %618 = getelementptr i8, i8* %596, i64 %617
  %619 = getelementptr i8, i8* %606, i64 %617
  %620 = add i64 %617, -32
  %621 = lshr exact i64 %620, 5
  %622 = add nuw nsw i64 %621, 1
  %623 = and i64 %622, 3
  %624 = icmp ult i64 %620, 96
  br i1 %624, label %676, label %625

625:                                              ; preds = %616
  %626 = sub nsw i64 %622, %623
  br label %627

627:                                              ; preds = %627, %625
  %628 = phi i64 [ 0, %625 ], [ %673, %627 ]
  %629 = phi i64 [ %626, %625 ], [ %674, %627 ]
  %630 = getelementptr i8, i8* %596, i64 %628
  %631 = getelementptr i8, i8* %606, i64 %628
  %632 = bitcast i8* %631 to <16 x i8>*
  %633 = load <16 x i8>, <16 x i8>* %632, align 1
  %634 = getelementptr i8, i8* %631, i64 16
  %635 = bitcast i8* %634 to <16 x i8>*
  %636 = load <16 x i8>, <16 x i8>* %635, align 1
  %637 = bitcast i8* %630 to <16 x i8>*
  store <16 x i8> %633, <16 x i8>* %637, align 1
  %638 = getelementptr i8, i8* %630, i64 16
  %639 = bitcast i8* %638 to <16 x i8>*
  store <16 x i8> %636, <16 x i8>* %639, align 1
  %640 = or i64 %628, 32
  %641 = getelementptr i8, i8* %596, i64 %640
  %642 = getelementptr i8, i8* %606, i64 %640
  %643 = bitcast i8* %642 to <16 x i8>*
  %644 = load <16 x i8>, <16 x i8>* %643, align 1
  %645 = getelementptr i8, i8* %642, i64 16
  %646 = bitcast i8* %645 to <16 x i8>*
  %647 = load <16 x i8>, <16 x i8>* %646, align 1
  %648 = bitcast i8* %641 to <16 x i8>*
  store <16 x i8> %644, <16 x i8>* %648, align 1
  %649 = getelementptr i8, i8* %641, i64 16
  %650 = bitcast i8* %649 to <16 x i8>*
  store <16 x i8> %647, <16 x i8>* %650, align 1
  %651 = or i64 %628, 64
  %652 = getelementptr i8, i8* %596, i64 %651
  %653 = getelementptr i8, i8* %606, i64 %651
  %654 = bitcast i8* %653 to <16 x i8>*
  %655 = load <16 x i8>, <16 x i8>* %654, align 1
  %656 = getelementptr i8, i8* %653, i64 16
  %657 = bitcast i8* %656 to <16 x i8>*
  %658 = load <16 x i8>, <16 x i8>* %657, align 1
  %659 = bitcast i8* %652 to <16 x i8>*
  store <16 x i8> %655, <16 x i8>* %659, align 1
  %660 = getelementptr i8, i8* %652, i64 16
  %661 = bitcast i8* %660 to <16 x i8>*
  store <16 x i8> %658, <16 x i8>* %661, align 1
  %662 = or i64 %628, 96
  %663 = getelementptr i8, i8* %596, i64 %662
  %664 = getelementptr i8, i8* %606, i64 %662
  %665 = bitcast i8* %664 to <16 x i8>*
  %666 = load <16 x i8>, <16 x i8>* %665, align 1
  %667 = getelementptr i8, i8* %664, i64 16
  %668 = bitcast i8* %667 to <16 x i8>*
  %669 = load <16 x i8>, <16 x i8>* %668, align 1
  %670 = bitcast i8* %663 to <16 x i8>*
  store <16 x i8> %666, <16 x i8>* %670, align 1
  %671 = getelementptr i8, i8* %663, i64 16
  %672 = bitcast i8* %671 to <16 x i8>*
  store <16 x i8> %669, <16 x i8>* %672, align 1
  %673 = add i64 %628, 128
  %674 = add i64 %629, -4
  %675 = icmp eq i64 %674, 0
  br i1 %675, label %676, label %627, !llvm.loop !158

676:                                              ; preds = %627, %616
  %677 = phi i64 [ 0, %616 ], [ %673, %627 ]
  %678 = icmp eq i64 %623, 0
  br i1 %678, label %695, label %679

679:                                              ; preds = %676, %679
  %680 = phi i64 [ %692, %679 ], [ %677, %676 ]
  %681 = phi i64 [ %693, %679 ], [ %623, %676 ]
  %682 = getelementptr i8, i8* %596, i64 %680
  %683 = getelementptr i8, i8* %606, i64 %680
  %684 = bitcast i8* %683 to <16 x i8>*
  %685 = load <16 x i8>, <16 x i8>* %684, align 1
  %686 = getelementptr i8, i8* %683, i64 16
  %687 = bitcast i8* %686 to <16 x i8>*
  %688 = load <16 x i8>, <16 x i8>* %687, align 1
  %689 = bitcast i8* %682 to <16 x i8>*
  store <16 x i8> %685, <16 x i8>* %689, align 1
  %690 = getelementptr i8, i8* %682, i64 16
  %691 = bitcast i8* %690 to <16 x i8>*
  store <16 x i8> %688, <16 x i8>* %691, align 1
  %692 = add i64 %680, 32
  %693 = add i64 %681, -1
  %694 = icmp eq i64 %693, 0
  br i1 %694, label %695, label %679, !llvm.loop !159

695:                                              ; preds = %679, %676
  %696 = icmp eq i64 %617, %614
  br i1 %696, label %719, label %697

697:                                              ; preds = %695, %603
  %698 = phi i8* [ %596, %603 ], [ %618, %695 ]
  %699 = phi i8* [ %606, %603 ], [ %619, %695 ]
  br label %700

700:                                              ; preds = %697, %700
  %701 = phi i8* [ %705, %700 ], [ %698, %697 ]
  %702 = phi i8* [ %704, %700 ], [ %699, %697 ]
  %703 = load i8, i8* %702, align 1
  store i8 %703, i8* %701, align 1
  %704 = getelementptr inbounds i8, i8* %702, i64 1
  %705 = getelementptr inbounds i8, i8* %701, i64 1
  %706 = icmp ult i8* %704, %605
  br i1 %706, label %700, label %719, !llvm.loop !160

707:                                              ; preds = %576, %264, %274, %266
  %708 = phi i8* [ %541, %576 ], [ null, %264 ], [ null, %266 ], [ null, %274 ]
  %709 = phi %struct.decNumber* [ %542, %576 ], [ null, %264 ], [ null, %266 ], [ null, %274 ]
  %710 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 2
  %711 = load i8, i8* %710, align 4
  %712 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %711, i8* %712, align 4
  %713 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 1
  %714 = load i32, i32* %713, align 4
  %715 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %714, i32* %715, align 4
  %716 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 3, i64 0
  %717 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i64 0, i32 0
  %718 = load i32, i32* %717, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* %3, i8* %716, i32 %718, i32* nonnull %5, i32* nonnull %6) #8
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %5, i32* nonnull %6)
  br label %719

719:                                              ; preds = %700, %695, %585, %580, %537, %707
  %720 = phi i8* [ %708, %707 ], [ null, %537 ], [ %541, %580 ], [ %541, %585 ], [ %541, %695 ], [ %541, %700 ]
  %721 = phi %struct.decNumber* [ %709, %707 ], [ null, %537 ], [ %542, %580 ], [ %542, %585 ], [ %542, %695 ], [ %542, %700 ]
  %722 = icmp eq %struct.decNumber* %248, null
  br i1 %722, label %724, label %723

723:                                              ; preds = %719
  call void @uprv_free_69(i8* %247) #8
  br label %724

724:                                              ; preds = %719, %723
  %725 = icmp eq %struct.decNumber* %721, null
  br i1 %725, label %727, label %726

726:                                              ; preds = %724
  call void @uprv_free_69(i8* %720) #8
  br label %727

727:                                              ; preds = %32, %131, %203, %64, %78, %66, %80, %106, %113, %724, %726
  %728 = load i32, i32* %6, align 4
  %729 = icmp eq i32 %728, 0
  br i1 %729, label %748, label %730

730:                                              ; preds = %169, %71, %242, %727
  %731 = phi i32 [ %728, %727 ], [ %77, %71 ], [ %244, %242 ], [ %170, %169 ]
  %732 = and i32 %731, 221
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %745, label %734

734:                                              ; preds = %730
  %735 = and i32 %731, 1073741824
  %736 = icmp eq i32 %735, 0
  br i1 %736, label %739, label %737

737:                                              ; preds = %734
  %738 = and i32 %731, -1073741825
  br label %745

739:                                              ; preds = %189, %112, %50, %142, %223, %130, %734
  %740 = phi i32 [ %731, %734 ], [ 128, %130 ], [ 128, %223 ], [ 128, %142 ], [ 128, %50 ], [ 128, %112 ], [ 128, %189 ]
  %741 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %742 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %742, align 4
  %743 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %743, align 4
  %744 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %744, align 1
  store i8 32, i8* %741, align 4
  br label %745

745:                                              ; preds = %730, %737, %739
  %746 = phi i32 [ %738, %737 ], [ %740, %739 ], [ %731, %730 ]
  %747 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %746) #8
  br label %748

748:                                              ; preds = %727, %745
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZL14decShiftToMostPhii(i8*, i32, i32) unnamed_addr #0 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %106, label %5

5:                                                ; preds = %3
  %6 = add nsw i32 %2, %1
  %7 = icmp slt i32 %6, 2
  br i1 %7, label %8, label %15

8:                                                ; preds = %5
  %9 = load i8, i8* %0, align 1
  %10 = sext i32 %2 to i64
  %11 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = trunc i32 %12 to i8
  %14 = mul i8 %9, %13
  store i8 %14, i8* %0, align 1
  br label %106

15:                                               ; preds = %5
  %16 = icmp slt i32 %1, 50
  br i1 %16, label %17, label %22

17:                                               ; preds = %15
  %18 = sext i32 %1 to i64
  %19 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  br label %22

22:                                               ; preds = %15, %17
  %23 = phi i32 [ %21, %17 ], [ %1, %15 ]
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %0, i64 %24
  %26 = getelementptr inbounds i8, i8* %25, i64 -1
  %27 = icmp slt i32 %2, 50
  %28 = sext i32 %2 to i64
  br i1 %27, label %29, label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %28
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = zext i8 %31 to i32
  br label %34

34:                                               ; preds = %22, %29
  %35 = phi i64 [ %32, %29 ], [ %28, %22 ]
  %36 = phi i32 [ %33, %29 ], [ %2, %22 ]
  %37 = getelementptr inbounds i8, i8* %26, i64 %35
  %38 = add i32 %2, 1
  %39 = sub i32 %38, %36
  %40 = sub nsw i32 1, %39
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %51

42:                                               ; preds = %34
  %43 = icmp ult i8* %26, %0
  br i1 %43, label %95, label %44

44:                                               ; preds = %42, %44
  %45 = phi i8* [ %48, %44 ], [ %26, %42 ]
  %46 = phi i8* [ %49, %44 ], [ %37, %42 ]
  %47 = load i8, i8* %45, align 1
  store i8 %47, i8* %46, align 1
  %48 = getelementptr inbounds i8, i8* %45, i64 -1
  %49 = getelementptr inbounds i8, i8* %46, i64 -1
  %50 = icmp ult i8* %48, %0
  br i1 %50, label %95, label %44

51:                                               ; preds = %34
  %52 = icmp slt i32 %6, 50
  br i1 %52, label %53, label %58

53:                                               ; preds = %51
  %54 = sext i32 %6 to i64
  %55 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  br label %58

58:                                               ; preds = %51, %53
  %59 = phi i32 [ %57, %53 ], [ %6, %51 ]
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %0, i64 %60
  %62 = getelementptr inbounds i8, i8* %61, i64 -1
  %63 = icmp ult i8* %26, %0
  br i1 %63, label %95, label %64

64:                                               ; preds = %58
  %65 = sext i32 %40 to i64
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* @_ZL7multies, i64 0, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %65
  %69 = load i32, i32* %68, align 4
  %70 = sext i32 %39 to i64
  %71 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %70
  %72 = load i32, i32* %71, align 4
  br label %73

73:                                               ; preds = %64, %88
  %74 = phi i32 [ 0, %64 ], [ %89, %88 ]
  %75 = phi i8* [ %26, %64 ], [ %90, %88 ]
  %76 = phi i8* [ %37, %64 ], [ %91, %88 ]
  %77 = load i8, i8* %75, align 1
  %78 = zext i8 %77 to i32
  %79 = lshr i32 %78, %40
  %80 = mul i32 %79, %67
  %81 = lshr i32 %80, 17
  %82 = mul i32 %81, %69
  %83 = sub i32 %78, %82
  %84 = icmp ugt i8* %76, %62
  br i1 %84, label %88, label %85

85:                                               ; preds = %73
  %86 = add i32 %81, %74
  %87 = trunc i32 %86 to i8
  store i8 %87, i8* %76, align 1
  br label %88

88:                                               ; preds = %73, %85
  %89 = mul i32 %72, %83
  %90 = getelementptr inbounds i8, i8* %75, i64 -1
  %91 = getelementptr inbounds i8, i8* %76, i64 -1
  %92 = icmp ult i8* %90, %0
  br i1 %92, label %93, label %73

93:                                               ; preds = %88
  %94 = trunc i32 %89 to i8
  br label %95

95:                                               ; preds = %44, %93, %58, %42
  %96 = phi i8* [ %37, %42 ], [ %37, %58 ], [ %91, %93 ], [ %49, %44 ]
  %97 = phi i8 [ 0, %42 ], [ 0, %58 ], [ %94, %93 ], [ 0, %44 ]
  %98 = icmp ult i8* %96, %0
  br i1 %98, label %106, label %99

99:                                               ; preds = %95
  store i8 %97, i8* %96, align 1
  %100 = getelementptr inbounds i8, i8* %96, i64 -1
  %101 = icmp ult i8* %100, %0
  br i1 %101, label %106, label %102

102:                                              ; preds = %99, %102
  %103 = phi i8* [ %104, %102 ], [ %100, %99 ]
  store i8 0, i8* %103, align 1
  %104 = getelementptr inbounds i8, i8* %103, i64 -1
  %105 = icmp ult i8* %104, %0
  br i1 %105, label %106, label %102, !llvm.loop !161

106:                                              ; preds = %99, %102, %95, %3, %8
  %107 = phi i32 [ %6, %8 ], [ %1, %3 ], [ %6, %95 ], [ %6, %102 ], [ %6, %99 ]
  ret i32 %107
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc i32 @_ZL9decGetIntPK9decNumber(%struct.decNumber* nocapture readonly) unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, %3
  %7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 4
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i32 %3, 1
  %13 = and i8 %8, 112
  %14 = or i8 %11, %13
  %15 = icmp eq i8 %14, 0
  %16 = and i1 %12, %15
  br i1 %16, label %219, label %17

17:                                               ; preds = %1
  %18 = icmp sgt i32 %5, -1
  br i1 %18, label %49, label %19

19:                                               ; preds = %17
  %20 = icmp eq i8 %11, 0
  br i1 %20, label %21, label %219

21:                                               ; preds = %19
  %22 = sub nsw i32 0, %5
  br label %23

23:                                               ; preds = %21, %29
  %24 = phi i8* [ %10, %21 ], [ %27, %29 ]
  %25 = phi i32 [ %22, %21 ], [ %26, %29 ]
  %26 = add nsw i32 %25, -1
  %27 = getelementptr inbounds i8, i8* %24, i64 1
  %28 = icmp sgt i32 %26, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = load i8, i8* %27, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %23, label %219

32:                                               ; preds = %23
  %33 = icmp eq i32 %26, 0
  br i1 %33, label %51, label %34

34:                                               ; preds = %32
  %35 = load i8, i8* %27, align 1
  %36 = zext i8 %35 to i32
  %37 = lshr i32 %36, %26
  %38 = sext i32 %26 to i64
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* @_ZL7multies, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = mul i32 %37, %40
  %42 = lshr i32 %41, 17
  %43 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %38
  %44 = load i32, i32* %43, align 4
  %45 = mul i32 %42, %44
  %46 = icmp eq i32 %45, %36
  %47 = sub i32 2, %25
  %48 = getelementptr inbounds i8, i8* %24, i64 2
  br i1 %46, label %56, label %219

49:                                               ; preds = %17
  %50 = icmp eq i32 %5, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %32, %49
  %52 = phi i8* [ %10, %49 ], [ %27, %32 ]
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = getelementptr inbounds i8, i8* %52, i64 1
  br label %56

56:                                               ; preds = %34, %51, %49
  %57 = phi i32 [ %54, %51 ], [ 0, %49 ], [ 0, %34 ]
  %58 = phi i8* [ %55, %51 ], [ %10, %49 ], [ %48, %34 ]
  %59 = phi i32 [ 1, %51 ], [ %5, %49 ], [ %47, %34 ]
  %60 = icmp slt i32 %6, 11
  br i1 %60, label %61, label %212

61:                                               ; preds = %56
  %62 = icmp slt i32 %59, %6
  br i1 %62, label %63, label %188

63:                                               ; preds = %61
  %64 = sext i32 %59 to i64
  %65 = xor i32 %59, -1
  %66 = add i32 %6, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = sext i32 %6 to i64
  %70 = sub nsw i64 %69, %64
  %71 = icmp ult i64 %70, 8
  br i1 %71, label %168, label %72

72:                                               ; preds = %63
  %73 = and i64 %70, -8
  %74 = add nsw i64 %73, %64
  %75 = getelementptr i8, i8* %58, i64 %73
  %76 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %57, i32 0
  %77 = add nsw i64 %73, -8
  %78 = lshr exact i64 %77, 3
  %79 = add nuw nsw i64 %78, 1
  %80 = and i64 %79, 1
  %81 = icmp eq i64 %77, 0
  br i1 %81, label %131, label %82

82:                                               ; preds = %72
  %83 = sub nuw nsw i64 %79, %80
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi i64 [ 0, %82 ], [ %128, %84 ]
  %86 = phi <4 x i32> [ %76, %82 ], [ %126, %84 ]
  %87 = phi <4 x i32> [ zeroinitializer, %82 ], [ %127, %84 ]
  %88 = phi i64 [ %83, %82 ], [ %129, %84 ]
  %89 = add i64 %85, %64
  %90 = getelementptr i8, i8* %58, i64 %85
  %91 = bitcast i8* %90 to <4 x i8>*
  %92 = load <4 x i8>, <4 x i8>* %91, align 1
  %93 = getelementptr i8, i8* %90, i64 4
  %94 = bitcast i8* %93 to <4 x i8>*
  %95 = load <4 x i8>, <4 x i8>* %94, align 1
  %96 = zext <4 x i8> %92 to <4 x i32>
  %97 = zext <4 x i8> %95 to <4 x i32>
  %98 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %89
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4
  %101 = getelementptr inbounds i32, i32* %98, i64 4
  %102 = bitcast i32* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4
  %104 = mul <4 x i32> %100, %96
  %105 = mul <4 x i32> %103, %97
  %106 = add <4 x i32> %104, %86
  %107 = add <4 x i32> %105, %87
  %108 = or i64 %85, 8
  %109 = add i64 %108, %64
  %110 = getelementptr i8, i8* %58, i64 %108
  %111 = bitcast i8* %110 to <4 x i8>*
  %112 = load <4 x i8>, <4 x i8>* %111, align 1
  %113 = getelementptr i8, i8* %110, i64 4
  %114 = bitcast i8* %113 to <4 x i8>*
  %115 = load <4 x i8>, <4 x i8>* %114, align 1
  %116 = zext <4 x i8> %112 to <4 x i32>
  %117 = zext <4 x i8> %115 to <4 x i32>
  %118 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %109
  %119 = bitcast i32* %118 to <4 x i32>*
  %120 = load <4 x i32>, <4 x i32>* %119, align 4
  %121 = getelementptr inbounds i32, i32* %118, i64 4
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4
  %124 = mul <4 x i32> %120, %116
  %125 = mul <4 x i32> %123, %117
  %126 = add <4 x i32> %124, %106
  %127 = add <4 x i32> %125, %107
  %128 = add i64 %85, 16
  %129 = add i64 %88, -2
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %84, !llvm.loop !162

131:                                              ; preds = %84, %72
  %132 = phi <4 x i32> [ undef, %72 ], [ %126, %84 ]
  %133 = phi <4 x i32> [ undef, %72 ], [ %127, %84 ]
  %134 = phi i64 [ 0, %72 ], [ %128, %84 ]
  %135 = phi <4 x i32> [ %76, %72 ], [ %126, %84 ]
  %136 = phi <4 x i32> [ zeroinitializer, %72 ], [ %127, %84 ]
  %137 = icmp eq i64 %80, 0
  br i1 %137, label %158, label %138

138:                                              ; preds = %131
  %139 = add i64 %134, %64
  %140 = getelementptr i8, i8* %58, i64 %134
  %141 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %139
  %142 = getelementptr inbounds i32, i32* %141, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  %144 = load <4 x i32>, <4 x i32>* %143, align 4
  %145 = getelementptr i8, i8* %140, i64 4
  %146 = bitcast i8* %145 to <4 x i8>*
  %147 = load <4 x i8>, <4 x i8>* %146, align 1
  %148 = zext <4 x i8> %147 to <4 x i32>
  %149 = mul <4 x i32> %144, %148
  %150 = add <4 x i32> %149, %136
  %151 = bitcast i32* %141 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4
  %153 = bitcast i8* %140 to <4 x i8>*
  %154 = load <4 x i8>, <4 x i8>* %153, align 1
  %155 = zext <4 x i8> %154 to <4 x i32>
  %156 = mul <4 x i32> %152, %155
  %157 = add <4 x i32> %156, %135
  br label %158

158:                                              ; preds = %131, %138
  %159 = phi <4 x i32> [ %132, %131 ], [ %157, %138 ]
  %160 = phi <4 x i32> [ %133, %131 ], [ %150, %138 ]
  %161 = add <4 x i32> %160, %159
  %162 = shufflevector <4 x i32> %161, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %163 = add <4 x i32> %161, %162
  %164 = shufflevector <4 x i32> %163, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %165 = add <4 x i32> %163, %164
  %166 = extractelement <4 x i32> %165, i32 0
  %167 = icmp eq i64 %70, %73
  br i1 %167, label %185, label %168

168:                                              ; preds = %158, %63
  %169 = phi i64 [ %64, %63 ], [ %74, %158 ]
  %170 = phi i8* [ %58, %63 ], [ %75, %158 ]
  %171 = phi i32 [ %57, %63 ], [ %166, %158 ]
  br label %172

172:                                              ; preds = %168, %172
  %173 = phi i64 [ %182, %172 ], [ %169, %168 ]
  %174 = phi i8* [ %183, %172 ], [ %170, %168 ]
  %175 = phi i32 [ %181, %172 ], [ %171, %168 ]
  %176 = load i8, i8* %174, align 1
  %177 = zext i8 %176 to i32
  %178 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %173
  %179 = load i32, i32* %178, align 4
  %180 = mul i32 %179, %177
  %181 = add i32 %180, %175
  %182 = add nsw i64 %173, 1
  %183 = getelementptr inbounds i8, i8* %174, i64 1
  %184 = icmp eq i64 %182, %69
  br i1 %184, label %185, label %172, !llvm.loop !163

185:                                              ; preds = %172, %158
  %186 = phi i32 [ %166, %158 ], [ %181, %172 ]
  %187 = getelementptr i8, i8* %58, i64 %68
  br label %188

188:                                              ; preds = %185, %61
  %189 = phi i32 [ %57, %61 ], [ %186, %185 ]
  %190 = phi i8* [ %58, %61 ], [ %187, %185 ]
  %191 = phi i32 [ %59, %61 ], [ %6, %185 ]
  %192 = icmp eq i32 %6, 10
  br i1 %192, label %193, label %210

193:                                              ; preds = %188
  %194 = add nsw i32 %191, -1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %195
  %197 = load i32, i32* %196, align 4
  %198 = sdiv i32 %189, %197
  %199 = getelementptr inbounds i8, i8* %190, i64 -1
  %200 = load i8, i8* %199, align 1
  %201 = zext i8 %200 to i32
  %202 = icmp ne i32 %198, %201
  %203 = icmp sgt i32 %189, 1999999997
  %204 = and i1 %9, %203
  %205 = or i1 %204, %202
  br i1 %205, label %212, label %206

206:                                              ; preds = %193
  %207 = icmp sgt i8 %8, -1
  %208 = icmp sgt i32 %189, 999999999
  %209 = and i1 %207, %208
  br i1 %209, label %212, label %216

210:                                              ; preds = %188
  %211 = icmp sgt i32 %6, 10
  br i1 %211, label %212, label %216

212:                                              ; preds = %206, %193, %56, %210
  %213 = phi i32 [ %189, %210 ], [ %57, %56 ], [ %57, %193 ], [ %57, %206 ]
  %214 = and i32 %213, 1
  %215 = or i32 %214, -2147483646
  br label %219

216:                                              ; preds = %206, %210
  %217 = sub nsw i32 0, %189
  %218 = select i1 %9, i32 %217, i32 %189
  br label %219

219:                                              ; preds = %29, %19, %34, %212, %1, %216
  %220 = phi i32 [ %218, %216 ], [ 0, %1 ], [ %215, %212 ], [ -2147483648, %34 ], [ -2147483648, %19 ], [ -2147483648, %29 ]
  ret i32 %220
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberQuantize_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL13decQuantizeOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 1, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL13decQuantizeOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber*, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext* nocapture readonly, i8 zeroext, i32* nocapture) unnamed_addr #3 {
  %7 = bitcast %struct.decNumber* %0 to i8*
  %8 = ptrtoint %struct.decNumber* %1 to i64
  %9 = bitcast %struct.decNumber* %1 to i8*
  %10 = alloca i32, align 4
  %11 = alloca %struct.decContext, align 4
  %12 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #8
  store i32 0, i32* %10, align 4
  %15 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = sub i32 1, %13
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %20 = load i8, i8* %19, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %22 = load i8, i8* %21, align 4
  %23 = or i8 %22, %20
  %24 = and i8 %23, 112
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %178, label %26

26:                                               ; preds = %6
  %27 = and i8 %23, 48
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  tail call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* %5)
  br label %552

30:                                               ; preds = %26
  %31 = xor i8 %22, %20
  %32 = and i8 %31, 64
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %30
  %35 = load i32, i32* %5, align 4
  %36 = or i32 %35, 128
  store i32 %36, i32* %5, align 4
  br label %552

37:                                               ; preds = %30
  %38 = icmp eq %struct.decNumber* %0, %1
  br i1 %38, label %552, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %20, i8* %40, align 4
  %41 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %48 = load i8, i8* %47, align 1
  %49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %48, i8* %49, align 1
  %50 = load i32, i32* %44, align 4
  %51 = icmp sgt i32 %50, 1
  br i1 %51, label %52, label %552

52:                                               ; preds = %39
  %53 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %54 = icmp slt i32 %50, 50
  %55 = sext i32 %50 to i64
  br i1 %54, label %56, label %60

56:                                               ; preds = %52
  %57 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %55
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  br label %60

60:                                               ; preds = %56, %52
  %61 = phi i64 [ %59, %56 ], [ %55, %52 ]
  %62 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %61
  %63 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %64 = add nsw i64 %61, 9
  %65 = getelementptr i8, i8* %9, i64 %64
  %66 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %67 = icmp ugt i8* %65, %66
  %68 = select i1 %67, i8* %65, i8* %66
  %69 = sub i64 -10, %8
  %70 = getelementptr i8, i8* %68, i64 %69
  %71 = ptrtoint i8* %70 to i64
  %72 = icmp ult i8* %70, inttoptr (i64 32 to i8*)
  br i1 %72, label %168, label %73

73:                                               ; preds = %60
  %74 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %75 = add nsw i64 %61, 9
  %76 = getelementptr i8, i8* %9, i64 %75
  %77 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %78 = icmp ugt i8* %76, %77
  %79 = select i1 %78, i8* %76, i8* %77
  %80 = ptrtoint i8* %79 to i64
  %81 = sub i64 %80, %8
  %82 = getelementptr i8, i8* %7, i64 %81
  %83 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %84 = icmp ult i8* %74, %79
  %85 = icmp ult i8* %83, %82
  %86 = and i1 %84, %85
  br i1 %86, label %168, label %87

87:                                               ; preds = %73
  %88 = and i64 %71, -32
  %89 = getelementptr i8, i8* %53, i64 %88
  %90 = getelementptr i8, i8* %63, i64 %88
  %91 = add i64 %88, -32
  %92 = lshr exact i64 %91, 5
  %93 = add nuw nsw i64 %92, 1
  %94 = and i64 %93, 3
  %95 = icmp ult i64 %91, 96
  br i1 %95, label %147, label %96

96:                                               ; preds = %87
  %97 = sub nsw i64 %93, %94
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i64 [ 0, %96 ], [ %144, %98 ]
  %100 = phi i64 [ %97, %96 ], [ %145, %98 ]
  %101 = getelementptr i8, i8* %53, i64 %99
  %102 = getelementptr i8, i8* %63, i64 %99
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !164
  %105 = getelementptr i8, i8* %102, i64 16
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !164
  %108 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %108, align 1, !alias.scope !167, !noalias !164
  %109 = getelementptr i8, i8* %101, i64 16
  %110 = bitcast i8* %109 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %110, align 1, !alias.scope !167, !noalias !164
  %111 = or i64 %99, 32
  %112 = getelementptr i8, i8* %53, i64 %111
  %113 = getelementptr i8, i8* %63, i64 %111
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !164
  %116 = getelementptr i8, i8* %113, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1, !alias.scope !164
  %119 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %119, align 1, !alias.scope !167, !noalias !164
  %120 = getelementptr i8, i8* %112, i64 16
  %121 = bitcast i8* %120 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %121, align 1, !alias.scope !167, !noalias !164
  %122 = or i64 %99, 64
  %123 = getelementptr i8, i8* %53, i64 %122
  %124 = getelementptr i8, i8* %63, i64 %122
  %125 = bitcast i8* %124 to <16 x i8>*
  %126 = load <16 x i8>, <16 x i8>* %125, align 1, !alias.scope !164
  %127 = getelementptr i8, i8* %124, i64 16
  %128 = bitcast i8* %127 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1, !alias.scope !164
  %130 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %126, <16 x i8>* %130, align 1, !alias.scope !167, !noalias !164
  %131 = getelementptr i8, i8* %123, i64 16
  %132 = bitcast i8* %131 to <16 x i8>*
  store <16 x i8> %129, <16 x i8>* %132, align 1, !alias.scope !167, !noalias !164
  %133 = or i64 %99, 96
  %134 = getelementptr i8, i8* %53, i64 %133
  %135 = getelementptr i8, i8* %63, i64 %133
  %136 = bitcast i8* %135 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1, !alias.scope !164
  %138 = getelementptr i8, i8* %135, i64 16
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1, !alias.scope !164
  %141 = bitcast i8* %134 to <16 x i8>*
  store <16 x i8> %137, <16 x i8>* %141, align 1, !alias.scope !167, !noalias !164
  %142 = getelementptr i8, i8* %134, i64 16
  %143 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %140, <16 x i8>* %143, align 1, !alias.scope !167, !noalias !164
  %144 = add i64 %99, 128
  %145 = add i64 %100, -4
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %98, !llvm.loop !169

147:                                              ; preds = %98, %87
  %148 = phi i64 [ 0, %87 ], [ %144, %98 ]
  %149 = icmp eq i64 %94, 0
  br i1 %149, label %166, label %150

150:                                              ; preds = %147, %150
  %151 = phi i64 [ %163, %150 ], [ %148, %147 ]
  %152 = phi i64 [ %164, %150 ], [ %94, %147 ]
  %153 = getelementptr i8, i8* %53, i64 %151
  %154 = getelementptr i8, i8* %63, i64 %151
  %155 = bitcast i8* %154 to <16 x i8>*
  %156 = load <16 x i8>, <16 x i8>* %155, align 1, !alias.scope !164
  %157 = getelementptr i8, i8* %154, i64 16
  %158 = bitcast i8* %157 to <16 x i8>*
  %159 = load <16 x i8>, <16 x i8>* %158, align 1, !alias.scope !164
  %160 = bitcast i8* %153 to <16 x i8>*
  store <16 x i8> %156, <16 x i8>* %160, align 1, !alias.scope !167, !noalias !164
  %161 = getelementptr i8, i8* %153, i64 16
  %162 = bitcast i8* %161 to <16 x i8>*
  store <16 x i8> %159, <16 x i8>* %162, align 1, !alias.scope !167, !noalias !164
  %163 = add i64 %151, 32
  %164 = add i64 %152, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %150, !llvm.loop !170

166:                                              ; preds = %150, %147
  %167 = icmp eq i64 %88, %71
  br i1 %167, label %552, label %168

168:                                              ; preds = %166, %73, %60
  %169 = phi i8* [ %53, %73 ], [ %53, %60 ], [ %89, %166 ]
  %170 = phi i8* [ %63, %73 ], [ %63, %60 ], [ %90, %166 ]
  br label %171

171:                                              ; preds = %168, %171
  %172 = phi i8* [ %176, %171 ], [ %169, %168 ]
  %173 = phi i8* [ %175, %171 ], [ %170, %168 ]
  %174 = load i8, i8* %173, align 1
  store i8 %174, i8* %172, align 1
  %175 = getelementptr inbounds i8, i8* %173, i64 1
  %176 = getelementptr inbounds i8, i8* %172, i64 1
  %177 = icmp ult i8* %175, %62
  br i1 %177, label %171, label %552, !llvm.loop !171

178:                                              ; preds = %6
  %179 = icmp eq i8 %4, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %178
  %181 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %182 = load i32, i32* %181, align 4
  br label %185

183:                                              ; preds = %178
  %184 = tail call fastcc i32 @_ZL9decGetIntPK9decNumber(%struct.decNumber* %2)
  br label %185

185:                                              ; preds = %183, %180
  %186 = phi i32 [ %182, %180 ], [ %184, %183 ]
  switch i32 %186, label %187 [
    i32 -2147483645, label %193
    i32 -2147483646, label %193
    i32 -2147483648, label %193
  ]

187:                                              ; preds = %185
  %188 = icmp slt i32 %186, %18
  br i1 %188, label %193, label %189

189:                                              ; preds = %187
  %190 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = icmp sgt i32 %186, %191
  br i1 %192, label %193, label %196

193:                                              ; preds = %185, %185, %185, %189, %187
  %194 = load i32, i32* %5, align 4
  %195 = or i32 %194, 128
  store i32 %195, i32* %5, align 4
  br label %552

196:                                              ; preds = %189
  %197 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %198 = load i8, i8* %197, align 1
  %199 = icmp eq i8 %198, 0
  %200 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %348

202:                                              ; preds = %196
  %203 = icmp eq i32 %201, 1
  %204 = and i8 %20, 112
  %205 = icmp eq i8 %204, 0
  %206 = and i1 %205, %203
  br i1 %206, label %207, label %348

207:                                              ; preds = %202
  %208 = icmp eq %struct.decNumber* %0, %1
  br i1 %208, label %346, label %209

209:                                              ; preds = %207
  %210 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %20, i8* %210, align 4
  %211 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %212, i32* %213, align 4
  %214 = load i32, i32* %200, align 4
  %215 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %214, i32* %215, align 4
  %216 = load i8, i8* %197, align 1
  %217 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %216, i8* %217, align 1
  %218 = load i32, i32* %200, align 4
  %219 = icmp sgt i32 %218, 1
  br i1 %219, label %220, label %346

220:                                              ; preds = %209
  %221 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %222 = icmp slt i32 %218, 50
  %223 = sext i32 %218 to i64
  br i1 %222, label %224, label %228

224:                                              ; preds = %220
  %225 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %223
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i64
  br label %228

228:                                              ; preds = %224, %220
  %229 = phi i64 [ %227, %224 ], [ %223, %220 ]
  %230 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %229
  %231 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %232 = add nsw i64 %229, 9
  %233 = getelementptr i8, i8* %9, i64 %232
  %234 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %235 = icmp ugt i8* %233, %234
  %236 = select i1 %235, i8* %233, i8* %234
  %237 = sub i64 -10, %8
  %238 = getelementptr i8, i8* %236, i64 %237
  %239 = ptrtoint i8* %238 to i64
  %240 = icmp ult i8* %238, inttoptr (i64 32 to i8*)
  br i1 %240, label %336, label %241

241:                                              ; preds = %228
  %242 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %243 = add nsw i64 %229, 9
  %244 = getelementptr i8, i8* %9, i64 %243
  %245 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %246 = icmp ugt i8* %244, %245
  %247 = select i1 %246, i8* %244, i8* %245
  %248 = ptrtoint i8* %247 to i64
  %249 = sub i64 %248, %8
  %250 = getelementptr i8, i8* %7, i64 %249
  %251 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %252 = icmp ult i8* %242, %247
  %253 = icmp ult i8* %251, %250
  %254 = and i1 %252, %253
  br i1 %254, label %336, label %255

255:                                              ; preds = %241
  %256 = and i64 %239, -32
  %257 = getelementptr i8, i8* %221, i64 %256
  %258 = getelementptr i8, i8* %231, i64 %256
  %259 = add i64 %256, -32
  %260 = lshr exact i64 %259, 5
  %261 = add nuw nsw i64 %260, 1
  %262 = and i64 %261, 3
  %263 = icmp ult i64 %259, 96
  br i1 %263, label %315, label %264

264:                                              ; preds = %255
  %265 = sub nsw i64 %261, %262
  br label %266

266:                                              ; preds = %266, %264
  %267 = phi i64 [ 0, %264 ], [ %312, %266 ]
  %268 = phi i64 [ %265, %264 ], [ %313, %266 ]
  %269 = getelementptr i8, i8* %221, i64 %267
  %270 = getelementptr i8, i8* %231, i64 %267
  %271 = bitcast i8* %270 to <16 x i8>*
  %272 = load <16 x i8>, <16 x i8>* %271, align 1, !alias.scope !172
  %273 = getelementptr i8, i8* %270, i64 16
  %274 = bitcast i8* %273 to <16 x i8>*
  %275 = load <16 x i8>, <16 x i8>* %274, align 1, !alias.scope !172
  %276 = bitcast i8* %269 to <16 x i8>*
  store <16 x i8> %272, <16 x i8>* %276, align 1, !alias.scope !175, !noalias !172
  %277 = getelementptr i8, i8* %269, i64 16
  %278 = bitcast i8* %277 to <16 x i8>*
  store <16 x i8> %275, <16 x i8>* %278, align 1, !alias.scope !175, !noalias !172
  %279 = or i64 %267, 32
  %280 = getelementptr i8, i8* %221, i64 %279
  %281 = getelementptr i8, i8* %231, i64 %279
  %282 = bitcast i8* %281 to <16 x i8>*
  %283 = load <16 x i8>, <16 x i8>* %282, align 1, !alias.scope !172
  %284 = getelementptr i8, i8* %281, i64 16
  %285 = bitcast i8* %284 to <16 x i8>*
  %286 = load <16 x i8>, <16 x i8>* %285, align 1, !alias.scope !172
  %287 = bitcast i8* %280 to <16 x i8>*
  store <16 x i8> %283, <16 x i8>* %287, align 1, !alias.scope !175, !noalias !172
  %288 = getelementptr i8, i8* %280, i64 16
  %289 = bitcast i8* %288 to <16 x i8>*
  store <16 x i8> %286, <16 x i8>* %289, align 1, !alias.scope !175, !noalias !172
  %290 = or i64 %267, 64
  %291 = getelementptr i8, i8* %221, i64 %290
  %292 = getelementptr i8, i8* %231, i64 %290
  %293 = bitcast i8* %292 to <16 x i8>*
  %294 = load <16 x i8>, <16 x i8>* %293, align 1, !alias.scope !172
  %295 = getelementptr i8, i8* %292, i64 16
  %296 = bitcast i8* %295 to <16 x i8>*
  %297 = load <16 x i8>, <16 x i8>* %296, align 1, !alias.scope !172
  %298 = bitcast i8* %291 to <16 x i8>*
  store <16 x i8> %294, <16 x i8>* %298, align 1, !alias.scope !175, !noalias !172
  %299 = getelementptr i8, i8* %291, i64 16
  %300 = bitcast i8* %299 to <16 x i8>*
  store <16 x i8> %297, <16 x i8>* %300, align 1, !alias.scope !175, !noalias !172
  %301 = or i64 %267, 96
  %302 = getelementptr i8, i8* %221, i64 %301
  %303 = getelementptr i8, i8* %231, i64 %301
  %304 = bitcast i8* %303 to <16 x i8>*
  %305 = load <16 x i8>, <16 x i8>* %304, align 1, !alias.scope !172
  %306 = getelementptr i8, i8* %303, i64 16
  %307 = bitcast i8* %306 to <16 x i8>*
  %308 = load <16 x i8>, <16 x i8>* %307, align 1, !alias.scope !172
  %309 = bitcast i8* %302 to <16 x i8>*
  store <16 x i8> %305, <16 x i8>* %309, align 1, !alias.scope !175, !noalias !172
  %310 = getelementptr i8, i8* %302, i64 16
  %311 = bitcast i8* %310 to <16 x i8>*
  store <16 x i8> %308, <16 x i8>* %311, align 1, !alias.scope !175, !noalias !172
  %312 = add i64 %267, 128
  %313 = add i64 %268, -4
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %266, !llvm.loop !177

315:                                              ; preds = %266, %255
  %316 = phi i64 [ 0, %255 ], [ %312, %266 ]
  %317 = icmp eq i64 %262, 0
  br i1 %317, label %334, label %318

318:                                              ; preds = %315, %318
  %319 = phi i64 [ %331, %318 ], [ %316, %315 ]
  %320 = phi i64 [ %332, %318 ], [ %262, %315 ]
  %321 = getelementptr i8, i8* %221, i64 %319
  %322 = getelementptr i8, i8* %231, i64 %319
  %323 = bitcast i8* %322 to <16 x i8>*
  %324 = load <16 x i8>, <16 x i8>* %323, align 1, !alias.scope !172
  %325 = getelementptr i8, i8* %322, i64 16
  %326 = bitcast i8* %325 to <16 x i8>*
  %327 = load <16 x i8>, <16 x i8>* %326, align 1, !alias.scope !172
  %328 = bitcast i8* %321 to <16 x i8>*
  store <16 x i8> %324, <16 x i8>* %328, align 1, !alias.scope !175, !noalias !172
  %329 = getelementptr i8, i8* %321, i64 16
  %330 = bitcast i8* %329 to <16 x i8>*
  store <16 x i8> %327, <16 x i8>* %330, align 1, !alias.scope !175, !noalias !172
  %331 = add i64 %319, 32
  %332 = add i64 %320, -1
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %334, label %318, !llvm.loop !178

334:                                              ; preds = %318, %315
  %335 = icmp eq i64 %256, %239
  br i1 %335, label %346, label %336

336:                                              ; preds = %334, %241, %228
  %337 = phi i8* [ %221, %241 ], [ %221, %228 ], [ %257, %334 ]
  %338 = phi i8* [ %231, %241 ], [ %231, %228 ], [ %258, %334 ]
  br label %339

339:                                              ; preds = %336, %339
  %340 = phi i8* [ %344, %339 ], [ %337, %336 ]
  %341 = phi i8* [ %343, %339 ], [ %338, %336 ]
  %342 = load i8, i8* %341, align 1
  store i8 %342, i8* %340, align 1
  %343 = getelementptr inbounds i8, i8* %341, i64 1
  %344 = getelementptr inbounds i8, i8* %340, i64 1
  %345 = icmp ult i8* %343, %230
  br i1 %345, label %339, label %346, !llvm.loop !179

346:                                              ; preds = %339, %334, %207, %209
  %347 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %186, i32* %347, align 4
  br label %538

348:                                              ; preds = %196, %202
  %349 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %350 = load i32, i32* %349, align 4
  %351 = sub nsw i32 %186, %350
  %352 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %353 = sub nsw i32 %201, %351
  %354 = icmp sgt i32 %353, %13
  br i1 %354, label %355, label %358

355:                                              ; preds = %348
  %356 = load i32, i32* %5, align 4
  %357 = or i32 %356, 128
  store i32 %357, i32* %5, align 4
  br label %552

358:                                              ; preds = %348
  %359 = icmp sgt i32 %351, 0
  br i1 %359, label %360, label %386

360:                                              ; preds = %358
  %361 = bitcast %struct.decContext* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %361) #8
  %362 = bitcast %struct.decContext* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %361, i8* align 4 %362, i64 28, i1 false)
  %363 = getelementptr inbounds %struct.decContext, %struct.decContext* %11, i64 0, i32 0
  store i32 %353, i32* %363, align 4
  %364 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %20, i8* %364, align 4
  %365 = load i32, i32* %349, align 4
  %366 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %365, i32* %366, align 4
  %367 = load i32, i32* %352, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* nonnull %11, i8* %197, i32 %367, i32* nonnull %10, i32* %5) #8
  %368 = load i32, i32* %10, align 4
  call fastcc void @_ZL13decApplyRoundP9decNumberP10decContextiPj(%struct.decNumber* %0, %struct.decContext* nonnull %11, i32 %368, i32* %5)
  store i32 0, i32* %10, align 4
  %369 = load i32, i32* %366, align 4
  %370 = icmp sgt i32 %369, %186
  br i1 %370, label %371, label %380

371:                                              ; preds = %360
  %372 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, %13
  br i1 %374, label %382, label %375

375:                                              ; preds = %371
  %376 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %377 = tail call fastcc i32 @_ZL14decShiftToMostPhii(i8* %376, i32 %373, i32 1)
  store i32 %377, i32* %372, align 4
  %378 = load i32, i32* %366, align 4
  %379 = add nsw i32 %378, -1
  store i32 %379, i32* %366, align 4
  br label %380

380:                                              ; preds = %375, %360
  %381 = phi i32 [ %379, %375 ], [ %369, %360 ]
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %361) #8
  br label %538

382:                                              ; preds = %371
  %383 = load i32, i32* %5, align 4
  %384 = and i32 %383, -2209
  %385 = or i32 %384, 128
  store i32 %385, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %361) #8
  br label %552

386:                                              ; preds = %358
  %387 = icmp eq %struct.decNumber* %0, %1
  br i1 %387, label %524, label %388

388:                                              ; preds = %386
  %389 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %20, i8* %389, align 4
  %390 = load i32, i32* %349, align 4
  %391 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %390, i32* %391, align 4
  %392 = load i32, i32* %352, align 4
  %393 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %392, i32* %393, align 4
  %394 = load i8, i8* %197, align 1
  %395 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %394, i8* %395, align 1
  %396 = load i32, i32* %352, align 4
  %397 = icmp sgt i32 %396, 1
  br i1 %397, label %398, label %524

398:                                              ; preds = %388
  %399 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %400 = icmp slt i32 %396, 50
  %401 = sext i32 %396 to i64
  br i1 %400, label %402, label %406

402:                                              ; preds = %398
  %403 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %401
  %404 = load i8, i8* %403, align 1
  %405 = zext i8 %404 to i64
  br label %406

406:                                              ; preds = %402, %398
  %407 = phi i64 [ %405, %402 ], [ %401, %398 ]
  %408 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %407
  %409 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %410 = add nsw i64 %407, 9
  %411 = getelementptr i8, i8* %9, i64 %410
  %412 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %413 = icmp ugt i8* %411, %412
  %414 = select i1 %413, i8* %411, i8* %412
  %415 = sub i64 -10, %8
  %416 = getelementptr i8, i8* %414, i64 %415
  %417 = ptrtoint i8* %416 to i64
  %418 = icmp ult i8* %416, inttoptr (i64 32 to i8*)
  br i1 %418, label %514, label %419

419:                                              ; preds = %406
  %420 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %421 = add nsw i64 %407, 9
  %422 = getelementptr i8, i8* %9, i64 %421
  %423 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %424 = icmp ugt i8* %422, %423
  %425 = select i1 %424, i8* %422, i8* %423
  %426 = ptrtoint i8* %425 to i64
  %427 = sub i64 %426, %8
  %428 = getelementptr i8, i8* %7, i64 %427
  %429 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %430 = icmp ult i8* %420, %425
  %431 = icmp ult i8* %429, %428
  %432 = and i1 %430, %431
  br i1 %432, label %514, label %433

433:                                              ; preds = %419
  %434 = and i64 %417, -32
  %435 = getelementptr i8, i8* %399, i64 %434
  %436 = getelementptr i8, i8* %409, i64 %434
  %437 = add i64 %434, -32
  %438 = lshr exact i64 %437, 5
  %439 = add nuw nsw i64 %438, 1
  %440 = and i64 %439, 3
  %441 = icmp ult i64 %437, 96
  br i1 %441, label %493, label %442

442:                                              ; preds = %433
  %443 = sub nsw i64 %439, %440
  br label %444

444:                                              ; preds = %444, %442
  %445 = phi i64 [ 0, %442 ], [ %490, %444 ]
  %446 = phi i64 [ %443, %442 ], [ %491, %444 ]
  %447 = getelementptr i8, i8* %399, i64 %445
  %448 = getelementptr i8, i8* %409, i64 %445
  %449 = bitcast i8* %448 to <16 x i8>*
  %450 = load <16 x i8>, <16 x i8>* %449, align 1, !alias.scope !180
  %451 = getelementptr i8, i8* %448, i64 16
  %452 = bitcast i8* %451 to <16 x i8>*
  %453 = load <16 x i8>, <16 x i8>* %452, align 1, !alias.scope !180
  %454 = bitcast i8* %447 to <16 x i8>*
  store <16 x i8> %450, <16 x i8>* %454, align 1, !alias.scope !183, !noalias !180
  %455 = getelementptr i8, i8* %447, i64 16
  %456 = bitcast i8* %455 to <16 x i8>*
  store <16 x i8> %453, <16 x i8>* %456, align 1, !alias.scope !183, !noalias !180
  %457 = or i64 %445, 32
  %458 = getelementptr i8, i8* %399, i64 %457
  %459 = getelementptr i8, i8* %409, i64 %457
  %460 = bitcast i8* %459 to <16 x i8>*
  %461 = load <16 x i8>, <16 x i8>* %460, align 1, !alias.scope !180
  %462 = getelementptr i8, i8* %459, i64 16
  %463 = bitcast i8* %462 to <16 x i8>*
  %464 = load <16 x i8>, <16 x i8>* %463, align 1, !alias.scope !180
  %465 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %461, <16 x i8>* %465, align 1, !alias.scope !183, !noalias !180
  %466 = getelementptr i8, i8* %458, i64 16
  %467 = bitcast i8* %466 to <16 x i8>*
  store <16 x i8> %464, <16 x i8>* %467, align 1, !alias.scope !183, !noalias !180
  %468 = or i64 %445, 64
  %469 = getelementptr i8, i8* %399, i64 %468
  %470 = getelementptr i8, i8* %409, i64 %468
  %471 = bitcast i8* %470 to <16 x i8>*
  %472 = load <16 x i8>, <16 x i8>* %471, align 1, !alias.scope !180
  %473 = getelementptr i8, i8* %470, i64 16
  %474 = bitcast i8* %473 to <16 x i8>*
  %475 = load <16 x i8>, <16 x i8>* %474, align 1, !alias.scope !180
  %476 = bitcast i8* %469 to <16 x i8>*
  store <16 x i8> %472, <16 x i8>* %476, align 1, !alias.scope !183, !noalias !180
  %477 = getelementptr i8, i8* %469, i64 16
  %478 = bitcast i8* %477 to <16 x i8>*
  store <16 x i8> %475, <16 x i8>* %478, align 1, !alias.scope !183, !noalias !180
  %479 = or i64 %445, 96
  %480 = getelementptr i8, i8* %399, i64 %479
  %481 = getelementptr i8, i8* %409, i64 %479
  %482 = bitcast i8* %481 to <16 x i8>*
  %483 = load <16 x i8>, <16 x i8>* %482, align 1, !alias.scope !180
  %484 = getelementptr i8, i8* %481, i64 16
  %485 = bitcast i8* %484 to <16 x i8>*
  %486 = load <16 x i8>, <16 x i8>* %485, align 1, !alias.scope !180
  %487 = bitcast i8* %480 to <16 x i8>*
  store <16 x i8> %483, <16 x i8>* %487, align 1, !alias.scope !183, !noalias !180
  %488 = getelementptr i8, i8* %480, i64 16
  %489 = bitcast i8* %488 to <16 x i8>*
  store <16 x i8> %486, <16 x i8>* %489, align 1, !alias.scope !183, !noalias !180
  %490 = add i64 %445, 128
  %491 = add i64 %446, -4
  %492 = icmp eq i64 %491, 0
  br i1 %492, label %493, label %444, !llvm.loop !185

493:                                              ; preds = %444, %433
  %494 = phi i64 [ 0, %433 ], [ %490, %444 ]
  %495 = icmp eq i64 %440, 0
  br i1 %495, label %512, label %496

496:                                              ; preds = %493, %496
  %497 = phi i64 [ %509, %496 ], [ %494, %493 ]
  %498 = phi i64 [ %510, %496 ], [ %440, %493 ]
  %499 = getelementptr i8, i8* %399, i64 %497
  %500 = getelementptr i8, i8* %409, i64 %497
  %501 = bitcast i8* %500 to <16 x i8>*
  %502 = load <16 x i8>, <16 x i8>* %501, align 1, !alias.scope !180
  %503 = getelementptr i8, i8* %500, i64 16
  %504 = bitcast i8* %503 to <16 x i8>*
  %505 = load <16 x i8>, <16 x i8>* %504, align 1, !alias.scope !180
  %506 = bitcast i8* %499 to <16 x i8>*
  store <16 x i8> %502, <16 x i8>* %506, align 1, !alias.scope !183, !noalias !180
  %507 = getelementptr i8, i8* %499, i64 16
  %508 = bitcast i8* %507 to <16 x i8>*
  store <16 x i8> %505, <16 x i8>* %508, align 1, !alias.scope !183, !noalias !180
  %509 = add i64 %497, 32
  %510 = add i64 %498, -1
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %512, label %496, !llvm.loop !186

512:                                              ; preds = %496, %493
  %513 = icmp eq i64 %434, %417
  br i1 %513, label %524, label %514

514:                                              ; preds = %512, %419, %406
  %515 = phi i8* [ %399, %419 ], [ %399, %406 ], [ %435, %512 ]
  %516 = phi i8* [ %409, %419 ], [ %409, %406 ], [ %436, %512 ]
  br label %517

517:                                              ; preds = %514, %517
  %518 = phi i8* [ %522, %517 ], [ %515, %514 ]
  %519 = phi i8* [ %521, %517 ], [ %516, %514 ]
  %520 = load i8, i8* %519, align 1
  store i8 %520, i8* %518, align 1
  %521 = getelementptr inbounds i8, i8* %519, i64 1
  %522 = getelementptr inbounds i8, i8* %518, i64 1
  %523 = icmp ult i8* %521, %408
  br i1 %523, label %517, label %524, !llvm.loop !187

524:                                              ; preds = %517, %512, %386, %388
  %525 = icmp slt i32 %351, 0
  br i1 %525, label %529, label %526

526:                                              ; preds = %524
  %527 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %528 = load i32, i32* %527, align 4
  br label %538

529:                                              ; preds = %524
  %530 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %531 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %532 = load i32, i32* %531, align 4
  %533 = sub nsw i32 0, %351
  %534 = tail call fastcc i32 @_ZL14decShiftToMostPhii(i8* %530, i32 %532, i32 %533)
  store i32 %534, i32* %531, align 4
  %535 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %536 = load i32, i32* %535, align 4
  %537 = add nsw i32 %536, %351
  store i32 %537, i32* %535, align 4
  br label %538

538:                                              ; preds = %526, %529, %380, %346
  %539 = phi i32 [ %528, %526 ], [ %537, %529 ], [ %381, %380 ], [ %186, %346 ]
  %540 = load i32, i32* %190, align 4
  %541 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %542 = load i32, i32* %541, align 4
  %543 = add i32 %540, 1
  %544 = sub i32 %543, %542
  %545 = icmp sgt i32 %539, %544
  br i1 %545, label %546, label %549

546:                                              ; preds = %538
  %547 = load i32, i32* %5, align 4
  %548 = or i32 %547, 128
  store i32 %548, i32* %5, align 4
  br label %552

549:                                              ; preds = %538
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %10, i32* %5)
  %550 = load i32, i32* %5, align 4
  %551 = and i32 %550, -8193
  store i32 %551, i32* %5, align 4
  br label %552

552:                                              ; preds = %171, %166, %355, %382, %39, %37, %29, %34, %549, %546, %193
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberNormalize_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %4 = tail call %struct.decNumber* @uprv_decNumberReduce_69(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decContext* %2)
  ret %struct.decNumber* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberReduce_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 0, i32* %4, align 4
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 0, i32* %5, align 4
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store i32 -1431655766, i32* %6, align 4
  %10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 48
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* null, %struct.decContext* %2, i32* nonnull %4)
  br label %24

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %11, i8* %16, align 4
  %17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* %2, i8* %20, i32 %22, i32* nonnull %5, i32* nonnull %4) #8
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %2, i32* nonnull %5, i32* nonnull %4)
  %23 = call fastcc %struct.decNumber* @_ZL7decTrimP9decNumberP10decContexthhPi(%struct.decNumber* %0, %struct.decContext* %2, i8 zeroext 1, i8 zeroext 0, i32* nonnull %6)
  br label %24

24:                                               ; preds = %15, %14
  %25 = load i32, i32* %4, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %43, label %27

27:                                               ; preds = %24
  %28 = and i32 %25, 221
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = and i32 %25, 1073741824
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = and i32 %25, -1073741825
  br label %40

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %37 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %38, align 4
  %39 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %39, align 1
  store i8 32, i8* %36, align 4
  br label %40

40:                                               ; preds = %27, %33, %35
  %41 = phi i32 [ %34, %33 ], [ %25, %35 ], [ %25, %27 ]
  %42 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 %41) #8
  br label %43

43:                                               ; preds = %24, %40
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc %struct.decNumber* @_ZL7decTrimP9decNumberP10decContexthhPi(%struct.decNumber* returned, %struct.decContext* nocapture readonly, i8 zeroext, i8 zeroext, i32* nocapture) unnamed_addr #0 {
  store i32 0, i32* %4, align 4
  %6 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 112
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %97

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %12 = load i8, i8* %11, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %97

15:                                               ; preds = %10
  %16 = icmp eq i8 %12, 0
  %17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1
  %20 = and i1 %16, %19
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  br i1 %20, label %22, label %23

22:                                               ; preds = %15
  store i32 0, i32* %21, align 4
  br label %97

23:                                               ; preds = %15
  %24 = load i32, i32* %21, align 4
  %25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %26 = icmp sgt i32 %18, 1
  br i1 %26, label %27, label %97

27:                                               ; preds = %23
  %28 = icmp eq i8 %2, 0
  %29 = add nsw i32 %18, -1
  %30 = zext i8 %12 to i32
  %31 = lshr i32 %30, 1
  %32 = mul nuw nsw i32 %31, 26215
  %33 = lshr i32 %32, 17
  %34 = mul nsw i32 %33, -10
  %35 = sub nsw i32 0, %30
  %36 = icmp eq i32 %34, %35
  br i1 %36, label %37, label %61

37:                                               ; preds = %27, %52
  %38 = phi i32 [ %50, %52 ], [ 0, %27 ]
  %39 = phi i32 [ %48, %52 ], [ %24, %27 ]
  %40 = phi i8* [ %49, %52 ], [ %11, %27 ]
  %41 = icmp slt i32 %39, 1
  %42 = and i1 %28, %41
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = icmp eq i32 %39, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %43
  %46 = add nsw i32 %39, 1
  br label %47

47:                                               ; preds = %37, %45
  %48 = phi i32 [ %46, %45 ], [ %39, %37 ]
  %49 = getelementptr inbounds i8, i8* %40, i64 1
  %50 = add nuw nsw i32 %38, 1
  %51 = icmp slt i32 %50, %29
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = load i8, i8* %49, align 1
  %54 = zext i8 %53 to i32
  %55 = lshr i32 %54, 1
  %56 = mul nuw nsw i32 %55, 26215
  %57 = lshr i32 %56, 17
  %58 = mul nsw i32 %57, -10
  %59 = sub nsw i32 0, %54
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %37, label %61

61:                                               ; preds = %43, %52, %27
  %62 = phi i32 [ 0, %27 ], [ %38, %43 ], [ %50, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %97, label %64

64:                                               ; preds = %47, %61
  %65 = phi i32 [ %62, %61 ], [ %50, %47 ]
  %66 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 6
  %67 = load i8, i8* %66, align 4
  %68 = icmp eq i8 %67, 0
  %69 = icmp ne i8 %3, 0
  %70 = or i1 %69, %68
  br i1 %70, label %82, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = sub i32 1, %24
  %77 = add i32 %76, %73
  %78 = sub i32 %77, %75
  %79 = icmp slt i32 %78, 1
  %80 = icmp sgt i32 %65, %78
  %81 = select i1 %80, i32 %78, i32 %65
  br i1 %79, label %97, label %82

82:                                               ; preds = %71, %64
  %83 = phi i32 [ %65, %64 ], [ %81, %71 ]
  %84 = icmp slt i32 %18, 50
  br i1 %84, label %85, label %90

85:                                               ; preds = %82
  %86 = sext i32 %18 to i64
  %87 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  br label %90

90:                                               ; preds = %82, %85
  %91 = phi i32 [ %89, %85 ], [ %18, %82 ]
  %92 = tail call fastcc i32 @_ZL15decShiftToLeastPhii(i8* %11, i32 %91, i32 %83)
  %93 = load i32, i32* %21, align 4
  %94 = add nsw i32 %93, %83
  store i32 %94, i32* %21, align 4
  %95 = load i32, i32* %25, align 4
  %96 = sub nsw i32 %95, %83
  store i32 %96, i32* %25, align 4
  store i32 %83, i32* %4, align 4
  br label %97

97:                                               ; preds = %23, %71, %61, %5, %10, %90, %22
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberRescale_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL13decQuantizeOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 0, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberRemainder_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL11decDivideOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 64, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberRemainderNear_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL11decDivideOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 16, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberRotate_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = bitcast %struct.decNumber* %0 to i8*
  %6 = ptrtoint %struct.decNumber* %1 to i64
  %7 = bitcast %struct.decNumber* %1 to i8*
  %8 = alloca i32, align 4
  %9 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store i32 0, i32* %8, align 4
  %10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 48
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = zext i8 %16 to i32
  %18 = and i32 %17, 48
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %14, %4
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* nonnull %8)
  br label %317

21:                                               ; preds = %14
  %22 = and i32 %17, 64
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %24, %21
  store i32 128, i32* %8, align 4
  br label %328

29:                                               ; preds = %24
  %30 = tail call fastcc i32 @_ZL9decGetIntPK9decNumber(%struct.decNumber* %2)
  switch i32 %30, label %31 [
    i32 -2147483645, label %38
    i32 -2147483646, label %38
    i32 -2147483648, label %38
  ]

31:                                               ; preds = %29
  %32 = icmp slt i32 %30, 0
  %33 = sub nsw i32 0, %30
  %34 = select i1 %32, i32 %33, i32 %30
  %35 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %34, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29, %29, %29, %31
  store i32 128, i32* %8, align 4
  br label %328

39:                                               ; preds = %31
  %40 = icmp eq %struct.decNumber* %0, %1
  br i1 %40, label %180, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %11, i8* %42, align 4
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %50, i8* %51, align 1
  %52 = load i32, i32* %46, align 4
  %53 = icmp sgt i32 %52, 1
  br i1 %53, label %54, label %180

54:                                               ; preds = %41
  %55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %56 = icmp slt i32 %52, 50
  %57 = sext i32 %52 to i64
  br i1 %56, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %57
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i64
  br label %62

62:                                               ; preds = %58, %54
  %63 = phi i64 [ %61, %58 ], [ %57, %54 ]
  %64 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %63
  %65 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %66 = add nsw i64 %63, 9
  %67 = getelementptr i8, i8* %7, i64 %66
  %68 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %69 = icmp ugt i8* %67, %68
  %70 = select i1 %69, i8* %67, i8* %68
  %71 = sub i64 -10, %6
  %72 = getelementptr i8, i8* %70, i64 %71
  %73 = ptrtoint i8* %72 to i64
  %74 = icmp ult i8* %72, inttoptr (i64 32 to i8*)
  br i1 %74, label %170, label %75

75:                                               ; preds = %62
  %76 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %77 = add nsw i64 %63, 9
  %78 = getelementptr i8, i8* %7, i64 %77
  %79 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %80 = icmp ugt i8* %78, %79
  %81 = select i1 %80, i8* %78, i8* %79
  %82 = ptrtoint i8* %81 to i64
  %83 = sub i64 %82, %6
  %84 = getelementptr i8, i8* %5, i64 %83
  %85 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %86 = icmp ult i8* %76, %81
  %87 = icmp ult i8* %85, %84
  %88 = and i1 %86, %87
  br i1 %88, label %170, label %89

89:                                               ; preds = %75
  %90 = and i64 %73, -32
  %91 = getelementptr i8, i8* %55, i64 %90
  %92 = getelementptr i8, i8* %65, i64 %90
  %93 = add i64 %90, -32
  %94 = lshr exact i64 %93, 5
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 3
  %97 = icmp ult i64 %93, 96
  br i1 %97, label %149, label %98

98:                                               ; preds = %89
  %99 = sub nsw i64 %95, %96
  br label %100

100:                                              ; preds = %100, %98
  %101 = phi i64 [ 0, %98 ], [ %146, %100 ]
  %102 = phi i64 [ %99, %98 ], [ %147, %100 ]
  %103 = getelementptr i8, i8* %55, i64 %101
  %104 = getelementptr i8, i8* %65, i64 %101
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 1, !alias.scope !188
  %107 = getelementptr i8, i8* %104, i64 16
  %108 = bitcast i8* %107 to <16 x i8>*
  %109 = load <16 x i8>, <16 x i8>* %108, align 1, !alias.scope !188
  %110 = bitcast i8* %103 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %110, align 1, !alias.scope !191, !noalias !188
  %111 = getelementptr i8, i8* %103, i64 16
  %112 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> %109, <16 x i8>* %112, align 1, !alias.scope !191, !noalias !188
  %113 = or i64 %101, 32
  %114 = getelementptr i8, i8* %55, i64 %113
  %115 = getelementptr i8, i8* %65, i64 %113
  %116 = bitcast i8* %115 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 1, !alias.scope !188
  %118 = getelementptr i8, i8* %115, i64 16
  %119 = bitcast i8* %118 to <16 x i8>*
  %120 = load <16 x i8>, <16 x i8>* %119, align 1, !alias.scope !188
  %121 = bitcast i8* %114 to <16 x i8>*
  store <16 x i8> %117, <16 x i8>* %121, align 1, !alias.scope !191, !noalias !188
  %122 = getelementptr i8, i8* %114, i64 16
  %123 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %120, <16 x i8>* %123, align 1, !alias.scope !191, !noalias !188
  %124 = or i64 %101, 64
  %125 = getelementptr i8, i8* %55, i64 %124
  %126 = getelementptr i8, i8* %65, i64 %124
  %127 = bitcast i8* %126 to <16 x i8>*
  %128 = load <16 x i8>, <16 x i8>* %127, align 1, !alias.scope !188
  %129 = getelementptr i8, i8* %126, i64 16
  %130 = bitcast i8* %129 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !188
  %132 = bitcast i8* %125 to <16 x i8>*
  store <16 x i8> %128, <16 x i8>* %132, align 1, !alias.scope !191, !noalias !188
  %133 = getelementptr i8, i8* %125, i64 16
  %134 = bitcast i8* %133 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %134, align 1, !alias.scope !191, !noalias !188
  %135 = or i64 %101, 96
  %136 = getelementptr i8, i8* %55, i64 %135
  %137 = getelementptr i8, i8* %65, i64 %135
  %138 = bitcast i8* %137 to <16 x i8>*
  %139 = load <16 x i8>, <16 x i8>* %138, align 1, !alias.scope !188
  %140 = getelementptr i8, i8* %137, i64 16
  %141 = bitcast i8* %140 to <16 x i8>*
  %142 = load <16 x i8>, <16 x i8>* %141, align 1, !alias.scope !188
  %143 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %139, <16 x i8>* %143, align 1, !alias.scope !191, !noalias !188
  %144 = getelementptr i8, i8* %136, i64 16
  %145 = bitcast i8* %144 to <16 x i8>*
  store <16 x i8> %142, <16 x i8>* %145, align 1, !alias.scope !191, !noalias !188
  %146 = add i64 %101, 128
  %147 = add i64 %102, -4
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %100, !llvm.loop !193

149:                                              ; preds = %100, %89
  %150 = phi i64 [ 0, %89 ], [ %146, %100 ]
  %151 = icmp eq i64 %96, 0
  br i1 %151, label %168, label %152

152:                                              ; preds = %149, %152
  %153 = phi i64 [ %165, %152 ], [ %150, %149 ]
  %154 = phi i64 [ %166, %152 ], [ %96, %149 ]
  %155 = getelementptr i8, i8* %55, i64 %153
  %156 = getelementptr i8, i8* %65, i64 %153
  %157 = bitcast i8* %156 to <16 x i8>*
  %158 = load <16 x i8>, <16 x i8>* %157, align 1, !alias.scope !188
  %159 = getelementptr i8, i8* %156, i64 16
  %160 = bitcast i8* %159 to <16 x i8>*
  %161 = load <16 x i8>, <16 x i8>* %160, align 1, !alias.scope !188
  %162 = bitcast i8* %155 to <16 x i8>*
  store <16 x i8> %158, <16 x i8>* %162, align 1, !alias.scope !191, !noalias !188
  %163 = getelementptr i8, i8* %155, i64 16
  %164 = bitcast i8* %163 to <16 x i8>*
  store <16 x i8> %161, <16 x i8>* %164, align 1, !alias.scope !191, !noalias !188
  %165 = add i64 %153, 32
  %166 = add i64 %154, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %152, !llvm.loop !194

168:                                              ; preds = %152, %149
  %169 = icmp eq i64 %90, %73
  br i1 %169, label %180, label %170

170:                                              ; preds = %168, %75, %62
  %171 = phi i8* [ %55, %75 ], [ %55, %62 ], [ %91, %168 ]
  %172 = phi i8* [ %65, %75 ], [ %65, %62 ], [ %92, %168 ]
  br label %173

173:                                              ; preds = %170, %173
  %174 = phi i8* [ %178, %173 ], [ %171, %170 ]
  %175 = phi i8* [ %177, %173 ], [ %172, %170 ]
  %176 = load i8, i8* %175, align 1
  store i8 %176, i8* %174, align 1
  %177 = getelementptr inbounds i8, i8* %175, i64 1
  %178 = getelementptr inbounds i8, i8* %174, i64 1
  %179 = icmp ult i8* %177, %64
  br i1 %179, label %173, label %180, !llvm.loop !195

180:                                              ; preds = %173, %168, %39, %41
  br i1 %32, label %181, label %184

181:                                              ; preds = %180
  %182 = load i32, i32* %35, align 4
  %183 = add nsw i32 %182, %30
  br label %184

184:                                              ; preds = %181, %180
  %185 = phi i32 [ %183, %181 ], [ %30, %180 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %317, label %187

187:                                              ; preds = %184
  %188 = load i32, i32* %35, align 4
  %189 = icmp eq i32 %185, %188
  br i1 %189, label %317, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %192 = load i8, i8* %191, align 4
  %193 = and i8 %192, 64
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %195, label %317

195:                                              ; preds = %190
  %196 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %197 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = icmp slt i32 %198, 50
  br i1 %199, label %200, label %205

200:                                              ; preds = %195
  %201 = sext i32 %198 to i64
  %202 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  br label %205

205:                                              ; preds = %195, %200
  %206 = phi i32 [ %204, %200 ], [ %198, %195 ]
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %207
  %209 = icmp slt i32 %188, 50
  br i1 %209, label %210, label %215

210:                                              ; preds = %205
  %211 = sext i32 %188 to i64
  %212 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  br label %215

215:                                              ; preds = %205, %210
  %216 = phi i32 [ %214, %210 ], [ %188, %205 ]
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %217
  %219 = getelementptr inbounds i8, i8* %218, i64 -1
  %220 = icmp ugt i8* %208, %219
  br i1 %220, label %227, label %221

221:                                              ; preds = %215, %221
  %222 = phi i8* [ %223, %221 ], [ %208, %215 ]
  store i8 0, i8* %222, align 1
  %223 = getelementptr inbounds i8, i8* %222, i64 1
  %224 = icmp ugt i8* %223, %219
  br i1 %224, label %225, label %221

225:                                              ; preds = %221
  %226 = load i32, i32* %35, align 4
  br label %227

227:                                              ; preds = %225, %215
  %228 = phi i32 [ %226, %225 ], [ %188, %215 ]
  store i32 %228, i32* %197, align 4
  %229 = icmp slt i32 %228, 50
  br i1 %229, label %230, label %235

230:                                              ; preds = %227
  %231 = sext i32 %228 to i64
  %232 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i32
  br label %235

235:                                              ; preds = %227, %230
  %236 = phi i32 [ %234, %230 ], [ %228, %227 ]
  %237 = add i32 %228, 1
  %238 = sub i32 %237, %236
  %239 = load i32, i32* %35, align 4
  %240 = sub nsw i32 %239, %185
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %293, label %242

242:                                              ; preds = %235
  %243 = sub i32 1, %238
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %260, label %245

245:                                              ; preds = %242
  %246 = load i8, i8* %196, align 1
  %247 = zext i8 %246 to i32
  %248 = zext i32 %243 to i64
  %249 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %248
  %250 = load i32, i32* %249, align 4
  %251 = urem i32 %247, %250
  %252 = tail call fastcc i32 @_ZL15decShiftToLeastPhii(i8* %196, i32 %240, i32 %243)
  %253 = load i8, i8* %219, align 1
  %254 = zext i32 %238 to i64
  %255 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %254
  %256 = load i32, i32* %255, align 4
  %257 = mul i32 %256, %251
  %258 = trunc i32 %257 to i8
  %259 = add i8 %253, %258
  store i8 %259, i8* %219, align 1
  br label %260

260:                                              ; preds = %242, %245
  %261 = zext i32 %240 to i64
  %262 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %261
  %263 = icmp ult i8* %262, %219
  br i1 %263, label %264, label %272

264:                                              ; preds = %260, %264
  %265 = phi i8* [ %270, %264 ], [ %219, %260 ]
  %266 = phi i8* [ %269, %264 ], [ %262, %260 ]
  %267 = load i8, i8* %266, align 1
  %268 = load i8, i8* %265, align 1
  store i8 %268, i8* %266, align 1
  store i8 %267, i8* %265, align 1
  %269 = getelementptr inbounds i8, i8* %266, i64 1
  %270 = getelementptr inbounds i8, i8* %265, i64 -1
  %271 = icmp ult i8* %269, %270
  br i1 %271, label %264, label %272

272:                                              ; preds = %264, %260
  %273 = getelementptr inbounds i8, i8* %262, i64 -1
  %274 = icmp ult i8* %196, %273
  br i1 %274, label %275, label %283

275:                                              ; preds = %272, %275
  %276 = phi i8* [ %281, %275 ], [ %273, %272 ]
  %277 = phi i8* [ %280, %275 ], [ %196, %272 ]
  %278 = load i8, i8* %277, align 1
  %279 = load i8, i8* %276, align 1
  store i8 %279, i8* %277, align 1
  store i8 %278, i8* %276, align 1
  %280 = getelementptr inbounds i8, i8* %277, i64 1
  %281 = getelementptr inbounds i8, i8* %276, i64 -1
  %282 = icmp ult i8* %280, %281
  br i1 %282, label %275, label %283

283:                                              ; preds = %275, %272
  %284 = icmp ult i8* %196, %219
  br i1 %284, label %285, label %293

285:                                              ; preds = %283, %285
  %286 = phi i8* [ %291, %285 ], [ %219, %283 ]
  %287 = phi i8* [ %290, %285 ], [ %196, %283 ]
  %288 = load i8, i8* %287, align 1
  %289 = load i8, i8* %286, align 1
  store i8 %289, i8* %287, align 1
  store i8 %288, i8* %286, align 1
  %290 = getelementptr inbounds i8, i8* %287, i64 1
  %291 = getelementptr inbounds i8, i8* %286, i64 -1
  %292 = icmp ult i8* %290, %291
  br i1 %292, label %285, label %293

293:                                              ; preds = %285, %283, %235
  %294 = ptrtoint i8* %219 to i64
  %295 = ptrtoint i8* %196 to i64
  %296 = sub i64 %294, %295
  %297 = trunc i64 %296 to i32
  %298 = add i32 %297, 1
  %299 = icmp slt i32 %298, 1
  br i1 %299, label %315, label %300

300:                                              ; preds = %293
  %301 = shl i64 %296, 32
  %302 = ashr exact i64 %301, 32
  %303 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %302
  br label %304

304:                                              ; preds = %311, %300
  %305 = phi i32 [ %312, %311 ], [ %298, %300 ]
  %306 = phi i8* [ %313, %311 ], [ %303, %300 ]
  %307 = load i8, i8* %306, align 1
  %308 = icmp ne i8 %307, 0
  %309 = icmp eq i32 %305, 1
  %310 = or i1 %309, %308
  br i1 %310, label %315, label %311

311:                                              ; preds = %304
  %312 = add nsw i32 %305, -1
  %313 = getelementptr inbounds i8, i8* %306, i64 -1
  %314 = icmp ult i8* %313, %196
  br i1 %314, label %315, label %304

315:                                              ; preds = %304, %311, %293
  %316 = phi i32 [ %298, %293 ], [ %305, %304 ], [ %312, %311 ]
  store i32 %316, i32* %197, align 4
  br label %317

317:                                              ; preds = %190, %187, %184, %315, %20
  %318 = load i32, i32* %8, align 4
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %337, label %320

320:                                              ; preds = %317
  %321 = and i32 %318, 221
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %334, label %323

323:                                              ; preds = %320
  %324 = and i32 %318, 1073741824
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %328, label %326

326:                                              ; preds = %323
  %327 = and i32 %318, -1073741825
  br label %334

328:                                              ; preds = %38, %28, %323
  %329 = phi i32 [ %318, %323 ], [ 128, %28 ], [ 128, %38 ]
  %330 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %331 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %331, align 4
  %332 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %332, align 4
  %333 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %333, align 1
  store i8 32, i8* %330, align 4
  br label %334

334:                                              ; preds = %320, %326, %328
  %335 = phi i32 [ %327, %326 ], [ %329, %328 ], [ %318, %320 ]
  %336 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %335) #8
  br label %337

337:                                              ; preds = %317, %334
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZL15decShiftToLeastPhii(i8*, i32, i32) unnamed_addr #0 {
  %4 = ptrtoint i8* %0 to i64
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %210, label %6

6:                                                ; preds = %3
  %7 = icmp eq i32 %1, %2
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i8 0, i8* %0, align 1
  br label %210

9:                                                ; preds = %6
  %10 = icmp slt i32 %2, 50
  br i1 %10, label %11, label %16

11:                                               ; preds = %9
  %12 = sext i32 %2 to i64
  %13 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  br label %16

16:                                               ; preds = %9, %11
  %17 = phi i32 [ %15, %11 ], [ %2, %9 ]
  %18 = add nsw i32 %17, -1
  %19 = sub nsw i32 %2, %18
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %150

21:                                               ; preds = %16
  br i1 %10, label %22, label %27

22:                                               ; preds = %21
  %23 = sext i32 %2 to i64
  %24 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  br label %27

27:                                               ; preds = %21, %22
  %28 = phi i32 [ %26, %22 ], [ %2, %21 ]
  %29 = sext i32 %1 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp slt i32 %28, %1
  br i1 %31, label %32, label %145

32:                                               ; preds = %27
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds i8, i8* %0, i64 %33
  %35 = add nsw i64 %33, 1
  %36 = getelementptr i8, i8* %0, i64 %35
  %37 = icmp ugt i8* %36, %30
  %38 = select i1 %37, i8* %36, i8* %30
  %39 = sub i64 0, %4
  %40 = sub i64 %39, %33
  %41 = getelementptr i8, i8* %38, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = icmp ult i8* %41, inttoptr (i64 32 to i8*)
  br i1 %43, label %135, label %44

44:                                               ; preds = %32
  %45 = add nsw i64 %33, 1
  %46 = getelementptr i8, i8* %0, i64 %45
  %47 = icmp ugt i8* %46, %30
  %48 = select i1 %47, i8* %46, i8* %30
  %49 = sub nsw i64 0, %33
  %50 = getelementptr i8, i8* %48, i64 %49
  %51 = icmp ugt i8* %48, %0
  %52 = icmp ult i8* %34, %50
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %44
  %55 = and i64 %42, -32
  %56 = getelementptr i8, i8* %34, i64 %55
  %57 = getelementptr i8, i8* %0, i64 %55
  %58 = add i64 %55, -32
  %59 = lshr exact i64 %58, 5
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 96
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i8, i8* %34, i64 %66
  %69 = getelementptr i8, i8* %0, i64 %66
  %70 = bitcast i8* %68 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1, !alias.scope !196
  %72 = getelementptr i8, i8* %68, i64 16
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1, !alias.scope !196
  %75 = bitcast i8* %69 to <16 x i8>*
  store <16 x i8> %71, <16 x i8>* %75, align 1, !alias.scope !199, !noalias !196
  %76 = getelementptr i8, i8* %69, i64 16
  %77 = bitcast i8* %76 to <16 x i8>*
  store <16 x i8> %74, <16 x i8>* %77, align 1, !alias.scope !199, !noalias !196
  %78 = or i64 %66, 32
  %79 = getelementptr i8, i8* %34, i64 %78
  %80 = getelementptr i8, i8* %0, i64 %78
  %81 = bitcast i8* %79 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !196
  %83 = getelementptr i8, i8* %79, i64 16
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1, !alias.scope !196
  %86 = bitcast i8* %80 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %86, align 1, !alias.scope !199, !noalias !196
  %87 = getelementptr i8, i8* %80, i64 16
  %88 = bitcast i8* %87 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %88, align 1, !alias.scope !199, !noalias !196
  %89 = or i64 %66, 64
  %90 = getelementptr i8, i8* %34, i64 %89
  %91 = getelementptr i8, i8* %0, i64 %89
  %92 = bitcast i8* %90 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !196
  %94 = getelementptr i8, i8* %90, i64 16
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1, !alias.scope !196
  %97 = bitcast i8* %91 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %97, align 1, !alias.scope !199, !noalias !196
  %98 = getelementptr i8, i8* %91, i64 16
  %99 = bitcast i8* %98 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %99, align 1, !alias.scope !199, !noalias !196
  %100 = or i64 %66, 96
  %101 = getelementptr i8, i8* %34, i64 %100
  %102 = getelementptr i8, i8* %0, i64 %100
  %103 = bitcast i8* %101 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !196
  %105 = getelementptr i8, i8* %101, i64 16
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !196
  %108 = bitcast i8* %102 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %108, align 1, !alias.scope !199, !noalias !196
  %109 = getelementptr i8, i8* %102, i64 16
  %110 = bitcast i8* %109 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %110, align 1, !alias.scope !199, !noalias !196
  %111 = add i64 %66, 128
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !201

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i8, i8* %34, i64 %118
  %121 = getelementptr i8, i8* %0, i64 %118
  %122 = bitcast i8* %120 to <16 x i8>*
  %123 = load <16 x i8>, <16 x i8>* %122, align 1, !alias.scope !196
  %124 = getelementptr i8, i8* %120, i64 16
  %125 = bitcast i8* %124 to <16 x i8>*
  %126 = load <16 x i8>, <16 x i8>* %125, align 1, !alias.scope !196
  %127 = bitcast i8* %121 to <16 x i8>*
  store <16 x i8> %123, <16 x i8>* %127, align 1, !alias.scope !199, !noalias !196
  %128 = getelementptr i8, i8* %121, i64 16
  %129 = bitcast i8* %128 to <16 x i8>*
  store <16 x i8> %126, <16 x i8>* %129, align 1, !alias.scope !199, !noalias !196
  %130 = add i64 %118, 32
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !202

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %55, %42
  br i1 %134, label %145, label %135

135:                                              ; preds = %133, %44, %32
  %136 = phi i8* [ %34, %44 ], [ %34, %32 ], [ %56, %133 ]
  %137 = phi i8* [ %0, %44 ], [ %0, %32 ], [ %57, %133 ]
  br label %138

138:                                              ; preds = %135, %138
  %139 = phi i8* [ %143, %138 ], [ %136, %135 ]
  %140 = phi i8* [ %142, %138 ], [ %137, %135 ]
  %141 = load i8, i8* %139, align 1
  store i8 %141, i8* %140, align 1
  %142 = getelementptr inbounds i8, i8* %140, i64 1
  %143 = getelementptr inbounds i8, i8* %139, i64 1
  %144 = icmp ult i8* %143, %30
  br i1 %144, label %138, label %145, !llvm.loop !203

145:                                              ; preds = %138, %133, %27
  %146 = phi i8* [ %0, %27 ], [ %57, %133 ], [ %142, %138 ]
  %147 = ptrtoint i8* %146 to i64
  %148 = sub i64 %147, %4
  %149 = trunc i64 %148 to i32
  br label %210

150:                                              ; preds = %16
  %151 = icmp slt i32 %17, 51
  br i1 %151, label %152, label %157

152:                                              ; preds = %150
  %153 = sext i32 %18 to i64
  %154 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  br label %157

157:                                              ; preds = %150, %152
  %158 = phi i32 [ %156, %152 ], [ %18, %150 ]
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i8, i8* %0, i64 %159
  %161 = sub nsw i32 %1, %2
  %162 = load i8, i8* %160, align 1
  %163 = zext i8 %162 to i32
  %164 = lshr i32 %163, %19
  %165 = sext i32 %19 to i64
  %166 = getelementptr inbounds [5 x i32], [5 x i32]* @_ZL7multies, i64 0, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = mul i32 %164, %167
  %169 = lshr i32 %168, 17
  %170 = trunc i32 %169 to i8
  store i8 %170, i8* %0, align 1
  %171 = sub nsw i32 1, %19
  %172 = sub nsw i32 %161, %171
  %173 = icmp slt i32 %172, 1
  br i1 %173, label %203, label %174

174:                                              ; preds = %157
  %175 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %165
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %171 to i64
  %178 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %177
  %179 = load i32, i32* %178, align 4
  br label %180

180:                                              ; preds = %174, %198
  %181 = phi i32 [ %172, %174 ], [ %201, %198 ]
  %182 = phi i32 [ %169, %174 ], [ %190, %198 ]
  %183 = phi i8* [ %160, %174 ], [ %185, %198 ]
  %184 = phi i8* [ %0, %174 ], [ %199, %198 ]
  %185 = getelementptr inbounds i8, i8* %183, i64 1
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = lshr i32 %187, %19
  %189 = mul i32 %188, %167
  %190 = lshr i32 %189, 17
  %191 = mul i32 %190, %176
  %192 = sub i32 %187, %191
  %193 = mul i32 %192, %179
  %194 = add i32 %193, %182
  %195 = trunc i32 %194 to i8
  store i8 %195, i8* %184, align 1
  %196 = sub nsw i32 %181, %19
  %197 = icmp slt i32 %196, 1
  br i1 %197, label %203, label %198

198:                                              ; preds = %180
  %199 = getelementptr inbounds i8, i8* %184, i64 1
  %200 = trunc i32 %190 to i8
  store i8 %200, i8* %199, align 1
  %201 = sub nsw i32 %196, %171
  %202 = icmp slt i32 %201, 1
  br i1 %202, label %203, label %180

203:                                              ; preds = %198, %180, %157
  %204 = phi i8* [ %0, %157 ], [ %184, %180 ], [ %199, %198 ]
  %205 = ptrtoint i8* %204 to i64
  %206 = ptrtoint i8* %0 to i64
  %207 = sub i64 %205, %206
  %208 = trunc i64 %207 to i32
  %209 = add i32 %208, 1
  br label %210

210:                                              ; preds = %3, %203, %145, %8
  %211 = phi i32 [ 1, %8 ], [ %149, %145 ], [ %209, %203 ], [ %1, %3 ]
  ret i32 %211
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberSameQuantum_69(%struct.decNumber* returned, %struct.decNumber* nocapture readonly, %struct.decNumber* nocapture readonly) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 4
  %8 = or i8 %7, %5
  %9 = and i8 %8, 112
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %3
  %12 = and i8 %5, 48
  %13 = icmp eq i8 %12, 0
  %14 = and i8 %7, 48
  %15 = icmp eq i8 %14, 0
  %16 = or i1 %13, %15
  br i1 %16, label %17, label %30

17:                                               ; preds = %11
  %18 = and i8 %5, 64
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %30, label %20

20:                                               ; preds = %17
  %21 = lshr i8 %7, 6
  %22 = and i8 %21, 1
  br label %30

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %25, %27
  %29 = zext i1 %28 to i8
  br label %30

30:                                               ; preds = %23, %20, %11, %17
  %31 = phi i8 [ 0, %17 ], [ 1, %11 ], [ %22, %20 ], [ %29, %23 ]
  %32 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %34, align 4
  %35 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %31, i8* %35, align 1
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberScaleB_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = bitcast %struct.decNumber* %0 to i8*
  %6 = ptrtoint %struct.decNumber* %1 to i64
  %7 = bitcast %struct.decNumber* %1 to i8*
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  store i32 0, i32* %8, align 4
  %11 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 -1431655766, i32* %9, align 4
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %13 = load i8, i8* %12, align 4
  %14 = and i8 %13, 48
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %18 = load i8, i8* %17, align 4
  %19 = zext i8 %18 to i32
  %20 = and i32 %19, 48
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %16, %4
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* nonnull %8)
  br label %195

23:                                               ; preds = %16
  %24 = and i32 %19, 64
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %26, %23
  store i32 128, i32* %8, align 4
  br label %206

31:                                               ; preds = %26
  %32 = tail call fastcc i32 @_ZL9decGetIntPK9decNumber(%struct.decNumber* %2)
  switch i32 %32, label %33 [
    i32 -2147483645, label %44
    i32 -2147483646, label %44
    i32 -2147483648, label %44
  ]

33:                                               ; preds = %31
  %34 = icmp slt i32 %32, 0
  %35 = sub nsw i32 0, %32
  %36 = select i1 %34, i32 %35, i32 %32
  %37 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, %38
  %42 = shl nsw i32 %41, 1
  %43 = icmp sgt i32 %36, %42
  br i1 %43, label %44, label %45

44:                                               ; preds = %31, %31, %31, %33
  store i32 128, i32* %8, align 4
  br label %206

45:                                               ; preds = %33
  %46 = icmp eq %struct.decNumber* %0, %1
  br i1 %46, label %186, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %13, i8* %48, align 4
  %49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %56, i8* %57, align 1
  %58 = load i32, i32* %52, align 4
  %59 = icmp sgt i32 %58, 1
  br i1 %59, label %60, label %186

60:                                               ; preds = %47
  %61 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %62 = icmp slt i32 %58, 50
  %63 = sext i32 %58 to i64
  br i1 %62, label %64, label %68

64:                                               ; preds = %60
  %65 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %63
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  br label %68

68:                                               ; preds = %64, %60
  %69 = phi i64 [ %67, %64 ], [ %63, %60 ]
  %70 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %69
  %71 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %72 = add nsw i64 %69, 9
  %73 = getelementptr i8, i8* %7, i64 %72
  %74 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %75 = icmp ugt i8* %73, %74
  %76 = select i1 %75, i8* %73, i8* %74
  %77 = sub i64 -10, %6
  %78 = getelementptr i8, i8* %76, i64 %77
  %79 = ptrtoint i8* %78 to i64
  %80 = icmp ult i8* %78, inttoptr (i64 32 to i8*)
  br i1 %80, label %176, label %81

81:                                               ; preds = %68
  %82 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %83 = add nsw i64 %69, 9
  %84 = getelementptr i8, i8* %7, i64 %83
  %85 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %86 = icmp ugt i8* %84, %85
  %87 = select i1 %86, i8* %84, i8* %85
  %88 = ptrtoint i8* %87 to i64
  %89 = sub i64 %88, %6
  %90 = getelementptr i8, i8* %5, i64 %89
  %91 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %92 = icmp ult i8* %82, %87
  %93 = icmp ult i8* %91, %90
  %94 = and i1 %92, %93
  br i1 %94, label %176, label %95

95:                                               ; preds = %81
  %96 = and i64 %79, -32
  %97 = getelementptr i8, i8* %61, i64 %96
  %98 = getelementptr i8, i8* %71, i64 %96
  %99 = add i64 %96, -32
  %100 = lshr exact i64 %99, 5
  %101 = add nuw nsw i64 %100, 1
  %102 = and i64 %101, 3
  %103 = icmp ult i64 %99, 96
  br i1 %103, label %155, label %104

104:                                              ; preds = %95
  %105 = sub nsw i64 %101, %102
  br label %106

106:                                              ; preds = %106, %104
  %107 = phi i64 [ 0, %104 ], [ %152, %106 ]
  %108 = phi i64 [ %105, %104 ], [ %153, %106 ]
  %109 = getelementptr i8, i8* %61, i64 %107
  %110 = getelementptr i8, i8* %71, i64 %107
  %111 = bitcast i8* %110 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !204
  %113 = getelementptr i8, i8* %110, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !204
  %116 = bitcast i8* %109 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !207, !noalias !204
  %117 = getelementptr i8, i8* %109, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !207, !noalias !204
  %119 = or i64 %107, 32
  %120 = getelementptr i8, i8* %61, i64 %119
  %121 = getelementptr i8, i8* %71, i64 %119
  %122 = bitcast i8* %121 to <16 x i8>*
  %123 = load <16 x i8>, <16 x i8>* %122, align 1, !alias.scope !204
  %124 = getelementptr i8, i8* %121, i64 16
  %125 = bitcast i8* %124 to <16 x i8>*
  %126 = load <16 x i8>, <16 x i8>* %125, align 1, !alias.scope !204
  %127 = bitcast i8* %120 to <16 x i8>*
  store <16 x i8> %123, <16 x i8>* %127, align 1, !alias.scope !207, !noalias !204
  %128 = getelementptr i8, i8* %120, i64 16
  %129 = bitcast i8* %128 to <16 x i8>*
  store <16 x i8> %126, <16 x i8>* %129, align 1, !alias.scope !207, !noalias !204
  %130 = or i64 %107, 64
  %131 = getelementptr i8, i8* %61, i64 %130
  %132 = getelementptr i8, i8* %71, i64 %130
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !204
  %135 = getelementptr i8, i8* %132, i64 16
  %136 = bitcast i8* %135 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1, !alias.scope !204
  %138 = bitcast i8* %131 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %138, align 1, !alias.scope !207, !noalias !204
  %139 = getelementptr i8, i8* %131, i64 16
  %140 = bitcast i8* %139 to <16 x i8>*
  store <16 x i8> %137, <16 x i8>* %140, align 1, !alias.scope !207, !noalias !204
  %141 = or i64 %107, 96
  %142 = getelementptr i8, i8* %61, i64 %141
  %143 = getelementptr i8, i8* %71, i64 %141
  %144 = bitcast i8* %143 to <16 x i8>*
  %145 = load <16 x i8>, <16 x i8>* %144, align 1, !alias.scope !204
  %146 = getelementptr i8, i8* %143, i64 16
  %147 = bitcast i8* %146 to <16 x i8>*
  %148 = load <16 x i8>, <16 x i8>* %147, align 1, !alias.scope !204
  %149 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %145, <16 x i8>* %149, align 1, !alias.scope !207, !noalias !204
  %150 = getelementptr i8, i8* %142, i64 16
  %151 = bitcast i8* %150 to <16 x i8>*
  store <16 x i8> %148, <16 x i8>* %151, align 1, !alias.scope !207, !noalias !204
  %152 = add i64 %107, 128
  %153 = add i64 %108, -4
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %106, !llvm.loop !209

155:                                              ; preds = %106, %95
  %156 = phi i64 [ 0, %95 ], [ %152, %106 ]
  %157 = icmp eq i64 %102, 0
  br i1 %157, label %174, label %158

158:                                              ; preds = %155, %158
  %159 = phi i64 [ %171, %158 ], [ %156, %155 ]
  %160 = phi i64 [ %172, %158 ], [ %102, %155 ]
  %161 = getelementptr i8, i8* %61, i64 %159
  %162 = getelementptr i8, i8* %71, i64 %159
  %163 = bitcast i8* %162 to <16 x i8>*
  %164 = load <16 x i8>, <16 x i8>* %163, align 1, !alias.scope !204
  %165 = getelementptr i8, i8* %162, i64 16
  %166 = bitcast i8* %165 to <16 x i8>*
  %167 = load <16 x i8>, <16 x i8>* %166, align 1, !alias.scope !204
  %168 = bitcast i8* %161 to <16 x i8>*
  store <16 x i8> %164, <16 x i8>* %168, align 1, !alias.scope !207, !noalias !204
  %169 = getelementptr i8, i8* %161, i64 16
  %170 = bitcast i8* %169 to <16 x i8>*
  store <16 x i8> %167, <16 x i8>* %170, align 1, !alias.scope !207, !noalias !204
  %171 = add i64 %159, 32
  %172 = add i64 %160, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %158, !llvm.loop !210

174:                                              ; preds = %158, %155
  %175 = icmp eq i64 %96, %79
  br i1 %175, label %186, label %176

176:                                              ; preds = %174, %81, %68
  %177 = phi i8* [ %61, %81 ], [ %61, %68 ], [ %97, %174 ]
  %178 = phi i8* [ %71, %81 ], [ %71, %68 ], [ %98, %174 ]
  br label %179

179:                                              ; preds = %176, %179
  %180 = phi i8* [ %184, %179 ], [ %177, %176 ]
  %181 = phi i8* [ %183, %179 ], [ %178, %176 ]
  %182 = load i8, i8* %181, align 1
  store i8 %182, i8* %180, align 1
  %183 = getelementptr inbounds i8, i8* %181, i64 1
  %184 = getelementptr inbounds i8, i8* %180, i64 1
  %185 = icmp ult i8* %183, %70
  br i1 %185, label %179, label %186, !llvm.loop !211

186:                                              ; preds = %179, %174, %45, %47
  %187 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %188 = load i8, i8* %187, align 4
  %189 = and i8 %188, 64
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %195

191:                                              ; preds = %186
  %192 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = add nsw i32 %193, %32
  store i32 %194, i32* %192, align 4
  store i32 0, i32* %9, align 4
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %3, i32* nonnull %9, i32* nonnull %8)
  br label %195

195:                                              ; preds = %186, %191, %22
  %196 = load i32, i32* %8, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %215, label %198

198:                                              ; preds = %195
  %199 = and i32 %196, 221
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %212, label %201

201:                                              ; preds = %198
  %202 = and i32 %196, 1073741824
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %206, label %204

204:                                              ; preds = %201
  %205 = and i32 %196, -1073741825
  br label %212

206:                                              ; preds = %44, %30, %201
  %207 = phi i32 [ %196, %201 ], [ 128, %30 ], [ 128, %44 ]
  %208 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %209 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %209, align 4
  %210 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %210, align 4
  %211 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %211, align 1
  store i8 32, i8* %208, align 4
  br label %212

212:                                              ; preds = %198, %204, %206
  %213 = phi i32 [ %205, %204 ], [ %207, %206 ], [ %196, %198 ]
  %214 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %213) #8
  br label %215

215:                                              ; preds = %195, %212
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberShift_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = bitcast %struct.decNumber* %0 to i8*
  %6 = ptrtoint %struct.decNumber* %1 to i64
  %7 = bitcast %struct.decNumber* %1 to i8*
  %8 = alloca i32, align 4
  %9 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store i32 0, i32* %8, align 4
  %10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 48
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = zext i8 %16 to i32
  %18 = and i32 %17, 48
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %14, %4
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* nonnull %8)
  br label %282

21:                                               ; preds = %14
  %22 = and i32 %17, 64
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %24, %21
  store i32 128, i32* %8, align 4
  br label %293

29:                                               ; preds = %24
  %30 = tail call fastcc i32 @_ZL9decGetIntPK9decNumber(%struct.decNumber* %2)
  switch i32 %30, label %31 [
    i32 -2147483645, label %38
    i32 -2147483646, label %38
    i32 -2147483648, label %38
  ]

31:                                               ; preds = %29
  %32 = icmp slt i32 %30, 0
  %33 = sub nsw i32 0, %30
  %34 = select i1 %32, i32 %33, i32 %30
  %35 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %34, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29, %29, %29, %31
  store i32 128, i32* %8, align 4
  br label %293

39:                                               ; preds = %31
  %40 = icmp eq %struct.decNumber* %0, %1
  br i1 %40, label %180, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %11, i8* %42, align 4
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %50, i8* %51, align 1
  %52 = load i32, i32* %46, align 4
  %53 = icmp sgt i32 %52, 1
  br i1 %53, label %54, label %180

54:                                               ; preds = %41
  %55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %56 = icmp slt i32 %52, 50
  %57 = sext i32 %52 to i64
  br i1 %56, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %57
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i64
  br label %62

62:                                               ; preds = %58, %54
  %63 = phi i64 [ %61, %58 ], [ %57, %54 ]
  %64 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %63
  %65 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %66 = add nsw i64 %63, 9
  %67 = getelementptr i8, i8* %7, i64 %66
  %68 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %69 = icmp ugt i8* %67, %68
  %70 = select i1 %69, i8* %67, i8* %68
  %71 = sub i64 -10, %6
  %72 = getelementptr i8, i8* %70, i64 %71
  %73 = ptrtoint i8* %72 to i64
  %74 = icmp ult i8* %72, inttoptr (i64 32 to i8*)
  br i1 %74, label %170, label %75

75:                                               ; preds = %62
  %76 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %77 = add nsw i64 %63, 9
  %78 = getelementptr i8, i8* %7, i64 %77
  %79 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %80 = icmp ugt i8* %78, %79
  %81 = select i1 %80, i8* %78, i8* %79
  %82 = ptrtoint i8* %81 to i64
  %83 = sub i64 %82, %6
  %84 = getelementptr i8, i8* %5, i64 %83
  %85 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %86 = icmp ult i8* %76, %81
  %87 = icmp ult i8* %85, %84
  %88 = and i1 %86, %87
  br i1 %88, label %170, label %89

89:                                               ; preds = %75
  %90 = and i64 %73, -32
  %91 = getelementptr i8, i8* %55, i64 %90
  %92 = getelementptr i8, i8* %65, i64 %90
  %93 = add i64 %90, -32
  %94 = lshr exact i64 %93, 5
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 3
  %97 = icmp ult i64 %93, 96
  br i1 %97, label %149, label %98

98:                                               ; preds = %89
  %99 = sub nsw i64 %95, %96
  br label %100

100:                                              ; preds = %100, %98
  %101 = phi i64 [ 0, %98 ], [ %146, %100 ]
  %102 = phi i64 [ %99, %98 ], [ %147, %100 ]
  %103 = getelementptr i8, i8* %55, i64 %101
  %104 = getelementptr i8, i8* %65, i64 %101
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 1, !alias.scope !212
  %107 = getelementptr i8, i8* %104, i64 16
  %108 = bitcast i8* %107 to <16 x i8>*
  %109 = load <16 x i8>, <16 x i8>* %108, align 1, !alias.scope !212
  %110 = bitcast i8* %103 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %110, align 1, !alias.scope !215, !noalias !212
  %111 = getelementptr i8, i8* %103, i64 16
  %112 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> %109, <16 x i8>* %112, align 1, !alias.scope !215, !noalias !212
  %113 = or i64 %101, 32
  %114 = getelementptr i8, i8* %55, i64 %113
  %115 = getelementptr i8, i8* %65, i64 %113
  %116 = bitcast i8* %115 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 1, !alias.scope !212
  %118 = getelementptr i8, i8* %115, i64 16
  %119 = bitcast i8* %118 to <16 x i8>*
  %120 = load <16 x i8>, <16 x i8>* %119, align 1, !alias.scope !212
  %121 = bitcast i8* %114 to <16 x i8>*
  store <16 x i8> %117, <16 x i8>* %121, align 1, !alias.scope !215, !noalias !212
  %122 = getelementptr i8, i8* %114, i64 16
  %123 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %120, <16 x i8>* %123, align 1, !alias.scope !215, !noalias !212
  %124 = or i64 %101, 64
  %125 = getelementptr i8, i8* %55, i64 %124
  %126 = getelementptr i8, i8* %65, i64 %124
  %127 = bitcast i8* %126 to <16 x i8>*
  %128 = load <16 x i8>, <16 x i8>* %127, align 1, !alias.scope !212
  %129 = getelementptr i8, i8* %126, i64 16
  %130 = bitcast i8* %129 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !212
  %132 = bitcast i8* %125 to <16 x i8>*
  store <16 x i8> %128, <16 x i8>* %132, align 1, !alias.scope !215, !noalias !212
  %133 = getelementptr i8, i8* %125, i64 16
  %134 = bitcast i8* %133 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %134, align 1, !alias.scope !215, !noalias !212
  %135 = or i64 %101, 96
  %136 = getelementptr i8, i8* %55, i64 %135
  %137 = getelementptr i8, i8* %65, i64 %135
  %138 = bitcast i8* %137 to <16 x i8>*
  %139 = load <16 x i8>, <16 x i8>* %138, align 1, !alias.scope !212
  %140 = getelementptr i8, i8* %137, i64 16
  %141 = bitcast i8* %140 to <16 x i8>*
  %142 = load <16 x i8>, <16 x i8>* %141, align 1, !alias.scope !212
  %143 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %139, <16 x i8>* %143, align 1, !alias.scope !215, !noalias !212
  %144 = getelementptr i8, i8* %136, i64 16
  %145 = bitcast i8* %144 to <16 x i8>*
  store <16 x i8> %142, <16 x i8>* %145, align 1, !alias.scope !215, !noalias !212
  %146 = add i64 %101, 128
  %147 = add i64 %102, -4
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %100, !llvm.loop !217

149:                                              ; preds = %100, %89
  %150 = phi i64 [ 0, %89 ], [ %146, %100 ]
  %151 = icmp eq i64 %96, 0
  br i1 %151, label %168, label %152

152:                                              ; preds = %149, %152
  %153 = phi i64 [ %165, %152 ], [ %150, %149 ]
  %154 = phi i64 [ %166, %152 ], [ %96, %149 ]
  %155 = getelementptr i8, i8* %55, i64 %153
  %156 = getelementptr i8, i8* %65, i64 %153
  %157 = bitcast i8* %156 to <16 x i8>*
  %158 = load <16 x i8>, <16 x i8>* %157, align 1, !alias.scope !212
  %159 = getelementptr i8, i8* %156, i64 16
  %160 = bitcast i8* %159 to <16 x i8>*
  %161 = load <16 x i8>, <16 x i8>* %160, align 1, !alias.scope !212
  %162 = bitcast i8* %155 to <16 x i8>*
  store <16 x i8> %158, <16 x i8>* %162, align 1, !alias.scope !215, !noalias !212
  %163 = getelementptr i8, i8* %155, i64 16
  %164 = bitcast i8* %163 to <16 x i8>*
  store <16 x i8> %161, <16 x i8>* %164, align 1, !alias.scope !215, !noalias !212
  %165 = add i64 %153, 32
  %166 = add i64 %154, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %152, !llvm.loop !218

168:                                              ; preds = %152, %149
  %169 = icmp eq i64 %90, %73
  br i1 %169, label %180, label %170

170:                                              ; preds = %168, %75, %62
  %171 = phi i8* [ %55, %75 ], [ %55, %62 ], [ %91, %168 ]
  %172 = phi i8* [ %65, %75 ], [ %65, %62 ], [ %92, %168 ]
  br label %173

173:                                              ; preds = %170, %173
  %174 = phi i8* [ %178, %173 ], [ %171, %170 ]
  %175 = phi i8* [ %177, %173 ], [ %172, %170 ]
  %176 = load i8, i8* %175, align 1
  store i8 %176, i8* %174, align 1
  %177 = getelementptr inbounds i8, i8* %175, i64 1
  %178 = getelementptr inbounds i8, i8* %174, i64 1
  %179 = icmp ult i8* %177, %64
  br i1 %179, label %173, label %180, !llvm.loop !219

180:                                              ; preds = %173, %168, %39, %41
  %181 = icmp eq i32 %30, 0
  br i1 %181, label %282, label %182

182:                                              ; preds = %180
  %183 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %184 = load i8, i8* %183, align 4
  %185 = and i8 %184, 64
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %187, label %282

187:                                              ; preds = %182
  %188 = icmp sgt i32 %30, 0
  br i1 %188, label %189, label %264

189:                                              ; preds = %187
  %190 = load i32, i32* %35, align 4
  %191 = icmp eq i32 %30, %190
  br i1 %191, label %192, label %195

192:                                              ; preds = %189
  %193 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %193, align 1
  %194 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %194, align 4
  br label %282

195:                                              ; preds = %189
  %196 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = add nsw i32 %197, %30
  %199 = icmp sgt i32 %198, %190
  br i1 %199, label %200, label %254

200:                                              ; preds = %195
  %201 = sub nsw i32 %198, %190
  %202 = icmp sgt i32 %197, %201
  %203 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  br i1 %202, label %205, label %204

204:                                              ; preds = %200
  store i8 0, i8* %203, align 1
  br label %252

205:                                              ; preds = %200
  %206 = sub nsw i32 %197, %201
  %207 = icmp slt i32 %206, 50
  %208 = sext i32 %206 to i64
  br i1 %207, label %209, label %214

209:                                              ; preds = %205
  %210 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %208
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = zext i8 %211 to i32
  br label %214

214:                                              ; preds = %209, %205
  %215 = phi i64 [ %212, %209 ], [ %208, %205 ]
  %216 = phi i32 [ %213, %209 ], [ %206, %205 ]
  %217 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %215
  %218 = getelementptr inbounds i8, i8* %217, i64 -1
  %219 = add i32 %206, 1
  %220 = sub i32 %219, %216
  %221 = icmp eq i32 %220, 1
  br i1 %221, label %230, label %222

222:                                              ; preds = %214
  %223 = sext i32 %220 to i64
  %224 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = load i8, i8* %218, align 1
  %227 = zext i8 %226 to i32
  %228 = urem i32 %227, %225
  %229 = trunc i32 %228 to i8
  store i8 %229, i8* %218, align 1
  br label %230

230:                                              ; preds = %222, %214
  %231 = ptrtoint i8* %218 to i64
  %232 = ptrtoint i8* %203 to i64
  %233 = sub i64 %231, %232
  %234 = trunc i64 %233 to i32
  %235 = add i32 %234, 1
  %236 = icmp slt i32 %235, 1
  br i1 %236, label %252, label %237

237:                                              ; preds = %230
  %238 = shl i64 %233, 32
  %239 = ashr exact i64 %238, 32
  %240 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %239
  br label %241

241:                                              ; preds = %248, %237
  %242 = phi i32 [ %249, %248 ], [ %235, %237 ]
  %243 = phi i8* [ %250, %248 ], [ %240, %237 ]
  %244 = load i8, i8* %243, align 1
  %245 = icmp ne i8 %244, 0
  %246 = icmp eq i32 %242, 1
  %247 = or i1 %246, %245
  br i1 %247, label %252, label %248

248:                                              ; preds = %241
  %249 = add nsw i32 %242, -1
  %250 = getelementptr inbounds i8, i8* %243, i64 -1
  %251 = icmp ult i8* %250, %203
  br i1 %251, label %252, label %241

252:                                              ; preds = %241, %248, %204, %230
  %253 = phi i32 [ 1, %204 ], [ %235, %230 ], [ %249, %248 ], [ %242, %241 ]
  store i32 %253, i32* %196, align 4
  br label %254

254:                                              ; preds = %252, %195
  %255 = phi i32 [ %253, %252 ], [ %197, %195 ]
  %256 = icmp sgt i32 %255, 1
  br i1 %256, label %261, label %257

257:                                              ; preds = %254
  %258 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %259 = load i8, i8* %258, align 1
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %282, label %261

261:                                              ; preds = %257, %254
  %262 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %263 = tail call fastcc i32 @_ZL14decShiftToMostPhii(i8* %262, i32 %255, i32 %30)
  store i32 %263, i32* %196, align 4
  br label %282

264:                                              ; preds = %187
  %265 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  %267 = icmp sgt i32 %266, %33
  %268 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  br i1 %267, label %270, label %269

269:                                              ; preds = %264
  store i8 0, i8* %268, align 1
  store i32 1, i32* %265, align 4
  br label %282

270:                                              ; preds = %264
  %271 = icmp slt i32 %266, 50
  br i1 %271, label %272, label %277

272:                                              ; preds = %270
  %273 = sext i32 %266 to i64
  %274 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %273
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i32
  br label %277

277:                                              ; preds = %270, %272
  %278 = phi i32 [ %276, %272 ], [ %266, %270 ]
  %279 = tail call fastcc i32 @_ZL15decShiftToLeastPhii(i8* %268, i32 %278, i32 %33)
  %280 = load i32, i32* %265, align 4
  %281 = add nsw i32 %280, %30
  store i32 %281, i32* %265, align 4
  br label %282

282:                                              ; preds = %257, %182, %180, %269, %277, %192, %261, %20
  %283 = load i32, i32* %8, align 4
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %302, label %285

285:                                              ; preds = %282
  %286 = and i32 %283, 221
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %299, label %288

288:                                              ; preds = %285
  %289 = and i32 %283, 1073741824
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %288
  %292 = and i32 %283, -1073741825
  br label %299

293:                                              ; preds = %38, %28, %288
  %294 = phi i32 [ %283, %288 ], [ 128, %28 ], [ 128, %38 ]
  %295 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %296 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %296, align 4
  %297 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %297, align 4
  %298 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %298, align 1
  store i8 32, i8* %295, align 4
  br label %299

299:                                              ; preds = %285, %291, %293
  %300 = phi i32 [ %292, %291 ], [ %294, %293 ], [ %283, %285 ]
  %301 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %300) #8
  br label %302

302:                                              ; preds = %282, %299
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberSquareRoot_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %4 = bitcast %struct.decNumber* %0 to i8*
  %5 = ptrtoint %struct.decNumber* %1 to i64
  %6 = bitcast %struct.decNumber* %1 to i8*
  %7 = alloca %struct.decContext, align 4
  %8 = alloca %struct.decContext, align 4
  %9 = alloca %struct.decNumber, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [4 x %struct.decNumber], align 16
  %15 = alloca [5 x %struct.decNumber], align 16
  %16 = alloca [5 x %struct.decNumber], align 16
  %17 = alloca [2 x %struct.decNumber], align 16
  %18 = alloca i32, align 4
  %19 = bitcast %struct.decContext* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -86, i64 28, i1 false)
  %20 = bitcast %struct.decContext* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -86, i64 28, i1 false)
  %21 = bitcast %struct.decNumber* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 -86, i64 12, i1 false)
  %22 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #8
  store i32 0, i32* %10, align 4
  %23 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #8
  store i32 0, i32* %11, align 4
  %24 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #8
  store i32 0, i32* %12, align 4
  %25 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #8
  store i32 -1431655766, i32* %13, align 4
  %26 = bitcast [4 x %struct.decNumber]* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %26) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 -86, i64 48, i1 false)
  %27 = bitcast [5 x %struct.decNumber]* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %27) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 -86, i64 60, i1 false)
  %28 = bitcast [5 x %struct.decNumber]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %28) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 60, i1 false)
  %29 = getelementptr inbounds [4 x %struct.decNumber], [4 x %struct.decNumber]* %14, i64 0, i64 0
  %30 = getelementptr inbounds [5 x %struct.decNumber], [5 x %struct.decNumber]* %15, i64 0, i64 0
  %31 = getelementptr inbounds [5 x %struct.decNumber], [5 x %struct.decNumber]* %16, i64 0, i64 0
  %32 = bitcast [2 x %struct.decNumber]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -86, i64 24, i1 false)
  %33 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %17, i64 0, i64 0
  %34 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %35 = load i8, i8* %34, align 4
  %36 = zext i8 %35 to i32
  %37 = and i32 %36, 112
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %187, label %39

39:                                               ; preds = %3
  %40 = and i32 %36, 64
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %186, label %42

42:                                               ; preds = %39
  %43 = icmp slt i8 %35, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  store i32 128, i32* %11, align 4
  br label %1222

45:                                               ; preds = %42
  %46 = icmp eq %struct.decNumber* %0, %1
  br i1 %46, label %1211, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %35, i8* %48, align 4
  %49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %56, i8* %57, align 1
  %58 = load i32, i32* %52, align 4
  %59 = icmp sgt i32 %58, 1
  br i1 %59, label %60, label %1211

60:                                               ; preds = %47
  %61 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %62 = icmp slt i32 %58, 50
  %63 = sext i32 %58 to i64
  br i1 %62, label %64, label %68

64:                                               ; preds = %60
  %65 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %63
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  br label %68

68:                                               ; preds = %64, %60
  %69 = phi i64 [ %67, %64 ], [ %63, %60 ]
  %70 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %69
  %71 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %72 = add nsw i64 %69, 9
  %73 = getelementptr i8, i8* %6, i64 %72
  %74 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %75 = icmp ugt i8* %73, %74
  %76 = select i1 %75, i8* %73, i8* %74
  %77 = sub i64 -10, %5
  %78 = getelementptr i8, i8* %76, i64 %77
  %79 = ptrtoint i8* %78 to i64
  %80 = icmp ult i8* %78, inttoptr (i64 32 to i8*)
  br i1 %80, label %176, label %81

81:                                               ; preds = %68
  %82 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %83 = add nsw i64 %69, 9
  %84 = getelementptr i8, i8* %6, i64 %83
  %85 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %86 = icmp ugt i8* %84, %85
  %87 = select i1 %86, i8* %84, i8* %85
  %88 = ptrtoint i8* %87 to i64
  %89 = sub i64 %88, %5
  %90 = getelementptr i8, i8* %4, i64 %89
  %91 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %92 = icmp ult i8* %82, %87
  %93 = icmp ult i8* %91, %90
  %94 = and i1 %92, %93
  br i1 %94, label %176, label %95

95:                                               ; preds = %81
  %96 = and i64 %79, -32
  %97 = getelementptr i8, i8* %61, i64 %96
  %98 = getelementptr i8, i8* %71, i64 %96
  %99 = add i64 %96, -32
  %100 = lshr exact i64 %99, 5
  %101 = add nuw nsw i64 %100, 1
  %102 = and i64 %101, 3
  %103 = icmp ult i64 %99, 96
  br i1 %103, label %155, label %104

104:                                              ; preds = %95
  %105 = sub nsw i64 %101, %102
  br label %106

106:                                              ; preds = %106, %104
  %107 = phi i64 [ 0, %104 ], [ %152, %106 ]
  %108 = phi i64 [ %105, %104 ], [ %153, %106 ]
  %109 = getelementptr i8, i8* %61, i64 %107
  %110 = getelementptr i8, i8* %71, i64 %107
  %111 = bitcast i8* %110 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !220
  %113 = getelementptr i8, i8* %110, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !220
  %116 = bitcast i8* %109 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !223, !noalias !220
  %117 = getelementptr i8, i8* %109, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !223, !noalias !220
  %119 = or i64 %107, 32
  %120 = getelementptr i8, i8* %61, i64 %119
  %121 = getelementptr i8, i8* %71, i64 %119
  %122 = bitcast i8* %121 to <16 x i8>*
  %123 = load <16 x i8>, <16 x i8>* %122, align 1, !alias.scope !220
  %124 = getelementptr i8, i8* %121, i64 16
  %125 = bitcast i8* %124 to <16 x i8>*
  %126 = load <16 x i8>, <16 x i8>* %125, align 1, !alias.scope !220
  %127 = bitcast i8* %120 to <16 x i8>*
  store <16 x i8> %123, <16 x i8>* %127, align 1, !alias.scope !223, !noalias !220
  %128 = getelementptr i8, i8* %120, i64 16
  %129 = bitcast i8* %128 to <16 x i8>*
  store <16 x i8> %126, <16 x i8>* %129, align 1, !alias.scope !223, !noalias !220
  %130 = or i64 %107, 64
  %131 = getelementptr i8, i8* %61, i64 %130
  %132 = getelementptr i8, i8* %71, i64 %130
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !220
  %135 = getelementptr i8, i8* %132, i64 16
  %136 = bitcast i8* %135 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1, !alias.scope !220
  %138 = bitcast i8* %131 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %138, align 1, !alias.scope !223, !noalias !220
  %139 = getelementptr i8, i8* %131, i64 16
  %140 = bitcast i8* %139 to <16 x i8>*
  store <16 x i8> %137, <16 x i8>* %140, align 1, !alias.scope !223, !noalias !220
  %141 = or i64 %107, 96
  %142 = getelementptr i8, i8* %61, i64 %141
  %143 = getelementptr i8, i8* %71, i64 %141
  %144 = bitcast i8* %143 to <16 x i8>*
  %145 = load <16 x i8>, <16 x i8>* %144, align 1, !alias.scope !220
  %146 = getelementptr i8, i8* %143, i64 16
  %147 = bitcast i8* %146 to <16 x i8>*
  %148 = load <16 x i8>, <16 x i8>* %147, align 1, !alias.scope !220
  %149 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %145, <16 x i8>* %149, align 1, !alias.scope !223, !noalias !220
  %150 = getelementptr i8, i8* %142, i64 16
  %151 = bitcast i8* %150 to <16 x i8>*
  store <16 x i8> %148, <16 x i8>* %151, align 1, !alias.scope !223, !noalias !220
  %152 = add i64 %107, 128
  %153 = add i64 %108, -4
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %106, !llvm.loop !225

155:                                              ; preds = %106, %95
  %156 = phi i64 [ 0, %95 ], [ %152, %106 ]
  %157 = icmp eq i64 %102, 0
  br i1 %157, label %174, label %158

158:                                              ; preds = %155, %158
  %159 = phi i64 [ %171, %158 ], [ %156, %155 ]
  %160 = phi i64 [ %172, %158 ], [ %102, %155 ]
  %161 = getelementptr i8, i8* %61, i64 %159
  %162 = getelementptr i8, i8* %71, i64 %159
  %163 = bitcast i8* %162 to <16 x i8>*
  %164 = load <16 x i8>, <16 x i8>* %163, align 1, !alias.scope !220
  %165 = getelementptr i8, i8* %162, i64 16
  %166 = bitcast i8* %165 to <16 x i8>*
  %167 = load <16 x i8>, <16 x i8>* %166, align 1, !alias.scope !220
  %168 = bitcast i8* %161 to <16 x i8>*
  store <16 x i8> %164, <16 x i8>* %168, align 1, !alias.scope !223, !noalias !220
  %169 = getelementptr i8, i8* %161, i64 16
  %170 = bitcast i8* %169 to <16 x i8>*
  store <16 x i8> %167, <16 x i8>* %170, align 1, !alias.scope !223, !noalias !220
  %171 = add i64 %159, 32
  %172 = add i64 %160, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %158, !llvm.loop !226

174:                                              ; preds = %158, %155
  %175 = icmp eq i64 %96, %79
  br i1 %175, label %1211, label %176

176:                                              ; preds = %174, %81, %68
  %177 = phi i8* [ %61, %81 ], [ %61, %68 ], [ %97, %174 ]
  %178 = phi i8* [ %71, %81 ], [ %71, %68 ], [ %98, %174 ]
  br label %179

179:                                              ; preds = %176, %179
  %180 = phi i8* [ %184, %179 ], [ %177, %176 ]
  %181 = phi i8* [ %183, %179 ], [ %178, %176 ]
  %182 = load i8, i8* %181, align 1
  store i8 %182, i8* %180, align 1
  %183 = getelementptr inbounds i8, i8* %181, i64 1
  %184 = getelementptr inbounds i8, i8* %180, i64 1
  %185 = icmp ult i8* %183, %70
  br i1 %185, label %179, label %1211, !llvm.loop !227

186:                                              ; preds = %39
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* null, %struct.decContext* %2, i32* nonnull %11)
  br label %1211

187:                                              ; preds = %3
  %188 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = and i32 %189, -2
  %191 = sdiv i32 %190, 2
  %192 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %193 = load i8, i8* %192, align 1
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %195, label %339

195:                                              ; preds = %187
  %196 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, 1
  br i1 %198, label %199, label %339

199:                                              ; preds = %195
  %200 = icmp eq %struct.decNumber* %0, %1
  br i1 %200, label %337, label %201

201:                                              ; preds = %199
  %202 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %35, i8* %202, align 4
  %203 = load i32, i32* %188, align 4
  %204 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %203, i32* %204, align 4
  %205 = load i32, i32* %196, align 4
  %206 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %205, i32* %206, align 4
  %207 = load i8, i8* %192, align 1
  %208 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %207, i8* %208, align 1
  %209 = load i32, i32* %196, align 4
  %210 = icmp sgt i32 %209, 1
  br i1 %210, label %211, label %337

211:                                              ; preds = %201
  %212 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %213 = icmp slt i32 %209, 50
  %214 = sext i32 %209 to i64
  br i1 %213, label %215, label %219

215:                                              ; preds = %211
  %216 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %214
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  br label %219

219:                                              ; preds = %215, %211
  %220 = phi i64 [ %218, %215 ], [ %214, %211 ]
  %221 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %220
  %222 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %223 = add nsw i64 %220, 9
  %224 = getelementptr i8, i8* %6, i64 %223
  %225 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %226 = icmp ugt i8* %224, %225
  %227 = select i1 %226, i8* %224, i8* %225
  %228 = sub i64 -10, %5
  %229 = getelementptr i8, i8* %227, i64 %228
  %230 = ptrtoint i8* %229 to i64
  %231 = icmp ult i8* %229, inttoptr (i64 32 to i8*)
  br i1 %231, label %327, label %232

232:                                              ; preds = %219
  %233 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %234 = add nsw i64 %220, 9
  %235 = getelementptr i8, i8* %6, i64 %234
  %236 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %237 = icmp ugt i8* %235, %236
  %238 = select i1 %237, i8* %235, i8* %236
  %239 = ptrtoint i8* %238 to i64
  %240 = sub i64 %239, %5
  %241 = getelementptr i8, i8* %4, i64 %240
  %242 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %243 = icmp ult i8* %233, %238
  %244 = icmp ult i8* %242, %241
  %245 = and i1 %243, %244
  br i1 %245, label %327, label %246

246:                                              ; preds = %232
  %247 = and i64 %230, -32
  %248 = getelementptr i8, i8* %212, i64 %247
  %249 = getelementptr i8, i8* %222, i64 %247
  %250 = add i64 %247, -32
  %251 = lshr exact i64 %250, 5
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 3
  %254 = icmp ult i64 %250, 96
  br i1 %254, label %306, label %255

255:                                              ; preds = %246
  %256 = sub nsw i64 %252, %253
  br label %257

257:                                              ; preds = %257, %255
  %258 = phi i64 [ 0, %255 ], [ %303, %257 ]
  %259 = phi i64 [ %256, %255 ], [ %304, %257 ]
  %260 = getelementptr i8, i8* %212, i64 %258
  %261 = getelementptr i8, i8* %222, i64 %258
  %262 = bitcast i8* %261 to <16 x i8>*
  %263 = load <16 x i8>, <16 x i8>* %262, align 1, !alias.scope !228
  %264 = getelementptr i8, i8* %261, i64 16
  %265 = bitcast i8* %264 to <16 x i8>*
  %266 = load <16 x i8>, <16 x i8>* %265, align 1, !alias.scope !228
  %267 = bitcast i8* %260 to <16 x i8>*
  store <16 x i8> %263, <16 x i8>* %267, align 1, !alias.scope !231, !noalias !228
  %268 = getelementptr i8, i8* %260, i64 16
  %269 = bitcast i8* %268 to <16 x i8>*
  store <16 x i8> %266, <16 x i8>* %269, align 1, !alias.scope !231, !noalias !228
  %270 = or i64 %258, 32
  %271 = getelementptr i8, i8* %212, i64 %270
  %272 = getelementptr i8, i8* %222, i64 %270
  %273 = bitcast i8* %272 to <16 x i8>*
  %274 = load <16 x i8>, <16 x i8>* %273, align 1, !alias.scope !228
  %275 = getelementptr i8, i8* %272, i64 16
  %276 = bitcast i8* %275 to <16 x i8>*
  %277 = load <16 x i8>, <16 x i8>* %276, align 1, !alias.scope !228
  %278 = bitcast i8* %271 to <16 x i8>*
  store <16 x i8> %274, <16 x i8>* %278, align 1, !alias.scope !231, !noalias !228
  %279 = getelementptr i8, i8* %271, i64 16
  %280 = bitcast i8* %279 to <16 x i8>*
  store <16 x i8> %277, <16 x i8>* %280, align 1, !alias.scope !231, !noalias !228
  %281 = or i64 %258, 64
  %282 = getelementptr i8, i8* %212, i64 %281
  %283 = getelementptr i8, i8* %222, i64 %281
  %284 = bitcast i8* %283 to <16 x i8>*
  %285 = load <16 x i8>, <16 x i8>* %284, align 1, !alias.scope !228
  %286 = getelementptr i8, i8* %283, i64 16
  %287 = bitcast i8* %286 to <16 x i8>*
  %288 = load <16 x i8>, <16 x i8>* %287, align 1, !alias.scope !228
  %289 = bitcast i8* %282 to <16 x i8>*
  store <16 x i8> %285, <16 x i8>* %289, align 1, !alias.scope !231, !noalias !228
  %290 = getelementptr i8, i8* %282, i64 16
  %291 = bitcast i8* %290 to <16 x i8>*
  store <16 x i8> %288, <16 x i8>* %291, align 1, !alias.scope !231, !noalias !228
  %292 = or i64 %258, 96
  %293 = getelementptr i8, i8* %212, i64 %292
  %294 = getelementptr i8, i8* %222, i64 %292
  %295 = bitcast i8* %294 to <16 x i8>*
  %296 = load <16 x i8>, <16 x i8>* %295, align 1, !alias.scope !228
  %297 = getelementptr i8, i8* %294, i64 16
  %298 = bitcast i8* %297 to <16 x i8>*
  %299 = load <16 x i8>, <16 x i8>* %298, align 1, !alias.scope !228
  %300 = bitcast i8* %293 to <16 x i8>*
  store <16 x i8> %296, <16 x i8>* %300, align 1, !alias.scope !231, !noalias !228
  %301 = getelementptr i8, i8* %293, i64 16
  %302 = bitcast i8* %301 to <16 x i8>*
  store <16 x i8> %299, <16 x i8>* %302, align 1, !alias.scope !231, !noalias !228
  %303 = add i64 %258, 128
  %304 = add i64 %259, -4
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %257, !llvm.loop !233

306:                                              ; preds = %257, %246
  %307 = phi i64 [ 0, %246 ], [ %303, %257 ]
  %308 = icmp eq i64 %253, 0
  br i1 %308, label %325, label %309

309:                                              ; preds = %306, %309
  %310 = phi i64 [ %322, %309 ], [ %307, %306 ]
  %311 = phi i64 [ %323, %309 ], [ %253, %306 ]
  %312 = getelementptr i8, i8* %212, i64 %310
  %313 = getelementptr i8, i8* %222, i64 %310
  %314 = bitcast i8* %313 to <16 x i8>*
  %315 = load <16 x i8>, <16 x i8>* %314, align 1, !alias.scope !228
  %316 = getelementptr i8, i8* %313, i64 16
  %317 = bitcast i8* %316 to <16 x i8>*
  %318 = load <16 x i8>, <16 x i8>* %317, align 1, !alias.scope !228
  %319 = bitcast i8* %312 to <16 x i8>*
  store <16 x i8> %315, <16 x i8>* %319, align 1, !alias.scope !231, !noalias !228
  %320 = getelementptr i8, i8* %312, i64 16
  %321 = bitcast i8* %320 to <16 x i8>*
  store <16 x i8> %318, <16 x i8>* %321, align 1, !alias.scope !231, !noalias !228
  %322 = add i64 %310, 32
  %323 = add i64 %311, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %309, !llvm.loop !234

325:                                              ; preds = %309, %306
  %326 = icmp eq i64 %247, %230
  br i1 %326, label %337, label %327

327:                                              ; preds = %325, %232, %219
  %328 = phi i8* [ %212, %232 ], [ %212, %219 ], [ %248, %325 ]
  %329 = phi i8* [ %222, %232 ], [ %222, %219 ], [ %249, %325 ]
  br label %330

330:                                              ; preds = %327, %330
  %331 = phi i8* [ %335, %330 ], [ %328, %327 ]
  %332 = phi i8* [ %334, %330 ], [ %329, %327 ]
  %333 = load i8, i8* %332, align 1
  store i8 %333, i8* %331, align 1
  %334 = getelementptr inbounds i8, i8* %332, i64 1
  %335 = getelementptr inbounds i8, i8* %331, i64 1
  %336 = icmp ult i8* %334, %221
  br i1 %336, label %330, label %337, !llvm.loop !235

337:                                              ; preds = %330, %325, %199, %201
  %338 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %191, i32* %338, align 4
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %0, %struct.decContext* %2, i32* nonnull %10, i32* nonnull %11)
  br label %1211

339:                                              ; preds = %195, %187
  %340 = icmp slt i8 %35, 0
  br i1 %340, label %341, label %342

341:                                              ; preds = %339
  store i32 128, i32* %11, align 4
  br label %1222

342:                                              ; preds = %339
  %343 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  %345 = add nsw i32 %344, 1
  %346 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %347 = load i32, i32* %346, align 4
  %348 = icmp slt i32 %345, %347
  %349 = select i1 %348, i32 %347, i32 %345
  %350 = icmp sgt i32 %349, 7
  %351 = select i1 %350, i32 %349, i32 7
  %352 = add nuw nsw i32 %351, 2
  %353 = icmp slt i32 %347, 50
  br i1 %353, label %354, label %359

354:                                              ; preds = %342
  %355 = sext i32 %347 to i64
  %356 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %355
  %357 = load i8, i8* %356, align 1
  %358 = zext i8 %357 to i32
  br label %359

359:                                              ; preds = %342, %354
  %360 = phi i32 [ %358, %354 ], [ %347, %342 ]
  %361 = add nuw i32 %360, 11
  %362 = icmp sgt i32 %361, 48
  br i1 %362, label %363, label %369

363:                                              ; preds = %359
  %364 = sext i32 %361 to i64
  %365 = tail call noalias i8* @uprv_malloc_69(i64 %364) #9
  %366 = bitcast i8* %365 to %struct.decNumber*
  %367 = icmp eq i8* %365, null
  br i1 %367, label %368, label %369

368:                                              ; preds = %363
  store i32 16, i32* %11, align 4
  br label %1222

369:                                              ; preds = %363, %359
  %370 = phi i8* [ null, %359 ], [ %365, %363 ]
  %371 = phi %struct.decNumber* [ null, %359 ], [ %366, %363 ]
  %372 = phi %struct.decNumber* [ %29, %359 ], [ %366, %363 ]
  %373 = icmp ult i32 %352, 50
  br i1 %373, label %374, label %379

374:                                              ; preds = %369
  %375 = zext i32 %352 to i64
  %376 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %375
  %377 = load i8, i8* %376, align 1
  %378 = zext i8 %377 to i32
  br label %379

379:                                              ; preds = %369, %374
  %380 = phi i32 [ %378, %374 ], [ %352, %369 ]
  %381 = add i32 %380, 11
  %382 = icmp sgt i32 %381, 60
  br i1 %382, label %383, label %393

383:                                              ; preds = %379
  %384 = sext i32 %381 to i64
  %385 = tail call noalias i8* @uprv_malloc_69(i64 %384) #9
  %386 = bitcast i8* %385 to %struct.decNumber*
  %387 = tail call noalias i8* @uprv_malloc_69(i64 %384) #9
  %388 = bitcast i8* %387 to %struct.decNumber*
  %389 = icmp eq i8* %385, null
  %390 = icmp eq i8* %387, null
  %391 = or i1 %389, %390
  br i1 %391, label %392, label %393

392:                                              ; preds = %383
  store i32 16, i32* %11, align 4
  br label %1198

393:                                              ; preds = %383, %379
  %394 = phi i8* [ null, %379 ], [ %385, %383 ]
  %395 = phi %struct.decNumber* [ null, %379 ], [ %386, %383 ]
  %396 = phi i8* [ null, %379 ], [ %387, %383 ]
  %397 = phi %struct.decNumber* [ null, %379 ], [ %388, %383 ]
  %398 = phi %struct.decNumber* [ %30, %379 ], [ %386, %383 ]
  %399 = phi %struct.decNumber* [ %31, %379 ], [ %388, %383 ]
  %400 = ptrtoint %struct.decNumber* %398 to i64
  %401 = bitcast %struct.decNumber* %398 to i8*
  %402 = icmp eq %struct.decNumber* %372, %1
  br i1 %402, label %525, label %403

403:                                              ; preds = %393
  %404 = load i8, i8* %34, align 4
  %405 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %372, i64 0, i32 2
  store i8 %404, i8* %405, align 4
  %406 = load i32, i32* %188, align 4
  %407 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %372, i64 0, i32 1
  store i32 %406, i32* %407, align 4
  %408 = load i32, i32* %346, align 4
  %409 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %372, i64 0, i32 0
  store i32 %408, i32* %409, align 4
  %410 = load i8, i8* %192, align 1
  %411 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %372, i64 0, i32 3, i64 0
  store i8 %410, i8* %411, align 1
  %412 = icmp sgt i32 %408, 1
  br i1 %412, label %413, label %525

413:                                              ; preds = %403
  %414 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %372, i64 0, i32 3, i64 1
  %415 = icmp slt i32 %408, 50
  %416 = sext i32 %408 to i64
  br i1 %415, label %417, label %421

417:                                              ; preds = %413
  %418 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %416
  %419 = load i8, i8* %418, align 1
  %420 = zext i8 %419 to i64
  br label %421

421:                                              ; preds = %417, %413
  %422 = phi i64 [ %420, %417 ], [ %416, %413 ]
  %423 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %422
  %424 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %425 = add nsw i64 %422, 9
  %426 = getelementptr i8, i8* %6, i64 %425
  %427 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %428 = icmp ugt i8* %426, %427
  %429 = select i1 %428, i8* %426, i8* %427
  %430 = sub i64 -10, %5
  %431 = getelementptr i8, i8* %429, i64 %430
  %432 = ptrtoint i8* %431 to i64
  %433 = icmp ult i8* %431, inttoptr (i64 32 to i8*)
  br i1 %433, label %515, label %434

434:                                              ; preds = %421
  %435 = and i64 %432, -32
  %436 = getelementptr i8, i8* %414, i64 %435
  %437 = getelementptr i8, i8* %424, i64 %435
  %438 = add i64 %435, -32
  %439 = lshr exact i64 %438, 5
  %440 = add nuw nsw i64 %439, 1
  %441 = and i64 %440, 3
  %442 = icmp ult i64 %438, 96
  br i1 %442, label %494, label %443

443:                                              ; preds = %434
  %444 = sub nsw i64 %440, %441
  br label %445

445:                                              ; preds = %445, %443
  %446 = phi i64 [ 0, %443 ], [ %491, %445 ]
  %447 = phi i64 [ %444, %443 ], [ %492, %445 ]
  %448 = getelementptr i8, i8* %414, i64 %446
  %449 = getelementptr i8, i8* %424, i64 %446
  %450 = bitcast i8* %449 to <16 x i8>*
  %451 = load <16 x i8>, <16 x i8>* %450, align 1
  %452 = getelementptr i8, i8* %449, i64 16
  %453 = bitcast i8* %452 to <16 x i8>*
  %454 = load <16 x i8>, <16 x i8>* %453, align 1
  %455 = bitcast i8* %448 to <16 x i8>*
  store <16 x i8> %451, <16 x i8>* %455, align 1
  %456 = getelementptr i8, i8* %448, i64 16
  %457 = bitcast i8* %456 to <16 x i8>*
  store <16 x i8> %454, <16 x i8>* %457, align 1
  %458 = or i64 %446, 32
  %459 = getelementptr i8, i8* %414, i64 %458
  %460 = getelementptr i8, i8* %424, i64 %458
  %461 = bitcast i8* %460 to <16 x i8>*
  %462 = load <16 x i8>, <16 x i8>* %461, align 1
  %463 = getelementptr i8, i8* %460, i64 16
  %464 = bitcast i8* %463 to <16 x i8>*
  %465 = load <16 x i8>, <16 x i8>* %464, align 1
  %466 = bitcast i8* %459 to <16 x i8>*
  store <16 x i8> %462, <16 x i8>* %466, align 1
  %467 = getelementptr i8, i8* %459, i64 16
  %468 = bitcast i8* %467 to <16 x i8>*
  store <16 x i8> %465, <16 x i8>* %468, align 1
  %469 = or i64 %446, 64
  %470 = getelementptr i8, i8* %414, i64 %469
  %471 = getelementptr i8, i8* %424, i64 %469
  %472 = bitcast i8* %471 to <16 x i8>*
  %473 = load <16 x i8>, <16 x i8>* %472, align 1
  %474 = getelementptr i8, i8* %471, i64 16
  %475 = bitcast i8* %474 to <16 x i8>*
  %476 = load <16 x i8>, <16 x i8>* %475, align 1
  %477 = bitcast i8* %470 to <16 x i8>*
  store <16 x i8> %473, <16 x i8>* %477, align 1
  %478 = getelementptr i8, i8* %470, i64 16
  %479 = bitcast i8* %478 to <16 x i8>*
  store <16 x i8> %476, <16 x i8>* %479, align 1
  %480 = or i64 %446, 96
  %481 = getelementptr i8, i8* %414, i64 %480
  %482 = getelementptr i8, i8* %424, i64 %480
  %483 = bitcast i8* %482 to <16 x i8>*
  %484 = load <16 x i8>, <16 x i8>* %483, align 1
  %485 = getelementptr i8, i8* %482, i64 16
  %486 = bitcast i8* %485 to <16 x i8>*
  %487 = load <16 x i8>, <16 x i8>* %486, align 1
  %488 = bitcast i8* %481 to <16 x i8>*
  store <16 x i8> %484, <16 x i8>* %488, align 1
  %489 = getelementptr i8, i8* %481, i64 16
  %490 = bitcast i8* %489 to <16 x i8>*
  store <16 x i8> %487, <16 x i8>* %490, align 1
  %491 = add i64 %446, 128
  %492 = add i64 %447, -4
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %445, !llvm.loop !236

494:                                              ; preds = %445, %434
  %495 = phi i64 [ 0, %434 ], [ %491, %445 ]
  %496 = icmp eq i64 %441, 0
  br i1 %496, label %513, label %497

497:                                              ; preds = %494, %497
  %498 = phi i64 [ %510, %497 ], [ %495, %494 ]
  %499 = phi i64 [ %511, %497 ], [ %441, %494 ]
  %500 = getelementptr i8, i8* %414, i64 %498
  %501 = getelementptr i8, i8* %424, i64 %498
  %502 = bitcast i8* %501 to <16 x i8>*
  %503 = load <16 x i8>, <16 x i8>* %502, align 1
  %504 = getelementptr i8, i8* %501, i64 16
  %505 = bitcast i8* %504 to <16 x i8>*
  %506 = load <16 x i8>, <16 x i8>* %505, align 1
  %507 = bitcast i8* %500 to <16 x i8>*
  store <16 x i8> %503, <16 x i8>* %507, align 1
  %508 = getelementptr i8, i8* %500, i64 16
  %509 = bitcast i8* %508 to <16 x i8>*
  store <16 x i8> %506, <16 x i8>* %509, align 1
  %510 = add i64 %498, 32
  %511 = add i64 %499, -1
  %512 = icmp eq i64 %511, 0
  br i1 %512, label %513, label %497, !llvm.loop !237

513:                                              ; preds = %497, %494
  %514 = icmp eq i64 %435, %432
  br i1 %514, label %525, label %515

515:                                              ; preds = %513, %421
  %516 = phi i8* [ %414, %421 ], [ %436, %513 ]
  %517 = phi i8* [ %424, %421 ], [ %437, %513 ]
  br label %518

518:                                              ; preds = %515, %518
  %519 = phi i8* [ %523, %518 ], [ %516, %515 ]
  %520 = phi i8* [ %522, %518 ], [ %517, %515 ]
  %521 = load i8, i8* %520, align 1
  store i8 %521, i8* %519, align 1
  %522 = getelementptr inbounds i8, i8* %520, i64 1
  %523 = getelementptr inbounds i8, i8* %519, i64 1
  %524 = icmp ult i8* %522, %423
  br i1 %524, label %518, label %525, !llvm.loop !238

525:                                              ; preds = %518, %513, %393, %403
  %526 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %372, i64 0, i32 1
  %527 = load i32, i32* %526, align 4
  %528 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %372, i64 0, i32 0
  %529 = load i32, i32* %528, align 4
  %530 = add nsw i32 %529, %527
  %531 = sub nsw i32 0, %529
  store i32 %531, i32* %526, align 4
  %532 = call %struct.decContext* @uprv_decContextDefault_69(%struct.decContext* nonnull %7, i32 64) #8
  %533 = getelementptr inbounds %struct.decContext, %struct.decContext* %7, i64 0, i32 1
  store i32 999999999, i32* %533, align 4
  %534 = getelementptr inbounds %struct.decContext, %struct.decContext* %7, i64 0, i32 2
  store i32 -999999999, i32* %534, align 4
  %535 = getelementptr inbounds %struct.decContext, %struct.decContext* %7, i64 0, i32 0
  store i32 %351, i32* %535, align 4
  %536 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %17, i64 0, i64 0, i32 2
  store i8 0, i8* %536, align 8
  %537 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %17, i64 0, i64 0, i32 0
  store i32 3, i32* %537, align 16
  %538 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %398, i64 0, i32 2
  store i8 0, i8* %538, align 4
  %539 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %398, i64 0, i32 0
  store i32 3, i32* %539, align 4
  %540 = and i32 %530, 1
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %546, label %542

542:                                              ; preds = %525
  %543 = load i32, i32* %526, align 4
  %544 = add nsw i32 %543, -1
  store i32 %544, i32* %526, align 4
  %545 = add nsw i32 %530, 1
  br label %546

546:                                              ; preds = %525, %542
  %547 = phi i32 [ -4, %542 ], [ -3, %525 ]
  %548 = phi i32 [ -2, %542 ], [ -3, %525 ]
  %549 = phi i8 [ 1, %542 ], [ 5, %525 ]
  %550 = phi i8 [ 8, %542 ], [ 2, %525 ]
  %551 = phi i8 [ 5, %542 ], [ 1, %525 ]
  %552 = phi i8 [ 2, %542 ], [ 8, %525 ]
  %553 = phi i32 [ %545, %542 ], [ %530, %525 ]
  %554 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %17, i64 0, i64 0, i32 1
  store i32 %547, i32* %554, align 4
  %555 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %398, i64 0, i32 1
  store i32 %548, i32* %555, align 4
  %556 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %17, i64 0, i64 0, i32 3, i64 0
  store i8 9, i8* %556, align 1
  %557 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %17, i64 0, i64 0, i32 3, i64 1
  store i8 %549, i8* %557, align 1
  %558 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %17, i64 0, i64 0, i32 3, i64 2
  store i8 %550, i8* %558, align 1
  %559 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %398, i64 0, i32 3, i64 0
  store i8 9, i8* %559, align 1
  %560 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %398, i64 0, i32 3, i64 1
  store i8 %551, i8* %560, align 1
  %561 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %398, i64 0, i32 3, i64 2
  store i8 %552, i8* %561, align 1
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %398, %struct.decNumber* %398, %struct.decNumber* %372, %struct.decContext* nonnull %7, i32* nonnull %12)
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %398, %struct.decNumber* %398, %struct.decNumber* nonnull %33, %struct.decContext* nonnull %7, i8 zeroext 0, i32* nonnull %12)
  %562 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i64 0, i32 2
  store i8 0, i8* %562, align 4
  %563 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i64 0, i32 1
  store i32 0, i32* %563, align 4
  %564 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i64 0, i32 0
  store i32 1, i32* %564, align 4
  %565 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i64 0, i32 3, i64 0
  store i8 0, i8* %565, align 1
  store i8 0, i8* %536, align 8
  store i32 1, i32* %537, align 16
  store i8 5, i8* %556, align 1
  store i32 -1, i32* %554, align 4
  store i32 3, i32* %535, align 4
  %566 = icmp ugt i32 %352, 3
  br i1 %566, label %567, label %575

567:                                              ; preds = %546, %567
  %568 = phi i32 [ %573, %567 ], [ 3, %546 ]
  %569 = shl nsw i32 %568, 1
  %570 = add nsw i32 %569, -2
  %571 = icmp sgt i32 %570, %352
  %572 = select i1 %571, i32 %352, i32 %570
  store i32 %572, i32* %535, align 4
  call fastcc void @_ZL11decDivideOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %399, %struct.decNumber* %372, %struct.decNumber* %398, %struct.decContext* nonnull %7, i8 zeroext -128, i32* nonnull %12)
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %399, %struct.decNumber* %399, %struct.decNumber* %398, %struct.decContext* nonnull %7, i8 zeroext 0, i32* nonnull %12)
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %398, %struct.decNumber* %399, %struct.decNumber* nonnull %33, %struct.decContext* nonnull %7, i32* nonnull %12)
  %573 = load i32, i32* %535, align 4
  %574 = icmp slt i32 %573, %352
  br i1 %574, label %567, label %575

575:                                              ; preds = %567, %546
  %576 = bitcast %struct.decContext* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 %576, i64 28, i1 false)
  %577 = getelementptr inbounds %struct.decContext, %struct.decContext* %8, i64 0, i32 3
  store i32 3, i32* %577, align 4
  %578 = sdiv i32 %553, 2
  %579 = load i32, i32* %555, align 4
  %580 = add nsw i32 %579, %578
  store i32 0, i32* %13, align 4
  store i32 0, i32* %10, align 4
  store i32 %580, i32* %555, align 4
  %581 = load i32, i32* %539, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %398, %struct.decContext* nonnull %8, i8* %559, i32 %581, i32* nonnull %10, i32* nonnull %13) #8
  call fastcc void @_ZL11decFinalizeP9decNumberP10decContextPiPj(%struct.decNumber* %398, %struct.decContext* nonnull %8, i32* nonnull %10, i32* nonnull %13)
  %582 = load i32, i32* %13, align 4
  %583 = and i32 %582, 512
  %584 = icmp eq i32 %583, 0
  br i1 %584, label %708, label %585

585:                                              ; preds = %575
  store i32 %582, i32* %11, align 4
  %586 = icmp eq %struct.decNumber* %398, %0
  br i1 %586, label %1198, label %587

587:                                              ; preds = %585
  %588 = load i8, i8* %538, align 4
  %589 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %588, i8* %589, align 4
  %590 = load i32, i32* %555, align 4
  %591 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %590, i32* %591, align 4
  %592 = load i32, i32* %539, align 4
  %593 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %592, i32* %593, align 4
  %594 = load i8, i8* %559, align 1
  %595 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %594, i8* %595, align 1
  %596 = icmp sgt i32 %592, 1
  br i1 %596, label %597, label %1198

597:                                              ; preds = %587
  %598 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %599 = icmp slt i32 %592, 50
  %600 = sext i32 %592 to i64
  br i1 %599, label %601, label %605

601:                                              ; preds = %597
  %602 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %600
  %603 = load i8, i8* %602, align 1
  %604 = zext i8 %603 to i64
  br label %605

605:                                              ; preds = %601, %597
  %606 = phi i64 [ %604, %601 ], [ %600, %597 ]
  %607 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %398, i64 0, i32 3, i64 %606
  %608 = add nsw i64 %606, 9
  %609 = getelementptr i8, i8* %401, i64 %608
  %610 = getelementptr %struct.decNumber, %struct.decNumber* %398, i64 0, i32 3, i64 2
  %611 = icmp ugt i8* %609, %610
  %612 = select i1 %611, i8* %609, i8* %610
  %613 = sub i64 -10, %400
  %614 = getelementptr i8, i8* %612, i64 %613
  %615 = ptrtoint i8* %614 to i64
  %616 = icmp ult i8* %614, inttoptr (i64 32 to i8*)
  br i1 %616, label %698, label %617

617:                                              ; preds = %605
  %618 = and i64 %615, -32
  %619 = getelementptr i8, i8* %598, i64 %618
  %620 = getelementptr i8, i8* %560, i64 %618
  %621 = add i64 %618, -32
  %622 = lshr exact i64 %621, 5
  %623 = add nuw nsw i64 %622, 1
  %624 = and i64 %623, 3
  %625 = icmp ult i64 %621, 96
  br i1 %625, label %677, label %626

626:                                              ; preds = %617
  %627 = sub nsw i64 %623, %624
  br label %628

628:                                              ; preds = %628, %626
  %629 = phi i64 [ 0, %626 ], [ %674, %628 ]
  %630 = phi i64 [ %627, %626 ], [ %675, %628 ]
  %631 = getelementptr i8, i8* %598, i64 %629
  %632 = getelementptr i8, i8* %560, i64 %629
  %633 = bitcast i8* %632 to <16 x i8>*
  %634 = load <16 x i8>, <16 x i8>* %633, align 1
  %635 = getelementptr i8, i8* %632, i64 16
  %636 = bitcast i8* %635 to <16 x i8>*
  %637 = load <16 x i8>, <16 x i8>* %636, align 1
  %638 = bitcast i8* %631 to <16 x i8>*
  store <16 x i8> %634, <16 x i8>* %638, align 1
  %639 = getelementptr i8, i8* %631, i64 16
  %640 = bitcast i8* %639 to <16 x i8>*
  store <16 x i8> %637, <16 x i8>* %640, align 1
  %641 = or i64 %629, 32
  %642 = getelementptr i8, i8* %598, i64 %641
  %643 = getelementptr i8, i8* %560, i64 %641
  %644 = bitcast i8* %643 to <16 x i8>*
  %645 = load <16 x i8>, <16 x i8>* %644, align 1
  %646 = getelementptr i8, i8* %643, i64 16
  %647 = bitcast i8* %646 to <16 x i8>*
  %648 = load <16 x i8>, <16 x i8>* %647, align 1
  %649 = bitcast i8* %642 to <16 x i8>*
  store <16 x i8> %645, <16 x i8>* %649, align 1
  %650 = getelementptr i8, i8* %642, i64 16
  %651 = bitcast i8* %650 to <16 x i8>*
  store <16 x i8> %648, <16 x i8>* %651, align 1
  %652 = or i64 %629, 64
  %653 = getelementptr i8, i8* %598, i64 %652
  %654 = getelementptr i8, i8* %560, i64 %652
  %655 = bitcast i8* %654 to <16 x i8>*
  %656 = load <16 x i8>, <16 x i8>* %655, align 1
  %657 = getelementptr i8, i8* %654, i64 16
  %658 = bitcast i8* %657 to <16 x i8>*
  %659 = load <16 x i8>, <16 x i8>* %658, align 1
  %660 = bitcast i8* %653 to <16 x i8>*
  store <16 x i8> %656, <16 x i8>* %660, align 1
  %661 = getelementptr i8, i8* %653, i64 16
  %662 = bitcast i8* %661 to <16 x i8>*
  store <16 x i8> %659, <16 x i8>* %662, align 1
  %663 = or i64 %629, 96
  %664 = getelementptr i8, i8* %598, i64 %663
  %665 = getelementptr i8, i8* %560, i64 %663
  %666 = bitcast i8* %665 to <16 x i8>*
  %667 = load <16 x i8>, <16 x i8>* %666, align 1
  %668 = getelementptr i8, i8* %665, i64 16
  %669 = bitcast i8* %668 to <16 x i8>*
  %670 = load <16 x i8>, <16 x i8>* %669, align 1
  %671 = bitcast i8* %664 to <16 x i8>*
  store <16 x i8> %667, <16 x i8>* %671, align 1
  %672 = getelementptr i8, i8* %664, i64 16
  %673 = bitcast i8* %672 to <16 x i8>*
  store <16 x i8> %670, <16 x i8>* %673, align 1
  %674 = add i64 %629, 128
  %675 = add i64 %630, -4
  %676 = icmp eq i64 %675, 0
  br i1 %676, label %677, label %628, !llvm.loop !239

677:                                              ; preds = %628, %617
  %678 = phi i64 [ 0, %617 ], [ %674, %628 ]
  %679 = icmp eq i64 %624, 0
  br i1 %679, label %696, label %680

680:                                              ; preds = %677, %680
  %681 = phi i64 [ %693, %680 ], [ %678, %677 ]
  %682 = phi i64 [ %694, %680 ], [ %624, %677 ]
  %683 = getelementptr i8, i8* %598, i64 %681
  %684 = getelementptr i8, i8* %560, i64 %681
  %685 = bitcast i8* %684 to <16 x i8>*
  %686 = load <16 x i8>, <16 x i8>* %685, align 1
  %687 = getelementptr i8, i8* %684, i64 16
  %688 = bitcast i8* %687 to <16 x i8>*
  %689 = load <16 x i8>, <16 x i8>* %688, align 1
  %690 = bitcast i8* %683 to <16 x i8>*
  store <16 x i8> %686, <16 x i8>* %690, align 1
  %691 = getelementptr i8, i8* %683, i64 16
  %692 = bitcast i8* %691 to <16 x i8>*
  store <16 x i8> %689, <16 x i8>* %692, align 1
  %693 = add i64 %681, 32
  %694 = add i64 %682, -1
  %695 = icmp eq i64 %694, 0
  br i1 %695, label %696, label %680, !llvm.loop !240

696:                                              ; preds = %680, %677
  %697 = icmp eq i64 %618, %615
  br i1 %697, label %1198, label %698

698:                                              ; preds = %696, %605
  %699 = phi i8* [ %598, %605 ], [ %619, %696 ]
  %700 = phi i8* [ %560, %605 ], [ %620, %696 ]
  br label %701

701:                                              ; preds = %698, %701
  %702 = phi i8* [ %706, %701 ], [ %699, %698 ]
  %703 = phi i8* [ %705, %701 ], [ %700, %698 ]
  %704 = load i8, i8* %703, align 1
  store i8 %704, i8* %702, align 1
  %705 = getelementptr inbounds i8, i8* %703, i64 1
  %706 = getelementptr inbounds i8, i8* %702, i64 1
  %707 = icmp ult i8* %705, %607
  br i1 %707, label %701, label %1198, !llvm.loop !241

708:                                              ; preds = %575
  %709 = and i32 %582, -2081
  %710 = load i32, i32* %11, align 4
  %711 = or i32 %710, %709
  store i32 %711, i32* %11, align 4
  %712 = load i32, i32* %555, align 4
  %713 = sub nsw i32 %712, %578
  store i32 %713, i32* %555, align 4
  %714 = load i32, i32* %535, align 4
  %715 = add nsw i32 %714, -1
  store i32 %715, i32* %535, align 4
  %716 = load i32, i32* %539, align 4
  %717 = xor i32 %716, -1
  store i32 %717, i32* %554, align 4
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %399, %struct.decNumber* %398, %struct.decNumber* nonnull %33, %struct.decContext* nonnull %7, i8 zeroext -128, i32* nonnull %12)
  %718 = getelementptr inbounds %struct.decContext, %struct.decContext* %7, i64 0, i32 3
  store i32 1, i32* %718, align 4
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %399, %struct.decNumber* %399, %struct.decNumber* %399, %struct.decContext* nonnull %7, i32* nonnull %12)
  %719 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %372, i64 0, i32 2
  %720 = load i8, i8* %719, align 4
  %721 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 2
  %722 = load i8, i8* %721, align 4
  %723 = or i8 %722, %720
  %724 = and i8 %723, 48
  %725 = icmp eq i8 %724, 0
  br i1 %725, label %727, label %726

726:                                              ; preds = %708
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %399, %struct.decNumber* %372, %struct.decNumber* %399, %struct.decContext* nonnull %7, i32* nonnull %12) #8
  br label %741

727:                                              ; preds = %708
  %728 = call fastcc i32 @_ZL10decComparePK9decNumberS1_h(%struct.decNumber* %372, %struct.decNumber* %399, i8 zeroext 0) #8
  %729 = icmp eq i32 %728, -2147483648
  br i1 %729, label %730, label %733

730:                                              ; preds = %727
  %731 = load i32, i32* %12, align 4
  %732 = or i32 %731, 16
  store i32 %732, i32* %12, align 4
  br label %741

733:                                              ; preds = %727
  store i8 0, i8* %721, align 4
  %734 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 1
  store i32 0, i32* %734, align 4
  %735 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 0
  store i32 1, i32* %735, align 4
  %736 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 3, i64 0
  store i8 0, i8* %736, align 1
  %737 = icmp eq i32 %728, 0
  br i1 %737, label %741, label %738

738:                                              ; preds = %733
  store i8 1, i8* %736, align 1
  %739 = icmp slt i32 %728, 0
  br i1 %739, label %740, label %741

740:                                              ; preds = %738
  store i8 -128, i8* %721, align 4
  br label %768

741:                                              ; preds = %726, %730, %733, %738
  %742 = load i8, i8* %721, align 4
  %743 = icmp slt i8 %742, 0
  br i1 %743, label %768, label %744

744:                                              ; preds = %741
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %399, %struct.decNumber* %398, %struct.decNumber* nonnull %33, %struct.decContext* nonnull %7, i8 zeroext 0, i32* nonnull %12)
  store i32 5, i32* %718, align 4
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %399, %struct.decNumber* %399, %struct.decNumber* %399, %struct.decContext* nonnull %7, i32* nonnull %12)
  %745 = load i8, i8* %721, align 4
  %746 = load i8, i8* %719, align 4
  %747 = or i8 %746, %745
  %748 = and i8 %747, 48
  %749 = icmp eq i8 %748, 0
  br i1 %749, label %751, label %750

750:                                              ; preds = %744
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %399, %struct.decNumber* %399, %struct.decNumber* %372, %struct.decContext* nonnull %7, i32* nonnull %12) #8
  br label %765

751:                                              ; preds = %744
  %752 = call fastcc i32 @_ZL10decComparePK9decNumberS1_h(%struct.decNumber* %399, %struct.decNumber* %372, i8 zeroext 0) #8
  %753 = icmp eq i32 %752, -2147483648
  br i1 %753, label %754, label %757

754:                                              ; preds = %751
  %755 = load i32, i32* %12, align 4
  %756 = or i32 %755, 16
  store i32 %756, i32* %12, align 4
  br label %765

757:                                              ; preds = %751
  store i8 0, i8* %721, align 4
  %758 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 1
  store i32 0, i32* %758, align 4
  %759 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 0
  store i32 1, i32* %759, align 4
  %760 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 3, i64 0
  store i8 0, i8* %760, align 1
  %761 = icmp eq i32 %752, 0
  br i1 %761, label %765, label %762

762:                                              ; preds = %757
  store i8 1, i8* %760, align 1
  %763 = icmp slt i32 %752, 0
  br i1 %763, label %764, label %765

764:                                              ; preds = %762
  store i8 -128, i8* %721, align 4
  br label %768

765:                                              ; preds = %750, %754, %757, %762
  %766 = load i8, i8* %721, align 4
  %767 = icmp slt i8 %766, 0
  br i1 %767, label %768, label %778

768:                                              ; preds = %765, %764, %741, %740
  %769 = phi i8 [ -128, %740 ], [ -128, %741 ], [ 0, %764 ], [ 0, %765 ]
  %770 = load i32, i32* %554, align 4
  %771 = add nsw i32 %770, 1
  store i32 %771, i32* %554, align 4
  store i8 1, i8* %556, align 1
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %398, %struct.decNumber* %398, %struct.decNumber* nonnull %33, %struct.decContext* nonnull %7, i8 zeroext %769, i32* nonnull %12)
  %772 = getelementptr inbounds %struct.decContext, %struct.decContext* %8, i64 0, i32 2
  %773 = load i32, i32* %772, align 4
  %774 = sub nsw i32 %773, %578
  store i32 %774, i32* %772, align 4
  %775 = getelementptr inbounds %struct.decContext, %struct.decContext* %8, i64 0, i32 1
  %776 = load i32, i32* %775, align 4
  %777 = sub nsw i32 %776, %578
  store i32 %777, i32* %775, align 4
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %398, %struct.decNumber* nonnull %9, %struct.decNumber* %398, %struct.decContext* nonnull %8, i8 zeroext 0, i32* nonnull %12)
  br label %778

778:                                              ; preds = %768, %765
  %779 = load i32, i32* %555, align 4
  %780 = add nsw i32 %779, %578
  store i32 %780, i32* %555, align 4
  %781 = icmp eq %struct.decNumber* %399, %398
  br i1 %781, label %901, label %782

782:                                              ; preds = %778
  %783 = load i8, i8* %538, align 4
  store i8 %783, i8* %721, align 4
  %784 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 1
  store i32 %780, i32* %784, align 4
  %785 = load i32, i32* %539, align 4
  %786 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 0
  store i32 %785, i32* %786, align 4
  %787 = load i8, i8* %559, align 1
  %788 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 3, i64 0
  store i8 %787, i8* %788, align 1
  %789 = icmp sgt i32 %785, 1
  br i1 %789, label %790, label %901

790:                                              ; preds = %782
  %791 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 3, i64 1
  %792 = icmp slt i32 %785, 50
  %793 = sext i32 %785 to i64
  br i1 %792, label %794, label %798

794:                                              ; preds = %790
  %795 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %793
  %796 = load i8, i8* %795, align 1
  %797 = zext i8 %796 to i64
  br label %798

798:                                              ; preds = %794, %790
  %799 = phi i64 [ %797, %794 ], [ %793, %790 ]
  %800 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %398, i64 0, i32 3, i64 %799
  %801 = add nsw i64 %799, 9
  %802 = getelementptr i8, i8* %401, i64 %801
  %803 = getelementptr %struct.decNumber, %struct.decNumber* %398, i64 0, i32 3, i64 2
  %804 = icmp ugt i8* %802, %803
  %805 = select i1 %804, i8* %802, i8* %803
  %806 = sub i64 -10, %400
  %807 = getelementptr i8, i8* %805, i64 %806
  %808 = ptrtoint i8* %807 to i64
  %809 = icmp ult i8* %807, inttoptr (i64 32 to i8*)
  br i1 %809, label %891, label %810

810:                                              ; preds = %798
  %811 = and i64 %808, -32
  %812 = getelementptr i8, i8* %791, i64 %811
  %813 = getelementptr i8, i8* %560, i64 %811
  %814 = add i64 %811, -32
  %815 = lshr exact i64 %814, 5
  %816 = add nuw nsw i64 %815, 1
  %817 = and i64 %816, 3
  %818 = icmp ult i64 %814, 96
  br i1 %818, label %870, label %819

819:                                              ; preds = %810
  %820 = sub nsw i64 %816, %817
  br label %821

821:                                              ; preds = %821, %819
  %822 = phi i64 [ 0, %819 ], [ %867, %821 ]
  %823 = phi i64 [ %820, %819 ], [ %868, %821 ]
  %824 = getelementptr i8, i8* %791, i64 %822
  %825 = getelementptr i8, i8* %560, i64 %822
  %826 = bitcast i8* %825 to <16 x i8>*
  %827 = load <16 x i8>, <16 x i8>* %826, align 1
  %828 = getelementptr i8, i8* %825, i64 16
  %829 = bitcast i8* %828 to <16 x i8>*
  %830 = load <16 x i8>, <16 x i8>* %829, align 1
  %831 = bitcast i8* %824 to <16 x i8>*
  store <16 x i8> %827, <16 x i8>* %831, align 1
  %832 = getelementptr i8, i8* %824, i64 16
  %833 = bitcast i8* %832 to <16 x i8>*
  store <16 x i8> %830, <16 x i8>* %833, align 1
  %834 = or i64 %822, 32
  %835 = getelementptr i8, i8* %791, i64 %834
  %836 = getelementptr i8, i8* %560, i64 %834
  %837 = bitcast i8* %836 to <16 x i8>*
  %838 = load <16 x i8>, <16 x i8>* %837, align 1
  %839 = getelementptr i8, i8* %836, i64 16
  %840 = bitcast i8* %839 to <16 x i8>*
  %841 = load <16 x i8>, <16 x i8>* %840, align 1
  %842 = bitcast i8* %835 to <16 x i8>*
  store <16 x i8> %838, <16 x i8>* %842, align 1
  %843 = getelementptr i8, i8* %835, i64 16
  %844 = bitcast i8* %843 to <16 x i8>*
  store <16 x i8> %841, <16 x i8>* %844, align 1
  %845 = or i64 %822, 64
  %846 = getelementptr i8, i8* %791, i64 %845
  %847 = getelementptr i8, i8* %560, i64 %845
  %848 = bitcast i8* %847 to <16 x i8>*
  %849 = load <16 x i8>, <16 x i8>* %848, align 1
  %850 = getelementptr i8, i8* %847, i64 16
  %851 = bitcast i8* %850 to <16 x i8>*
  %852 = load <16 x i8>, <16 x i8>* %851, align 1
  %853 = bitcast i8* %846 to <16 x i8>*
  store <16 x i8> %849, <16 x i8>* %853, align 1
  %854 = getelementptr i8, i8* %846, i64 16
  %855 = bitcast i8* %854 to <16 x i8>*
  store <16 x i8> %852, <16 x i8>* %855, align 1
  %856 = or i64 %822, 96
  %857 = getelementptr i8, i8* %791, i64 %856
  %858 = getelementptr i8, i8* %560, i64 %856
  %859 = bitcast i8* %858 to <16 x i8>*
  %860 = load <16 x i8>, <16 x i8>* %859, align 1
  %861 = getelementptr i8, i8* %858, i64 16
  %862 = bitcast i8* %861 to <16 x i8>*
  %863 = load <16 x i8>, <16 x i8>* %862, align 1
  %864 = bitcast i8* %857 to <16 x i8>*
  store <16 x i8> %860, <16 x i8>* %864, align 1
  %865 = getelementptr i8, i8* %857, i64 16
  %866 = bitcast i8* %865 to <16 x i8>*
  store <16 x i8> %863, <16 x i8>* %866, align 1
  %867 = add i64 %822, 128
  %868 = add i64 %823, -4
  %869 = icmp eq i64 %868, 0
  br i1 %869, label %870, label %821, !llvm.loop !242

870:                                              ; preds = %821, %810
  %871 = phi i64 [ 0, %810 ], [ %867, %821 ]
  %872 = icmp eq i64 %817, 0
  br i1 %872, label %889, label %873

873:                                              ; preds = %870, %873
  %874 = phi i64 [ %886, %873 ], [ %871, %870 ]
  %875 = phi i64 [ %887, %873 ], [ %817, %870 ]
  %876 = getelementptr i8, i8* %791, i64 %874
  %877 = getelementptr i8, i8* %560, i64 %874
  %878 = bitcast i8* %877 to <16 x i8>*
  %879 = load <16 x i8>, <16 x i8>* %878, align 1
  %880 = getelementptr i8, i8* %877, i64 16
  %881 = bitcast i8* %880 to <16 x i8>*
  %882 = load <16 x i8>, <16 x i8>* %881, align 1
  %883 = bitcast i8* %876 to <16 x i8>*
  store <16 x i8> %879, <16 x i8>* %883, align 1
  %884 = getelementptr i8, i8* %876, i64 16
  %885 = bitcast i8* %884 to <16 x i8>*
  store <16 x i8> %882, <16 x i8>* %885, align 1
  %886 = add i64 %874, 32
  %887 = add i64 %875, -1
  %888 = icmp eq i64 %887, 0
  br i1 %888, label %889, label %873, !llvm.loop !243

889:                                              ; preds = %873, %870
  %890 = icmp eq i64 %811, %808
  br i1 %890, label %901, label %891

891:                                              ; preds = %889, %798
  %892 = phi i8* [ %791, %798 ], [ %812, %889 ]
  %893 = phi i8* [ %560, %798 ], [ %813, %889 ]
  br label %894

894:                                              ; preds = %891, %894
  %895 = phi i8* [ %899, %894 ], [ %892, %891 ]
  %896 = phi i8* [ %898, %894 ], [ %893, %891 ]
  %897 = load i8, i8* %896, align 1
  store i8 %897, i8* %895, align 1
  %898 = getelementptr inbounds i8, i8* %896, i64 1
  %899 = getelementptr inbounds i8, i8* %895, i64 1
  %900 = icmp ult i8* %898, %800
  br i1 %900, label %894, label %901, !llvm.loop !244

901:                                              ; preds = %894, %889, %778, %782
  %902 = load i8, i8* %721, align 4
  %903 = and i8 %902, 112
  %904 = icmp eq i8 %903, 0
  br i1 %904, label %905, label %959

905:                                              ; preds = %901
  %906 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 3, i64 0
  %907 = load i8, i8* %906, align 1
  %908 = and i8 %907, 1
  %909 = icmp eq i8 %908, 0
  br i1 %909, label %910, label %959

910:                                              ; preds = %905
  %911 = icmp eq i8 %907, 0
  %912 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 0
  %913 = load i32, i32* %912, align 4
  %914 = icmp eq i32 %913, 1
  %915 = and i1 %911, %914
  %916 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 1
  br i1 %915, label %917, label %918

917:                                              ; preds = %910
  store i32 0, i32* %916, align 4
  br label %959

918:                                              ; preds = %910
  %919 = icmp sgt i32 %913, 1
  br i1 %919, label %920, label %959

920:                                              ; preds = %918
  %921 = zext i8 %907 to i32
  %922 = lshr i32 %921, 1
  %923 = mul nuw nsw i32 %922, 26215
  %924 = lshr i32 %923, 17
  %925 = mul nsw i32 %924, -10
  %926 = sub nsw i32 0, %921
  %927 = icmp eq i32 %925, %926
  br i1 %927, label %928, label %959

928:                                              ; preds = %920
  %929 = add nsw i32 %913, -2
  br label %930

930:                                              ; preds = %928, %936
  %931 = phi i32 [ %934, %936 ], [ 0, %928 ]
  %932 = phi i8* [ %933, %936 ], [ %906, %928 ]
  %933 = getelementptr inbounds i8, i8* %932, i64 1
  %934 = add nuw nsw i32 %931, 1
  %935 = icmp eq i32 %931, %929
  br i1 %935, label %945, label %936

936:                                              ; preds = %930
  %937 = load i8, i8* %933, align 1
  %938 = zext i8 %937 to i32
  %939 = lshr i32 %938, 1
  %940 = mul nuw nsw i32 %939, 26215
  %941 = lshr i32 %940, 17
  %942 = mul nsw i32 %941, -10
  %943 = sub nsw i32 0, %938
  %944 = icmp eq i32 %942, %943
  br i1 %944, label %930, label %945

945:                                              ; preds = %930, %936
  %946 = icmp slt i32 %913, 50
  br i1 %946, label %947, label %952

947:                                              ; preds = %945
  %948 = sext i32 %913 to i64
  %949 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %948
  %950 = load i8, i8* %949, align 1
  %951 = zext i8 %950 to i32
  br label %952

952:                                              ; preds = %947, %945
  %953 = phi i32 [ %951, %947 ], [ %913, %945 ]
  %954 = call fastcc i32 @_ZL15decShiftToLeastPhii(i8* %906, i32 %953, i32 %934) #8
  %955 = load i32, i32* %916, align 4
  %956 = add nsw i32 %955, %934
  store i32 %956, i32* %916, align 4
  %957 = load i32, i32* %912, align 4
  %958 = sub nsw i32 %957, %934
  store i32 %958, i32* %912, align 4
  br label %959

959:                                              ; preds = %920, %901, %905, %917, %918, %952
  %960 = phi i32 [ 0, %917 ], [ %934, %952 ], [ 0, %918 ], [ 0, %905 ], [ 0, %901 ], [ 0, %920 ]
  %961 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %399, i64 0, i32 0
  %962 = load i32, i32* %961, align 4
  %963 = shl i32 %962, 1
  %964 = add nsw i32 %963, -1
  %965 = icmp sgt i32 %964, %351
  br i1 %965, label %966, label %969

966:                                              ; preds = %959
  %967 = load i32, i32* %11, align 4
  %968 = or i32 %967, 2080
  store i32 %968, i32* %11, align 4
  br label %1055

969:                                              ; preds = %959
  %970 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %970) #8
  store i32 0, i32* %18, align 4
  call fastcc void @_ZL13decMultiplyOpP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %399, %struct.decNumber* %399, %struct.decNumber* %399, %struct.decContext* nonnull %7, i32* nonnull %18)
  %971 = load i32, i32* %18, align 4
  %972 = and i32 %971, 512
  %973 = icmp eq i32 %972, 0
  br i1 %973, label %977, label %974

974:                                              ; preds = %969
  %975 = load i32, i32* %11, align 4
  %976 = or i32 %975, 2080
  store i32 %976, i32* %11, align 4
  br label %1053

977:                                              ; preds = %969
  %978 = load i8, i8* %721, align 4
  %979 = load i8, i8* %34, align 4
  %980 = or i8 %979, %978
  %981 = and i8 %980, 48
  %982 = icmp eq i8 %981, 0
  br i1 %982, label %984, label %983

983:                                              ; preds = %977
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* nonnull %33, %struct.decNumber* %399, %struct.decNumber* %1, %struct.decContext* nonnull %7, i32* nonnull %18) #8
  br label %994

984:                                              ; preds = %977
  %985 = call fastcc i32 @_ZL10decComparePK9decNumberS1_h(%struct.decNumber* %399, %struct.decNumber* %1, i8 zeroext 0) #8
  %986 = icmp eq i32 %985, -2147483648
  br i1 %986, label %987, label %989

987:                                              ; preds = %984
  %988 = or i32 %971, 16
  store i32 %988, i32* %18, align 4
  br label %994

989:                                              ; preds = %984
  store i8 0, i8* %536, align 8
  store i32 0, i32* %554, align 4
  store i32 1, i32* %537, align 16
  store i8 0, i8* %556, align 1
  %990 = icmp eq i32 %985, 0
  br i1 %990, label %994, label %991

991:                                              ; preds = %989
  store i8 1, i8* %556, align 1
  %992 = icmp slt i32 %985, 0
  br i1 %992, label %993, label %994

993:                                              ; preds = %991
  store i8 -128, i8* %536, align 8
  br label %994

994:                                              ; preds = %983, %987, %989, %991, %993
  %995 = load i8, i8* %556, align 1
  %996 = icmp eq i8 %995, 0
  %997 = load i32, i32* %537, align 16
  %998 = icmp eq i32 %997, 1
  %999 = and i1 %996, %998
  br i1 %999, label %1000, label %1004

1000:                                             ; preds = %994
  %1001 = load i8, i8* %536, align 8
  %1002 = and i8 %1001, 112
  %1003 = icmp eq i8 %1002, 0
  br i1 %1003, label %1007, label %1004

1004:                                             ; preds = %1000, %994
  %1005 = load i32, i32* %11, align 4
  %1006 = or i32 %1005, 2080
  store i32 %1006, i32* %11, align 4
  br label %1053

1007:                                             ; preds = %1000
  %1008 = load i32, i32* %555, align 4
  %1009 = sub nsw i32 %191, %1008
  %1010 = icmp slt i32 %1009, 0
  br i1 %1010, label %1011, label %1014

1011:                                             ; preds = %1007
  %1012 = load i32, i32* %11, align 4
  %1013 = or i32 %1012, 2048
  store i32 %1013, i32* %11, align 4
  br label %1053

1014:                                             ; preds = %1007
  %1015 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 1
  %1016 = load i32, i32* %1015, align 4
  %1017 = load i32, i32* %343, align 4
  %1018 = sub i32 1, %1008
  %1019 = add i32 %1018, %1016
  %1020 = sub i32 %1019, %1017
  %1021 = icmp sgt i32 %1009, %1020
  br i1 %1021, label %1022, label %1029

1022:                                             ; preds = %1014
  %1023 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 6
  %1024 = load i8, i8* %1023, align 4
  %1025 = icmp eq i8 %1024, 0
  br i1 %1025, label %1029, label %1026

1026:                                             ; preds = %1022
  %1027 = load i32, i32* %11, align 4
  %1028 = or i32 %1027, 1024
  store i32 %1028, i32* %11, align 4
  br label %1029

1029:                                             ; preds = %1022, %1026, %1014
  %1030 = phi i32 [ %1020, %1026 ], [ %1009, %1022 ], [ %1009, %1014 ]
  %1031 = icmp slt i32 %960, %1030
  br i1 %1031, label %1032, label %1035

1032:                                             ; preds = %1029
  %1033 = load i32, i32* %11, align 4
  %1034 = or i32 %1033, 1024
  store i32 %1034, i32* %11, align 4
  br label %1035

1035:                                             ; preds = %1032, %1029
  %1036 = phi i32 [ %960, %1032 ], [ %1030, %1029 ]
  %1037 = icmp sgt i32 %1036, 0
  br i1 %1037, label %1038, label %1053

1038:                                             ; preds = %1035
  %1039 = load i32, i32* %539, align 4
  %1040 = icmp slt i32 %1039, 50
  br i1 %1040, label %1041, label %1046

1041:                                             ; preds = %1038
  %1042 = sext i32 %1039 to i64
  %1043 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %1042
  %1044 = load i8, i8* %1043, align 1
  %1045 = zext i8 %1044 to i32
  br label %1046

1046:                                             ; preds = %1038, %1041
  %1047 = phi i32 [ %1045, %1041 ], [ %1039, %1038 ]
  %1048 = call fastcc i32 @_ZL15decShiftToLeastPhii(i8* %559, i32 %1047, i32 %1036)
  %1049 = load i32, i32* %555, align 4
  %1050 = add nsw i32 %1049, %1036
  store i32 %1050, i32* %555, align 4
  %1051 = load i32, i32* %539, align 4
  %1052 = sub nsw i32 %1051, %1036
  store i32 %1052, i32* %539, align 4
  br label %1053

1053:                                             ; preds = %1011, %1046, %1035, %1004, %974
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %970) #8
  %1054 = load i32, i32* %11, align 4
  br label %1055

1055:                                             ; preds = %1053, %966
  %1056 = phi i32 [ %1054, %1053 ], [ %968, %966 ]
  %1057 = and i32 %1056, 8192
  %1058 = icmp eq i32 %1057, 0
  br i1 %1058, label %1075, label %1059

1059:                                             ; preds = %1055
  %1060 = load i32, i32* %188, align 4
  %1061 = load i32, i32* %346, align 4
  %1062 = add nsw i32 %1061, %1060
  %1063 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 2
  %1064 = load i32, i32* %1063, align 4
  %1065 = shl nsw i32 %1064, 1
  %1066 = icmp sgt i32 %1062, %1065
  %1067 = and i32 %1056, -12289
  %1068 = select i1 %1066, i32 %1067, i32 %1056
  %1069 = and i32 %1068, 32
  %1070 = icmp eq i32 %1069, 0
  %1071 = or i1 %1066, %1070
  br i1 %1071, label %1072, label %1075

1072:                                             ; preds = %1059
  %1073 = and i32 %1068, -8193
  %1074 = select i1 %1070, i32 %1073, i32 %1068
  store i32 %1074, i32* %11, align 4
  br label %1075

1075:                                             ; preds = %1072, %1059, %1055
  %1076 = icmp eq %struct.decNumber* %398, %0
  br i1 %1076, label %1198, label %1077

1077:                                             ; preds = %1075
  %1078 = load i8, i8* %538, align 4
  %1079 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %1078, i8* %1079, align 4
  %1080 = load i32, i32* %555, align 4
  %1081 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %1080, i32* %1081, align 4
  %1082 = load i32, i32* %539, align 4
  %1083 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %1082, i32* %1083, align 4
  %1084 = load i8, i8* %559, align 1
  %1085 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %1084, i8* %1085, align 1
  %1086 = icmp sgt i32 %1082, 1
  br i1 %1086, label %1087, label %1198

1087:                                             ; preds = %1077
  %1088 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %1089 = icmp slt i32 %1082, 50
  %1090 = sext i32 %1082 to i64
  br i1 %1089, label %1091, label %1095

1091:                                             ; preds = %1087
  %1092 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %1090
  %1093 = load i8, i8* %1092, align 1
  %1094 = zext i8 %1093 to i64
  br label %1095

1095:                                             ; preds = %1091, %1087
  %1096 = phi i64 [ %1094, %1091 ], [ %1090, %1087 ]
  %1097 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %398, i64 0, i32 3, i64 %1096
  %1098 = add nsw i64 %1096, 9
  %1099 = getelementptr i8, i8* %401, i64 %1098
  %1100 = getelementptr %struct.decNumber, %struct.decNumber* %398, i64 0, i32 3, i64 2
  %1101 = icmp ugt i8* %1099, %1100
  %1102 = select i1 %1101, i8* %1099, i8* %1100
  %1103 = sub i64 -10, %400
  %1104 = getelementptr i8, i8* %1102, i64 %1103
  %1105 = ptrtoint i8* %1104 to i64
  %1106 = icmp ult i8* %1104, inttoptr (i64 32 to i8*)
  br i1 %1106, label %1188, label %1107

1107:                                             ; preds = %1095
  %1108 = and i64 %1105, -32
  %1109 = getelementptr i8, i8* %1088, i64 %1108
  %1110 = getelementptr i8, i8* %560, i64 %1108
  %1111 = add i64 %1108, -32
  %1112 = lshr exact i64 %1111, 5
  %1113 = add nuw nsw i64 %1112, 1
  %1114 = and i64 %1113, 3
  %1115 = icmp ult i64 %1111, 96
  br i1 %1115, label %1167, label %1116

1116:                                             ; preds = %1107
  %1117 = sub nsw i64 %1113, %1114
  br label %1118

1118:                                             ; preds = %1118, %1116
  %1119 = phi i64 [ 0, %1116 ], [ %1164, %1118 ]
  %1120 = phi i64 [ %1117, %1116 ], [ %1165, %1118 ]
  %1121 = getelementptr i8, i8* %1088, i64 %1119
  %1122 = getelementptr i8, i8* %560, i64 %1119
  %1123 = bitcast i8* %1122 to <16 x i8>*
  %1124 = load <16 x i8>, <16 x i8>* %1123, align 1
  %1125 = getelementptr i8, i8* %1122, i64 16
  %1126 = bitcast i8* %1125 to <16 x i8>*
  %1127 = load <16 x i8>, <16 x i8>* %1126, align 1
  %1128 = bitcast i8* %1121 to <16 x i8>*
  store <16 x i8> %1124, <16 x i8>* %1128, align 1
  %1129 = getelementptr i8, i8* %1121, i64 16
  %1130 = bitcast i8* %1129 to <16 x i8>*
  store <16 x i8> %1127, <16 x i8>* %1130, align 1
  %1131 = or i64 %1119, 32
  %1132 = getelementptr i8, i8* %1088, i64 %1131
  %1133 = getelementptr i8, i8* %560, i64 %1131
  %1134 = bitcast i8* %1133 to <16 x i8>*
  %1135 = load <16 x i8>, <16 x i8>* %1134, align 1
  %1136 = getelementptr i8, i8* %1133, i64 16
  %1137 = bitcast i8* %1136 to <16 x i8>*
  %1138 = load <16 x i8>, <16 x i8>* %1137, align 1
  %1139 = bitcast i8* %1132 to <16 x i8>*
  store <16 x i8> %1135, <16 x i8>* %1139, align 1
  %1140 = getelementptr i8, i8* %1132, i64 16
  %1141 = bitcast i8* %1140 to <16 x i8>*
  store <16 x i8> %1138, <16 x i8>* %1141, align 1
  %1142 = or i64 %1119, 64
  %1143 = getelementptr i8, i8* %1088, i64 %1142
  %1144 = getelementptr i8, i8* %560, i64 %1142
  %1145 = bitcast i8* %1144 to <16 x i8>*
  %1146 = load <16 x i8>, <16 x i8>* %1145, align 1
  %1147 = getelementptr i8, i8* %1144, i64 16
  %1148 = bitcast i8* %1147 to <16 x i8>*
  %1149 = load <16 x i8>, <16 x i8>* %1148, align 1
  %1150 = bitcast i8* %1143 to <16 x i8>*
  store <16 x i8> %1146, <16 x i8>* %1150, align 1
  %1151 = getelementptr i8, i8* %1143, i64 16
  %1152 = bitcast i8* %1151 to <16 x i8>*
  store <16 x i8> %1149, <16 x i8>* %1152, align 1
  %1153 = or i64 %1119, 96
  %1154 = getelementptr i8, i8* %1088, i64 %1153
  %1155 = getelementptr i8, i8* %560, i64 %1153
  %1156 = bitcast i8* %1155 to <16 x i8>*
  %1157 = load <16 x i8>, <16 x i8>* %1156, align 1
  %1158 = getelementptr i8, i8* %1155, i64 16
  %1159 = bitcast i8* %1158 to <16 x i8>*
  %1160 = load <16 x i8>, <16 x i8>* %1159, align 1
  %1161 = bitcast i8* %1154 to <16 x i8>*
  store <16 x i8> %1157, <16 x i8>* %1161, align 1
  %1162 = getelementptr i8, i8* %1154, i64 16
  %1163 = bitcast i8* %1162 to <16 x i8>*
  store <16 x i8> %1160, <16 x i8>* %1163, align 1
  %1164 = add i64 %1119, 128
  %1165 = add i64 %1120, -4
  %1166 = icmp eq i64 %1165, 0
  br i1 %1166, label %1167, label %1118, !llvm.loop !245

1167:                                             ; preds = %1118, %1107
  %1168 = phi i64 [ 0, %1107 ], [ %1164, %1118 ]
  %1169 = icmp eq i64 %1114, 0
  br i1 %1169, label %1186, label %1170

1170:                                             ; preds = %1167, %1170
  %1171 = phi i64 [ %1183, %1170 ], [ %1168, %1167 ]
  %1172 = phi i64 [ %1184, %1170 ], [ %1114, %1167 ]
  %1173 = getelementptr i8, i8* %1088, i64 %1171
  %1174 = getelementptr i8, i8* %560, i64 %1171
  %1175 = bitcast i8* %1174 to <16 x i8>*
  %1176 = load <16 x i8>, <16 x i8>* %1175, align 1
  %1177 = getelementptr i8, i8* %1174, i64 16
  %1178 = bitcast i8* %1177 to <16 x i8>*
  %1179 = load <16 x i8>, <16 x i8>* %1178, align 1
  %1180 = bitcast i8* %1173 to <16 x i8>*
  store <16 x i8> %1176, <16 x i8>* %1180, align 1
  %1181 = getelementptr i8, i8* %1173, i64 16
  %1182 = bitcast i8* %1181 to <16 x i8>*
  store <16 x i8> %1179, <16 x i8>* %1182, align 1
  %1183 = add i64 %1171, 32
  %1184 = add i64 %1172, -1
  %1185 = icmp eq i64 %1184, 0
  br i1 %1185, label %1186, label %1170, !llvm.loop !246

1186:                                             ; preds = %1170, %1167
  %1187 = icmp eq i64 %1108, %1105
  br i1 %1187, label %1198, label %1188

1188:                                             ; preds = %1186, %1095
  %1189 = phi i8* [ %1088, %1095 ], [ %1109, %1186 ]
  %1190 = phi i8* [ %560, %1095 ], [ %1110, %1186 ]
  br label %1191

1191:                                             ; preds = %1188, %1191
  %1192 = phi i8* [ %1196, %1191 ], [ %1189, %1188 ]
  %1193 = phi i8* [ %1195, %1191 ], [ %1190, %1188 ]
  %1194 = load i8, i8* %1193, align 1
  store i8 %1194, i8* %1192, align 1
  %1195 = getelementptr inbounds i8, i8* %1193, i64 1
  %1196 = getelementptr inbounds i8, i8* %1192, i64 1
  %1197 = icmp ult i8* %1195, %1097
  br i1 %1197, label %1191, label %1198, !llvm.loop !247

1198:                                             ; preds = %701, %1191, %696, %1186, %1077, %1075, %587, %585, %392
  %1199 = phi i8* [ %385, %392 ], [ %394, %585 ], [ %394, %587 ], [ %394, %1075 ], [ %394, %1077 ], [ %394, %1186 ], [ %394, %696 ], [ %394, %1191 ], [ %394, %701 ]
  %1200 = phi %struct.decNumber* [ %386, %392 ], [ %395, %585 ], [ %395, %587 ], [ %395, %1075 ], [ %395, %1077 ], [ %395, %1186 ], [ %395, %696 ], [ %395, %1191 ], [ %395, %701 ]
  %1201 = phi i8* [ %387, %392 ], [ %396, %585 ], [ %396, %587 ], [ %396, %1075 ], [ %396, %1077 ], [ %396, %1186 ], [ %396, %696 ], [ %396, %1191 ], [ %396, %701 ]
  %1202 = phi %struct.decNumber* [ %388, %392 ], [ %397, %585 ], [ %397, %587 ], [ %397, %1075 ], [ %397, %1077 ], [ %397, %1186 ], [ %397, %696 ], [ %397, %1191 ], [ %397, %701 ]
  %1203 = icmp eq %struct.decNumber* %371, null
  br i1 %1203, label %1205, label %1204

1204:                                             ; preds = %1198
  call void @uprv_free_69(i8* %370) #8
  br label %1205

1205:                                             ; preds = %1198, %1204
  %1206 = icmp eq %struct.decNumber* %1200, null
  br i1 %1206, label %1208, label %1207

1207:                                             ; preds = %1205
  call void @uprv_free_69(i8* %1199) #8
  br label %1208

1208:                                             ; preds = %1205, %1207
  %1209 = icmp eq %struct.decNumber* %1202, null
  br i1 %1209, label %1211, label %1210

1210:                                             ; preds = %1208
  call void @uprv_free_69(i8* %1201) #8
  br label %1211

1211:                                             ; preds = %179, %174, %47, %45, %337, %186, %1208, %1210
  %1212 = load i32, i32* %11, align 4
  %1213 = icmp eq i32 %1212, 0
  br i1 %1213, label %1231, label %1214

1214:                                             ; preds = %1211
  %1215 = and i32 %1212, 221
  %1216 = icmp eq i32 %1215, 0
  br i1 %1216, label %1228, label %1217

1217:                                             ; preds = %1214
  %1218 = and i32 %1212, 1073741824
  %1219 = icmp eq i32 %1218, 0
  br i1 %1219, label %1222, label %1220

1220:                                             ; preds = %1217
  %1221 = and i32 %1212, -1073741825
  br label %1228

1222:                                             ; preds = %368, %44, %341, %1217
  %1223 = phi i32 [ %1212, %1217 ], [ 128, %341 ], [ 128, %44 ], [ 16, %368 ]
  %1224 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %1225 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %1225, align 4
  %1226 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %1226, align 4
  %1227 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %1227, align 1
  store i8 32, i8* %1224, align 4
  br label %1228

1228:                                             ; preds = %1214, %1220, %1222
  %1229 = phi i32 [ %1221, %1220 ], [ %1223, %1222 ], [ %1212, %1214 ]
  %1230 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 %1229) #8
  br label %1231

1231:                                             ; preds = %1211, %1228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #8
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %28) #8
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %19) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberSubtract_69(%struct.decNumber* returned, %struct.decNumber*, %struct.decNumber*, %struct.decContext*) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 0, i32* %5, align 4
  call fastcc void @_ZL8decAddOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext -128, i32* nonnull %5)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = and i32 %7, 221
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 1073741824
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = and i32 %7, -1073741825
  br label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %21, align 1
  store i8 32, i8* %18, align 4
  br label %22

22:                                               ; preds = %9, %15, %17
  %23 = phi i32 [ %16, %15 ], [ %7, %17 ], [ %7, %9 ]
  %24 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 %23) #8
  br label %25

25:                                               ; preds = %4, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberToIntegralExact_69(%struct.decNumber*, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %4 = bitcast %struct.decNumber* %0 to i8*
  %5 = ptrtoint %struct.decNumber* %1 to i64
  %6 = bitcast %struct.decNumber* %1 to i8*
  %7 = alloca i32, align 4
  %8 = alloca %struct.decNumber, align 4
  %9 = alloca %struct.decContext, align 4
  %10 = alloca i32, align 4
  %11 = bitcast %struct.decNumber* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 12, i1 false)
  %12 = bitcast %struct.decContext* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -86, i64 28, i1 false)
  %13 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8
  store i32 0, i32* %10, align 4
  %14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %15 = load i8, i8* %14, align 4
  %16 = zext i8 %15 to i32
  %17 = and i32 %16, 112
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %164, label %19

19:                                               ; preds = %3
  %20 = and i32 %16, 64
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %163, label %22

22:                                               ; preds = %19
  %23 = icmp eq %struct.decNumber* %0, %1
  br i1 %23, label %340, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %15, i8* %25, align 4
  %26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %33, i8* %34, align 1
  %35 = load i32, i32* %29, align 4
  %36 = icmp sgt i32 %35, 1
  br i1 %36, label %37, label %340

37:                                               ; preds = %24
  %38 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %39 = icmp slt i32 %35, 50
  %40 = sext i32 %35 to i64
  br i1 %39, label %41, label %45

41:                                               ; preds = %37
  %42 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %40
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i64
  br label %45

45:                                               ; preds = %41, %37
  %46 = phi i64 [ %44, %41 ], [ %40, %37 ]
  %47 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %46
  %48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %49 = add nsw i64 %46, 9
  %50 = getelementptr i8, i8* %6, i64 %49
  %51 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %52 = icmp ugt i8* %50, %51
  %53 = select i1 %52, i8* %50, i8* %51
  %54 = sub i64 -10, %5
  %55 = getelementptr i8, i8* %53, i64 %54
  %56 = ptrtoint i8* %55 to i64
  %57 = icmp ult i8* %55, inttoptr (i64 32 to i8*)
  br i1 %57, label %153, label %58

58:                                               ; preds = %45
  %59 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %60 = add nsw i64 %46, 9
  %61 = getelementptr i8, i8* %6, i64 %60
  %62 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %63 = icmp ugt i8* %61, %62
  %64 = select i1 %63, i8* %61, i8* %62
  %65 = ptrtoint i8* %64 to i64
  %66 = sub i64 %65, %5
  %67 = getelementptr i8, i8* %4, i64 %66
  %68 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %69 = icmp ult i8* %59, %64
  %70 = icmp ult i8* %68, %67
  %71 = and i1 %69, %70
  br i1 %71, label %153, label %72

72:                                               ; preds = %58
  %73 = and i64 %56, -32
  %74 = getelementptr i8, i8* %38, i64 %73
  %75 = getelementptr i8, i8* %48, i64 %73
  %76 = add i64 %73, -32
  %77 = lshr exact i64 %76, 5
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 96
  br i1 %80, label %132, label %81

81:                                               ; preds = %72
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i8, i8* %38, i64 %84
  %87 = getelementptr i8, i8* %48, i64 %84
  %88 = bitcast i8* %87 to <16 x i8>*
  %89 = load <16 x i8>, <16 x i8>* %88, align 1, !alias.scope !248
  %90 = getelementptr i8, i8* %87, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !248
  %93 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %89, <16 x i8>* %93, align 1, !alias.scope !251, !noalias !248
  %94 = getelementptr i8, i8* %86, i64 16
  %95 = bitcast i8* %94 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %95, align 1, !alias.scope !251, !noalias !248
  %96 = or i64 %84, 32
  %97 = getelementptr i8, i8* %38, i64 %96
  %98 = getelementptr i8, i8* %48, i64 %96
  %99 = bitcast i8* %98 to <16 x i8>*
  %100 = load <16 x i8>, <16 x i8>* %99, align 1, !alias.scope !248
  %101 = getelementptr i8, i8* %98, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !alias.scope !248
  %104 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %100, <16 x i8>* %104, align 1, !alias.scope !251, !noalias !248
  %105 = getelementptr i8, i8* %97, i64 16
  %106 = bitcast i8* %105 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %106, align 1, !alias.scope !251, !noalias !248
  %107 = or i64 %84, 64
  %108 = getelementptr i8, i8* %38, i64 %107
  %109 = getelementptr i8, i8* %48, i64 %107
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !248
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !248
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !251, !noalias !248
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !251, !noalias !248
  %118 = or i64 %84, 96
  %119 = getelementptr i8, i8* %38, i64 %118
  %120 = getelementptr i8, i8* %48, i64 %118
  %121 = bitcast i8* %120 to <16 x i8>*
  %122 = load <16 x i8>, <16 x i8>* %121, align 1, !alias.scope !248
  %123 = getelementptr i8, i8* %120, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  %125 = load <16 x i8>, <16 x i8>* %124, align 1, !alias.scope !248
  %126 = bitcast i8* %119 to <16 x i8>*
  store <16 x i8> %122, <16 x i8>* %126, align 1, !alias.scope !251, !noalias !248
  %127 = getelementptr i8, i8* %119, i64 16
  %128 = bitcast i8* %127 to <16 x i8>*
  store <16 x i8> %125, <16 x i8>* %128, align 1, !alias.scope !251, !noalias !248
  %129 = add i64 %84, 128
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !253

132:                                              ; preds = %83, %72
  %133 = phi i64 [ 0, %72 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i8, i8* %38, i64 %136
  %139 = getelementptr i8, i8* %48, i64 %136
  %140 = bitcast i8* %139 to <16 x i8>*
  %141 = load <16 x i8>, <16 x i8>* %140, align 1, !alias.scope !248
  %142 = getelementptr i8, i8* %139, i64 16
  %143 = bitcast i8* %142 to <16 x i8>*
  %144 = load <16 x i8>, <16 x i8>* %143, align 1, !alias.scope !248
  %145 = bitcast i8* %138 to <16 x i8>*
  store <16 x i8> %141, <16 x i8>* %145, align 1, !alias.scope !251, !noalias !248
  %146 = getelementptr i8, i8* %138, i64 16
  %147 = bitcast i8* %146 to <16 x i8>*
  store <16 x i8> %144, <16 x i8>* %147, align 1, !alias.scope !251, !noalias !248
  %148 = add i64 %136, 32
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !254

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %73, %56
  br i1 %152, label %340, label %153

153:                                              ; preds = %151, %58, %45
  %154 = phi i8* [ %38, %58 ], [ %38, %45 ], [ %74, %151 ]
  %155 = phi i8* [ %48, %58 ], [ %48, %45 ], [ %75, %151 ]
  br label %156

156:                                              ; preds = %153, %156
  %157 = phi i8* [ %161, %156 ], [ %154, %153 ]
  %158 = phi i8* [ %160, %156 ], [ %155, %153 ]
  %159 = load i8, i8* %158, align 1
  store i8 %159, i8* %157, align 1
  %160 = getelementptr inbounds i8, i8* %158, i64 1
  %161 = getelementptr inbounds i8, i8* %157, i64 1
  %162 = icmp ult i8* %160, %47
  br i1 %162, label %156, label %340, !llvm.loop !255

163:                                              ; preds = %19
  call fastcc void @_ZL7decNaNsP9decNumberPKS_S2_P10decContextPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* null, %struct.decContext* %2, i32* nonnull %10)
  br label %340

164:                                              ; preds = %3
  %165 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = icmp sgt i32 %166, -1
  br i1 %167, label %168, label %308

168:                                              ; preds = %164
  %169 = icmp eq %struct.decNumber* %0, %1
  br i1 %169, label %361, label %170

170:                                              ; preds = %168
  %171 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %15, i8* %171, align 4
  %172 = load i32, i32* %165, align 4
  %173 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %172, i32* %173, align 4
  %174 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %175, i32* %176, align 4
  %177 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %178 = load i8, i8* %177, align 1
  %179 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %178, i8* %179, align 1
  %180 = load i32, i32* %174, align 4
  %181 = icmp sgt i32 %180, 1
  br i1 %181, label %182, label %361

182:                                              ; preds = %170
  %183 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %184 = icmp slt i32 %180, 50
  %185 = sext i32 %180 to i64
  br i1 %184, label %186, label %190

186:                                              ; preds = %182
  %187 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %185
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i64
  br label %190

190:                                              ; preds = %186, %182
  %191 = phi i64 [ %189, %186 ], [ %185, %182 ]
  %192 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %191
  %193 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %194 = add nsw i64 %191, 9
  %195 = getelementptr i8, i8* %6, i64 %194
  %196 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %197 = icmp ugt i8* %195, %196
  %198 = select i1 %197, i8* %195, i8* %196
  %199 = sub i64 -10, %5
  %200 = getelementptr i8, i8* %198, i64 %199
  %201 = ptrtoint i8* %200 to i64
  %202 = icmp ult i8* %200, inttoptr (i64 32 to i8*)
  br i1 %202, label %298, label %203

203:                                              ; preds = %190
  %204 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %205 = add nsw i64 %191, 9
  %206 = getelementptr i8, i8* %6, i64 %205
  %207 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %208 = icmp ugt i8* %206, %207
  %209 = select i1 %208, i8* %206, i8* %207
  %210 = ptrtoint i8* %209 to i64
  %211 = sub i64 %210, %5
  %212 = getelementptr i8, i8* %4, i64 %211
  %213 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %214 = icmp ult i8* %204, %209
  %215 = icmp ult i8* %213, %212
  %216 = and i1 %214, %215
  br i1 %216, label %298, label %217

217:                                              ; preds = %203
  %218 = and i64 %201, -32
  %219 = getelementptr i8, i8* %183, i64 %218
  %220 = getelementptr i8, i8* %193, i64 %218
  %221 = add i64 %218, -32
  %222 = lshr exact i64 %221, 5
  %223 = add nuw nsw i64 %222, 1
  %224 = and i64 %223, 3
  %225 = icmp ult i64 %221, 96
  br i1 %225, label %277, label %226

226:                                              ; preds = %217
  %227 = sub nsw i64 %223, %224
  br label %228

228:                                              ; preds = %228, %226
  %229 = phi i64 [ 0, %226 ], [ %274, %228 ]
  %230 = phi i64 [ %227, %226 ], [ %275, %228 ]
  %231 = getelementptr i8, i8* %183, i64 %229
  %232 = getelementptr i8, i8* %193, i64 %229
  %233 = bitcast i8* %232 to <16 x i8>*
  %234 = load <16 x i8>, <16 x i8>* %233, align 1, !alias.scope !256
  %235 = getelementptr i8, i8* %232, i64 16
  %236 = bitcast i8* %235 to <16 x i8>*
  %237 = load <16 x i8>, <16 x i8>* %236, align 1, !alias.scope !256
  %238 = bitcast i8* %231 to <16 x i8>*
  store <16 x i8> %234, <16 x i8>* %238, align 1, !alias.scope !259, !noalias !256
  %239 = getelementptr i8, i8* %231, i64 16
  %240 = bitcast i8* %239 to <16 x i8>*
  store <16 x i8> %237, <16 x i8>* %240, align 1, !alias.scope !259, !noalias !256
  %241 = or i64 %229, 32
  %242 = getelementptr i8, i8* %183, i64 %241
  %243 = getelementptr i8, i8* %193, i64 %241
  %244 = bitcast i8* %243 to <16 x i8>*
  %245 = load <16 x i8>, <16 x i8>* %244, align 1, !alias.scope !256
  %246 = getelementptr i8, i8* %243, i64 16
  %247 = bitcast i8* %246 to <16 x i8>*
  %248 = load <16 x i8>, <16 x i8>* %247, align 1, !alias.scope !256
  %249 = bitcast i8* %242 to <16 x i8>*
  store <16 x i8> %245, <16 x i8>* %249, align 1, !alias.scope !259, !noalias !256
  %250 = getelementptr i8, i8* %242, i64 16
  %251 = bitcast i8* %250 to <16 x i8>*
  store <16 x i8> %248, <16 x i8>* %251, align 1, !alias.scope !259, !noalias !256
  %252 = or i64 %229, 64
  %253 = getelementptr i8, i8* %183, i64 %252
  %254 = getelementptr i8, i8* %193, i64 %252
  %255 = bitcast i8* %254 to <16 x i8>*
  %256 = load <16 x i8>, <16 x i8>* %255, align 1, !alias.scope !256
  %257 = getelementptr i8, i8* %254, i64 16
  %258 = bitcast i8* %257 to <16 x i8>*
  %259 = load <16 x i8>, <16 x i8>* %258, align 1, !alias.scope !256
  %260 = bitcast i8* %253 to <16 x i8>*
  store <16 x i8> %256, <16 x i8>* %260, align 1, !alias.scope !259, !noalias !256
  %261 = getelementptr i8, i8* %253, i64 16
  %262 = bitcast i8* %261 to <16 x i8>*
  store <16 x i8> %259, <16 x i8>* %262, align 1, !alias.scope !259, !noalias !256
  %263 = or i64 %229, 96
  %264 = getelementptr i8, i8* %183, i64 %263
  %265 = getelementptr i8, i8* %193, i64 %263
  %266 = bitcast i8* %265 to <16 x i8>*
  %267 = load <16 x i8>, <16 x i8>* %266, align 1, !alias.scope !256
  %268 = getelementptr i8, i8* %265, i64 16
  %269 = bitcast i8* %268 to <16 x i8>*
  %270 = load <16 x i8>, <16 x i8>* %269, align 1, !alias.scope !256
  %271 = bitcast i8* %264 to <16 x i8>*
  store <16 x i8> %267, <16 x i8>* %271, align 1, !alias.scope !259, !noalias !256
  %272 = getelementptr i8, i8* %264, i64 16
  %273 = bitcast i8* %272 to <16 x i8>*
  store <16 x i8> %270, <16 x i8>* %273, align 1, !alias.scope !259, !noalias !256
  %274 = add i64 %229, 128
  %275 = add i64 %230, -4
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %277, label %228, !llvm.loop !261

277:                                              ; preds = %228, %217
  %278 = phi i64 [ 0, %217 ], [ %274, %228 ]
  %279 = icmp eq i64 %224, 0
  br i1 %279, label %296, label %280

280:                                              ; preds = %277, %280
  %281 = phi i64 [ %293, %280 ], [ %278, %277 ]
  %282 = phi i64 [ %294, %280 ], [ %224, %277 ]
  %283 = getelementptr i8, i8* %183, i64 %281
  %284 = getelementptr i8, i8* %193, i64 %281
  %285 = bitcast i8* %284 to <16 x i8>*
  %286 = load <16 x i8>, <16 x i8>* %285, align 1, !alias.scope !256
  %287 = getelementptr i8, i8* %284, i64 16
  %288 = bitcast i8* %287 to <16 x i8>*
  %289 = load <16 x i8>, <16 x i8>* %288, align 1, !alias.scope !256
  %290 = bitcast i8* %283 to <16 x i8>*
  store <16 x i8> %286, <16 x i8>* %290, align 1, !alias.scope !259, !noalias !256
  %291 = getelementptr i8, i8* %283, i64 16
  %292 = bitcast i8* %291 to <16 x i8>*
  store <16 x i8> %289, <16 x i8>* %292, align 1, !alias.scope !259, !noalias !256
  %293 = add i64 %281, 32
  %294 = add i64 %282, -1
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %280, !llvm.loop !262

296:                                              ; preds = %280, %277
  %297 = icmp eq i64 %218, %201
  br i1 %297, label %361, label %298

298:                                              ; preds = %296, %203, %190
  %299 = phi i8* [ %183, %203 ], [ %183, %190 ], [ %219, %296 ]
  %300 = phi i8* [ %193, %203 ], [ %193, %190 ], [ %220, %296 ]
  br label %301

301:                                              ; preds = %298, %301
  %302 = phi i8* [ %306, %301 ], [ %299, %298 ]
  %303 = phi i8* [ %305, %301 ], [ %300, %298 ]
  %304 = load i8, i8* %303, align 1
  store i8 %304, i8* %302, align 1
  %305 = getelementptr inbounds i8, i8* %303, i64 1
  %306 = getelementptr inbounds i8, i8* %302, i64 1
  %307 = icmp ult i8* %305, %192
  br i1 %307, label %301, label %361, !llvm.loop !263

308:                                              ; preds = %164
  %309 = bitcast %struct.decContext* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %12, i8* align 4 %309, i64 28, i1 false)
  %310 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  %312 = getelementptr inbounds %struct.decContext, %struct.decContext* %9, i64 0, i32 0
  store i32 %311, i32* %312, align 4
  %313 = getelementptr inbounds %struct.decContext, %struct.decContext* %9, i64 0, i32 4
  store i32 0, i32* %313, align 4
  %314 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 2
  store i8 0, i8* %314, align 4
  %315 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 1
  store i32 0, i32* %315, align 4
  %316 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 0
  store i32 1, i32* %316, align 4
  %317 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i64 0, i32 3, i64 0
  store i8 0, i8* %317, align 1
  %318 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %318) #8
  store i32 0, i32* %7, align 4
  call fastcc void @_ZL13decQuantizeOpP9decNumberPKS_S2_P10decContexthPj(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* nonnull %8, %struct.decContext* nonnull %9, i8 zeroext 1, i32* nonnull %7) #8
  %319 = load i32, i32* %7, align 4
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %337, label %321

321:                                              ; preds = %308
  %322 = and i32 %319, 221
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %334, label %324

324:                                              ; preds = %321
  %325 = and i32 %319, 1073741824
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %329, label %327

327:                                              ; preds = %324
  %328 = and i32 %319, -1073741825
  br label %334

329:                                              ; preds = %324
  %330 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %331 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %331, align 4
  %332 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %332, align 4
  %333 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %333, align 1
  store i8 32, i8* %330, align 4
  br label %334

334:                                              ; preds = %329, %327, %321
  %335 = phi i32 [ %328, %327 ], [ %319, %329 ], [ %319, %321 ]
  %336 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* nonnull %9, i32 %335) #8
  br label %337

337:                                              ; preds = %308, %334
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %318) #8
  %338 = getelementptr inbounds %struct.decContext, %struct.decContext* %9, i64 0, i32 5
  %339 = load i32, i32* %338, align 4
  store i32 %339, i32* %10, align 4
  br label %342

340:                                              ; preds = %156, %151, %163, %22, %24
  %341 = load i32, i32* %10, align 4
  br label %342

342:                                              ; preds = %340, %337
  %343 = phi i32 [ %341, %340 ], [ %339, %337 ]
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %361, label %345

345:                                              ; preds = %342
  %346 = and i32 %343, 221
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %358, label %348

348:                                              ; preds = %345
  %349 = and i32 %343, 1073741824
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %353, label %351

351:                                              ; preds = %348
  %352 = and i32 %343, -1073741825
  br label %358

353:                                              ; preds = %348
  %354 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %355 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %355, align 4
  %356 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %356, align 4
  %357 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %357, align 1
  store i8 32, i8* %354, align 4
  br label %358

358:                                              ; preds = %345, %351, %353
  %359 = phi i32 [ %352, %351 ], [ %343, %353 ], [ %343, %345 ]
  %360 = call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %2, i32 %359) #8
  br label %361

361:                                              ; preds = %301, %296, %170, %168, %358, %342
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberToIntegralValue_69(%struct.decNumber* returned, %struct.decNumber* readonly, %struct.decContext* nocapture) local_unnamed_addr #3 {
  %4 = alloca %struct.decContext, align 4
  %5 = bitcast %struct.decContext* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %5) #8
  %6 = bitcast %struct.decContext* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 %6, i64 28, i1 false)
  %7 = getelementptr inbounds %struct.decContext, %struct.decContext* %4, i64 0, i32 4
  store i32 0, i32* %7, align 4
  %8 = call %struct.decNumber* @uprv_decNumberToIntegralExact_69(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decContext* nonnull %4)
  %9 = getelementptr inbounds %struct.decContext, %struct.decContext* %4, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 128
  %12 = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i64 0, i32 5
  %13 = load i32, i32* %12, align 4
  %14 = or i32 %13, %11
  store i32 %14, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %5) #8
  ret %struct.decNumber* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberXor_69(%struct.decNumber*, %struct.decNumber* readonly, %struct.decNumber* readonly, %struct.decContext*) local_unnamed_addr #3 {
  %5 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %20

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 4
  %11 = icmp ugt i8 %10, 15
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 2
  %18 = load i8, i8* %17, align 4
  %19 = icmp ugt i8 %18, 15
  br i1 %19, label %20, label %26

20:                                               ; preds = %16, %8, %12, %4
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %22 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %23, align 4
  %24 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 0, i8* %24, align 1
  store i8 32, i8* %21, align 4
  %25 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 128) #8
  br label %133

26:                                               ; preds = %16
  %27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %28 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 0
  %29 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %30 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, 50
  br i1 %32, label %33, label %38

33:                                               ; preds = %26
  %34 = sext i32 %31 to i64
  %35 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  br label %38

38:                                               ; preds = %26, %33
  %39 = phi i32 [ %37, %33 ], [ %31, %26 ]
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %40
  %42 = getelementptr inbounds i8, i8* %41, i64 -1
  %43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, 50
  br i1 %45, label %46, label %51

46:                                               ; preds = %38
  %47 = sext i32 %44 to i64
  %48 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  br label %51

51:                                               ; preds = %38, %46
  %52 = phi i32 [ %50, %46 ], [ %44, %38 ]
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i64 0, i32 3, i64 %53
  %55 = getelementptr inbounds i8, i8* %54, i64 -1
  %56 = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %57, 50
  %59 = sext i32 %57 to i64
  br i1 %58, label %60, label %64

60:                                               ; preds = %51
  %61 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %59
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i64
  br label %64

64:                                               ; preds = %51, %60
  %65 = phi i64 [ %63, %60 ], [ %59, %51 ]
  %66 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %65
  %67 = getelementptr inbounds i8, i8* %66, i64 -1
  %68 = icmp ugt i8* %29, %67
  br i1 %68, label %105, label %69

69:                                               ; preds = %64, %100
  %70 = phi i8* [ %103, %100 ], [ %29, %64 ]
  %71 = phi i8* [ %102, %100 ], [ %28, %64 ]
  %72 = phi i8* [ %101, %100 ], [ %27, %64 ]
  %73 = icmp ugt i8* %72, %42
  br i1 %73, label %76, label %74

74:                                               ; preds = %69
  %75 = load i8, i8* %72, align 1
  br label %76

76:                                               ; preds = %69, %74
  %77 = phi i8 [ %75, %74 ], [ 0, %69 ]
  %78 = icmp ugt i8* %71, %55
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = load i8, i8* %71, align 1
  br label %81

81:                                               ; preds = %76, %79
  %82 = phi i8 [ %80, %79 ], [ 0, %76 ]
  store i8 0, i8* %70, align 1
  %83 = or i8 %82, %77
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %100, label %85

85:                                               ; preds = %81
  %86 = xor i8 %82, %77
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  store i8 1, i8* %70, align 1
  br label %90

90:                                               ; preds = %85, %89
  %91 = urem i8 %77, 10
  %92 = urem i8 %82, 10
  %93 = or i8 %92, %91
  %94 = icmp ugt i8 %93, 1
  br i1 %94, label %95, label %100

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %97 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %97, align 4
  %98 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %98, align 4
  store i8 0, i8* %29, align 1
  store i8 32, i8* %96, align 4
  %99 = tail call %struct.decContext* @uprv_decContextSetStatus_69(%struct.decContext* %3, i32 128) #8
  br label %133

100:                                              ; preds = %90, %81
  %101 = getelementptr inbounds i8, i8* %72, i64 1
  %102 = getelementptr inbounds i8, i8* %71, i64 1
  %103 = getelementptr inbounds i8, i8* %70, i64 1
  %104 = icmp ugt i8* %103, %67
  br i1 %104, label %105, label %69

105:                                              ; preds = %100, %64
  %106 = phi i8* [ %29, %64 ], [ %103, %100 ]
  %107 = ptrtoint i8* %106 to i64
  %108 = ptrtoint i8* %29 to i64
  %109 = sub i64 %107, %108
  %110 = trunc i64 %109 to i32
  %111 = icmp slt i32 %110, 1
  br i1 %111, label %128, label %112

112:                                              ; preds = %105
  %113 = shl i64 %109, 32
  %114 = add i64 %113, -4294967296
  %115 = ashr exact i64 %114, 32
  %116 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %115
  br label %117

117:                                              ; preds = %124, %112
  %118 = phi i32 [ %125, %124 ], [ %110, %112 ]
  %119 = phi i8* [ %126, %124 ], [ %116, %112 ]
  %120 = load i8, i8* %119, align 1
  %121 = icmp ne i8 %120, 0
  %122 = icmp eq i32 %118, 1
  %123 = or i1 %122, %121
  br i1 %123, label %128, label %124

124:                                              ; preds = %117
  %125 = add nsw i32 %118, -1
  %126 = getelementptr inbounds i8, i8* %119, i64 -1
  %127 = icmp ult i8* %126, %29
  br i1 %127, label %128, label %117

128:                                              ; preds = %117, %124, %105
  %129 = phi i32 [ %110, %105 ], [ %118, %117 ], [ %125, %124 ]
  %130 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %129, i32* %130, align 4
  %131 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %131, align 4
  %132 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 0, i8* %132, align 4
  br label %133

133:                                              ; preds = %95, %128, %20
  ret %struct.decNumber* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_Z19uprv_decNumberClassPK9decNumberP10decContext(%struct.decNumber* nocapture readonly, %struct.decContext* nocapture readonly) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = zext i8 %4 to i32
  %6 = and i32 %5, 112
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = and i32 %5, 32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %52

11:                                               ; preds = %8
  %12 = and i32 %5, 16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %52

14:                                               ; preds = %11
  %15 = icmp slt i8 %4, 0
  %16 = select i1 %15, i32 2, i32 9
  br label %52

17:                                               ; preds = %2
  %18 = and i8 %4, 112
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %21 = load i8, i8* %20, align 1
  br i1 %19, label %22, label %38

22:                                               ; preds = %17
  %23 = icmp eq i8 %21, 0
  %24 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 1
  %27 = and i1 %23, %26
  br i1 %27, label %40, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, %25
  %32 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  %36 = icmp slt i8 %4, 0
  %37 = select i1 %36, i32 3, i32 8
  br label %52

38:                                               ; preds = %17, %28
  %39 = icmp eq i8 %21, 0
  br i1 %39, label %40, label %49

40:                                               ; preds = %22, %38
  %41 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp ne i32 %42, 1
  %44 = xor i1 %19, true
  %45 = or i1 %43, %44
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = icmp slt i8 %4, 0
  %48 = select i1 %47, i32 5, i32 6
  br label %52

49:                                               ; preds = %40, %38
  %50 = icmp slt i8 %4, 0
  %51 = select i1 %50, i32 4, i32 7
  br label %52

52:                                               ; preds = %49, %46, %35, %14, %11, %8
  %53 = phi i32 [ 1, %8 ], [ 0, %11 ], [ %16, %14 ], [ %37, %35 ], [ %48, %46 ], [ %51, %49 ]
  ret i32 %53
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @uprv_decNumberClassToString_69(i32) local_unnamed_addr #7 {
  %2 = icmp ult i32 %0, 10
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [10 x i8*], [10 x i8*]* @switch.table.uprv_decNumberClassToString_69, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberCopyNegate_69(%struct.decNumber* returned, %struct.decNumber* readonly) local_unnamed_addr #0 {
  %3 = bitcast %struct.decNumber* %0 to i8*
  %4 = ptrtoint %struct.decNumber* %1 to i64
  %5 = bitcast %struct.decNumber* %1 to i8*
  %6 = icmp eq %struct.decNumber* %0, %1
  br i1 %6, label %148, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  store i8 %9, i8* %10, align 4
  %11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 0
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  store i8 %18, i8* %19, align 1
  %20 = load i32, i32* %14, align 4
  %21 = icmp sgt i32 %20, 1
  br i1 %21, label %22, label %148

22:                                               ; preds = %7
  %23 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %24 = icmp slt i32 %20, 50
  %25 = sext i32 %20 to i64
  br i1 %24, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %25
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  br label %30

30:                                               ; preds = %26, %22
  %31 = phi i64 [ %29, %26 ], [ %25, %22 ]
  %32 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 %31
  %33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %34 = add nsw i64 %31, 9
  %35 = getelementptr i8, i8* %5, i64 %34
  %36 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %37 = icmp ugt i8* %35, %36
  %38 = select i1 %37, i8* %35, i8* %36
  %39 = sub i64 -10, %4
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = icmp ult i8* %40, inttoptr (i64 32 to i8*)
  br i1 %42, label %138, label %43

43:                                               ; preds = %30
  %44 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 1
  %45 = add nsw i64 %31, 9
  %46 = getelementptr i8, i8* %5, i64 %45
  %47 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 2
  %48 = icmp ugt i8* %46, %47
  %49 = select i1 %48, i8* %46, i8* %47
  %50 = ptrtoint i8* %49 to i64
  %51 = sub i64 %50, %4
  %52 = getelementptr i8, i8* %3, i64 %51
  %53 = getelementptr %struct.decNumber, %struct.decNumber* %1, i64 0, i32 3, i64 1
  %54 = icmp ult i8* %44, %49
  %55 = icmp ult i8* %53, %52
  %56 = and i1 %54, %55
  br i1 %56, label %138, label %57

57:                                               ; preds = %43
  %58 = and i64 %41, -32
  %59 = getelementptr i8, i8* %23, i64 %58
  %60 = getelementptr i8, i8* %33, i64 %58
  %61 = add i64 %58, -32
  %62 = lshr exact i64 %61, 5
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 96
  br i1 %65, label %117, label %66

66:                                               ; preds = %57
  %67 = sub nsw i64 %63, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %114, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %115, %68 ]
  %71 = getelementptr i8, i8* %23, i64 %69
  %72 = getelementptr i8, i8* %33, i64 %69
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1, !alias.scope !264
  %75 = getelementptr i8, i8* %72, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  %77 = load <16 x i8>, <16 x i8>* %76, align 1, !alias.scope !264
  %78 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %74, <16 x i8>* %78, align 1, !alias.scope !267, !noalias !264
  %79 = getelementptr i8, i8* %71, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  store <16 x i8> %77, <16 x i8>* %80, align 1, !alias.scope !267, !noalias !264
  %81 = or i64 %69, 32
  %82 = getelementptr i8, i8* %23, i64 %81
  %83 = getelementptr i8, i8* %33, i64 %81
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1, !alias.scope !264
  %86 = getelementptr i8, i8* %83, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1, !alias.scope !264
  %89 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %89, align 1, !alias.scope !267, !noalias !264
  %90 = getelementptr i8, i8* %82, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %91, align 1, !alias.scope !267, !noalias !264
  %92 = or i64 %69, 64
  %93 = getelementptr i8, i8* %23, i64 %92
  %94 = getelementptr i8, i8* %33, i64 %92
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1, !alias.scope !264
  %97 = getelementptr i8, i8* %94, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1, !alias.scope !264
  %100 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %100, align 1, !alias.scope !267, !noalias !264
  %101 = getelementptr i8, i8* %93, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %102, align 1, !alias.scope !267, !noalias !264
  %103 = or i64 %69, 96
  %104 = getelementptr i8, i8* %23, i64 %103
  %105 = getelementptr i8, i8* %33, i64 %103
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !264
  %108 = getelementptr i8, i8* %105, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1, !alias.scope !264
  %111 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %111, align 1, !alias.scope !267, !noalias !264
  %112 = getelementptr i8, i8* %104, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %113, align 1, !alias.scope !267, !noalias !264
  %114 = add i64 %69, 128
  %115 = add i64 %70, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %68, !llvm.loop !269

117:                                              ; preds = %68, %57
  %118 = phi i64 [ 0, %57 ], [ %114, %68 ]
  %119 = icmp eq i64 %64, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %133, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %134, %120 ], [ %64, %117 ]
  %123 = getelementptr i8, i8* %23, i64 %121
  %124 = getelementptr i8, i8* %33, i64 %121
  %125 = bitcast i8* %124 to <16 x i8>*
  %126 = load <16 x i8>, <16 x i8>* %125, align 1, !alias.scope !264
  %127 = getelementptr i8, i8* %124, i64 16
  %128 = bitcast i8* %127 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1, !alias.scope !264
  %130 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %126, <16 x i8>* %130, align 1, !alias.scope !267, !noalias !264
  %131 = getelementptr i8, i8* %123, i64 16
  %132 = bitcast i8* %131 to <16 x i8>*
  store <16 x i8> %129, <16 x i8>* %132, align 1, !alias.scope !267, !noalias !264
  %133 = add i64 %121, 32
  %134 = add i64 %122, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %120, !llvm.loop !270

136:                                              ; preds = %120, %117
  %137 = icmp eq i64 %58, %41
  br i1 %137, label %148, label %138

138:                                              ; preds = %136, %43, %30
  %139 = phi i8* [ %23, %43 ], [ %23, %30 ], [ %59, %136 ]
  %140 = phi i8* [ %33, %43 ], [ %33, %30 ], [ %60, %136 ]
  br label %141

141:                                              ; preds = %138, %141
  %142 = phi i8* [ %146, %141 ], [ %139, %138 ]
  %143 = phi i8* [ %145, %141 ], [ %140, %138 ]
  %144 = load i8, i8* %143, align 1
  store i8 %144, i8* %142, align 1
  %145 = getelementptr inbounds i8, i8* %143, i64 1
  %146 = getelementptr inbounds i8, i8* %142, i64 1
  %147 = icmp ult i8* %145, %32
  br i1 %147, label %141, label %148, !llvm.loop !271

148:                                              ; preds = %141, %136, %2, %7
  %149 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %150 = load i8, i8* %149, align 4
  %151 = xor i8 %150, -128
  store i8 %151, i8* %149, align 4
  ret %struct.decNumber* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @uprv_decNumberGetBCD_69(%struct.decNumber* nocapture readonly, i8* returned) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds i8, i8* %1, i64 %5
  %7 = getelementptr inbounds i8, i8* %6, i64 -1
  %8 = icmp ult i8* %7, %1
  br i1 %8, label %18, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  br label %11

11:                                               ; preds = %9, %11
  %12 = phi i8* [ %16, %11 ], [ %7, %9 ]
  %13 = phi i8* [ %15, %11 ], [ %10, %9 ]
  %14 = load i8, i8* %13, align 1
  store i8 %14, i8* %12, align 1
  %15 = getelementptr inbounds i8, i8* %13, i64 1
  %16 = getelementptr inbounds i8, i8* %12, i64 -1
  %17 = icmp ult i8* %16, %1
  br i1 %17, label %18, label %11

18:                                               ; preds = %11, %2
  ret i8* %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberSetBCD_69(%struct.decNumber* returned, i8* readonly, i32) local_unnamed_addr #0 {
  %4 = bitcast %struct.decNumber* %0 to i8*
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 50
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = sext i32 %7 to i64
  %11 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  br label %14

14:                                               ; preds = %3, %9
  %15 = phi i32 [ %13, %9 ], [ %7, %3 ]
  %16 = zext i32 %2 to i64
  %17 = getelementptr inbounds i8, i8* %1, i64 %16
  %18 = icmp eq i32 %2, 0
  br i1 %18, label %126, label %19

19:                                               ; preds = %14
  %20 = sext i32 %15 to i64
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %20
  %22 = getelementptr i8, i8* %1, i64 1
  %23 = icmp ugt i8* %17, %22
  %24 = select i1 %23, i8* %17, i8* %22
  %25 = ptrtoint i8* %24 to i64
  %26 = sub i64 %25, %5
  %27 = icmp ult i64 %26, 16
  br i1 %27, label %116, label %28

28:                                               ; preds = %19
  %29 = add nsw i64 %20, 9
  %30 = getelementptr i8, i8* %1, i64 1
  %31 = icmp ugt i8* %17, %30
  %32 = select i1 %31, i8* %17, i8* %30
  %33 = ptrtoint i8* %32 to i64
  %34 = sub i64 %29, %33
  %35 = getelementptr i8, i8* %4, i64 %34
  %36 = ptrtoint i8* %35 to i64
  %37 = getelementptr i8, i8* %1, i64 %36
  %38 = add nsw i64 %20, 9
  %39 = getelementptr i8, i8* %4, i64 %38
  %40 = icmp ult i8* %37, %32
  %41 = icmp ugt i8* %39, %1
  %42 = and i1 %40, %41
  br i1 %42, label %116, label %43

43:                                               ; preds = %28
  %44 = and i64 %26, -16
  %45 = sub i64 0, %44
  %46 = getelementptr i8, i8* %21, i64 %45
  %47 = getelementptr i8, i8* %1, i64 %44
  %48 = add i64 %44, -16
  %49 = lshr exact i64 %48, 4
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %48, 0
  br i1 %52, label %94, label %53

53:                                               ; preds = %43
  %54 = sub nuw nsw i64 %50, %51
  %55 = getelementptr i8, i8* %21, i64 -1
  %56 = getelementptr i8, i8* %21, i64 -1
  br label %57

57:                                               ; preds = %57, %53
  %58 = phi i64 [ 0, %53 ], [ %91, %57 ]
  %59 = phi i64 [ %54, %53 ], [ %92, %57 ]
  %60 = sub i64 0, %58
  %61 = getelementptr i8, i8* %1, i64 %58
  %62 = getelementptr inbounds i8, i8* %55, i64 %60
  %63 = bitcast i8* %61 to <8 x i8>*
  %64 = load <8 x i8>, <8 x i8>* %63, align 1, !alias.scope !272
  %65 = getelementptr i8, i8* %61, i64 8
  %66 = bitcast i8* %65 to <8 x i8>*
  %67 = load <8 x i8>, <8 x i8>* %66, align 1, !alias.scope !272
  %68 = shufflevector <8 x i8> %64, <8 x i8> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %69 = getelementptr inbounds i8, i8* %62, i64 -7
  %70 = bitcast i8* %69 to <8 x i8>*
  store <8 x i8> %68, <8 x i8>* %70, align 1, !alias.scope !275, !noalias !272
  %71 = shufflevector <8 x i8> %67, <8 x i8> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %72 = getelementptr inbounds i8, i8* %62, i64 -8
  %73 = getelementptr inbounds i8, i8* %72, i64 -7
  %74 = bitcast i8* %73 to <8 x i8>*
  store <8 x i8> %71, <8 x i8>* %74, align 1, !alias.scope !275, !noalias !272
  %75 = or i64 %58, 16
  %76 = sub nuw nsw i64 -16, %58
  %77 = getelementptr i8, i8* %1, i64 %75
  %78 = getelementptr inbounds i8, i8* %56, i64 %76
  %79 = bitcast i8* %77 to <8 x i8>*
  %80 = load <8 x i8>, <8 x i8>* %79, align 1, !alias.scope !272
  %81 = getelementptr i8, i8* %77, i64 8
  %82 = bitcast i8* %81 to <8 x i8>*
  %83 = load <8 x i8>, <8 x i8>* %82, align 1, !alias.scope !272
  %84 = shufflevector <8 x i8> %80, <8 x i8> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i8, i8* %78, i64 -7
  %86 = bitcast i8* %85 to <8 x i8>*
  store <8 x i8> %84, <8 x i8>* %86, align 1, !alias.scope !275, !noalias !272
  %87 = shufflevector <8 x i8> %83, <8 x i8> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i8, i8* %78, i64 -8
  %89 = getelementptr inbounds i8, i8* %88, i64 -7
  %90 = bitcast i8* %89 to <8 x i8>*
  store <8 x i8> %87, <8 x i8>* %90, align 1, !alias.scope !275, !noalias !272
  %91 = add i64 %58, 32
  %92 = add i64 %59, -2
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %57, !llvm.loop !277

94:                                               ; preds = %57, %43
  %95 = phi i64 [ 0, %43 ], [ %91, %57 ]
  %96 = icmp eq i64 %51, 0
  br i1 %96, label %114, label %97

97:                                               ; preds = %94
  %98 = sub i64 0, %95
  %99 = getelementptr i8, i8* %21, i64 -1
  %100 = getelementptr i8, i8* %1, i64 %95
  %101 = getelementptr inbounds i8, i8* %99, i64 %98
  %102 = bitcast i8* %100 to <8 x i8>*
  %103 = load <8 x i8>, <8 x i8>* %102, align 1, !alias.scope !272
  %104 = getelementptr i8, i8* %100, i64 8
  %105 = bitcast i8* %104 to <8 x i8>*
  %106 = load <8 x i8>, <8 x i8>* %105, align 1, !alias.scope !272
  %107 = shufflevector <8 x i8> %103, <8 x i8> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %108 = getelementptr inbounds i8, i8* %101, i64 -7
  %109 = bitcast i8* %108 to <8 x i8>*
  store <8 x i8> %107, <8 x i8>* %109, align 1, !alias.scope !275, !noalias !272
  %110 = shufflevector <8 x i8> %106, <8 x i8> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %111 = getelementptr inbounds i8, i8* %101, i64 -8
  %112 = getelementptr inbounds i8, i8* %111, i64 -7
  %113 = bitcast i8* %112 to <8 x i8>*
  store <8 x i8> %110, <8 x i8>* %113, align 1, !alias.scope !275, !noalias !272
  br label %114

114:                                              ; preds = %94, %97
  %115 = icmp eq i64 %26, %44
  br i1 %115, label %126, label %116

116:                                              ; preds = %114, %28, %19
  %117 = phi i8* [ %21, %28 ], [ %21, %19 ], [ %46, %114 ]
  %118 = phi i8* [ %1, %28 ], [ %1, %19 ], [ %47, %114 ]
  br label %119

119:                                              ; preds = %116, %119
  %120 = phi i8* [ %122, %119 ], [ %117, %116 ]
  %121 = phi i8* [ %124, %119 ], [ %118, %116 ]
  %122 = getelementptr inbounds i8, i8* %120, i64 -1
  %123 = load i8, i8* %121, align 1
  store i8 %123, i8* %122, align 1
  %124 = getelementptr inbounds i8, i8* %121, i64 1
  %125 = icmp ult i8* %124, %17
  br i1 %125, label %119, label %126, !llvm.loop !278

126:                                              ; preds = %119, %114, %14
  store i32 %2, i32* %6, align 4
  ret %struct.decNumber* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @uprv_decNumberIsSubnormal_69(%struct.decNumber* nocapture readonly, %struct.decContext* nocapture readonly) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, 112
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %23

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  %14 = and i1 %10, %13
  br i1 %14, label %23, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %12, %17
  %19 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp sle i32 %18, %20
  %22 = zext i1 %21 to i32
  br label %23

23:                                               ; preds = %7, %15, %2
  %24 = phi i32 [ 0, %2 ], [ %22, %15 ], [ 0, %7 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.decNumber* @uprv_decNumberTrim_69(%struct.decNumber* returned) local_unnamed_addr #3 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.decContext, align 4
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 -1431655766, i32* %2, align 4
  %5 = bitcast %struct.decContext* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 -86, i64 28, i1 false)
  %6 = call %struct.decContext* @uprv_decContextDefault_69(%struct.decContext* nonnull %3, i32 0) #8
  %7 = call fastcc %struct.decNumber* @_ZL7decTrimP9decNumberP10decContexthhPi(%struct.decNumber* %0, %struct.decContext* nonnull %3, i8 zeroext 0, i8 zeroext 1, i32* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret %struct.decNumber* %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @uprv_decNumberVersion_69() local_unnamed_addr #7 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZL13decUnitAddSubPKhiS0_iiPhi(i8* readonly, i32, i8* nocapture readonly, i32, i32, i8*, i32) unnamed_addr #0 {
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds i8, i8* %5, i64 %8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = icmp eq i32 %4, 0
  br i1 %12, label %35, label %13

13:                                               ; preds = %7
  %14 = sext i32 %4 to i64
  %15 = getelementptr inbounds i8, i8* %11, i64 %14
  %16 = icmp ne i8* %0, %5
  %17 = icmp sgt i32 %4, %1
  %18 = or i1 %17, %16
  %19 = getelementptr inbounds i8, i8* %5, i64 %14
  br i1 %18, label %20, label %35

20:                                               ; preds = %13
  %21 = icmp sgt i32 %4, 0
  br i1 %21, label %22, label %35

22:                                               ; preds = %20
  %23 = getelementptr inbounds i8, i8* %0, i64 %8
  br label %24

24:                                               ; preds = %22, %30
  %25 = phi i8* [ %0, %22 ], [ %32, %30 ]
  %26 = phi i8* [ %5, %22 ], [ %33, %30 ]
  %27 = icmp ult i8* %25, %23
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = load i8, i8* %25, align 1
  br label %30

30:                                               ; preds = %24, %28
  %31 = phi i8 [ %29, %28 ], [ 0, %24 ]
  store i8 %31, i8* %26, align 1
  %32 = getelementptr inbounds i8, i8* %25, i64 1
  %33 = getelementptr inbounds i8, i8* %26, i64 1
  %34 = icmp ult i8* %33, %19
  br i1 %34, label %24, label %35

35:                                               ; preds = %30, %13, %20, %7
  %36 = phi i8* [ %5, %7 ], [ %5, %20 ], [ %19, %13 ], [ %33, %30 ]
  %37 = phi i8* [ %0, %7 ], [ %0, %20 ], [ %19, %13 ], [ %32, %30 ]
  %38 = phi i8* [ %11, %7 ], [ %15, %20 ], [ %15, %13 ], [ %15, %30 ]
  %39 = icmp ugt i8* %38, %9
  %40 = select i1 %39, i8* %9, i8* %38
  %41 = select i1 %39, i8* %38, i8* %9
  %42 = icmp ult i8* %36, %40
  br i1 %42, label %43, label %82

43:                                               ; preds = %35, %78
  %44 = phi i32 [ %79, %78 ], [ 0, %35 ]
  %45 = phi i8* [ %51, %78 ], [ %37, %35 ]
  %46 = phi i8* [ %80, %78 ], [ %36, %35 ]
  %47 = phi i8* [ %56, %78 ], [ %2, %35 ]
  %48 = load i8, i8* %45, align 1
  %49 = zext i8 %48 to i32
  %50 = add nsw i32 %44, %49
  %51 = getelementptr inbounds i8, i8* %45, i64 1
  %52 = load i8, i8* %47, align 1
  %53 = zext i8 %52 to i32
  %54 = mul nsw i32 %53, %6
  %55 = add nsw i32 %50, %54
  %56 = getelementptr inbounds i8, i8* %47, i64 1
  %57 = icmp ult i32 %55, 10
  br i1 %57, label %58, label %60

58:                                               ; preds = %43
  %59 = trunc i32 %55 to i8
  store i8 %59, i8* %46, align 1
  br label %78

60:                                               ; preds = %43
  %61 = icmp sgt i32 %55, -1
  br i1 %61, label %62, label %69

62:                                               ; preds = %60
  %63 = lshr i32 %55, 1
  %64 = mul i32 %63, 26215
  %65 = lshr i32 %64, 17
  %66 = mul nsw i32 %65, -10
  %67 = add nsw i32 %66, %55
  %68 = trunc i32 %67 to i8
  store i8 %68, i8* %46, align 1
  br label %78

69:                                               ; preds = %60
  %70 = add nsw i32 %55, 100
  %71 = lshr i32 %70, 1
  %72 = mul i32 %71, 26215
  %73 = lshr i32 %72, 17
  %74 = mul nsw i32 %73, -10
  %75 = add i32 %74, %70
  %76 = trunc i32 %75 to i8
  store i8 %76, i8* %46, align 1
  %77 = add nsw i32 %73, -10
  br label %78

78:                                               ; preds = %69, %62, %58
  %79 = phi i32 [ 0, %58 ], [ %65, %62 ], [ %77, %69 ]
  %80 = getelementptr inbounds i8, i8* %46, i64 1
  %81 = icmp ult i8* %80, %40
  br i1 %81, label %43, label %82

82:                                               ; preds = %78, %35
  %83 = phi i8* [ %2, %35 ], [ %56, %78 ]
  %84 = phi i8* [ %36, %35 ], [ %80, %78 ]
  %85 = phi i8* [ %37, %35 ], [ %51, %78 ]
  %86 = phi i32 [ 0, %35 ], [ %79, %78 ]
  %87 = icmp ult i8* %84, %41
  br i1 %87, label %88, label %135

88:                                               ; preds = %82
  %89 = getelementptr inbounds i8, i8* %0, i64 %8
  br label %90

90:                                               ; preds = %88, %131
  %91 = phi i32 [ %86, %88 ], [ %132, %131 ]
  %92 = phi i8* [ %85, %88 ], [ %107, %131 ]
  %93 = phi i8* [ %84, %88 ], [ %133, %131 ]
  %94 = phi i8* [ %83, %88 ], [ %106, %131 ]
  %95 = icmp ult i8* %92, %89
  br i1 %95, label %96, label %100

96:                                               ; preds = %90
  %97 = load i8, i8* %92, align 1
  %98 = zext i8 %97 to i32
  %99 = getelementptr inbounds i8, i8* %92, i64 1
  br label %105

100:                                              ; preds = %90
  %101 = load i8, i8* %94, align 1
  %102 = zext i8 %101 to i32
  %103 = mul nsw i32 %102, %6
  %104 = getelementptr inbounds i8, i8* %94, i64 1
  br label %105

105:                                              ; preds = %100, %96
  %106 = phi i8* [ %94, %96 ], [ %104, %100 ]
  %107 = phi i8* [ %99, %96 ], [ %92, %100 ]
  %108 = phi i32 [ %98, %96 ], [ %103, %100 ]
  %109 = add nsw i32 %108, %91
  %110 = icmp ult i32 %109, 10
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = trunc i32 %109 to i8
  store i8 %112, i8* %93, align 1
  br label %131

113:                                              ; preds = %105
  %114 = icmp sgt i32 %109, -1
  br i1 %114, label %115, label %122

115:                                              ; preds = %113
  %116 = lshr i32 %109, 1
  %117 = mul i32 %116, 26215
  %118 = lshr i32 %117, 17
  %119 = mul nsw i32 %118, -10
  %120 = add nsw i32 %119, %109
  %121 = trunc i32 %120 to i8
  store i8 %121, i8* %93, align 1
  br label %131

122:                                              ; preds = %113
  %123 = add nsw i32 %109, 100
  %124 = lshr i32 %123, 1
  %125 = mul i32 %124, 26215
  %126 = lshr i32 %125, 17
  %127 = mul nsw i32 %126, -10
  %128 = add i32 %127, %123
  %129 = trunc i32 %128 to i8
  store i8 %129, i8* %93, align 1
  %130 = add nsw i32 %126, -10
  br label %131

131:                                              ; preds = %122, %115, %111
  %132 = phi i32 [ 0, %111 ], [ %118, %115 ], [ %130, %122 ]
  %133 = getelementptr inbounds i8, i8* %93, i64 1
  %134 = icmp ult i8* %133, %41
  br i1 %134, label %90, label %135

135:                                              ; preds = %131, %82
  %136 = phi i8* [ %84, %82 ], [ %133, %131 ]
  %137 = phi i32 [ %86, %82 ], [ %132, %131 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %169, label %139

139:                                              ; preds = %135
  %140 = icmp sgt i32 %137, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = icmp ugt i8* %41, %5
  br i1 %142, label %146, label %160

143:                                              ; preds = %139
  %144 = trunc i32 %137 to i8
  store i8 %144, i8* %136, align 1
  %145 = getelementptr inbounds i8, i8* %136, i64 1
  br label %169

146:                                              ; preds = %141, %146
  %147 = phi i32 [ %157, %146 ], [ 1, %141 ]
  %148 = phi i8* [ %158, %146 ], [ %5, %141 ]
  %149 = add nuw nsw i32 %147, 9
  %150 = load i8, i8* %148, align 1
  %151 = zext i8 %150 to i32
  %152 = sub nsw i32 %149, %151
  %153 = icmp slt i32 %152, 10
  %154 = trunc i32 %152 to i8
  %155 = select i1 %153, i8 %154, i8 0
  %156 = xor i1 %153, true
  %157 = zext i1 %156 to i32
  store i8 %155, i8* %148, align 1
  %158 = getelementptr inbounds i8, i8* %148, i64 1
  %159 = icmp ult i8* %158, %41
  br i1 %159, label %146, label %160

160:                                              ; preds = %146, %141
  %161 = phi i8* [ %5, %141 ], [ %158, %146 ]
  %162 = phi i32 [ 1, %141 ], [ %157, %146 ]
  %163 = xor i32 %137, -1
  %164 = add nsw i32 %162, %163
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %160
  %167 = trunc i32 %164 to i8
  store i8 %167, i8* %161, align 1
  %168 = getelementptr inbounds i8, i8* %161, i64 1
  br label %169

169:                                              ; preds = %166, %160, %135, %143
  %170 = phi i8* [ %145, %143 ], [ %136, %135 ], [ %5, %160 ], [ %5, %166 ]
  %171 = phi i8* [ %5, %143 ], [ %5, %135 ], [ %161, %160 ], [ %168, %166 ]
  %172 = ptrtoint i8* %170 to i64
  %173 = ptrtoint i8* %171 to i64
  %174 = sub i64 %172, %173
  %175 = trunc i64 %174 to i32
  ret i32 %175
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL14decUnitComparePKhiS0_ii(i8*, i32, i8* nocapture readonly, i32, i32) unnamed_addr #3 {
  %6 = alloca [73 x i8], align 16
  %7 = getelementptr inbounds [73 x i8], [73 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 73, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 73, i1 false)
  %8 = icmp eq i32 %4, 0
  br i1 %8, label %9, label %29

9:                                                ; preds = %5
  %10 = icmp sgt i32 %1, %3
  br i1 %10, label %94, label %11

11:                                               ; preds = %9
  %12 = icmp slt i32 %1, %3
  br i1 %12, label %94, label %13

13:                                               ; preds = %11
  %14 = sext i32 %1 to i64
  %15 = getelementptr inbounds i8, i8* %0, i64 %14
  %16 = getelementptr inbounds i8, i8* %2, i64 %14
  br label %17

17:                                               ; preds = %27, %13
  %18 = phi i8* [ %15, %13 ], [ %21, %27 ]
  %19 = phi i8* [ %16, %13 ], [ %20, %27 ]
  %20 = getelementptr inbounds i8, i8* %19, i64 -1
  %21 = getelementptr inbounds i8, i8* %18, i64 -1
  %22 = icmp ult i8* %21, %0
  br i1 %22, label %94, label %23

23:                                               ; preds = %17
  %24 = load i8, i8* %21, align 1
  %25 = load i8, i8* %20, align 1
  %26 = icmp ugt i8 %24, %25
  br i1 %26, label %94, label %27

27:                                               ; preds = %23
  %28 = icmp ult i8 %24, %25
  br i1 %28, label %94, label %17

29:                                               ; preds = %5
  %30 = icmp slt i32 %4, 50
  br i1 %30, label %31, label %36

31:                                               ; preds = %29
  %32 = sext i32 %4 to i64
  %33 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  br label %36

36:                                               ; preds = %29, %31
  %37 = phi i32 [ %35, %31 ], [ %4, %29 ]
  %38 = add nsw i32 %37, %3
  %39 = icmp slt i32 %38, %1
  br i1 %39, label %94, label %40

40:                                               ; preds = %36
  %41 = add nsw i32 %1, 1
  br i1 %30, label %42, label %47

42:                                               ; preds = %40
  %43 = sext i32 %4 to i64
  %44 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  br label %47

47:                                               ; preds = %40, %42
  %48 = phi i32 [ %46, %42 ], [ %4, %40 ]
  %49 = add nsw i32 %48, %3
  %50 = icmp slt i32 %41, %49
  br i1 %50, label %94, label %51

51:                                               ; preds = %47
  br i1 %30, label %52, label %57

52:                                               ; preds = %51
  %53 = sext i32 %4 to i64
  %54 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  br label %57

57:                                               ; preds = %51, %52
  %58 = phi i32 [ %56, %52 ], [ %4, %51 ]
  %59 = add nsw i32 %58, %3
  %60 = icmp slt i32 %59, %1
  %61 = select i1 %60, i32 %1, i32 %59
  %62 = add nsw i32 %61, 2
  %63 = icmp ugt i32 %62, 73
  br i1 %63, label %64, label %68

64:                                               ; preds = %57
  %65 = sext i32 %62 to i64
  %66 = tail call noalias i8* @uprv_malloc_69(i64 %65) #9
  %67 = icmp eq i8* %66, null
  br i1 %67, label %94, label %68

68:                                               ; preds = %64, %57
  %69 = phi i8* [ %7, %57 ], [ %66, %64 ]
  %70 = phi i8* [ null, %57 ], [ %66, %64 ]
  %71 = call fastcc i32 @_ZL13decUnitAddSubPKhiS0_iiPhi(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4, i8* %69, i32 -1)
  %72 = icmp slt i32 %71, 0
  br i1 %72, label %90, label %73

73:                                               ; preds = %68
  %74 = sext i32 %71 to i64
  %75 = getelementptr inbounds i8, i8* %69, i64 -1
  %76 = getelementptr inbounds i8, i8* %75, i64 %74
  %77 = icmp ult i8* %69, %76
  br i1 %77, label %78, label %85

78:                                               ; preds = %73, %82
  %79 = phi i8* [ %83, %82 ], [ %69, %73 ]
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = getelementptr inbounds i8, i8* %79, i64 1
  %84 = icmp eq i8* %83, %76
  br i1 %84, label %85, label %78

85:                                               ; preds = %78, %82, %73
  %86 = phi i8* [ %69, %73 ], [ %76, %82 ], [ %79, %78 ]
  %87 = load i8, i8* %86, align 1
  %88 = icmp ne i8 %87, 0
  %89 = zext i1 %88 to i32
  br label %90

90:                                               ; preds = %68, %85
  %91 = phi i32 [ %89, %85 ], [ -1, %68 ]
  %92 = icmp eq i8* %70, null
  br i1 %92, label %94, label %93

93:                                               ; preds = %90
  call void @uprv_free_69(i8* nonnull %70) #8
  br label %94

94:                                               ; preds = %17, %27, %23, %93, %90, %64, %47, %36, %11, %9
  %95 = phi i32 [ 1, %9 ], [ -1, %11 ], [ 1, %36 ], [ -1, %47 ], [ -2147483648, %64 ], [ %91, %90 ], [ %91, %93 ], [ 0, %17 ], [ -1, %27 ], [ 1, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 73, i8* nonnull %7) #8
  ret i32 %95
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL13decApplyRoundP9decNumberP10decContextiPj(%struct.decNumber*, %struct.decContext* nocapture readonly, i32, i32* nocapture) unnamed_addr #3 {
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %183, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %53 [
    i32 7, label %9
    i32 5, label %20
    i32 4, label %22
    i32 3, label %24
    i32 2, label %33
    i32 1, label %35
    i32 0, label %37
    i32 6, label %45
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %11 = load i8, i8* %10, align 1
  %12 = urem i8 %11, 5
  %13 = icmp slt i32 %2, 0
  %14 = icmp ne i8 %12, 1
  %15 = and i1 %13, %14
  br i1 %15, label %56, label %16

16:                                               ; preds = %9
  %17 = icmp sgt i32 %2, 0
  %18 = icmp eq i8 %12, 0
  %19 = and i1 %17, %18
  br i1 %19, label %65, label %183

20:                                               ; preds = %6
  %21 = icmp slt i32 %2, 0
  br i1 %21, label %56, label %183

22:                                               ; preds = %6
  %23 = icmp sgt i32 %2, 5
  br i1 %23, label %65, label %183

24:                                               ; preds = %6
  %25 = icmp sgt i32 %2, 5
  br i1 %25, label %65, label %26

26:                                               ; preds = %24
  %27 = icmp eq i32 %2, 5
  br i1 %27, label %28, label %183

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %30 = load i8, i8* %29, align 1
  %31 = and i8 %30, 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %183, label %65

33:                                               ; preds = %6
  %34 = icmp sgt i32 %2, 4
  br i1 %34, label %65, label %183

35:                                               ; preds = %6
  %36 = icmp sgt i32 %2, 0
  br i1 %36, label %65, label %183

37:                                               ; preds = %6
  %38 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %39 = load i8, i8* %38, align 4
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = icmp slt i32 %2, 0
  br i1 %42, label %56, label %183

43:                                               ; preds = %37
  %44 = icmp sgt i32 %2, 0
  br i1 %44, label %65, label %183

45:                                               ; preds = %6
  %46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %47 = load i8, i8* %46, align 4
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = icmp slt i32 %2, 0
  br i1 %50, label %56, label %183

51:                                               ; preds = %45
  %52 = icmp sgt i32 %2, 0
  br i1 %52, label %65, label %183

53:                                               ; preds = %6
  %54 = load i32, i32* %3, align 4
  %55 = or i32 %54, 64
  store i32 %55, i32* %3, align 4
  br label %183

56:                                               ; preds = %9, %20, %41, %49
  %57 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %60 = icmp ult i32 %58, 2
  %61 = load i8, i8* %59, align 1
  br i1 %60, label %118, label %62

62:                                               ; preds = %56
  %63 = add i32 %58, -1
  %64 = zext i32 %63 to i64
  br label %159

65:                                               ; preds = %24, %28, %16, %22, %33, %35, %43, %51
  %66 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %69 = icmp ult i32 %67, 2
  %70 = load i8, i8* %68, align 1
  br i1 %69, label %76, label %71

71:                                               ; preds = %65
  %72 = add i32 %67, -1
  %73 = zext i32 %72 to i64
  br label %105

74:                                               ; preds = %110
  %75 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %73
  br label %76

76:                                               ; preds = %74, %65
  %77 = phi i64 [ %73, %74 ], [ 0, %65 ]
  %78 = phi i32 [ %111, %74 ], [ %67, %65 ]
  %79 = phi i8* [ %75, %74 ], [ %68, %65 ]
  %80 = phi i8 [ %114, %74 ], [ %70, %65 ]
  %81 = zext i8 %80 to i32
  %82 = zext i32 %78 to i64
  %83 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %84, -1
  %86 = icmp eq i32 %85, %81
  br i1 %86, label %87, label %170

87:                                               ; preds = %76
  %88 = add nsw i32 %78, -1
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = trunc i32 %91 to i8
  store i8 %92, i8* %79, align 1
  %93 = icmp eq i64 %77, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.memset.p0i8.i64(i8* align 1 %68, i8 0, i64 %77, i1 false)
  br label %95

95:                                               ; preds = %87, %94
  %96 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %96, align 4
  %99 = add nsw i32 %67, %98
  %100 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = add nsw i32 %101, 1
  %103 = icmp sgt i32 %99, %102
  br i1 %103, label %104, label %183

104:                                              ; preds = %95
  tail call fastcc void @_ZL14decSetOverflowP9decNumberP10decContextPj(%struct.decNumber* %0, %struct.decContext* %1, i32* %3)
  br label %183

105:                                              ; preds = %71, %110
  %106 = phi i8 [ %114, %110 ], [ %70, %71 ]
  %107 = phi i32 [ %111, %110 ], [ %67, %71 ]
  %108 = phi i64 [ %112, %110 ], [ 0, %71 ]
  %109 = icmp eq i8 %106, 9
  br i1 %109, label %110, label %170

110:                                              ; preds = %105
  %111 = add i32 %107, -1
  %112 = add nuw nsw i64 %108, 1
  %113 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = icmp eq i64 %112, %73
  br i1 %115, label %74, label %105

116:                                              ; preds = %164
  %117 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %64
  br label %118

118:                                              ; preds = %116, %56
  %119 = phi i64 [ %64, %116 ], [ 0, %56 ]
  %120 = phi i32 [ %165, %116 ], [ %58, %56 ]
  %121 = phi i8* [ %117, %116 ], [ %59, %56 ]
  %122 = phi i8 [ %168, %116 ], [ %61, %56 ]
  %123 = zext i8 %122 to i32
  %124 = add nsw i32 %120, -1
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %125
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, %123
  br i1 %128, label %129, label %170

129:                                              ; preds = %118
  %130 = zext i32 %120 to i64
  %131 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = trunc i32 %132 to i8
  %134 = add i8 %133, -1
  store i8 %134, i8* %121, align 1
  %135 = icmp eq i64 %119, 0
  br i1 %135, label %137, label %136

136:                                              ; preds = %129
  call void @llvm.memset.p0i8.i64(i8* align 1 %59, i8 9, i64 %119, i1 false)
  br label %137

137:                                              ; preds = %129, %136
  %138 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = add nsw i32 %139, -1
  store i32 %140, i32* %138, align 4
  %141 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 2
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = add i32 %142, 1
  %146 = sub i32 %145, %144
  %147 = icmp eq i32 %139, %146
  br i1 %147, label %148, label %183

148:                                              ; preds = %137
  %149 = icmp eq i32 %120, 1
  %150 = icmp eq i32 %58, 1
  %151 = and i1 %149, %150
  br i1 %151, label %152, label %153

152:                                              ; preds = %148
  store i8 0, i8* %121, align 1
  br label %156

153:                                              ; preds = %148
  %154 = add i8 %122, -1
  store i8 %154, i8* %121, align 1
  %155 = add nsw i32 %58, -1
  store i32 %155, i32* %57, align 4
  br label %156

156:                                              ; preds = %153, %152
  store i32 %139, i32* %138, align 4
  %157 = load i32, i32* %3, align 4
  %158 = or i32 %157, 14368
  store i32 %158, i32* %3, align 4
  br label %183

159:                                              ; preds = %62, %164
  %160 = phi i8 [ %168, %164 ], [ %61, %62 ]
  %161 = phi i32 [ %165, %164 ], [ %58, %62 ]
  %162 = phi i64 [ %166, %164 ], [ 0, %62 ]
  %163 = icmp eq i8 %160, 0
  br i1 %163, label %164, label %170

164:                                              ; preds = %159
  %165 = add i32 %161, -1
  %166 = add nuw nsw i64 %162, 1
  %167 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = icmp eq i64 %166, %64
  br i1 %169, label %116, label %159

170:                                              ; preds = %105, %159, %118, %76
  %171 = phi i8* [ %59, %118 ], [ %68, %76 ], [ %59, %159 ], [ %68, %105 ]
  %172 = phi i32 [ %58, %118 ], [ %67, %76 ], [ %58, %159 ], [ %67, %105 ]
  %173 = phi i32 [ -1, %118 ], [ 1, %76 ], [ -1, %159 ], [ 1, %105 ]
  %174 = icmp slt i32 %172, 50
  br i1 %174, label %175, label %180

175:                                              ; preds = %170
  %176 = sext i32 %172 to i64
  %177 = getelementptr inbounds [50 x i8], [50 x i8]* @_ZL8d2utable, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  br label %180

180:                                              ; preds = %170, %175
  %181 = phi i32 [ %179, %175 ], [ %172, %170 ]
  %182 = tail call fastcc i32 @_ZL13decUnitAddSubPKhiS0_iiPhi(i8* %171, i32 %181, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZL7uarrone, i64 0, i64 0), i32 1, i32 0, i8* %171, i32 %173)
  br label %183

183:                                              ; preds = %28, %51, %49, %43, %41, %35, %33, %22, %20, %16, %26, %53, %137, %95, %156, %104, %4, %180
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL14decSetOverflowP9decNumberP10decContextPj(%struct.decNumber* nocapture, %struct.decContext* nocapture readonly, i32* nocapture) unnamed_addr #3 {
  %4 = bitcast %struct.decNumber* %0 to i8*
  %5 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, -128
  %8 = getelementptr %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 1
  %15 = and i8 %6, 112
  %16 = icmp eq i8 %15, 0
  %17 = and i1 %16, %14
  br i1 %17, label %18, label %35

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 6
  %22 = load i8, i8* %21, align 4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %20, 1
  %28 = sub i32 %27, %26
  br label %29

29:                                               ; preds = %18, %24
  %30 = phi i32 [ %28, %24 ], [ %20, %18 ]
  %31 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, %30
  br i1 %33, label %34, label %76

34:                                               ; preds = %29
  store i32 %30, i32* %31, align 4
  br label %72

35:                                               ; preds = %11, %3
  store i8 0, i8* %5, align 4
  %36 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  store i32 1, i32* %37, align 4
  store i8 0, i8* %8, align 1
  %38 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 3
  %39 = load i32, i32* %38, align 4
  switch i32 %39, label %68 [
    i32 5, label %44
    i32 7, label %44
    i32 0, label %40
    i32 6, label %42
  ]

40:                                               ; preds = %35
  %41 = icmp eq i8 %7, 0
  br i1 %41, label %68, label %44

42:                                               ; preds = %35
  %43 = icmp eq i8 %7, 0
  br i1 %43, label %44, label %68

44:                                               ; preds = %40, %35, %35, %42
  %45 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %37, align 4
  %47 = icmp sgt i32 %46, 1
  br i1 %47, label %48, label %55

48:                                               ; preds = %44
  %49 = add nsw i32 %46, -1
  %50 = zext i32 %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 9, i64 %50, i1 false) #8
  %51 = add nsw i32 %46, -2
  %52 = zext i32 %51 to i64
  %53 = add nuw nsw i64 %52, 10
  %54 = getelementptr i8, i8* %4, i64 %53
  br label %55

55:                                               ; preds = %48, %44
  %56 = phi i8* [ %8, %44 ], [ %54, %48 ]
  %57 = phi i32 [ %46, %44 ], [ 1, %48 ]
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZL9DECPOWERS, i64 0, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = trunc i32 %60 to i8
  %62 = add i8 %61, -1
  store i8 %62, i8* %56, align 1
  store i8 0, i8* %5, align 4
  %63 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = load i32, i32* %45, align 4
  %66 = add i32 %64, 1
  %67 = sub i32 %66, %65
  store i32 %67, i32* %36, align 4
  br label %70

68:                                               ; preds = %40, %35, %42
  %69 = or i8 %7, 64
  br label %70

70:                                               ; preds = %68, %55
  %71 = phi i8 [ %69, %68 ], [ %7, %55 ]
  store i8 %71, i8* %5, align 4
  br label %72

72:                                               ; preds = %70, %34
  %73 = phi i32 [ 1024, %34 ], [ 2592, %70 ]
  %74 = load i32, i32* %2, align 4
  %75 = or i32 %74, %73
  store i32 %75, i32* %2, align 4
  br label %76

76:                                               ; preds = %72, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL15decSetSubnormalP9decNumberP10decContextPiPj(%struct.decNumber*, %struct.decContext* nocapture readonly, i32* nocapture, i32* nocapture) unnamed_addr #3 {
  %5 = alloca %struct.decContext, align 4
  %6 = bitcast %struct.decContext* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -86, i64 28, i1 false)
  %7 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %8, 1
  %12 = sub i32 %11, %10
  %13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 3, i64 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %22 = load i8, i8* %21, align 4
  %23 = and i8 %22, 112
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, %12
  br i1 %28, label %29, label %81

29:                                               ; preds = %25
  store i32 %12, i32* %26, align 4
  %30 = load i32, i32* %3, align 4
  %31 = or i32 %30, 1024
  store i32 %31, i32* %3, align 4
  br label %81

32:                                               ; preds = %20, %16, %4
  %33 = load i32, i32* %3, align 4
  %34 = or i32 %33, 4096
  store i32 %34, i32* %3, align 4
  %35 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sub nsw i32 %12, %36
  %38 = icmp slt i32 %37, 1
  br i1 %38, label %39, label %44

39:                                               ; preds = %32
  %40 = and i32 %33, 32
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %81, label %42

42:                                               ; preds = %39
  %43 = or i32 %33, 12288
  store i32 %43, i32* %3, align 4
  br label %81

44:                                               ; preds = %32
  %45 = bitcast %struct.decContext* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 4 %45, i64 28, i1 false)
  %46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = sub nsw i32 %47, %37
  %49 = getelementptr inbounds %struct.decContext, %struct.decContext* %5, i64 0, i32 0
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %struct.decContext, %struct.decContext* %5, i64 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = sub nsw i32 %51, %37
  store i32 %52, i32* %50, align 4
  call fastcc void @_ZL11decSetCoeffP9decNumberP10decContextPKhiPiPj(%struct.decNumber* %0, %struct.decContext* nonnull %5, i8* %13, i32 %47, i32* %2, i32* %3)
  %53 = load i32, i32* %2, align 4
  call fastcc void @_ZL13decApplyRoundP9decNumberP10decContextiPj(%struct.decNumber* %0, %struct.decContext* nonnull %5, i32 %53, i32* %3)
  %54 = load i32, i32* %3, align 4
  %55 = and i32 %54, 32
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %44
  %58 = or i32 %54, 8192
  store i32 %58, i32* %3, align 4
  br label %59

59:                                               ; preds = %44, %57
  %60 = load i32, i32* %35, align 4
  %61 = icmp sgt i32 %60, %12
  br i1 %61, label %62, label %67

62:                                               ; preds = %59
  %63 = load i32, i32* %46, align 4
  %64 = tail call fastcc i32 @_ZL14decShiftToMostPhii(i8* %13, i32 %63, i32 1)
  store i32 %64, i32* %46, align 4
  %65 = load i32, i32* %35, align 4
  %66 = add nsw i32 %65, -1
  store i32 %66, i32* %35, align 4
  br label %67

67:                                               ; preds = %62, %59
  %68 = load i8, i8* %13, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %81

70:                                               ; preds = %67
  %71 = load i32, i32* %46, align 4
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %81

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i64 0, i32 2
  %75 = load i8, i8* %74, align 4
  %76 = and i8 %75, 112
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = load i32, i32* %3, align 4
  %80 = or i32 %79, 1024
  store i32 %80, i32* %3, align 4
  br label %81

81:                                               ; preds = %67, %70, %73, %78, %42, %39, %25, %29
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %6) #8
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind allocsize(0) }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !5, !3}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !9}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !9}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !3}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !3}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !3}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !3}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !3}
!42 = distinct !{!42, !9}
!43 = distinct !{!43, !3}
!44 = distinct !{!44, !3}
!45 = distinct !{!45, !9}
!46 = distinct !{!46, !5, !3}
!47 = distinct !{!47, !3}
!48 = distinct !{!48, !9}
!49 = distinct !{!49, !5, !3}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !3}
!56 = distinct !{!56, !9}
!57 = distinct !{!57, !3}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !3}
!64 = distinct !{!64, !9}
!65 = distinct !{!65, !3}
!66 = !{!67}
!67 = distinct !{!67, !68}
!68 = distinct !{!68, !"LVerDomain"}
!69 = !{!70}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !3}
!72 = distinct !{!72, !9}
!73 = distinct !{!73, !3}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !3}
!80 = distinct !{!80, !9}
!81 = distinct !{!81, !3}
!82 = distinct !{!82, !3}
!83 = distinct !{!83, !9}
!84 = distinct !{!84, !5, !3}
!85 = !{!86}
!86 = distinct !{!86, !87}
!87 = distinct !{!87, !"LVerDomain"}
!88 = !{!89}
!89 = distinct !{!89, !87}
!90 = distinct !{!90, !3}
!91 = distinct !{!91, !9}
!92 = distinct !{!92, !3}
!93 = !{!94}
!94 = distinct !{!94, !95}
!95 = distinct !{!95, !"LVerDomain"}
!96 = !{!97}
!97 = distinct !{!97, !95}
!98 = distinct !{!98, !3}
!99 = distinct !{!99, !9}
!100 = distinct !{!100, !3}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !3}
!107 = distinct !{!107, !9}
!108 = distinct !{!108, !3}
!109 = !{!110}
!110 = distinct !{!110, !111}
!111 = distinct !{!111, !"LVerDomain"}
!112 = !{!113}
!113 = distinct !{!113, !111}
!114 = distinct !{!114, !3}
!115 = distinct !{!115, !9}
!116 = distinct !{!116, !3}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !3}
!123 = distinct !{!123, !9}
!124 = distinct !{!124, !3}
!125 = !{!126}
!126 = distinct !{!126, !127}
!127 = distinct !{!127, !"LVerDomain"}
!128 = !{!129}
!129 = distinct !{!129, !127}
!130 = distinct !{!130, !3}
!131 = distinct !{!131, !9}
!132 = distinct !{!132, !3}
!133 = distinct !{!133, !3}
!134 = distinct !{!134, !9}
!135 = distinct !{!135, !5, !3}
!136 = !{!137}
!137 = distinct !{!137, !138}
!138 = distinct !{!138, !"LVerDomain"}
!139 = !{!140}
!140 = distinct !{!140, !138}
!141 = distinct !{!141, !3}
!142 = distinct !{!142, !9}
!143 = distinct !{!143, !3}
!144 = !{!145}
!145 = distinct !{!145, !146}
!146 = distinct !{!146, !"LVerDomain"}
!147 = !{!148}
!148 = distinct !{!148, !146}
!149 = distinct !{!149, !3}
!150 = distinct !{!150, !9}
!151 = distinct !{!151, !3}
!152 = distinct !{!152, !3}
!153 = distinct !{!153, !9}
!154 = distinct !{!154, !5, !3}
!155 = distinct !{!155, !3}
!156 = distinct !{!156, !9}
!157 = distinct !{!157, !5, !3}
!158 = distinct !{!158, !3}
!159 = distinct !{!159, !9}
!160 = distinct !{!160, !5, !3}
!161 = distinct !{!161, !9}
!162 = distinct !{!162, !3}
!163 = distinct !{!163, !5, !3}
!164 = !{!165}
!165 = distinct !{!165, !166}
!166 = distinct !{!166, !"LVerDomain"}
!167 = !{!168}
!168 = distinct !{!168, !166}
!169 = distinct !{!169, !3}
!170 = distinct !{!170, !9}
!171 = distinct !{!171, !3}
!172 = !{!173}
!173 = distinct !{!173, !174}
!174 = distinct !{!174, !"LVerDomain"}
!175 = !{!176}
!176 = distinct !{!176, !174}
!177 = distinct !{!177, !3}
!178 = distinct !{!178, !9}
!179 = distinct !{!179, !3}
!180 = !{!181}
!181 = distinct !{!181, !182}
!182 = distinct !{!182, !"LVerDomain"}
!183 = !{!184}
!184 = distinct !{!184, !182}
!185 = distinct !{!185, !3}
!186 = distinct !{!186, !9}
!187 = distinct !{!187, !3}
!188 = !{!189}
!189 = distinct !{!189, !190}
!190 = distinct !{!190, !"LVerDomain"}
!191 = !{!192}
!192 = distinct !{!192, !190}
!193 = distinct !{!193, !3}
!194 = distinct !{!194, !9}
!195 = distinct !{!195, !3}
!196 = !{!197}
!197 = distinct !{!197, !198}
!198 = distinct !{!198, !"LVerDomain"}
!199 = !{!200}
!200 = distinct !{!200, !198}
!201 = distinct !{!201, !3}
!202 = distinct !{!202, !9}
!203 = distinct !{!203, !3}
!204 = !{!205}
!205 = distinct !{!205, !206}
!206 = distinct !{!206, !"LVerDomain"}
!207 = !{!208}
!208 = distinct !{!208, !206}
!209 = distinct !{!209, !3}
!210 = distinct !{!210, !9}
!211 = distinct !{!211, !3}
!212 = !{!213}
!213 = distinct !{!213, !214}
!214 = distinct !{!214, !"LVerDomain"}
!215 = !{!216}
!216 = distinct !{!216, !214}
!217 = distinct !{!217, !3}
!218 = distinct !{!218, !9}
!219 = distinct !{!219, !3}
!220 = !{!221}
!221 = distinct !{!221, !222}
!222 = distinct !{!222, !"LVerDomain"}
!223 = !{!224}
!224 = distinct !{!224, !222}
!225 = distinct !{!225, !3}
!226 = distinct !{!226, !9}
!227 = distinct !{!227, !3}
!228 = !{!229}
!229 = distinct !{!229, !230}
!230 = distinct !{!230, !"LVerDomain"}
!231 = !{!232}
!232 = distinct !{!232, !230}
!233 = distinct !{!233, !3}
!234 = distinct !{!234, !9}
!235 = distinct !{!235, !3}
!236 = distinct !{!236, !3}
!237 = distinct !{!237, !9}
!238 = distinct !{!238, !5, !3}
!239 = distinct !{!239, !3}
!240 = distinct !{!240, !9}
!241 = distinct !{!241, !5, !3}
!242 = distinct !{!242, !3}
!243 = distinct !{!243, !9}
!244 = distinct !{!244, !5, !3}
!245 = distinct !{!245, !3}
!246 = distinct !{!246, !9}
!247 = distinct !{!247, !5, !3}
!248 = !{!249}
!249 = distinct !{!249, !250}
!250 = distinct !{!250, !"LVerDomain"}
!251 = !{!252}
!252 = distinct !{!252, !250}
!253 = distinct !{!253, !3}
!254 = distinct !{!254, !9}
!255 = distinct !{!255, !3}
!256 = !{!257}
!257 = distinct !{!257, !258}
!258 = distinct !{!258, !"LVerDomain"}
!259 = !{!260}
!260 = distinct !{!260, !258}
!261 = distinct !{!261, !3}
!262 = distinct !{!262, !9}
!263 = distinct !{!263, !3}
!264 = !{!265}
!265 = distinct !{!265, !266}
!266 = distinct !{!266, !"LVerDomain"}
!267 = !{!268}
!268 = distinct !{!268, !266}
!269 = distinct !{!269, !3}
!270 = distinct !{!270, !9}
!271 = distinct !{!271, !3}
!272 = !{!273}
!273 = distinct !{!273, !274}
!274 = distinct !{!274, !"LVerDomain"}
!275 = !{!276}
!276 = distinct !{!276, !274}
!277 = distinct !{!277, !3}
!278 = distinct !{!278, !3}
