; ModuleID = '../../third_party/libvpx/source/libvpx/vpx/src/vpx_decoder.c'
source_filename = "../../third_party/libvpx/source/libvpx/vpx/src/vpx_decoder.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.vpx_codec_ctx = type { i8*, %struct.vpx_codec_iface*, i32, i8*, i64, %union.anon.0, %struct.vpx_codec_priv* }
%union.anon.0 = type { %struct.vpx_codec_dec_cfg* }
%struct.vpx_codec_priv = type { i8*, i64, %struct.anon.1, %struct.anon.3 }
%struct.anon.1 = type { %struct.vpx_codec_priv_cb_pair, %struct.vpx_codec_priv_cb_pair }
%struct.vpx_codec_priv_cb_pair = type { %union.anon.2, i8* }
%union.anon.2 = type { void (i8*, %struct.vpx_image*)* }
%struct.vpx_image = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8*], [4 x i32], i32, i8*, i8*, i32, i32, i8* }
%struct.anon.3 = type { %struct.vpx_fixed_buf, i32, i32, %struct.vpx_codec_cx_pkt, i32 }
%struct.vpx_fixed_buf = type { i8*, i64 }
%struct.vpx_codec_cx_pkt = type { i32, %union.anon }
%union.anon = type { %struct.anon, [40 x i8] }
%struct.anon = type { i8*, i64, i64, i64, i32, i32, [5 x i32], [5 x i32], [5 x i8] }
%struct.vpx_codec_iface = type { i8*, i32, i64, i32 (%struct.vpx_codec_ctx*, %struct.vpx_codec_priv_enc_mr_cfg*)*, i32 (%struct.vpx_codec_alg_priv*)*, %struct.vpx_codec_ctrl_fn_map*, %struct.vpx_codec_dec_iface, %struct.vpx_codec_enc_iface }
%struct.vpx_codec_priv_enc_mr_cfg = type { i32, i32, %struct.vpx_rational, i8* }
%struct.vpx_rational = type { i32, i32 }
%struct.vpx_codec_alg_priv = type opaque
%struct.vpx_codec_ctrl_fn_map = type { i32, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.vpx_codec_dec_iface = type { i32 (i8*, i32, %struct.vpx_codec_stream_info*)*, i32 (%struct.vpx_codec_alg_priv*, %struct.vpx_codec_stream_info*)*, i32 (%struct.vpx_codec_alg_priv*, i8*, i32, i8*, i64)*, %struct.vpx_image* (%struct.vpx_codec_alg_priv*, i8**)*, i32 (%struct.vpx_codec_alg_priv*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, i8*)* }
%struct.vpx_codec_stream_info = type { i32, i32, i32, i32 }
%struct.vpx_codec_frame_buffer = type { i8*, i64, i8* }
%struct.vpx_codec_enc_iface = type { i32, %struct.vpx_codec_enc_cfg_map*, i32 (%struct.vpx_codec_alg_priv*, %struct.vpx_image*, i64, i64, i64, i64)*, %struct.vpx_codec_cx_pkt* (%struct.vpx_codec_alg_priv*, i8**)*, i32 (%struct.vpx_codec_alg_priv*, %struct.vpx_codec_enc_cfg*)*, %struct.vpx_fixed_buf* (%struct.vpx_codec_alg_priv*)*, %struct.vpx_image* (%struct.vpx_codec_alg_priv*)*, i32 (%struct.vpx_codec_enc_cfg*, i8**)* }
%struct.vpx_codec_enc_cfg_map = type { i32, %struct.vpx_codec_enc_cfg }
%struct.vpx_codec_enc_cfg = type { i32, i32, i32, i32, i32, i32, i32, %struct.vpx_rational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vpx_fixed_buf, %struct.vpx_fixed_buf, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [5 x i32], [5 x i32], i32, [5 x i32], [5 x i32], i32, [16 x i32], [12 x i32], i32 }
%struct.vpx_codec_dec_cfg = type { i32, i32, i32 }
%struct.vpx_image_rect = type { i32, i32, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_codec_dec_init_ver(%struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_dec_cfg*, i64, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %4, 12
  br i1 %6, label %7, label %65

7:                                                ; preds = %5
  %8 = icmp ne %struct.vpx_codec_ctx* %0, null
  %9 = icmp ne %struct.vpx_codec_iface* %1, null
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %65

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.vpx_codec_iface, %struct.vpx_codec_iface* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 5
  br i1 %14, label %15, label %68

15:                                               ; preds = %11
  %16 = and i64 %3, 65536
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.vpx_codec_iface, %struct.vpx_codec_iface* %1, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 262144
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %68, label %23

23:                                               ; preds = %18, %15
  %24 = and i64 %3, 131072
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.vpx_codec_iface, %struct.vpx_codec_iface* %1, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, 524288
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %68, label %31

31:                                               ; preds = %26, %23
  %32 = and i64 %3, 262144
  %33 = icmp ne i64 %32, 0
  %34 = getelementptr inbounds %struct.vpx_codec_iface, %struct.vpx_codec_iface* %1, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 1048576
  %37 = icmp eq i64 %36, 0
  %38 = and i1 %33, %37
  %39 = and i64 %35, 1
  %40 = icmp eq i64 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %68, label %42

42:                                               ; preds = %31
  %43 = bitcast %struct.vpx_codec_ctx* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 56, i1 false)
  %44 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 1
  store %struct.vpx_codec_iface* %1, %struct.vpx_codec_iface** %44, align 8
  %45 = bitcast %struct.vpx_codec_iface* %1 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %struct.vpx_codec_ctx* %0 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 6
  store %struct.vpx_codec_priv* null, %struct.vpx_codec_priv** %48, align 8
  %49 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 4
  store i64 %3, i64* %49, align 8
  %50 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 5, i32 0
  store %struct.vpx_codec_dec_cfg* %2, %struct.vpx_codec_dec_cfg** %50, align 8
  %51 = getelementptr inbounds %struct.vpx_codec_iface, %struct.vpx_codec_iface* %1, i64 0, i32 3
  %52 = load i32 (%struct.vpx_codec_ctx*, %struct.vpx_codec_priv_enc_mr_cfg*)*, i32 (%struct.vpx_codec_ctx*, %struct.vpx_codec_priv_enc_mr_cfg*)** %51, align 8
  %53 = tail call i32 %52(%struct.vpx_codec_ctx* nonnull %0, %struct.vpx_codec_priv_enc_mr_cfg* null) #4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %68, label %55

55:                                               ; preds = %42
  %56 = load %struct.vpx_codec_priv*, %struct.vpx_codec_priv** %48, align 8
  %57 = icmp eq %struct.vpx_codec_priv* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %struct.vpx_codec_priv, %struct.vpx_codec_priv* %56, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %55, %58
  %62 = phi i8* [ %60, %58 ], [ null, %55 ]
  %63 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 3
  store i8* %62, i8** %63, align 8
  %64 = tail call i32 @vpx_codec_destroy(%struct.vpx_codec_ctx* nonnull %0) #4
  br label %68

65:                                               ; preds = %7, %5
  %66 = phi i32 [ 3, %5 ], [ 8, %7 ]
  %67 = icmp eq %struct.vpx_codec_ctx* %0, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %31, %61, %42, %11, %18, %26, %65
  %69 = phi i32 [ %66, %65 ], [ 4, %26 ], [ 4, %18 ], [ 3, %11 ], [ 0, %42 ], [ %53, %61 ], [ 4, %31 ]
  %70 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 2
  store i32 %69, i32* %70, align 8
  br label %71

71:                                               ; preds = %65, %68
  %72 = phi i32 [ %66, %65 ], [ %69, %68 ]
  ret i32 %72
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @vpx_codec_destroy(%struct.vpx_codec_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_codec_peek_stream_info(%struct.vpx_codec_iface* readonly, i8*, i32, %struct.vpx_codec_stream_info*) local_unnamed_addr #0 {
  %5 = icmp ne %struct.vpx_codec_iface* %0, null
  %6 = icmp ne i8* %1, null
  %7 = and i1 %5, %6
  %8 = icmp ne i32 %2, 0
  %9 = and i1 %7, %8
  %10 = icmp ne %struct.vpx_codec_stream_info* %3, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %22

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.vpx_codec_stream_info, %struct.vpx_codec_stream_info* %3, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %14, 16
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.vpx_codec_stream_info, %struct.vpx_codec_stream_info* %3, i64 0, i32 1
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %struct.vpx_codec_stream_info, %struct.vpx_codec_stream_info* %3, i64 0, i32 2
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %struct.vpx_codec_iface, %struct.vpx_codec_iface* %0, i64 0, i32 6, i32 0
  %20 = load i32 (i8*, i32, %struct.vpx_codec_stream_info*)*, i32 (i8*, i32, %struct.vpx_codec_stream_info*)** %19, align 8
  %21 = tail call i32 %20(i8* nonnull %1, i32 %2, %struct.vpx_codec_stream_info* nonnull %3) #4
  br label %22

22:                                               ; preds = %4, %12, %16
  %23 = phi i32 [ %21, %16 ], [ 8, %12 ], [ 8, %4 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_codec_get_stream_info(%struct.vpx_codec_ctx*, %struct.vpx_codec_stream_info*) local_unnamed_addr #0 {
  %3 = icmp ne %struct.vpx_codec_ctx* %0, null
  %4 = icmp ne %struct.vpx_codec_stream_info* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %27

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.vpx_codec_stream_info, %struct.vpx_codec_stream_info* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %8, 16
  br i1 %9, label %27, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 1
  %12 = load %struct.vpx_codec_iface*, %struct.vpx_codec_iface** %11, align 8
  %13 = icmp eq %struct.vpx_codec_iface* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 6
  %16 = load %struct.vpx_codec_priv*, %struct.vpx_codec_priv** %15, align 8
  %17 = icmp eq %struct.vpx_codec_priv* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.vpx_codec_stream_info, %struct.vpx_codec_stream_info* %1, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.vpx_codec_stream_info, %struct.vpx_codec_stream_info* %1, i64 0, i32 2
  store i32 0, i32* %20, align 4
  %21 = load %struct.vpx_codec_iface*, %struct.vpx_codec_iface** %11, align 8
  %22 = getelementptr inbounds %struct.vpx_codec_iface, %struct.vpx_codec_iface* %21, i64 0, i32 6, i32 1
  %23 = load i32 (%struct.vpx_codec_alg_priv*, %struct.vpx_codec_stream_info*)*, i32 (%struct.vpx_codec_alg_priv*, %struct.vpx_codec_stream_info*)** %22, align 8
  %24 = bitcast %struct.vpx_codec_priv** %15 to %struct.vpx_codec_alg_priv**
  %25 = load %struct.vpx_codec_alg_priv*, %struct.vpx_codec_alg_priv** %24, align 8
  %26 = tail call i32 %23(%struct.vpx_codec_alg_priv* %25, %struct.vpx_codec_stream_info* nonnull %1) #4
  br label %27

27:                                               ; preds = %10, %14, %2, %6, %18
  %28 = phi i32 [ %26, %18 ], [ 8, %6 ], [ 8, %2 ], [ 1, %14 ], [ 1, %10 ]
  br i1 %3, label %29, label %31

29:                                               ; preds = %27
  %30 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 2
  store i32 %28, i32* %30, align 8
  br label %31

31:                                               ; preds = %27, %29
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_codec_decode(%struct.vpx_codec_ctx*, i8*, i32, i8*, i64) local_unnamed_addr #0 {
  %6 = icmp eq %struct.vpx_codec_ctx* %0, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %5
  %8 = icmp eq i8* %1, null
  %9 = icmp ne i32 %2, 0
  %10 = xor i1 %8, %9
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 1
  %13 = load %struct.vpx_codec_iface*, %struct.vpx_codec_iface** %12, align 8
  %14 = icmp eq %struct.vpx_codec_iface* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 6
  %17 = load %struct.vpx_codec_priv*, %struct.vpx_codec_priv** %16, align 8
  %18 = icmp eq %struct.vpx_codec_priv* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %struct.vpx_codec_priv* %17 to %struct.vpx_codec_alg_priv*
  %21 = getelementptr inbounds %struct.vpx_codec_iface, %struct.vpx_codec_iface* %13, i64 0, i32 6, i32 2
  %22 = load i32 (%struct.vpx_codec_alg_priv*, i8*, i32, i8*, i64)*, i32 (%struct.vpx_codec_alg_priv*, i8*, i32, i8*, i64)** %21, align 8
  %23 = tail call i32 %22(%struct.vpx_codec_alg_priv* nonnull %20, i8* %1, i32 %2, i8* %3, i64 %4) #4
  br label %24

24:                                               ; preds = %11, %15, %7, %19
  %25 = phi i32 [ 1, %11 ], [ 1, %15 ], [ 8, %7 ], [ %23, %19 ]
  %26 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 2
  store i32 %25, i32* %26, align 8
  br label %27

27:                                               ; preds = %5, %24
  %28 = phi i32 [ %25, %24 ], [ 8, %5 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.vpx_image* @vpx_codec_get_frame(%struct.vpx_codec_ctx* readonly, i8**) local_unnamed_addr #0 {
  %3 = icmp ne %struct.vpx_codec_ctx* %0, null
  %4 = icmp ne i8** %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %19

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 1
  %8 = load %struct.vpx_codec_iface*, %struct.vpx_codec_iface** %7, align 8
  %9 = icmp eq %struct.vpx_codec_iface* %8, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 6
  %12 = load %struct.vpx_codec_priv*, %struct.vpx_codec_priv** %11, align 8
  %13 = icmp eq %struct.vpx_codec_priv* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %struct.vpx_codec_priv* %12 to %struct.vpx_codec_alg_priv*
  %16 = getelementptr inbounds %struct.vpx_codec_iface, %struct.vpx_codec_iface* %8, i64 0, i32 6, i32 3
  %17 = load %struct.vpx_image* (%struct.vpx_codec_alg_priv*, i8**)*, %struct.vpx_image* (%struct.vpx_codec_alg_priv*, i8**)** %16, align 8
  %18 = tail call %struct.vpx_image* %17(%struct.vpx_codec_alg_priv* nonnull %15, i8** nonnull %1) #4
  br label %19

19:                                               ; preds = %2, %6, %10, %14
  %20 = phi %struct.vpx_image* [ %18, %14 ], [ null, %10 ], [ null, %6 ], [ null, %2 ]
  ret %struct.vpx_image* %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @vpx_codec_register_put_frame_cb(%struct.vpx_codec_ctx*, void (i8*, %struct.vpx_image*)*, i8*) local_unnamed_addr #3 {
  %4 = icmp ne %struct.vpx_codec_ctx* %0, null
  %5 = icmp ne void (i8*, %struct.vpx_image*)* %1, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %24

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 1
  %9 = load %struct.vpx_codec_iface*, %struct.vpx_codec_iface** %8, align 8
  %10 = icmp eq %struct.vpx_codec_iface* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 6
  %13 = load %struct.vpx_codec_priv*, %struct.vpx_codec_priv** %12, align 8
  %14 = icmp eq %struct.vpx_codec_priv* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.vpx_codec_iface, %struct.vpx_codec_iface* %9, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 131072
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.vpx_codec_priv, %struct.vpx_codec_priv* %13, i64 0, i32 2, i32 0, i32 0, i32 0
  store void (i8*, %struct.vpx_image*)* %1, void (i8*, %struct.vpx_image*)** %21, align 8
  %22 = load %struct.vpx_codec_priv*, %struct.vpx_codec_priv** %12, align 8
  %23 = getelementptr inbounds %struct.vpx_codec_priv, %struct.vpx_codec_priv* %22, i64 0, i32 2, i32 0, i32 1
  store i8* %2, i8** %23, align 8
  br label %24

24:                                               ; preds = %15, %7, %11, %3, %20
  %25 = phi i32 [ 0, %20 ], [ 8, %3 ], [ 1, %11 ], [ 1, %7 ], [ 4, %15 ]
  br i1 %4, label %26, label %28

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 2
  store i32 %25, i32* %27, align 8
  br label %28

28:                                               ; preds = %24, %26
  ret i32 %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @vpx_codec_register_put_slice_cb(%struct.vpx_codec_ctx*, void (i8*, %struct.vpx_image*, %struct.vpx_image_rect*, %struct.vpx_image_rect*)*, i8*) local_unnamed_addr #3 {
  %4 = icmp ne %struct.vpx_codec_ctx* %0, null
  %5 = icmp ne void (i8*, %struct.vpx_image*, %struct.vpx_image_rect*, %struct.vpx_image_rect*)* %1, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %25

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 1
  %9 = load %struct.vpx_codec_iface*, %struct.vpx_codec_iface** %8, align 8
  %10 = icmp eq %struct.vpx_codec_iface* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 6
  %13 = load %struct.vpx_codec_priv*, %struct.vpx_codec_priv** %12, align 8
  %14 = icmp eq %struct.vpx_codec_priv* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.vpx_codec_iface, %struct.vpx_codec_iface* %9, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 65536
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.vpx_codec_priv, %struct.vpx_codec_priv* %13, i64 0, i32 2, i32 1, i32 0
  %22 = bitcast %union.anon.2* %21 to void (i8*, %struct.vpx_image*, %struct.vpx_image_rect*, %struct.vpx_image_rect*)**
  store void (i8*, %struct.vpx_image*, %struct.vpx_image_rect*, %struct.vpx_image_rect*)* %1, void (i8*, %struct.vpx_image*, %struct.vpx_image_rect*, %struct.vpx_image_rect*)** %22, align 8
  %23 = load %struct.vpx_codec_priv*, %struct.vpx_codec_priv** %12, align 8
  %24 = getelementptr inbounds %struct.vpx_codec_priv, %struct.vpx_codec_priv* %23, i64 0, i32 2, i32 1, i32 1
  store i8* %2, i8** %24, align 8
  br label %25

25:                                               ; preds = %15, %7, %11, %3, %20
  %26 = phi i32 [ 0, %20 ], [ 8, %3 ], [ 1, %11 ], [ 1, %7 ], [ 4, %15 ]
  br i1 %4, label %27, label %29

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 2
  store i32 %26, i32* %28, align 8
  br label %29

29:                                               ; preds = %25, %27
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_codec_set_frame_buffer_functions(%struct.vpx_codec_ctx*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, i8*) local_unnamed_addr #0 {
  %5 = icmp ne %struct.vpx_codec_ctx* %0, null
  %6 = icmp ne i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)* %1, null
  %7 = and i1 %5, %6
  %8 = icmp ne i32 (i8*, %struct.vpx_codec_frame_buffer*)* %2, null
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %28

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 1
  %12 = load %struct.vpx_codec_iface*, %struct.vpx_codec_iface** %11, align 8
  %13 = icmp eq %struct.vpx_codec_iface* %12, null
  br i1 %13, label %28, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 6
  %16 = load %struct.vpx_codec_priv*, %struct.vpx_codec_priv** %15, align 8
  %17 = icmp eq %struct.vpx_codec_priv* %16, null
  %18 = bitcast %struct.vpx_codec_priv* %16 to %struct.vpx_codec_alg_priv*
  br i1 %17, label %28, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.vpx_codec_iface, %struct.vpx_codec_iface* %12, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 4194304
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.vpx_codec_iface, %struct.vpx_codec_iface* %12, i64 0, i32 6, i32 4
  %26 = load i32 (%struct.vpx_codec_alg_priv*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, i8*)*, i32 (%struct.vpx_codec_alg_priv*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, i8*)** %25, align 8
  %27 = tail call i32 %26(%struct.vpx_codec_alg_priv* nonnull %18, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)* nonnull %1, i32 (i8*, %struct.vpx_codec_frame_buffer*)* nonnull %2, i8* %3) #4
  br label %28

28:                                               ; preds = %19, %10, %14, %4, %24
  %29 = phi i32 [ %27, %24 ], [ 8, %4 ], [ 1, %14 ], [ 1, %10 ], [ 4, %19 ]
  br i1 %5, label %30, label %32

30:                                               ; preds = %28
  %31 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 2
  store i32 %29, i32* %31, align 8
  br label %32

32:                                               ; preds = %28, %30
  ret i32 %29
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
