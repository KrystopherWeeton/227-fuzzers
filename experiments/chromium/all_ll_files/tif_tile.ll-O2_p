; ModuleID = '../../third_party/pdfium/third_party/libtiff/tif_tile.c'
source_filename = "../../third_party/pdfium/third_party/libtiff/tif_tile.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.tiff = type { i8*, i32, i32, i32, i64, i64, i64*, i16, i16, %struct.TIFFDirectory, %struct.TIFFDirectory, %union.anon.0, i16, i32, i16, i32, i64, i64, i16, i64, i32, i32, i64, i32, i32 (%struct.tiff*)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*, i32*, i32*)*, i8*, i64, i64, i8*, i64, i64, i64, i8*, i64, i8*, i64, i32 (i8*, i8**, i64*)*, void (i8*, i8*, i64)*, i8*, i64 (i8*, i8*, i64)*, i64 (i8*, i8*, i64)*, i64 (i8*, i64, i32)*, i32 (i8*)*, i64 (i8*)*, void (%struct.tiff*, i8*, i64)*, %struct._TIFFField**, i64, %struct._TIFFField*, %struct.TIFFTagMethods, %struct.client_info*, %struct._TIFFFieldArray*, i64 }
%struct.TIFFDirectory = type { [4 x i64], i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, double*, double*, float, float, i16, i16, float, float, [2 x i16], [3 x i16*], [2 x i16], i16, i16*, i32, i32, i64*, i64*, i32, %struct.TIFFDirEntry, %struct.TIFFDirEntry, i16, i64*, [2 x i16], i16, [3 x i16*], float*, i32, i8*, i32, %struct.TIFFTagValue*, i8 }
%struct.TIFFDirEntry = type { i16, i16, i64, %union.anon, i8 }
%union.anon = type { i64 }
%struct.TIFFTagValue = type { %struct._TIFFField*, i32, i8* }
%union.anon.0 = type { %struct.TIFFHeaderBig }
%struct.TIFFHeaderBig = type { i16, i16, i16, i16, i64 }
%struct._TIFFField = type { i32, i16, i16, i32, i32, i32, i32, i16, i8, i8, i8*, %struct._TIFFFieldArray* }
%struct.TIFFTagMethods = type { i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, void (%struct.tiff*, %struct._IO_FILE*, i64)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.client_info = type { %struct.client_info*, i8*, i8* }
%struct._TIFFFieldArray = type { i32, i32, i32, %struct._TIFFField* }

@.str = private unnamed_addr constant [31 x i8] c"%lu: Col out of range, max %lu\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"%lu: Row out of range, max %lu\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"%lu: Depth out of range, max %lu\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"%lu: Sample out of range, max %lu\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"TIFFNumberOfTiles\00", align 1
@TIFFTileRowSize64.module = internal constant [18 x i8] c"TIFFTileRowSize64\00", align 16
@.str.5 = private unnamed_addr constant [20 x i8] c"Tile length is zero\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"Tile width is zero\00", align 1
@.str.7 = private constant [16 x i8] c"TIFFTileRowSize\00", align 16
@.str.8 = private unnamed_addr constant [26 x i8] c"Samples per pixel is zero\00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"Computed tile row size is zero\00", align 1
@TIFFVTileSize64.module = internal constant [16 x i8] c"TIFFVTileSize64\00", align 16
@.str.10 = private unnamed_addr constant [34 x i8] c"Invalid YCbCr subsampling (%dx%d)\00", align 1
@TIFFVTileSize.module = internal constant [14 x i8] c"TIFFVTileSize\00", align 1
@TIFFTileSize.module = internal constant [13 x i8] c"TIFFTileSize\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @TIFFComputeTile(%struct.tiff* nocapture readonly, i32, i32, i32, i16 zeroext) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  %15 = select i1 %14, i32 0, i32 %3
  %16 = icmp eq i32 %7, -1
  br i1 %16, label %17, label %20

17:                                               ; preds = %5
  %18 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 1
  %19 = load i32, i32* %18, align 8
  br label %20

20:                                               ; preds = %17, %5
  %21 = phi i32 [ %19, %17 ], [ %7, %5 ]
  %22 = icmp eq i32 %9, -1
  br i1 %22, label %23, label %26

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 2
  %25 = load i32, i32* %24, align 4
  br label %26

26:                                               ; preds = %23, %20
  %27 = phi i32 [ %25, %23 ], [ %9, %20 ]
  %28 = icmp eq i32 %11, -1
  %29 = select i1 %28, i32 %13, i32 %11
  %30 = icmp ne i32 %21, 0
  %31 = icmp ne i32 %27, 0
  %32 = and i1 %30, %31
  %33 = icmp ne i32 %29, 0
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %87

35:                                               ; preds = %26
  %36 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 0, %21
  %39 = icmp ult i32 %37, %38
  br i1 %39, label %40, label %44

40:                                               ; preds = %35
  %41 = add i32 %21, -1
  %42 = add i32 %41, %37
  %43 = udiv i32 %42, %21
  br label %44

44:                                               ; preds = %35, %40
  %45 = phi i32 [ %43, %40 ], [ 0, %35 ]
  %46 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = sub i32 0, %27
  %49 = icmp ult i32 %47, %48
  br i1 %49, label %50, label %54

50:                                               ; preds = %44
  %51 = add i32 %27, -1
  %52 = add i32 %51, %47
  %53 = udiv i32 %52, %27
  br label %54

54:                                               ; preds = %44, %50
  %55 = phi i32 [ %53, %50 ], [ 0, %44 ]
  %56 = sub i32 0, %29
  %57 = icmp ult i32 %13, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = add i32 %13, -1
  %60 = add i32 %59, %29
  %61 = udiv i32 %60, %29
  br label %62

62:                                               ; preds = %54, %58
  %63 = phi i32 [ %61, %58 ], [ 0, %54 ]
  %64 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 24
  %65 = load i16, i16* %64, align 2
  %66 = icmp eq i16 %65, 2
  %67 = mul i32 %55, %45
  br i1 %66, label %68, label %79

68:                                               ; preds = %62
  %69 = zext i16 %4 to i32
  %70 = mul i32 %63, %69
  %71 = udiv i32 %15, %29
  %72 = udiv i32 %2, %27
  %73 = mul i32 %72, %45
  %74 = udiv i32 %1, %21
  %75 = add i32 %71, %70
  %76 = mul i32 %75, %67
  %77 = add i32 %74, %73
  %78 = add i32 %77, %76
  br label %87

79:                                               ; preds = %62
  %80 = udiv i32 %15, %29
  %81 = mul i32 %80, %67
  %82 = udiv i32 %2, %27
  %83 = mul i32 %82, %45
  %84 = add i32 %83, %81
  %85 = udiv i32 %1, %21
  %86 = add i32 %84, %85
  br label %87

87:                                               ; preds = %68, %79, %26
  %88 = phi i32 [ 1, %26 ], [ %78, %68 ], [ %86, %79 ]
  ret i32 %88
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFCheckTile(%struct.tiff* nocapture readonly, i32, i32, i32, i16 zeroext) local_unnamed_addr #2 {
  %6 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ugt i32 %7, %1
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = zext i32 %1 to i64
  %15 = add i32 %7, -1
  %16 = zext i32 %15 to i64
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %11, i8* %13, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i64 %14, i64 %16) #5
  br label %57

17:                                               ; preds = %5
  %18 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp ugt i32 %19, %2
  br i1 %20, label %29, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = zext i32 %2 to i64
  %27 = add i32 %19, -1
  %28 = zext i32 %27 to i64
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %23, i8* %25, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i64 %26, i64 %28) #5
  br label %57

29:                                               ; preds = %17
  %30 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = icmp ugt i32 %31, %3
  br i1 %32, label %41, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = zext i32 %3 to i64
  %39 = add i32 %31, -1
  %40 = zext i32 %39 to i64
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %35, i8* %37, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i64 %38, i64 %40) #5
  br label %57

41:                                               ; preds = %29
  %42 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 24
  %43 = load i16, i16* %42, align 2
  %44 = icmp eq i16 %43, 2
  br i1 %44, label %45, label %57

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 15
  %47 = load i16, i16* %46, align 2
  %48 = icmp ugt i16 %47, %4
  br i1 %48, label %57, label %49

49:                                               ; preds = %45
  %50 = zext i16 %47 to i64
  %51 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = zext i16 %4 to i64
  %56 = add nsw i64 %50, -1
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %52, i8* %54, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i64 %55, i64 %56) #5
  br label %57

57:                                               ; preds = %41, %45, %49, %33, %21, %9
  %58 = phi i32 [ 0, %9 ], [ 0, %21 ], [ 0, %33 ], [ 0, %49 ], [ 1, %45 ], [ 1, %41 ]
  ret i32 %58
}

declare void @TIFFErrorExt(i8*, i8*, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFNumberOfTiles(%struct.tiff*) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 6
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %3, -1
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 1
  %11 = load i32, i32* %10, align 8
  br label %12

12:                                               ; preds = %9, %1
  %13 = phi i32 [ %11, %9 ], [ %3, %1 ]
  %14 = icmp eq i32 %5, -1
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 2
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %15, %12
  %19 = phi i32 [ %17, %15 ], [ %5, %12 ]
  %20 = icmp eq i32 %7, -1
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 3
  %23 = load i32, i32* %22, align 8
  br label %24

24:                                               ; preds = %21, %18
  %25 = phi i32 [ %23, %21 ], [ %7, %18 ]
  %26 = icmp eq i32 %13, 0
  %27 = icmp eq i32 %19, 0
  %28 = or i1 %26, %27
  %29 = icmp eq i32 %25, 0
  %30 = or i1 %28, %29
  br i1 %30, label %64, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = sub i32 0, %13
  %35 = icmp ult i32 %33, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %31
  %37 = add i32 %13, -1
  %38 = add i32 %37, %33
  %39 = udiv i32 %38, %13
  br label %40

40:                                               ; preds = %31, %36
  %41 = phi i32 [ %39, %36 ], [ 0, %31 ]
  %42 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = sub i32 0, %19
  %45 = icmp ult i32 %43, %44
  br i1 %45, label %46, label %50

46:                                               ; preds = %40
  %47 = add i32 %19, -1
  %48 = add i32 %47, %43
  %49 = udiv i32 %48, %19
  br label %50

50:                                               ; preds = %40, %46
  %51 = phi i32 [ %49, %46 ], [ 0, %40 ]
  %52 = tail call i32 @_TIFFMultiply32(%struct.tiff* %0, i32 %41, i32 %51, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0)) #5
  %53 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = sub i32 0, %25
  %56 = icmp ult i32 %54, %55
  br i1 %56, label %57, label %61

57:                                               ; preds = %50
  %58 = add i32 %25, -1
  %59 = add i32 %58, %54
  %60 = udiv i32 %59, %25
  br label %61

61:                                               ; preds = %50, %57
  %62 = phi i32 [ %60, %57 ], [ 0, %50 ]
  %63 = tail call i32 @_TIFFMultiply32(%struct.tiff* %0, i32 %52, i32 %62, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0)) #5
  br label %64

64:                                               ; preds = %24, %61
  %65 = phi i32 [ %63, %61 ], [ 0, %24 ]
  %66 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 24
  %67 = load i16, i16* %66, align 2
  %68 = icmp eq i16 %67, 2
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 15
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @_TIFFMultiply32(%struct.tiff* %0, i32 %65, i32 %72, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0)) #5
  br label %74

74:                                               ; preds = %69, %64
  %75 = phi i32 [ %73, %69 ], [ %65, %64 ]
  ret i32 %75
}

declare i32 @_TIFFMultiply32(%struct.tiff*, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @TIFFTileRowSize64(%struct.tiff*) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %33, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 8
  %11 = load i16, i16* %10, align 4
  %12 = zext i16 %11 to i64
  %13 = zext i32 %7 to i64
  %14 = tail call i64 @_TIFFMultiply64(%struct.tiff* %0, i64 %12, i64 %13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0)) #5
  %15 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 24
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 1
  br i1 %17, label %18, label %25

18:                                               ; preds = %9
  %19 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 15
  %20 = load i16, i16* %19, align 2
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %18
  %23 = zext i16 %20 to i64
  %24 = tail call i64 @_TIFFMultiply64(%struct.tiff* %0, i64 %14, i64 %23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0)) #5
  br label %25

25:                                               ; preds = %22, %9
  %26 = phi i64 [ %24, %22 ], [ %14, %9 ]
  %27 = and i64 %26, 7
  %28 = icmp ne i64 %27, 0
  %29 = lshr i64 %26, 3
  %30 = zext i1 %28 to i64
  %31 = add nuw nsw i64 %29, %30
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %25, %18, %5, %1
  %34 = phi i8* [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), %1 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), %5 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), %18 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i64 0, i64 0), %25 ]
  %35 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %36 = load i8*, i8** %35, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %36, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @TIFFTileRowSize64.module, i64 0, i64 0), i8* %34) #5
  br label %37

37:                                               ; preds = %33, %25
  %38 = phi i64 [ %31, %25 ], [ 0, %33 ]
  ret i64 %38
}

declare i64 @_TIFFMultiply64(%struct.tiff*, i64, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @TIFFTileRowSize(%struct.tiff*) local_unnamed_addr #2 {
  %2 = tail call i64 @TIFFTileRowSize64(%struct.tiff* %0)
  %3 = tail call i64 @_TIFFCastUInt64ToSSize(%struct.tiff* %0, i64 %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0)) #5
  ret i64 %3
}

declare i64 @_TIFFCastUInt64ToSSize(%struct.tiff*, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @TIFFVTileSize64(%struct.tiff*, i32) local_unnamed_addr #2 {
  %3 = alloca [2 x i16], align 2
  %4 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %93, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %93, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 6
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %93, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 24
  %17 = load i16, i16* %16, align 2
  %18 = icmp eq i16 %17, 1
  br i1 %18, label %19, label %89

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 11
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 6
  br i1 %22, label %23, label %89

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 15
  %25 = load i16, i16* %24, align 2
  %26 = icmp eq i16 %25, 3
  br i1 %26, label %27, label %89

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 16384
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %89

32:                                               ; preds = %27
  %33 = bitcast [2 x i16]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #5
  %34 = getelementptr inbounds [2 x i16], [2 x i16]* %3, i64 0, i64 0
  store i16 -21846, i16* %34, align 2
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %3, i64 0, i64 1
  store i16 -21846, i16* %35, align 2
  %36 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %0, i32 530, i16* nonnull %34, i16* %35) #5
  %37 = load i16, i16* %34, align 2
  switch i16 %37, label %38 [
    i16 1, label %40
    i16 2, label %40
    i16 4, label %40
  ]

38:                                               ; preds = %32
  %39 = load i16, i16* %35, align 2
  br label %42

40:                                               ; preds = %32, %32, %32
  %41 = load i16, i16* %35, align 2
  switch i16 %41, label %42 [
    i16 1, label %48
    i16 2, label %48
    i16 4, label %48
  ]

42:                                               ; preds = %38, %40
  %43 = phi i16 [ %39, %38 ], [ %41, %40 ]
  %44 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %45 = load i8*, i8** %44, align 8
  %46 = zext i16 %37 to i32
  %47 = zext i16 %43 to i32
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %45, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @TIFFVTileSize64.module, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10, i64 0, i64 0), i32 %46, i32 %47) #5
  br label %87

48:                                               ; preds = %40, %40, %40
  %49 = zext i16 %37 to i32
  %50 = mul i16 %41, %37
  %51 = add nuw nsw i16 %50, 2
  %52 = load i32, i32* %8, align 4
  %53 = sub nsw i32 0, %49
  %54 = icmp ult i32 %52, %53
  br i1 %54, label %55, label %60

55:                                               ; preds = %48
  %56 = add nsw i32 %49, -1
  %57 = add i32 %56, %52
  %58 = udiv i32 %57, %49
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %48, %55
  %61 = phi i64 [ %59, %55 ], [ 0, %48 ]
  %62 = zext i16 %41 to i32
  %63 = sub nsw i32 0, %62
  %64 = icmp ugt i32 %63, %1
  br i1 %64, label %65, label %70

65:                                               ; preds = %60
  %66 = add i32 %1, -1
  %67 = add i32 %66, %62
  %68 = udiv i32 %67, %62
  %69 = zext i32 %68 to i64
  br label %70

70:                                               ; preds = %60, %65
  %71 = phi i64 [ %69, %65 ], [ 0, %60 ]
  %72 = zext i16 %51 to i64
  %73 = call i64 @_TIFFMultiply64(%struct.tiff* %0, i64 %61, i64 %72, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @TIFFVTileSize64.module, i64 0, i64 0)) #5
  %74 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 8
  %75 = load i16, i16* %74, align 4
  %76 = zext i16 %75 to i64
  %77 = call i64 @_TIFFMultiply64(%struct.tiff* %0, i64 %73, i64 %76, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @TIFFVTileSize64.module, i64 0, i64 0)) #5
  %78 = and i64 %77, 7
  %79 = icmp ne i64 %78, 0
  %80 = load i16, i16* %74, align 4
  %81 = zext i16 %80 to i64
  %82 = call i64 @_TIFFMultiply64(%struct.tiff* %0, i64 %73, i64 %81, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @TIFFVTileSize64.module, i64 0, i64 0)) #5
  %83 = lshr i64 %82, 3
  %84 = zext i1 %79 to i64
  %85 = add nuw nsw i64 %83, %84
  %86 = call i64 @_TIFFMultiply64(%struct.tiff* %0, i64 %85, i64 %71, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @TIFFVTileSize64.module, i64 0, i64 0)) #5
  br label %87

87:                                               ; preds = %70, %42
  %88 = phi i64 [ 0, %42 ], [ %86, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #5
  br label %93

89:                                               ; preds = %27, %23, %19, %15
  %90 = zext i32 %1 to i64
  %91 = tail call i64 @TIFFTileRowSize64(%struct.tiff* %0)
  %92 = tail call i64 @_TIFFMultiply64(%struct.tiff* %0, i64 %90, i64 %91, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @TIFFVTileSize64.module, i64 0, i64 0)) #5
  br label %93

93:                                               ; preds = %2, %7, %11, %89, %87
  %94 = phi i64 [ %92, %89 ], [ %88, %87 ], [ 0, %11 ], [ 0, %7 ], [ 0, %2 ]
  ret i64 %94
}

declare i32 @TIFFGetFieldDefaulted(%struct.tiff*, i32, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @TIFFVTileSize(%struct.tiff*, i32) local_unnamed_addr #2 {
  %3 = tail call i64 @TIFFVTileSize64(%struct.tiff* %0, i32 %1)
  %4 = tail call i64 @_TIFFCastUInt64ToSSize(%struct.tiff* %0, i64 %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @TIFFVTileSize.module, i64 0, i64 0)) #5
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @TIFFTileSize64(%struct.tiff*) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = tail call i64 @TIFFVTileSize64(%struct.tiff* %0, i32 %3)
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @TIFFTileSize(%struct.tiff*) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = tail call i64 @TIFFVTileSize64(%struct.tiff* %0, i32 %3) #5
  %5 = tail call i64 @_TIFFCastUInt64ToSSize(%struct.tiff* %0, i64 %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @TIFFTileSize.module, i64 0, i64 0)) #5
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @TIFFDefaultTileSize(%struct.tiff*, i32*, i32*) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 41
  %5 = load void (%struct.tiff*, i32*, i32*)*, void (%struct.tiff*, i32*, i32*)** %4, align 8
  tail call void %5(%struct.tiff* %0, i32* %1, i32* %2) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_TIFFDefaultTileSize(%struct.tiff* nocapture readnone, i32* nocapture, i32* nocapture) local_unnamed_addr #4 {
  %4 = load i32, i32* %1, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  store i32 256, i32* %1, align 4
  br label %7

7:                                                ; preds = %6, %3
  %8 = phi i32 [ 256, %6 ], [ %4, %3 ]
  %9 = load i32, i32* %2, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  store i32 256, i32* %2, align 4
  %12 = load i32, i32* %1, align 4
  br label %13

13:                                               ; preds = %11, %7
  %14 = phi i32 [ 256, %11 ], [ %9, %7 ]
  %15 = phi i32 [ %12, %11 ], [ %8, %7 ]
  %16 = and i32 %15, 15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = icmp ult i32 %15, -16
  %20 = add i32 %15, 15
  %21 = and i32 %20, -16
  %22 = select i1 %19, i32 %21, i32 0
  store i32 %22, i32* %1, align 4
  %23 = load i32, i32* %2, align 4
  br label %24

24:                                               ; preds = %13, %18
  %25 = phi i32 [ %14, %13 ], [ %23, %18 ]
  %26 = and i32 %25, 15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = icmp ult i32 %25, -16
  %30 = add i32 %25, 15
  %31 = and i32 %30, -16
  %32 = select i1 %29, i32 %31, i32 0
  store i32 %32, i32* %2, align 4
  br label %33

33:                                               ; preds = %24, %28
  ret void
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
