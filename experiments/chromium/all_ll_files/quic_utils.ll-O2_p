; ModuleID = '../../net/third_party/quiche/src/quic/core/quic_utils.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/quic_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::uint128" = type { i64, i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.1, i32 }
%union.anon.1 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.2 }
%union.anon.2 = type { [4 x i32] }
%struct.iovec = type { i8*, i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.quic::QuicFrame" = type { %union.anon.3 }
%union.anon.3 = type { %"struct.quic::QuicStreamFrame" }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.quic::QuicConnectionId" = type { %union.anon.29 }
%union.anon.29 = type { %struct.anon.31 }
%struct.anon.31 = type { i8, i8* }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [10 x i8] c"NO_CHANGE\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"PORT_CHANGE\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"IPV4_SUBNET_CHANGE\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"IPV4_TO_IPV6_CHANGE\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"IPV6_TO_IPV4_CHANGE\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"IPV6_TO_IPV6_CHANGE\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"IPV4_TO_IPV4_CHANGE\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"INVALID_ADDRESS_CHANGE_TYPE\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"OUTSTANDING\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"NEVER_SENT\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"ACKED\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"UNACKABLE\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"NEUTERED\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"HANDSHAKE_RETRANSMITTED\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"LOST\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"TLP_RETRANSMITTED\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"RTO_RETRANSMITTED\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"PTO_RETRANSMITTED\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"PROBE_RETRANSMITTED\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"NOT_CONTRIBUTING_RTT\00", align 1
@.str.20 = private unnamed_addr constant [26 x i8] c"INVALID_SENT_PACKET_STATE\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"VERSION_NEGOTIATION\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"INITIAL\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"RETRY\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"HANDSHAKE\00", align 1
@.str.25 = private unnamed_addr constant [19 x i8] c"ZERO_RTT_PROTECTED\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"INVALID_PACKET_TYPE\00", align 1
@.str.27 = private unnamed_addr constant [20 x i8] c"PACKETS_NEWLY_ACKED\00", align 1
@.str.28 = private unnamed_addr constant [23 x i8] c"NO_PACKETS_NEWLY_ACKED\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"UNSENT_PACKETS_ACKED\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"UNACKABLE_PACKETS_ACKED\00", align 1
@.str.31 = private unnamed_addr constant [43 x i8] c"PACKETS_ACKED_IN_WRONG_PACKET_NUMBER_SPACE\00", align 1
@.str.32 = private unnamed_addr constant [19 x i8] c"INVALID_ACK_RESULT\00", align 1
@.str.33 = private unnamed_addr constant [57 x i8] c"../../net/third_party/quiche/src/quic/core/quic_utils.cc\00", align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"Failed to copy entire length to buffer.\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c" is not a retransmission_type\00", align 1
@.str.36 = private unnamed_addr constant [61 x i8] c"CRYPTO data aren't in stream frames; they have no stream ID.\00", align 1
@.str.37 = private unnamed_addr constant [53 x i8] c"Try to get packet number space of encryption level: \00", align 1
@_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime = internal global %"class.absl::uint128" zeroinitializer, align 16
@_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime = internal global i64 0, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZN4quic9QuicUtils23SentPacketStateToStringENS_15SentPacketStateE = private unnamed_addr constant [12 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0)], align 8
@switch.table._ZN4quic9QuicUtils26QuicLongHeaderTypetoStringENS_18QuicLongHeaderTypeE = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0)], align 8
@switch.table._ZN4quic9QuicUtils17AckResultToStringENS_9AckResultE = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.31, i64 0, i64 0)], align 8
@switch.table._ZN4quic9QuicUtils31RetransmissionTypeToPacketStateENS_16TransmissionTypeE = private unnamed_addr constant [9 x i8] c"\05\03\06\08\07\09\0A\0B\03", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN4quic9QuicUtils13FNV1a_64_HashEN4absl11string_viewE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = add i64 %1, -1
  %6 = and i64 %1, 3
  %7 = icmp ult i64 %5, 3
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = sub i64 %1, %6
  br label %29

10:                                               ; preds = %29, %4
  %11 = phi i64 [ undef, %4 ], [ %55, %29 ]
  %12 = phi i64 [ 0, %4 ], [ %56, %29 ]
  %13 = phi i64 [ -3750763034362895579, %4 ], [ %55, %29 ]
  %14 = icmp eq i64 %6, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %10, %15
  %16 = phi i64 [ %24, %15 ], [ %12, %10 ]
  %17 = phi i64 [ %23, %15 ], [ %13, %10 ]
  %18 = phi i64 [ %25, %15 ], [ %6, %10 ]
  %19 = getelementptr inbounds i8, i8* %0, i64 %16
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = xor i64 %17, %21
  %23 = mul i64 %22, 1099511628211
  %24 = add nuw i64 %16, 1
  %25 = add i64 %18, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %15, !llvm.loop !2

27:                                               ; preds = %10, %15, %2
  %28 = phi i64 [ -3750763034362895579, %2 ], [ %11, %10 ], [ %23, %15 ]
  ret i64 %28

29:                                               ; preds = %29, %8
  %30 = phi i64 [ 0, %8 ], [ %56, %29 ]
  %31 = phi i64 [ -3750763034362895579, %8 ], [ %55, %29 ]
  %32 = phi i64 [ %9, %8 ], [ %57, %29 ]
  %33 = getelementptr inbounds i8, i8* %0, i64 %30
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i64
  %36 = xor i64 %31, %35
  %37 = mul i64 %36, 1099511628211
  %38 = or i64 %30, 1
  %39 = getelementptr inbounds i8, i8* %0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = xor i64 %37, %41
  %43 = mul i64 %42, 1099511628211
  %44 = or i64 %30, 2
  %45 = getelementptr inbounds i8, i8* %0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = xor i64 %43, %47
  %49 = mul i64 %48, 1099511628211
  %50 = or i64 %30, 3
  %51 = getelementptr inbounds i8, i8* %0, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i64
  %54 = xor i64 %49, %53
  %55 = mul i64 %54, 1099511628211
  %56 = add nuw i64 %30, 4
  %57 = add i64 %32, -4
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %10, label %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN4quic9QuicUtils14FNV1a_128_HashEN4absl11string_viewE(i8* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = tail call { i64, i64 } @_ZN4quic9QuicUtils20FNV1a_128_Hash_ThreeEN4absl11string_viewES2_S2_(i8* %0, i64 %1, i8* null, i64 0, i8* null, i64 0)
  ret { i64, i64 } %3
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN4quic9QuicUtils20FNV1a_128_Hash_ThreeEN4absl11string_viewES2_S2_(i8* nocapture readonly, i64, i8*, i64, i8*, i64) local_unnamed_addr #2 align 2 {
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %14, !prof !4

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  store <2 x i64> <i64 315, i64 16777216>, <2 x i64>* bitcast (%"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to <2 x i64>*), align 16
  %13 = tail call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to i8*)) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime) #12
  br label %14

14:                                               ; preds = %12, %9, %6
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %80, label %16

16:                                               ; preds = %14
  %17 = load i64, i64* getelementptr inbounds (%"class.absl::uint128", %"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime, i64 0, i32 0), align 16
  %18 = load i64, i64* getelementptr inbounds (%"class.absl::uint128", %"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime, i64 0, i32 1), align 8
  %19 = zext i64 %18 to i128
  %20 = shl nuw i128 %19, 64
  %21 = zext i64 %17 to i128
  %22 = or i128 %20, %21
  %23 = and i64 %1, 1
  %24 = icmp eq i64 %1, 1
  br i1 %24, label %62, label %25

25:                                               ; preds = %16
  %26 = sub i64 %1, %23
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i64 [ 7809847782465536322, %25 ], [ %53, %27 ]
  %29 = phi i64 [ 7113472399480571277, %25 ], [ %51, %27 ]
  %30 = phi i64 [ 0, %25 ], [ %54, %27 ]
  %31 = phi i64 [ %26, %25 ], [ %55, %27 ]
  %32 = getelementptr inbounds i8, i8* %0, i64 %30
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i64
  %35 = xor i64 %29, %34
  %36 = zext i64 %28 to i128
  %37 = shl nuw i128 %36, 64
  %38 = zext i64 %35 to i128
  %39 = or i128 %37, %38
  %40 = mul i128 %39, %22
  %41 = trunc i128 %40 to i64
  %42 = and i128 %40, -18446744073709551616
  %43 = or i64 %30, 1
  %44 = getelementptr inbounds i8, i8* %0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i64
  %47 = xor i64 %41, %46
  %48 = zext i64 %47 to i128
  %49 = or i128 %42, %48
  %50 = mul i128 %49, %22
  %51 = trunc i128 %50 to i64
  %52 = lshr i128 %50, 64
  %53 = trunc i128 %52 to i64
  %54 = add nuw i64 %30, 2
  %55 = add i64 %31, -2
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %27

57:                                               ; preds = %27
  %58 = trunc i128 %50 to i64
  %59 = trunc i128 %50 to i64
  %60 = trunc i128 %52 to i64
  %61 = and i128 %50, -18446744073709551616
  br label %62

62:                                               ; preds = %57, %16
  %63 = phi i64 [ undef, %16 ], [ %59, %57 ]
  %64 = phi i64 [ undef, %16 ], [ %60, %57 ]
  %65 = phi i128 [ 144066263297769815589382157267581796352, %16 ], [ %61, %57 ]
  %66 = phi i64 [ 7113472399480571277, %16 ], [ %58, %57 ]
  %67 = phi i64 [ 0, %16 ], [ %54, %57 ]
  %68 = icmp eq i64 %23, 0
  br i1 %68, label %80, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds i8, i8* %0, i64 %67
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i64
  %73 = xor i64 %66, %72
  %74 = zext i64 %73 to i128
  %75 = or i128 %65, %74
  %76 = mul i128 %75, %22
  %77 = lshr i128 %76, 64
  %78 = trunc i128 %76 to i64
  %79 = trunc i128 %77 to i64
  br label %80

80:                                               ; preds = %69, %62, %14
  %81 = phi i64 [ 7113472399480571277, %14 ], [ %63, %62 ], [ %78, %69 ]
  %82 = phi i64 [ 7809847782465536322, %14 ], [ %64, %62 ], [ %79, %69 ]
  %83 = icmp eq i64 %3, 0
  br i1 %83, label %236, label %84

84:                                               ; preds = %80
  %85 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to i8*) acquire, align 8
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %92, !prof !4

87:                                               ; preds = %84
  %88 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime) #12
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  store <2 x i64> <i64 315, i64 16777216>, <2 x i64>* bitcast (%"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to <2 x i64>*), align 16
  %91 = tail call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to i8*)) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime) #12
  br label %92

92:                                               ; preds = %84, %87, %90
  %93 = load i64, i64* getelementptr inbounds (%"class.absl::uint128", %"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime, i64 0, i32 0), align 16
  %94 = load i64, i64* getelementptr inbounds (%"class.absl::uint128", %"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime, i64 0, i32 1), align 8
  %95 = zext i64 %94 to i128
  %96 = shl nuw i128 %95, 64
  %97 = zext i64 %93 to i128
  %98 = or i128 %96, %97
  %99 = and i64 %3, 1
  %100 = icmp eq i64 %3, 1
  br i1 %100, label %138, label %101

101:                                              ; preds = %92
  %102 = sub i64 %3, %99
  br label %103

103:                                              ; preds = %103, %101
  %104 = phi i64 [ %82, %101 ], [ %129, %103 ]
  %105 = phi i64 [ %81, %101 ], [ %127, %103 ]
  %106 = phi i64 [ 0, %101 ], [ %130, %103 ]
  %107 = phi i64 [ %102, %101 ], [ %131, %103 ]
  %108 = getelementptr inbounds i8, i8* %2, i64 %106
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i64
  %111 = xor i64 %105, %110
  %112 = zext i64 %104 to i128
  %113 = shl nuw i128 %112, 64
  %114 = zext i64 %111 to i128
  %115 = or i128 %113, %114
  %116 = mul i128 %115, %98
  %117 = trunc i128 %116 to i64
  %118 = and i128 %116, -18446744073709551616
  %119 = or i64 %106, 1
  %120 = getelementptr inbounds i8, i8* %2, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i64
  %123 = xor i64 %117, %122
  %124 = zext i64 %123 to i128
  %125 = or i128 %118, %124
  %126 = mul i128 %125, %98
  %127 = trunc i128 %126 to i64
  %128 = lshr i128 %126, 64
  %129 = trunc i128 %128 to i64
  %130 = add nuw i64 %106, 2
  %131 = add i64 %107, -2
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %103

133:                                              ; preds = %103
  %134 = trunc i128 %126 to i64
  %135 = trunc i128 %128 to i64
  %136 = trunc i128 %126 to i64
  %137 = trunc i128 %128 to i64
  br label %138

138:                                              ; preds = %133, %92
  %139 = phi i64 [ undef, %92 ], [ %136, %133 ]
  %140 = phi i64 [ undef, %92 ], [ %137, %133 ]
  %141 = phi i64 [ %82, %92 ], [ %135, %133 ]
  %142 = phi i64 [ %81, %92 ], [ %134, %133 ]
  %143 = phi i64 [ 0, %92 ], [ %130, %133 ]
  %144 = icmp eq i64 %99, 0
  br i1 %144, label %158, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds i8, i8* %2, i64 %143
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i64
  %149 = xor i64 %142, %148
  %150 = zext i64 %141 to i128
  %151 = shl nuw i128 %150, 64
  %152 = zext i64 %149 to i128
  %153 = or i128 %151, %152
  %154 = mul i128 %153, %98
  %155 = lshr i128 %154, 64
  %156 = trunc i128 %154 to i64
  %157 = trunc i128 %155 to i64
  br label %158

158:                                              ; preds = %138, %145
  %159 = phi i64 [ %139, %138 ], [ %156, %145 ]
  %160 = phi i64 [ %140, %138 ], [ %157, %145 ]
  %161 = icmp eq i64 %5, 0
  br i1 %161, label %236, label %162

162:                                              ; preds = %158
  %163 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to i8*) acquire, align 8
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %165, label %170, !prof !4

165:                                              ; preds = %162
  %166 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime) #12
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %165
  store <2 x i64> <i64 315, i64 16777216>, <2 x i64>* bitcast (%"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to <2 x i64>*), align 16
  %169 = tail call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to i8*)) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime) #12
  br label %170

170:                                              ; preds = %162, %165, %168
  %171 = load i64, i64* getelementptr inbounds (%"class.absl::uint128", %"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime, i64 0, i32 0), align 16
  %172 = load i64, i64* getelementptr inbounds (%"class.absl::uint128", %"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime, i64 0, i32 1), align 8
  %173 = zext i64 %172 to i128
  %174 = shl nuw i128 %173, 64
  %175 = zext i64 %171 to i128
  %176 = or i128 %174, %175
  %177 = and i64 %5, 1
  %178 = icmp eq i64 %5, 1
  br i1 %178, label %216, label %179

179:                                              ; preds = %170
  %180 = sub i64 %5, %177
  br label %181

181:                                              ; preds = %181, %179
  %182 = phi i64 [ %160, %179 ], [ %207, %181 ]
  %183 = phi i64 [ %159, %179 ], [ %205, %181 ]
  %184 = phi i64 [ 0, %179 ], [ %208, %181 ]
  %185 = phi i64 [ %180, %179 ], [ %209, %181 ]
  %186 = getelementptr inbounds i8, i8* %4, i64 %184
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = xor i64 %183, %188
  %190 = zext i64 %182 to i128
  %191 = shl nuw i128 %190, 64
  %192 = zext i64 %189 to i128
  %193 = or i128 %191, %192
  %194 = mul i128 %193, %176
  %195 = trunc i128 %194 to i64
  %196 = and i128 %194, -18446744073709551616
  %197 = or i64 %184, 1
  %198 = getelementptr inbounds i8, i8* %4, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i64
  %201 = xor i64 %195, %200
  %202 = zext i64 %201 to i128
  %203 = or i128 %196, %202
  %204 = mul i128 %203, %176
  %205 = trunc i128 %204 to i64
  %206 = lshr i128 %204, 64
  %207 = trunc i128 %206 to i64
  %208 = add nuw i64 %184, 2
  %209 = add i64 %185, -2
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %181

211:                                              ; preds = %181
  %212 = trunc i128 %204 to i64
  %213 = trunc i128 %206 to i64
  %214 = trunc i128 %204 to i64
  %215 = trunc i128 %206 to i64
  br label %216

216:                                              ; preds = %211, %170
  %217 = phi i64 [ undef, %170 ], [ %214, %211 ]
  %218 = phi i64 [ undef, %170 ], [ %215, %211 ]
  %219 = phi i64 [ %160, %170 ], [ %213, %211 ]
  %220 = phi i64 [ %159, %170 ], [ %212, %211 ]
  %221 = phi i64 [ 0, %170 ], [ %208, %211 ]
  %222 = icmp eq i64 %177, 0
  br i1 %222, label %236, label %223

223:                                              ; preds = %216
  %224 = getelementptr inbounds i8, i8* %4, i64 %221
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = xor i64 %220, %226
  %228 = zext i64 %219 to i128
  %229 = shl nuw i128 %228, 64
  %230 = zext i64 %227 to i128
  %231 = or i128 %229, %230
  %232 = mul i128 %231, %176
  %233 = lshr i128 %232, 64
  %234 = trunc i128 %232 to i64
  %235 = trunc i128 %233 to i64
  br label %236

236:                                              ; preds = %223, %216, %158, %80
  %237 = phi i64 [ %81, %80 ], [ %159, %158 ], [ %217, %216 ], [ %234, %223 ]
  %238 = phi i64 [ %82, %80 ], [ %160, %158 ], [ %218, %216 ], [ %235, %223 ]
  %239 = insertvalue { i64, i64 } undef, i64 %237, 0
  %240 = insertvalue { i64, i64 } %239, i64 %238, 1
  ret { i64, i64 } %240
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN4quic9QuicUtils18FNV1a_128_Hash_TwoEN4absl11string_viewES2_(i8* nocapture readonly, i64, i8*, i64) local_unnamed_addr #2 align 2 {
  %5 = tail call { i64, i64 } @_ZN4quic9QuicUtils20FNV1a_128_Hash_ThreeEN4absl11string_viewES2_S2_(i8* %0, i64 %1, i8* %2, i64 %3, i8* null, i64 0)
  ret { i64, i64 } %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic9QuicUtils21SerializeUint128ShortEN4absl7uint128EPh(i64, i64, i8* nocapture) local_unnamed_addr #3 align 2 {
  %4 = bitcast i8* %2 to i64*
  store i64 %0, i64* %4, align 1
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to i32*
  %7 = trunc i64 %1 to i32
  store i32 %7, i32* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9QuicUtils25AddressChangeTypeToStringENS_17AddressChangeTypeE(%"class.std::__1::basic_string"* noalias sret, i8 zeroext) local_unnamed_addr #2 align 2 {
  switch i8 %1, label %38 [
    i8 0, label %3
    i8 1, label %8
    i8 2, label %13
    i8 4, label %18
    i8 5, label %23
    i8 6, label %28
    i8 3, label %33
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 9, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9, i1 false) #12
  %7 = getelementptr inbounds i8, i8* %6, i64 9
  store i8 0, i8* %7, align 1
  br label %44

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 11, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11, i1 false) #12
  %12 = getelementptr inbounds i8, i8* %11, i64 11
  store i8 0, i8* %12, align 1
  br label %44

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 18, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18, i1 false) #12
  %17 = getelementptr inbounds i8, i8* %16, i64 18
  store i8 0, i8* %17, align 2
  br label %44

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 19, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i64 19, i1 false) #12
  %22 = getelementptr inbounds i8, i8* %21, i64 19
  store i8 0, i8* %22, align 1
  br label %44

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 19, i8* %25, align 1
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i64 19, i1 false) #12
  %27 = getelementptr inbounds i8, i8* %26, i64 19
  store i8 0, i8* %27, align 1
  br label %44

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 19, i8* %30, align 1
  %31 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i64 19, i1 false) #12
  %32 = getelementptr inbounds i8, i8* %31, i64 19
  store i8 0, i8* %32, align 1
  br label %44

33:                                               ; preds = %2
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 19, i8* %35, align 1
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i64 19, i1 false) #12
  %37 = getelementptr inbounds i8, i8* %36, i64 19
  store i8 0, i8* %37, align 1
  br label %44

38:                                               ; preds = %2
  %39 = tail call i8* @_Znwm(i64 32) #13
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast i64* %41 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %42, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i64 27, i1 false) #12
  %43 = getelementptr inbounds i8, i8* %39, i64 27
  store i8 0, i8* %43, align 1
  br label %44

44:                                               ; preds = %38, %33, %28, %23, %18, %13, %8, %3
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN4quic9QuicUtils23SentPacketStateToStringENS_15SentPacketStateE(i8 zeroext) local_unnamed_addr #4 align 2 {
  %2 = icmp ult i8 %0, 12
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i8 %0 to i64
  %5 = getelementptr inbounds [12 x i8*], [12 x i8*]* @switch.table._ZN4quic9QuicUtils23SentPacketStateToStringENS_15SentPacketStateE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN4quic9QuicUtils26QuicLongHeaderTypetoStringENS_18QuicLongHeaderTypeE(i8 zeroext) local_unnamed_addr #4 align 2 {
  %2 = icmp ult i8 %0, 5
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i8 %0 to i64
  %5 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table._ZN4quic9QuicUtils26QuicLongHeaderTypetoStringENS_18QuicLongHeaderTypeE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN4quic9QuicUtils17AckResultToStringENS_9AckResultE(i32) local_unnamed_addr #4 align 2 {
  %2 = icmp ult i32 %0, 5
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table._ZN4quic9QuicUtils17AckResultToStringENS_9AckResultE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN4quic9QuicUtils26DetermineAddressChangeTypeERKNS_17QuicSocketAddressES3_(%"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicSocketAddress"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.quic::QuicIpAddress", align 8
  %4 = alloca %"class.quic::QuicIpAddress", align 8
  %5 = alloca %"class.quic::QuicIpAddress", align 4
  %6 = alloca %"class.quic::QuicIpAddress", align 4
  %7 = alloca %"class.quic::QuicIpAddress", align 4
  %8 = alloca %"class.quic::QuicIpAddress", align 4
  %9 = tail call zeroext i1 @_ZNK4quic17QuicSocketAddress13IsInitializedEv(%"class.quic::QuicSocketAddress"* %0) #12
  br i1 %9, label %10, label %31

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @_ZNK4quic17QuicSocketAddress13IsInitializedEv(%"class.quic::QuicSocketAddress"* %1) #12
  br i1 %11, label %12, label %31

12:                                               ; preds = %10
  %13 = tail call zeroext i1 @_ZN4quiceqERKNS_17QuicSocketAddressES2_(%"class.quic::QuicSocketAddress"* dereferenceable(24) %0, %"class.quic::QuicSocketAddress"* dereferenceable(24) %1) #12
  br i1 %13, label %31, label %14

14:                                               ; preds = %12
  call void @_ZNK4quic17QuicSocketAddress4hostEv(%"class.quic::QuicIpAddress"* nonnull sret %3, %"class.quic::QuicSocketAddress"* %0) #12
  call void @_ZNK4quic17QuicSocketAddress4hostEv(%"class.quic::QuicIpAddress"* nonnull sret %4, %"class.quic::QuicSocketAddress"* %1) #12
  %15 = call zeroext i1 @_ZN4quiceqENS_13QuicIpAddressES0_(%"class.quic::QuicIpAddress"* nonnull byval(%"class.quic::QuicIpAddress") align 8 %3, %"class.quic::QuicIpAddress"* nonnull byval(%"class.quic::QuicIpAddress") align 8 %4) #12
  br i1 %15, label %31, label %16

16:                                               ; preds = %14
  %17 = bitcast %"class.quic::QuicIpAddress"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %17) #12
  call void @_ZNK4quic17QuicSocketAddress4hostEv(%"class.quic::QuicIpAddress"* nonnull sret %5, %"class.quic::QuicSocketAddress"* %0) #12
  %18 = call zeroext i1 @_ZNK4quic13QuicIpAddress6IsIPv4Ev(%"class.quic::QuicIpAddress"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %17) #12
  %19 = bitcast %"class.quic::QuicIpAddress"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %19) #12
  call void @_ZNK4quic17QuicSocketAddress4hostEv(%"class.quic::QuicIpAddress"* nonnull sret %6, %"class.quic::QuicSocketAddress"* %1) #12
  %20 = call zeroext i1 @_ZNK4quic13QuicIpAddress6IsIPv4Ev(%"class.quic::QuicIpAddress"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %19) #12
  %21 = xor i1 %18, true
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %31

23:                                               ; preds = %16
  br i1 %18, label %26, label %24

24:                                               ; preds = %23
  %25 = select i1 %20, i8 5, i8 6
  br label %31

26:                                               ; preds = %23
  %27 = bitcast %"class.quic::QuicIpAddress"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %27) #12
  call void @_ZNK4quic17QuicSocketAddress4hostEv(%"class.quic::QuicIpAddress"* nonnull sret %7, %"class.quic::QuicSocketAddress"* %0) #12
  %28 = bitcast %"class.quic::QuicIpAddress"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %28) #12
  call void @_ZNK4quic17QuicSocketAddress4hostEv(%"class.quic::QuicIpAddress"* nonnull sret %8, %"class.quic::QuicSocketAddress"* %1) #12
  %29 = call zeroext i1 @_ZN4quic13QuicIpAddress12InSameSubnetERKS0_i(%"class.quic::QuicIpAddress"* nonnull %7, %"class.quic::QuicIpAddress"* nonnull dereferenceable(20) %8, i32 24) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %27) #12
  %30 = select i1 %29, i8 2, i8 3
  br label %31

31:                                               ; preds = %24, %26, %16, %14, %2, %10, %12
  %32 = phi i8 [ 0, %12 ], [ 0, %10 ], [ 0, %2 ], [ 1, %14 ], [ %30, %26 ], [ %25, %24 ], [ 4, %16 ]
  ret i8 %32
}

declare zeroext i1 @_ZNK4quic17QuicSocketAddress13IsInitializedEv(%"class.quic::QuicSocketAddress"*) local_unnamed_addr #5

declare zeroext i1 @_ZN4quiceqERKNS_17QuicSocketAddressES2_(%"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicSocketAddress"* dereferenceable(24)) local_unnamed_addr #5

declare zeroext i1 @_ZN4quiceqENS_13QuicIpAddressES0_(%"class.quic::QuicIpAddress"* byval(%"class.quic::QuicIpAddress") align 8, %"class.quic::QuicIpAddress"* byval(%"class.quic::QuicIpAddress") align 8) local_unnamed_addr #5

declare void @_ZNK4quic17QuicSocketAddress4hostEv(%"class.quic::QuicIpAddress"* sret, %"class.quic::QuicSocketAddress"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK4quic13QuicIpAddress6IsIPv4Ev(%"class.quic::QuicIpAddress"*) local_unnamed_addr #5

declare zeroext i1 @_ZN4quic13QuicIpAddress12InSameSubnetERKS0_i(%"class.quic::QuicIpAddress"*, %"class.quic::QuicIpAddress"* dereferenceable(20), i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9QuicUtils12CopyToBufferEPK5iovecimmPc(%struct.iovec* nocapture readonly, i32, i64, i64, i8* nocapture) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = icmp sgt i32 %1, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %5
  %9 = zext i32 %1 to i64
  br label %10

10:                                               ; preds = %17, %8
  %11 = phi i64 [ 0, %8 ], [ %19, %17 ]
  %12 = phi i32 [ 0, %8 ], [ %20, %17 ]
  %13 = phi i64 [ %2, %8 ], [ %18, %17 ]
  %14 = getelementptr inbounds %struct.iovec, %struct.iovec* %0, i64 %11, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %22, label %17

17:                                               ; preds = %10
  %18 = sub i64 %13, %15
  %19 = add nuw nsw i64 %11, 1
  %20 = add nuw nsw i32 %12, 1
  %21 = icmp eq i64 %19, %9
  br i1 %21, label %24, label %10

22:                                               ; preds = %10
  %23 = trunc i64 %11 to i32
  br label %24

24:                                               ; preds = %17, %22, %5
  %25 = phi i64 [ %2, %5 ], [ %13, %22 ], [ %18, %17 ]
  %26 = phi i32 [ 0, %5 ], [ %23, %22 ], [ %20, %17 ]
  %27 = icmp sge i32 %26, %1
  %28 = icmp eq i64 %3, 0
  %29 = or i1 %28, %27
  br i1 %29, label %84, label %30

30:                                               ; preds = %24
  %31 = zext i32 %26 to i64
  %32 = getelementptr inbounds %struct.iovec, %struct.iovec* %0, i64 %31, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %33, %25
  %35 = icmp ult i64 %34, %3
  %36 = select i1 %35, i64 %34, i64 %3
  %37 = icmp ugt i64 %34, %3
  br i1 %37, label %50, label %38

38:                                               ; preds = %30
  %39 = add nuw nsw i32 %26, 1
  %40 = icmp slt i32 %39, %1
  br i1 %40, label %41, label %50

41:                                               ; preds = %38
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %struct.iovec, %struct.iovec* %0, i64 %42, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @llvm.prefetch(i8* %44, i32 0, i32 3, i32 1) #12
  %45 = getelementptr inbounds %struct.iovec, %struct.iovec* %0, i64 %42, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp ugt i64 %46, 63
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %44, i64 64
  tail call void @llvm.prefetch(i8* %49, i32 0, i32 3, i32 1) #12
  br label %50

50:                                               ; preds = %30, %41, %48, %38
  %51 = getelementptr inbounds %struct.iovec, %struct.iovec* %0, i64 %31, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %53, i64 %36, i1 false)
  %54 = sub i64 %3, %36
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds i8, i8* %4, i64 %36
  br label %60

58:                                               ; preds = %67, %50
  %59 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br label %84

60:                                               ; preds = %56, %67
  %61 = phi i64 [ %31, %56 ], [ %64, %67 ]
  %62 = phi i8* [ %57, %56 ], [ %75, %67 ]
  %63 = phi i64 [ %54, %56 ], [ %74, %67 ]
  %64 = add nuw nsw i64 %61, 1
  %65 = trunc i64 %64 to i32
  %66 = icmp slt i32 %65, %1
  br i1 %66, label %67, label %77

67:                                               ; preds = %60
  %68 = getelementptr inbounds %struct.iovec, %struct.iovec* %0, i64 %64, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %struct.iovec, %struct.iovec* %0, i64 %64, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = icmp ult i64 %71, %63
  %73 = select i1 %72, i64 %71, i64 %63
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* align 1 %69, i64 %73, i1 false)
  %74 = sub i64 %63, %73
  %75 = getelementptr inbounds i8, i8* %62, i64 %73
  %76 = icmp eq i64 %74, 0
  br i1 %76, label %58, label %60

77:                                               ; preds = %60
  %78 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %78, label %79, label %84

79:                                               ; preds = %77
  %80 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %80) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.33, i64 0, i64 0), i32 286, i32 2) #12
  %81 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %82 = bitcast %"class.std::__1::basic_ostringstream"* %81 to %"class.std::__1::basic_ostream"*
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %82, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0), i64 39) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %80) #12
  br label %84

84:                                               ; preds = %79, %77, %58, %24
  ret void
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #5

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN4quic9QuicUtils9MakeIovecEN4absl11string_viewE(i8*, i64) local_unnamed_addr #4 align 2 {
  %3 = insertvalue { i8*, i64 } undef, i8* %0, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %1, 1
  ret { i8*, i64 } %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils9IsAckableENS_15SentPacketStateE(i8 zeroext) local_unnamed_addr #4 align 2 {
  %2 = add i8 %0, -1
  %3 = icmp ugt i8 %2, 2
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils22IsRetransmittableFrameENS_13QuicFrameTypeE(i8 zeroext) local_unnamed_addr #4 align 2 {
  %2 = icmp ult i8 %0, 18
  br i1 %2, label %3, label %8

3:                                                ; preds = %1
  %4 = zext i8 %0 to i18
  %5 = lshr i18 59326, %4
  %6 = and i18 %5, 1
  %7 = icmp ne i18 %6, 0
  ret i1 %7

8:                                                ; preds = %1
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils16IsHandshakeFrameERKNS_9QuicFrameENS_20QuicTransportVersionE(%"struct.quic::QuicFrame"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #2 align 2 {
  %3 = icmp sgt i32 %1, 46
  %4 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8
  br i1 %3, label %13, label %6

6:                                                ; preds = %2
  %7 = icmp eq i8 %5, 10
  br i1 %7, label %8, label %15

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %0, i64 0, i32 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  %12 = icmp eq i32 %10, 1
  br label %15

13:                                               ; preds = %2
  %14 = icmp eq i8 %5, 8
  br label %15

15:                                               ; preds = %6, %8, %13
  %16 = phi i1 [ %14, %13 ], [ false, %6 ], [ %12, %8 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4quic9QuicUtils17GetCryptoStreamIdENS_20QuicTransportVersionE(i32) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  %4 = icmp sgt i32 %0, 46
  br i1 %3, label %5, label %11

5:                                                ; preds = %1
  br i1 %4, label %6, label %15

6:                                                ; preds = %5
  %7 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %7) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.33, i64 0, i64 0), i32 388, i32 2) #12
  %8 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_ostringstream"* %8 to %"class.std::__1::basic_ostream"*
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.36, i64 0, i64 0), i64 60) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %7) #12
  br label %12

11:                                               ; preds = %1
  br i1 %4, label %12, label %15

12:                                               ; preds = %6, %11
  %13 = icmp sgt i32 %0, 51
  %14 = sext i1 %13 to i32
  br label %15

15:                                               ; preds = %5, %11, %12
  %16 = phi i32 [ %14, %12 ], [ 1, %11 ], [ 1, %5 ]
  ret i32 %16
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils17ContainsFrameTypeERKNSt3__16vectorINS_9QuicFrameENS1_9allocatorIS3_EEEENS_13QuicFrameTypeE(%"class.std::__1::vector.41"* nocapture readonly dereferenceable(24), i8 zeroext) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 1
  %6 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %5, align 8
  %7 = icmp eq %"struct.quic::QuicFrame"* %4, %6
  br i1 %7, label %16, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"struct.quic::QuicFrame"* %15, %6
  br i1 %9, label %16, label %10

10:                                               ; preds = %2, %8
  %11 = phi %"struct.quic::QuicFrame"* [ %15, %8 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, %1
  %15 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %11, i64 1
  br i1 %14, label %16, label %8

16:                                               ; preds = %8, %10, %2
  %17 = phi i1 [ false, %2 ], [ true, %10 ], [ false, %8 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN4quic9QuicUtils31RetransmissionTypeToPacketStateENS_16TransmissionTypeE(i8 signext) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = sext i8 %0 to i32
  %4 = add nsw i32 %3, -1
  %5 = icmp ult i32 %4, 9
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %7, label %8, label %18

8:                                                ; preds = %6
  %9 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %9) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.33, i64 0, i64 0), i32 362, i32 2) #12
  %10 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_ostringstream"* %10 to %"class.std::__1::basic_ostream"*
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_16TransmissionTypeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8 signext %0) #12
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i64 29) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %9) #12
  br label %18

14:                                               ; preds = %1
  %15 = sext i32 %4 to i64
  %16 = getelementptr inbounds [9 x i8], [9 x i8]* @switch.table._ZN4quic9QuicUtils31RetransmissionTypeToPacketStateENS_16TransmissionTypeE, i64 0, i64 %15
  %17 = load i8, i8* %16, align 1
  ret i8 %17

18:                                               ; preds = %8, %6
  ret i8 3
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_16TransmissionTypeE(%"class.std::__1::basic_ostream"* dereferenceable(160), i8 signext) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils18IsIetfPacketHeaderEh(i8 zeroext) local_unnamed_addr #4 align 2 {
  %2 = zext i8 %0 to i32
  %3 = icmp sgt i8 %0, -1
  %4 = and i32 %2, 64
  %5 = icmp eq i32 %4, 0
  %6 = and i1 %3, %5
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = and i32 %2, 8
  %9 = icmp eq i32 %8, 0
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi i1 [ true, %1 ], [ %9, %7 ]
  ret i1 %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils23IsIetfPacketShortHeaderEh(i8 zeroext) local_unnamed_addr #4 align 2 {
  %2 = zext i8 %0 to i32
  %3 = icmp sgt i8 %0, -1
  %4 = and i32 %2, 64
  %5 = icmp eq i32 %4, 0
  %6 = and i1 %3, %5
  %7 = xor i1 %6, true
  %8 = and i32 %2, 8
  %9 = icmp eq i32 %8, 0
  %10 = or i1 %9, %7
  %11 = and i1 %3, %10
  ret i1 %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32) local_unnamed_addr #4 align 2 {
  %2 = icmp sgt i32 %0, 51
  %3 = sext i1 %2 to i32
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils16IsCryptoStreamIdENS_20QuicTransportVersionEj(i32, i32) local_unnamed_addr #2 align 2 {
  %3 = icmp sgt i32 %0, 46
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  %6 = icmp eq i32 %1, 1
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i1 [ %6, %4 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4quic9QuicUtils18GetHeadersStreamIdENS_20QuicTransportVersionE(i32) local_unnamed_addr #4 align 2 {
  %2 = icmp sgt i32 %0, 51
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = icmp sgt i32 %0, 46
  %5 = select i1 %4, i32 1, i32 3
  ret i32 %5

6:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4quic9QuicUtils29GetFirstBidirectionalStreamIdENS_20QuicTransportVersionENS_11PerspectiveE(i32, i8 zeroext) local_unnamed_addr #4 align 2 {
  %3 = icmp sgt i32 %0, 51
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = icmp ne i8 %1, 1
  %6 = zext i1 %5 to i32
  br label %14

7:                                                ; preds = %2
  %8 = icmp sgt i32 %0, 46
  %9 = icmp eq i8 %1, 1
  br i1 %8, label %10, label %12

10:                                               ; preds = %7
  %11 = select i1 %9, i32 1, i32 2
  br label %14

12:                                               ; preds = %7
  %13 = select i1 %9, i32 3, i32 2
  br label %14

14:                                               ; preds = %12, %10, %4
  %15 = phi i32 [ %6, %4 ], [ %11, %10 ], [ %13, %12 ]
  ret i32 %15
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils25IsClientInitiatedStreamIdENS_20QuicTransportVersionEj(i32, i32) local_unnamed_addr #4 align 2 {
  %3 = icmp sgt i32 %0, 51
  %4 = sext i1 %3 to i32
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = and i32 %1, 1
  %8 = icmp eq i32 %7, 0
  %9 = icmp ne i32 %7, 0
  %10 = select i1 %3, i1 %8, i1 %9
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i1 [ %10, %6 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils25IsServerInitiatedStreamIdENS_20QuicTransportVersionEj(i32, i32) local_unnamed_addr #4 align 2 {
  %3 = icmp sgt i32 %0, 51
  %4 = sext i1 %3 to i32
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = and i32 %1, 1
  %8 = icmp ne i32 %7, 0
  %9 = icmp eq i32 %7, 0
  %10 = select i1 %3, i1 %8, i1 %9
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i1 [ %10, %6 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils18IsOutgoingStreamIdENS_17ParsedQuicVersionEjNS_11PerspectiveE(%"struct.quic::ParsedQuicVersion"* nocapture readonly, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = icmp ne i8 %2, 0
  %5 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 51
  %8 = sext i1 %7 to i32
  %9 = icmp eq i32 %8, %1
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = and i32 %1, 1
  %12 = icmp ne i32 %11, 0
  %13 = icmp eq i32 %11, 0
  %14 = select i1 %7, i1 %12, i1 %13
  br label %15

15:                                               ; preds = %3, %10
  %16 = phi i1 [ %14, %10 ], [ false, %3 ]
  %17 = xor i1 %4, %16
  ret i1 %17
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils23IsBidirectionalStreamIdEjNS_17ParsedQuicVersionE(i32, %"struct.quic::ParsedQuicVersion"* nocapture readnone) local_unnamed_addr #4 align 2 {
  %3 = and i32 %0, 2
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN4quic9QuicUtils13GetStreamTypeEjNS_11PerspectiveEbNS_17ParsedQuicVersionE(i32, i8 zeroext, i1 zeroext, %"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = and i32 %0, 2
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %2, i32 2, i32 1
  %8 = select i1 %6, i32 0, i32 %7
  ret i32 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4quic9QuicUtils13StreamIdDeltaENS_20QuicTransportVersionE(i32) local_unnamed_addr #4 align 2 {
  %2 = icmp sgt i32 %0, 51
  %3 = select i1 %2, i32 4, i32 2
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4quic9QuicUtils30GetFirstUnidirectionalStreamIdENS_20QuicTransportVersionENS_11PerspectiveE(i32, i8 zeroext) local_unnamed_addr #4 align 2 {
  %3 = icmp sgt i32 %0, 51
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = icmp eq i8 %1, 1
  %6 = select i1 %5, i32 2, i32 3
  br label %14

7:                                                ; preds = %2
  %8 = icmp sgt i32 %0, 46
  %9 = icmp eq i8 %1, 1
  br i1 %8, label %10, label %12

10:                                               ; preds = %7
  %11 = select i1 %9, i32 1, i32 2
  br label %14

12:                                               ; preds = %7
  %13 = select i1 %9, i32 3, i32 2
  br label %14

14:                                               ; preds = %12, %10, %4
  %15 = phi i32 [ %6, %4 ], [ %11, %10 ], [ %13, %12 ]
  ret i32 %15
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4quic9QuicUtils42GetMaxClientInitiatedBidirectionalStreamIdENS_20QuicTransportVersionE(i32) local_unnamed_addr #4 align 2 {
  %2 = icmp sgt i32 %0, 51
  %3 = select i1 %2, i32 -4, i32 -1
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9QuicUtils29CreateReplacementConnectionIdERKNS_16QuicConnectionIdE(%"class.quic::QuicConnectionId"* noalias sret, %"class.quic::QuicConnectionId"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12, !noalias !5
  store i64 -6148914691236517206, i64* %3, align 8, !noalias !5
  %5 = tail call i8* @_ZNK4quic16QuicConnectionId4dataEv(%"class.quic::QuicConnectionId"* %1) #12
  %6 = tail call zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"* %1) #12
  %7 = zext i8 %6 to i64
  %8 = icmp eq i8 %6, 0
  br i1 %8, label %62, label %9

9:                                                ; preds = %2
  %10 = add nsw i64 %7, -1
  %11 = and i64 %7, 3
  %12 = icmp ult i64 %10, 3
  br i1 %12, label %45, label %13

13:                                               ; preds = %9
  %14 = sub nsw i64 %7, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %42, %15 ]
  %17 = phi i64 [ -3750763034362895579, %13 ], [ %41, %15 ]
  %18 = phi i64 [ %14, %13 ], [ %43, %15 ]
  %19 = getelementptr inbounds i8, i8* %5, i64 %16
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = xor i64 %17, %21
  %23 = mul i64 %22, 1099511628211
  %24 = or i64 %16, 1
  %25 = getelementptr inbounds i8, i8* %5, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = xor i64 %23, %27
  %29 = mul i64 %28, 1099511628211
  %30 = or i64 %16, 2
  %31 = getelementptr inbounds i8, i8* %5, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = xor i64 %29, %33
  %35 = mul i64 %34, 1099511628211
  %36 = or i64 %16, 3
  %37 = getelementptr inbounds i8, i8* %5, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = xor i64 %35, %39
  %41 = mul i64 %40, 1099511628211
  %42 = add nuw nsw i64 %16, 4
  %43 = add i64 %18, -4
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %15

45:                                               ; preds = %15, %9
  %46 = phi i64 [ undef, %9 ], [ %41, %15 ]
  %47 = phi i64 [ 0, %9 ], [ %42, %15 ]
  %48 = phi i64 [ -3750763034362895579, %9 ], [ %41, %15 ]
  %49 = icmp eq i64 %11, 0
  br i1 %49, label %62, label %50

50:                                               ; preds = %45, %50
  %51 = phi i64 [ %59, %50 ], [ %47, %45 ]
  %52 = phi i64 [ %58, %50 ], [ %48, %45 ]
  %53 = phi i64 [ %60, %50 ], [ %11, %45 ]
  %54 = getelementptr inbounds i8, i8* %5, i64 %51
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = xor i64 %52, %56
  %58 = mul i64 %57, 1099511628211
  %59 = add nuw nsw i64 %51, 1
  %60 = add i64 %53, -1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %50, !llvm.loop !8

62:                                               ; preds = %45, %50, %2
  %63 = phi i64 [ -3750763034362895579, %2 ], [ %46, %45 ], [ %58, %50 ]
  store i64 %63, i64* %3, align 8, !noalias !5
  call void @_ZN4quic16QuicConnectionIdC1EPKch(%"class.quic::QuicConnectionId"* %0, i8* nonnull %4, i8 zeroext 8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12, !noalias !5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9QuicUtils29CreateReplacementConnectionIdERKNS_16QuicConnectionIdEh(%"class.quic::QuicConnectionId"* noalias sret, %"class.quic::QuicConnectionId"* dereferenceable(16), i8 zeroext) local_unnamed_addr #2 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca [255 x i8], align 16
  %6 = icmp eq i8 %2, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN4quic21EmptyQuicConnectionIdEv(%"class.quic::QuicConnectionId"* sret %0) #12
  br label %159

8:                                                ; preds = %3
  %9 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  store i64 -6148914691236517206, i64* %4, align 8
  %10 = tail call i8* @_ZNK4quic16QuicConnectionId4dataEv(%"class.quic::QuicConnectionId"* %1) #12
  %11 = tail call zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"* %1) #12
  %12 = zext i8 %11 to i64
  %13 = icmp eq i8 %11, 0
  br i1 %13, label %67, label %14

14:                                               ; preds = %8
  %15 = add nsw i64 %12, -1
  %16 = and i64 %12, 3
  %17 = icmp ult i64 %15, 3
  br i1 %17, label %50, label %18

18:                                               ; preds = %14
  %19 = sub nsw i64 %12, %16
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i64 [ 0, %18 ], [ %47, %20 ]
  %22 = phi i64 [ -3750763034362895579, %18 ], [ %46, %20 ]
  %23 = phi i64 [ %19, %18 ], [ %48, %20 ]
  %24 = getelementptr inbounds i8, i8* %10, i64 %21
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i64
  %27 = xor i64 %22, %26
  %28 = mul i64 %27, 1099511628211
  %29 = or i64 %21, 1
  %30 = getelementptr inbounds i8, i8* %10, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = xor i64 %28, %32
  %34 = mul i64 %33, 1099511628211
  %35 = or i64 %21, 2
  %36 = getelementptr inbounds i8, i8* %10, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = xor i64 %34, %38
  %40 = mul i64 %39, 1099511628211
  %41 = or i64 %21, 3
  %42 = getelementptr inbounds i8, i8* %10, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i64
  %45 = xor i64 %40, %44
  %46 = mul i64 %45, 1099511628211
  %47 = add nuw nsw i64 %21, 4
  %48 = add i64 %23, -4
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %20

50:                                               ; preds = %20, %14
  %51 = phi i64 [ undef, %14 ], [ %46, %20 ]
  %52 = phi i64 [ 0, %14 ], [ %47, %20 ]
  %53 = phi i64 [ -3750763034362895579, %14 ], [ %46, %20 ]
  %54 = icmp eq i64 %16, 0
  br i1 %54, label %67, label %55

55:                                               ; preds = %50, %55
  %56 = phi i64 [ %64, %55 ], [ %52, %50 ]
  %57 = phi i64 [ %63, %55 ], [ %53, %50 ]
  %58 = phi i64 [ %65, %55 ], [ %16, %50 ]
  %59 = getelementptr inbounds i8, i8* %10, i64 %56
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i64
  %62 = xor i64 %57, %61
  %63 = mul i64 %62, 1099511628211
  %64 = add nuw nsw i64 %56, 1
  %65 = add i64 %58, -1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %55, !llvm.loop !9

67:                                               ; preds = %50, %55, %8
  %68 = phi i64 [ -3750763034362895579, %8 ], [ %51, %50 ], [ %63, %55 ]
  store i64 %68, i64* %4, align 8
  %69 = icmp ult i8 %2, 9
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZN4quic16QuicConnectionIdC1EPKch(%"class.quic::QuicConnectionId"* %0, i8* nonnull %9, i8 zeroext %2) #12
  br label %158

71:                                               ; preds = %67
  %72 = getelementptr inbounds [255 x i8], [255 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %72) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %72, i8 0, i64 255, i1 false)
  %73 = tail call i8* @_ZNK4quic16QuicConnectionId4dataEv(%"class.quic::QuicConnectionId"* %1) #12
  %74 = tail call zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"* %1) #12
  %75 = zext i8 %74 to i64
  %76 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to i8*) acquire, align 8
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %83, !prof !4

78:                                               ; preds = %71
  %79 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime) #12
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  store <2 x i64> <i64 315, i64 16777216>, <2 x i64>* bitcast (%"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to <2 x i64>*), align 16
  %82 = tail call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to i8*)) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime) #12
  br label %83

83:                                               ; preds = %81, %78, %71
  %84 = icmp eq i8 %74, 0
  br i1 %84, label %149, label %85

85:                                               ; preds = %83
  %86 = load i64, i64* getelementptr inbounds (%"class.absl::uint128", %"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime, i64 0, i32 0), align 16
  %87 = load i64, i64* getelementptr inbounds (%"class.absl::uint128", %"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime, i64 0, i32 1), align 8
  %88 = zext i64 %87 to i128
  %89 = shl nuw i128 %88, 64
  %90 = zext i64 %86 to i128
  %91 = or i128 %89, %90
  %92 = and i64 %75, 1
  %93 = icmp eq i8 %74, 1
  br i1 %93, label %131, label %94

94:                                               ; preds = %85
  %95 = sub nsw i64 %75, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 7809847782465536322, %94 ], [ %122, %96 ]
  %98 = phi i64 [ 7113472399480571277, %94 ], [ %120, %96 ]
  %99 = phi i64 [ 0, %94 ], [ %123, %96 ]
  %100 = phi i64 [ %95, %94 ], [ %124, %96 ]
  %101 = getelementptr inbounds i8, i8* %73, i64 %99
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i64
  %104 = xor i64 %98, %103
  %105 = zext i64 %97 to i128
  %106 = shl nuw i128 %105, 64
  %107 = zext i64 %104 to i128
  %108 = or i128 %106, %107
  %109 = mul i128 %108, %91
  %110 = trunc i128 %109 to i64
  %111 = and i128 %109, -18446744073709551616
  %112 = or i64 %99, 1
  %113 = getelementptr inbounds i8, i8* %73, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i64
  %116 = xor i64 %110, %115
  %117 = zext i64 %116 to i128
  %118 = or i128 %111, %117
  %119 = mul i128 %118, %91
  %120 = trunc i128 %119 to i64
  %121 = lshr i128 %119, 64
  %122 = trunc i128 %121 to i64
  %123 = add nuw nsw i64 %99, 2
  %124 = add i64 %100, -2
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %96

126:                                              ; preds = %96
  %127 = trunc i128 %119 to i64
  %128 = trunc i128 %119 to i64
  %129 = trunc i128 %121 to i64
  %130 = and i128 %119, -18446744073709551616
  br label %131

131:                                              ; preds = %126, %85
  %132 = phi i64 [ undef, %85 ], [ %128, %126 ]
  %133 = phi i64 [ undef, %85 ], [ %129, %126 ]
  %134 = phi i128 [ 144066263297769815589382157267581796352, %85 ], [ %130, %126 ]
  %135 = phi i64 [ 7113472399480571277, %85 ], [ %127, %126 ]
  %136 = phi i64 [ 0, %85 ], [ %123, %126 ]
  %137 = icmp eq i64 %92, 0
  br i1 %137, label %149, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds i8, i8* %73, i64 %136
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i64
  %142 = xor i64 %135, %141
  %143 = zext i64 %142 to i128
  %144 = or i128 %134, %143
  %145 = mul i128 %144, %91
  %146 = lshr i128 %145, 64
  %147 = trunc i128 %145 to i64
  %148 = trunc i128 %146 to i64
  br label %149

149:                                              ; preds = %138, %131, %83
  %150 = phi i64 [ 7113472399480571277, %83 ], [ %132, %131 ], [ %147, %138 ]
  %151 = phi i64 [ 7809847782465536322, %83 ], [ %133, %131 ], [ %148, %138 ]
  %152 = bitcast [255 x i8]* %5 to i64*
  %153 = load i64, i64* %4, align 8
  store i64 %153, i64* %152, align 16
  %154 = getelementptr inbounds [255 x i8], [255 x i8]* %5, i64 0, i64 8
  %155 = bitcast i8* %154 to i64*
  store i64 %150, i64* %155, align 8
  %156 = getelementptr inbounds [255 x i8], [255 x i8]* %5, i64 0, i64 16
  %157 = bitcast i8* %156 to i64*
  store i64 %151, i64* %157, align 16
  call void @_ZN4quic16QuicConnectionIdC1EPKch(%"class.quic::QuicConnectionId"* %0, i8* nonnull %72, i8 zeroext %2) #12
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %72) #12
  br label %158

158:                                              ; preds = %149, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  br label %159

159:                                              ; preds = %158, %7
  ret void
}

declare void @_ZN4quic21EmptyQuicConnectionIdEv(%"class.quic::QuicConnectionId"* sret) local_unnamed_addr #5

declare i8* @_ZNK4quic16QuicConnectionId4dataEv(%"class.quic::QuicConnectionId"*) local_unnamed_addr #5

declare zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"*) local_unnamed_addr #5

declare void @_ZN4quic16QuicConnectionIdC1EPKch(%"class.quic::QuicConnectionId"*, i8*, i8 zeroext) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9QuicUtils24CreateRandomConnectionIdEv(%"class.quic::QuicConnectionId"* noalias sret) local_unnamed_addr #2 align 2 {
  %2 = tail call %"class.quic::QuicRandom"* @_ZN4quic10QuicRandom11GetInstanceEv() #12
  %3 = getelementptr inbounds %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 16, i1 false) #12, !alias.scope !10
  tail call void @_ZN4quic16QuicConnectionIdC1Ev(%"class.quic::QuicConnectionId"* %0) #12
  tail call void @_ZN4quic16QuicConnectionId10set_lengthEh(%"class.quic::QuicConnectionId"* %0, i8 zeroext 8) #12
  %4 = tail call zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"* %0) #12
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN4quic16QuicConnectionId12mutable_dataEv(%"class.quic::QuicConnectionId"* %0) #12
  %8 = tail call zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"* %0) #12
  %9 = zext i8 %8 to i64
  %10 = bitcast %"class.quic::QuicRandom"* %2 to void (%"class.quic::QuicRandom"*, i8*, i64)***
  %11 = load void (%"class.quic::QuicRandom"*, i8*, i64)**, void (%"class.quic::QuicRandom"*, i8*, i64)*** %10, align 8, !noalias !10
  %12 = getelementptr inbounds void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %11, i64 2
  %13 = load void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %12, align 8
  tail call void %13(%"class.quic::QuicRandom"* %2, i8* %7, i64 %9) #12
  br label %14

14:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9QuicUtils24CreateRandomConnectionIdEhPNS_10QuicRandomE(%"class.quic::QuicConnectionId"* noalias sret, i8 zeroext, %"class.quic::QuicRandom"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId"* %0, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 16, i1 false)
  tail call void @_ZN4quic16QuicConnectionIdC1Ev(%"class.quic::QuicConnectionId"* %0) #12
  tail call void @_ZN4quic16QuicConnectionId10set_lengthEh(%"class.quic::QuicConnectionId"* %0, i8 zeroext %1) #12
  %5 = tail call zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"* %0) #12
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN4quic16QuicConnectionId12mutable_dataEv(%"class.quic::QuicConnectionId"* %0) #12
  %9 = tail call zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"* %0) #12
  %10 = zext i8 %9 to i64
  %11 = bitcast %"class.quic::QuicRandom"* %2 to void (%"class.quic::QuicRandom"*, i8*, i64)***
  %12 = load void (%"class.quic::QuicRandom"*, i8*, i64)**, void (%"class.quic::QuicRandom"*, i8*, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %12, i64 2
  %14 = load void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %13, align 8
  tail call void %14(%"class.quic::QuicRandom"* %2, i8* %8, i64 %10) #12
  br label %15

15:                                               ; preds = %7, %3
  ret void
}

declare %"class.quic::QuicRandom"* @_ZN4quic10QuicRandom11GetInstanceEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9QuicUtils24CreateRandomConnectionIdEPNS_10QuicRandomE(%"class.quic::QuicConnectionId"* noalias sret, %"class.quic::QuicRandom"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 16, i1 false) #12, !alias.scope !13
  tail call void @_ZN4quic16QuicConnectionIdC1Ev(%"class.quic::QuicConnectionId"* %0) #12
  tail call void @_ZN4quic16QuicConnectionId10set_lengthEh(%"class.quic::QuicConnectionId"* %0, i8 zeroext 8) #12
  %4 = tail call zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"* %0) #12
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = tail call i8* @_ZN4quic16QuicConnectionId12mutable_dataEv(%"class.quic::QuicConnectionId"* %0) #12
  %8 = tail call zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"* %0) #12
  %9 = zext i8 %8 to i64
  %10 = bitcast %"class.quic::QuicRandom"* %1 to void (%"class.quic::QuicRandom"*, i8*, i64)***
  %11 = load void (%"class.quic::QuicRandom"*, i8*, i64)**, void (%"class.quic::QuicRandom"*, i8*, i64)*** %10, align 8, !noalias !13
  %12 = getelementptr inbounds void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %11, i64 2
  %13 = load void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %12, align 8
  tail call void %13(%"class.quic::QuicRandom"* %1, i8* %7, i64 %9) #12
  br label %14

14:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9QuicUtils24CreateRandomConnectionIdEh(%"class.quic::QuicConnectionId"* noalias sret, i8 zeroext) local_unnamed_addr #2 align 2 {
  %3 = tail call %"class.quic::QuicRandom"* @_ZN4quic10QuicRandom11GetInstanceEv() #12
  %4 = getelementptr inbounds %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 16, i1 false) #12, !alias.scope !16
  tail call void @_ZN4quic16QuicConnectionIdC1Ev(%"class.quic::QuicConnectionId"* %0) #12
  tail call void @_ZN4quic16QuicConnectionId10set_lengthEh(%"class.quic::QuicConnectionId"* %0, i8 zeroext %1) #12
  %5 = tail call zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"* %0) #12
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN4quic16QuicConnectionId12mutable_dataEv(%"class.quic::QuicConnectionId"* %0) #12
  %9 = tail call zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"* %0) #12
  %10 = zext i8 %9 to i64
  %11 = bitcast %"class.quic::QuicRandom"* %3 to void (%"class.quic::QuicRandom"*, i8*, i64)***
  %12 = load void (%"class.quic::QuicRandom"*, i8*, i64)**, void (%"class.quic::QuicRandom"*, i8*, i64)*** %11, align 8, !noalias !16
  %13 = getelementptr inbounds void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %12, i64 2
  %14 = load void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %13, align 8
  tail call void %14(%"class.quic::QuicRandom"* %3, i8* %8, i64 %10) #12
  br label %15

15:                                               ; preds = %2, %7
  ret void
}

declare void @_ZN4quic16QuicConnectionIdC1Ev(%"class.quic::QuicConnectionId"*) unnamed_addr #5

declare void @_ZN4quic16QuicConnectionId10set_lengthEh(%"class.quic::QuicConnectionId"*, i8 zeroext) local_unnamed_addr #5

declare i8* @_ZN4quic16QuicConnectionId12mutable_dataEv(%"class.quic::QuicConnectionId"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9QuicUtils22CreateZeroConnectionIdENS_20QuicTransportVersionE(%"class.quic::QuicConnectionId"* noalias sret, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = tail call zeroext i1 @_ZN4quic40VersionAllowsVariableLengthConnectionIdsENS_20QuicTransportVersionE(i32 %1) #12
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i64 0, i64* %3, align 8
  call void @_ZN4quic16QuicConnectionIdC1EPKch(%"class.quic::QuicConnectionId"* %0, i8* nonnull %6, i8 zeroext 8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  br label %8

7:                                                ; preds = %2
  tail call void @_ZN4quic21EmptyQuicConnectionIdEv(%"class.quic::QuicConnectionId"* sret %0) #12
  br label %8

8:                                                ; preds = %7, %5
  ret void
}

declare zeroext i1 @_ZN4quic40VersionAllowsVariableLengthConnectionIdsENS_20QuicTransportVersionE(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils35IsConnectionIdLengthValidForVersionEmNS_20QuicTransportVersionE(i64, i32) local_unnamed_addr #2 align 2 {
  %3 = icmp ugt i64 %0, 255
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  switch i32 %1, label %5 [
    i32 999, label %21
    i32 0, label %21
  ]

5:                                                ; preds = %4
  %6 = tail call zeroext i1 @_ZN4quic40VersionAllowsVariableLengthConnectionIdsENS_20QuicTransportVersionE(i32 %1) #12
  br i1 %6, label %10, label %7

7:                                                ; preds = %5
  %8 = and i64 %0, 255
  %9 = icmp eq i64 %8, 8
  br label %21

10:                                               ; preds = %5
  %11 = trunc i64 %0 to i32
  %12 = tail call zeroext i1 @_ZN4quic37VersionHasLengthPrefixedConnectionIdsENS_20QuicTransportVersionE(i32 %1) #12
  %13 = and i32 %11, 255
  br i1 %12, label %19, label %14

14:                                               ; preds = %10
  %15 = icmp eq i32 %13, 0
  %16 = add nsw i32 %13, -4
  %17 = icmp ult i32 %16, 15
  %18 = or i1 %15, %17
  br label %21

19:                                               ; preds = %10
  %20 = icmp ult i32 %13, 21
  br label %21

21:                                               ; preds = %7, %19, %14, %4, %4, %2
  %22 = phi i1 [ false, %2 ], [ true, %4 ], [ true, %4 ], [ %20, %19 ], [ %9, %7 ], [ %18, %14 ]
  ret i1 %22
}

declare zeroext i1 @_ZN4quic37VersionHasLengthPrefixedConnectionIdsENS_20QuicTransportVersionE(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils29IsConnectionIdValidForVersionENS_16QuicConnectionIdENS_20QuicTransportVersionE(%"class.quic::QuicConnectionId"*, i32) local_unnamed_addr #2 align 2 {
  %3 = tail call zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"* %0) #12
  switch i32 %1, label %4 [
    i32 999, label %18
    i32 0, label %18
  ]

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZN4quic40VersionAllowsVariableLengthConnectionIdsENS_20QuicTransportVersionE(i32 %1) #12
  br i1 %5, label %8, label %6

6:                                                ; preds = %4
  %7 = icmp eq i8 %3, 8
  br label %18

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZN4quic37VersionHasLengthPrefixedConnectionIdsENS_20QuicTransportVersionE(i32 %1) #12
  br i1 %9, label %16, label %10

10:                                               ; preds = %8
  %11 = zext i8 %3 to i32
  %12 = icmp eq i8 %3, 0
  %13 = add nsw i32 %11, -4
  %14 = icmp ult i32 %13, 15
  %15 = or i1 %12, %14
  br label %18

16:                                               ; preds = %8
  %17 = icmp ult i8 %3, 21
  br label %18

18:                                               ; preds = %2, %2, %6, %10, %16
  %19 = phi i1 [ true, %2 ], [ true, %2 ], [ %17, %16 ], [ %7, %6 ], [ %15, %10 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN4quic9QuicUtils27GenerateStatelessResetTokenENS_16QuicConnectionIdE(%"class.quic::QuicConnectionId"*) local_unnamed_addr #2 align 2 {
  %2 = tail call i8* @_ZNK4quic16QuicConnectionId4dataEv(%"class.quic::QuicConnectionId"* %0) #12
  %3 = tail call zeroext i8 @_ZNK4quic16QuicConnectionId6lengthEv(%"class.quic::QuicConnectionId"* %0) #12
  %4 = zext i8 %3 to i64
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %12, !prof !4

7:                                                ; preds = %1
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime) #12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  store <2 x i64> <i64 315, i64 16777216>, <2 x i64>* bitcast (%"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to <2 x i64>*), align 16
  %11 = tail call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime to i8*)) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime) #12
  br label %12

12:                                               ; preds = %10, %7, %1
  %13 = icmp eq i8 %3, 0
  br i1 %13, label %78, label %14

14:                                               ; preds = %12
  %15 = load i64, i64* getelementptr inbounds (%"class.absl::uint128", %"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime, i64 0, i32 0), align 16
  %16 = load i64, i64* getelementptr inbounds (%"class.absl::uint128", %"class.absl::uint128"* @_ZZN4quic12_GLOBAL__N_119IncrementalHashFastEN4absl7uint128ENS1_11string_viewEE6kPrime, i64 0, i32 1), align 8
  %17 = zext i64 %16 to i128
  %18 = shl nuw i128 %17, 64
  %19 = zext i64 %15 to i128
  %20 = or i128 %18, %19
  %21 = and i64 %4, 1
  %22 = icmp eq i8 %3, 1
  br i1 %22, label %60, label %23

23:                                               ; preds = %14
  %24 = sub nsw i64 %4, %21
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ 7809847782465536322, %23 ], [ %51, %25 ]
  %27 = phi i64 [ 7113472399480571277, %23 ], [ %49, %25 ]
  %28 = phi i64 [ 0, %23 ], [ %52, %25 ]
  %29 = phi i64 [ %24, %23 ], [ %53, %25 ]
  %30 = getelementptr inbounds i8, i8* %2, i64 %28
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = xor i64 %27, %32
  %34 = zext i64 %26 to i128
  %35 = shl nuw i128 %34, 64
  %36 = zext i64 %33 to i128
  %37 = or i128 %35, %36
  %38 = mul i128 %37, %20
  %39 = trunc i128 %38 to i64
  %40 = and i128 %38, -18446744073709551616
  %41 = or i64 %28, 1
  %42 = getelementptr inbounds i8, i8* %2, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i64
  %45 = xor i64 %39, %44
  %46 = zext i64 %45 to i128
  %47 = or i128 %40, %46
  %48 = mul i128 %47, %20
  %49 = trunc i128 %48 to i64
  %50 = lshr i128 %48, 64
  %51 = trunc i128 %50 to i64
  %52 = add nuw nsw i64 %28, 2
  %53 = add i64 %29, -2
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %25

55:                                               ; preds = %25
  %56 = trunc i128 %48 to i64
  %57 = trunc i128 %48 to i64
  %58 = trunc i128 %50 to i64
  %59 = and i128 %48, -18446744073709551616
  br label %60

60:                                               ; preds = %55, %14
  %61 = phi i64 [ undef, %14 ], [ %57, %55 ]
  %62 = phi i64 [ undef, %14 ], [ %58, %55 ]
  %63 = phi i128 [ 144066263297769815589382157267581796352, %14 ], [ %59, %55 ]
  %64 = phi i64 [ 7113472399480571277, %14 ], [ %56, %55 ]
  %65 = phi i64 [ 0, %14 ], [ %52, %55 ]
  %66 = icmp eq i64 %21, 0
  br i1 %66, label %78, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds i8, i8* %2, i64 %65
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = xor i64 %64, %70
  %72 = zext i64 %71 to i128
  %73 = or i128 %63, %72
  %74 = mul i128 %73, %20
  %75 = lshr i128 %74, 64
  %76 = trunc i128 %74 to i64
  %77 = trunc i128 %75 to i64
  br label %78

78:                                               ; preds = %67, %60, %12
  %79 = phi i64 [ 7113472399480571277, %12 ], [ %61, %60 ], [ %76, %67 ]
  %80 = phi i64 [ 7809847782465536322, %12 ], [ %62, %60 ], [ %77, %67 ]
  %81 = insertvalue { i64, i64 } undef, i64 %79, 0
  %82 = insertvalue { i64, i64 } %81, i64 %80, 1
  ret { i64, i64 } %82
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4quic9QuicUtils17GetMaxStreamCountEv() local_unnamed_addr #4 align 2 {
  ret i32 1073741824
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN4quic9QuicUtils20GetPacketNumberSpaceENS_15EncryptionLevelE(i8 signext) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = icmp ult i8 %0, 4
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %5, label %6, label %17

6:                                                ; preds = %4
  %7 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %7) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.33, i64 0, i64 0), i32 660, i32 2) #12
  %8 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_ostringstream"* %8 to %"class.std::__1::basic_ostream"*
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.37, i64 0, i64 0), i64 52) #12
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_15EncryptionLevelE(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8 signext %0) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %7) #12
  br label %17

12:                                               ; preds = %1
  %13 = sext i8 %0 to i32
  %14 = shl nsw i32 %13, 3
  %15 = lshr i32 33685760, %14
  %16 = trunc i32 %15 to i8
  ret i8 %16

17:                                               ; preds = %6, %4
  ret i8 3
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_15EncryptionLevelE(%"class.std::__1::basic_ostream"* dereferenceable(160), i8 signext) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden signext i8 @_ZN4quic9QuicUtils18GetEncryptionLevelENS_17PacketNumberSpaceE(i8 zeroext) local_unnamed_addr #4 align 2 {
  %2 = icmp ult i8 %0, 3
  br i1 %2, label %3, label %8

3:                                                ; preds = %1
  %4 = zext i8 %0 to i24
  %5 = shl nuw nsw i24 %4, 3
  %6 = lshr i24 196864, %5
  %7 = trunc i24 %6 to i8
  ret i8 %7

8:                                                ; preds = %1
  ret i8 4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils14IsProbingFrameENS_13QuicFrameTypeE(i8 zeroext) local_unnamed_addr #4 align 2 {
  %2 = icmp ult i8 %0, 18
  br i1 %2, label %3, label %8

3:                                                ; preds = %1
  %4 = zext i8 %0 to i18
  %5 = lshr i18 -57343, %4
  %6 = and i18 %5, 1
  %7 = icmp ne i18 %6, 0
  ret i1 %7

8:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4quic9QuicUtils28AreStatelessResetTokensEqualERKNSt3__15arrayIcLm16EEES5_(%"struct.std::__1::array"* nocapture readonly dereferenceable(16), %"struct.std::__1::array"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.std::__1::array"* %0 to <16 x i8>*
  %4 = load <16 x i8>, <16 x i8>* %3, align 1
  %5 = bitcast %"struct.std::__1::array"* %1 to <16 x i8>*
  %6 = load <16 x i8>, <16 x i8>* %5, align 1
  %7 = xor <16 x i8> %6, %4
  %8 = shufflevector <16 x i8> %7, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %9 = or <16 x i8> %7, %8
  %10 = shufflevector <16 x i8> %9, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %11 = or <16 x i8> %9, %10
  %12 = shufflevector <16 x i8> %11, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %13 = or <16 x i8> %11, %12
  %14 = shufflevector <16 x i8> %13, <16 x i8> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %15 = or <16 x i8> %13, %14
  %16 = extractelement <16 x i8> %15, i32 0
  %17 = icmp eq i8 %16, 0
  ret i1 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4quic28IsValidWebTransportSessionIdEmNS_17ParsedQuicVersionE(i64, %"struct.quic::ParsedQuicVersion"* nocapture readonly) local_unnamed_addr #0 {
  %3 = icmp ugt i64 %0, 4294967295
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = trunc i64 %0 to i32
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %19

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 51
  %12 = sext i1 %11 to i32
  %13 = icmp eq i32 %12, %5
  br i1 %13, label %19, label %14

14:                                               ; preds = %8
  %15 = and i32 %5, 1
  %16 = icmp eq i32 %15, 0
  %17 = icmp ne i32 %15, 0
  %18 = select i1 %11, i1 %16, i1 %17
  br label %19

19:                                               ; preds = %14, %8, %2, %4
  %20 = phi i1 [ false, %4 ], [ false, %2 ], [ %18, %14 ], [ false, %8 ]
  ret i1 %20
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

; Function Attrs: inaccessiblemem_or_argmemonly nounwind
declare void @llvm.prefetch(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !19
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #5

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { inaccessiblemem_or_argmemonly nounwind }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4quic9QuicUtils29CreateReplacementConnectionIdERKNS_16QuicConnectionIdEh: argument 0"}
!7 = distinct !{!7, !"_ZN4quic9QuicUtils29CreateReplacementConnectionIdERKNS_16QuicConnectionIdEh"}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN4quic9QuicUtils24CreateRandomConnectionIdEhPNS_10QuicRandomE: argument 0"}
!12 = distinct !{!12, !"_ZN4quic9QuicUtils24CreateRandomConnectionIdEhPNS_10QuicRandomE"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN4quic9QuicUtils24CreateRandomConnectionIdEhPNS_10QuicRandomE: argument 0"}
!15 = distinct !{!15, !"_ZN4quic9QuicUtils24CreateRandomConnectionIdEhPNS_10QuicRandomE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN4quic9QuicUtils24CreateRandomConnectionIdEhPNS_10QuicRandomE: argument 0"}
!18 = distinct !{!18, !"_ZN4quic9QuicUtils24CreateRandomConnectionIdEhPNS_10QuicRandomE"}
!19 = !{i8 0, i8 2}
