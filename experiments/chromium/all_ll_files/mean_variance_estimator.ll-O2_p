; ModuleID = '../../third_party/webrtc/modules/audio_processing/echo_detector/mean_variance_estimator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/echo_detector/mean_variance_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::MeanVarianceEstimator" = type { float, float }

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc21MeanVarianceEstimator6UpdateEf(%"class.webrtc::MeanVarianceEstimator"* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::MeanVarianceEstimator", %"class.webrtc::MeanVarianceEstimator"* %0, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = fmul float %4, 0x3FEFF7CEE0000000
  %6 = fmul float %1, 0x3F50624DE0000000
  %7 = fadd float %6, %5
  store float %7, float* %3, align 4
  %8 = getelementptr inbounds %"class.webrtc::MeanVarianceEstimator", %"class.webrtc::MeanVarianceEstimator"* %0, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = fmul float %9, 0x3FEFF7CEE0000000
  %11 = fsub float %1, %7
  %12 = fmul float %11, 0x3F50624DE0000000
  %13 = fmul float %11, %12
  %14 = fadd float %10, %13
  store float %14, float* %8, align 4
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden float @_ZNK6webrtc21MeanVarianceEstimator13std_deviationEv(%"class.webrtc::MeanVarianceEstimator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::MeanVarianceEstimator", %"class.webrtc::MeanVarianceEstimator"* %0, i64 0, i32 1
  %3 = load float, float* %2, align 4
  %4 = tail call float @sqrtf(float %3) #5
  ret float %4
}

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK6webrtc21MeanVarianceEstimator4meanEv(%"class.webrtc::MeanVarianceEstimator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::MeanVarianceEstimator", %"class.webrtc::MeanVarianceEstimator"* %0, i64 0, i32 0
  %3 = load float, float* %2, align 4
  ret float %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc21MeanVarianceEstimator5ClearEv(%"class.webrtc::MeanVarianceEstimator"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::MeanVarianceEstimator", %"class.webrtc::MeanVarianceEstimator"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %2, align 4
  %3 = getelementptr inbounds %"class.webrtc::MeanVarianceEstimator", %"class.webrtc::MeanVarianceEstimator"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %3, align 4
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
