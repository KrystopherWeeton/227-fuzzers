; ModuleID = '../../base/rand_util.cc'
source_filename = "../../base/rand_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base10RandUint64Ev() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = bitcast i64* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #5
  store i64 -6148914691236517206, i64* %1, align 8
  call void @_ZN4base9RandBytesEPvm(i8* nonnull %2, i64 8) #5
  %3 = load i64, i64* %1, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #5
  ret i64 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base9RandBytesEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base7RandIntEii(i32, i32) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = sext i32 %1 to i64
  %5 = sext i32 %0 to i64
  %6 = sub nsw i64 %4, %5
  %7 = add nsw i64 %6, 1
  %8 = urem i64 -1, %7
  %9 = sub nuw i64 -2, %8
  %10 = bitcast i64* %3 to i8*
  br label %11

11:                                               ; preds = %11, %2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #5
  store i64 -6148914691236517206, i64* %3, align 8
  call void @_ZN4base9RandBytesEPvm(i8* nonnull %10, i64 8) #5
  %12 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #5
  %13 = icmp ugt i64 %12, %9
  br i1 %13, label %11, label %14

14:                                               ; preds = %11
  %15 = urem i64 %12, %7
  %16 = trunc i64 %15 to i32
  %17 = add i32 %16, %0
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base13RandGeneratorEm(i64) local_unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = urem i64 -1, %0
  %4 = sub nuw i64 -2, %3
  %5 = bitcast i64* %2 to i8*
  br label %6

6:                                                ; preds = %6, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  store i64 -6148914691236517206, i64* %2, align 8
  call void @_ZN4base9RandBytesEPvm(i8* nonnull %5, i64 8) #5
  %7 = load i64, i64* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %8 = icmp ugt i64 %7, %4
  br i1 %8, label %6, label %9

9:                                                ; preds = %6
  %10 = urem i64 %7, %0
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN4base10RandDoubleEv() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = bitcast i64* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #5
  store i64 -6148914691236517206, i64* %1, align 8
  call void @_ZN4base9RandBytesEPvm(i8* nonnull %2, i64 8) #5
  %3 = load i64, i64* %1, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #5
  %4 = and i64 %3, 9007199254740991
  %5 = uitofp i64 %4 to double
  %6 = call double @ldexp(double %5, i32 -53) #5
  ret double %6
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden double @_ZN4base27BitsToOpenEndedUnitIntervalEm(i64) local_unnamed_addr #3 {
  %2 = and i64 %0, 9007199254740991
  %3 = uitofp i64 %2 to double
  %4 = tail call double @ldexp(double %3, i32 -53) #5
  ret double %4
}

; Function Attrs: nofree nounwind
declare double @ldexp(double, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base17RandBytesAsStringEm(%"class.std::__1::basic_string"* noalias sret, i64) local_unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #5
  %4 = add i64 %1, 1
  %5 = tail call i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"* %0, i64 %4) #5
  tail call void @_ZN4base9RandBytesEPvm(i8* %5, i64 %1) #5
  ret void
}

declare i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
