; ModuleID = '../../third_party/woff2/src/woff2_out.cc'
source_filename = "../../third_party/woff2/src/woff2_out.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.woff2::WOFF2StringOut" = type { %"class.woff2::WOFF2Out", %"class.std::__1::basic_string"*, i64, i64 }
%"class.woff2::WOFF2Out" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.woff2::WOFF2MemoryOut" = type { %"class.woff2::WOFF2Out", i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN5woff214WOFF2StringOutD0Ev = comdat any

$_ZN5woff214WOFF2StringOut4SizeEv = comdat any

$_ZN5woff28WOFF2OutD2Ev = comdat any

$_ZN5woff214WOFF2MemoryOutD0Ev = comdat any

$_ZN5woff214WOFF2MemoryOut4SizeEv = comdat any

@_ZTVN5woff214WOFF2StringOutE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.woff2::WOFF2Out"*)* @_ZN5woff28WOFF2OutD2Ev to i8*), i8* bitcast (void (%"class.woff2::WOFF2StringOut"*)* @_ZN5woff214WOFF2StringOutD0Ev to i8*), i8* bitcast (i1 (%"class.woff2::WOFF2StringOut"*, i8*, i64)* @_ZN5woff214WOFF2StringOut5WriteEPKvm to i8*), i8* bitcast (i1 (%"class.woff2::WOFF2StringOut"*, i8*, i64, i64)* @_ZN5woff214WOFF2StringOut5WriteEPKvmm to i8*), i8* bitcast (i64 (%"class.woff2::WOFF2StringOut"*)* @_ZN5woff214WOFF2StringOut4SizeEv to i8*)] }, align 8
@_ZTVN5woff214WOFF2MemoryOutE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.woff2::WOFF2Out"*)* @_ZN5woff28WOFF2OutD2Ev to i8*), i8* bitcast (void (%"class.woff2::WOFF2MemoryOut"*)* @_ZN5woff214WOFF2MemoryOutD0Ev to i8*), i8* bitcast (i1 (%"class.woff2::WOFF2MemoryOut"*, i8*, i64)* @_ZN5woff214WOFF2MemoryOut5WriteEPKvm to i8*), i8* bitcast (i1 (%"class.woff2::WOFF2MemoryOut"*, i8*, i64, i64)* @_ZN5woff214WOFF2MemoryOut5WriteEPKvmm to i8*), i8* bitcast (i64 (%"class.woff2::WOFF2MemoryOut"*)* @_ZN5woff214WOFF2MemoryOut4SizeEv to i8*)] }, align 8

@_ZN5woff214WOFF2StringOutC1EPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.woff2::WOFF2StringOut"*, %"class.std::__1::basic_string"*), void (%"class.woff2::WOFF2StringOut"*, %"class.std::__1::basic_string"*)* @_ZN5woff214WOFF2StringOutC2EPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN5woff214WOFF2MemoryOutC1EPhm = hidden unnamed_addr alias void (%"class.woff2::WOFF2MemoryOut"*, i8*, i64), void (%"class.woff2::WOFF2MemoryOut"*, i8*, i64)* @_ZN5woff214WOFF2MemoryOutC2EPhm

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5woff214WOFF2StringOutC2EPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.woff2::WOFF2StringOut"* nocapture, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.woff2::WOFF2StringOut", %"class.woff2::WOFF2StringOut"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5woff214WOFF2StringOutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.woff2::WOFF2StringOut", %"class.woff2::WOFF2StringOut"* %0, i64 0, i32 1
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %4, align 8
  %5 = getelementptr inbounds %"class.woff2::WOFF2StringOut", %"class.woff2::WOFF2StringOut"* %0, i64 0, i32 2
  %6 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> <i64 31457280, i64 0>, <2 x i64>* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5woff214WOFF2StringOut5WriteEPKvm(%"class.woff2::WOFF2StringOut"*, i8*, i64) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.woff2::WOFF2StringOut", %"class.woff2::WOFF2StringOut"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.woff2::WOFF2StringOut"* %0 to i1 (%"class.woff2::WOFF2StringOut"*, i8*, i64, i64)***
  %7 = load i1 (%"class.woff2::WOFF2StringOut"*, i8*, i64, i64)**, i1 (%"class.woff2::WOFF2StringOut"*, i8*, i64, i64)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.woff2::WOFF2StringOut"*, i8*, i64, i64)*, i1 (%"class.woff2::WOFF2StringOut"*, i8*, i64, i64)** %7, i64 3
  %9 = load i1 (%"class.woff2::WOFF2StringOut"*, i8*, i64, i64)*, i1 (%"class.woff2::WOFF2StringOut"*, i8*, i64, i64)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.woff2::WOFF2StringOut"* %0, i8* %1, i64 %5, i64 %2) #7
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5woff214WOFF2StringOut5WriteEPKvmm(%"class.woff2::WOFF2StringOut"* nocapture, i8*, i64, i64) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.woff2::WOFF2StringOut", %"class.woff2::WOFF2StringOut"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %2
  %8 = sub i64 %6, %2
  %9 = icmp ult i64 %8, %3
  %10 = or i1 %7, %9
  br i1 %10, label %59, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.woff2::WOFF2StringOut", %"class.woff2::WOFF2StringOut"* %0, i64 0, i32 1
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  br label %23

21:                                               ; preds = %11
  %22 = zext i8 %16 to i64
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i64 [ %20, %18 ], [ %22, %21 ]
  %25 = icmp eq i64 %24, %2
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  %27 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %13, i8* %1, i64 %3) #7
  %28 = add i64 %3, %2
  br label %53

29:                                               ; preds = %23
  %30 = add i64 %3, %2
  br i1 %17, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  br label %36

34:                                               ; preds = %29
  %35 = zext i8 %16 to i64
  br label %36

36:                                               ; preds = %31, %34
  %37 = phi i64 [ %33, %31 ], [ %35, %34 ]
  %38 = icmp ugt i64 %30, %37
  br i1 %38, label %39, label %50

39:                                               ; preds = %36
  br i1 %17, label %40, label %43

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  br label %45

43:                                               ; preds = %39
  %44 = zext i8 %16 to i64
  br label %45

45:                                               ; preds = %40, %43
  %46 = phi i64 [ %42, %40 ], [ %44, %43 ]
  %47 = sub i64 %30, %46
  %48 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %13, i64 %47, i8 signext 0) #7
  %49 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  br label %50

50:                                               ; preds = %45, %36
  %51 = phi %"class.std::__1::basic_string"* [ %49, %45 ], [ %13, %36 ]
  %52 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEmmPKcm(%"class.std::__1::basic_string"* %51, i64 %2, i64 %3, i8* %1, i64 %3) #7
  br label %53

53:                                               ; preds = %50, %26
  %54 = phi i64 [ %30, %50 ], [ %28, %26 ]
  %55 = getelementptr inbounds %"class.woff2::WOFF2StringOut", %"class.woff2::WOFF2StringOut"* %0, i64 0, i32 3
  %56 = load i64, i64* %55, align 8
  %57 = icmp ult i64 %56, %54
  %58 = select i1 %57, i64 %54, i64 %56
  store i64 %58, i64* %55, align 8
  br label %59

59:                                               ; preds = %4, %53
  %60 = phi i1 [ true, %53 ], [ false, %4 ]
  ret i1 %60
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5woff214WOFF2StringOut10SetMaxSizeEm(%"class.woff2::WOFF2StringOut"* nocapture, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.woff2::WOFF2StringOut", %"class.woff2::WOFF2StringOut"* %0, i64 0, i32 2
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.woff2::WOFF2StringOut", %"class.woff2::WOFF2StringOut"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %1
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  store i64 %1, i64* %4, align 8
  br label %8

8:                                                ; preds = %7, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5woff214WOFF2MemoryOutC2EPhm(%"class.woff2::WOFF2MemoryOut"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.woff2::WOFF2MemoryOut", %"class.woff2::WOFF2MemoryOut"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5woff214WOFF2MemoryOutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.woff2::WOFF2MemoryOut", %"class.woff2::WOFF2MemoryOut"* %0, i64 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %"class.woff2::WOFF2MemoryOut", %"class.woff2::WOFF2MemoryOut"* %0, i64 0, i32 2
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.woff2::WOFF2MemoryOut", %"class.woff2::WOFF2MemoryOut"* %0, i64 0, i32 3
  store i64 0, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5woff214WOFF2MemoryOut5WriteEPKvm(%"class.woff2::WOFF2MemoryOut"*, i8*, i64) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.woff2::WOFF2MemoryOut", %"class.woff2::WOFF2MemoryOut"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.woff2::WOFF2MemoryOut"* %0 to i1 (%"class.woff2::WOFF2MemoryOut"*, i8*, i64, i64)***
  %7 = load i1 (%"class.woff2::WOFF2MemoryOut"*, i8*, i64, i64)**, i1 (%"class.woff2::WOFF2MemoryOut"*, i8*, i64, i64)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.woff2::WOFF2MemoryOut"*, i8*, i64, i64)*, i1 (%"class.woff2::WOFF2MemoryOut"*, i8*, i64, i64)** %7, i64 3
  %9 = load i1 (%"class.woff2::WOFF2MemoryOut"*, i8*, i64, i64)*, i1 (%"class.woff2::WOFF2MemoryOut"*, i8*, i64, i64)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.woff2::WOFF2MemoryOut"* %0, i8* %1, i64 %5, i64 %2) #7
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5woff214WOFF2MemoryOut5WriteEPKvmm(%"class.woff2::WOFF2MemoryOut"* nocapture, i8* nocapture readonly, i64, i64) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.woff2::WOFF2MemoryOut", %"class.woff2::WOFF2MemoryOut"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %2
  %8 = sub i64 %6, %2
  %9 = icmp ult i64 %8, %3
  %10 = or i1 %7, %9
  br i1 %10, label %20, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.woff2::WOFF2MemoryOut", %"class.woff2::WOFF2MemoryOut"* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %3, i1 false)
  %15 = getelementptr inbounds %"class.woff2::WOFF2MemoryOut", %"class.woff2::WOFF2MemoryOut"* %0, i64 0, i32 3
  %16 = add i64 %3, %2
  %17 = load i64, i64* %15, align 8
  %18 = icmp ult i64 %17, %16
  %19 = select i1 %18, i64 %16, i64 %17
  store i64 %19, i64* %15, align 8
  br label %20

20:                                               ; preds = %4, %11
  %21 = phi i1 [ true, %11 ], [ false, %4 ]
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5woff214WOFF2StringOutD0Ev(%"class.woff2::WOFF2StringOut"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.woff2::WOFF2StringOut"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5woff214WOFF2StringOut4SizeEv(%"class.woff2::WOFF2StringOut"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.woff2::WOFF2StringOut", %"class.woff2::WOFF2StringOut"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5woff28WOFF2OutD2Ev(%"class.woff2::WOFF2Out"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5woff214WOFF2MemoryOutD0Ev(%"class.woff2::WOFF2MemoryOut"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.woff2::WOFF2MemoryOut"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5woff214WOFF2MemoryOut4SizeEv(%"class.woff2::WOFF2MemoryOut"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.woff2::WOFF2MemoryOut", %"class.woff2::WOFF2MemoryOut"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
