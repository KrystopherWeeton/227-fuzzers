; ModuleID = '../../third_party/boringssl/src/crypto/x509/x_x509a.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/x_x509a.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.x509_cert_aux_st = type { %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_ALGOR* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.stack_st_X509_ALGOR = type opaque
%struct.ASN1_VALUE_st = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type { %struct.asn1_string_st*, %struct.asn1_string_st* }
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type { %struct.X509_algor_st*, %struct.asn1_string_st*, %struct.evp_pkey_st* }
%struct.evp_pkey_st = type { i32, i32, %union.anon.0, %struct.evp_pkey_asn1_method_st* }
%union.anon.0 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }

@X509_CERT_AUX_seq_tt = internal constant [5 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 5, i64 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_OBJECT_it }, %struct.ASN1_TEMPLATE_st { i64 141, i64 0, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_OBJECT_it }, %struct.ASN1_TEMPLATE_st { i64 1, i64 0, i64 16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_UTF8STRING_it }, %struct.ASN1_TEMPLATE_st { i64 1, i64 0, i64 24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_OCTET_STRING_it }, %struct.ASN1_TEMPLATE_st { i64 141, i64 1, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_ALGOR_it }], align 16
@.str = private unnamed_addr constant [14 x i8] c"X509_CERT_AUX\00", align 1
@X509_CERT_AUX_it = hidden constant %struct.ASN1_ITEM_st { i8 1, i64 16, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([5 x %struct.ASN1_TEMPLATE_st], [5 x %struct.ASN1_TEMPLATE_st]* @X509_CERT_AUX_seq_tt, i32 0, i32 0), i64 5, i8* null, i64 40, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0) }, align 8
@.str.1 = private unnamed_addr constant [6 x i8] c"trust\00", align 1
@ASN1_OBJECT_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"reject\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"alias\00", align 1
@ASN1_UTF8STRING_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.4 = private unnamed_addr constant [6 x i8] c"keyid\00", align 1
@ASN1_OCTET_STRING_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.5 = private unnamed_addr constant [6 x i8] c"other\00", align 1
@X509_ALGOR_it = external constant %struct.ASN1_ITEM_st, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_cert_aux_st* @d2i_X509_CERT_AUX(%struct.x509_cert_aux_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.x509_cert_aux_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @X509_CERT_AUX_it) #4
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.x509_cert_aux_st*
  ret %struct.x509_cert_aux_st* %6
}

declare %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_X509_CERT_AUX(%struct.x509_cert_aux_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.x509_cert_aux_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @X509_CERT_AUX_it) #4
  ret i32 %4
}

declare i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st*, i8**, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_cert_aux_st* @X509_CERT_AUX_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @X509_CERT_AUX_it) #4
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.x509_cert_aux_st*
  ret %struct.x509_cert_aux_st* %2
}

declare %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_CERT_AUX_free(%struct.x509_cert_aux_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.x509_cert_aux_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @X509_CERT_AUX_it) #4
  ret void
}

declare void @ASN1_item_free(%struct.ASN1_VALUE_st*, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_alias_set1(%struct.x509_st*, i8*, i32) local_unnamed_addr #0 {
  %4 = icmp eq i8* %1, null
  %5 = icmp eq %struct.x509_st* %0, null
  br i1 %4, label %6, label %18

6:                                                ; preds = %3
  br i1 %5, label %39, label %7

7:                                                ; preds = %6
  %8 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 18
  %9 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %8, align 8
  %10 = icmp eq %struct.x509_cert_aux_st* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %9, i64 0, i32 2
  %13 = load %struct.asn1_string_st*, %struct.asn1_string_st** %12, align 8
  %14 = icmp eq %struct.asn1_string_st* %13, null
  br i1 %14, label %39, label %15

15:                                               ; preds = %11
  tail call void @ASN1_UTF8STRING_free(%struct.asn1_string_st* nonnull %13) #4
  %16 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %8, align 8
  %17 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %16, i64 0, i32 2
  store %struct.asn1_string_st* null, %struct.asn1_string_st** %17, align 8
  br label %39

18:                                               ; preds = %3
  br i1 %5, label %39, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 18
  %21 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %20, align 8
  %22 = icmp eq %struct.x509_cert_aux_st* %21, null
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @X509_CERT_AUX_it) #4
  %25 = bitcast %struct.x509_cert_aux_st** %20 to %struct.ASN1_VALUE_st**
  store %struct.ASN1_VALUE_st* %24, %struct.ASN1_VALUE_st** %25, align 8
  %26 = bitcast %struct.ASN1_VALUE_st* %24 to %struct.x509_cert_aux_st*
  %27 = icmp eq %struct.ASN1_VALUE_st* %24, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %23, %19
  %29 = phi %struct.x509_cert_aux_st* [ %21, %19 ], [ %26, %23 ]
  %30 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %29, i64 0, i32 2
  %31 = load %struct.asn1_string_st*, %struct.asn1_string_st** %30, align 8
  %32 = icmp eq %struct.asn1_string_st* %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = tail call %struct.asn1_string_st* @ASN1_UTF8STRING_new() #4
  store %struct.asn1_string_st* %34, %struct.asn1_string_st** %30, align 8
  %35 = icmp eq %struct.asn1_string_st* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %33, %28
  %37 = phi %struct.asn1_string_st* [ %34, %33 ], [ %31, %28 ]
  %38 = tail call i32 @ASN1_STRING_set(%struct.asn1_string_st* nonnull %37, i8* nonnull %1, i32 %2) #4
  br label %39

39:                                               ; preds = %23, %18, %33, %6, %7, %11, %36, %15
  %40 = phi i32 [ %38, %36 ], [ 1, %15 ], [ 1, %11 ], [ 1, %7 ], [ 1, %6 ], [ 0, %33 ], [ 0, %18 ], [ 0, %23 ]
  ret i32 %40
}

declare void @ASN1_UTF8STRING_free(%struct.asn1_string_st*) local_unnamed_addr #1

declare %struct.asn1_string_st* @ASN1_UTF8STRING_new() local_unnamed_addr #1

declare i32 @ASN1_STRING_set(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_keyid_set1(%struct.x509_st*, i8*, i32) local_unnamed_addr #0 {
  %4 = icmp eq i8* %1, null
  %5 = icmp eq %struct.x509_st* %0, null
  br i1 %4, label %6, label %18

6:                                                ; preds = %3
  br i1 %5, label %39, label %7

7:                                                ; preds = %6
  %8 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 18
  %9 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %8, align 8
  %10 = icmp eq %struct.x509_cert_aux_st* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %9, i64 0, i32 3
  %13 = load %struct.asn1_string_st*, %struct.asn1_string_st** %12, align 8
  %14 = icmp eq %struct.asn1_string_st* %13, null
  br i1 %14, label %39, label %15

15:                                               ; preds = %11
  tail call void @ASN1_OCTET_STRING_free(%struct.asn1_string_st* nonnull %13) #4
  %16 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %8, align 8
  %17 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %16, i64 0, i32 3
  store %struct.asn1_string_st* null, %struct.asn1_string_st** %17, align 8
  br label %39

18:                                               ; preds = %3
  br i1 %5, label %39, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 18
  %21 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %20, align 8
  %22 = icmp eq %struct.x509_cert_aux_st* %21, null
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @X509_CERT_AUX_it) #4
  %25 = bitcast %struct.x509_cert_aux_st** %20 to %struct.ASN1_VALUE_st**
  store %struct.ASN1_VALUE_st* %24, %struct.ASN1_VALUE_st** %25, align 8
  %26 = bitcast %struct.ASN1_VALUE_st* %24 to %struct.x509_cert_aux_st*
  %27 = icmp eq %struct.ASN1_VALUE_st* %24, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %23, %19
  %29 = phi %struct.x509_cert_aux_st* [ %21, %19 ], [ %26, %23 ]
  %30 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %29, i64 0, i32 3
  %31 = load %struct.asn1_string_st*, %struct.asn1_string_st** %30, align 8
  %32 = icmp eq %struct.asn1_string_st* %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = tail call %struct.asn1_string_st* @ASN1_OCTET_STRING_new() #4
  store %struct.asn1_string_st* %34, %struct.asn1_string_st** %30, align 8
  %35 = icmp eq %struct.asn1_string_st* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %33, %28
  %37 = phi %struct.asn1_string_st* [ %34, %33 ], [ %31, %28 ]
  %38 = tail call i32 @ASN1_STRING_set(%struct.asn1_string_st* nonnull %37, i8* nonnull %1, i32 %2) #4
  br label %39

39:                                               ; preds = %23, %18, %33, %6, %7, %11, %36, %15
  %40 = phi i32 [ %38, %36 ], [ 1, %15 ], [ 1, %11 ], [ 1, %7 ], [ 1, %6 ], [ 0, %33 ], [ 0, %18 ], [ 0, %23 ]
  ret i32 %40
}

declare void @ASN1_OCTET_STRING_free(%struct.asn1_string_st*) local_unnamed_addr #1

declare %struct.asn1_string_st* @ASN1_OCTET_STRING_new() local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @X509_alias_get0(%struct.x509_st* nocapture readonly, i32*) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 18
  %4 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %3, align 8
  %5 = icmp eq %struct.x509_cert_aux_st* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %4, i64 0, i32 2
  %8 = load %struct.asn1_string_st*, %struct.asn1_string_st** %7, align 8
  %9 = icmp eq %struct.asn1_string_st* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = icmp eq i32* %1, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %8, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %1, align 4
  %15 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %3, align 8
  %16 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %15, i64 0, i32 2
  %17 = load %struct.asn1_string_st*, %struct.asn1_string_st** %16, align 8
  br label %18

18:                                               ; preds = %10, %12
  %19 = phi %struct.asn1_string_st* [ %8, %10 ], [ %17, %12 ]
  %20 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %19, i64 0, i32 2
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %2, %6, %18
  %23 = phi i8* [ %21, %18 ], [ null, %6 ], [ null, %2 ]
  ret i8* %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @X509_keyid_get0(%struct.x509_st* nocapture readonly, i32*) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 18
  %4 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %3, align 8
  %5 = icmp eq %struct.x509_cert_aux_st* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %4, i64 0, i32 3
  %8 = load %struct.asn1_string_st*, %struct.asn1_string_st** %7, align 8
  %9 = icmp eq %struct.asn1_string_st* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = icmp eq i32* %1, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %8, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %1, align 4
  %15 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %3, align 8
  %16 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %15, i64 0, i32 3
  %17 = load %struct.asn1_string_st*, %struct.asn1_string_st** %16, align 8
  br label %18

18:                                               ; preds = %10, %12
  %19 = phi %struct.asn1_string_st* [ %8, %10 ], [ %17, %12 ]
  %20 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %19, i64 0, i32 2
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %2, %6, %18
  %23 = phi i8* [ %21, %18 ], [ null, %6 ], [ null, %2 ]
  ret i8* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_add1_trust_object(%struct.x509_st*, %struct.asn1_object_st*) local_unnamed_addr #0 {
  %3 = tail call %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st* %1) #4
  %4 = icmp eq %struct.asn1_object_st* %3, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = icmp eq %struct.x509_st* %0, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 18
  %9 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %8, align 8
  %10 = icmp eq %struct.x509_cert_aux_st* %9, null
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @X509_CERT_AUX_it) #4
  %13 = bitcast %struct.x509_cert_aux_st** %8 to %struct.ASN1_VALUE_st**
  store %struct.ASN1_VALUE_st* %12, %struct.ASN1_VALUE_st** %13, align 8
  %14 = icmp eq %struct.ASN1_VALUE_st* %12, null
  %15 = bitcast %struct.ASN1_VALUE_st* %12 to %struct.x509_cert_aux_st*
  br i1 %14, label %18, label %16

16:                                               ; preds = %11, %7
  %17 = phi %struct.x509_cert_aux_st* [ %15, %11 ], [ %9, %7 ]
  br label %18

18:                                               ; preds = %5, %11, %16
  %19 = phi %struct.x509_cert_aux_st* [ %17, %16 ], [ null, %5 ], [ null, %11 ]
  %20 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %19, i64 0, i32 0
  %21 = load %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT** %20, align 8
  %22 = icmp eq %struct.stack_st_ASN1_OBJECT* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = bitcast %struct.stack_st_ASN1_OBJECT* %21 to %struct.stack_st*
  br label %29

25:                                               ; preds = %18
  %26 = tail call %struct.stack_st* @sk_new_null() #4
  %27 = bitcast %struct.x509_cert_aux_st* %19 to %struct.stack_st**
  store %struct.stack_st* %26, %struct.stack_st** %27, align 8
  %28 = icmp eq %struct.stack_st* %26, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %23, %25
  %30 = phi %struct.stack_st* [ %26, %25 ], [ %24, %23 ]
  %31 = bitcast %struct.asn1_object_st* %3 to i8*
  %32 = tail call i64 @sk_push(%struct.stack_st* %30, i8* nonnull %31) #4
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29, %25, %2
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* %3) #4
  br label %35

35:                                               ; preds = %29, %34
  %36 = phi i32 [ 0, %34 ], [ 1, %29 ]
  ret i32 %36
}

declare %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st*) local_unnamed_addr #1

declare void @ASN1_OBJECT_free(%struct.asn1_object_st*) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_add1_reject_object(%struct.x509_st*, %struct.asn1_object_st*) local_unnamed_addr #0 {
  %3 = tail call %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st* %1) #4
  %4 = icmp eq %struct.asn1_object_st* %3, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = icmp eq %struct.x509_st* %0, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 18
  %9 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %8, align 8
  %10 = icmp eq %struct.x509_cert_aux_st* %9, null
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @X509_CERT_AUX_it) #4
  %13 = bitcast %struct.x509_cert_aux_st** %8 to %struct.ASN1_VALUE_st**
  store %struct.ASN1_VALUE_st* %12, %struct.ASN1_VALUE_st** %13, align 8
  %14 = icmp eq %struct.ASN1_VALUE_st* %12, null
  %15 = bitcast %struct.ASN1_VALUE_st* %12 to %struct.x509_cert_aux_st*
  br i1 %14, label %18, label %16

16:                                               ; preds = %11, %7
  %17 = phi %struct.x509_cert_aux_st* [ %15, %11 ], [ %9, %7 ]
  br label %18

18:                                               ; preds = %5, %11, %16
  %19 = phi %struct.x509_cert_aux_st* [ %17, %16 ], [ null, %5 ], [ null, %11 ]
  %20 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %19, i64 0, i32 1
  %21 = load %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT** %20, align 8
  %22 = icmp eq %struct.stack_st_ASN1_OBJECT* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = bitcast %struct.stack_st_ASN1_OBJECT* %21 to %struct.stack_st*
  br label %29

25:                                               ; preds = %18
  %26 = tail call %struct.stack_st* @sk_new_null() #4
  %27 = bitcast %struct.stack_st_ASN1_OBJECT** %20 to %struct.stack_st**
  store %struct.stack_st* %26, %struct.stack_st** %27, align 8
  %28 = icmp eq %struct.stack_st* %26, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %23, %25
  %30 = phi %struct.stack_st* [ %26, %25 ], [ %24, %23 ]
  %31 = bitcast %struct.asn1_object_st* %3 to i8*
  %32 = tail call i64 @sk_push(%struct.stack_st* %30, i8* nonnull %31) #4
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29, %25, %2
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* %3) #4
  br label %35

35:                                               ; preds = %29, %34
  %36 = phi i32 [ 0, %34 ], [ 1, %29 ]
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_trust_clear(%struct.x509_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 18
  %3 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %2, align 8
  %4 = icmp eq %struct.x509_cert_aux_st* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %3, i64 0, i32 0
  %7 = load %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT** %6, align 8
  %8 = icmp eq %struct.stack_st_ASN1_OBJECT* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = bitcast %struct.stack_st_ASN1_OBJECT* %7 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %10, void (void (i8*)*, i8*)* nonnull @sk_ASN1_OBJECT_call_free_func, void (i8*)* bitcast (void (%struct.asn1_object_st*)* @ASN1_OBJECT_free to void (i8*)*)) #4
  %11 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %2, align 8
  %12 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %11, i64 0, i32 0
  store %struct.stack_st_ASN1_OBJECT* null, %struct.stack_st_ASN1_OBJECT** %12, align 8
  br label %13

13:                                               ; preds = %5, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_reject_clear(%struct.x509_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 18
  %3 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %2, align 8
  %4 = icmp eq %struct.x509_cert_aux_st* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %3, i64 0, i32 1
  %7 = load %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT** %6, align 8
  %8 = icmp eq %struct.stack_st_ASN1_OBJECT* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = bitcast %struct.stack_st_ASN1_OBJECT* %7 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %10, void (void (i8*)*, i8*)* nonnull @sk_ASN1_OBJECT_call_free_func, void (i8*)* bitcast (void (%struct.asn1_object_st*)* @ASN1_OBJECT_free to void (i8*)*)) #4
  %11 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %2, align 8
  %12 = getelementptr inbounds %struct.x509_cert_aux_st, %struct.x509_cert_aux_st* %11, i64 0, i32 1
  store %struct.stack_st_ASN1_OBJECT* null, %struct.stack_st_ASN1_OBJECT** %12, align 8
  br label %13

13:                                               ; preds = %5, %1, %9
  ret void
}

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #1

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #1

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_ASN1_OBJECT_call_free_func(void (i8*)* nocapture, i8*) #3 {
  %3 = bitcast void (i8*)* %0 to void (%struct.asn1_object_st*)*
  %4 = bitcast i8* %1 to %struct.asn1_object_st*
  tail call void %3(%struct.asn1_object_st* %4) #4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
