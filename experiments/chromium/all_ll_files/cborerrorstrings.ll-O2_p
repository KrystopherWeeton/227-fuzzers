; ModuleID = '../../third_party/openscreen/src/third_party/tinycbor/src/src/cborerrorstrings.c'
source_filename = "../../third_party/openscreen/src/third_party/tinycbor/src/src/cborerrorstrings.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"out of memory/need more memory\00", align 1
@.str.3 = private unnamed_addr constant [90 x i8] c"unknown length (attempted to get the length of a map/array/string of indeterminate length\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"attempted to advance past EOF\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"I/O error\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"garbage after the end of the content\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"unexpected end of data\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"unexpected 'break' byte\00", align 1
@.str.9 = private unnamed_addr constant [45 x i8] c"illegal byte (encodes future extension type)\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"mismatched string type in chunked string\00", align 1
@.str.11 = private unnamed_addr constant [66 x i8] c"illegal initial byte (encodes unspecified additional information)\00", align 1
@.str.12 = private unnamed_addr constant [48 x i8] c"illegal encoding of simple type smaller than 32\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"unknown simple type\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"unknown tag\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"inappropriate tag for type\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"duplicate keys in object\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"invalid UTF-8 content in string\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"excluded type found\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"excluded value found\00", align 1
@.str.20 = private unnamed_addr constant [36 x i8] c"value encoded in non-canonical form\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"key in map is not a string\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"map is not sorted\00", align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"map keys are not unique\00", align 1
@.str.24 = private unnamed_addr constant [32 x i8] c"too many items added to encoder\00", align 1
@.str.25 = private unnamed_addr constant [31 x i8] c"too few items added to encoder\00", align 1
@.str.26 = private unnamed_addr constant [31 x i8] c"internal error: data too large\00", align 1
@.str.27 = private unnamed_addr constant [71 x i8] c"internal error: too many nested containers found in recursive function\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"unsupported type\00", align 1
@.str.29 = private unnamed_addr constant [60 x i8] c"conversion to JSON failed: key in object is an array or map\00", align 1
@.str.30 = private unnamed_addr constant [54 x i8] c"conversion to JSON failed: open_memstream unavailable\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"internal error\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @cbor_error_string(i32) local_unnamed_addr #0 {
  switch i32 %0, label %33 [
    i32 0, label %34
    i32 1, label %2
    i32 -2147483648, label %3
    i32 2, label %4
    i32 3, label %5
    i32 4, label %6
    i32 256, label %7
    i32 257, label %8
    i32 258, label %9
    i32 259, label %10
    i32 260, label %11
    i32 261, label %12
    i32 262, label %13
    i32 512, label %14
    i32 513, label %15
    i32 514, label %16
    i32 515, label %17
    i32 516, label %18
    i32 517, label %19
    i32 518, label %20
    i32 519, label %21
    i32 520, label %21
    i32 521, label %22
    i32 1281, label %22
    i32 522, label %23
    i32 523, label %24
    i32 768, label %25
    i32 769, label %26
    i32 1024, label %27
    i32 1025, label %28
    i32 1026, label %29
    i32 1280, label %30
    i32 1282, label %31
    i32 2147483647, label %32
  ]

2:                                                ; preds = %1
  br label %34

3:                                                ; preds = %1
  br label %34

4:                                                ; preds = %1
  br label %34

5:                                                ; preds = %1
  br label %34

6:                                                ; preds = %1
  br label %34

7:                                                ; preds = %1
  br label %34

8:                                                ; preds = %1
  br label %34

9:                                                ; preds = %1
  br label %34

10:                                               ; preds = %1
  br label %34

11:                                               ; preds = %1
  br label %34

12:                                               ; preds = %1
  br label %34

13:                                               ; preds = %1
  br label %34

14:                                               ; preds = %1
  br label %34

15:                                               ; preds = %1
  br label %34

16:                                               ; preds = %1
  br label %34

17:                                               ; preds = %1
  br label %34

18:                                               ; preds = %1
  br label %34

19:                                               ; preds = %1
  br label %34

20:                                               ; preds = %1
  br label %34

21:                                               ; preds = %1, %1
  br label %34

22:                                               ; preds = %1, %1
  br label %34

23:                                               ; preds = %1
  br label %34

24:                                               ; preds = %1
  br label %34

25:                                               ; preds = %1
  br label %34

26:                                               ; preds = %1
  br label %34

27:                                               ; preds = %1
  br label %34

28:                                               ; preds = %1
  br label %34

29:                                               ; preds = %1
  br label %34

30:                                               ; preds = %1
  br label %34

31:                                               ; preds = %1
  br label %34

32:                                               ; preds = %1
  br label %34

33:                                               ; preds = %1
  br label %34

34:                                               ; preds = %1, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %35 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), %33 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0), %32 ], [ getelementptr inbounds ([54 x i8], [54 x i8]* @.str.30, i64 0, i64 0), %31 ], [ getelementptr inbounds ([60 x i8], [60 x i8]* @.str.29, i64 0, i64 0), %30 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i64 0, i64 0), %29 ], [ getelementptr inbounds ([71 x i8], [71 x i8]* @.str.27, i64 0, i64 0), %28 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i64 0, i64 0), %27 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.25, i64 0, i64 0), %26 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24, i64 0, i64 0), %25 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0), %24 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), %23 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), %22 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.20, i64 0, i64 0), %21 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0), %20 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0), %19 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i64 0, i64 0), %18 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0), %17 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), %16 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), %15 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0), %14 ], [ getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12, i64 0, i64 0), %13 ], [ getelementptr inbounds ([66 x i8], [66 x i8]* @.str.11, i64 0, i64 0), %12 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0), %11 ], [ getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9, i64 0, i64 0), %10 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), %9 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), %8 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0), %7 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), %6 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0), %5 ], [ getelementptr inbounds ([90 x i8], [90 x i8]* @.str.3, i64 0, i64 0), %4 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), %2 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %1 ]
  ret i8* %35
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
