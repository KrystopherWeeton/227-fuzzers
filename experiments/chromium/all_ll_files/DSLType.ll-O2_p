; ModuleID = '../../third_party/skia/src/sksl/dsl/DSLType.cpp'
source_filename = "../../third_party/skia/src/sksl/dsl/DSLType.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::dsl::DSLType" = type <{ %"class.SkSL::Type"*, i8, [7 x i8] }>
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.6", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.8" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkSL::Type::Field"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.SkSL::Type"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.17", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.33", [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.36"* }
%"class.std::__1::vector.36" = type opaque
%"class.SkSL::dsl::DSLExpression" = type { %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%class.SkTArray = type { %"class.SkSL::dsl::DSLExpression"*, i64 }
%"class.SkSL::dsl::DSLPossibleExpression" = type { %"class.std::__1::unique_ptr.37" }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr", %"class.std::__1::vector.43", i8, %"class.std::__1::vector.51", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.45"* }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"class.std::__1::unique_ptr.53"*, %"class.std::__1::unique_ptr.53"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.53"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%class.SkTArray.70 = type { %"class.SkSL::dsl::DSLField"*, i64 }
%"class.SkSL::dsl::DSLField" = type { %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLType", i8* }
%"class.SkSL::dsl::DSLModifiers" = type { %"struct.SkSL::Modifiers" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.SkSL::dsl::DSLWriter" = type { %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.SkSL::Compiler"*, %"class.std::__1::unique_ptr.112", %"struct.SkSL::ProgramConfig"*, %"class.SkSL::ModifiersPool"*, %"class.std::__1::vector.71", %"class.std::__1::vector.124", %"class.SkSL::dsl::ErrorHandler"*, %"struct.SkSL::ProgramSettings", %"class.SkSL::Mangler", %"class.std::__1::stack" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkSL::ProgramConfig"* }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.SkSL::ModifiersPool"* }
%"class.SkSL::Compiler" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.SkSL::Pool"* }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr.115" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.GrMemoryPool* }
%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::unique_ptr.73"* }
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.SkSL::ProgramElement"** }
%"class.SkSL::dsl::ErrorHandler" = type { i32 (...)** }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::stack" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.131" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.SkSL::StructDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::Type"* }

$_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EEC2EOS3_ = comdat any

$_ZN4SkSL4TypeD2Ev = comdat any

$_ZN4SkSL4TypeD0Ev = comdat any

$_ZNK4SkSL4Type11descriptionEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZN4SkSL16StructDefinitionD0Ev = comdat any

$_ZNK4SkSL16StructDefinition11descriptionEv = comdat any

$_ZNK4SkSL16StructDefinition5cloneEv = comdat any

$_ZNK4SkSL9Modifiers11descriptionEv = comdat any

$_ZNK4SkSL6Layout11descriptionEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZTVN4SkSL4TypeE = comdat any

$_ZTVN4SkSL16StructDefinitionE = comdat any

@.str = private unnamed_addr constant [48 x i8] c"../../third_party/skia/src/sksl/dsl/DSLType.cpp\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN4SkSL4TypeE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Type"*)* @_ZNK4SkSL4Type11descriptionEv to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@_ZTVN4SkSL16StructDefinitionE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::StructDefinition"*)* @_ZN4SkSL16StructDefinitionD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::StructDefinition"*)* @_ZNK4SkSL16StructDefinition11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::StructDefinition"*)* @_ZNK4SkSL16StructDefinition5cloneEv to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [8 x i8] c"struct \00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c" { \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"};\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"uniform \00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"const \00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"flat \00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"noperspective \00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"sk_has_side_effects \00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"noinline \00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"inout \00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"in \00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"out \00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"location = \00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"offset = \00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"binding = \00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"index = \00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"set = \00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"builtin = \00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"input_attachment_index = \00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"origin_upper_left\00", align 1
@.str.26 = private unnamed_addr constant [28 x i8] c"blend_support_all_equations\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"push_constant\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"srgb_unpremul\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"points\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"line_strip\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"lines_adjacency\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"triangles\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"triangle_strip\00", align 1
@.str.35 = private unnamed_addr constant [20 x i8] c"triangles_adjacency\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"max_vertices = \00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"invocations = \00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"when = \00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"layout (\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.41 = private unnamed_addr constant [16 x i8] c"/* key */ const\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL3dsl7DSLType9isBooleanEv(%"class.SkSL::dsl::DSLType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %0)
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 3
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLType", %"class.SkSL::dsl::DSLType"* %0, i64 0, i32 0
  %3 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2, align 8
  %4 = icmp eq %"class.SkSL::Type"* %3, null
  br i1 %4, label %5, label %157

5:                                                ; preds = %1
  %6 = tail call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #11
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLType", %"class.SkSL::dsl::DSLType"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8
  switch i8 %8, label %156 [
    i8 0, label %9
    i8 1, label %12
    i8 2, label %15
    i8 3, label %18
    i8 4, label %21
    i8 5, label %24
    i8 6, label %27
    i8 7, label %30
    i8 8, label %33
    i8 9, label %36
    i8 10, label %39
    i8 11, label %42
    i8 12, label %45
    i8 13, label %48
    i8 14, label %51
    i8 15, label %54
    i8 16, label %57
    i8 17, label %60
    i8 18, label %63
    i8 19, label %66
    i8 20, label %69
    i8 21, label %72
    i8 22, label %75
    i8 23, label %78
    i8 24, label %81
    i8 25, label %84
    i8 26, label %87
    i8 27, label %90
    i8 28, label %93
    i8 29, label %96
    i8 30, label %99
    i8 31, label %102
    i8 32, label %105
    i8 33, label %108
    i8 34, label %111
    i8 35, label %114
    i8 36, label %117
    i8 37, label %120
    i8 38, label %123
    i8 39, label %126
    i8 40, label %129
    i8 41, label %132
    i8 42, label %135
    i8 43, label %138
    i8 44, label %141
    i8 45, label %144
    i8 46, label %147
    i8 47, label %150
    i8 48, label %153
  ]

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %10, align 8
  br label %157

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 25, i32 0, i32 0, i32 0
  %14 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %13, align 8
  br label %157

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 26, i32 0, i32 0, i32 0
  %17 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %16, align 8
  br label %157

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0
  %20 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %19, align 8
  br label %157

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %22, align 8
  br label %157

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %26 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %25, align 8
  br label %157

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %29 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %28, align 8
  br label %157

30:                                               ; preds = %5
  %31 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %32 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %31, align 8
  br label %157

33:                                               ; preds = %5
  %34 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 41, i32 0, i32 0, i32 0
  %35 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %34, align 8
  br label %157

36:                                               ; preds = %5
  %37 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 44, i32 0, i32 0, i32 0
  %38 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %37, align 8
  br label %157

39:                                               ; preds = %5
  %40 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 47, i32 0, i32 0, i32 0
  %41 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %40, align 8
  br label %157

42:                                               ; preds = %5
  %43 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 42, i32 0, i32 0, i32 0
  %44 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %43, align 8
  br label %157

45:                                               ; preds = %5
  %46 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 45, i32 0, i32 0, i32 0
  %47 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %46, align 8
  br label %157

48:                                               ; preds = %5
  %49 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 48, i32 0, i32 0, i32 0
  %50 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %49, align 8
  br label %157

51:                                               ; preds = %5
  %52 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 43, i32 0, i32 0, i32 0
  %53 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %52, align 8
  br label %157

54:                                               ; preds = %5
  %55 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 46, i32 0, i32 0, i32 0
  %56 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %55, align 8
  br label %157

57:                                               ; preds = %5
  %58 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 49, i32 0, i32 0, i32 0
  %59 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %58, align 8
  br label %157

60:                                               ; preds = %5
  %61 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %61, align 8
  br label %157

63:                                               ; preds = %5
  %64 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %64, align 8
  br label %157

66:                                               ; preds = %5
  %67 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %68 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %67, align 8
  br label %157

69:                                               ; preds = %5
  %70 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %70, align 8
  br label %157

72:                                               ; preds = %5
  %73 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 86, i32 0, i32 0, i32 0
  %74 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %73, align 8
  br label %157

75:                                               ; preds = %5
  %76 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 32, i32 0, i32 0, i32 0
  %77 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %76, align 8
  br label %157

78:                                               ; preds = %5
  %79 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 35, i32 0, i32 0, i32 0
  %80 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %79, align 8
  br label %157

81:                                               ; preds = %5
  %82 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 38, i32 0, i32 0, i32 0
  %83 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %82, align 8
  br label %157

84:                                               ; preds = %5
  %85 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 33, i32 0, i32 0, i32 0
  %86 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %85, align 8
  br label %157

87:                                               ; preds = %5
  %88 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0
  %89 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %88, align 8
  br label %157

90:                                               ; preds = %5
  %91 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 39, i32 0, i32 0, i32 0
  %92 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %91, align 8
  br label %157

93:                                               ; preds = %5
  %94 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 34, i32 0, i32 0, i32 0
  %95 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %94, align 8
  br label %157

96:                                               ; preds = %5
  %97 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 37, i32 0, i32 0, i32 0
  %98 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %97, align 8
  br label %157

99:                                               ; preds = %5
  %100 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 40, i32 0, i32 0, i32 0
  %101 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %100, align 8
  br label %157

102:                                              ; preds = %5
  %103 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %104 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %103, align 8
  br label %157

105:                                              ; preds = %5
  %106 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0
  %107 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %106, align 8
  br label %157

108:                                              ; preds = %5
  %109 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %110 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %109, align 8
  br label %157

111:                                              ; preds = %5
  %112 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 11, i32 0, i32 0, i32 0
  %113 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %112, align 8
  br label %157

114:                                              ; preds = %5
  %115 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 88, i32 0, i32 0, i32 0
  %116 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %115, align 8
  br label %157

117:                                              ; preds = %5
  %118 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 16, i32 0, i32 0, i32 0
  %119 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %118, align 8
  br label %157

120:                                              ; preds = %5
  %121 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 17, i32 0, i32 0, i32 0
  %122 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %121, align 8
  br label %157

123:                                              ; preds = %5
  %124 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 18, i32 0, i32 0, i32 0
  %125 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %124, align 8
  br label %157

126:                                              ; preds = %5
  %127 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 19, i32 0, i32 0, i32 0
  %128 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %127, align 8
  br label %157

129:                                              ; preds = %5
  %130 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %131 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %130, align 8
  br label %157

132:                                              ; preds = %5
  %133 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 13, i32 0, i32 0, i32 0
  %134 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %133, align 8
  br label %157

135:                                              ; preds = %5
  %136 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 14, i32 0, i32 0, i32 0
  %137 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %136, align 8
  br label %157

138:                                              ; preds = %5
  %139 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 15, i32 0, i32 0, i32 0
  %140 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %139, align 8
  br label %157

141:                                              ; preds = %5
  %142 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %142, align 8
  br label %157

144:                                              ; preds = %5
  %145 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 21, i32 0, i32 0, i32 0
  %146 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %145, align 8
  br label %157

147:                                              ; preds = %5
  %148 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 22, i32 0, i32 0, i32 0
  %149 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %148, align 8
  br label %157

150:                                              ; preds = %5
  %151 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 23, i32 0, i32 0, i32 0
  %152 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %151, align 8
  br label %157

153:                                              ; preds = %5
  %154 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 0, i32 29, i32 0, i32 0, i32 0
  %155 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %154, align 8
  br label %157

156:                                              ; preds = %5
  tail call void @llvm.trap()
  unreachable

157:                                              ; preds = %9, %12, %15, %18, %21, %24, %27, %30, %33, %36, %39, %42, %45, %48, %51, %54, %57, %60, %63, %66, %69, %72, %75, %78, %81, %84, %87, %90, %93, %96, %99, %102, %105, %108, %111, %114, %117, %120, %123, %126, %129, %132, %135, %138, %141, %144, %147, %150, %153, %1
  %158 = phi %"class.SkSL::Type"* [ %3, %1 ], [ %155, %153 ], [ %152, %150 ], [ %149, %147 ], [ %146, %144 ], [ %143, %141 ], [ %140, %138 ], [ %137, %135 ], [ %134, %132 ], [ %131, %129 ], [ %128, %126 ], [ %125, %123 ], [ %122, %120 ], [ %119, %117 ], [ %116, %114 ], [ %113, %111 ], [ %110, %108 ], [ %107, %105 ], [ %104, %102 ], [ %101, %99 ], [ %98, %96 ], [ %95, %93 ], [ %92, %90 ], [ %89, %87 ], [ %86, %84 ], [ %83, %81 ], [ %80, %78 ], [ %77, %75 ], [ %74, %72 ], [ %71, %69 ], [ %68, %66 ], [ %65, %63 ], [ %62, %60 ], [ %59, %57 ], [ %56, %54 ], [ %53, %51 ], [ %50, %48 ], [ %47, %45 ], [ %44, %42 ], [ %41, %39 ], [ %38, %36 ], [ %35, %33 ], [ %32, %30 ], [ %29, %27 ], [ %26, %24 ], [ %23, %21 ], [ %20, %18 ], [ %17, %15 ], [ %14, %12 ], [ %11, %9 ]
  ret %"class.SkSL::Type"* %158
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL3dsl7DSLType8isNumberEv(%"class.SkSL::dsl::DSLType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %0)
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = add i32 %4, -1
  %7 = icmp ult i32 %6, 2
  %8 = or i1 %5, %7
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL3dsl7DSLType7isFloatEv(%"class.SkSL::dsl::DSLType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %0)
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL3dsl7DSLType8isSignedEv(%"class.SkSL::dsl::DSLType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %0)
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL3dsl7DSLType10isUnsignedEv(%"class.SkSL::dsl::DSLType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %0)
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 2
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL3dsl7DSLType9isIntegerEv(%"class.SkSL::dsl::DSLType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %0)
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -1
  %6 = icmp ult i32 %5, 2
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL3dsl7DSLType8isScalarEv(%"class.SkSL::dsl::DSLType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %0)
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 8
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL3dsl7DSLType8isVectorEv(%"class.SkSL::dsl::DSLType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %0)
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 11
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL3dsl7DSLType8isMatrixEv(%"class.SkSL::dsl::DSLType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %0)
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL3dsl7DSLType7isArrayEv(%"class.SkSL::dsl::DSLType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %0)
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL3dsl7DSLType8isStructEv(%"class.SkSL::dsl::DSLType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %0)
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  ret i1 %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7DSLType9ConstructES1_8SkTArrayINS0_13DSLExpressionELb0EE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::Type"*, i8, %class.SkTArray*) local_unnamed_addr #0 align 2 {
  %5 = alloca { %"class.SkSL::Type"*, i8 }, align 8
  %6 = bitcast { %"class.SkSL::Type"*, i8 }* %5 to %"class.SkSL::dsl::DSLType"*
  %7 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %8 = alloca %class.SkTArray, align 8
  %9 = getelementptr inbounds { %"class.SkSL::Type"*, i8 }, { %"class.SkSL::Type"*, i8 }* %5, i64 0, i32 0
  store %"class.SkSL::Type"* %1, %"class.SkSL::Type"** %9, align 8
  %10 = getelementptr inbounds { %"class.SkSL::Type"*, i8 }, { %"class.SkSL::Type"*, i8 }* %5, i64 0, i32 1
  store i8 %2, i8* %10, align 8
  %11 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* nonnull %6)
  call void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EEC2EOS3_(%class.SkTArray* nonnull %8, %class.SkTArray* dereferenceable(16) %3)
  call void @_ZN4SkSL3dsl9DSLWriter9ConstructERKNS_4TypeE8SkTArrayINS0_13DSLExpressionELb0EE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %7, %"class.SkSL::Type"* dereferenceable(184) %11, %class.SkTArray* nonnull %8) #11
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 172) #11
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7) #11
  %12 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %8, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 4294967294
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %8, i64 0, i32 0
  br label %22

18:                                               ; preds = %22, %4
  %19 = phi i64 [ %13, %4 ], [ %27, %22 ]
  %20 = and i64 %19, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %34, label %31

22:                                               ; preds = %22, %16
  %23 = phi i64 [ 0, %16 ], [ %26, %22 ]
  %24 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %17, align 8
  %25 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %24, i64 %23
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %25) #11
  %26 = add nuw nsw i64 %23, 1
  %27 = load i64, i64* %12, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %22, label %18

31:                                               ; preds = %18
  %32 = bitcast %class.SkTArray* %8 to i8**
  %33 = load i8*, i8** %32, align 8
  call void @_Z7sk_freePv(i8* %33) #11
  br label %34

34:                                               ; preds = %18, %31
  ret void
}

declare void @_ZN4SkSL3dsl9DSLWriter9ConstructERKNS_4TypeE8SkTArrayINS0_13DSLExpressionELb0EE(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::Type"* dereferenceable(184), %class.SkTArray*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EEC2EOS3_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  %9 = bitcast %class.SkTArray* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.SkTArray* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %3, align 8
  %13 = and i64 %12, 4294967294
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967295
  %17 = or i64 %16, %13
  store i64 %17, i64* %14, align 8
  %18 = load i64, i64* %3, align 8
  %19 = and i64 %18, -8589934592
  %20 = and i64 %17, 8589934590
  %21 = or i64 %19, %20
  %22 = or i64 %21, 1
  store i64 %22, i64* %14, align 8
  %23 = load i64, i64* %3, align 8
  %24 = and i64 %23, 4294967296
  %25 = and i64 %22, -4294967297
  %26 = or i64 %25, %24
  store i64 %26, i64* %14, align 8
  store %"class.SkSL::dsl::DSLExpression"* null, %"class.SkSL::dsl::DSLExpression"** %8, align 8
  br label %77

27:                                               ; preds = %2
  %28 = lshr i64 %4, 1
  %29 = trunc i64 %28 to i32
  %30 = and i32 %29, 2147483647
  %31 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %4, 4294967294
  %34 = and i64 %32, -4294967295
  %35 = or i64 %34, %33
  store i64 %35, i64* %31, align 8
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %27
  %38 = and i64 %35, 8589934591
  store i64 %38, i64* %31, align 8
  %39 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  store %"class.SkSL::dsl::DSLExpression"* null, %"class.SkSL::dsl::DSLExpression"** %39, align 8
  br label %50

40:                                               ; preds = %27
  %41 = icmp ugt i32 %30, 8
  %42 = select i1 %41, i32 %30, i32 8
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 33
  %45 = and i64 %35, 8589934591
  %46 = or i64 %45, %44
  store i64 %46, i64* %31, align 8
  %47 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #11
  %48 = bitcast %class.SkTArray* %0 to i8**
  store i8* %47, i8** %48, align 8
  %49 = load i64, i64* %31, align 8
  br label %50

50:                                               ; preds = %37, %40
  %51 = phi i8* [ %47, %40 ], [ null, %37 ]
  %52 = phi i64 [ %49, %40 ], [ %38, %37 ]
  %53 = and i64 %52, -4294967298
  %54 = or i64 %53, 1
  store i64 %54, i64* %31, align 8
  %55 = load i64, i64* %3, align 8
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %69, %60 ]
  %62 = shl nuw nsw i64 %61, 3
  %63 = getelementptr inbounds i8, i8* %51, i64 %62
  %64 = bitcast i8* %63 to %"class.SkSL::dsl::DSLExpression"*
  %65 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %59, align 8
  %66 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %65, i64 %61
  tail call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %64, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %66) #11
  %67 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %59, align 8
  %68 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %67, i64 %61
  tail call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %68) #11
  %69 = add nuw nsw i64 %61, 1
  %70 = load i64, i64* %3, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = icmp ult i64 %69, %72
  br i1 %73, label %60, label %74

74:                                               ; preds = %60, %50
  %75 = phi i64 [ %55, %50 ], [ %70, %60 ]
  %76 = and i64 %75, -4294967295
  br label %77

77:                                               ; preds = %74, %7
  %78 = phi i64 [ %76, %74 ], [ 1, %7 ]
  store i64 %78, i64* %3, align 8
  ret void
}

declare void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLPossibleExpression"*, i8*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.SkSL::Type"*, i8 } @_ZN4SkSL3dsl5ArrayERKNS0_7DSLTypeEi(%"class.SkSL::dsl::DSLType"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(16) %"class.std::__1::shared_ptr"* @_ZN4SkSL3dsl9DSLWriter11SymbolTableEv() #11
  %4 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %3, i64 0, i32 0
  %5 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %4, align 8
  %6 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %0)
  %7 = tail call %"class.SkSL::Type"* @_ZN4SkSL11SymbolTable17addArrayDimensionEPKNS_4TypeEi(%"class.SkSL::SymbolTable"* %5, %"class.SkSL::Type"* %6, i32 %1) #11
  %8 = insertvalue { %"class.SkSL::Type"*, i8 } undef, %"class.SkSL::Type"* %7, 0
  ret { %"class.SkSL::Type"*, i8 } %8
}

declare dereferenceable(16) %"class.std::__1::shared_ptr"* @_ZN4SkSL3dsl9DSLWriter11SymbolTableEv() local_unnamed_addr #2

declare %"class.SkSL::Type"* @_ZN4SkSL11SymbolTable17addArrayDimensionEPKNS_4TypeEi(%"class.SkSL::SymbolTable"*, %"class.SkSL::Type"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.SkSL::Type"*, i8 } @_ZN4SkSL3dsl6StructEPKc8SkTArrayINS0_8DSLFieldELb0EE(i8* nocapture readonly, %class.SkTArray.70* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::unique_ptr.45", align 8
  %4 = alloca [15 x i8], align 8
  %5 = alloca %"struct.SkSL::Modifiers", align 8
  %6 = alloca %"struct.SkSL::Modifiers", align 8
  %7 = alloca %"class.std::__1::vector.6", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.std::__1::vector.6", align 8
  %10 = alloca %"class.std::__1::unique_ptr.73", align 8
  %11 = bitcast %"class.std::__1::vector.6"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %7, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #11
  %15 = getelementptr inbounds %class.SkTArray.70, %class.SkTArray.70* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = lshr i64 %16, 1
  %18 = and i64 %17, 2147483647
  %19 = bitcast %"struct.SkSL::Type::Field"** %14 to i64*
  %20 = bitcast %"class.std::__1::vector.6"* %7 to i64*
  %21 = icmp eq i64 %18, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %2
  %23 = bitcast %"struct.SkSL::Type::Field"** %13 to i64*
  %24 = mul nuw nsw i64 %18, 104
  %25 = tail call i8* @_Znwm(i64 %24) #12
  %26 = bitcast i8* %25 to %"struct.SkSL::Type::Field"*
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %26, i64 %18
  %29 = ptrtoint %"struct.SkSL::Type::Field"* %28 to i64
  store i64 %27, i64* %20, align 8
  store i64 %27, i64* %23, align 8
  store i64 %29, i64* %19, align 8
  br label %30

30:                                               ; preds = %22, %2
  %31 = phi %"struct.SkSL::Type::Field"* [ null, %2 ], [ %26, %22 ]
  %32 = phi i64 [ 0, %2 ], [ %29, %22 ]
  %33 = phi i64 [ 0, %2 ], [ %27, %22 ]
  %34 = phi %"struct.SkSL::Type::Field"* [ null, %2 ], [ %28, %22 ]
  %35 = getelementptr inbounds %class.SkTArray.70, %class.SkTArray.70* %1, i64 0, i32 0
  %36 = load %"class.SkSL::dsl::DSLField"*, %"class.SkSL::dsl::DSLField"** %35, align 8
  %37 = icmp eq %"class.SkSL::dsl::DSLField"* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.SkSL::dsl::DSLField", %"class.SkSL::dsl::DSLField"* %36, i64 %18
  %40 = icmp eq i64 %18, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %38
  %42 = bitcast %"struct.SkSL::Type::Field"** %13 to i64*
  %43 = bitcast %"struct.SkSL::Modifiers"* %5 to i8*
  %44 = bitcast %"struct.SkSL::Modifiers"* %6 to i8*
  br label %251

45:                                               ; preds = %326, %30, %38
  %46 = phi %"struct.SkSL::Type::Field"* [ %31, %38 ], [ %31, %30 ], [ %327, %326 ]
  %47 = phi i64 [ %33, %38 ], [ %33, %30 ], [ %330, %326 ]
  %48 = phi i64 [ %33, %38 ], [ %33, %30 ], [ %331, %326 ]
  %49 = tail call dereferenceable(16) %"class.std::__1::shared_ptr"* @_ZN4SkSL3dsl9DSLWriter11SymbolTableEv() #11
  %50 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %49, i64 0, i32 0
  %51 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %50, align 8
  %52 = tail call i64 @strlen(i8* %0) #11
  %53 = icmp ugt i64 %52, -17
  br i1 %53, label %54, label %56

54:                                               ; preds = %45
  %55 = bitcast %"class.SkSL::String"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %55) #13
  unreachable

56:                                               ; preds = %45
  %57 = icmp ult i64 %52, 23
  br i1 %57, label %66, label %58

58:                                               ; preds = %56
  %59 = add nuw i64 %52, 16
  %60 = and i64 %59, -16
  %61 = tail call i8* @_Znwm(i64 %60) #12
  %62 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %61, i8** %62, align 8
  %63 = or i64 %60, -9223372036854775808
  %64 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %52, i64* %65, align 8
  br label %72

66:                                               ; preds = %56
  %67 = trunc i64 %52 to i8
  %68 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  store i8 %67, i8* %69, align 1
  %70 = bitcast %"class.SkSL::String"* %8 to i8*
  %71 = icmp eq i64 %52, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %66, %58
  %73 = phi i8* [ %61, %58 ], [ %70, %66 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %73, i8* align 1 %0, i64 %52, i1 false) #11
  br label %74

74:                                               ; preds = %66, %72
  %75 = phi i8* [ %70, %66 ], [ %73, %72 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 %52
  store i8 0, i8* %76, align 1
  %77 = bitcast %"class.std::__1::vector.6"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 24, i1 false) #11
  %78 = bitcast %"struct.SkSL::Type::Field"** %13 to i64*
  %79 = sub i64 %48, %47
  %80 = sdiv exact i64 %79, 104
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %107, label %82

82:                                               ; preds = %74
  %83 = icmp ugt i64 %80, 177372539170284150
  br i1 %83, label %84, label %86

84:                                               ; preds = %82
  %85 = bitcast %"class.std::__1::vector.6"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %85) #13
  unreachable

86:                                               ; preds = %82
  %87 = tail call i8* @_Znwm(i64 %79) #12
  %88 = bitcast i8* %87 to %"struct.SkSL::Type::Field"*
  %89 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 1
  %90 = bitcast %"struct.SkSL::Type::Field"** %89 to i8**
  store i8* %87, i8** %90, align 8
  %91 = bitcast %"class.std::__1::vector.6"* %9 to i8**
  store i8* %87, i8** %91, align 8
  %92 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %88, i64 %80
  %93 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.SkSL::Type::Field"* %92, %"struct.SkSL::Type::Field"** %93, align 8
  %94 = bitcast %"struct.SkSL::Type::Field"** %89 to i64*
  %95 = ptrtoint i8* %87 to i64
  %96 = ptrtoint %"struct.SkSL::Type::Field"* %46 to i64
  %97 = sub i64 %48, %96
  %98 = icmp sgt i64 %97, 0
  %99 = ptrtoint %"struct.SkSL::Type::Field"* %92 to i64
  br i1 %98, label %100, label %105

100:                                              ; preds = %86
  %101 = udiv exact i64 %97, 104
  %102 = bitcast %"struct.SkSL::Type::Field"* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* align 8 %102, i64 %97, i1 false) #11
  %103 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %88, i64 %101
  %104 = ptrtoint %"struct.SkSL::Type::Field"* %103 to i64
  br label %105

105:                                              ; preds = %100, %86
  %106 = phi i64 [ %104, %100 ], [ %95, %86 ]
  store i64 %106, i64* %94, align 8
  br label %107

107:                                              ; preds = %74, %105
  %108 = phi i64 [ %99, %105 ], [ 0, %74 ]
  %109 = phi i64 [ %106, %105 ], [ 0, %74 ]
  %110 = phi i64 [ %95, %105 ], [ 0, %74 ]
  %111 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %111)
  %112 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #11
  %113 = bitcast i8* %112 to %"class.SkSL::Type"*
  %114 = bitcast %"class.SkSL::String"* %8 to i8*
  %115 = bitcast %"class.SkSL::String"* %8 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = bitcast i64* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %111, i8* align 8 %118, i64 15, i1 false) #11
  %119 = getelementptr inbounds i8, i8* %114, i64 23
  %120 = load i8, i8* %119, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 24, i1 false) #11
  %121 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 1
  %122 = bitcast %"struct.SkSL::Type::Field"** %121 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 24, i1 false) #11
  %123 = bitcast i8* %112 to i32 (...)***
  %124 = getelementptr inbounds i8, i8* %112, i64 8
  %125 = bitcast i8* %124 to i32*
  store i32 -1, i32* %125, align 8
  %126 = getelementptr inbounds i8, i8* %112, i64 12
  %127 = bitcast i8* %126 to i32*
  store i32 13, i32* %127, align 4
  %128 = getelementptr inbounds i8, i8* %112, i64 16
  %129 = bitcast i8* %128 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %129, align 8
  %130 = getelementptr inbounds i8, i8* %112, i64 24
  %131 = bitcast i8* %130 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %123, align 8
  %132 = getelementptr inbounds i8, i8* %112, i64 40
  %133 = bitcast i8* %132 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %133, align 8
  %134 = getelementptr inbounds i8, i8* %112, i64 48
  %135 = bitcast i8* %134 to i64*
  store i64 %116, i64* %135, align 8
  %136 = getelementptr inbounds i8, i8* %112, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* nonnull align 8 %111, i64 15, i1 false) #11
  %137 = getelementptr inbounds i8, i8* %112, i64 71
  store i8 %120, i8* %137, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 0, i64 15, i1 false)
  %138 = getelementptr inbounds i8, i8* %112, i64 72
  %139 = bitcast i8* %138 to i32*
  store i32 9, i32* %139, align 8
  %140 = getelementptr inbounds i8, i8* %112, i64 76
  %141 = bitcast i8* %140 to i32*
  store i32 4, i32* %141, align 4
  %142 = getelementptr inbounds i8, i8* %112, i64 80
  %143 = bitcast i8* %142 to i32*
  store i32 -1, i32* %143, align 8
  %144 = getelementptr inbounds i8, i8* %112, i64 88
  %145 = getelementptr inbounds i8, i8* %112, i64 120
  %146 = bitcast i8* %145 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 32, i1 false) #11
  store i32 -1, i32* %146, align 8
  %147 = getelementptr inbounds i8, i8* %112, i64 124
  %148 = bitcast i8* %147 to i32*
  store i32 -1, i32* %148, align 4
  %149 = getelementptr inbounds i8, i8* %112, i64 128
  %150 = bitcast i8* %149 to i64*
  store i64 %110, i64* %150, align 8
  %151 = getelementptr inbounds i8, i8* %112, i64 136
  %152 = bitcast i8* %151 to i64*
  store i64 %109, i64* %152, align 8
  %153 = getelementptr inbounds i8, i8* %112, i64 144
  %154 = bitcast i8* %153 to i64*
  store i64 %108, i64* %154, align 8
  %155 = getelementptr inbounds i8, i8* %112, i64 152
  %156 = getelementptr inbounds i8, i8* %112, i64 168
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 9, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 16, i1 false) #11
  %157 = icmp slt i8 %120, 0
  br i1 %157, label %158, label %162

158:                                              ; preds = %107
  %159 = inttoptr i64 %116 to i8*
  %160 = bitcast i8* %136 to i64*
  %161 = load i64, i64* %160, align 8
  br label %164

162:                                              ; preds = %107
  %163 = zext i8 %120 to i64
  br label %164

164:                                              ; preds = %158, %162
  %165 = phi i8* [ %159, %158 ], [ %134, %162 ]
  %166 = phi i64 [ %161, %158 ], [ %163, %162 ]
  store i8* %165, i8** %129, align 8
  store i64 %166, i64* %131, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %111)
  %167 = ptrtoint i8* %112 to i64
  %168 = bitcast i8* %112 to %"class.SkSL::Symbol"*
  tail call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %51, %"class.SkSL::Symbol"* %168) #11
  %169 = bitcast %"class.std::__1::unique_ptr.45"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #11
  %170 = bitcast %"class.std::__1::unique_ptr.45"* %3 to i64*
  store i64 %167, i64* %170, align 8
  %171 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %51, i64 0, i32 1, i32 0, i32 1
  %172 = load %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %171, align 8
  %173 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %51, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %174 = load %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %173, align 8
  %175 = icmp ult %"class.std::__1::unique_ptr.45"* %172, %174
  br i1 %175, label %176, label %182

176:                                              ; preds = %164
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %177, align 8
  %178 = bitcast %"class.std::__1::unique_ptr.45"* %172 to i64*
  store i64 %167, i64* %178, align 8
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %172, i64 1
  %180 = ptrtoint %"class.std::__1::unique_ptr.45"* %179 to i64
  %181 = bitcast %"class.std::__1::unique_ptr.45"** %171 to i64*
  store i64 %180, i64* %181, align 8
  br label %184

182:                                              ; preds = %164
  %183 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %51, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.43"* %183, %"class.std::__1::unique_ptr.45"* nonnull dereferenceable(8) %3) #11
  br label %184

184:                                              ; preds = %182, %176
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %3, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %185, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %185, align 8
  %187 = icmp eq %"class.SkSL::Symbol"* %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %184
  %189 = bitcast %"class.SkSL::Symbol"* %186 to void (%"class.SkSL::Symbol"*)***
  %190 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %190, i64 1
  %192 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %191, align 8
  call void %192(%"class.SkSL::Symbol"* nonnull %186) #11
  br label %193

193:                                              ; preds = %184, %188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #11
  %194 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 0
  %195 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %194, align 8
  %196 = icmp eq %"struct.SkSL::Type::Field"* %195, null
  br i1 %196, label %200, label %197

197:                                              ; preds = %193
  %198 = ptrtoint %"struct.SkSL::Type::Field"* %195 to i64
  store i64 %198, i64* %122, align 8
  %199 = bitcast %"struct.SkSL::Type::Field"* %195 to i8*
  call void @_ZdlPv(i8* %199) #12
  br label %200

200:                                              ; preds = %193, %197
  %201 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %201, i64 0, i32 1, i32 0
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8
  call void @_ZdlPv(i8* %207) #12
  br label %208

208:                                              ; preds = %200, %205
  %209 = call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #11
  %210 = bitcast %"class.std::__1::unique_ptr.73"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #11
  %211 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #11
  %212 = getelementptr inbounds i8, i8* %211, i64 8
  %213 = bitcast i8* %212 to i32*
  store i32 -1, i32* %213, align 8
  %214 = getelementptr inbounds i8, i8* %211, i64 12
  %215 = bitcast i8* %214 to i32*
  store i32 8, i32* %215, align 4
  %216 = bitcast i8* %211 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL16StructDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %216, align 8
  %217 = getelementptr inbounds i8, i8* %211, i64 16
  %218 = bitcast i8* %217 to i8**
  store i8* %112, i8** %218, align 8
  %219 = ptrtoint i8* %211 to i64
  %220 = bitcast %"class.std::__1::unique_ptr.73"* %10 to i64*
  store i64 %219, i64* %220, align 8
  %221 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %209, i64 0, i32 6, i32 0, i32 1
  %222 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %221, align 8
  %223 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %209, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %224 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %223, align 8
  %225 = icmp ult %"class.std::__1::unique_ptr.73"* %222, %224
  br i1 %225, label %226, label %232

226:                                              ; preds = %208
  %227 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %227, align 8
  %228 = bitcast %"class.std::__1::unique_ptr.73"* %222 to i64*
  store i64 %219, i64* %228, align 8
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %222, i64 1
  %230 = ptrtoint %"class.std::__1::unique_ptr.73"* %229 to i64
  %231 = bitcast %"class.std::__1::unique_ptr.73"** %221 to i64*
  store i64 %230, i64* %231, align 8
  br label %234

232:                                              ; preds = %208
  %233 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %209, i64 0, i32 6
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.71"* %233, %"class.std::__1::unique_ptr.73"* nonnull dereferenceable(8) %10) #11
  br label %234

234:                                              ; preds = %226, %232
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %10, i64 0, i32 0, i32 0, i32 0
  %236 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %235, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %235, align 8
  %237 = icmp eq %"class.SkSL::ProgramElement"* %236, null
  br i1 %237, label %243, label %238

238:                                              ; preds = %234
  %239 = bitcast %"class.SkSL::ProgramElement"* %236 to void (%"class.SkSL::ProgramElement"*)***
  %240 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %240, i64 1
  %242 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %241, align 8
  call void %242(%"class.SkSL::ProgramElement"* nonnull %236) #11
  br label %243

243:                                              ; preds = %238, %234
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #11
  %244 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %12, align 8
  %245 = icmp eq %"struct.SkSL::Type::Field"* %244, null
  br i1 %245, label %249, label %246

246:                                              ; preds = %243
  %247 = ptrtoint %"struct.SkSL::Type::Field"* %244 to i64
  store i64 %247, i64* %78, align 8
  %248 = bitcast %"struct.SkSL::Type::Field"* %244 to i8*
  call void @_ZdlPv(i8* %248) #12
  br label %249

249:                                              ; preds = %243, %246
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %250 = insertvalue { %"class.SkSL::Type"*, i8 } undef, %"class.SkSL::Type"* %113, 0
  ret { %"class.SkSL::Type"*, i8 } %250

251:                                              ; preds = %41, %326
  %252 = phi %"struct.SkSL::Type::Field"* [ %31, %41 ], [ %327, %326 ]
  %253 = phi %"struct.SkSL::Type::Field"* [ %31, %41 ], [ %328, %326 ]
  %254 = phi i64 [ %32, %41 ], [ %329, %326 ]
  %255 = phi i64 [ %33, %41 ], [ %330, %326 ]
  %256 = phi i64 [ %33, %41 ], [ %331, %326 ]
  %257 = phi %"struct.SkSL::Type::Field"* [ %34, %41 ], [ %332, %326 ]
  %258 = phi %"struct.SkSL::Type::Field"* [ %31, %41 ], [ %333, %326 ]
  %259 = phi %"class.SkSL::dsl::DSLField"* [ %36, %41 ], [ %334, %326 ]
  %260 = getelementptr inbounds %"class.SkSL::dsl::DSLField", %"class.SkSL::dsl::DSLField"* %259, i64 0, i32 2
  %261 = getelementptr inbounds %"class.SkSL::dsl::DSLField", %"class.SkSL::dsl::DSLField"* %259, i64 0, i32 1
  %262 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %261)
  %263 = ptrtoint %"class.SkSL::Type"* %262 to i64
  %264 = icmp ult %"struct.SkSL::Type::Field"* %258, %257
  br i1 %264, label %265, label %276

265:                                              ; preds = %251
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %44)
  %266 = bitcast %"class.SkSL::dsl::DSLField"* %259 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %266, i64 80, i1 false) #11
  %267 = load i8*, i8** %260, align 8
  %268 = tail call i64 @strlen(i8* %267) #14
  %269 = bitcast %"struct.SkSL::Type::Field"* %258 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %269, i8* nonnull align 8 %44, i64 80, i1 false) #11
  %270 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %258, i64 0, i32 1, i32 0
  store i8* %267, i8** %270, align 8
  %271 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %258, i64 0, i32 1, i32 1
  store i64 %268, i64* %271, align 8
  %272 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %258, i64 0, i32 2
  %273 = bitcast %"class.SkSL::Type"** %272 to i64*
  store i64 %263, i64* %273, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %44)
  %274 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %258, i64 1
  %275 = ptrtoint %"struct.SkSL::Type::Field"* %274 to i64
  store i64 %275, i64* %42, align 8
  br label %326

276:                                              ; preds = %251
  %277 = sub i64 %256, %255
  %278 = sdiv exact i64 %277, 104
  %279 = add nsw i64 %278, 1
  %280 = icmp ugt i64 %279, 177372539170284150
  br i1 %280, label %281, label %283

281:                                              ; preds = %276
  %282 = bitcast %"class.std::__1::vector.6"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %282) #13
  unreachable

283:                                              ; preds = %276
  %284 = sub i64 %254, %255
  %285 = sdiv exact i64 %284, 104
  %286 = icmp ult i64 %285, 88686269585142075
  br i1 %286, label %287, label %292

287:                                              ; preds = %283
  %288 = shl nsw i64 %285, 1
  %289 = icmp ult i64 %288, %279
  %290 = select i1 %289, i64 %279, i64 %288
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %297, label %292

292:                                              ; preds = %287, %283
  %293 = phi i64 [ %290, %287 ], [ 177372539170284150, %283 ]
  %294 = mul i64 %293, 104
  %295 = tail call i8* @_Znwm(i64 %294) #12
  %296 = bitcast i8* %295 to %"struct.SkSL::Type::Field"*
  br label %297

297:                                              ; preds = %292, %287
  %298 = phi i64 [ %293, %292 ], [ 0, %287 ]
  %299 = phi %"struct.SkSL::Type::Field"* [ %296, %292 ], [ null, %287 ]
  %300 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %299, i64 %278
  %301 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %299, i64 %298
  %302 = ptrtoint %"struct.SkSL::Type::Field"* %301 to i64
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %43)
  %303 = bitcast %"class.SkSL::dsl::DSLField"* %259 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 %303, i64 80, i1 false) #11
  %304 = load i8*, i8** %260, align 8
  %305 = tail call i64 @strlen(i8* %304) #14
  %306 = bitcast %"struct.SkSL::Type::Field"* %300 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %306, i8* nonnull align 8 %43, i64 80, i1 false) #11
  %307 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %299, i64 %278, i32 1, i32 0
  store i8* %304, i8** %307, align 8
  %308 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %299, i64 %278, i32 1, i32 1
  store i64 %305, i64* %308, align 8
  %309 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %299, i64 %278, i32 2
  %310 = bitcast %"class.SkSL::Type"** %309 to i64*
  store i64 %263, i64* %310, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %43)
  %311 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %300, i64 1
  %312 = ptrtoint %"struct.SkSL::Type::Field"* %311 to i64
  %313 = ptrtoint %"struct.SkSL::Type::Field"* %253 to i64
  %314 = sub i64 %256, %313
  %315 = sdiv exact i64 %314, -104
  %316 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %300, i64 %315
  %317 = ptrtoint %"struct.SkSL::Type::Field"* %316 to i64
  %318 = icmp sgt i64 %314, 0
  br i1 %318, label %319, label %322

319:                                              ; preds = %297
  %320 = bitcast %"struct.SkSL::Type::Field"* %316 to i8*
  %321 = bitcast %"struct.SkSL::Type::Field"* %253 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %320, i8* align 8 %321, i64 %314, i1 false) #11
  br label %322

322:                                              ; preds = %319, %297
  store i64 %317, i64* %20, align 8
  store i64 %312, i64* %42, align 8
  store i64 %302, i64* %19, align 8
  %323 = icmp eq %"struct.SkSL::Type::Field"* %253, null
  br i1 %323, label %326, label %324

324:                                              ; preds = %322
  %325 = bitcast %"struct.SkSL::Type::Field"* %253 to i8*
  tail call void @_ZdlPv(i8* %325) #12
  br label %326

326:                                              ; preds = %324, %322, %265
  %327 = phi %"struct.SkSL::Type::Field"* [ %316, %324 ], [ %316, %322 ], [ %252, %265 ]
  %328 = phi %"struct.SkSL::Type::Field"* [ %316, %324 ], [ %316, %322 ], [ %253, %265 ]
  %329 = phi i64 [ %302, %324 ], [ %302, %322 ], [ %254, %265 ]
  %330 = phi i64 [ %317, %324 ], [ %317, %322 ], [ %255, %265 ]
  %331 = phi i64 [ %312, %324 ], [ %312, %322 ], [ %275, %265 ]
  %332 = phi %"struct.SkSL::Type::Field"* [ %301, %324 ], [ %301, %322 ], [ %257, %265 ]
  %333 = phi %"struct.SkSL::Type::Field"* [ %311, %324 ], [ %311, %322 ], [ %274, %265 ]
  %334 = getelementptr inbounds %"class.SkSL::dsl::DSLField", %"class.SkSL::dsl::DSLField"* %259, i64 1
  %335 = icmp eq %"class.SkSL::dsl::DSLField"* %334, %39
  br i1 %335, label %45, label %251
}

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD2Ev(%"class.SkSL::Type"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %20, %26
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD0Ev(%"class.SkSL::Type"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %20, %26
  %30 = bitcast %"class.SkSL::Type"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %30) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Type11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Type"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 18
  %4 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %3, align 8, !noalias !2
  %5 = icmp eq %"class.SkSL::Type"* %4, null
  %6 = select i1 %5, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %4
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 0
  %8 = load i8*, i8** %7, align 8, !noalias !2
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8, !noalias !2
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %24, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #12
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8, !alias.scope !2
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8, !alias.scope !2
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8, !alias.scope !2
  br label %30

24:                                               ; preds = %14
  %25 = trunc i64 %10 to i8
  %26 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1, !alias.scope !2
  %28 = bitcast %"class.SkSL::String"* %0 to i8*
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %24, %16
  %31 = phi i8* [ %19, %16 ], [ %28, %24 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %8, i64 %10, i1 false) #11
  br label %32

32:                                               ; preds = %24, %30
  %33 = phi i8* [ %28, %24 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %10
  store i8 0, i8* %34, align 1
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"*) unnamed_addr #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"*, %"class.SkSL::Symbol"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.43"*, %"class.std::__1::unique_ptr.45"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.45"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.43"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.43"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.45"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.45"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.45"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.45"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.45"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.45"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.45"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.45"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.45"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::Symbol"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.45"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.45"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.45"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.45"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !5

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.45"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.45"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.45"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.45"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.45"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.45"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.45"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.45"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.45"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.45"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.45"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.45"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.45"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.45"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.45"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.45"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.45"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.45"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.45"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.45"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.45"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.45"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.45"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.45"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.45"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.45"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.45"*
  %138 = icmp eq %"class.std::__1::unique_ptr.45"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.45"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %142, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %142, align 8
  %144 = icmp eq %"class.SkSL::Symbol"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::Symbol"* %143 to void (%"class.SkSL::Symbol"*)***
  %147 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %147, i64 1
  %149 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %148, align 8
  tail call void %149(%"class.SkSL::Symbol"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.45"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL16StructDefinitionD0Ev(%"class.SkSL::StructDefinition"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.SkSL::StructDefinition"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL16StructDefinition11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::StructDefinition"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  store i8 7, i8* %6, align 1
  %9 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i64 7, i1 false) #11
  %10 = getelementptr inbounds i8, i8* %9, i64 7
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.SkSL::StructDefinition", %"class.SkSL::StructDefinition"* %1, i64 0, i32 1
  %12 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLENS_14StringFragmentE(%"class.SkSL::String"* %0, i8* %14, i64 %16) #11
  %18 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)) #11
  %19 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8
  %20 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %19, i64 0, i32 10, i32 0, i32 0
  %21 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %20, align 8
  %22 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %19, i64 0, i32 10, i32 0, i32 1
  %23 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %22, align 8
  %24 = icmp eq %"struct.SkSL::Type::Field"* %21, %23
  br i1 %24, label %36, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.SkSL::String"* %3 to i8*
  %27 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.SkSL::String"* %4 to i8*
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  br label %38

36:                                               ; preds = %80, %2
  %37 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #11
  ret void

38:                                               ; preds = %25, %80
  %39 = phi %"struct.SkSL::Type::Field"* [ %21, %25 ], [ %88, %80 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  %40 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 0, i32 0
  call void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* nonnull sret %3, %"struct.SkSL::Modifiers"* %40)
  %41 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #11
  %42 = load i8, i8* %28, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %38, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  %47 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 0, i32 2
  %48 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %47, align 8
  %49 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 18
  %50 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %49, align 8, !noalias !7
  %51 = icmp eq %"class.SkSL::Type"* %50, null
  %52 = select i1 %51, %"class.SkSL::Type"* %48, %"class.SkSL::Type"* %50
  %53 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %52, i64 0, i32 0, i32 1, i32 0
  %54 = load i8*, i8** %53, align 8, !noalias !7
  %55 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %52, i64 0, i32 0, i32 1, i32 1
  %56 = load i64, i64* %55, align 8, !noalias !7
  %57 = icmp ugt i64 %56, -17
  br i1 %57, label %58, label %60

58:                                               ; preds = %46
  %59 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %59) #13
  unreachable

60:                                               ; preds = %46
  %61 = icmp ult i64 %56, 23
  br i1 %61, label %67, label %62

62:                                               ; preds = %60
  %63 = add nuw i64 %56, 16
  %64 = and i64 %63, -16
  %65 = call i8* @_Znwm(i64 %64) #12
  store i8* %65, i8** %31, align 8, !alias.scope !7
  %66 = or i64 %64, -9223372036854775808
  store i64 %66, i64* %32, align 8, !alias.scope !7
  store i64 %56, i64* %33, align 8, !alias.scope !7
  br label %70

67:                                               ; preds = %60
  %68 = trunc i64 %56 to i8
  store i8 %68, i8* %35, align 1, !alias.scope !7
  %69 = icmp eq i64 %56, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %67, %62
  %71 = phi i8* [ %65, %62 ], [ %30, %67 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %71, i8* align 1 %54, i64 %56, i1 false) #11
  br label %72

72:                                               ; preds = %67, %70
  %73 = phi i8* [ %30, %67 ], [ %71, %70 ]
  %74 = getelementptr inbounds i8, i8* %73, i64 %56
  store i8 0, i8* %74, align 1
  %75 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #11
  %76 = load i8, i8* %35, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %79) #12
  br label %80

80:                                               ; preds = %72, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  %81 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #11
  %82 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 0, i32 1, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 0, i32 1, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLENS_14StringFragmentE(%"class.SkSL::String"* %0, i8* %83, i64 %85) #11
  %87 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #11
  %88 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 1
  %89 = icmp eq %"struct.SkSL::Type::Field"* %88, %23
  br i1 %89, label %36, label %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL16StructDefinition5cloneEv(%"class.SkSL::StructDefinition"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::StructDefinition", %"class.SkSL::StructDefinition"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::StructDefinition", %"class.SkSL::StructDefinition"* %0, i64 0, i32 1
  %4 = bitcast %"class.SkSL::Type"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #11
  %7 = load i32, i32* %2, align 4
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 %7, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 8, i32* %11, align 4
  %12 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL16StructDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = bitcast i8* %13 to i64*
  store i64 %5, i64* %14, align 8
  %15 = bitcast i8* %6 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %15
}

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLENS_14StringFragmentE(%"class.SkSL::String"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Modifiers"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0
  %4 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 24, i1 false)
  tail call void @_ZNK4SkSL6Layout11descriptionEv(%"class.SkSL::String"* sret %0, %"struct.SkSL::Layout"* %3)
  %5 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0)) #11
  %11 = load i32, i32* %5, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i32 [ %6, %2 ], [ %11, %9 ]
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)) #11
  %18 = load i32, i32* %5, align 8
  br label %19

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %13, %12 ], [ %18, %16 ]
  %21 = and i32 %20, 16
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #11
  %25 = load i32, i32* %5, align 8
  br label %26

26:                                               ; preds = %19, %23
  %27 = phi i32 [ %20, %19 ], [ %25, %23 ]
  %28 = and i32 %27, 32
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0)) #11
  %32 = load i32, i32* %5, align 8
  br label %33

33:                                               ; preds = %26, %30
  %34 = phi i32 [ %27, %26 ], [ %32, %30 ]
  %35 = and i32 %34, 64
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0)) #11
  %39 = load i32, i32* %5, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i32 [ %34, %33 ], [ %39, %37 ]
  %42 = and i32 %41, 512
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0)) #11
  %46 = load i32, i32* %5, align 8
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i32 [ %41, %40 ], [ %46, %44 ]
  %49 = and i32 %48, 6
  %50 = icmp eq i32 %49, 6
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = and i32 %48, 2
  %53 = icmp eq i32 %52, 0
  %54 = and i32 %48, 6
  %55 = icmp eq i32 %54, 0
  %56 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0)
  br i1 %55, label %60, label %57

57:                                               ; preds = %51, %47
  %58 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), %47 ], [ %56, %51 ]
  %59 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* %58) #11
  br label %60

60:                                               ; preds = %51, %57
  ret void
}

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL6Layout11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Layout"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.SkSL::String", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.SkSL::String", align 8
  %30 = alloca %"class.SkSL::String", align 8
  %31 = alloca %"class.SkSL::String", align 8
  %32 = alloca %"class.SkSL::String", align 8
  %33 = alloca %"class.SkSL::String", align 8
  %34 = alloca %"class.SkSL::String", align 8
  %35 = alloca %"class.SkSL::String", align 8
  %36 = alloca %"class.SkSL::String", align 8
  %37 = alloca %"class.SkSL::String", align 8
  %38 = alloca %"class.SkSL::String", align 8
  %39 = alloca %"class.SkSL::String", align 8
  %40 = alloca %"class.SkSL::String", align 8
  %41 = alloca %"class.SkSL::String", align 8
  %42 = alloca %"class.SkSL::String", align 8
  %43 = alloca %"class.SkSL::String", align 8
  %44 = alloca %"class.SkSL::String", align 8
  %45 = alloca %"class.SkSL::String", align 8
  %46 = alloca %"class.SkSL::String", align 8
  %47 = alloca %"class.SkSL::String", align 8
  %48 = alloca %"class.SkSL::String", align 8
  %49 = alloca %"class.SkSL::String", align 8
  %50 = alloca %"class.SkSL::String", align 8
  %51 = alloca %"class.SkSL::String", align 8
  %52 = alloca %"class.SkSL::String", align 8
  %53 = alloca %"class.SkSL::String", align 8
  %54 = alloca %"class.SkSL::String", align 8
  %55 = alloca %"class.SkSL::String", align 8
  %56 = alloca %"class.SkSL::String", align 8
  %57 = alloca %"class.SkSL::String", align 8
  %58 = alloca %"class.SkSL::String", align 8
  %59 = alloca %"class.SkSL::String", align 8
  %60 = alloca %"class.SkSL::String", align 8
  %61 = alloca %"class.SkSL::String", align 8
  %62 = alloca %"class.SkSL::String", align 8
  %63 = alloca %"class.SkSL::String", align 8
  %64 = alloca %"class.SkSL::String", align 8
  %65 = alloca %"class.SkSL::String", align 8
  %66 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #11
  %69 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, -1
  br i1 %71, label %72, label %111

72:                                               ; preds = %2
  %73 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #11
  %74 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #11
  %75 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #11
  %76 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 0, i8* %77, align 1, !alias.scope !12
  store i8 0, i8* %75, align 8, !alias.scope !12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0)) #11
  %78 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #11
  %79 = load i32, i32* %69, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %6, i32 %79) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #11
  %80 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #11
  %81 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %72
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #12
  br label %88

88:                                               ; preds = %72, %85
  %89 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %88, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #11
  %97 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #12
  br label %104

104:                                              ; preds = %96, %101
  %105 = load i8, i8* %77, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #12
  br label %110

110:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #11
  br label %111

111:                                              ; preds = %110, %2
  %112 = phi i8 [ 0, %110 ], [ 1, %2 ]
  %113 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = icmp sgt i32 %114, -1
  br i1 %115, label %116, label %161

116:                                              ; preds = %111
  %117 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #11
  %118 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #11
  %119 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #11
  %120 = icmp eq i8 %112, 0
  %121 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  br i1 %120, label %124, label %123

123:                                              ; preds = %116
  store i8 0, i8* %122, align 1, !alias.scope !15
  store i8 0, i8* %119, align 8, !alias.scope !15
  br label %127

124:                                              ; preds = %116
  store i8 2, i8* %122, align 1, !alias.scope !15
  %125 = bitcast %"class.SkSL::String"* %9 to i16*
  store i16 8236, i16* %125, align 8, !alias.scope !15
  %126 = getelementptr inbounds i8, i8* %119, i64 2
  store i8 0, i8* %126, align 2, !alias.scope !15
  br label %127

127:                                              ; preds = %123, %124
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0)) #11
  %128 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #11
  %129 = load i32, i32* %113, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %10, i32 %129) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, %"class.SkSL::String"* nonnull dereferenceable(24) %10) #11
  %130 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %7) #11
  %131 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %137) #12
  br label %138

138:                                              ; preds = %127, %135
  %139 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %138, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #11
  %147 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #12
  br label %154

154:                                              ; preds = %146, %151
  %155 = load i8, i8* %122, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #12
  br label %160

160:                                              ; preds = %154, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #11
  br label %161

161:                                              ; preds = %160, %111
  %162 = phi i8 [ 0, %160 ], [ %112, %111 ]
  %163 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = icmp sgt i32 %164, -1
  br i1 %165, label %166, label %211

166:                                              ; preds = %161
  %167 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #11
  %168 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #11
  %169 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #11
  %170 = icmp eq i8 %162, 0
  %171 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  br i1 %170, label %174, label %173

173:                                              ; preds = %166
  store i8 0, i8* %172, align 1, !alias.scope !18
  store i8 0, i8* %169, align 8, !alias.scope !18
  br label %177

174:                                              ; preds = %166
  store i8 2, i8* %172, align 1, !alias.scope !18
  %175 = bitcast %"class.SkSL::String"* %13 to i16*
  store i16 8236, i16* %175, align 8, !alias.scope !18
  %176 = getelementptr inbounds i8, i8* %169, i64 2
  store i8 0, i8* %176, align 2, !alias.scope !18
  br label %177

177:                                              ; preds = %173, %174
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0)) #11
  %178 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #11
  %179 = load i32, i32* %163, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %14, i32 %179) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #11
  %180 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %11) #11
  %181 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %187) #12
  br label %188

188:                                              ; preds = %177, %185
  %189 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %195) #12
  br label %196

196:                                              ; preds = %188, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #11
  %197 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %203) #12
  br label %204

204:                                              ; preds = %196, %201
  %205 = load i8, i8* %172, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %209) #12
  br label %210

210:                                              ; preds = %204, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #11
  br label %211

211:                                              ; preds = %210, %161
  %212 = phi i8 [ 0, %210 ], [ %162, %161 ]
  %213 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %214 = load i32, i32* %213, align 8
  %215 = icmp sgt i32 %214, -1
  br i1 %215, label %216, label %261

216:                                              ; preds = %211
  %217 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #11
  %218 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #11
  %219 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #11
  %220 = icmp eq i8 %212, 0
  %221 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %221, i64 0, i32 1, i32 0
  br i1 %220, label %224, label %223

223:                                              ; preds = %216
  store i8 0, i8* %222, align 1, !alias.scope !21
  store i8 0, i8* %219, align 8, !alias.scope !21
  br label %227

224:                                              ; preds = %216
  store i8 2, i8* %222, align 1, !alias.scope !21
  %225 = bitcast %"class.SkSL::String"* %17 to i16*
  store i16 8236, i16* %225, align 8, !alias.scope !21
  %226 = getelementptr inbounds i8, i8* %219, i64 2
  store i8 0, i8* %226, align 2, !alias.scope !21
  br label %227

227:                                              ; preds = %223, %224
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0)) #11
  %228 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #11
  %229 = load i32, i32* %213, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %18, i32 %229) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %15, %"class.SkSL::String"* nonnull %16, %"class.SkSL::String"* nonnull dereferenceable(24) %18) #11
  %230 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %15) #11
  %231 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %231, i64 0, i32 1, i32 0
  %233 = load i8, i8* %232, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %227
  %236 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  call void @_ZdlPv(i8* %237) #12
  br label %238

238:                                              ; preds = %227, %235
  %239 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %246

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  call void @_ZdlPv(i8* %245) #12
  br label %246

246:                                              ; preds = %238, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #11
  %247 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %247, i64 0, i32 1, i32 0
  %249 = load i8, i8* %248, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %254

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load i8*, i8** %252, align 8
  call void @_ZdlPv(i8* %253) #12
  br label %254

254:                                              ; preds = %246, %251
  %255 = load i8, i8* %222, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %260

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  call void @_ZdlPv(i8* %259) #12
  br label %260

260:                                              ; preds = %254, %257
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #11
  br label %261

261:                                              ; preds = %260, %211
  %262 = phi i8 [ 0, %260 ], [ %212, %211 ]
  %263 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %264, -1
  br i1 %265, label %266, label %311

266:                                              ; preds = %261
  %267 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #11
  %268 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #11
  %269 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %269) #11
  %270 = icmp eq i8 %262, 0
  %271 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %272 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %271, i64 0, i32 1, i32 0
  br i1 %270, label %274, label %273

273:                                              ; preds = %266
  store i8 0, i8* %272, align 1, !alias.scope !24
  store i8 0, i8* %269, align 8, !alias.scope !24
  br label %277

274:                                              ; preds = %266
  store i8 2, i8* %272, align 1, !alias.scope !24
  %275 = bitcast %"class.SkSL::String"* %21 to i16*
  store i16 8236, i16* %275, align 8, !alias.scope !24
  %276 = getelementptr inbounds i8, i8* %269, i64 2
  store i8 0, i8* %276, align 2, !alias.scope !24
  br label %277

277:                                              ; preds = %273, %274
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::String"* nonnull %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #11
  %278 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %278) #11
  %279 = load i32, i32* %263, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %22, i32 %279) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* nonnull %20, %"class.SkSL::String"* nonnull dereferenceable(24) %22) #11
  %280 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %19) #11
  %281 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %277
  %286 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load i8*, i8** %286, align 8
  call void @_ZdlPv(i8* %287) #12
  br label %288

288:                                              ; preds = %277, %285
  %289 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %289, i64 0, i32 1, i32 0
  %291 = load i8, i8* %290, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %293, label %296

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i8*, i8** %294, align 8
  call void @_ZdlPv(i8* %295) #12
  br label %296

296:                                              ; preds = %288, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %278) #11
  %297 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %298 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %297, i64 0, i32 1, i32 0
  %299 = load i8, i8* %298, align 1
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %301, label %304

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load i8*, i8** %302, align 8
  call void @_ZdlPv(i8* %303) #12
  br label %304

304:                                              ; preds = %296, %301
  %305 = load i8, i8* %272, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %304
  %308 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #12
  br label %310

310:                                              ; preds = %304, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %269) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #11
  br label %311

311:                                              ; preds = %310, %261
  %312 = phi i8 [ 0, %310 ], [ %262, %261 ]
  %313 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %314 = load i32, i32* %313, align 8
  %315 = icmp sgt i32 %314, -1
  br i1 %315, label %316, label %361

316:                                              ; preds = %311
  %317 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %317) #11
  %318 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %318) #11
  %319 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319) #11
  %320 = icmp eq i8 %312, 0
  %321 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %321, i64 0, i32 1, i32 0
  br i1 %320, label %324, label %323

323:                                              ; preds = %316
  store i8 0, i8* %322, align 1, !alias.scope !27
  store i8 0, i8* %319, align 8, !alias.scope !27
  br label %327

324:                                              ; preds = %316
  store i8 2, i8* %322, align 1, !alias.scope !27
  %325 = bitcast %"class.SkSL::String"* %25 to i16*
  store i16 8236, i16* %325, align 8, !alias.scope !27
  %326 = getelementptr inbounds i8, i8* %319, i64 2
  store i8 0, i8* %326, align 2, !alias.scope !27
  br label %327

327:                                              ; preds = %323, %324
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %24, %"class.SkSL::String"* nonnull %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0)) #11
  %328 = bitcast %"class.SkSL::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %328) #11
  %329 = load i32, i32* %313, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %26, i32 %329) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %23, %"class.SkSL::String"* nonnull %24, %"class.SkSL::String"* nonnull dereferenceable(24) %26) #11
  %330 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %23) #11
  %331 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %331, i64 0, i32 1, i32 0
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %338

335:                                              ; preds = %327
  %336 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load i8*, i8** %336, align 8
  call void @_ZdlPv(i8* %337) #12
  br label %338

338:                                              ; preds = %327, %335
  %339 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %339, i64 0, i32 1, i32 0
  %341 = load i8, i8* %340, align 1
  %342 = icmp slt i8 %341, 0
  br i1 %342, label %343, label %346

343:                                              ; preds = %338
  %344 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load i8*, i8** %344, align 8
  call void @_ZdlPv(i8* %345) #12
  br label %346

346:                                              ; preds = %338, %343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %328) #11
  %347 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %348 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %347, i64 0, i32 1, i32 0
  %349 = load i8, i8* %348, align 1
  %350 = icmp slt i8 %349, 0
  br i1 %350, label %351, label %354

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load i8*, i8** %352, align 8
  call void @_ZdlPv(i8* %353) #12
  br label %354

354:                                              ; preds = %346, %351
  %355 = load i8, i8* %322, align 1
  %356 = icmp slt i8 %355, 0
  br i1 %356, label %357, label %360

357:                                              ; preds = %354
  %358 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load i8*, i8** %358, align 8
  call void @_ZdlPv(i8* %359) #12
  br label %360

360:                                              ; preds = %354, %357
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %318) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %317) #11
  br label %361

361:                                              ; preds = %360, %311
  %362 = phi i8 [ 0, %360 ], [ %312, %311 ]
  %363 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %364 = load i32, i32* %363, align 4
  %365 = icmp sgt i32 %364, -1
  br i1 %365, label %366, label %411

366:                                              ; preds = %361
  %367 = bitcast %"class.SkSL::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %367) #11
  %368 = bitcast %"class.SkSL::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %368) #11
  %369 = bitcast %"class.SkSL::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %369) #11
  %370 = icmp eq i8 %362, 0
  %371 = bitcast %"class.SkSL::String"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %372 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %371, i64 0, i32 1, i32 0
  br i1 %370, label %374, label %373

373:                                              ; preds = %366
  store i8 0, i8* %372, align 1, !alias.scope !30
  store i8 0, i8* %369, align 8, !alias.scope !30
  br label %377

374:                                              ; preds = %366
  store i8 2, i8* %372, align 1, !alias.scope !30
  %375 = bitcast %"class.SkSL::String"* %29 to i16*
  store i16 8236, i16* %375, align 8, !alias.scope !30
  %376 = getelementptr inbounds i8, i8* %369, i64 2
  store i8 0, i8* %376, align 2, !alias.scope !30
  br label %377

377:                                              ; preds = %373, %374
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %28, %"class.SkSL::String"* nonnull %29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #11
  %378 = bitcast %"class.SkSL::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %378) #11
  %379 = load i32, i32* %363, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %30, i32 %379) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %27, %"class.SkSL::String"* nonnull %28, %"class.SkSL::String"* nonnull dereferenceable(24) %30) #11
  %380 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %27) #11
  %381 = bitcast %"class.SkSL::String"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %382 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %381, i64 0, i32 1, i32 0
  %383 = load i8, i8* %382, align 1
  %384 = icmp slt i8 %383, 0
  br i1 %384, label %385, label %388

385:                                              ; preds = %377
  %386 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load i8*, i8** %386, align 8
  call void @_ZdlPv(i8* %387) #12
  br label %388

388:                                              ; preds = %377, %385
  %389 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %390 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %389, i64 0, i32 1, i32 0
  %391 = load i8, i8* %390, align 1
  %392 = icmp slt i8 %391, 0
  br i1 %392, label %393, label %396

393:                                              ; preds = %388
  %394 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load i8*, i8** %394, align 8
  call void @_ZdlPv(i8* %395) #12
  br label %396

396:                                              ; preds = %388, %393
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %378) #11
  %397 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %398 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %397, i64 0, i32 1, i32 0
  %399 = load i8, i8* %398, align 1
  %400 = icmp slt i8 %399, 0
  br i1 %400, label %401, label %404

401:                                              ; preds = %396
  %402 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load i8*, i8** %402, align 8
  call void @_ZdlPv(i8* %403) #12
  br label %404

404:                                              ; preds = %396, %401
  %405 = load i8, i8* %372, align 1
  %406 = icmp slt i8 %405, 0
  br i1 %406, label %407, label %410

407:                                              ; preds = %404
  %408 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load i8*, i8** %408, align 8
  call void @_ZdlPv(i8* %409) #12
  br label %410

410:                                              ; preds = %404, %407
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %369) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %368) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %367) #11
  br label %411

411:                                              ; preds = %410, %361
  %412 = phi i8 [ 0, %410 ], [ %362, %361 ]
  %413 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 0
  %414 = load i32, i32* %413, align 8
  %415 = and i32 %414, 1
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %444, label %417

417:                                              ; preds = %411
  %418 = bitcast %"class.SkSL::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %418) #11
  %419 = bitcast %"class.SkSL::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %419) #11
  %420 = icmp eq i8 %412, 0
  %421 = bitcast %"class.SkSL::String"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %422 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %421, i64 0, i32 1, i32 0
  br i1 %420, label %424, label %423

423:                                              ; preds = %417
  store i8 0, i8* %422, align 1, !alias.scope !33
  store i8 0, i8* %419, align 8, !alias.scope !33
  br label %427

424:                                              ; preds = %417
  store i8 2, i8* %422, align 1, !alias.scope !33
  %425 = bitcast %"class.SkSL::String"* %32 to i16*
  store i16 8236, i16* %425, align 8, !alias.scope !33
  %426 = getelementptr inbounds i8, i8* %419, i64 2
  store i8 0, i8* %426, align 2, !alias.scope !33
  br label %427

427:                                              ; preds = %423, %424
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %31, %"class.SkSL::String"* nonnull %32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0)) #11
  %428 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %31) #11
  %429 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %430 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %429, i64 0, i32 1, i32 0
  %431 = load i8, i8* %430, align 1
  %432 = icmp slt i8 %431, 0
  br i1 %432, label %433, label %436

433:                                              ; preds = %427
  %434 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load i8*, i8** %434, align 8
  call void @_ZdlPv(i8* %435) #12
  br label %436

436:                                              ; preds = %427, %433
  %437 = load i8, i8* %422, align 1
  %438 = icmp slt i8 %437, 0
  br i1 %438, label %439, label %442

439:                                              ; preds = %436
  %440 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = load i8*, i8** %440, align 8
  call void @_ZdlPv(i8* %441) #12
  br label %442

442:                                              ; preds = %436, %439
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %419) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %418) #11
  %443 = load i32, i32* %413, align 8
  br label %444

444:                                              ; preds = %411, %442
  %445 = phi i32 [ %414, %411 ], [ %443, %442 ]
  %446 = phi i8 [ %412, %411 ], [ 0, %442 ]
  %447 = and i32 %445, 4
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %476, label %449

449:                                              ; preds = %444
  %450 = bitcast %"class.SkSL::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %450) #11
  %451 = bitcast %"class.SkSL::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %451) #11
  %452 = icmp eq i8 %446, 0
  %453 = bitcast %"class.SkSL::String"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %454 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %453, i64 0, i32 1, i32 0
  br i1 %452, label %456, label %455

455:                                              ; preds = %449
  store i8 0, i8* %454, align 1, !alias.scope !36
  store i8 0, i8* %451, align 8, !alias.scope !36
  br label %459

456:                                              ; preds = %449
  store i8 2, i8* %454, align 1, !alias.scope !36
  %457 = bitcast %"class.SkSL::String"* %34 to i16*
  store i16 8236, i16* %457, align 8, !alias.scope !36
  %458 = getelementptr inbounds i8, i8* %451, i64 2
  store i8 0, i8* %458, align 2, !alias.scope !36
  br label %459

459:                                              ; preds = %455, %456
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %33, %"class.SkSL::String"* nonnull %34, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i64 0, i64 0)) #11
  %460 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %33) #11
  %461 = bitcast %"class.SkSL::String"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %462 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %461, i64 0, i32 1, i32 0
  %463 = load i8, i8* %462, align 1
  %464 = icmp slt i8 %463, 0
  br i1 %464, label %465, label %468

465:                                              ; preds = %459
  %466 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %467 = load i8*, i8** %466, align 8
  call void @_ZdlPv(i8* %467) #12
  br label %468

468:                                              ; preds = %459, %465
  %469 = load i8, i8* %454, align 1
  %470 = icmp slt i8 %469, 0
  br i1 %470, label %471, label %474

471:                                              ; preds = %468
  %472 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %473 = load i8*, i8** %472, align 8
  call void @_ZdlPv(i8* %473) #12
  br label %474

474:                                              ; preds = %468, %471
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %451) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #11
  %475 = load i32, i32* %413, align 8
  br label %476

476:                                              ; preds = %444, %474
  %477 = phi i32 [ %445, %444 ], [ %475, %474 ]
  %478 = phi i8 [ %446, %444 ], [ 0, %474 ]
  %479 = and i32 %477, 2
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %508, label %481

481:                                              ; preds = %476
  %482 = bitcast %"class.SkSL::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %482) #11
  %483 = bitcast %"class.SkSL::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %483) #11
  %484 = icmp eq i8 %478, 0
  %485 = bitcast %"class.SkSL::String"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %486 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %485, i64 0, i32 1, i32 0
  br i1 %484, label %488, label %487

487:                                              ; preds = %481
  store i8 0, i8* %486, align 1, !alias.scope !39
  store i8 0, i8* %483, align 8, !alias.scope !39
  br label %491

488:                                              ; preds = %481
  store i8 2, i8* %486, align 1, !alias.scope !39
  %489 = bitcast %"class.SkSL::String"* %36 to i16*
  store i16 8236, i16* %489, align 8, !alias.scope !39
  %490 = getelementptr inbounds i8, i8* %483, i64 2
  store i8 0, i8* %490, align 2, !alias.scope !39
  br label %491

491:                                              ; preds = %487, %488
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %35, %"class.SkSL::String"* nonnull %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #11
  %492 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %35) #11
  %493 = bitcast %"class.SkSL::String"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %494 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %493, i64 0, i32 1, i32 0
  %495 = load i8, i8* %494, align 1
  %496 = icmp slt i8 %495, 0
  br i1 %496, label %497, label %500

497:                                              ; preds = %491
  %498 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %499 = load i8*, i8** %498, align 8
  call void @_ZdlPv(i8* %499) #12
  br label %500

500:                                              ; preds = %491, %497
  %501 = load i8, i8* %486, align 1
  %502 = icmp slt i8 %501, 0
  br i1 %502, label %503, label %506

503:                                              ; preds = %500
  %504 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load i8*, i8** %504, align 8
  call void @_ZdlPv(i8* %505) #12
  br label %506

506:                                              ; preds = %500, %503
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %483) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %482) #11
  %507 = load i32, i32* %413, align 8
  br label %508

508:                                              ; preds = %476, %506
  %509 = phi i32 [ %477, %476 ], [ %507, %506 ]
  %510 = phi i8 [ %478, %476 ], [ 0, %506 ]
  %511 = and i32 %509, 8
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %539, label %513

513:                                              ; preds = %508
  %514 = bitcast %"class.SkSL::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %514) #11
  %515 = bitcast %"class.SkSL::String"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %515) #11
  %516 = icmp eq i8 %510, 0
  %517 = bitcast %"class.SkSL::String"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %518 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %517, i64 0, i32 1, i32 0
  br i1 %516, label %520, label %519

519:                                              ; preds = %513
  store i8 0, i8* %518, align 1, !alias.scope !42
  store i8 0, i8* %515, align 8, !alias.scope !42
  br label %523

520:                                              ; preds = %513
  store i8 2, i8* %518, align 1, !alias.scope !42
  %521 = bitcast %"class.SkSL::String"* %38 to i16*
  store i16 8236, i16* %521, align 8, !alias.scope !42
  %522 = getelementptr inbounds i8, i8* %515, i64 2
  store i8 0, i8* %522, align 2, !alias.scope !42
  br label %523

523:                                              ; preds = %519, %520
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %37, %"class.SkSL::String"* nonnull %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0)) #11
  %524 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %37) #11
  %525 = bitcast %"class.SkSL::String"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %526 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %525, i64 0, i32 1, i32 0
  %527 = load i8, i8* %526, align 1
  %528 = icmp slt i8 %527, 0
  br i1 %528, label %529, label %532

529:                                              ; preds = %523
  %530 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = load i8*, i8** %530, align 8
  call void @_ZdlPv(i8* %531) #12
  br label %532

532:                                              ; preds = %523, %529
  %533 = load i8, i8* %518, align 1
  %534 = icmp slt i8 %533, 0
  br i1 %534, label %535, label %538

535:                                              ; preds = %532
  %536 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load i8*, i8** %536, align 8
  call void @_ZdlPv(i8* %537) #12
  br label %538

538:                                              ; preds = %532, %535
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %515) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %514) #11
  br label %539

539:                                              ; preds = %508, %538
  %540 = phi i8 [ %510, %508 ], [ 0, %538 ]
  %541 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 8
  %542 = load i32, i32* %541, align 8
  switch i32 %542, label %721 [
    i32 0, label %543
    i32 1, label %568
    i32 2, label %593
    i32 3, label %618
    i32 4, label %643
    i32 5, label %668
    i32 6, label %693
  ]

543:                                              ; preds = %539
  %544 = bitcast %"class.SkSL::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %544) #11
  %545 = bitcast %"class.SkSL::String"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %545) #11
  %546 = icmp eq i8 %540, 0
  %547 = bitcast %"class.SkSL::String"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %548 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %547, i64 0, i32 1, i32 0
  br i1 %546, label %550, label %549

549:                                              ; preds = %543
  store i8 0, i8* %548, align 1, !alias.scope !45
  store i8 0, i8* %545, align 8, !alias.scope !45
  br label %553

550:                                              ; preds = %543
  store i8 2, i8* %548, align 1, !alias.scope !45
  %551 = bitcast %"class.SkSL::String"* %40 to i16*
  store i16 8236, i16* %551, align 8, !alias.scope !45
  %552 = getelementptr inbounds i8, i8* %545, i64 2
  store i8 0, i8* %552, align 2, !alias.scope !45
  br label %553

553:                                              ; preds = %549, %550
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %39, %"class.SkSL::String"* nonnull %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0)) #11
  %554 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %39) #11
  %555 = bitcast %"class.SkSL::String"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %556 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %555, i64 0, i32 1, i32 0
  %557 = load i8, i8* %556, align 1
  %558 = icmp slt i8 %557, 0
  br i1 %558, label %559, label %562

559:                                              ; preds = %553
  %560 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load i8*, i8** %560, align 8
  call void @_ZdlPv(i8* %561) #12
  br label %562

562:                                              ; preds = %553, %559
  %563 = load i8, i8* %548, align 1
  %564 = icmp slt i8 %563, 0
  br i1 %564, label %565, label %718

565:                                              ; preds = %562
  %566 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load i8*, i8** %566, align 8
  call void @_ZdlPv(i8* %567) #12
  br label %718

568:                                              ; preds = %539
  %569 = bitcast %"class.SkSL::String"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %569) #11
  %570 = bitcast %"class.SkSL::String"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %570) #11
  %571 = icmp eq i8 %540, 0
  %572 = bitcast %"class.SkSL::String"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %573 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %572, i64 0, i32 1, i32 0
  br i1 %571, label %575, label %574

574:                                              ; preds = %568
  store i8 0, i8* %573, align 1, !alias.scope !48
  store i8 0, i8* %570, align 8, !alias.scope !48
  br label %578

575:                                              ; preds = %568
  store i8 2, i8* %573, align 1, !alias.scope !48
  %576 = bitcast %"class.SkSL::String"* %42 to i16*
  store i16 8236, i16* %576, align 8, !alias.scope !48
  %577 = getelementptr inbounds i8, i8* %570, i64 2
  store i8 0, i8* %577, align 2, !alias.scope !48
  br label %578

578:                                              ; preds = %574, %575
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %41, %"class.SkSL::String"* nonnull %42, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0)) #11
  %579 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %41) #11
  %580 = bitcast %"class.SkSL::String"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %581 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %580, i64 0, i32 1, i32 0
  %582 = load i8, i8* %581, align 1
  %583 = icmp slt i8 %582, 0
  br i1 %583, label %584, label %587

584:                                              ; preds = %578
  %585 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %586 = load i8*, i8** %585, align 8
  call void @_ZdlPv(i8* %586) #12
  br label %587

587:                                              ; preds = %578, %584
  %588 = load i8, i8* %573, align 1
  %589 = icmp slt i8 %588, 0
  br i1 %589, label %590, label %718

590:                                              ; preds = %587
  %591 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %592 = load i8*, i8** %591, align 8
  call void @_ZdlPv(i8* %592) #12
  br label %718

593:                                              ; preds = %539
  %594 = bitcast %"class.SkSL::String"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %594) #11
  %595 = bitcast %"class.SkSL::String"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %595) #11
  %596 = icmp eq i8 %540, 0
  %597 = bitcast %"class.SkSL::String"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %598 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %597, i64 0, i32 1, i32 0
  br i1 %596, label %600, label %599

599:                                              ; preds = %593
  store i8 0, i8* %598, align 1, !alias.scope !51
  store i8 0, i8* %595, align 8, !alias.scope !51
  br label %603

600:                                              ; preds = %593
  store i8 2, i8* %598, align 1, !alias.scope !51
  %601 = bitcast %"class.SkSL::String"* %44 to i16*
  store i16 8236, i16* %601, align 8, !alias.scope !51
  %602 = getelementptr inbounds i8, i8* %595, i64 2
  store i8 0, i8* %602, align 2, !alias.scope !51
  br label %603

603:                                              ; preds = %599, %600
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %43, %"class.SkSL::String"* nonnull %44, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0)) #11
  %604 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %43) #11
  %605 = bitcast %"class.SkSL::String"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %606 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %605, i64 0, i32 1, i32 0
  %607 = load i8, i8* %606, align 1
  %608 = icmp slt i8 %607, 0
  br i1 %608, label %609, label %612

609:                                              ; preds = %603
  %610 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %611 = load i8*, i8** %610, align 8
  call void @_ZdlPv(i8* %611) #12
  br label %612

612:                                              ; preds = %603, %609
  %613 = load i8, i8* %598, align 1
  %614 = icmp slt i8 %613, 0
  br i1 %614, label %615, label %718

615:                                              ; preds = %612
  %616 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load i8*, i8** %616, align 8
  call void @_ZdlPv(i8* %617) #12
  br label %718

618:                                              ; preds = %539
  %619 = bitcast %"class.SkSL::String"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %619) #11
  %620 = bitcast %"class.SkSL::String"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %620) #11
  %621 = icmp eq i8 %540, 0
  %622 = bitcast %"class.SkSL::String"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %623 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %622, i64 0, i32 1, i32 0
  br i1 %621, label %625, label %624

624:                                              ; preds = %618
  store i8 0, i8* %623, align 1, !alias.scope !54
  store i8 0, i8* %620, align 8, !alias.scope !54
  br label %628

625:                                              ; preds = %618
  store i8 2, i8* %623, align 1, !alias.scope !54
  %626 = bitcast %"class.SkSL::String"* %46 to i16*
  store i16 8236, i16* %626, align 8, !alias.scope !54
  %627 = getelementptr inbounds i8, i8* %620, i64 2
  store i8 0, i8* %627, align 2, !alias.scope !54
  br label %628

628:                                              ; preds = %624, %625
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %45, %"class.SkSL::String"* nonnull %46, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i64 0, i64 0)) #11
  %629 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %45) #11
  %630 = bitcast %"class.SkSL::String"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %631 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %630, i64 0, i32 1, i32 0
  %632 = load i8, i8* %631, align 1
  %633 = icmp slt i8 %632, 0
  br i1 %633, label %634, label %637

634:                                              ; preds = %628
  %635 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load i8*, i8** %635, align 8
  call void @_ZdlPv(i8* %636) #12
  br label %637

637:                                              ; preds = %628, %634
  %638 = load i8, i8* %623, align 1
  %639 = icmp slt i8 %638, 0
  br i1 %639, label %640, label %718

640:                                              ; preds = %637
  %641 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %642 = load i8*, i8** %641, align 8
  call void @_ZdlPv(i8* %642) #12
  br label %718

643:                                              ; preds = %539
  %644 = bitcast %"class.SkSL::String"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %644) #11
  %645 = bitcast %"class.SkSL::String"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %645) #11
  %646 = icmp eq i8 %540, 0
  %647 = bitcast %"class.SkSL::String"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %648 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %647, i64 0, i32 1, i32 0
  br i1 %646, label %650, label %649

649:                                              ; preds = %643
  store i8 0, i8* %648, align 1, !alias.scope !57
  store i8 0, i8* %645, align 8, !alias.scope !57
  br label %653

650:                                              ; preds = %643
  store i8 2, i8* %648, align 1, !alias.scope !57
  %651 = bitcast %"class.SkSL::String"* %48 to i16*
  store i16 8236, i16* %651, align 8, !alias.scope !57
  %652 = getelementptr inbounds i8, i8* %645, i64 2
  store i8 0, i8* %652, align 2, !alias.scope !57
  br label %653

653:                                              ; preds = %649, %650
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %47, %"class.SkSL::String"* nonnull %48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0)) #11
  %654 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %47) #11
  %655 = bitcast %"class.SkSL::String"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %656 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %655, i64 0, i32 1, i32 0
  %657 = load i8, i8* %656, align 1
  %658 = icmp slt i8 %657, 0
  br i1 %658, label %659, label %662

659:                                              ; preds = %653
  %660 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load i8*, i8** %660, align 8
  call void @_ZdlPv(i8* %661) #12
  br label %662

662:                                              ; preds = %653, %659
  %663 = load i8, i8* %648, align 1
  %664 = icmp slt i8 %663, 0
  br i1 %664, label %665, label %718

665:                                              ; preds = %662
  %666 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = load i8*, i8** %666, align 8
  call void @_ZdlPv(i8* %667) #12
  br label %718

668:                                              ; preds = %539
  %669 = bitcast %"class.SkSL::String"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %669) #11
  %670 = bitcast %"class.SkSL::String"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %670) #11
  %671 = icmp eq i8 %540, 0
  %672 = bitcast %"class.SkSL::String"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %673 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %672, i64 0, i32 1, i32 0
  br i1 %671, label %675, label %674

674:                                              ; preds = %668
  store i8 0, i8* %673, align 1, !alias.scope !60
  store i8 0, i8* %670, align 8, !alias.scope !60
  br label %678

675:                                              ; preds = %668
  store i8 2, i8* %673, align 1, !alias.scope !60
  %676 = bitcast %"class.SkSL::String"* %50 to i16*
  store i16 8236, i16* %676, align 8, !alias.scope !60
  %677 = getelementptr inbounds i8, i8* %670, i64 2
  store i8 0, i8* %677, align 2, !alias.scope !60
  br label %678

678:                                              ; preds = %674, %675
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %49, %"class.SkSL::String"* nonnull %50, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i64 0, i64 0)) #11
  %679 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %49) #11
  %680 = bitcast %"class.SkSL::String"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %681 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %680, i64 0, i32 1, i32 0
  %682 = load i8, i8* %681, align 1
  %683 = icmp slt i8 %682, 0
  br i1 %683, label %684, label %687

684:                                              ; preds = %678
  %685 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %686 = load i8*, i8** %685, align 8
  call void @_ZdlPv(i8* %686) #12
  br label %687

687:                                              ; preds = %678, %684
  %688 = load i8, i8* %673, align 1
  %689 = icmp slt i8 %688, 0
  br i1 %689, label %690, label %718

690:                                              ; preds = %687
  %691 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i8*, i8** %691, align 8
  call void @_ZdlPv(i8* %692) #12
  br label %718

693:                                              ; preds = %539
  %694 = bitcast %"class.SkSL::String"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %694) #11
  %695 = bitcast %"class.SkSL::String"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %695) #11
  %696 = icmp eq i8 %540, 0
  %697 = bitcast %"class.SkSL::String"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %698 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %697, i64 0, i32 1, i32 0
  br i1 %696, label %700, label %699

699:                                              ; preds = %693
  store i8 0, i8* %698, align 1, !alias.scope !63
  store i8 0, i8* %695, align 8, !alias.scope !63
  br label %703

700:                                              ; preds = %693
  store i8 2, i8* %698, align 1, !alias.scope !63
  %701 = bitcast %"class.SkSL::String"* %52 to i16*
  store i16 8236, i16* %701, align 8, !alias.scope !63
  %702 = getelementptr inbounds i8, i8* %695, i64 2
  store i8 0, i8* %702, align 2, !alias.scope !63
  br label %703

703:                                              ; preds = %699, %700
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %51, %"class.SkSL::String"* nonnull %52, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35, i64 0, i64 0)) #11
  %704 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %51) #11
  %705 = bitcast %"class.SkSL::String"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %706 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %705, i64 0, i32 1, i32 0
  %707 = load i8, i8* %706, align 1
  %708 = icmp slt i8 %707, 0
  br i1 %708, label %709, label %712

709:                                              ; preds = %703
  %710 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %711 = load i8*, i8** %710, align 8
  call void @_ZdlPv(i8* %711) #12
  br label %712

712:                                              ; preds = %703, %709
  %713 = load i8, i8* %698, align 1
  %714 = icmp slt i8 %713, 0
  br i1 %714, label %715, label %718

715:                                              ; preds = %712
  %716 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %717 = load i8*, i8** %716, align 8
  call void @_ZdlPv(i8* %717) #12
  br label %718

718:                                              ; preds = %715, %712, %690, %687, %665, %662, %640, %637, %615, %612, %590, %587, %565, %562
  %719 = phi i8* [ %545, %562 ], [ %545, %565 ], [ %570, %587 ], [ %570, %590 ], [ %595, %612 ], [ %595, %615 ], [ %620, %637 ], [ %620, %640 ], [ %645, %662 ], [ %645, %665 ], [ %670, %687 ], [ %670, %690 ], [ %695, %712 ], [ %695, %715 ]
  %720 = phi i8* [ %544, %562 ], [ %544, %565 ], [ %569, %587 ], [ %569, %590 ], [ %594, %612 ], [ %594, %615 ], [ %619, %637 ], [ %619, %640 ], [ %644, %662 ], [ %644, %665 ], [ %669, %687 ], [ %669, %690 ], [ %694, %712 ], [ %694, %715 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %719) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %720) #11
  br label %721

721:                                              ; preds = %718, %539
  %722 = phi i8 [ %540, %539 ], [ 0, %718 ]
  %723 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 9
  %724 = load i32, i32* %723, align 4
  %725 = icmp sgt i32 %724, -1
  br i1 %725, label %726, label %771

726:                                              ; preds = %721
  %727 = bitcast %"class.SkSL::String"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %727) #11
  %728 = bitcast %"class.SkSL::String"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %728) #11
  %729 = bitcast %"class.SkSL::String"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %729) #11
  %730 = icmp eq i8 %722, 0
  %731 = bitcast %"class.SkSL::String"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %732 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %731, i64 0, i32 1, i32 0
  br i1 %730, label %734, label %733

733:                                              ; preds = %726
  store i8 0, i8* %732, align 1, !alias.scope !66
  store i8 0, i8* %729, align 8, !alias.scope !66
  br label %737

734:                                              ; preds = %726
  store i8 2, i8* %732, align 1, !alias.scope !66
  %735 = bitcast %"class.SkSL::String"* %55 to i16*
  store i16 8236, i16* %735, align 8, !alias.scope !66
  %736 = getelementptr inbounds i8, i8* %729, i64 2
  store i8 0, i8* %736, align 2, !alias.scope !66
  br label %737

737:                                              ; preds = %733, %734
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %54, %"class.SkSL::String"* nonnull %55, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i64 0, i64 0)) #11
  %738 = bitcast %"class.SkSL::String"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %738) #11
  %739 = load i32, i32* %723, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %56, i32 %739) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %53, %"class.SkSL::String"* nonnull %54, %"class.SkSL::String"* nonnull dereferenceable(24) %56) #11
  %740 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %53) #11
  %741 = bitcast %"class.SkSL::String"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %742 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %741, i64 0, i32 1, i32 0
  %743 = load i8, i8* %742, align 1
  %744 = icmp slt i8 %743, 0
  br i1 %744, label %745, label %748

745:                                              ; preds = %737
  %746 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %747 = load i8*, i8** %746, align 8
  call void @_ZdlPv(i8* %747) #12
  br label %748

748:                                              ; preds = %737, %745
  %749 = bitcast %"class.SkSL::String"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %750 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %749, i64 0, i32 1, i32 0
  %751 = load i8, i8* %750, align 1
  %752 = icmp slt i8 %751, 0
  br i1 %752, label %753, label %756

753:                                              ; preds = %748
  %754 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load i8*, i8** %754, align 8
  call void @_ZdlPv(i8* %755) #12
  br label %756

756:                                              ; preds = %748, %753
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %738) #11
  %757 = bitcast %"class.SkSL::String"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %758 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %757, i64 0, i32 1, i32 0
  %759 = load i8, i8* %758, align 1
  %760 = icmp slt i8 %759, 0
  br i1 %760, label %761, label %764

761:                                              ; preds = %756
  %762 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %763 = load i8*, i8** %762, align 8
  call void @_ZdlPv(i8* %763) #12
  br label %764

764:                                              ; preds = %756, %761
  %765 = load i8, i8* %732, align 1
  %766 = icmp slt i8 %765, 0
  br i1 %766, label %767, label %770

767:                                              ; preds = %764
  %768 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %769 = load i8*, i8** %768, align 8
  call void @_ZdlPv(i8* %769) #12
  br label %770

770:                                              ; preds = %764, %767
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %729) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %728) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %727) #11
  br label %771

771:                                              ; preds = %770, %721
  %772 = phi i8 [ 0, %770 ], [ %722, %721 ]
  %773 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 10
  %774 = load i32, i32* %773, align 8
  %775 = icmp sgt i32 %774, -1
  br i1 %775, label %776, label %821

776:                                              ; preds = %771
  %777 = bitcast %"class.SkSL::String"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %777) #11
  %778 = bitcast %"class.SkSL::String"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %778) #11
  %779 = bitcast %"class.SkSL::String"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %779) #11
  %780 = icmp eq i8 %772, 0
  %781 = bitcast %"class.SkSL::String"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %782 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %781, i64 0, i32 1, i32 0
  br i1 %780, label %784, label %783

783:                                              ; preds = %776
  store i8 0, i8* %782, align 1, !alias.scope !69
  store i8 0, i8* %779, align 8, !alias.scope !69
  br label %787

784:                                              ; preds = %776
  store i8 2, i8* %782, align 1, !alias.scope !69
  %785 = bitcast %"class.SkSL::String"* %59 to i16*
  store i16 8236, i16* %785, align 8, !alias.scope !69
  %786 = getelementptr inbounds i8, i8* %779, i64 2
  store i8 0, i8* %786, align 2, !alias.scope !69
  br label %787

787:                                              ; preds = %783, %784
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %58, %"class.SkSL::String"* nonnull %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0)) #11
  %788 = bitcast %"class.SkSL::String"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %788) #11
  %789 = load i32, i32* %773, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %60, i32 %789) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %57, %"class.SkSL::String"* nonnull %58, %"class.SkSL::String"* nonnull dereferenceable(24) %60) #11
  %790 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %57) #11
  %791 = bitcast %"class.SkSL::String"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %792 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %791, i64 0, i32 1, i32 0
  %793 = load i8, i8* %792, align 1
  %794 = icmp slt i8 %793, 0
  br i1 %794, label %795, label %798

795:                                              ; preds = %787
  %796 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %797 = load i8*, i8** %796, align 8
  call void @_ZdlPv(i8* %797) #12
  br label %798

798:                                              ; preds = %787, %795
  %799 = bitcast %"class.SkSL::String"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %800 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %799, i64 0, i32 1, i32 0
  %801 = load i8, i8* %800, align 1
  %802 = icmp slt i8 %801, 0
  br i1 %802, label %803, label %806

803:                                              ; preds = %798
  %804 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %805 = load i8*, i8** %804, align 8
  call void @_ZdlPv(i8* %805) #12
  br label %806

806:                                              ; preds = %798, %803
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %788) #11
  %807 = bitcast %"class.SkSL::String"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %808 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %807, i64 0, i32 1, i32 0
  %809 = load i8, i8* %808, align 1
  %810 = icmp slt i8 %809, 0
  br i1 %810, label %811, label %814

811:                                              ; preds = %806
  %812 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %813 = load i8*, i8** %812, align 8
  call void @_ZdlPv(i8* %813) #12
  br label %814

814:                                              ; preds = %806, %811
  %815 = load i8, i8* %782, align 1
  %816 = icmp slt i8 %815, 0
  br i1 %816, label %817, label %820

817:                                              ; preds = %814
  %818 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %819 = load i8*, i8** %818, align 8
  call void @_ZdlPv(i8* %819) #12
  br label %820

820:                                              ; preds = %814, %817
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %779) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %778) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %777) #11
  br label %821

821:                                              ; preds = %820, %771
  %822 = phi i8 [ 0, %820 ], [ %772, %771 ]
  %823 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 1
  %824 = load i64, i64* %823, align 8
  %825 = icmp eq i64 %824, 0
  br i1 %825, label %864, label %826

826:                                              ; preds = %821
  %827 = bitcast %"class.SkSL::String"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %827) #11
  %828 = bitcast %"class.SkSL::String"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %828) #11
  %829 = bitcast %"class.SkSL::String"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %829) #11
  %830 = icmp eq i8 %822, 0
  %831 = bitcast %"class.SkSL::String"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %832 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %831, i64 0, i32 1, i32 0
  br i1 %830, label %834, label %833

833:                                              ; preds = %826
  store i8 0, i8* %832, align 1, !alias.scope !72
  store i8 0, i8* %829, align 8, !alias.scope !72
  br label %837

834:                                              ; preds = %826
  store i8 2, i8* %832, align 1, !alias.scope !72
  %835 = bitcast %"class.SkSL::String"* %63 to i16*
  store i16 8236, i16* %835, align 8, !alias.scope !72
  %836 = getelementptr inbounds i8, i8* %829, i64 2
  store i8 0, i8* %836, align 2, !alias.scope !72
  br label %837

837:                                              ; preds = %833, %834
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %62, %"class.SkSL::String"* nonnull %63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0)) #11
  %838 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 0
  %839 = load i8*, i8** %838, align 8
  %840 = load i64, i64* %823, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %61, %"class.SkSL::String"* nonnull %62, i8* %839, i64 %840) #11
  %841 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %61) #11
  %842 = bitcast %"class.SkSL::String"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %843 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %842, i64 0, i32 1, i32 0
  %844 = load i8, i8* %843, align 1
  %845 = icmp slt i8 %844, 0
  br i1 %845, label %846, label %849

846:                                              ; preds = %837
  %847 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %848 = load i8*, i8** %847, align 8
  call void @_ZdlPv(i8* %848) #12
  br label %849

849:                                              ; preds = %837, %846
  %850 = bitcast %"class.SkSL::String"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %851 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %850, i64 0, i32 1, i32 0
  %852 = load i8, i8* %851, align 1
  %853 = icmp slt i8 %852, 0
  br i1 %853, label %854, label %857

854:                                              ; preds = %849
  %855 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %856 = load i8*, i8** %855, align 8
  call void @_ZdlPv(i8* %856) #12
  br label %857

857:                                              ; preds = %849, %854
  %858 = load i8, i8* %832, align 1
  %859 = icmp slt i8 %858, 0
  br i1 %859, label %860, label %863

860:                                              ; preds = %857
  %861 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %862 = load i8*, i8** %861, align 8
  call void @_ZdlPv(i8* %862) #12
  br label %863

863:                                              ; preds = %857, %860
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %829) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %828) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %827) #11
  br label %864

864:                                              ; preds = %821, %863
  %865 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %866 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %865, i64 0, i32 1, i32 0
  %867 = load i8, i8* %866, align 1
  %868 = icmp slt i8 %867, 0
  %869 = load i64, i64* %67, align 8
  %870 = zext i8 %867 to i64
  %871 = select i1 %868, i64 %869, i64 %870
  %872 = icmp eq i64 %871, 0
  br i1 %872, label %891, label %873

873:                                              ; preds = %864
  %874 = bitcast %"class.SkSL::String"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %874) #11
  %875 = bitcast %"class.SkSL::String"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %875) #11
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %0) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %64, %"class.SkSL::String"* nonnull %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i64 0, i64 0)) #11
  %876 = load i8, i8* %866, align 1
  %877 = icmp slt i8 %876, 0
  br i1 %877, label %878, label %880

878:                                              ; preds = %873
  %879 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %879) #12
  br label %880

880:                                              ; preds = %873, %878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %874, i64 24, i1 false) #11
  %881 = bitcast %"class.SkSL::String"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %882 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %881, i64 0, i32 1, i32 0
  store i8 0, i8* %882, align 1
  store i8 0, i8* %874, align 8
  %883 = bitcast %"class.SkSL::String"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %884 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %883, i64 0, i32 1, i32 0
  %885 = load i8, i8* %884, align 1
  %886 = icmp slt i8 %885, 0
  br i1 %886, label %887, label %890

887:                                              ; preds = %880
  %888 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %889 = load i8*, i8** %888, align 8
  call void @_ZdlPv(i8* %889) #12
  br label %890

890:                                              ; preds = %880, %887
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %875) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %874) #11
  br label %891

891:                                              ; preds = %864, %890
  %892 = load i32, i32* %413, align 8
  %893 = and i32 %892, 16
  %894 = icmp eq i32 %893, 0
  br i1 %894, label %897, label %895

895:                                              ; preds = %891
  %896 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41, i64 0, i64 0)) #11
  br label %897

897:                                              ; preds = %891, %895
  ret void
}

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* sret, i32) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.71"*, %"class.std::__1::unique_ptr.73"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.73"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.71"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.71"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.73"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.73"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.73"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.73"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.73"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.73"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.73"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.73"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.73"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::ProgramElement"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.73"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.73"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.73"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.73"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !75

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.73"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.73"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.73"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.73"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.73"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.73"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.73"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.73"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.73"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.73"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.73"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.73"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.73"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.73"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.73"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.73"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.73"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.73"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.73"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.73"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.73"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.73"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.73"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.73"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.73"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.73"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.73"*
  %138 = icmp eq %"class.std::__1::unique_ptr.73"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.73"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %142, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %142, align 8
  %144 = icmp eq %"class.SkSL::ProgramElement"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::ProgramElement"* %143 to void (%"class.SkSL::ProgramElement"*)***
  %147 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %147, i64 1
  %149 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %148, align 8
  tail call void %149(%"class.SkSL::ProgramElement"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.73"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4SkSL4Type11displayNameEv"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4SkSL4Type11displayNameEv"}
!10 = distinct !{!10, !11, !"_ZNK4SkSL4Type11descriptionEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4SkSL4Type11descriptionEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!14 = distinct !{!14, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!17 = distinct !{!17, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!20 = distinct !{!20, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!23 = distinct !{!23, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!26 = distinct !{!26, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!29 = distinct !{!29, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!32 = distinct !{!32, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!35 = distinct !{!35, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!38 = distinct !{!38, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!41 = distinct !{!41, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!44 = distinct !{!44, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!47 = distinct !{!47, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!50 = distinct !{!50, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!53 = distinct !{!53, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!56 = distinct !{!56, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!59 = distinct !{!59, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!62 = distinct !{!62, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!65 = distinct !{!65, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!68 = distinct !{!68, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!71 = distinct !{!71, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!74 = distinct !{!74, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!75 = distinct !{!75, !6}
