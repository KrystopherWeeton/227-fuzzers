; ModuleID = '../../third_party/blink/renderer/core/workers/worker_or_worklet_global_scope.cc'
source_filename = "../../third_party/blink/renderer/core/workers/worker_or_worklet_global_scope.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.144" }
%"struct.std::__1::atomic.144" = type { %"struct.std::__1::__atomic_base.145" }
%"struct.std::__1::__atomic_base.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__cxx_atomic_impl.147" }
%"struct.std::__1::__cxx_atomic_impl.147" = type { %"struct.std::__1::__cxx_atomic_base_impl.148" }
%"struct.std::__1::__cxx_atomic_base_impl.148" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.281", i32, [4 x i8], %"class.std::__1::unique_ptr.419", %"class.std::__1::unique_ptr.419", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.436", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.448", %"class.std::__1::unique_ptr.454", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.461", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.296", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.325", %"class.std::__1::unique_ptr.332", %"class.std::__1::unique_ptr.332", %"class.std::__1::unique_ptr.339", %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.353", %"class.std::__1::unique_ptr.353", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.374", %"class.std::__1::unique_ptr.399", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.317" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.317" = type { %"struct.std::__1::__atomic_base.318" }
%"struct.std::__1::__atomic_base.318" = type { %"struct.std::__1::__atomic_base.319" }
%"struct.std::__1::__atomic_base.319" = type { %"struct.std::__1::__cxx_atomic_impl.320" }
%"struct.std::__1::__cxx_atomic_impl.320" = type { %"struct.std::__1::__cxx_atomic_base_impl.321" }
%"struct.std::__1::__cxx_atomic_base_impl.321" = type { i64 }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::Worklist.328"* }
%"class.blink::Worklist.328" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.317" }
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::Worklist.335"* }
%"class.blink::Worklist.335" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.317" }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::Worklist.342"* }
%"class.blink::Worklist.342" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.317" }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::Worklist.349"* }
%"class.blink::Worklist.349" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.317" }
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.blink::Worklist.356"* }
%"class.blink::Worklist.356" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.317" }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::Worklist.363"* }
%"class.blink::Worklist.363" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.317" }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::Worklist.370"* }
%"class.blink::Worklist.370" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.317" }
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.377", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379", %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { float }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.402", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.411" }
%"class.WTF::Vector.411" = type { %"class.WTF::VectorBuffer.412" }
%"class.WTF::VectorBuffer.412" = type { %"class.WTF::VectorBufferBase.413" }
%"class.WTF::VectorBufferBase.413" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.427" }
%"class.WTF::VectorBuffer.427" = type { %"class.WTF::VectorBufferBase.428" }
%"class.WTF::VectorBufferBase.428" = type { %"struct.std::__1::pair.429"*, i32, i32 }
%"struct.std::__1::pair.429" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.442" }
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.328"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.335"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.342"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.349"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.356"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.902", i64 }
%"class.std::__1::vector.902" = type { %"class.std::__1::__vector_base.903" }
%"class.std::__1::__vector_base.903" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.904" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.448" = type { %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.460 }
%class.scoped_refptr.460 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.461" = type { %"struct.std::__1::__atomic_base.462" }
%"struct.std::__1::__atomic_base.462" = type { %"struct.std::__1::__cxx_atomic_impl.463" }
%"struct.std::__1::__cxx_atomic_impl.463" = type { %"struct.std::__1::__cxx_atomic_base_impl.464" }
%"struct.std::__1::__cxx_atomic_base_impl.464" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.512", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.512" = type { %"class.base::RefCounted.513" }
%"class.base::RefCounted.513" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.514" }
%"class.blink::PersistentBase.514" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.517" }
%"class.blink::HeapHashMap.517" = type { %"class.WTF::HashMap.520" }
%"class.WTF::HashMap.520" = type { %"class.WTF::HashTable.521" }
%"class.WTF::HashTable.521" = type <{ %"struct.WTF::KeyValuePair.523"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.523" = type { %"class.blink::WeakMember.524", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.465", %"class.blink::Member.471", %"class.blink::HeapHashSet.473", %class.scoped_refptr.480, %"class.blink::Member.482", %"class.blink::Member.501", i32, %"class.WTF::Vector.96", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.584" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.65", i32, i8, [3 x i8], %"class.blink::HeapVector.70", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.79", %"class.blink::Member.81", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.90", %"class.blink::Member.231", %"class.blink::Member.255", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.15" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.13" }
%"class.WTF::HashTable.13" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.15" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.16" }
%"class.blink::HeapHashMap.16" = type { %"class.WTF::HashMap.19" }
%"class.WTF::HashMap.19" = type { %"class.WTF::HashTable.20" }
%"class.WTF::HashTable.20" = type <{ %"struct.WTF::KeyValuePair.22"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.22" = type { i8*, %"class.blink::Member.2439" }
%"class.blink::Member.2439" = type { %"class.blink::MemberBase.2440" }
%"class.blink::MemberBase.2440" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2441" }
%"class.blink::Member.2441" = type { %"class.blink::MemberBase.2442" }
%"class.blink::MemberBase.2442" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.23, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"class.blink::Member.59", i32, [4 x i8], %"class.WTF::HashSet.61", i32, i32 }
%class.scoped_refptr.23 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.24 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.24 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.40", %"class.std::__1::map.49"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.30 }
%union.anon.30 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::map.49" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.65", i32, i8, [3 x i8], %"class.blink::HeapVector.70", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.79", %"class.blink::Member.81", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.90", %"class.blink::Member.231", %"class.blink::Member.255", i8, [7 x i8] }>
%"class.WTF::HashSet.61" = type { %"class.WTF::HashTable.62" }
%"class.WTF::HashTable.62" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type <{ i32 (...)**, %class.scoped_refptr.69, %"class.base::UnguessableToken", i8, [7 x i8] }>
%class.scoped_refptr.69 = type { %"class.blink::scheduler::EventLoop"* }
%"class.blink::scheduler::EventLoop" = type opaque
%"class.blink::HeapVector.70" = type { %"class.WTF::Vector.73" }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75" }
%"class.WTF::VectorBufferBase.75" = type { %"class.blink::Member.76"*, i32, i32 }
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.83", i32, i32 }
%"class.blink::HeapHashMap.83" = type { %"class.WTF::HashMap.86" }
%"class.WTF::HashMap.86" = type { %"class.WTF::HashTable.87" }
%"class.WTF::HashTable.87" = type <{ %"struct.WTF::KeyValuePair.89"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.89" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.93" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.96" }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.222" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.140", i32 }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.149", %"class.absl::optional.154", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.175", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.197", %"class.std::__1::map.208", i64, %"class.base::OnceCallback.168", %"class.base::OnceCallback.217", i8, %class.scoped_refptr.159, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.218" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.143 }
%class.scoped_refptr.143 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.144" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.149" = type { %"class.absl::optional_internal::optional_data.150" }
%"class.absl::optional_internal::optional_data.150" = type { %"class.absl::optional_internal::optional_data_base.151" }
%"class.absl::optional_internal::optional_data_base.151" = type { %"class.absl::optional_internal::optional_data_dtor_base.152" }
%"class.absl::optional_internal::optional_data_dtor_base.152" = type { i8, %union.anon.153 }
%union.anon.153 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.154" = type { %"class.absl::optional_internal::optional_data.155" }
%"class.absl::optional_internal::optional_data.155" = type { %"class.absl::optional_internal::optional_data_base.156" }
%"class.absl::optional_internal::optional_data_base.156" = type { %"class.absl::optional_internal::optional_data_dtor_base.157" }
%"class.absl::optional_internal::optional_data_dtor_base.157" = type { i8, %union.anon.158 }
%union.anon.158 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.168" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.159, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.161 }
%class.scoped_refptr.161 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.162", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.162" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.163" }
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__atomic_base.165" }
%"struct.std::__1::__atomic_base.165" = type { %"struct.std::__1::__cxx_atomic_impl.166" }
%"struct.std::__1::__cxx_atomic_impl.166" = type { %"struct.std::__1::__cxx_atomic_base_impl.167" }
%"struct.std::__1::__cxx_atomic_base_impl.167" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.173 }
%class.scoped_refptr.173 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.909", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.159, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.909" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.174 }
%class.scoped_refptr.174 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.178", %class.scoped_refptr.179 }
%"class.base::RepeatingCallback.178" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.179 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.180", [4 x i8] }>
%"class.base::RefCountedThreadSafe.180" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.190", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.196" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.196" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.197" = type { %"class.std::__1::__tree.198" }
%"class.std::__1::__tree.198" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::map.208" = type { %"class.std::__1::__tree.209" }
%"class.std::__1::__tree.209" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.210", %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.base::OnceCallback.168" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.217" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.159 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.160" }>
%"class.base::RefCountedThreadSafe.160" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.168" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.218" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.231" = type { %"class.blink::MemberBase.232" }
%"class.blink::MemberBase.232" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type { %"class.WTF::HashSet.235", %"class.WTF::HashSet.235", %"class.WTF::HashSet.235", %"class.WTF::HashMap.239", %"class.std::__1::unique_ptr.244", %"class.blink::Member.59", %"class.WTF::HashMap.250" }
%"class.WTF::HashSet.235" = type { %"class.WTF::HashTable.236" }
%"class.WTF::HashTable.236" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.239" = type { %"class.WTF::HashTable.240" }
%"class.WTF::HashTable.240" = type <{ %"struct.WTF::KeyValuePair.243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.243" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::TrialTokenValidator"* }
%"class.blink::TrialTokenValidator" = type { i32 (...)** }
%"class.WTF::HashMap.250" = type { %"class.WTF::HashTable.251" }
%"class.WTF::HashTable.251" = type <{ %"struct.WTF::KeyValuePair.254"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.254" = type { %"class.WTF::String", %"struct.blink::OriginTrialResult" }
%"struct.blink::OriginTrialResult" = type { %"class.WTF::String", i32, %"class.WTF::Vector.2472" }
%"class.WTF::Vector.2472" = type { %"class.WTF::VectorBuffer.2473" }
%"class.WTF::VectorBuffer.2473" = type { %"class.WTF::VectorBufferBase.2474" }
%"class.WTF::VectorBufferBase.2474" = type { %"struct.blink::OriginTrialTokenResult"*, i32, i32 }
%"struct.blink::OriginTrialTokenResult" = type { %"class.WTF::String", i32, %"class.absl::optional.2475" }
%"class.absl::optional.2475" = type { %"class.absl::optional_internal::optional_data.2476" }
%"class.absl::optional_internal::optional_data.2476" = type { %"class.absl::optional_internal::optional_data_base.2477" }
%"class.absl::optional_internal::optional_data_base.2477" = type { %"class.absl::optional_internal::optional_data_dtor_base.2478" }
%"class.absl::optional_internal::optional_data_dtor_base.2478" = type { i8, %union.anon.2479 }
%union.anon.2479 = type { %"class.blink::TrialToken" }
%"class.blink::TrialToken" = type { %"class.url::Origin", i8, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", i8, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.765" }
%"class.base::time_internal::TimeBase.765" = type { i64 }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.81", i8, [7 x i8], %"class.WTF::Vector.96", %"class.blink::HeapVector.259", i8, [7 x i8], %"class.WTF::HashSet.61", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.259" = type { %"class.WTF::Vector.262" }
%"class.WTF::Vector.262" = type { %"class.WTF::VectorBuffer.263" }
%"class.WTF::VectorBuffer.263" = type { %"class.WTF::VectorBufferBase.264" }
%"class.WTF::VectorBufferBase.264" = type { %"class.blink::Member.265"*, i32, i32 }
%"class.blink::Member.265" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.269" }
%"class.blink::Supplementable.269" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.270" }
%"class.blink::HeapHashMap.270" = type { %"class.WTF::HashMap.273" }
%"class.WTF::HashMap.273" = type { %"class.WTF::HashTable.274" }
%"class.WTF::HashTable.274" = type <{ %"struct.WTF::KeyValuePair.276"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.276" = type { i8*, %"class.blink::Member.2458" }
%"class.blink::Member.2458" = type { %"class.blink::MemberBase.2459" }
%"class.blink::MemberBase.2459" = type { %"class.blink::Supplement.2460"* }
%"class.blink::Supplement.2460" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2461" }
%"class.blink::Member.2461" = type { %"class.blink::MemberBase.2462" }
%"class.blink::MemberBase.2462" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.277" }
%"struct.std::__1::atomic.277" = type { %"struct.std::__1::__atomic_base.278" }
%"struct.std::__1::__atomic_base.278" = type { %"struct.std::__1::__cxx_atomic_impl.279" }
%"struct.std::__1::__cxx_atomic_impl.279" = type { %"struct.std::__1::__cxx_atomic_base_impl.280" }
%"struct.std::__1::__cxx_atomic_base_impl.280" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.590", %"class.blink::Member.600", %"class.blink::Member.604", %class.scoped_refptr.608, %class.scoped_refptr.608, %"class.blink::Member.609", %"class.blink::Member.615", %"class.blink::Member.621", %"class.blink::Member.625", %"class.blink::Member.677", %"class.blink::HeapHashMap.679", %"class.blink::HeapHashSet.686", %"class.blink::HeapHashSet.686", %"class.blink::HeapHashMap.850", %"class.blink::HeapVector.857", %"class.blink::Member.865", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.868", %"class.WTF::Vector.875", %"class.blink::HeapHashSet.881", %"class.blink::HeapHashSet.881", %"class.std::__1::unique_ptr.887", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.899", i8, i8, %"class.base::WeakPtrFactory.901" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type <{ %"class.blink::ResourceFetcherProperties", %"class.blink::Member.594", %"class.blink::Member.596", i8, i8, i8, i8, i8, [3 x i8], %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::ResourceFetcherProperties" = type { i32 (...)** }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::ResourceFetcherProperties"* }
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::FetchClientSettingsObject"* }
%"class.blink::FetchClientSettingsObject" = type { i32 (...)** }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.494" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.blink::KURL"* }
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type { i32 (...)** }
%class.scoped_refptr.608 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type { %"class.blink::UseCounter", %"class.blink::Member.613" }
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::UseCounter"* }
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.619" }
%"class.blink::Member.619" = type { %"class.blink::MemberBase.620" }
%"class.blink::MemberBase.620" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.629", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.631", %"class.WTF::HashSet.636", i8, [3 x i8], i32, %"class.blink::HeapHashMap.640", %"class.std::__1::map.647", %"class.std::__1::map.658", %"class.std::__1::unique_ptr.667", %"class.blink::Member.615", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.674", %"class.mojo::InlinedStructPtr.676", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.631" = type { %"class.WTF::HashTable.632" }
%"class.WTF::HashTable.632" = type <{ %"struct.WTF::KeyValuePair.635"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.635" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.636" = type { %"class.WTF::HashTable.637" }
%"class.WTF::HashTable.637" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.640" = type { %"class.WTF::HashMap.643" }
%"class.WTF::HashMap.643" = type { %"class.WTF::HashTable.644" }
%"class.WTF::HashTable.644" = type <{ %"struct.WTF::KeyValuePair.646"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.646" = type opaque
%"class.std::__1::map.647" = type { %"class.std::__1::__tree.648" }
%"class.std::__1::__tree.648" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.649", %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::map.658" = type { %"class.std::__1::__tree.659" }
%"class.std::__1::__tree.659" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.660", %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.676" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.679" = type { %"class.WTF::HashMap.682" }
%"class.WTF::HashMap.682" = type { %"class.WTF::HashTable.683" }
%"class.WTF::HashTable.683" = type <{ %"struct.WTF::KeyValuePair.685"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.685" = type opaque
%"class.blink::HeapHashSet.686" = type { %"class.WTF::HashSet.689" }
%"class.WTF::HashSet.689" = type { %"class.WTF::HashTable.690" }
%"class.WTF::HashTable.690" = type <{ %"class.blink::WeakMember.692"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.696", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.716", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.806", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.825", %"class.blink::ResourceResponse", %class.scoped_refptr.827, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.696" = type { %"class.absl::optional_internal::optional_data.697" }
%"class.absl::optional_internal::optional_data.697" = type { %"class.absl::optional_internal::optional_data_base.698" }
%"class.absl::optional_internal::optional_data_base.698" = type { %"class.absl::optional_internal::optional_data_dtor_base.699" }
%"class.absl::optional_internal::optional_data_dtor_base.699" = type { i8, %union.anon.700 }
%union.anon.700 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.701", i8, %"class.absl::optional.706", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.701" = type { %"class.absl::optional_internal::optional_data.702" }
%"class.absl::optional_internal::optional_data.702" = type { %"class.absl::optional_internal::optional_data_base.703" }
%"class.absl::optional_internal::optional_data_base.703" = type { %"class.absl::optional_internal::optional_data_dtor_base.704" }
%"class.absl::optional_internal::optional_data_dtor_base.704" = type { i8, [7 x i8], %union.anon.705 }
%union.anon.705 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.706" = type { %"class.absl::optional_internal::optional_data.707" }
%"class.absl::optional_internal::optional_data.707" = type { %"class.absl::optional_internal::optional_data_base.708" }
%"class.absl::optional_internal::optional_data_base.708" = type { %"class.absl::optional_internal::optional_data_dtor_base.709" }
%"class.absl::optional_internal::optional_data_dtor_base.709" = type { i8, %union.anon.710 }
%union.anon.710 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.711", %"class.WTF::Vector.120" }
%"class.WTF::Vector.711" = type { %"class.WTF::VectorBuffer.712" }
%"class.WTF::VectorBuffer.712" = type { %"class.WTF::VectorBufferBase.713" }
%"class.WTF::VectorBufferBase.713" = type { i32*, i32, i32 }
%"class.WTF::Vector.120" = type { %"class.WTF::VectorBuffer.121" }
%"class.WTF::VectorBuffer.121" = type { %"class.WTF::VectorBufferBase.122" }
%"class.WTF::VectorBufferBase.122" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.716" = type { %"class.WTF::VectorBuffer.717" }
%"class.WTF::VectorBuffer.717" = type { %"class.WTF::VectorBufferBase.718" }
%"class.WTF::VectorBufferBase.718" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.802" }
%"class.WTF::HashMap.802" = type { %"class.WTF::HashTable.803" }
%"class.WTF::HashTable.803" = type <{ %"struct.WTF::KeyValuePair.805"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.805" = type <{ %"class.blink::WeakMember.2463", i32, [4 x i8] }>
%"class.blink::WeakMember.2463" = type { %"class.blink::MemberBase.2464" }
%"class.blink::MemberBase.2464" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2465", [7 x i8], %"class.blink::Member.863", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2465" = type { i8 }
%"class.blink::Member.863" = type { %"class.blink::MemberBase.693" }
%"class.blink::HeapHashSet.806" = type { %"class.WTF::HashSet.809" }
%"class.WTF::HashSet.809" = type { %"class.WTF::HashTable.810" }
%"class.WTF::HashTable.810" = type <{ %"class.blink::WeakMember.812"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.812" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.813", %"class.WTF::String", %"class.WTF::HashSet.814", i8, i8, %class.scoped_refptr.819, %class.scoped_refptr.820, %class.scoped_refptr.822 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.813" = type { i8 }
%"class.WTF::HashSet.814" = type { %"class.WTF::HashTable.815" }
%"class.WTF::HashTable.815" = type <{ %"struct.std::__1::pair.818"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.818" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.819 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.820 = type { %"class.base::RefCountedData.821"* }
%"class.base::RefCountedData.821" = type opaque
%class.scoped_refptr.822 = type { %"class.base::RefCountedData.823"* }
%"class.base::RefCountedData.823" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.24, %class.scoped_refptr.24, %class.scoped_refptr.24, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.724, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.734", %"class.absl::optional.739", %"class.absl::optional.749", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.754", %"class.absl::optional.749", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.749", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.754", %"class.absl::optional.759", i8, %class.scoped_refptr.764 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.719" }
%"class.WTF::HashMap.719" = type { %"class.WTF::HashTable.720" }
%"class.WTF::HashTable.720" = type <{ %"struct.WTF::KeyValuePair.723"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.723" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.724 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.725", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.732, i8, %"class.url::Origin" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.726"*, %"class.std::__1::unique_ptr.726"*, %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.2443" }
%"class.std::__1::__compressed_pair.2443" = type { %"struct.std::__1::__compressed_pair_elem.2444" }
%"struct.std::__1::__compressed_pair_elem.2444" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.std::__1::unique_ptr.726"* }
%class.scoped_refptr.732 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.733", [4 x i8] }>
%"class.base::RefCountedThreadSafe.733" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.734" = type { %"class.absl::optional_internal::optional_data.735" }
%"class.absl::optional_internal::optional_data.735" = type { %"class.absl::optional_internal::optional_data_base.736" }
%"class.absl::optional_internal::optional_data_base.736" = type { %"class.absl::optional_internal::optional_data_dtor_base.737" }
%"class.absl::optional_internal::optional_data_dtor_base.737" = type { i8, %union.anon.738 }
%union.anon.738 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.739" = type { %"class.absl::optional_internal::optional_data.740" }
%"class.absl::optional_internal::optional_data.740" = type { %"class.absl::optional_internal::optional_data_base.741" }
%"class.absl::optional_internal::optional_data_base.741" = type { %"class.absl::optional_internal::optional_data_dtor_base.742" }
%"class.absl::optional_internal::optional_data_dtor_base.742" = type { i8, %union.anon.743 }
%union.anon.743 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.744", %"class.WTF::Vector.120", %"class.WTF::String" }
%"class.WTF::Vector.744" = type { %"class.WTF::VectorBuffer.745" }
%"class.WTF::VectorBuffer.745" = type { %"class.WTF::VectorBufferBase.746" }
%"class.WTF::VectorBufferBase.746" = type { %class.scoped_refptr.24*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.149", %"class.absl::optional.149" }
%"class.absl::optional.749" = type { %"class.absl::optional_internal::optional_data.750" }
%"class.absl::optional_internal::optional_data.750" = type { %"class.absl::optional_internal::optional_data_base.751" }
%"class.absl::optional_internal::optional_data_base.751" = type { %"class.absl::optional_internal::optional_data_dtor_base.752" }
%"class.absl::optional_internal::optional_data_dtor_base.752" = type { i8, %union.anon.753 }
%union.anon.753 = type { %"class.WTF::String" }
%"class.absl::optional.754" = type { %"class.absl::optional_internal::optional_data.755" }
%"class.absl::optional_internal::optional_data.755" = type { %"class.absl::optional_internal::optional_data_base.756" }
%"class.absl::optional_internal::optional_data_base.756" = type { %"class.absl::optional_internal::optional_data_dtor_base.757" }
%"class.absl::optional_internal::optional_data_dtor_base.757" = type { i8, %union.anon.758 }
%union.anon.758 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.759" = type { %"class.absl::optional_internal::optional_data.760" }
%"class.absl::optional_internal::optional_data.760" = type { %"class.absl::optional_internal::optional_data_base.761" }
%"class.absl::optional_internal::optional_data_base.761" = type { %"class.absl::optional_internal::optional_data_dtor_base.762" }
%"class.absl::optional_internal::optional_data_dtor_base.762" = type { i8, %union.anon.763 }
%union.anon.763 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.764 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.2448", %"class.base::internal::flat_tree.2449" }
%"class.base::RefCountedThreadSafe.2448" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2449" = type { %"class.std::__1::vector.2450" }
%"class.std::__1::vector.2450" = type { %"class.std::__1::__vector_base.2451" }
%"class.std::__1::__vector_base.2451" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2452" }
%"class.std::__1::__compressed_pair.2452" = type { %"struct.std::__1::__compressed_pair_elem.2453" }
%"struct.std::__1::__compressed_pair_elem.2453" = type { i32* }
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.766", %class.scoped_refptr.781, %class.scoped_refptr.782, %"struct.blink::CacheControlHeader", %"class.absl::optional.149", %"class.absl::optional.783", %"class.absl::optional.783", %"class.absl::optional.783", i64, %"class.blink::KURL", %"class.WTF::Vector.788", %"class.WTF::String", %"class.WTF::Vector.120", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.754", %"class.WTF::Vector.120", %"class.blink::KURL", %"class.absl::optional.793" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.766" = type { %"class.absl::optional_internal::optional_data.767" }
%"class.absl::optional_internal::optional_data.767" = type { %"class.absl::optional_internal::optional_data_base.768" }
%"class.absl::optional_internal::optional_data_base.768" = type { %"class.absl::optional_internal::optional_data_dtor_base.769" }
%"class.absl::optional_internal::optional_data_dtor_base.769" = type { i8, %union.anon.770 }
%union.anon.770 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.120", %"class.WTF::String", i64, i64, %"class.WTF::Vector.771", %"class.WTF::Vector.776" }
%"class.WTF::Vector.771" = type { %"class.WTF::VectorBuffer.772" }
%"class.WTF::VectorBuffer.772" = type { %"class.WTF::VectorBufferBase.773" }
%"class.WTF::VectorBufferBase.773" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.776" = type { %"class.WTF::VectorBuffer.777" }
%"class.WTF::VectorBuffer.777" = type { %"class.WTF::VectorBufferBase.778" }
%"class.WTF::VectorBufferBase.778" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.781 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.782 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.783" = type { %"class.absl::optional_internal::optional_data.784" }
%"class.absl::optional_internal::optional_data.784" = type { %"class.absl::optional_internal::optional_data_base.785" }
%"class.absl::optional_internal::optional_data_base.785" = type { %"class.absl::optional_internal::optional_data_dtor_base.786" }
%"class.absl::optional_internal::optional_data_dtor_base.786" = type { i8, %union.anon.787 }
%union.anon.787 = type { %"class.base::Time" }
%"class.WTF::Vector.788" = type { %"class.WTF::VectorBuffer.789" }
%"class.WTF::VectorBuffer.789" = type { %"class.WTF::VectorBufferBase.790" }
%"class.WTF::VectorBufferBase.790" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.793" = type { %"class.absl::optional_internal::optional_data.794" }
%"class.absl::optional_internal::optional_data.794" = type { %"class.absl::optional_internal::optional_data_base.795" }
%"class.absl::optional_internal::optional_data_base.795" = type { %"class.absl::optional_internal::optional_data_dtor_base.796" }
%"class.absl::optional_internal::optional_data_dtor_base.796" = type { i8, %union.anon.797 }
%union.anon.797 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.827 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.828", i64, %"class.WTF::Vector.830", %"class.WTF::Vector.835" }
%"class.WTF::RefCounted.828" = type { %"class.base::RefCounted.829" }
%"class.base::RefCounted.829" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.830" = type { %"class.WTF::VectorBuffer.831" }
%"class.WTF::VectorBuffer.831" = type { %"class.WTF::VectorBufferBase.832" }
%"class.WTF::VectorBufferBase.832" = type { i8*, i32, i32 }
%"class.WTF::Vector.835" = type { %"class.WTF::VectorBuffer.836" }
%"class.WTF::VectorBuffer.836" = type { %"class.WTF::VectorBufferBase.837" }
%"class.WTF::VectorBufferBase.837" = type { %"class.std::__1::unique_ptr.838"*, i32, i32 }
%"class.std::__1::unique_ptr.838" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.841" }
%"class.std::__1::__tree.841" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.842", %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.blink::HeapHashMap.850" = type { %"class.WTF::HashMap.853" }
%"class.WTF::HashMap.853" = type { %"class.WTF::HashTable.854" }
%"class.WTF::HashTable.854" = type <{ %"struct.WTF::KeyValuePair.856"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.856" = type opaque
%"class.blink::HeapVector.857" = type { %"class.WTF::Vector.860" }
%"class.WTF::Vector.860" = type { %"class.WTF::VectorBuffer.861" }
%"class.WTF::VectorBuffer.861" = type { %"class.WTF::VectorBufferBase.862" }
%"class.WTF::VectorBufferBase.862" = type { %"class.blink::Member.863"*, i32, i32 }
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.479", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.608, %"class.base::WeakPtrFactory.867" }
%"class.base::WeakPtrFactory.867" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.479" = type { %"class.blink::MemberBase.472" }
%"class.blink::HeapHashMap.868" = type { %"class.WTF::HashMap.871" }
%"class.WTF::HashMap.871" = type { %"class.WTF::HashTable.872" }
%"class.WTF::HashTable.872" = type <{ %"struct.WTF::KeyValuePair.874"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.874" = type opaque
%"class.WTF::Vector.875" = type { %"class.WTF::VectorBuffer.876" }
%"class.WTF::VectorBuffer.876" = type { %"class.WTF::VectorBufferBase.877" }
%"class.WTF::VectorBufferBase.877" = type { %class.scoped_refptr.878*, i32, i32 }
%class.scoped_refptr.878 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.881" = type { %"class.WTF::HashSet.884" }
%"class.WTF::HashSet.884" = type { %"class.WTF::HashTable.885" }
%"class.WTF::HashTable.885" = type <{ %"class.blink::Member.825"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.887" = type { %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"class.WTF::HashSet.890"* }
%"class.WTF::HashSet.890" = type { %"class.WTF::HashTable.891" }
%"class.WTF::HashTable.891" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.670 }
%class.scoped_refptr.670 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.824 }
%class.scoped_refptr.824 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.897" }
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.899" = type { %"class.blink::MemberBase.900" }
%"class.blink::MemberBase.900" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.901" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.473" = type { %"class.WTF::HashSet.476" }
%"class.WTF::HashSet.476" = type { %"class.WTF::HashTable.477" }
%"class.WTF::HashTable.477" = type <{ %"class.blink::WeakMember.479"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.480 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.481", [4 x i8] }>
%"class.base::RefCounted.481" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type { i32 (...)**, %"class.blink::Member.59", %"class.std::__1::unique_ptr.486", %"struct.std::__1::pair.492" }
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.blink::WebDocumentSubresourceFilter"* }
%"class.blink::WebDocumentSubresourceFilter" = type { i32 (...)** }
%"struct.std::__1::pair.492" = type { %"struct.std::__1::pair.493", i32, [4 x i8] }
%"struct.std::__1::pair.493" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type { i32 (...)**, %"class.blink::Member.505", %"class.v8::Isolate"*, %"class.blink::Member.507", %class.scoped_refptr.511, %"class.WTF::String", i8, i8, %class.scoped_refptr.573 }
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::WorkerOrWorkletGlobalScope"* }
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.511, %"class.blink::Member.526", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.530", %"class.blink::HeapHashMap.539", %"class.std::__1::unique_ptr.549", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.561", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.564" }
%"class.blink::HeapHashMap.530" = type { %"class.WTF::HashMap.533" }
%"class.WTF::HashMap.533" = type { %"class.WTF::HashTable.534" }
%"class.WTF::HashTable.534" = type <{ %"struct.WTF::KeyValuePair.536"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.536" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.539" = type { %"class.WTF::HashMap.542" }
%"class.WTF::HashMap.542" = type { %"class.WTF::HashTable.543" }
%"class.WTF::HashTable.543" = type <{ %"struct.WTF::KeyValuePair.545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.545" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.546" }
%"class.blink::TraceWrapperV8Reference.546" = type { %"class.v8::TracedReference.547" }
%"class.v8::TracedReference.547" = type { %"class.v8::BasicTracedReference.548" }
%"class.v8::BasicTracedReference.548" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.552" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.561" = type { %"class.v8::Persistent.562" }
%"class.v8::Persistent.562" = type { %"class.v8::PersistentBase.563" }
%"class.v8::PersistentBase.563" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.564" = type { %"class.WTF::HashMap.567" }
%"class.WTF::HashMap.567" = type { %"class.WTF::HashTable.568" }
%"class.WTF::HashTable.568" = type <{ %"struct.WTF::KeyValuePair.570"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.570" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.571" }
%"class.blink::Persistent.571" = type { %"class.blink::PersistentBase.572" }
%"class.blink::PersistentBase.572" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.511 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.573 = type { %"class.blink::RejectedPromises"* }
%"class.blink::RejectedPromises" = type { %"class.WTF::RefCounted.574", %"class.WTF::Vector.576", %"class.WTF::Vector.576" }
%"class.WTF::RefCounted.574" = type { %"class.base::RefCounted.575" }
%"class.base::RefCounted.575" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.576" = type { %"class.WTF::VectorBuffer.577" }
%"class.WTF::VectorBuffer.577" = type { %"class.WTF::VectorBufferBase.578" }
%"class.WTF::VectorBufferBase.578" = type { %"class.std::__1::unique_ptr.579"*, i32, i32 }
%"class.std::__1::unique_ptr.579" = type opaque
%"class.WTF::Vector.96" = type { %"class.WTF::VectorBuffer.97" }
%"class.WTF::VectorBuffer.97" = type { %"class.WTF::VectorBufferBase.98" }
%"class.WTF::VectorBufferBase.98" = type { %"class.mojo::StructPtr.99"*, i32, i32 }
%"class.mojo::StructPtr.99" = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.103", %"class.WTF::HashMap.110", %"class.WTF::HashMap.115", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.120", i32, %"class.mojo::StructPtr.125", %"class.WTF::Vector.120" }
%"class.mojo::StructPtr.103" = type { %"class.std::__1::unique_ptr.104" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.110" = type { %"class.WTF::HashTable.111" }
%"class.WTF::HashTable.111" = type <{ %"struct.WTF::KeyValuePair.114"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.114" = type { i32, %"class.WTF::String" }
%"class.WTF::HashMap.115" = type { %"class.WTF::HashTable.116" }
%"class.WTF::HashTable.116" = type <{ %"struct.WTF::KeyValuePair.119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.119" = type { i32, %"class.mojo::StructPtr.2543" }
%"class.mojo::StructPtr.2543" = type { %"class.std::__1::unique_ptr.2544" }
%"class.std::__1::unique_ptr.2544" = type { %"class.std::__1::__compressed_pair.2545" }
%"class.std::__1::__compressed_pair.2545" = type { %"struct.std::__1::__compressed_pair_elem.2546" }
%"struct.std::__1::__compressed_pair_elem.2546" = type { %"class.network::mojom::blink::CSPSourceList"* }
%"class.network::mojom::blink::CSPSourceList" = type <{ %"class.WTF::Vector.2547", %"class.WTF::Vector.120", %"class.WTF::Vector.2552", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.WTF::Vector.2547" = type { %"class.WTF::VectorBuffer.2548" }
%"class.WTF::VectorBuffer.2548" = type { %"class.WTF::VectorBufferBase.2549" }
%"class.WTF::VectorBufferBase.2549" = type { %"class.mojo::StructPtr.103"*, i32, i32 }
%"class.WTF::Vector.2552" = type { %"class.WTF::VectorBuffer.2553" }
%"class.WTF::VectorBuffer.2553" = type { %"class.WTF::VectorBufferBase.2554" }
%"class.WTF::VectorBufferBase.2554" = type { %"class.mojo::StructPtr.2555"*, i32, i32 }
%"class.mojo::StructPtr.2555" = type { %"class.std::__1::unique_ptr.2556" }
%"class.std::__1::unique_ptr.2556" = type { %"class.std::__1::__compressed_pair.2557" }
%"class.std::__1::__compressed_pair.2557" = type { %"struct.std::__1::__compressed_pair_elem.2558" }
%"struct.std::__1::__compressed_pair_elem.2558" = type { %"class.network::mojom::blink::CSPHashSource"* }
%"class.network::mojom::blink::CSPHashSource" = type { i32, %"class.WTF::Vector.2559" }
%"class.WTF::Vector.2559" = type { %"class.WTF::VectorBuffer.2560" }
%"class.WTF::VectorBuffer.2560" = type { %"class.WTF::VectorBufferBase.2561" }
%"class.WTF::VectorBufferBase.2561" = type { i8*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.125" = type { %"class.std::__1::unique_ptr.126" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.120", i8, i8, [6 x i8] }>
%"class.blink::WorkerReportingProxy" = type { i32 (...)** }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.582", i32, [4 x i8] }>
%"class.std::__1::bitset.582" = type { %"class.std::__1::__bitset.583" }
%"class.std::__1::__bitset.583" = type { [25 x i64] }
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.v8::Value" = type { i8 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.912" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.911", %"class.WTF::Vector.120", i8 }>
%"class.blink::WeakMember.911" = type { %"class.blink::MemberBase.60" }
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.911" }
%"class.blink::Supplementable.912" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.913" }
%"class.blink::HeapHashMap.913" = type { %"class.WTF::HashMap.916" }
%"class.WTF::HashMap.916" = type { %"class.WTF::HashTable.917" }
%"class.WTF::HashTable.917" = type <{ %"struct.WTF::KeyValuePair.919"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.919" = type { i8*, %"class.blink::Member.2467" }
%"class.blink::Member.2467" = type { %"class.blink::MemberBase.2468" }
%"class.blink::MemberBase.2468" = type { %"class.blink::Supplement.2469"* }
%"class.blink::Supplement.2469" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2470" }
%"class.blink::Member.2470" = type { %"class.blink::MemberBase.2471" }
%"class.blink::MemberBase.2471" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::WorkerResourceTimingNotifierImpl" = type { %"class.blink::WorkerResourceTimingNotifier", %class.scoped_refptr.608, %"class.blink::Member.59", %"class.blink::CrossThreadWeakPersistent" }
%"class.blink::WorkerResourceTimingNotifier" = type { i32 (...)** }
%"class.blink::CrossThreadWeakPersistent" = type { %"class.blink::PersistentBase.922" }
%"class.blink::PersistentBase.922" = type { %"class.blink::ExecutionContext"*, %"class.blink::CrossThreadPersistentNodePtr.923" }
%"class.blink::CrossThreadPersistentNodePtr.923" = type { %"struct.std::__1::atomic.277" }
%"class.blink::FetchClientSettingsObjectImpl" = type { %"class.blink::FetchClientSettingsObject", %"class.blink::Member.59" }
%"struct.blink::ResourceFetcherInit" = type { %"class.blink::DetachableResourceFetcherProperties"*, %"class.blink::FetchContext"*, %class.scoped_refptr.608, %class.scoped_refptr.608, %"class.blink::ResourceFetcher::LoaderFactory"*, %"class.blink::ContextLifecycleNotifier"*, %"class.blink::DetachableUseCounter"*, %"class.blink::DetachableConsoleLogger"*, i32, %"class.blink::MHTMLArchive"*, %"class.blink::FrameOrWorkerScheduler"*, i32, %"class.blink::LoadingBehaviorObserver"*, %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.929", %"class.base::WeakPtrFactory.934" }
%"class.WTF::HashMap.929" = type { %"class.WTF::HashTable.930" }
%"class.WTF::HashTable.930" = type <{ %"struct.WTF::KeyValuePair.933"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.933" = type opaque
%"class.base::WeakPtrFactory.934" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WorkerResourceFetcherProperties" = type <{ %"class.blink::ResourceFetcherProperties", %"class.blink::Member.505", %"class.blink::Member.596", %class.scoped_refptr.480, i32, [4 x i8] }>
%"class.blink::WorkerFetchContext" = type <{ %"class.blink::BaseFetchContext", %"class.blink::Member.505", %class.scoped_refptr.480, %"class.blink::Member.482", %"class.blink::Member.255", %"class.blink::HeapMojoRemote.924", %"class.blink::CrossThreadPersistent.927", i8, [7 x i8] }>
%"class.blink::BaseFetchContext" = type { %"class.blink::FetchContext", %"class.blink::Member.629" }
%"class.blink::HeapMojoRemote.924" = type { %"class.blink::Member.925" }
%"class.blink::Member.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ContentSecurityNotifier, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ContentSecurityNotifier, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::CrossThreadPersistent.927" = type { %"class.blink::PersistentBase.928" }
%"class.blink::PersistentBase.928" = type { %"class.blink::WorkerResourceTimingNotifier"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.946", %"class.blink::HeapListHashSet.957", %"class.blink::HeapListHashSet.968", %"class.blink::HeapListHashSet.979", %"class.blink::HeapListHashSet.990", %"class.blink::HeapListHashSet.1001", %"class.blink::HeapListHashSet.1012", %"class.blink::HeapListHashSet.1023", %"class.blink::HeapListHashSet.1034", %"class.blink::HeapListHashSet.1045", %"class.blink::HeapListHashSet.1056", %"class.blink::HeapListHashSet.1067", %"class.blink::HeapListHashSet.1078", %"class.blink::HeapListHashSet.1089", %"class.blink::HeapListHashSet.1100", %"class.blink::HeapListHashSet.1111", %"class.blink::HeapListHashSet.1122", %"class.blink::HeapListHashSet.1133", %"class.blink::HeapListHashSet.1144" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.942", %"class.blink::Member.944", %"class.blink::Member.944", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.942" = type <{ %"class.blink::Member.944"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1235", %"class.blink::Member.944", %"class.blink::Member.944" }
%"class.blink::Member.1235" = type { %"class.blink::MemberBase.1236" }
%"class.blink::MemberBase.1236" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.1239", %"class.WTF::Vector.1241", i32, [4 x i8], %"class.blink::HeapHashMap.1246", i32, i8, [3 x i8] }>
%"class.blink::Member.1239" = type { %"class.blink::MemberBase.1240" }
%"class.blink::MemberBase.1240" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1399", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1407", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1415", %"class.blink::FrameLoader", %"class.blink::Member.1432", %"class.blink::Member.1434", %"class.blink::Member.1462", %"class.blink::Member.1464", %"class.blink::Member.1466", %"class.blink::Member.1468", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.935", %class.scoped_refptr.1470, %"class.blink::Member.1159", %"class.blink::Member.1235", %"class.blink::Member.1471", %"class.blink::Member.1195", %"class.blink::Member.1163", %"class.blink::Member.1473", %"class.blink::Member.1475", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1477", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1480", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1502", %"class.std::__1::unique_ptr.1503", %"class.absl::optional.754", i32, [4 x i8], %"class.std::__1::unique_ptr.1509", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1517", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1522", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1527", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1530", %"class.blink::Member.1532", %"class.blink::Member.1534", %"class.blink::Member.1536", %"class.mojo::StructPtr.1539", %"class.blink::Member.1547", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1549", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1257", %"class.blink::Member.1259", %"class.blink::Member.1261", i8, i32, i8, i32, %"class.blink::Member.1375", %"class.blink::Member.1263", %"class.blink::FrameLifecycle", %"class.blink::Member.1255", %"class.blink::Member.1255", %"class.blink::Member.1255", %"class.blink::Member.1255", %"class.blink::Member.1255", %"class.blink::Member.1255", %"class.blink::Member.1239", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1385", i8, %"class.base::UnguessableToken", %"class.absl::optional.1387", %"class.absl::optional.754", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1255", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.1262" }
%"class.blink::MemberBase.1262" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1255", %"class.blink::Member.1263", %"class.blink::Member.1265", %"class.blink::Member.1267", i8, %"class.WTF::Vector.1269" }
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1267" = type { %"class.blink::MemberBase.1268" }
%"class.blink::MemberBase.1268" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1269" = type { %"class.WTF::VectorBuffer.1270" }
%"class.WTF::VectorBuffer.1270" = type { %"class.WTF::VectorBufferBase.1271" }
%"class.WTF::VectorBufferBase.1271" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.1272", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.1272" = type { %"class.base::StrongAlias.1273" }
%"class.base::StrongAlias.1273" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1367" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1274, %"class.std::__1::unique_ptr.140", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.159, i32 }>
%class.scoped_refptr.1274 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.159, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1333", %"class.absl::optional.1338", %"class.absl::optional.1291", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1358", i8, [7 x i8], %class.scoped_refptr.159, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.180" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.168", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.159, %"class.std::__1::unique_ptr.1275", %"class.absl::optional.1285", %"struct.std::__1::atomic.461", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1291", %"class.std::__1::unique_ptr.1296", i8, i64, %class.scoped_refptr.1330, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1331", %"class.base::WeakPtrFactory.1332" }
%"class.std::__1::unique_ptr.1275" = type { %"class.std::__1::__compressed_pair.1276" }
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.1277" }
%"struct.std::__1::__compressed_pair_elem.1277" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.159, i8, %"class.mojo::ScopedHandleBase.1278", %class.scoped_refptr.1279, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1280", i8*, %"class.base::WeakPtrFactory.1281" }
%"class.mojo::ScopedHandleBase.1278" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1279 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.1280" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1281" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1285" = type { %"class.absl::optional_internal::optional_data.1286" }
%"class.absl::optional_internal::optional_data.1286" = type { %"class.absl::optional_internal::optional_data_base.1287" }
%"class.absl::optional_internal::optional_data_base.1287" = type { %"class.absl::optional_internal::optional_data_dtor_base.1288" }
%"class.absl::optional_internal::optional_data_dtor_base.1288" = type { i8, %union.anon.1289 }
%union.anon.1289 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1290", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1290" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1296" = type { %"class.std::__1::__compressed_pair.1297" }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1299", i8, i64, %class.scoped_refptr.1300, %class.scoped_refptr.1325 }
%"class.base::RepeatingCallback.1299" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1300 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1301", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1303", %"class.std::__1::map.1314", i8, [7 x i8] }>
%"class.base::RefCounted.1301" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1302 }
%class.scoped_refptr.1302 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1303" = type { %"class.std::__1::__tree.1304" }
%"class.std::__1::__tree.1304" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1305", %"class.std::__1::__compressed_pair.1309" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::map.1314" = type { %"class.std::__1::__tree.1315" }
%"class.std::__1::__tree.1315" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1316", %"class.std::__1::__compressed_pair.1320" }
%"class.std::__1::__compressed_pair.1316" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.1320" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%class.scoped_refptr.1325 = type { %"class.base::RefCountedData.1326"* }
%"class.base::RefCountedData.1326" = type opaque
%class.scoped_refptr.1330 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1331" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1332" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1333" = type { %"class.absl::optional_internal::optional_data.1334" }
%"class.absl::optional_internal::optional_data.1334" = type { %"class.absl::optional_internal::optional_data_base.1335" }
%"class.absl::optional_internal::optional_data_base.1335" = type { %"class.absl::optional_internal::optional_data_dtor_base.1336" }
%"class.absl::optional_internal::optional_data_dtor_base.1336" = type { i8, %union.anon.1337 }
%union.anon.1337 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1338" = type { %"class.absl::optional_internal::optional_data.1339" }
%"class.absl::optional_internal::optional_data.1339" = type { %"class.absl::optional_internal::optional_data_base.1340" }
%"class.absl::optional_internal::optional_data_base.1340" = type { %"class.absl::optional_internal::optional_data_dtor_base.1341" }
%"class.absl::optional_internal::optional_data_dtor_base.1341" = type { i8, [7 x i8], %union.anon.1342 }
%union.anon.1342 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1291" = type { %"class.absl::optional_internal::optional_data.1292" }
%"class.absl::optional_internal::optional_data.1292" = type { %"class.absl::optional_internal::optional_data_base.1293" }
%"class.absl::optional_internal::optional_data_base.1293" = type { %"class.absl::optional_internal::optional_data_dtor_base.1294" }
%"class.absl::optional_internal::optional_data_dtor_base.1294" = type { i8, %union.anon.1295 }
%union.anon.1295 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1343 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1343 = type { %"class.std::__1::map.1346" }
%"class.std::__1::map.1346" = type { %"class.std::__1::__tree.1347" }
%"class.std::__1::__tree.1347" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1348", %"class.std::__1::__compressed_pair.1352" }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.1352" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1357"*, i64 }
%"class.std::__1::unique_ptr.1357" = type opaque
%"class.std::__1::map.1358" = type { %"class.std::__1::__tree.1359" }
%"class.std::__1::__tree.1359" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1360", %"class.std::__1::__compressed_pair.1364" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.1364" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unique_ptr.1367" = type { %"class.std::__1::__compressed_pair.1368" }
%"class.std::__1::__compressed_pair.1368" = type { %"struct.std::__1::__compressed_pair_elem.1369" }
%"struct.std::__1::__compressed_pair_elem.1369" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1263" = type { %"class.blink::MemberBase.1264" }
%"class.blink::MemberBase.1264" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1255", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1377" }
%"class.std::__1::vector.1377" = type { %"class.std::__1::__vector_base.1378" }
%"class.std::__1::__vector_base.1378" = type { %"struct.std::__1::pair.1379"*, %"struct.std::__1::pair.1379"*, %"class.std::__1::__compressed_pair.1380" }
%"struct.std::__1::pair.1379" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.1381" }
%"struct.std::__1::__compressed_pair_elem.1381" = type { %"struct.std::__1::pair.1379"* }
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1387" = type { %"class.absl::optional_internal::optional_data.1388" }
%"class.absl::optional_internal::optional_data.1388" = type { %"class.absl::optional_internal::optional_data_base.1389" }
%"class.absl::optional_internal::optional_data_base.1389" = type { %"class.absl::optional_internal::optional_data_dtor_base.1390" }
%"class.absl::optional_internal::optional_data_dtor_base.1390" = type { i8, %union.anon.1391 }
%union.anon.1391 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1392" }
%"class.blink::HeapHashSet.1392" = type { %"class.WTF::HashSet.1395" }
%"class.WTF::HashSet.1395" = type { %"class.WTF::HashTable.1396" }
%"class.WTF::HashTable.1396" = type <{ %"class.blink::WeakMember.1398"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1398" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1399" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1400" }
%"class.blink::HeapHashMap.1400" = type { %"class.WTF::HashMap.1403" }
%"class.WTF::HashMap.1403" = type { %"class.WTF::HashTable.1404" }
%"class.WTF::HashTable.1404" = type <{ %"struct.WTF::KeyValuePair.1406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1406" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1407" = type { %"class.std::__1::__compressed_pair.1408" }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.1409" }
%"struct.std::__1::__compressed_pair_elem.1409" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1413" }
%"class.blink::Member.1413" = type { %"class.blink::MemberBase.1414" }
%"class.blink::MemberBase.1414" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2437" }
%"class.blink::WeakMember.2437" = type { %"class.blink::MemberBase.2438" }
%"class.blink::MemberBase.2438" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2484", i64, %"class.std::__1::map.2485", i8*, i64, %"class.base::WeakPtrFactory.2494" }
%"class.base::RepeatingCallback.2484" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2485" = type { %"class.std::__1::__tree.2486" }
%"class.std::__1::__tree.2486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2487", %"class.std::__1::__compressed_pair.2491" }
%"class.std::__1::__compressed_pair.2487" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.2491" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.base::WeakPtrFactory.2494" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1415" = type { %"class.WTF::HashSet.1418" }
%"class.WTF::HashSet.1418" = type { %"class.WTF::HashTable.1419" }
%"class.WTF::HashTable.1419" = type <{ %"class.blink::WeakMember.1421"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1421" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1239", %"class.blink::Member.1422", %"class.blink::Member.1424", %"class.std::__1::unique_ptr.1426", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.890" }
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1426" = type { %"class.std::__1::__compressed_pair.1427" }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.1428" }
%"struct.std::__1::__compressed_pair_elem.1428" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::Member.1432" = type { %"class.blink::MemberBase.1433" }
%"class.blink::MemberBase.1433" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1889", %"class.blink::Member.1239", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1894", i8, i32, %"class.blink::Color", %"class.absl::optional.1896", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1901", %"class.blink::Member.1903", %"class.blink::Member.1903", %"class.std::__1::unique_ptr.1906", i32, [4 x i8], %"class.WTF::HashSet.1909", %"class.blink::Member.1916", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1918", %"class.blink::HeapHashSet.1925", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1933", i8, %"class.blink::Member.1939", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1951", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1965", i8, %"class.std::__1::unique_ptr.1971", %"class.std::__1::unique_ptr.2088", %"class.WTF::Vector.2094", i32, %class.scoped_refptr.2099, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2100", %"class.blink::Member.2102", %"class.blink::Member.2104", %"class.blink::HeapHashSet.2106", %"class.blink::HeapHashSet.2113", %"class.std::__1::unique_ptr.2120", %"class.std::__1::unique_ptr.2126", %"class.WTF::Vector.1642" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1889" = type { %"class.WTF::HashTable.1890" }
%"class.WTF::HashTable.1890" = type <{ %class.scoped_refptr.1893*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1893 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1894" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1895", { i64, i64 } }
%"class.blink::WeakMember.1895" = type { %"class.blink::MemberBase.1433" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1896" = type { %"class.absl::optional_internal::optional_data.1897" }
%"class.absl::optional_internal::optional_data.1897" = type { %"class.absl::optional_internal::optional_data_base.1898" }
%"class.absl::optional_internal::optional_data_base.1898" = type { %"class.absl::optional_internal::optional_data_dtor_base.1899" }
%"class.absl::optional_internal::optional_data_dtor_base.1899" = type { i8, %union.anon.1900 }
%union.anon.1900 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1901" = type { %"class.blink::MemberBase.1902" }
%"class.blink::MemberBase.1902" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1903" = type { %"class.blink::MemberBase.1904" }
%"class.blink::MemberBase.1904" = type { %"class.blink::HeapHashSet.1905"* }
%"class.blink::HeapHashSet.1905" = type opaque
%"class.std::__1::unique_ptr.1906" = type { %"class.std::__1::__compressed_pair.1907" }
%"class.std::__1::__compressed_pair.1907" = type { %"struct.std::__1::__compressed_pair_elem.1908" }
%"struct.std::__1::__compressed_pair_elem.1908" = type { %"class.WTF::HashSet.1909"* }
%"class.WTF::HashSet.1909" = type { %"class.WTF::HashTable.1910" }
%"class.WTF::HashTable.1910" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1918" = type { %"class.WTF::HashSet.1921" }
%"class.WTF::HashSet.1921" = type { %"class.WTF::HashTable.1922" }
%"class.WTF::HashTable.1922" = type <{ %"class.blink::Member.1924"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1924" = type opaque
%"class.blink::HeapHashSet.1925" = type { %"class.WTF::HashSet.1928" }
%"class.WTF::HashSet.1928" = type { %"class.WTF::HashTable.1929" }
%"class.WTF::HashTable.1929" = type <{ %"class.blink::Member.1931"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1931" = type { %"class.blink::MemberBase.1932" }
%"class.blink::MemberBase.1932" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1933" = type { %"class.std::__1::__compressed_pair.1934" }
%"class.std::__1::__compressed_pair.1934" = type { %"struct.std::__1::__compressed_pair_elem.1935" }
%"struct.std::__1::__compressed_pair_elem.1935" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1939" = type { %"class.blink::MemberBase.1940" }
%"class.blink::MemberBase.1940" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1943", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1943" = type { %"class.WTF::HashTable.1944" }
%"class.WTF::HashTable.1944" = type <{ %"struct.WTF::KeyValuePair.1946"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1946" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1947", i32, i32 }
%"class.WTF::Vector.1947" = type { %"class.WTF::VectorBuffer.1948" }
%"class.WTF::VectorBuffer.1948" = type { %"class.WTF::VectorBufferBase.1949" }
%"class.WTF::VectorBufferBase.1949" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1951" = type { %"class.WTF::LinkedHashSet.1954" }
%"class.WTF::LinkedHashSet.1954" = type { %"class.WTF::HashMap.1955", %"class.WTF::VectorBackedLinkedList.1959" }
%"class.WTF::HashMap.1955" = type { %"class.WTF::HashTable.1956" }
%"class.WTF::HashTable.1956" = type <{ %"struct.WTF::KeyValuePair.1958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1958" = type opaque
%"class.WTF::VectorBackedLinkedList.1959" = type { %"class.WTF::Vector.1960", i32, i32 }
%"class.WTF::Vector.1960" = type { %"class.WTF::VectorBuffer.1961" }
%"class.WTF::VectorBuffer.1961" = type { %"class.WTF::VectorBufferBase.1962" }
%"class.WTF::VectorBufferBase.1962" = type { %"class.WTF::VectorBackedLinkedListNode.1963"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1963" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1965" = type { %"class.std::__1::__compressed_pair.1966" }
%"class.std::__1::__compressed_pair.1966" = type { %"struct.std::__1::__compressed_pair_elem.1967" }
%"struct.std::__1::__compressed_pair_elem.1967" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1971" = type { %"class.std::__1::__compressed_pair.1972" }
%"class.std::__1::__compressed_pair.1972" = type { %"struct.std::__1::__compressed_pair_elem.1973" }
%"struct.std::__1::__compressed_pair_elem.1973" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1974, %class.scoped_refptr.1974, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2065", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2070", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1974 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1975", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1982" }
%"class.WTF::RefCounted.1975" = type { %"class.base::RefCounted.1976" }
%"class.base::RefCounted.1976" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1977", i32, [4 x i8] }>
%"class.WTF::Vector.1977" = type { %"class.WTF::VectorBuffer.1978" }
%"class.WTF::VectorBuffer.1978" = type { %"class.WTF::VectorBufferBase.1979" }
%"class.WTF::VectorBufferBase.1979" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1982" = type { %"class.WTF::VectorBuffer.1983" }
%"class.WTF::VectorBuffer.1983" = type { %"class.WTF::VectorBufferBase.1984" }
%"class.WTF::VectorBufferBase.1984" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1988", %"class.std::__1::unique_ptr.2037", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1985, %class.scoped_refptr.1986, %class.scoped_refptr.1987 }
%class.scoped_refptr.1985 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2001", i8, i8, %class.scoped_refptr.1985, i32, i32 }
%"class.WTF::RefCounted.2001" = type { %"class.base::RefCounted.2002" }
%"class.base::RefCounted.2002" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1986 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2150" }
%"class.blink::PaintPropertyNode.2150" = type { %"class.WTF::RefCounted.2151", i8, i8, %class.scoped_refptr.1986, i32, i32 }
%"class.WTF::RefCounted.2151" = type { %"class.base::RefCounted.2152" }
%"class.base::RefCounted.2152" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1987 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2147" }
%"class.blink::PaintPropertyNode.2147" = type { %"class.WTF::RefCounted.2148", i8, i8, %class.scoped_refptr.1987, i32, i32 }
%"class.WTF::RefCounted.2148" = type { %"class.base::RefCounted.2149" }
%"class.base::RefCounted.2149" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1988" = type { %"class.std::__1::__compressed_pair.1989" }
%"class.std::__1::__compressed_pair.1989" = type { %"struct.std::__1::__compressed_pair_elem.1990" }
%"struct.std::__1::__compressed_pair_elem.1990" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1991", %"class.WTF::Vector.1996", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1991" = type { %"class.WTF::VectorBuffer.1992" }
%"class.WTF::VectorBuffer.1992" = type { %"class.WTF::VectorBufferBase.1993" }
%"class.WTF::VectorBufferBase.1993" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1996" = type { %"class.WTF::VectorBuffer.1997" }
%"class.WTF::VectorBuffer.1997" = type { %"class.WTF::VectorBufferBase.1998" }
%"class.WTF::VectorBufferBase.1998" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2016" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2009, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2010", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2003" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.2003" = type { %"class.std::__1::__compressed_pair.2004" }
%"class.std::__1::__compressed_pair.2004" = type { %"struct.std::__1::__compressed_pair_elem.2005" }
%"struct.std::__1::__compressed_pair_elem.2005" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.2009 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2132", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2132" = type { %"class.WTF::RefCounted.2133", i8, i8, %class.scoped_refptr.2009, i32, i32 }
%"class.WTF::RefCounted.2133" = type { %"class.base::RefCounted.2134" }
%"class.base::RefCounted.2134" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2135" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2135" = type { %"class.absl::optional_internal::optional_data.2136" }
%"class.absl::optional_internal::optional_data.2136" = type { %"class.absl::optional_internal::optional_data_base.2137" }
%"class.absl::optional_internal::optional_data_base.2137" = type { %"class.absl::optional_internal::optional_data_dtor_base.2138" }
%"class.absl::optional_internal::optional_data_dtor_base.2138" = type { i8, %union.anon.2139 }
%union.anon.2139 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2140", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2140" = type { %"class.std::__1::__vector_base.2141" }
%"class.std::__1::__vector_base.2141" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2142" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2142" = type { %"struct.std::__1::__compressed_pair_elem.2143" }
%"struct.std::__1::__compressed_pair_elem.2143" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2010" = type { %"class.std::__1::__compressed_pair.2011" }
%"class.std::__1::__compressed_pair.2011" = type { %"struct.std::__1::__compressed_pair_elem.2012" }
%"struct.std::__1::__compressed_pair_elem.2012" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2016" = type { %"class.std::__1::__compressed_pair.2017" }
%"class.std::__1::__compressed_pair.2017" = type { %"struct.std::__1::__compressed_pair_elem.2018" }
%"struct.std::__1::__compressed_pair_elem.2018" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2019", %"class.std::__1::unique_ptr.2025", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2019" = type { %"class.std::__1::__compressed_pair.2020" }
%"class.std::__1::__compressed_pair.2020" = type { %"struct.std::__1::__compressed_pair_elem.2021" }
%"struct.std::__1::__compressed_pair_elem.2021" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2025" = type { %"class.std::__1::__compressed_pair.2026" }
%"class.std::__1::__compressed_pair.2026" = type { %"struct.std::__1::__compressed_pair_elem.2027" }
%"struct.std::__1::__compressed_pair_elem.2027" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2037" = type { %"class.std::__1::__compressed_pair.2038" }
%"class.std::__1::__compressed_pair.2038" = type { %"struct.std::__1::__compressed_pair_elem.2039" }
%"struct.std::__1::__compressed_pair_elem.2039" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2040", %"class.absl::optional.2040" }
%"class.absl::optional.2040" = type { %"class.absl::optional_internal::optional_data.2041" }
%"class.absl::optional_internal::optional_data.2041" = type { %"class.absl::optional_internal::optional_data_base.2042" }
%"class.absl::optional_internal::optional_data_base.2042" = type { %"class.absl::optional_internal::optional_data_dtor_base.2043" }
%"class.absl::optional_internal::optional_data_dtor_base.2043" = type { i8, [3 x i8], %union.anon.2044 }
%union.anon.2044 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1982"*, %"class.absl::optional.2050", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2050" = type { %"class.absl::optional_internal::optional_data.2051" }
%"class.absl::optional_internal::optional_data.2051" = type { %"class.absl::optional_internal::optional_data_base.2052" }
%"class.absl::optional_internal::optional_data_base.2052" = type { %"class.absl::optional_internal::optional_data_dtor_base.2053" }
%"class.absl::optional_internal::optional_data_dtor_base.2053" = type { i8, %union.anon.2054 }
%union.anon.2054 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2055", %"class.WTF::Vector.2060" }
%"class.WTF::Vector.2055" = type { %"class.WTF::VectorBuffer.2056" }
%"class.WTF::VectorBuffer.2056" = type { %"class.WTF::VectorBufferBase.2057", [128 x i8] }
%"class.WTF::VectorBufferBase.2057" = type { i32*, i32, i32 }
%"class.WTF::Vector.2060" = type { %"class.WTF::VectorBuffer.2061" }
%"class.WTF::VectorBuffer.2061" = type { %"class.WTF::VectorBufferBase.2062", [128 x i8] }
%"class.WTF::VectorBufferBase.2062" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2065" = type { %"class.WTF::VectorBuffer.2066" }
%"class.WTF::VectorBuffer.2066" = type { %"class.WTF::VectorBufferBase.2067" }
%"class.WTF::VectorBufferBase.2067" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2070" = type { %"class.WTF::HashTable.2071" }
%"class.WTF::HashTable.2071" = type <{ %"struct.WTF::KeyValuePair.2074"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2074" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2075", %"class.WTF::Vector.2080" }
%"class.WTF::HashMap.2075" = type { %"class.WTF::HashTable.2076" }
%"class.WTF::HashTable.2076" = type <{ %"struct.WTF::KeyValuePair.2079"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2079" = type opaque
%"class.WTF::Vector.2080" = type { %"class.WTF::VectorBuffer.2081" }
%"class.WTF::VectorBuffer.2081" = type { %"class.WTF::VectorBufferBase.2082" }
%"class.WTF::VectorBufferBase.2082" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2088" = type { %"class.std::__1::__compressed_pair.2089" }
%"class.std::__1::__compressed_pair.2089" = type { %"struct.std::__1::__compressed_pair_elem.2090" }
%"struct.std::__1::__compressed_pair_elem.2090" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2094" = type { %"class.WTF::VectorBuffer.2095" }
%"class.WTF::VectorBuffer.2095" = type { %"class.WTF::VectorBufferBase.2096" }
%"class.WTF::VectorBufferBase.2096" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2099 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2100" = type { %"class.blink::MemberBase.2101" }
%"class.blink::MemberBase.2101" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2102" = type { %"class.blink::MemberBase.2103" }
%"class.blink::MemberBase.2103" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2104" = type { %"class.blink::MemberBase.2105" }
%"class.blink::MemberBase.2105" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2106" = type { %"class.WTF::HashSet.2109" }
%"class.WTF::HashSet.2109" = type { %"class.WTF::HashTable.2110" }
%"class.WTF::HashTable.2110" = type <{ %"class.blink::WeakMember.2112"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2112" = type opaque
%"class.blink::HeapHashSet.2113" = type { %"class.WTF::HashSet.2116" }
%"class.WTF::HashSet.2116" = type { %"class.WTF::HashTable.2117" }
%"class.WTF::HashTable.2117" = type <{ %"class.blink::WeakMember.2119"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2119" = type opaque
%"class.std::__1::unique_ptr.2120" = type { %"class.std::__1::__compressed_pair.2121" }
%"class.std::__1::__compressed_pair.2121" = type { %"struct.std::__1::__compressed_pair_elem.2122" }
%"struct.std::__1::__compressed_pair_elem.2122" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2126" = type { %"class.std::__1::__compressed_pair.2127" }
%"class.std::__1::__compressed_pair.2127" = type { %"struct.std::__1::__compressed_pair_elem.2128" }
%"struct.std::__1::__compressed_pair_elem.2128" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.783", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.1642" = type { %"class.WTF::VectorBuffer.1643" }
%"class.WTF::VectorBuffer.1643" = type { %"class.WTF::VectorBufferBase.1644" }
%"class.WTF::VectorBufferBase.1644" = type { %"class.base::OnceCallback.168"*, i32, i32 }
%"class.blink::Member.1434" = type { %"class.blink::MemberBase.1435" }
%"class.blink::MemberBase.1435" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.1447" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.1436", %"class.blink::Member.1436" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.1436", %"class.blink::Member.1438", %"class.blink::Member.1436", %"class.blink::Member.1436", %"class.blink::Member.1440" }
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1554", %"class.blink::Member.1556", %"class.blink::Member.1438", %"class.blink::Member.1558", %"class.blink::Member.1558", %"class.blink::Member.1580", %"class.blink::Member.1582", %"class.blink::Member.1584", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1589", %"class.blink::HeapVector.1591" }
%"class.blink::Member.1554" = type { %"class.blink::MemberBase.1555" }
%"class.blink::MemberBase.1555" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1556" = type { %"class.blink::MemberBase.1557" }
%"class.blink::MemberBase.1557" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1634", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1642", %"class.WTF::Vector.1642", i8, i32, %"class.blink::Member.1647", %"class.blink::Member.59", %"class.blink::Member.471", %"class.blink::Member.1649", %"class.blink::Member.1651", %"class.blink::Member.1653", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1655", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1661", %"class.blink::Member.1663", %"class.blink::Member.1597", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1665", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1670", %"class.blink::HeapVector.1573", %"class.blink::Member.1434", %"class.blink::Member.1672", %"class.blink::Member.1434", %"class.blink::Member.1434", %"class.blink::Member.1434", %"class.blink::UserActionElementSet", %"class.blink::Member.1681", double, double, i64, i64, %"class.blink::HeapHashSet.1683", %"class.blink::HeapHashSet.1690", i16, i8, %"class.blink::Member.1697", %"class.blink::Member.1699", %"class.blink::Member.1701", %"class.blink::Member.1703", %"class.blink::TextLinkColors", %"class.blink::Member.1705", i8, [7 x i8], %"class.blink::HeapHashMap.1707", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1434", %"class.WTF::Vector.1714", %"class.blink::Member.1719", %"class.blink::Member.1723", i8, %"class.blink::Member.1434", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1725", %"class.blink::HeapVector.1727", %"class.std::__1::unique_ptr.1735", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1741", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1754", %"class.WTF::Vector.1756", i8, i8, %"class.std::__1::unique_ptr.1761", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1573", %"class.blink::HeapVector.1767", i32, i8, %"class.blink::HeapTaskRunnerTimer.1670", %"class.blink::HeapTaskRunnerTimer.1670", %"class.blink::DocumentTiming", %"class.blink::Member.1775", i8, i32, %"class.blink::Member.1777", %"class.blink::Member.1779", %"class.blink::Member.1781", %"class.blink::HeapTaskRunnerTimer.1670", %"class.blink::Member.1783", %"class.WTF::HashMap.1785", %"class.blink::Member.1790", %"class.blink::Member.1792", %"class.blink::Member.1794", %"class.blink::Member.1796", %"class.blink::Member.1556", %"class.blink::Member.1556", %"class.blink::HeapTaskRunnerTimer.1670", %"class.blink::HeapHashSet.1798", i8, i32, %"class.blink::Member.1805", %"class.blink::Member.1807", i32, %"class.blink::Member.1809", %"class.blink::Member.1811", %"class.blink::Member.1813", %"class.std::__1::unique_ptr.1815", i64, %"class.std::__1::unique_ptr.1821", i32, i32, %"class.blink::Member.1827", %"class.blink::Member.1829", %"class.blink::Member.1831", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1833", %"class.WTF::Vector.1241", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1835", %"class.blink::Member.1842", %"class.std::__1::unique_ptr.1844", %"class.blink::Member.1850", i8, i8, %"class.WTF::String", %"class.blink::Member.1852", i8, [7 x i8], %"class.blink::HeapHashMap.1854", %"class.blink::HeapObserverSet.1861", %"class.blink::Member.1869", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1871", i32, i8, i8, %"class.blink::WeakMember.1873", %"class.blink::Member.1874" }
%"class.blink::Supplementable.1634" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1635" }
%"class.blink::HeapHashMap.1635" = type { %"class.WTF::HashMap.1638" }
%"class.WTF::HashMap.1638" = type { %"class.WTF::HashTable.1639" }
%"class.WTF::HashTable.1639" = type <{ %"struct.WTF::KeyValuePair.1641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1641" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1649" = type { %"class.blink::MemberBase.1650" }
%"class.blink::MemberBase.1650" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1651" = type { %"class.blink::MemberBase.1652" }
%"class.blink::MemberBase.1652" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1653" = type { %"class.blink::MemberBase.1654" }
%"class.blink::MemberBase.1654" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1661" = type { %"class.blink::MemberBase.1662" }
%"class.blink::MemberBase.1662" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1597" = type { %"class.blink::MemberBase.1598" }
%"class.blink::MemberBase.1598" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1599", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1601, %"class.WTF::Vector.1602", %"class.WTF::Vector.1602", %"class.blink::Member.1436", %"class.blink::Member.1607", %"class.blink::HeapHashSet.1611", %"class.blink::Member.1556", %"class.WTF::HashSet.1618", %"class.WTF::TextPosition", %"class.blink::Member.1622", %"class.blink::HeapVector.1624", %"class.blink::Member.1631" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1601 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1602" = type { %"class.WTF::VectorBuffer.1603" }
%"class.WTF::VectorBuffer.1603" = type { %"class.WTF::VectorBufferBase.1604" }
%"class.WTF::VectorBufferBase.1604" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1607" = type { %"class.blink::MemberBase.1608" }
%"class.blink::MemberBase.1608" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1609" }
%"class.blink::Member.1609" = type { %"class.blink::MemberBase.1610" }
%"class.blink::MemberBase.1610" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1611" = type { %"class.WTF::HashSet.1614" }
%"class.WTF::HashSet.1614" = type { %"class.WTF::HashTable.1615" }
%"class.WTF::HashTable.1615" = type <{ %"class.blink::WeakMember.1617"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1617" = type { %"class.blink::MemberBase.1439" }
%"class.WTF::HashSet.1618" = type { %"class.WTF::HashTable.1619" }
%"class.WTF::HashTable.1619" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1622" = type { %"class.blink::MemberBase.1623" }
%"class.blink::MemberBase.1623" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1624" = type { %"class.WTF::Vector.1627" }
%"class.WTF::Vector.1627" = type { %"class.WTF::VectorBuffer.1628" }
%"class.WTF::VectorBuffer.1628" = type { %"class.WTF::VectorBufferBase.1629" }
%"class.WTF::VectorBufferBase.1629" = type { %"class.blink::Member.1607"*, i32, i32 }
%"class.blink::Member.1631" = type { %"class.blink::MemberBase.1632" }
%"class.blink::MemberBase.1632" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1665" = type { %"class.WTF::VectorBuffer.1666" }
%"class.WTF::VectorBuffer.1666" = type { %"class.WTF::VectorBufferBase.1667" }
%"class.WTF::VectorBufferBase.1667" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.819 }
%"class.blink::Member.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.1556", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.1436", %"class.blink::Member.1436", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1674" }
%"class.blink::HeapHashMap.1674" = type { %"class.WTF::HashMap.1677" }
%"class.WTF::HashMap.1677" = type { %"class.WTF::HashTable.1678" }
%"class.WTF::HashTable.1678" = type <{ %"struct.WTF::KeyValuePair.1680"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1680" = type opaque
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1683" = type { %"class.WTF::HashSet.1686" }
%"class.WTF::HashSet.1686" = type { %"class.WTF::HashTable.1687" }
%"class.WTF::HashTable.1687" = type <{ %"class.blink::WeakMember.1689"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1689" = type opaque
%"class.blink::HeapHashSet.1690" = type { %"class.WTF::HashSet.1693" }
%"class.WTF::HashSet.1693" = type { %"class.WTF::HashTable.1694" }
%"class.WTF::HashTable.1694" = type <{ %"class.blink::WeakMember.1696"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1696" = type opaque
%"class.blink::Member.1697" = type { %"class.blink::MemberBase.1698" }
%"class.blink::MemberBase.1698" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1699" = type { %"class.blink::MemberBase.1700" }
%"class.blink::MemberBase.1700" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1701" = type { %"class.blink::MemberBase.1702" }
%"class.blink::MemberBase.1702" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1438", %"class.blink::HeapVector.1591" }
%"class.blink::Member.1703" = type { %"class.blink::MemberBase.1704" }
%"class.blink::MemberBase.1704" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1705" = type { %"class.blink::MemberBase.1706" }
%"class.blink::MemberBase.1706" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1707" = type { %"class.WTF::HashMap.1710" }
%"class.WTF::HashMap.1710" = type { %"class.WTF::HashTable.1711" }
%"class.WTF::HashTable.1711" = type <{ %"struct.WTF::KeyValuePair.1713"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1713" = type opaque
%"class.WTF::Vector.1714" = type { %"class.WTF::VectorBuffer.1715" }
%"class.WTF::VectorBuffer.1715" = type { %"class.WTF::VectorBufferBase.1716" }
%"class.WTF::VectorBufferBase.1716" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1719" = type { %"class.blink::MemberBase.1720" }
%"class.blink::MemberBase.1720" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1723" = type { %"class.blink::MemberBase.1724" }
%"class.blink::MemberBase.1724" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1725" = type { %"class.blink::MemberBase.1726" }
%"class.blink::MemberBase.1726" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1727" = type { %"class.WTF::Vector.1730" }
%"class.WTF::Vector.1730" = type { %"class.WTF::VectorBuffer.1731" }
%"class.WTF::VectorBuffer.1731" = type { %"class.WTF::VectorBufferBase.1732" }
%"class.WTF::VectorBufferBase.1732" = type { %"class.blink::Member.1733"*, i32, i32 }
%"class.blink::Member.1733" = type opaque
%"class.std::__1::unique_ptr.1735" = type { %"class.std::__1::__compressed_pair.1736" }
%"class.std::__1::__compressed_pair.1736" = type { %"struct.std::__1::__compressed_pair_elem.1737" }
%"struct.std::__1::__compressed_pair_elem.1737" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1741" = type { %"class.WTF::HashSet.1744" }
%"class.WTF::HashSet.1744" = type { %"class.WTF::HashTable.1745" }
%"class.WTF::HashTable.1745" = type <{ %"class.blink::WeakMember.1747"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1747" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1748", i32, [4 x i8] }>
%"class.WTF::Vector.1748" = type { %"class.WTF::VectorBuffer.1749" }
%"class.WTF::VectorBuffer.1749" = type { %"class.WTF::VectorBufferBase.1750" }
%"class.WTF::VectorBufferBase.1750" = type { %"struct.std::__1::pair.1751"*, i32, i32 }
%"struct.std::__1::pair.1751" = type opaque
%"class.blink::Member.1754" = type { %"class.blink::MemberBase.1755" }
%"class.blink::MemberBase.1755" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1756" = type { %"class.WTF::VectorBuffer.1757" }
%"class.WTF::VectorBuffer.1757" = type { %"class.WTF::VectorBufferBase.1758" }
%"class.WTF::VectorBufferBase.1758" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1573" = type { %"class.WTF::Vector.1576" }
%"class.WTF::Vector.1576" = type { %"class.WTF::VectorBuffer.1577" }
%"class.WTF::VectorBuffer.1577" = type { %"class.WTF::VectorBufferBase.1578" }
%"class.WTF::VectorBufferBase.1578" = type { %"class.blink::Member.1434"*, i32, i32 }
%"class.blink::HeapVector.1767" = type { %"class.WTF::Vector.1770" }
%"class.WTF::Vector.1770" = type { %"class.WTF::VectorBuffer.1771" }
%"class.WTF::VectorBuffer.1771" = type { %"class.WTF::VectorBufferBase.1772" }
%"class.WTF::VectorBufferBase.1772" = type { %"class.blink::Member.1773"*, i32, i32 }
%"class.blink::Member.1773" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1556" }
%"class.blink::Member.1775" = type { %"class.blink::MemberBase.1776" }
%"class.blink::MemberBase.1776" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1777" = type { %"class.blink::MemberBase.1778" }
%"class.blink::MemberBase.1778" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1779" = type { %"class.blink::MemberBase.1780" }
%"class.blink::MemberBase.1780" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1781" = type { %"class.blink::MemberBase.1782" }
%"class.blink::MemberBase.1782" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1783" = type { %"class.blink::MemberBase.1784" }
%"class.blink::MemberBase.1784" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1785" = type { %"class.WTF::HashTable.1786" }
%"class.WTF::HashTable.1786" = type <{ %"struct.WTF::KeyValuePair.1789"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1789" = type opaque
%"class.blink::Member.1790" = type { %"class.blink::MemberBase.1791" }
%"class.blink::MemberBase.1791" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1792" = type { %"class.blink::MemberBase.1793" }
%"class.blink::MemberBase.1793" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1794" = type { %"class.blink::MemberBase.1795" }
%"class.blink::MemberBase.1795" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1796" = type { %"class.blink::MemberBase.1797" }
%"class.blink::MemberBase.1797" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1670" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1671", { i64, i64 } }
%"class.blink::WeakMember.1671" = type { %"class.blink::MemberBase.1557" }
%"class.blink::HeapHashSet.1798" = type { %"class.WTF::HashSet.1801" }
%"class.WTF::HashSet.1801" = type { %"class.WTF::HashTable.1802" }
%"class.WTF::HashTable.1802" = type <{ %"class.blink::Member.1804"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1804" = type opaque
%"class.blink::Member.1805" = type { %"class.blink::MemberBase.1806" }
%"class.blink::MemberBase.1806" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1807" = type { %"class.blink::MemberBase.1808" }
%"class.blink::MemberBase.1808" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1809" = type { %"class.blink::MemberBase.1810" }
%"class.blink::MemberBase.1810" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1811" = type { %"class.blink::MemberBase.1812" }
%"class.blink::MemberBase.1812" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1813" = type { %"class.blink::MemberBase.1814" }
%"class.blink::MemberBase.1814" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1815" = type { %"class.std::__1::__compressed_pair.1816" }
%"class.std::__1::__compressed_pair.1816" = type { %"struct.std::__1::__compressed_pair_elem.1817" }
%"struct.std::__1::__compressed_pair_elem.1817" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1821" = type { %"class.std::__1::__compressed_pair.1822" }
%"class.std::__1::__compressed_pair.1822" = type { %"struct.std::__1::__compressed_pair_elem.1823" }
%"struct.std::__1::__compressed_pair_elem.1823" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1827" = type { %"class.blink::MemberBase.1828" }
%"class.blink::MemberBase.1828" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1829" = type { %"class.blink::MemberBase.1830" }
%"class.blink::MemberBase.1830" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1831" = type { %"class.blink::MemberBase.1832" }
%"class.blink::MemberBase.1832" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1833" = type { %"class.blink::MemberBase.1834" }
%"class.blink::MemberBase.1834" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1835" = type { %"class.WTF::HashMap.1838" }
%"class.WTF::HashMap.1838" = type { %"class.WTF::HashTable.1839" }
%"class.WTF::HashTable.1839" = type <{ %"struct.WTF::KeyValuePair.1841"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1841" = type opaque
%"class.blink::Member.1842" = type { %"class.blink::MemberBase.1843" }
%"class.blink::MemberBase.1843" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1844" = type { %"class.std::__1::__compressed_pair.1845" }
%"class.std::__1::__compressed_pair.1845" = type { %"struct.std::__1::__compressed_pair_elem.1846" }
%"struct.std::__1::__compressed_pair_elem.1846" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1850" = type { %"class.blink::MemberBase.1851" }
%"class.blink::MemberBase.1851" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1852" = type { %"class.blink::MemberBase.1853" }
%"class.blink::MemberBase.1853" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1854" = type { %"class.WTF::HashMap.1857" }
%"class.WTF::HashMap.1857" = type { %"class.WTF::HashTable.1858" }
%"class.WTF::HashTable.1858" = type <{ %"struct.WTF::KeyValuePair.1860"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1860" = type opaque
%"class.blink::HeapObserverSet.1861" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1862" }
%"class.blink::HeapHashSet.1862" = type { %"class.WTF::HashSet.1865" }
%"class.WTF::HashSet.1865" = type { %"class.WTF::HashTable.1866" }
%"class.WTF::HashTable.1866" = type <{ %"class.blink::WeakMember.1868"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1868" = type opaque
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1871" = type { %"class.blink::MemberBase.1872" }
%"class.blink::MemberBase.1872" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1556", %"class.blink::HeapHashSet.1878", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1885", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1878" = type { %"class.WTF::HashSet.1881" }
%"class.WTF::HashSet.1881" = type { %"class.WTF::HashTable.1882" }
%"class.WTF::HashTable.1882" = type <{ %"class.blink::Member.1884"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1884" = type opaque
%"class.blink::HeapTaskRunnerTimer.1885" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1886", { i64, i64 } }
%"class.blink::WeakMember.1886" = type { %"class.blink::MemberBase.1872" }
%"class.blink::WeakMember.1873" = type { %"class.blink::MemberBase.1437" }
%"class.blink::MemberBase.1437" = type { %"class.blink::Node"* }
%"class.blink::Member.1874" = type { %"class.blink::MemberBase.1875" }
%"class.blink::MemberBase.1875" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1558" = type { %"class.blink::MemberBase.1559" }
%"class.blink::MemberBase.1559" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1562" }
%"class.blink::HeapHashMap.1562" = type { %"class.WTF::HashMap.1565" }
%"class.WTF::HashMap.1565" = type { %"class.WTF::HashTable.1566" }
%"class.WTF::HashTable.1566" = type <{ %"struct.WTF::KeyValuePair.1568"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1568" = type { %"class.WTF::AtomicString", %"class.blink::Member.1569" }
%"class.blink::Member.1569" = type { %"class.blink::MemberBase.1570" }
%"class.blink::MemberBase.1570" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1434", i32, %"class.blink::HeapVector.1573" }
%"class.blink::Member.1580" = type { %"class.blink::MemberBase.1581" }
%"class.blink::MemberBase.1581" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1582" = type { %"class.blink::MemberBase.1583" }
%"class.blink::MemberBase.1583" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1584" = type { %"class.blink::MemberBase.1585" }
%"class.blink::MemberBase.1585" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1586" }
%"class.blink::Member.1586" = type { %"class.blink::MemberBase.1587" }
%"class.blink::MemberBase.1587" = type { %"class.blink::HeapHashMap.1588"* }
%"class.blink::HeapHashMap.1588" = type opaque
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1591" = type { %"class.WTF::Vector.1594" }
%"class.WTF::Vector.1594" = type { %"class.WTF::VectorBuffer.1595" }
%"class.WTF::VectorBuffer.1595" = type { %"class.WTF::VectorBufferBase.1596" }
%"class.WTF::VectorBufferBase.1596" = type { %"class.blink::Member.1597"*, i32, i32 }
%"class.blink::Member.1440" = type { %"class.blink::MemberBase.1441" }
%"class.blink::MemberBase.1441" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.1436" = type { %"class.blink::MemberBase.1437" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.1444 }
%class.scoped_refptr.1444 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.1445", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1445" = type { %"class.base::RefCounted.1446" }
%"class.base::RefCounted.1446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.1451", %"class.blink::Member.1453", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.1451" = type { %"class.WTF::SingleThreadedBitField.1452" }
%"class.WTF::SingleThreadedBitField.1452" = type { i32 }
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.1455 }
%class.scoped_refptr.1455 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.1456", %"class.WTF::AtomicString", %"class.WTF::Vector.1458" }
%"class.WTF::RefCounted.1456" = type { %"class.base::RefCounted.1457" }
%"class.base::RefCounted.1457" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1458" = type { %"class.WTF::VectorBuffer.1459" }
%"class.WTF::VectorBuffer.1459" = type { %"class.WTF::VectorBufferBase.773", [32 x i8] }
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1464" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1466" = type { %"class.blink::MemberBase.1467" }
%"class.blink::MemberBase.1467" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::CoreProbeSink"* }
%class.scoped_refptr.1470 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1473" = type { %"class.blink::MemberBase.1474" }
%"class.blink::MemberBase.1474" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1477" = type { %"class.blink::Member.1478" }
%"class.blink::Member.1478" = type { %"class.blink::MemberBase.1479" }
%"class.blink::MemberBase.1479" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2497" }
%"class.mojo::Remote.2497" = type { %"class.mojo::internal::InterfacePtrState.2498" }
%"class.mojo::internal::InterfacePtrState.2498" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2499" }
%"class.std::__1::unique_ptr.2499" = type { %"class.std::__1::__compressed_pair.2500" }
%"class.std::__1::__compressed_pair.2500" = type { %"struct.std::__1::__compressed_pair_elem.2501" }
%"struct.std::__1::__compressed_pair_elem.2501" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1480" = type { %"class.std::__1::__compressed_pair.1481" }
%"class.std::__1::__compressed_pair.1481" = type { %"struct.std::__1::__compressed_pair_elem.1482" }
%"struct.std::__1::__compressed_pair_elem.1482" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1483, %"class.blink::WebVector.1485", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1483 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1484", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1484" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector.1485" = type { %"class.std::__1::vector.1486" }
%"class.std::__1::vector.1486" = type { %"class.std::__1::__vector_base.1487" }
%"class.std::__1::__vector_base.1487" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1488" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.1489" }
%"struct.std::__1::__compressed_pair_elem.1489" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1493, i8, [7 x i8] }>
%class.scoped_refptr.1493 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1494", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1494" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1495" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1502" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1503" = type { %"class.std::__1::__compressed_pair.1504" }
%"class.std::__1::__compressed_pair.1504" = type { %"struct.std::__1::__compressed_pair_elem.1505" }
%"struct.std::__1::__compressed_pair_elem.1505" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1509" = type { %"class.std::__1::__compressed_pair.1510" }
%"class.std::__1::__compressed_pair.1510" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"struct.std::__1::__compressed_pair_elem.1511" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1515" }
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2507" }
%"class.mojo::AssociatedRemote.2507" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2508" }
%"class.mojo::internal::AssociatedInterfacePtrState.2508" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2509" }
%"class.std::__1::unique_ptr.2509" = type { %"class.std::__1::__compressed_pair.2510" }
%"class.std::__1::__compressed_pair.2510" = type { %"struct.std::__1::__compressed_pair_elem.2511" }
%"struct.std::__1::__compressed_pair_elem.2511" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1517" = type { %"class.blink::Member.1518" }
%"class.blink::Member.1518" = type { %"class.blink::MemberBase.1519" }
%"class.blink::MemberBase.1519" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2517" }
%"class.mojo::AssociatedRemote.2517" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2518" }
%"class.mojo::internal::AssociatedInterfacePtrState.2518" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2519" }
%"class.std::__1::unique_ptr.2519" = type { %"class.std::__1::__compressed_pair.2520" }
%"class.std::__1::__compressed_pair.2520" = type { %"struct.std::__1::__compressed_pair_elem.2521" }
%"struct.std::__1::__compressed_pair_elem.2521" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1520" }
%"class.blink::Member.1520" = type { %"class.blink::MemberBase.1521" }
%"class.blink::MemberBase.1521" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2527", %"class.blink::Member.1239", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2527" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2528" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.140" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2528" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1522" = type { %"class.blink::Member.1523" }
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2531", %"class.blink::Member.1239", %"class.mojo::AssociatedReceiver.2532" }
%"class.blink::ThreadState::PrefinalizerRegistration.2531" = type { i8 }
%"class.mojo::AssociatedReceiver.2532" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2533" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2533" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1525" }
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1526" }
%"class.blink::MemberBase.1526" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2536", %"class.blink::Member.1239", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2536" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1274, %"class.std::__1::unique_ptr.140", %"class.base::WeakPtrFactory.2537" }
%"class.base::WeakPtrFactory.2537" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1527" = type { %"class.blink::Member.1528" }
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2540", %"class.blink::Member.1239", %"class.mojo::AssociatedReceiver.2541" }
%"class.blink::ThreadState::PrefinalizerRegistration.2540" = type { i8 }
%"class.mojo::AssociatedReceiver.2541" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2542" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2542" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1530" = type { %"class.blink::MemberBase.1531" }
%"class.blink::MemberBase.1531" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1532" = type { %"class.blink::MemberBase.1533" }
%"class.blink::MemberBase.1533" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1534" = type { %"class.blink::MemberBase.1535" }
%"class.blink::MemberBase.1535" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1536" = type { %"class.blink::MemberBase.1537" }
%"class.blink::MemberBase.1537" = type { %"class.blink::HeapHashMap.1538"* }
%"class.blink::HeapHashMap.1538" = type opaque
%"class.mojo::StructPtr.1539" = type { %"class.std::__1::unique_ptr.1540" }
%"class.std::__1::unique_ptr.1540" = type { %"class.std::__1::__compressed_pair.1541" }
%"class.std::__1::__compressed_pair.1541" = type { %"struct.std::__1::__compressed_pair_elem.1542" }
%"struct.std::__1::__compressed_pair_elem.1542" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1543", %"class.mojo::InlinedStructPtr.676" }
%"class.mojo::InlinedStructPtr.1543" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.1547" = type { %"class.blink::MemberBase.1548" }
%"class.blink::MemberBase.1548" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1549" = type { %"class.absl::optional_internal::optional_data.1550" }
%"class.absl::optional_internal::optional_data.1550" = type { %"class.absl::optional_internal::optional_data_base.1551" }
%"class.absl::optional_internal::optional_data_base.1551" = type { %"class.absl::optional_internal::optional_data_dtor_base.1552" }
%"class.absl::optional_internal::optional_data_dtor_base.1552" = type { i8, %union.anon.1553 }
%union.anon.1553 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.1241" = type { %"class.WTF::VectorBuffer.1242" }
%"class.WTF::VectorBuffer.1242" = type { %"class.WTF::VectorBufferBase.1243" }
%"class.WTF::VectorBufferBase.1243" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1246" = type { %"class.WTF::HashMap.1249" }
%"class.WTF::HashMap.1249" = type { %"class.WTF::HashTable.1250" }
%"class.WTF::HashTable.1250" = type <{ %"struct.WTF::KeyValuePair.1252"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1252" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.946" = type { %"class.WTF::ListHashSet.base.956", [7 x i8] }
%"class.WTF::ListHashSet.base.956" = type <{ %"class.WTF::HashTable.951", %"class.blink::Member.953", %"class.blink::Member.953", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.951" = type <{ %"class.blink::Member.953"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::HeapListHashSetNode.955"* }
%"class.blink::HeapListHashSetNode.955" = type { %"class.blink::Member.1231", %"class.blink::Member.953", %"class.blink::Member.953" }
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.957" = type { %"class.WTF::ListHashSet.base.967", [7 x i8] }
%"class.WTF::ListHashSet.base.967" = type <{ %"class.WTF::HashTable.962", %"class.blink::Member.964", %"class.blink::Member.964", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.962" = type <{ %"class.blink::Member.964"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.964" = type { %"class.blink::MemberBase.965" }
%"class.blink::MemberBase.965" = type { %"class.blink::HeapListHashSetNode.966"* }
%"class.blink::HeapListHashSetNode.966" = type { %"class.blink::Member.1227", %"class.blink::Member.964", %"class.blink::Member.964" }
%"class.blink::Member.1227" = type { %"class.blink::MemberBase.1228" }
%"class.blink::MemberBase.1228" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.968" = type { %"class.WTF::ListHashSet.base.978", [7 x i8] }
%"class.WTF::ListHashSet.base.978" = type <{ %"class.WTF::HashTable.973", %"class.blink::Member.975", %"class.blink::Member.975", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.973" = type <{ %"class.blink::Member.975"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::HeapListHashSetNode.977"* }
%"class.blink::HeapListHashSetNode.977" = type { %"class.blink::Member.1223", %"class.blink::Member.975", %"class.blink::Member.975" }
%"class.blink::Member.1223" = type { %"class.blink::MemberBase.1224" }
%"class.blink::MemberBase.1224" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.979" = type { %"class.WTF::ListHashSet.base.989", [7 x i8] }
%"class.WTF::ListHashSet.base.989" = type <{ %"class.WTF::HashTable.984", %"class.blink::Member.986", %"class.blink::Member.986", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.984" = type <{ %"class.blink::Member.986"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::HeapListHashSetNode.988"* }
%"class.blink::HeapListHashSetNode.988" = type { %"class.blink::Member.1219", %"class.blink::Member.986", %"class.blink::Member.986" }
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.990" = type { %"class.WTF::ListHashSet.base.1000", [7 x i8] }
%"class.WTF::ListHashSet.base.1000" = type <{ %"class.WTF::HashTable.995", %"class.blink::Member.997", %"class.blink::Member.997", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.995" = type <{ %"class.blink::Member.997"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::HeapListHashSetNode.999"* }
%"class.blink::HeapListHashSetNode.999" = type { %"class.blink::Member.1215", %"class.blink::Member.997", %"class.blink::Member.997" }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1001" = type { %"class.WTF::ListHashSet.base.1011", [7 x i8] }
%"class.WTF::ListHashSet.base.1011" = type <{ %"class.WTF::HashTable.1006", %"class.blink::Member.1008", %"class.blink::Member.1008", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1006" = type <{ %"class.blink::Member.1008"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::HeapListHashSetNode.1010"* }
%"class.blink::HeapListHashSetNode.1010" = type { %"class.blink::Member.1211", %"class.blink::Member.1008", %"class.blink::Member.1008" }
%"class.blink::Member.1211" = type { %"class.blink::MemberBase.1212" }
%"class.blink::MemberBase.1212" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1012" = type { %"class.WTF::ListHashSet.base.1022", [7 x i8] }
%"class.WTF::ListHashSet.base.1022" = type <{ %"class.WTF::HashTable.1017", %"class.blink::Member.1019", %"class.blink::Member.1019", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1017" = type <{ %"class.blink::Member.1019"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1019" = type { %"class.blink::MemberBase.1020" }
%"class.blink::MemberBase.1020" = type { %"class.blink::HeapListHashSetNode.1021"* }
%"class.blink::HeapListHashSetNode.1021" = type { %"class.blink::Member.1207", %"class.blink::Member.1019", %"class.blink::Member.1019" }
%"class.blink::Member.1207" = type { %"class.blink::MemberBase.1208" }
%"class.blink::MemberBase.1208" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1023" = type { %"class.WTF::ListHashSet.base.1033", [7 x i8] }
%"class.WTF::ListHashSet.base.1033" = type <{ %"class.WTF::HashTable.1028", %"class.blink::Member.1030", %"class.blink::Member.1030", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1028" = type <{ %"class.blink::Member.1030"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::HeapListHashSetNode.1032"* }
%"class.blink::HeapListHashSetNode.1032" = type { %"class.blink::Member.1203", %"class.blink::Member.1030", %"class.blink::Member.1030" }
%"class.blink::Member.1203" = type { %"class.blink::MemberBase.1204" }
%"class.blink::MemberBase.1204" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1034" = type { %"class.WTF::ListHashSet.base.1044", [7 x i8] }
%"class.WTF::ListHashSet.base.1044" = type <{ %"class.WTF::HashTable.1039", %"class.blink::Member.1041", %"class.blink::Member.1041", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1039" = type <{ %"class.blink::Member.1041"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1041" = type { %"class.blink::MemberBase.1042" }
%"class.blink::MemberBase.1042" = type { %"class.blink::HeapListHashSetNode.1043"* }
%"class.blink::HeapListHashSetNode.1043" = type { %"class.blink::Member.1199", %"class.blink::Member.1041", %"class.blink::Member.1041" }
%"class.blink::Member.1199" = type { %"class.blink::MemberBase.1200" }
%"class.blink::MemberBase.1200" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1045" = type { %"class.WTF::ListHashSet.base.1055", [7 x i8] }
%"class.WTF::ListHashSet.base.1055" = type <{ %"class.WTF::HashTable.1050", %"class.blink::Member.1052", %"class.blink::Member.1052", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1050" = type <{ %"class.blink::Member.1052"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::HeapListHashSetNode.1054"* }
%"class.blink::HeapListHashSetNode.1054" = type { %"class.blink::Member.1195", %"class.blink::Member.1052", %"class.blink::Member.1052" }
%"class.blink::HeapListHashSet.1056" = type { %"class.WTF::ListHashSet.base.1066", [7 x i8] }
%"class.WTF::ListHashSet.base.1066" = type <{ %"class.WTF::HashTable.1061", %"class.blink::Member.1063", %"class.blink::Member.1063", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1061" = type <{ %"class.blink::Member.1063"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::HeapListHashSetNode.1065"* }
%"class.blink::HeapListHashSetNode.1065" = type { %"class.blink::Member.1191", %"class.blink::Member.1063", %"class.blink::Member.1063" }
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1067" = type { %"class.WTF::ListHashSet.base.1077", [7 x i8] }
%"class.WTF::ListHashSet.base.1077" = type <{ %"class.WTF::HashTable.1072", %"class.blink::Member.1074", %"class.blink::Member.1074", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1072" = type <{ %"class.blink::Member.1074"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::HeapListHashSetNode.1076"* }
%"class.blink::HeapListHashSetNode.1076" = type { %"class.blink::Member.1187", %"class.blink::Member.1074", %"class.blink::Member.1074" }
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1078" = type { %"class.WTF::ListHashSet.base.1088", [7 x i8] }
%"class.WTF::ListHashSet.base.1088" = type <{ %"class.WTF::HashTable.1083", %"class.blink::Member.1085", %"class.blink::Member.1085", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1083" = type <{ %"class.blink::Member.1085"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1085" = type { %"class.blink::MemberBase.1086" }
%"class.blink::MemberBase.1086" = type { %"class.blink::HeapListHashSetNode.1087"* }
%"class.blink::HeapListHashSetNode.1087" = type { %"class.blink::Member.1183", %"class.blink::Member.1085", %"class.blink::Member.1085" }
%"class.blink::Member.1183" = type { %"class.blink::MemberBase.1184" }
%"class.blink::MemberBase.1184" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1089" = type { %"class.WTF::ListHashSet.base.1099", [7 x i8] }
%"class.WTF::ListHashSet.base.1099" = type <{ %"class.WTF::HashTable.1094", %"class.blink::Member.1096", %"class.blink::Member.1096", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1094" = type <{ %"class.blink::Member.1096"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::HeapListHashSetNode.1098"* }
%"class.blink::HeapListHashSetNode.1098" = type { %"class.blink::Member.1179", %"class.blink::Member.1096", %"class.blink::Member.1096" }
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1100" = type { %"class.WTF::ListHashSet.base.1110", [7 x i8] }
%"class.WTF::ListHashSet.base.1110" = type <{ %"class.WTF::HashTable.1105", %"class.blink::Member.1107", %"class.blink::Member.1107", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1105" = type <{ %"class.blink::Member.1107"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::HeapListHashSetNode.1109"* }
%"class.blink::HeapListHashSetNode.1109" = type { %"class.blink::Member.1175", %"class.blink::Member.1107", %"class.blink::Member.1107" }
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1111" = type { %"class.WTF::ListHashSet.base.1121", [7 x i8] }
%"class.WTF::ListHashSet.base.1121" = type <{ %"class.WTF::HashTable.1116", %"class.blink::Member.1118", %"class.blink::Member.1118", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1116" = type <{ %"class.blink::Member.1118"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1118" = type { %"class.blink::MemberBase.1119" }
%"class.blink::MemberBase.1119" = type { %"class.blink::HeapListHashSetNode.1120"* }
%"class.blink::HeapListHashSetNode.1120" = type { %"class.blink::Member.1171", %"class.blink::Member.1118", %"class.blink::Member.1118" }
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1122" = type { %"class.WTF::ListHashSet.base.1132", [7 x i8] }
%"class.WTF::ListHashSet.base.1132" = type <{ %"class.WTF::HashTable.1127", %"class.blink::Member.1129", %"class.blink::Member.1129", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1127" = type <{ %"class.blink::Member.1129"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::HeapListHashSetNode.1131"* }
%"class.blink::HeapListHashSetNode.1131" = type { %"class.blink::Member.1167", %"class.blink::Member.1129", %"class.blink::Member.1129" }
%"class.blink::Member.1167" = type { %"class.blink::MemberBase.1168" }
%"class.blink::MemberBase.1168" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1133" = type { %"class.WTF::ListHashSet.base.1143", [7 x i8] }
%"class.WTF::ListHashSet.base.1143" = type <{ %"class.WTF::HashTable.1138", %"class.blink::Member.1140", %"class.blink::Member.1140", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1138" = type <{ %"class.blink::Member.1140"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1140" = type { %"class.blink::MemberBase.1141" }
%"class.blink::MemberBase.1141" = type { %"class.blink::HeapListHashSetNode.1142"* }
%"class.blink::HeapListHashSetNode.1142" = type { %"class.blink::Member.1163", %"class.blink::Member.1140", %"class.blink::Member.1140" }
%"class.blink::HeapListHashSet.1144" = type { %"class.WTF::ListHashSet.base.1154", [7 x i8] }
%"class.WTF::ListHashSet.base.1154" = type <{ %"class.WTF::HashTable.1149", %"class.blink::Member.1151", %"class.blink::Member.1151", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1149" = type <{ %"class.blink::Member.1151"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::HeapListHashSetNode.1153"* }
%"class.blink::HeapListHashSetNode.1153" = type { %"class.blink::Member.1159", %"class.blink::Member.1151", %"class.blink::Member.1151" }
%"class.blink::ResourceLoadObserverForWorker" = type { %"class.blink::ResourceLoadObserver", %"class.blink::Member.935", %"class.blink::Member.594", %"class.blink::Member.1155", %"class.base::UnguessableToken" }
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::WorkerFetchContext"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.160", [4 x i8] }>
%"class.blink::NullResourceFetcherProperties" = type { %"class.blink::ResourceFetcherProperties", %"class.blink::Member.596" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::WorkerThread" = type { %"class.base::TaskObserver", %"class.base::TimeTicks", i32, i8, i32, i32, %"class.base::TimeDelta", %class.scoped_refptr.1470, %"class.base::UnguessableToken", %"class.blink::InspectorIssueStorage", i32, %"class.blink::WorkerReportingProxy"*, %class.scoped_refptr.608, %"class.std::__1::unique_ptr.2367", %"class.WTF::HashMap.2386", %"class.WTF::Mutex", i32, %"class.blink::Platform::NestedMessageLoopRunner"*, %"class.blink::CrossThreadPersistent.2391", %"class.blink::CrossThreadPersistent.2393", %"class.blink::CrossThreadPersistent.2395", %class.scoped_refptr.2397, %"class.blink::TaskHandle", %"class.WTF::HashSet.2398", %"class.WTF::HashSet.2402" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2155" }
%"class.WTF::Deque.2155" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2158" }
%"class.WTF::VectorBuffer.2158" = type { %"class.WTF::VectorBufferBase.2159" }
%"class.WTF::VectorBufferBase.2159" = type { %"class.std::__1::unique_ptr.2160"*, i32, i32 }
%"class.std::__1::unique_ptr.2160" = type { %"class.std::__1::__compressed_pair.2161" }
%"class.std::__1::__compressed_pair.2161" = type { %"struct.std::__1::__compressed_pair_elem.2162" }
%"struct.std::__1::__compressed_pair_elem.2162" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.2163" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2163" = type { %"class.std::__1::__compressed_pair.2164" }
%"class.std::__1::__compressed_pair.2164" = type { %"struct.std::__1::__compressed_pair_elem.2165" }
%"struct.std::__1::__compressed_pair_elem.2165" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.2166", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.2211", %"class.crdtp::detail::PtrMaybe.2231", %"class.crdtp::detail::PtrMaybe.2241", %"class.crdtp::detail::PtrMaybe.2251", %"class.crdtp::detail::PtrMaybe.2272", %"class.crdtp::detail::PtrMaybe.2282", %"class.crdtp::detail::PtrMaybe.2292", %"class.crdtp::detail::PtrMaybe.2302", %"class.crdtp::detail::PtrMaybe.2331", %"class.crdtp::detail::PtrMaybe.2341", %"class.crdtp::detail::PtrMaybe.2351" }
%"class.crdtp::ProtocolObject.2166" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.2169" }
%"class.std::__1::unique_ptr.2169" = type { %"class.std::__1::__compressed_pair.2170" }
%"class.std::__1::__compressed_pair.2170" = type { %"struct.std::__1::__compressed_pair_elem.2171" }
%"struct.std::__1::__compressed_pair_elem.2171" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.2172", %"class.crdtp::detail::PtrMaybe.2175", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.2185", %"class.std::__1::unique_ptr.2185", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.2198" }
%"class.crdtp::ProtocolObject.2172" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2175" = type { %"class.std::__1::unique_ptr.2176" }
%"class.std::__1::unique_ptr.2176" = type { %"class.std::__1::__compressed_pair.2177" }
%"class.std::__1::__compressed_pair.2177" = type { %"struct.std::__1::__compressed_pair_elem.2178" }
%"struct.std::__1::__compressed_pair_elem.2178" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.2179", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2179" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2185" = type { %"class.std::__1::__compressed_pair.2186" }
%"class.std::__1::__compressed_pair.2186" = type { %"struct.std::__1::__compressed_pair_elem.2187" }
%"struct.std::__1::__compressed_pair_elem.2187" = type { %"class.std::__1::vector.2188"* }
%"class.std::__1::vector.2188" = type { %"class.std::__1::__vector_base.2189" }
%"class.std::__1::__vector_base.2189" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.2190" }
%"class.std::__1::__compressed_pair.2190" = type { %"struct.std::__1::__compressed_pair_elem.2191" }
%"struct.std::__1::__compressed_pair_elem.2191" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.2198" = type { %"class.std::__1::unique_ptr.2199" }
%"class.std::__1::unique_ptr.2199" = type { %"class.std::__1::__compressed_pair.2200" }
%"class.std::__1::__compressed_pair.2200" = type { %"struct.std::__1::__compressed_pair_elem.2201" }
%"struct.std::__1::__compressed_pair_elem.2201" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.2202", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.2202" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2211" = type { %"class.std::__1::unique_ptr.2212" }
%"class.std::__1::unique_ptr.2212" = type { %"class.std::__1::__compressed_pair.2213" }
%"class.std::__1::__compressed_pair.2213" = type { %"struct.std::__1::__compressed_pair_elem.2214" }
%"struct.std::__1::__compressed_pair_elem.2214" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.2215", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.2198", %"class.crdtp::detail::PtrMaybe.2218" }
%"class.crdtp::ProtocolObject.2215" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2218" = type { %"class.std::__1::unique_ptr.2219" }
%"class.std::__1::unique_ptr.2219" = type { %"class.std::__1::__compressed_pair.2220" }
%"class.std::__1::__compressed_pair.2220" = type { %"struct.std::__1::__compressed_pair_elem.2221" }
%"struct.std::__1::__compressed_pair_elem.2221" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.2222", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2222" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2231" = type { %"class.std::__1::unique_ptr.2232" }
%"class.std::__1::unique_ptr.2232" = type { %"class.std::__1::__compressed_pair.2233" }
%"class.std::__1::__compressed_pair.2233" = type { %"struct.std::__1::__compressed_pair_elem.2234" }
%"struct.std::__1::__compressed_pair_elem.2234" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.2235", %"class.std::__1::unique_ptr.2199", %"class.crdtp::detail::PtrMaybe.2218", %"class.crdtp::detail::PtrMaybe.2218", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2235" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2241" = type { %"class.std::__1::unique_ptr.2242" }
%"class.std::__1::unique_ptr.2242" = type { %"class.std::__1::__compressed_pair.2243" }
%"class.std::__1::__compressed_pair.2243" = type { %"struct.std::__1::__compressed_pair_elem.2244" }
%"struct.std::__1::__compressed_pair_elem.2244" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.2245", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.2219" }
%"class.crdtp::ProtocolObject.2245" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2251" = type { %"class.std::__1::unique_ptr.2252" }
%"class.std::__1::unique_ptr.2252" = type { %"class.std::__1::__compressed_pair.2253" }
%"class.std::__1::__compressed_pair.2253" = type { %"struct.std::__1::__compressed_pair_elem.2254" }
%"struct.std::__1::__compressed_pair_elem.2254" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.2255", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.2218", %"class.crdtp::detail::PtrMaybe.2258", %"class.crdtp::detail::ValueMaybe.2268" }
%"class.crdtp::ProtocolObject.2255" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2258" = type { %"class.std::__1::unique_ptr.2259" }
%"class.std::__1::unique_ptr.2259" = type { %"class.std::__1::__compressed_pair.2260" }
%"class.std::__1::__compressed_pair.2260" = type { %"struct.std::__1::__compressed_pair_elem.2261" }
%"struct.std::__1::__compressed_pair_elem.2261" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.2262", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.2262" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.2268" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.2272" = type { %"class.std::__1::unique_ptr.2273" }
%"class.std::__1::unique_ptr.2273" = type { %"class.std::__1::__compressed_pair.2274" }
%"class.std::__1::__compressed_pair.2274" = type { %"struct.std::__1::__compressed_pair_elem.2275" }
%"struct.std::__1::__compressed_pair_elem.2275" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.2276", %"class.std::__1::unique_ptr.2259", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2276" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2282" = type { %"class.std::__1::unique_ptr.2283" }
%"class.std::__1::unique_ptr.2283" = type { %"class.std::__1::__compressed_pair.2284" }
%"class.std::__1::__compressed_pair.2284" = type { %"struct.std::__1::__compressed_pair_elem.2285" }
%"struct.std::__1::__compressed_pair_elem.2285" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.2286", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.2268", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.2286" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2292" = type { %"class.std::__1::unique_ptr.2293" }
%"class.std::__1::unique_ptr.2293" = type { %"class.std::__1::__compressed_pair.2294" }
%"class.std::__1::__compressed_pair.2294" = type { %"struct.std::__1::__compressed_pair_elem.2295" }
%"struct.std::__1::__compressed_pair_elem.2295" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.2296", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2296" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2302" = type { %"class.std::__1::unique_ptr.2303" }
%"class.std::__1::unique_ptr.2303" = type { %"class.std::__1::__compressed_pair.2304" }
%"class.std::__1::__compressed_pair.2304" = type { %"struct.std::__1::__compressed_pair_elem.2305" }
%"struct.std::__1::__compressed_pair_elem.2305" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.2306", %"class.std::__1::unique_ptr.2309", i8, %"class.std::__1::unique_ptr.2199", %"class.crdtp::detail::PtrMaybe.2258", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.2318" }
%"class.crdtp::ProtocolObject.2306" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2309" = type { %"class.std::__1::__compressed_pair.2310" }
%"class.std::__1::__compressed_pair.2310" = type { %"struct.std::__1::__compressed_pair_elem.2311" }
%"struct.std::__1::__compressed_pair_elem.2311" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.2312", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2312" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2318" = type { %"class.std::__1::unique_ptr.2319" }
%"class.std::__1::unique_ptr.2319" = type { %"class.std::__1::__compressed_pair.2320" }
%"class.std::__1::__compressed_pair.2320" = type { %"struct.std::__1::__compressed_pair_elem.2321" }
%"struct.std::__1::__compressed_pair_elem.2321" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.2322", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2322" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2331" = type { %"class.std::__1::unique_ptr.2332" }
%"class.std::__1::unique_ptr.2332" = type { %"class.std::__1::__compressed_pair.2333" }
%"class.std::__1::__compressed_pair.2333" = type { %"struct.std::__1::__compressed_pair_elem.2334" }
%"struct.std::__1::__compressed_pair_elem.2334" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.2335", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.2218", %"class.crdtp::detail::PtrMaybe.2198", %"class.crdtp::detail::ValueMaybe.2268", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.2335" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2341" = type { %"class.std::__1::unique_ptr.2342" }
%"class.std::__1::unique_ptr.2342" = type { %"class.std::__1::__compressed_pair.2343" }
%"class.std::__1::__compressed_pair.2343" = type { %"struct.std::__1::__compressed_pair_elem.2344" }
%"struct.std::__1::__compressed_pair_elem.2344" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.2345", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2345" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2351" = type { %"class.std::__1::unique_ptr.2352" }
%"class.std::__1::unique_ptr.2352" = type { %"class.std::__1::__compressed_pair.2353" }
%"class.std::__1::__compressed_pair.2353" = type { %"struct.std::__1::__compressed_pair_elem.2354" }
%"struct.std::__1::__compressed_pair_elem.2354" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.2355", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.2258" }
%"class.crdtp::ProtocolObject.2355" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2367" = type { %"class.std::__1::__compressed_pair.2368" }
%"class.std::__1::__compressed_pair.2368" = type { %"struct.std::__1::__compressed_pair_elem.2369" }
%"struct.std::__1::__compressed_pair_elem.2369" = type { %"class.blink::scheduler::WorkerScheduler"* }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.2370, %class.scoped_refptr.2370, %class.scoped_refptr.2370, %"class.std::__1::map.2371", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.2382" }
%class.scoped_refptr.2370 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type opaque
%"class.std::__1::map.2371" = type { %"class.std::__1::__tree.2372" }
%"class.std::__1::__tree.2372" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2373", %"class.std::__1::__compressed_pair.2377" }
%"class.std::__1::__compressed_pair.2373" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.2377" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.blink::scheduler::WorkerThreadScheduler" = type opaque
%"class.base::WeakPtrFactory.2382" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::HashMap.2386" = type { %"class.WTF::HashTable.2387" }
%"class.WTF::HashTable.2387" = type <{ %"struct.WTF::KeyValuePair.2390"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2390" = type opaque
%"class.blink::Platform::NestedMessageLoopRunner" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent.2391" = type { %"class.blink::PersistentBase.2392" }
%"class.blink::PersistentBase.2392" = type { %"class.blink::ConsoleMessageStorage"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::CrossThreadPersistent.2393" = type { %"class.blink::PersistentBase.2394" }
%"class.blink::PersistentBase.2394" = type { %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistent.2395" = type { %"class.blink::PersistentBase.2396" }
%"class.blink::PersistentBase.2396" = type { %"class.blink::WorkerInspectorController"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerInspectorController" = type opaque
%class.scoped_refptr.2397 = type { %"class.blink::WorkerThread::RefCountedWaitableEvent"* }
%"class.blink::WorkerThread::RefCountedWaitableEvent" = type opaque
%"class.WTF::HashSet.2398" = type { %"class.WTF::HashTable.2399" }
%"class.WTF::HashTable.2399" = type <{ %"class.blink::WorkerThread"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.2402" = type { %"class.WTF::HashTable.2403" }
%"class.WTF::HashTable.2403" = type <{ %"class.std::__1::unique_ptr.2406"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2406" = type opaque
%"class.blink::FetchClientSettingsObjectSnapshot" = type { %"class.blink::FetchClientSettingsObject", %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.24, i32, %"class.WTF::String", i32, i32, i32, i32, %"class.WTF::HashSet.61" }
%"class.blink::ModuleTreeClient" = type { %"class.blink::NameClient" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.814", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.813", [6 x i8] }>
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.2414", %"class.blink::Member.2414", %"class.blink::Member.2416", %"class.blink::Member.2418", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.2409" }
%"class.absl::optional.2409" = type { %"class.absl::optional_internal::optional_data.2410" }
%"class.absl::optional_internal::optional_data.2410" = type { %"class.absl::optional_internal::optional_data_base.2411" }
%"class.absl::optional_internal::optional_data_base.2411" = type { %"class.absl::optional_internal::optional_data_dtor_base.2412" }
%"class.absl::optional_internal::optional_data_dtor_base.2412" = type { i8, %union.anon.2413 }
%union.anon.2413 = type { i64 }
%"class.blink::Member.2414" = type { %"class.blink::MemberBase.2415" }
%"class.blink::MemberBase.2415" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.2416" = type { %"class.blink::MemberBase.2417" }
%"class.blink::MemberBase.2417" = type { %"class.blink::Event"* }
%"class.blink::Member.2418" = type { %"class.blink::MemberBase.2419" }
%"class.blink::MemberBase.2419" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2420", i8, [7 x i8] }>
%"class.blink::Member.2420" = type { %"class.blink::MemberBase.2421" }
%"class.blink::MemberBase.2421" = type { %"class.blink::EventListener"* }
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.2422", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.2422" = type { %"class.std::__1::__vector_base.2423" }
%"class.std::__1::__vector_base.2423" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.2424" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2424" = type { %"struct.std::__1::__compressed_pair_elem.2425" }
%"struct.std::__1::__compressed_pair_elem.2425" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.absl::optional.2429" = type { %"class.absl::optional_internal::optional_data.2430" }
%"class.absl::optional_internal::optional_data.2430" = type { %"class.absl::optional_internal::optional_data_base.2431" }
%"class.absl::optional_internal::optional_data_base.2431" = type { %"class.absl::optional_internal::optional_data_dtor_base.2432" }
%"class.absl::optional_internal::optional_data_dtor_base.2432" = type { i8, [7 x i8], %union.anon.2433 }
%union.anon.2433 = type { %"class.blink::MultiToken.2434" }
%"class.blink::MultiToken.2434" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.2577", %"class.blink::FreeList", %"class.WTF::Vector.2582" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.2576" }
%"struct.std::__1::array.2576" = type { [256 x i8] }
%"class.WTF::Vector.2577" = type { %"class.WTF::VectorBuffer.2578" }
%"class.WTF::VectorBuffer.2578" = type { %"class.WTF::VectorBufferBase.2579" }
%"class.WTF::VectorBufferBase.2579" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.2582" = type { %"class.WTF::VectorBuffer.2583" }
%"class.WTF::VectorBuffer.2583" = type { %"class.WTF::VectorBufferBase.2584" }
%"class.WTF::VectorBufferBase.2584" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::HeapHashTableBacking.2630" = type { i8 }
%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate" = type { %"class.blink::ContentSecurityPolicyDelegate", %"class.blink::Member.596", %"class.blink::Member.613", %"class.blink::Member.505" }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2690", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2690" = type { %"class.std::__1::__compressed_pair.2691" }
%"class.std::__1::__compressed_pair.2691" = type { %"struct.std::__1::__compressed_pair_elem.2692" }
%"struct.std::__1::__compressed_pair_elem.2692" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::SecurityPolicyViolationEventInit" = type opaque
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2687", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.2706", %"class.WTF::Vector.2707" }
%"class.std::__1::unique_ptr.2687" = type { %"class.std::__1::__compressed_pair.2688" }
%"class.std::__1::__compressed_pair.2688" = type { %"struct.std::__1::__compressed_pair_elem.2689" }
%"struct.std::__1::__compressed_pair_elem.2689" = type { %"class.blink::SourceLocation"* }
%"class.blink::WeakMember.2706" = type { %"class.blink::MemberBase.1240" }
%"class.WTF::Vector.2707" = type { %"class.WTF::VectorBuffer.2708" }
%"class.WTF::VectorBuffer.2708" = type { %"class.WTF::VectorBufferBase.2057" }
%"class.mojo::StructPtr.2711" = type { %"class.std::__1::unique_ptr.2712" }
%"class.std::__1::unique_ptr.2712" = type { %"class.std::__1::__compressed_pair.2713" }
%"class.std::__1::__compressed_pair.2713" = type { %"struct.std::__1::__compressed_pair_elem.2714" }
%"struct.std::__1::__compressed_pair_elem.2714" = type { %"class.blink::mojom::blink::InspectorIssueInfo"* }
%"class.blink::mojom::blink::InspectorIssueInfo" = type { i32, %"class.mojo::StructPtr.2715" }
%"class.mojo::StructPtr.2715" = type { %"class.std::__1::unique_ptr.2716" }
%"class.std::__1::unique_ptr.2716" = type { %"class.std::__1::__compressed_pair.2717" }
%"class.std::__1::__compressed_pair.2717" = type { %"struct.std::__1::__compressed_pair_elem.2718" }
%"struct.std::__1::__compressed_pair_elem.2718" = type { %"class.blink::mojom::blink::InspectorIssueDetails"* }
%"class.blink::mojom::blink::InspectorIssueDetails" = type { %"class.mojo::StructPtr.2719", %"class.mojo::StructPtr.2745", %"class.mojo::StructPtr.2754", %"class.mojo::StructPtr.2761", %"class.mojo::StructPtr.2770", %"class.mojo::StructPtr.2777", %"class.mojo::StructPtr.2784", %"class.mojo::StructPtr.2791" }
%"class.mojo::StructPtr.2719" = type { %"class.std::__1::unique_ptr.2720" }
%"class.std::__1::unique_ptr.2720" = type { %"class.std::__1::__compressed_pair.2721" }
%"class.std::__1::__compressed_pair.2721" = type { %"struct.std::__1::__compressed_pair_elem.2722" }
%"struct.std::__1::__compressed_pair_elem.2722" = type { %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* }
%"class.blink::mojom::blink::SameSiteCookieIssueDetails" = type { %"class.mojo::InlinedStructPtr.2723", %"class.WTF::Vector.2725", %"class.WTF::Vector.2730", i32, %"class.absl::optional.2735", %"class.absl::optional.2735", %"class.mojo::InlinedStructPtr.2740" }
%"class.mojo::InlinedStructPtr.2723" = type <{ %"class.blink::mojom::blink::AffectedCookie", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedCookie" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector.2725" = type { %"class.WTF::VectorBuffer.2726" }
%"class.WTF::VectorBuffer.2726" = type { %"class.WTF::VectorBufferBase.2727" }
%"class.WTF::VectorBufferBase.2727" = type { i32*, i32, i32 }
%"class.WTF::Vector.2730" = type { %"class.WTF::VectorBuffer.2731" }
%"class.WTF::VectorBuffer.2731" = type { %"class.WTF::VectorBufferBase.2732" }
%"class.WTF::VectorBufferBase.2732" = type { i32*, i32, i32 }
%"class.absl::optional.2735" = type { %"class.absl::optional_internal::optional_data.2736" }
%"class.absl::optional_internal::optional_data.2736" = type { %"class.absl::optional_internal::optional_data_base.2737" }
%"class.absl::optional_internal::optional_data_base.2737" = type { %"class.absl::optional_internal::optional_data_dtor_base.2738" }
%"class.absl::optional_internal::optional_data_dtor_base.2738" = type { i8, %union.anon.2739 }
%union.anon.2739 = type { %"class.blink::KURL" }
%"class.mojo::InlinedStructPtr.2740" = type <{ %"class.blink::mojom::blink::AffectedRequest", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedRequest" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.2745" = type { %"class.std::__1::unique_ptr.2746" }
%"class.std::__1::unique_ptr.2746" = type { %"class.std::__1::__compressed_pair.2747" }
%"class.std::__1::__compressed_pair.2747" = type { %"struct.std::__1::__compressed_pair_elem.2748" }
%"struct.std::__1::__compressed_pair_elem.2748" = type { %"class.blink::mojom::blink::MixedContentIssueDetails"* }
%"class.blink::mojom::blink::MixedContentIssueDetails" = type { i32, i32, %"class.WTF::String", %"class.WTF::String", %"class.mojo::InlinedStructPtr.2740", %"class.mojo::InlinedStructPtr.2749" }
%"class.mojo::InlinedStructPtr.2749" = type <{ %"class.blink::mojom::blink::AffectedFrame", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedFrame" = type { %"class.WTF::String" }
%"class.mojo::StructPtr.2754" = type { %"class.std::__1::unique_ptr.2755" }
%"class.std::__1::unique_ptr.2755" = type { %"class.std::__1::__compressed_pair.2756" }
%"class.std::__1::__compressed_pair.2756" = type { %"struct.std::__1::__compressed_pair_elem.2757" }
%"struct.std::__1::__compressed_pair_elem.2757" = type { %"class.blink::mojom::blink::BlockedByResponseIssueDetails"* }
%"class.blink::mojom::blink::BlockedByResponseIssueDetails" = type { %"class.mojo::InlinedStructPtr.2740", %"class.mojo::InlinedStructPtr.2749", %"class.mojo::InlinedStructPtr.2749", i32, [4 x i8] }
%"class.mojo::StructPtr.2761" = type { %"class.std::__1::unique_ptr.2762" }
%"class.std::__1::unique_ptr.2762" = type { %"class.std::__1::__compressed_pair.2763" }
%"class.std::__1::__compressed_pair.2763" = type { %"struct.std::__1::__compressed_pair_elem.2764" }
%"struct.std::__1::__compressed_pair_elem.2764" = type { %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* }
%"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails" = type <{ %"class.absl::optional.2735", %"class.WTF::String", i8, [3 x i8], i32, %"class.mojo::InlinedStructPtr.2749", %"class.mojo::InlinedStructPtr.2765", i32, [4 x i8] }>
%"class.mojo::InlinedStructPtr.2765" = type <{ %"class.blink::mojom::blink::AffectedLocation", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedLocation" = type { %"class.WTF::String", %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.2770" = type { %"class.std::__1::unique_ptr.2771" }
%"class.std::__1::unique_ptr.2771" = type { %"class.std::__1::__compressed_pair.2772" }
%"class.std::__1::__compressed_pair.2772" = type { %"struct.std::__1::__compressed_pair_elem.2773" }
%"struct.std::__1::__compressed_pair_elem.2773" = type { %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* }
%"class.blink::mojom::blink::SharedArrayBufferIssueDetails" = type { %"class.mojo::InlinedStructPtr.2765", i8, i32 }
%"class.mojo::StructPtr.2777" = type { %"class.std::__1::unique_ptr.2778" }
%"class.std::__1::unique_ptr.2778" = type { %"class.std::__1::__compressed_pair.2779" }
%"class.std::__1::__compressed_pair.2779" = type { %"struct.std::__1::__compressed_pair_elem.2780" }
%"struct.std::__1::__compressed_pair_elem.2780" = type { %"class.blink::mojom::blink::TrustedWebActivityIssueDetails"* }
%"class.blink::mojom::blink::TrustedWebActivityIssueDetails" = type { %"class.blink::KURL", i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.2784" = type { %"class.std::__1::unique_ptr.2785" }
%"class.std::__1::unique_ptr.2785" = type { %"class.std::__1::__compressed_pair.2786" }
%"class.std::__1::__compressed_pair.2786" = type { %"struct.std::__1::__compressed_pair_elem.2787" }
%"struct.std::__1::__compressed_pair_elem.2787" = type { %"class.blink::mojom::blink::HeavyAdIssueDetails"* }
%"class.blink::mojom::blink::HeavyAdIssueDetails" = type { i32, i32, %"class.mojo::InlinedStructPtr.2749" }
%"class.mojo::StructPtr.2791" = type { %"class.std::__1::unique_ptr.2792" }
%"class.std::__1::unique_ptr.2792" = type { %"class.std::__1::__compressed_pair.2793" }
%"class.std::__1::__compressed_pair.2793" = type { %"struct.std::__1::__compressed_pair_elem.2794" }
%"struct.std::__1::__compressed_pair_elem.2794" = type { %"class.blink::mojom::blink::LowTextContrastIssue"* }
%"class.blink::mojom::blink::LowTextContrastIssue" = type { i32, %"class.WTF::String", float, float, float, %"class.WTF::String", %"class.WTF::String" }

$_ZN5blink18ScriptFetchOptionsD2Ev = comdat any

$_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink11EventTarget18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZNK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv = comdat any

$_ZNK5blink26WorkerOrWorkletGlobalScope9navigatorEv = comdat any

$_ZNK5blink26WorkerOrWorkletGlobalScope41ShouldRejectCoepUnsafeNoneTopModuleScriptEv = comdat any

$_ZNK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv = comdat any

$_ZNK5blink16ExecutionContext8IsWindowEv = comdat any

$_ZThn72_NK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext19IsWorkerGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext20IsWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext30IsMainThreadWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext28IsDedicatedWorkerGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext25IsSharedWorkerGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext26IsServiceWorkerGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext29IsAnimationWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext25IsAudioWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext26IsLayoutWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext25IsPaintWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext28IsThreadedWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext15IsContextThreadEv = comdat any

$_ZNK5blink16ExecutionContext25ShouldInstallV8ExtensionsEv = comdat any

$_ZNK5blink16ExecutionContext20GetUserAgentMetadataEv = comdat any

$_ZThn72_NK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv = comdat any

$_ZN5blink16ExecutionContext29HasInsecureContextInAncestorsEv = comdat any

$_ZN5blink16ExecutionContext12GetProbeSinkEv = comdat any

$_ZNK5blink16ExecutionContext15GetTrustedTypesEv = comdat any

$_ZNK5blink16ExecutionContext32ReportPermissionsPolicyViolationENS_5mojom24PermissionsPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringE = comdat any

$_ZNK5blink16ExecutionContext29ReportDocumentPolicyViolationENS_5mojom21DocumentPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringES7_ = comdat any

$_ZN5blink16ExecutionContext11UkmRecorderEv = comdat any

$_ZNK5blink16ExecutionContext11UkmSourceIDEv = comdat any

$_ZNK5blink16ExecutionContext30GetParentExecutionContextTokenEv = comdat any

$_ZN5blink16ExecutionContext17ToScriptWrappableEv = comdat any

$_ZN5blink25EventTargetWithInlineDataD2Ev = comdat any

$_ZN5blink25EventTargetWithInlineDataD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12FetchContextEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_12FetchContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_12FetchContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_12FetchContextEE7GetNameEPKv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13WorkerClientsELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_13WorkerClientsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_13WorkerClientsEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_13WorkerClientsEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_31WorkerOrWorkletScriptControllerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_31WorkerOrWorkletScriptControllerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_31WorkerOrWorkletScriptControllerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_31WorkerOrWorkletScriptControllerEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17SubresourceFilterEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17SubresourceFilterEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17SubresourceFilterEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17SubresourceFilterEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_25FetchClientSettingsObjectEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_25FetchClientSettingsObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_25FetchClientSettingsObjectEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_25FetchClientSettingsObjectEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_25ResourceFetcherPropertiesEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_25ResourceFetcherPropertiesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_25ResourceFetcherPropertiesEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_25ResourceFetcherPropertiesEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ResourceFetcher13LoaderFactoryEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ResourceFetcher13LoaderFactoryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ResourceFetcher13LoaderFactoryEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ResourceFetcher13LoaderFactoryEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20DetachableUseCounterEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_20DetachableUseCounterEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20DetachableUseCounterEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20DetachableUseCounterEE7GetNameEPKv = comdat any

$_ZNK5blink20DetachableUseCounter5TraceEPNS_7VisitorE = comdat any

$_ZN5blink7Visitor5TraceINS_10UseCounterEEEvRKNS_6MemberIT_EE = comdat any

$_ZN5blink10UseCounterD2Ev = comdat any

$_ZN5blink20DetachableUseCounterD0Ev = comdat any

$_ZN5blink20DetachableUseCounter8CountUseENS_5mojom10WebFeatureE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_23DetachableConsoleLoggerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_23DetachableConsoleLoggerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_23DetachableConsoleLoggerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_23DetachableConsoleLoggerEE7GetNameEPKv = comdat any

$_ZNK5blink23DetachableConsoleLogger5TraceEPNS_7VisitorE = comdat any

$_ZN5blink23DetachableConsoleLoggerD0Ev = comdat any

$_ZN5blink23DetachableConsoleLogger21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb = comdat any

$_ZN5blink13ConsoleLoggerD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ResourceFetcherEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ResourceFetcherEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ResourceFetcherEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20ResourceLoadObserverEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_20ResourceLoadObserverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20ResourceLoadObserverEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20ResourceLoadObserverEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21ContentSecurityPolicyEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21ContentSecurityPolicyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_21ContentSecurityPolicyEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_21ContentSecurityPolicyEE7GetNameEPKv = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_ = comdat any

$_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_ = comdat any

$_ZN5blink10TraceTraitINS_26WorkerOrWorkletGlobalScopeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_15ResourceFetcherEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink25EventTargetWithInlineDataE = comdat any

$_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_31WorkerOrWorkletScriptControllerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_31WorkerOrWorkletScriptControllerEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17SubresourceFilterEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17SubresourceFilterEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_25ResourceFetcherPropertiesEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_25ResourceFetcherPropertiesEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ResourceFetcher13LoaderFactoryEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ResourceFetcher13LoaderFactoryEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20DetachableUseCounterEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20DetachableUseCounterEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink20DetachableUseCounterE = comdat any

$_ZZN5blink11GCInfoTraitINS_23DetachableConsoleLoggerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_23DetachableConsoleLoggerEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink23DetachableConsoleLoggerE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ResourceFetcherEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ResourceFetcherEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20ResourceLoadObserverEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20ResourceLoadObserverEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink26WorkerOrWorkletGlobalScopeE = hidden unnamed_addr constant { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] } { [47 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZN5blink26WorkerOrWorkletGlobalScopeD2Ev to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZN5blink26WorkerOrWorkletGlobalScopeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::ScriptState"*)* @_ZN5blink26WorkerOrWorkletGlobalScope4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink26WorkerOrWorkletGlobalScope20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope13InterfaceNameEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope22IsJSExecutionForbiddenEv to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.WTF::String"*)* @_ZN5blink26WorkerOrWorkletGlobalScope11DisableEvalERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*, i32)* @_ZN5blink26WorkerOrWorkletGlobalScope17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZN5blink26WorkerOrWorkletGlobalScope7DisposeEv to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, i32)* @_ZN5blink26WorkerOrWorkletGlobalScope8CountUseENS_5mojom10WebFeatureE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::WorkerNavigator"* (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope9navigatorEv to i8*), i8* bitcast (i8 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope41ShouldRejectCoepUnsafeNoneTopModuleScriptEv to i8*), i8* bitcast (%"class.blink::ResourceFetcher"* (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope7FetcherEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)* @_ZN5blink26WorkerOrWorkletGlobalScope13GetTaskRunnerENS_8TaskTypeE to i8*), i8* bitcast (i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope28GetOutstandingThrottledLimitEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZN5blink26WorkerOrWorkletGlobalScope43BindContentSecurityPolicyToExecutionContextEv to i8*), i8* bitcast (i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope25GetThrottleOptionOverrideEv to i8*)], [55 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext8IsWindowEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext19IsWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext20IsWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext30IsMainThreadWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext28IsDedicatedWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25IsSharedWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext26IsServiceWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext29IsAnimationWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25IsAudioWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext26IsLayoutWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25IsPaintWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext28IsThreadedWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope22IsJSExecutionForbiddenEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext15IsContextThreadEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25ShouldInstallV8ExtensionsEv to i8*), i8* bitcast (%"class.blink::ContentSecurityPolicy"* (%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*)* @_ZN5blink16ExecutionContext32GetContentSecurityPolicyForWorldEPKNS_15DOMWrapperWorldE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.WTF::String"*)* @_ZThn72_N5blink26WorkerOrWorkletGlobalScope11DisableEvalERKN3WTF6StringE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.blink::UserAgentMetadata"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext20GetUserAgentMetadataEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::ResourceFetcher"* (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope7FetcherEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*, i32)* @_ZThn72_N5blink26WorkerOrWorkletGlobalScope17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE to i8*), i8* bitcast (i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, %"class.blink::KURL"*)* @_ZN5blink16ExecutionContext24RemoveURLFromMemoryCacheERKNS_4KURLE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContext29HasInsecureContextInAncestorsEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext16OutgoingReferrerEv to i8*), i8* bitcast (%"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContext12GetProbeSinkEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext15GetTrustedTypesEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext19RequireTrustedTypesEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*, i32)* @_ZNK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*)* @_ZNK5blink16ExecutionContext32ReportPermissionsPolicyViolationENS_5mojom24PermissionsPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZNK5blink16ExecutionContext29ReportDocumentPolicyViolationENS_5mojom21DocumentPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringES7_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContext11UkmRecorderEv to i8*), i8* bitcast (i64 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext11UkmSourceIDEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.absl::optional.2429"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext30GetParentExecutionContextTokenEv to i8*), i8* bitcast (%"class.blink::ScriptWrappable"* (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContext17ToScriptWrappableEv to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_N5blink26WorkerOrWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_N5blink26WorkerOrWorkletGlobalScopeD0Ev to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, i1)* @_ZN5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [9 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn104_N5blink26WorkerOrWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn104_N5blink26WorkerOrWorkletGlobalScopeD0Ev to i8*), i8* bitcast (void (%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*)* @_ZN5blink24ContextLifecycleNotifier27AddContextLifecycleObserverEPNS_24ContextLifecycleObserverE to i8*), i8* bitcast (void (%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*)* @_ZN5blink24ContextLifecycleNotifier30RemoveContextLifecycleObserverEPNS_24ContextLifecycleObserverE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)* @_ZThn104_N5blink26WorkerOrWorkletGlobalScope13GetTaskRunnerENS_8TaskTypeE to i8*)], [3 x i8*] [i8* inttoptr (i64 -144 to i8*), i8* null, i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn144_NK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE to i8*)], [6 x i8*] [i8* inttoptr (i64 -176 to i8*), i8* null, i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn176_NK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn176_N5blink26WorkerOrWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn176_N5blink26WorkerOrWorkletGlobalScopeD0Ev to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, i1)* @_ZThn104_N5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb to i8*)], [6 x i8*] [i8* inttoptr (i64 -184 to i8*), i8* null, i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn184_NK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn184_N5blink26WorkerOrWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn184_N5blink26WorkerOrWorkletGlobalScopeD0Ev to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, i32)* @_ZThn184_N5blink26WorkerOrWorkletGlobalScope8CountUseENS_5mojom10WebFeatureE to i8*)], [3 x i8*] [i8* inttoptr (i64 -192 to i8*), i8* null, i8* bitcast (i1 (%"class.blink::ExecutionContext"*, i32)* @_ZThn120_NK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE to i8*)] }, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [80 x i8] c"../../third_party/blink/renderer/core/workers/worker_or_worklet_global_scope.cc\00", align 1
@.str.1 = private unnamed_addr constant [135 x i8] c"WorkerOrWorkletGlobalScope must never be wrapped with wrap method. The global object of ECMAScript environment is used as the wrapper.\00", align 1
@_ZTVN5blink25EventTargetWithInlineDataE = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD2Ev to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*)* @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.3 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FetchContextEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FetchContext]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12FetchContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12FetchContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12FetchContextEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink12FetchContextE = external unnamed_addr constant { [21 x i8*] }, align 8
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN5blink11EventTarget18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink31WorkerOrWorkletScriptControllerEEEPKcv = private unnamed_addr constant [86 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::WorkerOrWorkletScriptController]\00", align 1
@_ZZN5blink11GCInfoTraitINS_31WorkerOrWorkletScriptControllerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_31WorkerOrWorkletScriptControllerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_31WorkerOrWorkletScriptControllerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_31WorkerOrWorkletScriptControllerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_31WorkerOrWorkletScriptControllerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17SubresourceFilterEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SubresourceFilter]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17SubresourceFilterEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17SubresourceFilterEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17SubresourceFilterEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17SubresourceFilterEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17SubresourceFilterEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25FetchClientSettingsObjectEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FetchClientSettingsObject]\00", align 1
@_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_25FetchClientSettingsObjectEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_25FetchClientSettingsObjectEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_25FetchClientSettingsObjectEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25ResourceFetcherPropertiesEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ResourceFetcherProperties]\00", align 1
@_ZZN5blink11GCInfoTraitINS_25ResourceFetcherPropertiesEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_25ResourceFetcherPropertiesEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_25ResourceFetcherPropertiesEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_25ResourceFetcherPropertiesEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_25ResourceFetcherPropertiesEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink35DetachableResourceFetcherPropertiesE = external unnamed_addr constant { [18 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ResourceFetcher13LoaderFactoryEEEPKcv = private unnamed_addr constant [85 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ResourceFetcher::LoaderFactory]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ResourceFetcher13LoaderFactoryEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ResourceFetcher13LoaderFactoryEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ResourceFetcher13LoaderFactoryEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ResourceFetcher13LoaderFactoryEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ResourceFetcher13LoaderFactoryEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink22LoaderFactoryForWorkerE = external unnamed_addr constant { [7 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20DetachableUseCounterEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DetachableUseCounter]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20DetachableUseCounterEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20DetachableUseCounterEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20DetachableUseCounterEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20DetachableUseCounterEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20DetachableUseCounterEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink20DetachableUseCounterE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DetachableUseCounter"*, %"class.blink::Visitor"*)* @_ZNK5blink20DetachableUseCounter5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::UseCounter"*)* @_ZN5blink10UseCounterD2Ev to i8*), i8* bitcast (void (%"class.blink::DetachableUseCounter"*)* @_ZN5blink20DetachableUseCounterD0Ev to i8*), i8* bitcast (void (%"class.blink::DetachableUseCounter"*, i32)* @_ZN5blink20DetachableUseCounter8CountUseENS_5mojom10WebFeatureE to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23DetachableConsoleLoggerEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DetachableConsoleLogger]\00", align 1
@_ZZN5blink11GCInfoTraitINS_23DetachableConsoleLoggerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_23DetachableConsoleLoggerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_23DetachableConsoleLoggerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_23DetachableConsoleLoggerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_23DetachableConsoleLoggerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink23DetachableConsoleLoggerE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DetachableConsoleLogger"*, %"class.blink::Visitor"*)* @_ZNK5blink23DetachableConsoleLogger5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ConsoleLogger"*)* @_ZN5blink13ConsoleLoggerD2Ev to i8*), i8* bitcast (void (%"class.blink::DetachableConsoleLogger"*)* @_ZN5blink23DetachableConsoleLoggerD0Ev to i8*), i8* bitcast (void (%"class.blink::DetachableConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)* @_ZN5blink23DetachableConsoleLogger21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ResourceFetcherEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ResourceFetcher]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ResourceFetcherEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ResourceFetcherEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ResourceFetcherEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ResourceFetcherEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20ResourceLoadObserverEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ResourceLoadObserver]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20ResourceLoadObserverEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20ResourceLoadObserverEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20ResourceLoadObserverEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20ResourceLoadObserverEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20ResourceLoadObserverEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.14 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_15ResourceFetcherEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [387 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WeakMember<blink::ResourceFetcher>, blink::WeakMember<blink::ResourceFetcher>, WTF::IdentityExtractor, WTF::MemberHash<blink::ResourceFetcher>, WTF::HashTraits<blink::WeakMember<blink::ResourceFetcher> >, WTF::HashTraits<blink::WeakMember<blink::ResourceFetcher> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ContentSecurityPolicyEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ContentSecurityPolicy]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21ContentSecurityPolicyEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_21ContentSecurityPolicyEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21ContentSecurityPolicyEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.16 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.17 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::ContentSecurityPolicy>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, WTF::String>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, mojo::StructPtr<network::mojom::blink::CSPSourceList> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv = private unnamed_addr constant [97 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPHashSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_126OutsideSettingsCSPDelegateEE5IndexEvE7kGcInfo = internal constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12_GLOBAL__N_126OutsideSettingsCSPDelegateEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12_GLOBAL__N_126OutsideSettingsCSPDelegateEE7GetNameEPKv, i8 1 }, align 8
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_126OutsideSettingsCSPDelegateEE5IndexEvE13gc_info_index = internal global { { i32 } } zeroinitializer, align 4
@_ZTVN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegateE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::SecurityOrigin"* (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate17GetSecurityOriginEv to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*)* @_ZNK5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate3UrlEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*, i32)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate15SetSandboxFlagsEN7network5mojom15WebSandboxFlagsE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate22SetRequireTrustedTypesEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*, i32)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate24AddInsecureRequestPolicyENS_5mojom21InsecureRequestPolicyE to i8*), i8* bitcast (%"class.blink::SourceLocation"* (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate17GetSourceLocationEv to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate13GetStatusCodeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate19GetDocumentReferrerEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*, %"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Element"*)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate22DispatchViolationEventERKNS_32SecurityPolicyViolationEventInitEPNS_7ElementE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*, %"class.blink::SecurityPolicyViolationEventInit"*, %"class.WTF::String"*, i1, %"class.WTF::Vector.120"*, i1)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate19PostViolationReportERKNS_32SecurityPolicyViolationEventInitERKN3WTF6StringEbRKNS5_6VectorIS6_Lj0ENS5_18PartitionAllocatorEEEb to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*, i32)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate5CountENS_5mojom10WebFeatureE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*, %"class.blink::ConsoleMessage"*)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate17AddConsoleMessageEPNS_14ConsoleMessageE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*, %"class.mojo::StructPtr.2711"*)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate17AddInspectorIssueEN4mojo9StructPtrINS_5mojom5blink18InspectorIssueInfoEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*, %"class.WTF::String"*)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate11DisableEvalERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*, %"class.WTF::String"*)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate39ReportBlockedScriptExecutionToInspectorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*, %"class.WTF::Vector.96"*)* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate29DidAddContentSecurityPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS2_18PartitionAllocatorEEE to i8*)] }, align 8

@_ZN5blink26WorkerOrWorkletGlobalScopeD1Ev = hidden unnamed_addr alias void (%"class.blink::WorkerOrWorkletGlobalScope"*), void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZN5blink26WorkerOrWorkletGlobalScopeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScopeC2EPN2v87IsolateE13scoped_refptrINS_14SecurityOriginEEPNS_5AgentERKN3WTF6StringERKN4base16UnguessableTokenENS_5mojom14V8CacheOptionsEPNS_13WorkerClientsENSt3__110unique_ptrINS_24WebContentSettingsClientENSL_14default_deleteISN_EEEES4_INS_21WebWorkerFetchContextEERNS_20WorkerReportingProxyE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.v8::Isolate"*, %"class.blink::SecurityOrigin"*, %"class.blink::Agent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.base::UnguessableToken"* nocapture readonly dereferenceable(16), i32, %"class.blink::WorkerClients"*, i64, i64, %"class.blink::WorkerReportingProxy"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %12 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"* %12) #10
  %13 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.blink::EventTargetData"* %14 to i8*
  %16 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0), i32 261) #10
  %17 = bitcast i8* %16 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"* %17) #10
  %18 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::ExecutionContext.base"* %18 to %"class.blink::ExecutionContext"*
  tail call void @_ZN5blink16ExecutionContextC2EPN2v87IsolateEPNS_5AgentE(%"class.blink::ExecutionContext"* %19, %"class.v8::Isolate"* %1, %"class.blink::Agent"* %3) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %20 = getelementptr inbounds %"class.blink::ExecutionContext.base", %"class.blink::ExecutionContext.base"* %18, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 1, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %24 = bitcast i32 (...)*** %23 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 5, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %24, align 8
  %25 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 4, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 6, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 2
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #10
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %36
  tail call void @llvm.trap() #10
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %11, %31, %46
  %49 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 4
  %50 = bitcast %"class.base::UnguessableToken"* %49 to i8*
  %51 = bitcast %"class.base::UnguessableToken"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false)
  %52 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 5
  %53 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %52, i64 0, i32 0
  %54 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %52, i64 0, i32 0, i32 0
  store %"class.blink::WorkerClients"* %7, %"class.blink::WorkerClients"** %54, align 8
  %55 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 5, i32 0, i32 1
  %56 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %56, align 8
  %57 = ptrtoint %"class.blink::WorkerClients"* %7 to i64
  switch i64 %57, label %58 [
    i64 0, label %77
    i64 -1, label %77
  ]

58:                                               ; preds = %48
  %59 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %60 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %59, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %60) #10
  %61 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %62 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %62, align 8
  %64 = icmp eq %"class.blink::PersistentNode"* %63, null
  br i1 %64, label %65, label %68, !prof !2

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %61, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %66) #10
  %67 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %62, align 8
  br label %68

68:                                               ; preds = %65, %58
  %69 = phi %"class.blink::PersistentNode"* [ %67, %65 ], [ %63, %58 ]
  %70 = bitcast %"class.blink::PersistentNode"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.blink::CrossThreadPersistentRegion"* %61 to i64*
  store i64 %71, i64* %72, align 8
  %73 = bitcast %"class.blink::PersistentNode"* %69 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %53, %"class.blink::PersistentBase"** %73, align 8
  %74 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %69, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13WorkerClientsELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %74, align 8
  %75 = ptrtoint %"class.blink::PersistentNode"* %69 to i64
  %76 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %55 to i64*
  store atomic i64 %75, i64* %76 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %60) #10
  br label %77

77:                                               ; preds = %48, %48, %68
  %78 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 6
  %79 = bitcast %"class.std::__1::unique_ptr.465"* %78 to i64*
  store i64 %8, i64* %79, align 8
  %80 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 7, i32 0, i32 0
  %81 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 9
  %82 = bitcast %class.scoped_refptr.480* %81 to i64*
  %83 = bitcast %"class.blink::ResourceFetcher"** %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 28, i1 false)
  store i64 %9, i64* %82, align 8
  %84 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 10, i32 0, i32 0
  store %"class.blink::SubresourceFilter"* null, %"class.blink::SubresourceFilter"** %84, align 8
  %85 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_31WorkerOrWorkletScriptControllerEEEPhm(i64 64) #10
  %86 = bitcast i8* %85 to %"class.blink::WorkerOrWorkletScriptController"*
  tail call void @_ZN5blink31WorkerOrWorkletScriptControllerC1EPNS_26WorkerOrWorkletGlobalScopeEPN2v87IsolateE(%"class.blink::WorkerOrWorkletScriptController"* %86, %"class.blink::WorkerOrWorkletGlobalScope"* %0, %"class.v8::Isolate"* %1) #10
  %87 = getelementptr inbounds i8, i8* %85, i64 -4
  %88 = bitcast i8* %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = or i16 %89, 1
  store atomic i16 %90, i16* %88 release, align 2
  %91 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 11, i32 0, i32 0
  %92 = bitcast %"class.blink::WorkerOrWorkletScriptController"** %91 to i8**
  store i8* %85, i8** %92, align 8
  %93 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 12
  store i32 %6, i32* %93, align 8
  %94 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 13
  %95 = bitcast %"class.WTF::Vector.96"* %94 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #10
  %96 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 14
  store %"class.blink::WorkerReportingProxy"* %10, %"class.blink::WorkerReportingProxy"** %96, align 8
  %97 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 15
  %98 = bitcast %"class.std::__1::bitset"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 496, i1 false) #10
  %99 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 16
  tail call void @_ZN5blink11DeprecationC1Ev(%"class.blink::Deprecation"* %99) #10
  %100 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 17, i32 0, i32 0
  store %"class.blink::Modulator"* null, %"class.blink::Modulator"** %100, align 8
  %101 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 6
  tail call void @_ZN5blink15SecurityContext17SetSecurityOriginE13scoped_refptrINS_14SecurityOriginEE(%"class.blink::SecurityContext"* %101, %"class.blink::SecurityOrigin"* %2) #10
  %102 = tail call %"class.blink::PolicyContainer"* @_ZN5blink15PolicyContainer11CreateEmptyEv() #10
  tail call void @_ZN5blink16ExecutionContext18SetPolicyContainerENSt3__110unique_ptrINS_15PolicyContainerENS1_14default_deleteIS3_EEEE(%"class.blink::ExecutionContext"* %19, %"class.blink::PolicyContainer"* %102) #10
  ret void
}

declare void @_ZN5blink16ExecutionContextC2EPN2v87IsolateEPNS_5AgentE(%"class.blink::ExecutionContext"*, %"class.v8::Isolate"*, %"class.blink::Agent"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink11DeprecationC1Ev(%"class.blink::Deprecation"*) unnamed_addr #1

declare void @_ZN5blink15SecurityContext17SetSecurityOriginE13scoped_refptrINS_14SecurityOriginEE(%"class.blink::SecurityContext"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #1

declare void @_ZN5blink16ExecutionContext18SetPolicyContainerENSt3__110unique_ptrINS_15PolicyContainerENS1_14default_deleteIS3_EEEE(%"class.blink::ExecutionContext"*, %"class.blink::PolicyContainer"*) local_unnamed_addr #1

declare %"class.blink::PolicyContainer"* @_ZN5blink15PolicyContainer11CreateEmptyEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScopeD2Ev(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::ExecutionContext.base", %"class.blink::ExecutionContext.base"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 1, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %8 = bitcast i32 (...)*** %7 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 5, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %8, align 8
  %9 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 4, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }, { [47 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink26WorkerOrWorkletGlobalScopeE, i64 0, inrange i32 6, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 13
  %11 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %11, align 8
  %13 = icmp eq %"class.mojo::StructPtr.99"* %12, null
  br i1 %13, label %37, label %14, !prof !3

14:                                               ; preds = %1
  %15 = bitcast %"class.mojo::StructPtr.99"* %12 to i8*
  %16 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %35, label %19, !prof !2

19:                                               ; preds = %14
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %12, i64 %20
  br label %22

22:                                               ; preds = %29, %19
  %23 = phi %"class.mojo::StructPtr.99"* [ %30, %29 ], [ %12, %19 ]
  %24 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %24, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %24, align 8
  %26 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  tail call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %25) #10
  %28 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #16
  br label %29

29:                                               ; preds = %27, %22
  %30 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %23, i64 1
  %31 = icmp eq %"class.mojo::StructPtr.99"* %30, %21
  br i1 %31, label %32, label %22

32:                                               ; preds = %29
  store i32 0, i32* %16, align 4
  %33 = bitcast %"class.WTF::Vector.96"* %10 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %14
  %36 = phi i8* [ %34, %32 ], [ %15, %14 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %36) #10
  store %"class.mojo::StructPtr.99"* null, %"class.mojo::StructPtr.99"** %11, align 8
  br label %37

37:                                               ; preds = %1, %35
  %38 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 9, i32 0
  %39 = load %"class.blink::WebWorkerFetchContext"*, %"class.blink::WebWorkerFetchContext"** %38, align 8
  %40 = icmp eq %"class.blink::WebWorkerFetchContext"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::WebWorkerFetchContext", %"class.blink::WebWorkerFetchContext"* %39, i64 0, i32 1
  %43 = getelementptr inbounds %"class.base::RefCounted.481", %"class.base::RefCounted.481"* %42, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %43) #10
  %44 = getelementptr inbounds %"class.base::RefCounted.481", %"class.base::RefCounted.481"* %42, i64 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %54

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.base::RefCounted.481", %"class.base::RefCounted.481"* %42, i64 -2
  %49 = bitcast %"class.base::RefCounted.481"* %48 to %"class.blink::WebWorkerFetchContext"*
  %50 = bitcast %"class.base::RefCounted.481"* %48 to void (%"class.blink::WebWorkerFetchContext"*)***
  %51 = load void (%"class.blink::WebWorkerFetchContext"*)**, void (%"class.blink::WebWorkerFetchContext"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.blink::WebWorkerFetchContext"*)*, void (%"class.blink::WebWorkerFetchContext"*)** %51, i64 1
  %53 = load void (%"class.blink::WebWorkerFetchContext"*)*, void (%"class.blink::WebWorkerFetchContext"*)** %52, align 8
  tail call void %53(%"class.blink::WebWorkerFetchContext"* nonnull %49) #10
  br label %54

54:                                               ; preds = %37, %41, %47
  %55 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %56 = load %"class.blink::WebContentSettingsClient"*, %"class.blink::WebContentSettingsClient"** %55, align 8
  store %"class.blink::WebContentSettingsClient"* null, %"class.blink::WebContentSettingsClient"** %55, align 8
  %57 = icmp eq %"class.blink::WebContentSettingsClient"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.blink::WebContentSettingsClient"* %56 to void (%"class.blink::WebContentSettingsClient"*)***
  %60 = load void (%"class.blink::WebContentSettingsClient"*)**, void (%"class.blink::WebContentSettingsClient"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::WebContentSettingsClient"*)*, void (%"class.blink::WebContentSettingsClient"*)** %60, i64 17
  %62 = load void (%"class.blink::WebContentSettingsClient"*)*, void (%"class.blink::WebContentSettingsClient"*)** %61, align 8
  tail call void %62(%"class.blink::WebContentSettingsClient"* nonnull %56) #10
  br label %63

63:                                               ; preds = %54, %58
  %64 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 5, i32 0, i32 1
  %65 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %64 to i64*
  %66 = load atomic i64, i64* %65 acquire, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %63
  %69 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %70 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %69, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %70) #10
  %71 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %72 = load atomic i64, i64* %65 monotonic, align 8
  %73 = inttoptr i64 %72 to %"class.blink::PersistentNode"*
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %71, i64 0, i32 0, i32 0
  %77 = bitcast %"class.blink::CrossThreadPersistentRegion"* %71 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = inttoptr i64 %72 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %73, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %80, align 8
  store %"class.blink::PersistentNode"* %73, %"class.blink::PersistentNode"** %76, align 8
  br label %81

81:                                               ; preds = %75, %68
  store atomic i64 0, i64* %65 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %70) #10
  br label %82

82:                                               ; preds = %63, %81
  %83 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #10
  br label %99

99:                                               ; preds = %82, %95, %98
  %100 = bitcast %"class.blink::ExecutionContext.base"* %3 to %"class.blink::ExecutionContext"*
  tail call void @_ZN5blink16ExecutionContextD2Ev(%"class.blink::ExecutionContext"* %100) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %101 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 0, i32 1
  %102 = bitcast %"class.blink::EventTargetData"* %101 to i8*
  %103 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %102, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0), i32 261) #10
  %104 = bitcast i8* %103 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %104) #10
  %105 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %105) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink16ExecutionContextD2Ev(%"class.blink::ExecutionContext"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink26WorkerOrWorkletGlobalScopeD1Ev(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 18
  %3 = bitcast i64* %2 to %"class.blink::WorkerOrWorkletGlobalScope"*
  tail call void @_ZN5blink26WorkerOrWorkletGlobalScopeD2Ev(%"class.blink::WorkerOrWorkletGlobalScope"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink26WorkerOrWorkletGlobalScopeD1Ev(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 14
  %3 = bitcast i64* %2 to %"class.blink::WorkerOrWorkletGlobalScope"*
  tail call void @_ZN5blink26WorkerOrWorkletGlobalScopeD2Ev(%"class.blink::WorkerOrWorkletGlobalScope"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn176_N5blink26WorkerOrWorkletGlobalScopeD1Ev(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 5
  %3 = bitcast i64* %2 to %"class.blink::WorkerOrWorkletGlobalScope"*
  tail call void @_ZN5blink26WorkerOrWorkletGlobalScopeD2Ev(%"class.blink::WorkerOrWorkletGlobalScope"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn184_N5blink26WorkerOrWorkletGlobalScopeD1Ev(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 4
  %3 = bitcast i64* %2 to %"class.blink::WorkerOrWorkletGlobalScope"*
  tail call void @_ZN5blink26WorkerOrWorkletGlobalScopeD2Ev(%"class.blink::WorkerOrWorkletGlobalScope"* %3) #10
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScopeD0Ev(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn72_N5blink26WorkerOrWorkletGlobalScopeD0Ev(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn104_N5blink26WorkerOrWorkletGlobalScopeD0Ev(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn176_N5blink26WorkerOrWorkletGlobalScopeD0Ev(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn184_N5blink26WorkerOrWorkletGlobalScopeD0Ev(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink26WorkerOrWorkletGlobalScope13InterfaceNameEv(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readnone) unnamed_addr #6 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink26WorkerOrWorkletGlobalScope4WrapEPNS_11ScriptStateE(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readnone, %"class.blink::ScriptState"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 3) #10
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %6) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 218, i32 3) #10
  %7 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %7 to %"class.std::__1::basic_ostream"*
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.1, i64 0, i64 0), i64 134) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %6) #10
  br label %10

10:                                               ; preds = %2, %5
  ret %"class.v8::Value"* null
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZN5blink26WorkerOrWorkletGlobalScope20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readnone, %"class.v8::Isolate"* nocapture readnone, %"struct.blink::WrapperTypeInfo"* nocapture readnone, %"class.v8::Object"* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 3) #10
  br i1 %6, label %7, label %12

7:                                                ; preds = %4
  %8 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %8) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 228, i32 3) #10
  %9 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_ostringstream"* %9 to %"class.std::__1::basic_ostream"*
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.1, i64 0, i64 0), i64 134) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %8) #10
  br label %12

12:                                               ; preds = %4, %7
  ret %"class.v8::Object"* null
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink26WorkerOrWorkletGlobalScope18HasPendingActivityEv(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 13
  %3 = load i8, i8* %2, align 4, !range !4
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScope8CountUseENS_5mojom10WebFeatureE(%"class.blink::WorkerOrWorkletGlobalScope"*, i32) unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = lshr i64 %3, 6
  %5 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 15, i32 0, i32 0, i64 %4
  %6 = and i64 %3, 63
  %7 = shl i64 1, %6
  %8 = load i64, i64* %5, align 8
  %9 = and i64 %8, %7
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = icmp ugt i32 %1, 3926
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @abort() #17
  unreachable

14:                                               ; preds = %11
  %15 = or i64 %8, %7
  store i64 %15, i64* %5, align 8
  %16 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 14
  %17 = load %"class.blink::WorkerReportingProxy"*, %"class.blink::WorkerReportingProxy"** %16, align 8
  %18 = bitcast %"class.blink::WorkerReportingProxy"* %17 to void (%"class.blink::WorkerReportingProxy"*, i32)***
  %19 = load void (%"class.blink::WorkerReportingProxy"*, i32)**, void (%"class.blink::WorkerReportingProxy"*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::WorkerReportingProxy"*, i32)*, void (%"class.blink::WorkerReportingProxy"*, i32)** %19, i64 2
  %21 = load void (%"class.blink::WorkerReportingProxy"*, i32)*, void (%"class.blink::WorkerReportingProxy"*, i32)** %20, align 8
  tail call void %21(%"class.blink::WorkerReportingProxy"* %17, i32 %1) #10
  br label %22

22:                                               ; preds = %2, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn184_N5blink26WorkerOrWorkletGlobalScope8CountUseENS_5mojom10WebFeatureE(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 4
  %4 = bitcast i64* %3 to %"class.blink::WorkerOrWorkletGlobalScope"*
  %5 = sext i32 %1 to i64
  %6 = lshr i64 %5, 6
  %7 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %4, i64 0, i32 15, i32 0, i32 0, i64 %6
  %8 = and i64 %5, 63
  %9 = shl i64 1, %8
  %10 = load i64, i64* %7, align 8
  %11 = and i64 %10, %9
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %2
  %14 = icmp ugt i32 %1, 3926
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @abort() #17
  unreachable

16:                                               ; preds = %13
  %17 = or i64 %10, %9
  store i64 %17, i64* %7, align 8
  %18 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 76
  %19 = bitcast i64* %18 to %"class.blink::WorkerReportingProxy"**
  %20 = load %"class.blink::WorkerReportingProxy"*, %"class.blink::WorkerReportingProxy"** %19, align 8
  %21 = bitcast %"class.blink::WorkerReportingProxy"* %20 to void (%"class.blink::WorkerReportingProxy"*, i32)***
  %22 = load void (%"class.blink::WorkerReportingProxy"*, i32)**, void (%"class.blink::WorkerReportingProxy"*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::WorkerReportingProxy"*, i32)*, void (%"class.blink::WorkerReportingProxy"*, i32)** %22, i64 2
  %24 = load void (%"class.blink::WorkerReportingProxy"*, i32)*, void (%"class.blink::WorkerReportingProxy"*, i32)** %23, align 8
  tail call void %24(%"class.blink::WorkerReportingProxy"* %20, i32 %1) #10
  br label %25

25:                                               ; preds = %2, %16
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink26WorkerOrWorkletGlobalScope25GetThrottleOptionOverrideEv(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScope35UpdateFetcherThrottleOptionOverrideEv(%"class.blink::WorkerOrWorkletGlobalScope"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %2, align 8
  %4 = icmp eq %"class.blink::ResourceFetcher"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::WorkerOrWorkletGlobalScope"* %0 to i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)***
  %7 = load i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)**, i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)*, i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)** %7, i64 44
  %9 = load i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)*, i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::WorkerOrWorkletGlobalScope"* %0) #10
  %11 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %3, i64 0, i32 10, i32 0, i32 0
  %12 = load %"class.blink::ResourceLoadScheduler"*, %"class.blink::ResourceLoadScheduler"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %12, i64 0, i32 23
  store i32 %10, i32* %13, align 8
  br label %14

14:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScope33InitializeWebFetchContextIfNeededEv(%"class.blink::WorkerOrWorkletGlobalScope"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %47

5:                                                ; preds = %1
  store i8 1, i8* %2, align 1
  %6 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 9, i32 0
  %7 = load %"class.blink::WebWorkerFetchContext"*, %"class.blink::WebWorkerFetchContext"** %6, align 8
  %8 = icmp eq %"class.blink::WebWorkerFetchContext"* %7, null
  br i1 %8, label %47, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::WorkerOrWorkletGlobalScope"* %0 to %"class.blink::WorkerNavigator"* (%"class.blink::WorkerOrWorkletGlobalScope"*)***
  %11 = load %"class.blink::WorkerNavigator"* (%"class.blink::WorkerOrWorkletGlobalScope"*)**, %"class.blink::WorkerNavigator"* (%"class.blink::WorkerOrWorkletGlobalScope"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::WorkerNavigator"* (%"class.blink::WorkerOrWorkletGlobalScope"*)*, %"class.blink::WorkerNavigator"* (%"class.blink::WorkerOrWorkletGlobalScope"*)** %11, i64 35
  %13 = load %"class.blink::WorkerNavigator"* (%"class.blink::WorkerOrWorkletGlobalScope"*)*, %"class.blink::WorkerNavigator"* (%"class.blink::WorkerOrWorkletGlobalScope"*)** %12, align 8
  %14 = tail call %"class.blink::WorkerNavigator"* %13(%"class.blink::WorkerOrWorkletGlobalScope"* %0) #10
  %15 = icmp eq %"class.blink::WorkerNavigator"* %14, null
  %16 = getelementptr inbounds %"class.blink::WorkerNavigator", %"class.blink::WorkerNavigator"* %14, i64 0, i32 1
  %17 = select i1 %15, %"class.blink::AcceptLanguagesWatcher"* null, %"class.blink::AcceptLanguagesWatcher"* %16
  %18 = bitcast %"class.blink::WebWorkerFetchContext"* %7 to void (%"class.blink::WebWorkerFetchContext"*, %"class.blink::AcceptLanguagesWatcher"*)***
  %19 = load void (%"class.blink::WebWorkerFetchContext"*, %"class.blink::AcceptLanguagesWatcher"*)**, void (%"class.blink::WebWorkerFetchContext"*, %"class.blink::AcceptLanguagesWatcher"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::WebWorkerFetchContext"*, %"class.blink::AcceptLanguagesWatcher"*)*, void (%"class.blink::WebWorkerFetchContext"*, %"class.blink::AcceptLanguagesWatcher"*)** %19, i64 3
  %21 = load void (%"class.blink::WebWorkerFetchContext"*, %"class.blink::AcceptLanguagesWatcher"*)*, void (%"class.blink::WebWorkerFetchContext"*, %"class.blink::AcceptLanguagesWatcher"*)** %20, align 8
  tail call void %21(%"class.blink::WebWorkerFetchContext"* nonnull %7, %"class.blink::AcceptLanguagesWatcher"* %17) #10
  %22 = load %"class.blink::WebWorkerFetchContext"*, %"class.blink::WebWorkerFetchContext"** %6, align 8
  %23 = bitcast %"class.blink::WebWorkerFetchContext"* %22 to %"class.blink::WebDocumentSubresourceFilter"* (%"class.blink::WebWorkerFetchContext"*)***
  %24 = load %"class.blink::WebDocumentSubresourceFilter"* (%"class.blink::WebWorkerFetchContext"*)**, %"class.blink::WebDocumentSubresourceFilter"* (%"class.blink::WebWorkerFetchContext"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.blink::WebDocumentSubresourceFilter"* (%"class.blink::WebWorkerFetchContext"*)*, %"class.blink::WebDocumentSubresourceFilter"* (%"class.blink::WebWorkerFetchContext"*)** %24, i64 15
  %26 = load %"class.blink::WebDocumentSubresourceFilter"* (%"class.blink::WebWorkerFetchContext"*)*, %"class.blink::WebDocumentSubresourceFilter"* (%"class.blink::WebWorkerFetchContext"*)** %25, align 8
  %27 = tail call %"class.blink::WebDocumentSubresourceFilter"* %26(%"class.blink::WebWorkerFetchContext"* %22) #10
  %28 = icmp eq %"class.blink::WebDocumentSubresourceFilter"* %27, null
  br i1 %28, label %47, label %29

29:                                               ; preds = %9
  %30 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17SubresourceFilterEEEPhm(i64 152) #10
  %31 = bitcast i8* %30 to %"class.blink::SubresourceFilter"*
  %32 = icmp eq %"class.blink::WorkerOrWorkletGlobalScope"* %0, null
  %33 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1
  %34 = bitcast %"class.blink::ExecutionContext.base"* %33 to %"class.blink::ExecutionContext"*
  %35 = select i1 %32, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %34
  tail call void @_ZN5blink17SubresourceFilterC1EPNS_16ExecutionContextENSt3__110unique_ptrINS_28WebDocumentSubresourceFilterENS3_14default_deleteIS5_EEEE(%"class.blink::SubresourceFilter"* %31, %"class.blink::ExecutionContext"* %35, %"class.blink::WebDocumentSubresourceFilter"* nonnull %27) #10
  %36 = getelementptr inbounds i8, i8* %30, i64 -4
  %37 = bitcast i8* %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = or i16 %38, 1
  store atomic i16 %39, i16* %37 release, align 2
  %40 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 10
  %41 = ptrtoint i8* %30 to i64
  %42 = bitcast %"class.blink::Member.482"* %40 to i64*
  store atomic i64 %41, i64* %42 monotonic, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %29
  %46 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #10
  br label %47

47:                                               ; preds = %9, %5, %45, %29, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ResourceFetcher"* @_ZN5blink26WorkerOrWorkletGlobalScope13EnsureFetcherEv(%"class.blink::WorkerOrWorkletGlobalScope"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.blink::Member.471", %"class.blink::Member.471"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %3, align 8
  %5 = icmp eq %"class.blink::ResourceFetcher"* %4, null
  br i1 %5, label %6, label %28

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1
  %8 = bitcast %"class.blink::ExecutionContext.base"* %7 to %"class.blink::ExecutionContext"*
  %9 = tail call %"class.blink::WorkerResourceTimingNotifierImpl"* @_ZN5blink32WorkerResourceTimingNotifierImpl30CreateForInsideResourceFetcherERNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376) %8) #10
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_25FetchClientSettingsObjectEEEPhm(i64 16) #10
  %11 = bitcast i8* %10 to %"class.blink::FetchClientSettingsObjectImpl"*
  tail call void @_ZN5blink29FetchClientSettingsObjectImplC1ERNS_16ExecutionContextE(%"class.blink::FetchClientSettingsObjectImpl"* %11, %"class.blink::ExecutionContext"* dereferenceable(376) %8) #10
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = bitcast i8* %10 to %"class.blink::FetchClientSettingsObject"*
  %17 = tail call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* %8) #10
  %18 = getelementptr inbounds %"class.blink::WorkerResourceTimingNotifierImpl", %"class.blink::WorkerResourceTimingNotifierImpl"* %9, i64 0, i32 0
  %19 = tail call %"class.blink::ResourceFetcher"* @_ZN5blink26WorkerOrWorkletGlobalScope21CreateFetcherInternalERKNS_25FetchClientSettingsObjectERNS_21ContentSecurityPolicyERNS_28WorkerResourceTimingNotifierE(%"class.blink::WorkerOrWorkletGlobalScope"* %0, %"class.blink::FetchClientSettingsObject"* dereferenceable(8) %16, %"class.blink::ContentSecurityPolicy"* dereferenceable(112) %17, %"class.blink::WorkerResourceTimingNotifier"* dereferenceable(8) %18)
  %20 = ptrtoint %"class.blink::ResourceFetcher"* %19 to i64
  %21 = bitcast %"class.blink::Member.471"* %2 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %6
  %25 = bitcast %"class.blink::ResourceFetcher"* %19 to i8*
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #10
  %27 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %3, align 8
  br label %28

28:                                               ; preds = %24, %6, %1
  %29 = phi %"class.blink::ResourceFetcher"* [ %4, %1 ], [ %19, %6 ], [ %27, %24 ]
  ret %"class.blink::ResourceFetcher"* %29
}

declare %"class.blink::WorkerResourceTimingNotifierImpl"* @_ZN5blink32WorkerResourceTimingNotifierImpl30CreateForInsideResourceFetcherERNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ResourceFetcher"* @_ZN5blink26WorkerOrWorkletGlobalScope21CreateFetcherInternalERKNS_25FetchClientSettingsObjectERNS_21ContentSecurityPolicyERNS_28WorkerResourceTimingNotifierE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::FetchClientSettingsObject"* dereferenceable(8), %"class.blink::ContentSecurityPolicy"* dereferenceable(112), %"class.blink::WorkerResourceTimingNotifier"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::ResourceFetcher"*, align 8
  %6 = alloca %"struct.blink::ResourceFetcherInit", align 8
  %7 = alloca %"struct.blink::ResourceFetcherInit", align 8
  tail call void @_ZN5blink26WorkerOrWorkletGlobalScope33InitializeWebFetchContextIfNeededEv(%"class.blink::WorkerOrWorkletGlobalScope"* %0)
  %8 = bitcast %"class.blink::ResourceFetcher"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  store %"class.blink::ResourceFetcher"* null, %"class.blink::ResourceFetcher"** %5, align 8
  %9 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 9, i32 0
  %10 = load %"class.blink::WebWorkerFetchContext"*, %"class.blink::WebWorkerFetchContext"** %9, align 8
  %11 = icmp eq %"class.blink::WebWorkerFetchContext"* %10, null
  br i1 %11, label %194, label %12

12:                                               ; preds = %4
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_25ResourceFetcherPropertiesEEEPhm(i64 40) #10
  %14 = bitcast i8* %13 to %"class.blink::WorkerResourceFetcherProperties"*
  %15 = load %"class.blink::WebWorkerFetchContext"*, %"class.blink::WebWorkerFetchContext"** %9, align 8
  %16 = icmp eq %"class.blink::WebWorkerFetchContext"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::WebWorkerFetchContext", %"class.blink::WebWorkerFetchContext"* %15, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %18) #10
  br label %19

19:                                               ; preds = %12, %17
  tail call void @_ZN5blink31WorkerResourceFetcherPropertiesC1ERNS_26WorkerOrWorkletGlobalScopeERKNS_25FetchClientSettingsObjectE13scoped_refptrINS_21WebWorkerFetchContextEE(%"class.blink::WorkerResourceFetcherProperties"* %14, %"class.blink::WorkerOrWorkletGlobalScope"* dereferenceable(1792) %0, %"class.blink::FetchClientSettingsObject"* dereferenceable(8) %1, %"class.blink::WebWorkerFetchContext"* %15) #10
  %20 = getelementptr inbounds i8, i8* %13, i64 -4
  %21 = bitcast i8* %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  %24 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_25ResourceFetcherPropertiesEEEPhm(i64 152) #10
  %25 = bitcast i8* %24 to %"class.blink::DetachableResourceFetcherProperties"*
  %26 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink35DetachableResourceFetcherPropertiesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %24, i64 8
  %28 = bitcast i8* %27 to i8**
  store i8* %13, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %24, i64 16
  %30 = bitcast i8* %29 to %"class.blink::FetchClientSettingsObject"**
  store %"class.blink::FetchClientSettingsObject"* null, %"class.blink::FetchClientSettingsObject"** %30, align 8
  %31 = getelementptr inbounds i8, i8* %24, i64 24
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds i8, i8* %24, i64 25
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds i8, i8* %24, i64 27
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds i8, i8* %24, i64 28
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds i8, i8* %24, i64 32
  %36 = bitcast i8* %35 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %36) #10
  %37 = getelementptr inbounds i8, i8* %24, i64 144
  %38 = bitcast i8* %37 to i32*
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %24, i64 -4
  %40 = bitcast i8* %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = or i16 %41, 1
  store atomic i16 %42, i16* %40 release, align 2
  %43 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FetchContextEEEPhm(i64 80) #10
  %44 = bitcast i8* %43 to %"class.blink::WorkerFetchContext"*
  %45 = load %"class.blink::WebWorkerFetchContext"*, %"class.blink::WebWorkerFetchContext"** %9, align 8
  %46 = icmp eq %"class.blink::WebWorkerFetchContext"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %19
  %48 = getelementptr inbounds %"class.blink::WebWorkerFetchContext", %"class.blink::WebWorkerFetchContext"* %45, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #10
  br label %49

49:                                               ; preds = %19, %47
  %50 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 10, i32 0, i32 0
  %51 = load %"class.blink::SubresourceFilter"*, %"class.blink::SubresourceFilter"** %50, align 8
  tail call void @_ZN5blink18WorkerFetchContextC1ERKNS_35DetachableResourceFetcherPropertiesERNS_26WorkerOrWorkletGlobalScopeE13scoped_refptrINS_21WebWorkerFetchContextEEPNS_17SubresourceFilterERNS_21ContentSecurityPolicyERNS_28WorkerResourceTimingNotifierE(%"class.blink::WorkerFetchContext"* %44, %"class.blink::DetachableResourceFetcherProperties"* dereferenceable(152) %25, %"class.blink::WorkerOrWorkletGlobalScope"* dereferenceable(1792) %0, %"class.blink::WebWorkerFetchContext"* %45, %"class.blink::SubresourceFilter"* %51, %"class.blink::ContentSecurityPolicy"* dereferenceable(112) %2, %"class.blink::WorkerResourceTimingNotifier"* dereferenceable(8) %3) #10
  %52 = getelementptr inbounds i8, i8* %43, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  %56 = bitcast %"struct.blink::ResourceFetcherInit"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %56) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 112, i1 false)
  %57 = bitcast i8* %43 to %"class.blink::FetchContext"*
  %58 = bitcast %"class.blink::WorkerOrWorkletGlobalScope"* %0 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)***
  %59 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)*** %58, align 8
  %60 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)** %59, i64 40
  %61 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)** %60, align 8
  %62 = tail call %"class.base::SingleThreadTaskRunner"* %61(%"class.blink::WorkerOrWorkletGlobalScope"* %0, i8 zeroext 3) #10
  %63 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)*** %58, align 8
  %64 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)** %63, i64 40
  %65 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)** %64, align 8
  %66 = tail call %"class.base::SingleThreadTaskRunner"* %65(%"class.blink::WorkerOrWorkletGlobalScope"* %0, i8 zeroext 75) #10
  %67 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ResourceFetcher13LoaderFactoryEEEPhm(i64 24) #10
  %68 = load %"class.blink::WebWorkerFetchContext"*, %"class.blink::WebWorkerFetchContext"** %9, align 8
  %69 = icmp eq %"class.blink::WebWorkerFetchContext"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %49
  %71 = getelementptr inbounds %"class.blink::WebWorkerFetchContext", %"class.blink::WebWorkerFetchContext"* %68, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %71) #10
  br label %72

72:                                               ; preds = %49, %70
  %73 = ptrtoint %"class.blink::WebWorkerFetchContext"* %68 to i64
  %74 = bitcast i8* %67 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink22LoaderFactoryForWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %75 = getelementptr inbounds i8, i8* %67, i64 8
  %76 = bitcast i8* %75 to %"class.blink::WorkerOrWorkletGlobalScope"**
  store %"class.blink::WorkerOrWorkletGlobalScope"* %0, %"class.blink::WorkerOrWorkletGlobalScope"** %76, align 8
  %77 = getelementptr inbounds i8, i8* %67, i64 16
  %78 = bitcast i8* %77 to i64*
  store i64 %73, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %67, i64 -4
  %80 = bitcast i8* %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = or i16 %81, 1
  store atomic i16 %82, i16* %80 release, align 2
  %83 = bitcast i8* %67 to %"class.blink::ResourceFetcher::LoaderFactory"*
  %84 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 1, i32 0
  call void @_ZN5blink19ResourceFetcherInitC1ERNS_35DetachableResourceFetcherPropertiesEPNS_12FetchContextE13scoped_refptrIN4base22SingleThreadTaskRunnerEES8_PNS_15ResourceFetcher13LoaderFactoryEPNS_24ContextLifecycleNotifierEPNS_28BackForwardCacheLoaderHelperE(%"struct.blink::ResourceFetcherInit"* nonnull %6, %"class.blink::DetachableResourceFetcherProperties"* dereferenceable(152) %25, %"class.blink::FetchContext"* %57, %"class.base::SingleThreadTaskRunner"* %62, %"class.base::SingleThreadTaskRunner"* %66, %"class.blink::ResourceFetcher::LoaderFactory"* %83, %"class.blink::ContextLifecycleNotifier"* %84, %"class.blink::BackForwardCacheLoaderHelper"* null) #10
  %85 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20DetachableUseCounterEEEPhm(i64 16) #10
  %86 = icmp eq %"class.blink::WorkerOrWorkletGlobalScope"* %0, null
  %87 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 3
  %88 = select i1 %86, %"class.blink::UseCounter"* null, %"class.blink::UseCounter"* %87
  %89 = bitcast i8* %85 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink20DetachableUseCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 8
  %90 = getelementptr inbounds i8, i8* %85, i64 8
  %91 = bitcast i8* %90 to %"class.blink::UseCounter"**
  store %"class.blink::UseCounter"* %88, %"class.blink::UseCounter"** %91, align 8
  %92 = getelementptr inbounds i8, i8* %85, i64 -4
  %93 = bitcast i8* %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = or i16 %94, 1
  store atomic i16 %95, i16* %93 release, align 2
  %96 = getelementptr inbounds %"struct.blink::ResourceFetcherInit", %"struct.blink::ResourceFetcherInit"* %6, i64 0, i32 6
  %97 = bitcast %"class.blink::DetachableUseCounter"** %96 to i8**
  store i8* %85, i8** %97, align 8
  %98 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_23DetachableConsoleLoggerEEEPhm(i64 16) #10
  %99 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 2
  %100 = select i1 %86, %"class.blink::ConsoleLogger"* null, %"class.blink::ConsoleLogger"* %99
  %101 = bitcast i8* %98 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink23DetachableConsoleLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %102 = getelementptr inbounds i8, i8* %98, i64 8
  %103 = bitcast i8* %102 to %"class.blink::ConsoleLogger"**
  store %"class.blink::ConsoleLogger"* %100, %"class.blink::ConsoleLogger"** %103, align 8
  %104 = getelementptr inbounds i8, i8* %98, i64 -4
  %105 = bitcast i8* %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = or i16 %106, 1
  store atomic i16 %107, i16* %105 release, align 2
  %108 = getelementptr inbounds %"struct.blink::ResourceFetcherInit", %"struct.blink::ResourceFetcherInit"* %6, i64 0, i32 7
  %109 = bitcast %"class.blink::DetachableConsoleLogger"** %108 to i8**
  store i8* %98, i8** %109, align 8
  %110 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1
  %111 = bitcast %"class.blink::ExecutionContext.base"* %110 to %"class.blink::ExecutionContext"*
  %112 = bitcast %"class.blink::ExecutionContext.base"* %110 to i1 (%"class.blink::ExecutionContext"*)***
  %113 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %112, align 8
  %114 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %113, i64 3
  %115 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %114, align 8
  %116 = call zeroext i1 %115(%"class.blink::ExecutionContext"* %111) #10
  br i1 %116, label %117, label %130

117:                                              ; preds = %72
  %118 = bitcast %"class.blink::ExecutionContext.base"* %110 to %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)***
  %119 = load %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)**, %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)*** %118, align 8
  %120 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)*, %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)** %119, i64 36
  %121 = load %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)*, %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)** %120, align 8
  %122 = call %"class.blink::FrameOrWorkerScheduler"* %121(%"class.blink::ExecutionContext"* %111) #10
  %123 = getelementptr inbounds %"struct.blink::ResourceFetcherInit", %"struct.blink::ResourceFetcherInit"* %6, i64 0, i32 10
  store %"class.blink::FrameOrWorkerScheduler"* %122, %"class.blink::FrameOrWorkerScheduler"** %123, align 8
  %124 = bitcast %"class.blink::WorkerOrWorkletGlobalScope"* %0 to i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)***
  %125 = load i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)**, i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)*** %124, align 8
  %126 = getelementptr inbounds i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)*, i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)** %125, i64 44
  %127 = load i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)*, i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)** %126, align 8
  %128 = call i32 %127(%"class.blink::WorkerOrWorkletGlobalScope"* %0) #10
  %129 = getelementptr inbounds %"struct.blink::ResourceFetcherInit", %"struct.blink::ResourceFetcherInit"* %6, i64 0, i32 11
  store i32 %128, i32* %129, align 8
  br label %130

130:                                              ; preds = %117, %72
  %131 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ResourceFetcherEEEPhm(i64 496) #10
  %132 = bitcast i8* %131 to %"class.blink::ResourceFetcher"*
  call void @_ZN5blink15ResourceFetcherC1ERKNS_19ResourceFetcherInitE(%"class.blink::ResourceFetcher"* %132, %"struct.blink::ResourceFetcherInit"* nonnull dereferenceable(112) %6) #10
  %133 = getelementptr inbounds i8, i8* %131, i64 -4
  %134 = bitcast i8* %133 to i16*
  %135 = load atomic i16, i16* %134 monotonic, align 2
  %136 = or i16 %135, 1
  store atomic i16 %136, i16* %134 release, align 2
  %137 = bitcast %"class.blink::ResourceFetcher"** %5 to i8**
  store i8* %131, i8** %137, align 8
  %138 = icmp eq %"class.blink::ExecutionContext.base"* %110, null
  br i1 %138, label %146, label %139

139:                                              ; preds = %130
  %140 = bitcast %"class.blink::ExecutionContext.base"* %110 to %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)***
  %141 = load %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)**, %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)*** %140, align 8
  %142 = getelementptr inbounds %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)*, %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)** %141, i64 35
  %143 = load %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)*, %"class.blink::CoreProbeSink"* (%"class.blink::ExecutionContext"*)** %142, align 8
  %144 = call %"class.blink::CoreProbeSink"* %143(%"class.blink::ExecutionContext"* nonnull %111) #10
  %145 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %5, align 8
  br label %146

146:                                              ; preds = %130, %139
  %147 = phi %"class.blink::ResourceFetcher"* [ %145, %139 ], [ %132, %130 ]
  %148 = phi %"class.blink::CoreProbeSink"* [ %144, %139 ], [ null, %130 ]
  %149 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %147, i64 0, i32 2, i32 0, i32 0
  %150 = load %"class.blink::DetachableResourceFetcherProperties"*, %"class.blink::DetachableResourceFetcherProperties"** %149, align 8
  %151 = bitcast %"class.blink::WorkerOrWorkletGlobalScope"* %0 to %"class.base::UnguessableToken"* (%"class.blink::WorkerOrWorkletGlobalScope"*)***
  %152 = load %"class.base::UnguessableToken"* (%"class.blink::WorkerOrWorkletGlobalScope"*)**, %"class.base::UnguessableToken"* (%"class.blink::WorkerOrWorkletGlobalScope"*)*** %151, align 8
  %153 = getelementptr inbounds %"class.base::UnguessableToken"* (%"class.blink::WorkerOrWorkletGlobalScope"*)*, %"class.base::UnguessableToken"* (%"class.blink::WorkerOrWorkletGlobalScope"*)** %152, i64 38
  %154 = load %"class.base::UnguessableToken"* (%"class.blink::WorkerOrWorkletGlobalScope"*)*, %"class.base::UnguessableToken"* (%"class.blink::WorkerOrWorkletGlobalScope"*)** %153, align 8
  %155 = call dereferenceable(16) %"class.base::UnguessableToken"* %154(%"class.blink::WorkerOrWorkletGlobalScope"* %0) #10
  %156 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20ResourceLoadObserverEEEPhm(i64 48) #10
  %157 = bitcast i8* %156 to %"class.blink::ResourceLoadObserverForWorker"*
  %158 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %150, i64 0, i32 0
  call void @_ZN5blink29ResourceLoadObserverForWorkerC1ERNS_13CoreProbeSinkERKNS_25ResourceFetcherPropertiesERNS_18WorkerFetchContextERKN4base16UnguessableTokenE(%"class.blink::ResourceLoadObserverForWorker"* %157, %"class.blink::CoreProbeSink"* dereferenceable(960) %148, %"class.blink::ResourceFetcherProperties"* dereferenceable(8) %158, %"class.blink::WorkerFetchContext"* dereferenceable(80) %44, %"class.base::UnguessableToken"* dereferenceable(16) %155) #10
  %159 = getelementptr inbounds i8, i8* %156, i64 -4
  %160 = bitcast i8* %159 to i16*
  %161 = load atomic i16, i16* %160 monotonic, align 2
  %162 = or i16 %161, 1
  store atomic i16 %162, i16* %160 release, align 2
  %163 = getelementptr inbounds i8, i8* %131, i64 24
  %164 = ptrtoint i8* %156 to i64
  %165 = bitcast i8* %163 to i64*
  store atomic i64 %164, i64* %165 monotonic, align 8
  %166 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %146
  %169 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %156) #10
  br label %170

170:                                              ; preds = %146, %168
  %171 = getelementptr inbounds %"struct.blink::ResourceFetcherInit", %"struct.blink::ResourceFetcherInit"* %6, i64 0, i32 3, i32 0
  %172 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %171, align 8
  %173 = icmp eq %"class.base::SingleThreadTaskRunner"* %172, null
  br i1 %173, label %182, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %172, i64 0, i32 0, i32 0, i32 1
  %176 = getelementptr inbounds %"class.base::RefCountedThreadSafe.160", %"class.base::RefCountedThreadSafe.160"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw sub i32* %176, i32 1 acq_rel
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %179, label %182

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.base::RefCountedThreadSafe.160", %"class.base::RefCountedThreadSafe.160"* %175, i64 -2
  %181 = bitcast %"class.base::RefCountedThreadSafe.160"* %180 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %181) #10
  br label %182

182:                                              ; preds = %179, %174, %170
  %183 = getelementptr inbounds %"struct.blink::ResourceFetcherInit", %"struct.blink::ResourceFetcherInit"* %6, i64 0, i32 2, i32 0
  %184 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %183, align 8
  %185 = icmp eq %"class.base::SingleThreadTaskRunner"* %184, null
  br i1 %185, label %268, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %184, i64 0, i32 0, i32 0, i32 1
  %188 = getelementptr inbounds %"class.base::RefCountedThreadSafe.160", %"class.base::RefCountedThreadSafe.160"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = atomicrmw sub i32* %188, i32 1 acq_rel
  %190 = icmp eq i32 %189, 1
  br i1 %190, label %191, label %268

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.base::RefCountedThreadSafe.160", %"class.base::RefCountedThreadSafe.160"* %187, i64 -2
  %193 = bitcast %"class.base::RefCountedThreadSafe.160"* %192 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %193) #10
  br label %268

194:                                              ; preds = %4
  %195 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_25ResourceFetcherPropertiesEEEPhm(i64 16) #10
  %196 = bitcast i8* %195 to %"class.blink::NullResourceFetcherProperties"*
  tail call void @_ZN5blink29NullResourceFetcherPropertiesC1Ev(%"class.blink::NullResourceFetcherProperties"* %196) #10
  %197 = getelementptr inbounds i8, i8* %195, i64 -4
  %198 = bitcast i8* %197 to i16*
  %199 = load atomic i16, i16* %198 monotonic, align 2
  %200 = or i16 %199, 1
  store atomic i16 %200, i16* %198 release, align 2
  %201 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_25ResourceFetcherPropertiesEEEPhm(i64 152) #10
  %202 = bitcast i8* %201 to %"class.blink::DetachableResourceFetcherProperties"*
  %203 = bitcast i8* %201 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink35DetachableResourceFetcherPropertiesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %203, align 8
  %204 = getelementptr inbounds i8, i8* %201, i64 8
  %205 = bitcast i8* %204 to i8**
  store i8* %195, i8** %205, align 8
  %206 = getelementptr inbounds i8, i8* %201, i64 16
  %207 = bitcast i8* %206 to %"class.blink::FetchClientSettingsObject"**
  store %"class.blink::FetchClientSettingsObject"* null, %"class.blink::FetchClientSettingsObject"** %207, align 8
  %208 = getelementptr inbounds i8, i8* %201, i64 24
  store i8 0, i8* %208, align 8
  %209 = getelementptr inbounds i8, i8* %201, i64 25
  store i8 0, i8* %209, align 1
  %210 = getelementptr inbounds i8, i8* %201, i64 27
  store i8 0, i8* %210, align 1
  %211 = getelementptr inbounds i8, i8* %201, i64 28
  store i8 0, i8* %211, align 4
  %212 = getelementptr inbounds i8, i8* %201, i64 32
  %213 = bitcast i8* %212 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %213) #10
  %214 = getelementptr inbounds i8, i8* %201, i64 144
  %215 = bitcast i8* %214 to i32*
  store i32 0, i32* %215, align 8
  %216 = getelementptr inbounds i8, i8* %201, i64 -4
  %217 = bitcast i8* %216 to i16*
  %218 = load atomic i16, i16* %217 monotonic, align 2
  %219 = or i16 %218, 1
  store atomic i16 %219, i16* %217 release, align 2
  %220 = bitcast %"struct.blink::ResourceFetcherInit"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %220) #10
  %221 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FetchContextEEEPhm(i64 8) #10
  %222 = bitcast i8* %221 to %"class.blink::FetchContext"*
  %223 = bitcast i8* %221 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN5blink12FetchContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %223, align 8
  %224 = getelementptr inbounds i8, i8* %221, i64 -4
  %225 = bitcast i8* %224 to i16*
  %226 = load atomic i16, i16* %225 monotonic, align 2
  %227 = or i16 %226, 1
  store atomic i16 %227, i16* %225 release, align 2
  %228 = bitcast %"class.blink::WorkerOrWorkletGlobalScope"* %0 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)***
  %229 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)*** %228, align 8
  %230 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)** %229, i64 40
  %231 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)** %230, align 8
  %232 = tail call %"class.base::SingleThreadTaskRunner"* %231(%"class.blink::WorkerOrWorkletGlobalScope"* %0, i8 zeroext 3) #10
  %233 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)*** %228, align 8
  %234 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)** %233, i64 40
  %235 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkerOrWorkletGlobalScope"*, i8)** %234, align 8
  %236 = tail call %"class.base::SingleThreadTaskRunner"* %235(%"class.blink::WorkerOrWorkletGlobalScope"* %0, i8 zeroext 75) #10
  %237 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 1, i32 0
  call void @_ZN5blink19ResourceFetcherInitC1ERNS_35DetachableResourceFetcherPropertiesEPNS_12FetchContextE13scoped_refptrIN4base22SingleThreadTaskRunnerEES8_PNS_15ResourceFetcher13LoaderFactoryEPNS_24ContextLifecycleNotifierEPNS_28BackForwardCacheLoaderHelperE(%"struct.blink::ResourceFetcherInit"* nonnull %7, %"class.blink::DetachableResourceFetcherProperties"* dereferenceable(152) %202, %"class.blink::FetchContext"* %222, %"class.base::SingleThreadTaskRunner"* %232, %"class.base::SingleThreadTaskRunner"* %236, %"class.blink::ResourceFetcher::LoaderFactory"* null, %"class.blink::ContextLifecycleNotifier"* %237, %"class.blink::BackForwardCacheLoaderHelper"* null) #10
  %238 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ResourceFetcherEEEPhm(i64 496) #10
  %239 = bitcast i8* %238 to %"class.blink::ResourceFetcher"*
  call void @_ZN5blink15ResourceFetcherC1ERKNS_19ResourceFetcherInitE(%"class.blink::ResourceFetcher"* %239, %"struct.blink::ResourceFetcherInit"* nonnull dereferenceable(112) %7) #10
  %240 = getelementptr inbounds i8, i8* %238, i64 -4
  %241 = bitcast i8* %240 to i16*
  %242 = load atomic i16, i16* %241 monotonic, align 2
  %243 = or i16 %242, 1
  store atomic i16 %243, i16* %241 release, align 2
  %244 = bitcast %"class.blink::ResourceFetcher"** %5 to i8**
  store i8* %238, i8** %244, align 8
  %245 = getelementptr inbounds %"struct.blink::ResourceFetcherInit", %"struct.blink::ResourceFetcherInit"* %7, i64 0, i32 3, i32 0
  %246 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %245, align 8
  %247 = icmp eq %"class.base::SingleThreadTaskRunner"* %246, null
  br i1 %247, label %256, label %248

248:                                              ; preds = %194
  %249 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %246, i64 0, i32 0, i32 0, i32 1
  %250 = getelementptr inbounds %"class.base::RefCountedThreadSafe.160", %"class.base::RefCountedThreadSafe.160"* %249, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = atomicrmw sub i32* %250, i32 1 acq_rel
  %252 = icmp eq i32 %251, 1
  br i1 %252, label %253, label %256

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.base::RefCountedThreadSafe.160", %"class.base::RefCountedThreadSafe.160"* %249, i64 -2
  %255 = bitcast %"class.base::RefCountedThreadSafe.160"* %254 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %255) #10
  br label %256

256:                                              ; preds = %253, %248, %194
  %257 = getelementptr inbounds %"struct.blink::ResourceFetcherInit", %"struct.blink::ResourceFetcherInit"* %7, i64 0, i32 2, i32 0
  %258 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %257, align 8
  %259 = icmp eq %"class.base::SingleThreadTaskRunner"* %258, null
  br i1 %259, label %268, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %258, i64 0, i32 0, i32 0, i32 1
  %262 = getelementptr inbounds %"class.base::RefCountedThreadSafe.160", %"class.base::RefCountedThreadSafe.160"* %261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = atomicrmw sub i32* %262, i32 1 acq_rel
  %264 = icmp eq i32 %263, 1
  br i1 %264, label %265, label %268

265:                                              ; preds = %260
  %266 = getelementptr inbounds %"class.base::RefCountedThreadSafe.160", %"class.base::RefCountedThreadSafe.160"* %261, i64 -2
  %267 = bitcast %"class.base::RefCountedThreadSafe.160"* %266 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %267) #10
  br label %268

268:                                              ; preds = %265, %260, %256, %191, %186, %182
  %269 = phi i8* [ %56, %182 ], [ %56, %186 ], [ %56, %191 ], [ %220, %256 ], [ %220, %260 ], [ %220, %265 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %269) #10
  %270 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1
  %271 = bitcast %"class.blink::ExecutionContext.base"* %270 to %"class.blink::ExecutionContext"*
  %272 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %271) #10
  br i1 %272, label %273, label %275

273:                                              ; preds = %268
  %274 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %5, align 8
  call void @_ZN5blink15ResourceFetcher16SetDefersLoadingENS_19WebLoaderFreezeModeE(%"class.blink::ResourceFetcher"* %274, i8 zeroext 0) #10
  br label %275

275:                                              ; preds = %273, %268
  %276 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 8, i32 0, i32 0
  %277 = call { %"class.blink::WeakMember.479"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.477"* %276, %"class.blink::ResourceFetcher"** nonnull dereferenceable(8) %5, %"class.blink::ResourceFetcher"** nonnull dereferenceable(8) %5) #10
  %278 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret %"class.blink::ResourceFetcher"* %278
}

declare %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink19ResourceFetcherInitC1ERNS_35DetachableResourceFetcherPropertiesEPNS_12FetchContextE13scoped_refptrIN4base22SingleThreadTaskRunnerEES8_PNS_15ResourceFetcher13LoaderFactoryEPNS_24ContextLifecycleNotifierEPNS_28BackForwardCacheLoaderHelperE(%"struct.blink::ResourceFetcherInit"*, %"class.blink::DetachableResourceFetcherProperties"* dereferenceable(152), %"class.blink::FetchContext"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::ResourceFetcher::LoaderFactory"*, %"class.blink::ContextLifecycleNotifier"*, %"class.blink::BackForwardCacheLoaderHelper"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink15ResourceFetcher16SetDefersLoadingENS_19WebLoaderFreezeModeE(%"class.blink::ResourceFetcher"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ResourceFetcher"* @_ZNK5blink26WorkerOrWorkletGlobalScope7FetcherEv(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %2, align 8
  ret %"class.blink::ResourceFetcher"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ResourceFetcher"* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope7FetcherEv(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 80
  %3 = bitcast i64* %2 to %"class.blink::ResourceFetcher"**
  %4 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %3, align 8
  ret %"class.blink::ResourceFetcher"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ResourceFetcher"* @_ZN5blink26WorkerOrWorkletGlobalScope28CreateOutsideSettingsFetcherERKNS_25FetchClientSettingsObjectERNS_28WorkerResourceTimingNotifierE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::FetchClientSettingsObject"* dereferenceable(8), %"class.blink::WorkerResourceTimingNotifier"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::Vector.96", align 8
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ContentSecurityPolicyEEEPhm(i64 112) #10
  %7 = bitcast i8* %6 to %"class.blink::ContentSecurityPolicy"*
  tail call void @_ZN5blink21ContentSecurityPolicyC1Ev(%"class.blink::ContentSecurityPolicy"* %7) #10
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = bitcast %"class.blink::FetchClientSettingsObject"* %1 to %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)***
  %14 = load %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)**, %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)** %14, i64 4
  %16 = load %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)** %15, align 8
  %17 = tail call %"class.blink::SecurityOrigin"* %16(%"class.blink::FetchClientSettingsObject"* %1) #10
  %18 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #10
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #10
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %3, %21, %36
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %39, align 8
  %40 = call zeroext i1 @_ZN5blink14SchemeRegistry25SchemeSupportsWasmEvalCSPERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds i8, i8* %6, i64 108
  store i8 %41, i8* %42, align 4
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #10
  br label %58

58:                                               ; preds = %38, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  %59 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 13
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.96"* nonnull sret %5, %"class.WTF::Vector.96"* dereferenceable(16) %59) #10
  call void @_ZN5blink21ContentSecurityPolicy11AddPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ContentSecurityPolicy"* %7, %"class.WTF::Vector.96"* nonnull %5) #10
  %60 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %5, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %60, align 8
  %62 = icmp eq %"class.mojo::StructPtr.99"* %61, null
  br i1 %62, label %86, label %63, !prof !3

63:                                               ; preds = %58
  %64 = bitcast %"class.mojo::StructPtr.99"* %61 to i8*
  %65 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %5, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %84, label %68, !prof !2

68:                                               ; preds = %63
  %69 = zext i32 %66 to i64
  %70 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %61, i64 %69
  br label %71

71:                                               ; preds = %78, %68
  %72 = phi %"class.mojo::StructPtr.99"* [ %79, %78 ], [ %61, %68 ]
  %73 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %73, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %73, align 8
  %75 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %74) #10
  %77 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %74 to i8*
  call void @_ZdlPv(i8* %77) #16
  br label %78

78:                                               ; preds = %76, %71
  %79 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %72, i64 1
  %80 = icmp eq %"class.mojo::StructPtr.99"* %79, %70
  br i1 %80, label %81, label %71

81:                                               ; preds = %78
  store i32 0, i32* %65, align 4
  %82 = bitcast %"class.WTF::Vector.96"* %5 to i8**
  %83 = load i8*, i8** %82, align 8
  br label %84

84:                                               ; preds = %81, %63
  %85 = phi i8* [ %83, %81 ], [ %64, %63 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %85) #10
  store %"class.mojo::StructPtr.99"* null, %"class.mojo::StructPtr.99"** %60, align 8
  br label %86

86:                                               ; preds = %58, %84
  %87 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %88 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %87, i64 0, i32 1
  %89 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %88) #10
  %90 = icmp eq i8* %89, null
  br i1 %90, label %91, label %93, !prof !2

91:                                               ; preds = %86
  %92 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %88, i8* %92) #10
  br label %93

93:                                               ; preds = %91, %86
  %94 = phi i8* [ %92, %91 ], [ %89, %86 ]
  %95 = bitcast i8* %94 to %"class.blink::ThreadState"**
  %96 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %97, align 8
  %99 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_126OutsideSettingsCSPDelegateEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %93
  %102 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %103 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %102, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_126OutsideSettingsCSPDelegateEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_126OutsideSettingsCSPDelegateEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %104

104:                                              ; preds = %101, %93
  %105 = phi i32 [ %99, %93 ], [ %103, %101 ]
  %106 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %98, i64 0, i32 19, i64 1
  %107 = bitcast %"class.blink::BaseArena"** %106 to %"class.blink::NormalPageArena"**
  %108 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %108, i64 0, i32 4
  %110 = load i64, i64* %109, align 8
  %111 = icmp ult i64 %110, 40
  br i1 %111, label %142, label %112, !prof !2

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %108, i64 0, i32 3
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 40
  store i8* %115, i8** %113, align 8
  %116 = add i64 %110, -40
  store i64 %116, i64* %109, align 8
  %117 = bitcast i8* %114 to i32*
  store i32 0, i32* %117, align 4
  %118 = getelementptr inbounds i8, i8* %114, i64 4
  %119 = bitcast i8* %118 to i16*
  %120 = trunc i32 %105 to i16
  %121 = shl i16 %120, 2
  store atomic i16 %121, i16* %119 monotonic, align 2
  %122 = getelementptr inbounds i8, i8* %114, i64 6
  %123 = bitcast i8* %122 to i16*
  store i16 20, i16* %123, align 2
  %124 = ptrtoint i8* %114 to i64
  %125 = and i64 %124, -131072
  %126 = inttoptr i64 %125 to i8*
  %127 = getelementptr inbounds i8, i8* %126, i64 4400
  %128 = bitcast i8* %127 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %129 = bitcast i8* %127 to i64*
  %130 = load i64, i64* %129, align 16
  %131 = sub i64 %124, %130
  %132 = lshr i64 %131, 3
  %133 = lshr i64 %131, 6
  %134 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %128, i64 0, i32 0, i32 1, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = trunc i64 %132 to i32
  %137 = and i32 %136, 7
  %138 = shl i32 1, %137
  %139 = trunc i32 %138 to i8
  %140 = or i8 %135, %139
  store atomic i8 %140, i8* %134 release, align 1
  %141 = getelementptr inbounds i8, i8* %114, i64 8
  br label %145

142:                                              ; preds = %104
  %143 = zext i32 %105 to i64
  %144 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %108, i64 40, i64 %143) #10
  br label %145

145:                                              ; preds = %112, %142
  %146 = phi i8* [ %141, %112 ], [ %144, %142 ]
  %147 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 3
  %148 = bitcast i8* %146 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %148, align 8
  %149 = getelementptr inbounds i8, i8* %146, i64 8
  %150 = bitcast i8* %149 to %"class.blink::FetchClientSettingsObject"**
  store %"class.blink::FetchClientSettingsObject"* %1, %"class.blink::FetchClientSettingsObject"** %150, align 8
  %151 = getelementptr inbounds i8, i8* %146, i64 16
  %152 = bitcast i8* %151 to %"class.blink::UseCounter"**
  store %"class.blink::UseCounter"* %147, %"class.blink::UseCounter"** %152, align 8
  %153 = getelementptr inbounds i8, i8* %146, i64 24
  %154 = bitcast i8* %153 to %"class.blink::WorkerOrWorkletGlobalScope"**
  store %"class.blink::WorkerOrWorkletGlobalScope"* %0, %"class.blink::WorkerOrWorkletGlobalScope"** %154, align 8
  %155 = getelementptr inbounds i8, i8* %146, i64 -4
  %156 = bitcast i8* %155 to i16*
  %157 = load atomic i16, i16* %156 monotonic, align 2
  %158 = or i16 %157, 1
  store atomic i16 %158, i16* %156 release, align 2
  %159 = bitcast i8* %146 to %"class.blink::ContentSecurityPolicyDelegate"*
  call void @_ZN5blink21ContentSecurityPolicy14BindToDelegateERNS_29ContentSecurityPolicyDelegateE(%"class.blink::ContentSecurityPolicy"* %7, %"class.blink::ContentSecurityPolicyDelegate"* dereferenceable(8) %159) #10
  %160 = call %"class.blink::ResourceFetcher"* @_ZN5blink26WorkerOrWorkletGlobalScope21CreateFetcherInternalERKNS_25FetchClientSettingsObjectERNS_21ContentSecurityPolicyERNS_28WorkerResourceTimingNotifierE(%"class.blink::WorkerOrWorkletGlobalScope"* %0, %"class.blink::FetchClientSettingsObject"* dereferenceable(8) %1, %"class.blink::ContentSecurityPolicy"* dereferenceable(112) %7, %"class.blink::WorkerResourceTimingNotifier"* dereferenceable(8) %2)
  ret %"class.blink::ResourceFetcher"* %160
}

declare zeroext i1 @_ZN5blink14SchemeRegistry25SchemeSupportsWasmEvalCSPERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink21ContentSecurityPolicy11AddPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ContentSecurityPolicy"*, %"class.WTF::Vector.96"*) local_unnamed_addr #1

declare void @_ZN5blink21ContentSecurityPolicy14BindToDelegateERNS_29ContentSecurityPolicyDelegateE(%"class.blink::ContentSecurityPolicy"*, %"class.blink::ContentSecurityPolicyDelegate"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink26WorkerOrWorkletGlobalScope22IsJSExecutionForbiddenEv(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 11, i32 0, i32 0
  %3 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink31WorkerOrWorkletScriptController20IsExecutionForbiddenEv(%"class.blink::WorkerOrWorkletScriptController"* %3) #10
  ret i1 %4
}

declare zeroext i1 @_ZNK5blink31WorkerOrWorkletScriptController20IsExecutionForbiddenEv(%"class.blink::WorkerOrWorkletScriptController"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope22IsJSExecutionForbiddenEv(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 86
  %3 = bitcast i64* %2 to %"class.blink::WorkerOrWorkletScriptController"**
  %4 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink31WorkerOrWorkletScriptController20IsExecutionForbiddenEv(%"class.blink::WorkerOrWorkletScriptController"* %4) #10
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScope11DisableEvalERKN3WTF6StringE(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 11, i32 0, i32 0
  %4 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %3, align 8
  tail call void @_ZN5blink31WorkerOrWorkletScriptController11DisableEvalERKN3WTF6StringE(%"class.blink::WorkerOrWorkletScriptController"* %4, %"class.WTF::String"* dereferenceable(8) %1) #10
  ret void
}

declare void @_ZN5blink31WorkerOrWorkletScriptController11DisableEvalERKN3WTF6StringE(%"class.blink::WorkerOrWorkletScriptController"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink26WorkerOrWorkletGlobalScope11DisableEvalERKN3WTF6StringE(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 86
  %4 = bitcast i64* %3 to %"class.blink::WorkerOrWorkletScriptController"**
  %5 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %4, align 8
  tail call void @_ZN5blink31WorkerOrWorkletScriptController11DisableEvalERKN3WTF6StringE(%"class.blink::WorkerOrWorkletScriptController"* %5, %"class.WTF::String"* dereferenceable(8) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26WorkerOrWorkletGlobalScope17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 11, i32 0, i32 0
  %4 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink31WorkerOrWorkletScriptController20IsExecutionForbiddenEv(%"class.blink::WorkerOrWorkletScriptController"* %4) #10
  %6 = xor i1 %5, true
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn72_N5blink26WorkerOrWorkletGlobalScope17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 86
  %4 = bitcast i64* %3 to %"class.blink::WorkerOrWorkletScriptController"**
  %5 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink31WorkerOrWorkletScriptController20IsExecutionForbiddenEv(%"class.blink::WorkerOrWorkletScriptController"* %5) #10
  %7 = xor i1 %6, true
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScope7DisposeEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 0, i32 0
  %3 = bitcast %"class.blink::WorkerOrWorkletGlobalScope"* %0 to void (%"class.blink::EventTarget"*)***
  %4 = load void (%"class.blink::EventTarget"*)**, void (%"class.blink::EventTarget"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::EventTarget"*)*, void (%"class.blink::EventTarget"*)** %4, i64 18
  %6 = load void (%"class.blink::EventTarget"*)*, void (%"class.blink::EventTarget"*)** %5, align 8
  tail call void %6(%"class.blink::EventTarget"* %2) #10
  %7 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 11, i32 0
  %8 = getelementptr inbounds %"class.blink::MemberBase.502", %"class.blink::MemberBase.502"* %7, i64 0, i32 0
  %9 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %8, align 8
  tail call void @_ZN5blink31WorkerOrWorkletScriptController7DisposeEv(%"class.blink::WorkerOrWorkletScriptController"* %9) #10
  %10 = bitcast %"class.blink::MemberBase.502"* %7 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %15, i64 %18
  br i1 %13, label %32, label %20

20:                                               ; preds = %1
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %20, %26
  %23 = phi %"class.blink::WeakMember.479"* [ %27, %26 ], [ %15, %20 ]
  %24 = bitcast %"class.blink::WeakMember.479"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  switch i64 %25, label %29 [
    i64 -1, label %26
    i64 0, label %26
  ]

26:                                               ; preds = %22, %22
  %27 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %23, i64 1
  %28 = icmp eq %"class.blink::WeakMember.479"* %27, %19
  br i1 %28, label %32, label %22

29:                                               ; preds = %22, %20
  %30 = phi %"class.blink::WeakMember.479"* [ %15, %20 ], [ %23, %22 ]
  %31 = icmp eq %"class.blink::WeakMember.479"* %30, %19
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %33, %46, %43, %1, %29
  ret void

33:                                               ; preds = %29, %46
  %34 = phi %"class.blink::WeakMember.479"* [ %40, %46 ], [ %30, %29 ]
  %35 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %35, align 8
  tail call void @_ZN5blink15ResourceFetcher12StopFetchingEv(%"class.blink::ResourceFetcher"* %36) #10
  tail call void @_ZN5blink15ResourceFetcher12ClearContextEv(%"class.blink::ResourceFetcher"* %36) #10
  %37 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %34, i64 1
  %38 = icmp eq %"class.blink::WeakMember.479"* %37, %19
  br i1 %38, label %32, label %39

39:                                               ; preds = %33, %43
  %40 = phi %"class.blink::WeakMember.479"* [ %44, %43 ], [ %37, %33 ]
  %41 = bitcast %"class.blink::WeakMember.479"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  switch i64 %42, label %46 [
    i64 -1, label %43
    i64 0, label %43
  ]

43:                                               ; preds = %39, %39
  %44 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %40, i64 1
  %45 = icmp eq %"class.blink::WeakMember.479"* %44, %19
  br i1 %45, label %32, label %39

46:                                               ; preds = %39
  %47 = icmp eq %"class.blink::WeakMember.479"* %40, %19
  br i1 %47, label %32, label %33
}

declare void @_ZN5blink31WorkerOrWorkletScriptController7DisposeEv(%"class.blink::WorkerOrWorkletScriptController"*) local_unnamed_addr #1

declare void @_ZN5blink15ResourceFetcher12StopFetchingEv(%"class.blink::ResourceFetcher"*) local_unnamed_addr #1

declare void @_ZN5blink15ResourceFetcher12ClearContextEv(%"class.blink::ResourceFetcher"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScope12SetModulatorEPNS_9ModulatorE(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture, %"class.blink::Modulator"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 17
  %4 = ptrtoint %"class.blink::Modulator"* %1 to i64
  %5 = bitcast %"class.blink::Member.584"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Modulator"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #10
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN5blink26WorkerOrWorkletGlobalScope13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerOrWorkletGlobalScope"*, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WorkerOrWorkletGlobalScope"* %0 to %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)***
  %4 = load %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)**, %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)*, %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)** %4, i64 34
  %6 = load %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)*, %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)** %5, align 8
  %7 = tail call %"class.blink::WorkerThread"* %6(%"class.blink::WorkerOrWorkletGlobalScope"* %0) #10
  %8 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"* %7, i8 zeroext %1) #10
  ret %"class.base::SingleThreadTaskRunner"* %8
}

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZThn104_N5blink26WorkerOrWorkletGlobalScope13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerOrWorkletGlobalScope"*, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 14
  %4 = bitcast i64* %3 to %"class.blink::WorkerOrWorkletGlobalScope"*
  %5 = bitcast i64* %3 to %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)***
  %6 = load %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)**, %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)*, %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)** %6, i64 34
  %8 = load %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)*, %"class.blink::WorkerThread"* (%"class.blink::WorkerOrWorkletGlobalScope"*)** %7, align 8
  %9 = tail call %"class.blink::WorkerThread"* %8(%"class.blink::WorkerOrWorkletGlobalScope"* %4) #10
  %10 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"* %9, i8 zeroext %1) #10
  ret %"class.base::SingleThreadTaskRunner"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScope15SetSandboxFlagsEN7network5mojom15WebSandboxFlagsE(%"class.blink::WorkerOrWorkletGlobalScope"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::ExecutionContext.base"* %3 to %"class.blink::ExecutionContext"*
  %5 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1, i32 6
  tail call void @_ZN5blink15SecurityContext15SetSandboxFlagsEN7network5mojom15WebSandboxFlagsE(%"class.blink::SecurityContext"* %5, i32 %1) #10
  %6 = tail call zeroext i1 @_ZNK5blink16ExecutionContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::ExecutionContext"* %4, i32 4) #10
  br i1 %6, label %7, label %15

7:                                                ; preds = %2
  %8 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %4) #10
  %9 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %4) #10
  %14 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin21DeriveNewOpaqueOriginEv(%"class.blink::SecurityOrigin"* %13) #10
  tail call void @_ZN5blink15SecurityContext17SetSecurityOriginE13scoped_refptrINS_14SecurityOriginEE(%"class.blink::SecurityContext"* %5, %"class.blink::SecurityOrigin"* %14) #10
  br label %15

15:                                               ; preds = %7, %12, %2
  ret void
}

declare void @_ZN5blink15SecurityContext15SetSandboxFlagsEN7network5mojom15WebSandboxFlagsE(%"class.blink::SecurityContext"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16ExecutionContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin21DeriveNewOpaqueOriginEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScope33SetOutsideContentSecurityPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture, %"class.WTF::Vector.96"* nocapture) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 13
  %4 = bitcast %"class.WTF::Vector.96"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::Vector.96"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  store atomic i64 %7, i64* %4 monotonic, align 8
  store atomic i64 %5, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %8, align 4
  %11 = load i32, i32* %9, align 4
  store i32 %11, i32* %8, align 4
  store i32 %10, i32* %9, align 4
  %12 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScope35InitContentSecurityPolicyFromVectorEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.WTF::Vector.96"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.96", align 8
  %5 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1
  %6 = bitcast %"class.blink::ExecutionContext.base"* %5 to %"class.blink::ExecutionContext"*
  %7 = tail call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* %6) #10
  %8 = icmp eq %"class.blink::ContentSecurityPolicy"* %7, null
  br i1 %8, label %9, label %59

9:                                                ; preds = %2
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ContentSecurityPolicyEEEPhm(i64 112) #10
  %11 = bitcast i8* %10 to %"class.blink::ContentSecurityPolicy"*
  tail call void @_ZN5blink21ContentSecurityPolicyC1Ev(%"class.blink::ContentSecurityPolicy"* %11) #10
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %6) #10
  %18 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #10
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #10
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %9, %21, %36
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %39, align 8
  %40 = call zeroext i1 @_ZN5blink14SchemeRegistry25SchemeSupportsWasmEvalCSPERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds i8, i8* %10, i64 108
  store i8 %41, i8* %42, align 4
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #10
  br label %58

58:                                               ; preds = %38, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  call void @_ZN5blink16ExecutionContext24SetContentSecurityPolicyEPNS_21ContentSecurityPolicyE(%"class.blink::ExecutionContext"* %6, %"class.blink::ContentSecurityPolicy"* %11) #10
  br label %59

59:                                               ; preds = %2, %58
  %60 = call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* %6) #10
  %61 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %4, i64 0, i32 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %4, i64 0, i32 0, i32 0, i32 2
  %63 = bitcast %"class.WTF::Vector.96"* %1 to i64*
  %64 = bitcast %"class.WTF::Vector.96"* %4 to i64*
  store i64 0, i64* %64, align 8
  %65 = load i64, i64* %63, align 8
  %66 = bitcast %"class.WTF::Vector.96"* %4 to i64*
  store atomic i64 0, i64* %63 monotonic, align 8
  store atomic i64 %65, i64* %66 monotonic, align 8
  %67 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %1, i64 0, i32 0, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  store i32 %68, i32* %61, align 8
  store i32 0, i32* %67, align 4
  %69 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %1, i64 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %62, align 4
  store i32 0, i32* %69, align 4
  call void @_ZN5blink21ContentSecurityPolicy11AddPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ContentSecurityPolicy"* %60, %"class.WTF::Vector.96"* nonnull %4) #10
  %71 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %4, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %71, align 8
  %73 = icmp eq %"class.mojo::StructPtr.99"* %72, null
  br i1 %73, label %96, label %74, !prof !3

74:                                               ; preds = %59
  %75 = bitcast %"class.mojo::StructPtr.99"* %72 to i8*
  %76 = load i32, i32* %62, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %94, label %78, !prof !2

78:                                               ; preds = %74
  %79 = zext i32 %76 to i64
  %80 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %72, i64 %79
  br label %81

81:                                               ; preds = %88, %78
  %82 = phi %"class.mojo::StructPtr.99"* [ %89, %88 ], [ %72, %78 ]
  %83 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %82, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %83, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %83, align 8
  %85 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %81
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %84) #10
  %87 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %84 to i8*
  call void @_ZdlPv(i8* %87) #16
  br label %88

88:                                               ; preds = %86, %81
  %89 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %82, i64 1
  %90 = icmp eq %"class.mojo::StructPtr.99"* %89, %80
  br i1 %90, label %91, label %81

91:                                               ; preds = %88
  store i32 0, i32* %62, align 4
  %92 = bitcast %"class.WTF::Vector.96"* %4 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %91, %74
  %95 = phi i8* [ %93, %91 ], [ %75, %74 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %95) #10
  store %"class.mojo::StructPtr.99"* null, %"class.mojo::StructPtr.99"** %71, align 8
  br label %96

96:                                               ; preds = %59, %94
  ret void
}

declare void @_ZN5blink16ExecutionContext24SetContentSecurityPolicyEPNS_21ContentSecurityPolicyE(%"class.blink::ExecutionContext"*, %"class.blink::ContentSecurityPolicy"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScope43BindContentSecurityPolicyToExecutionContextEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::ExecutionContext.base"* %2 to %"class.blink::ExecutionContext"*
  %4 = tail call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* %3) #10
  %5 = tail call dereferenceable(8) %"class.blink::ContentSecurityPolicyDelegate"* @_ZN5blink16ExecutionContext32GetContentSecurityPolicyDelegateEv(%"class.blink::ExecutionContext"* %3) #10
  tail call void @_ZN5blink21ContentSecurityPolicy14BindToDelegateERNS_29ContentSecurityPolicyDelegateE(%"class.blink::ContentSecurityPolicy"* %4, %"class.blink::ContentSecurityPolicyDelegate"* dereferenceable(8) %5) #10
  ret void
}

declare dereferenceable(8) %"class.blink::ContentSecurityPolicyDelegate"* @_ZN5blink16ExecutionContext32GetContentSecurityPolicyDelegateEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScope17FetchModuleScriptERKNS_4KURLERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationENSC_15CredentialsModeENS_27ModuleScriptCustomFetchTypeEPNS_16ModuleTreeClientE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::FetchClientSettingsObjectSnapshot"* dereferenceable(296), %"class.blink::WorkerResourceTimingNotifier"* dereferenceable(8), i32, i32, i32, i32, %"class.blink::ModuleTreeClient"*) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.blink::ScriptFetchOptions", align 8
  %11 = bitcast %"class.blink::WorkerOrWorkletGlobalScope"* %0 to i8 (%"class.blink::WorkerOrWorkletGlobalScope"*)***
  %12 = load i8 (%"class.blink::WorkerOrWorkletGlobalScope"*)**, i8 (%"class.blink::WorkerOrWorkletGlobalScope"*)*** %11, align 8
  %13 = getelementptr inbounds i8 (%"class.blink::WorkerOrWorkletGlobalScope"*)*, i8 (%"class.blink::WorkerOrWorkletGlobalScope"*)** %12, i64 36
  %14 = load i8 (%"class.blink::WorkerOrWorkletGlobalScope"*)*, i8 (%"class.blink::WorkerOrWorkletGlobalScope"*)** %13, align 8
  %15 = tail call i8 %14(%"class.blink::WorkerOrWorkletGlobalScope"* %0) #10
  %16 = icmp ne i8 %15, 0
  %17 = icmp eq i32 %5, 20
  %18 = and i1 %17, %16
  %19 = zext i1 %18 to i8
  %20 = bitcast %"class.blink::ScriptFetchOptions"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %20) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 64, i1 false)
  %21 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 3
  %23 = bitcast %"class.blink::ScriptFetchOptions"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 28, i1 false)
  store i8 1, i8* %22, align 8
  %24 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 5
  store i32 %6, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 6
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 7
  store i32 1, i32* %26, align 4
  %27 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 8
  store i8 2, i8* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 9, i32 0
  store i8 %19, i8* %28, align 1
  %29 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 11, i32 0, i32 0
  %30 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::WorkerOrWorkletScriptController", %"class.blink::WorkerOrWorkletScriptController"* %30, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %31, align 8
  %33 = tail call %"class.blink::Modulator"* @_ZN5blink9Modulator4FromEPNS_11ScriptStateE(%"class.blink::ScriptState"* %32) #10
  %34 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %2, i64 0, i32 0
  %35 = tail call %"class.blink::ResourceFetcher"* @_ZN5blink26WorkerOrWorkletGlobalScope28CreateOutsideSettingsFetcherERKNS_25FetchClientSettingsObjectERNS_28WorkerResourceTimingNotifierE(%"class.blink::WorkerOrWorkletGlobalScope"* %0, %"class.blink::FetchClientSettingsObject"* dereferenceable(8) %34, %"class.blink::WorkerResourceTimingNotifier"* dereferenceable(8) %3)
  %36 = bitcast %"class.blink::Modulator"* %33 to void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)***
  %37 = load void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)**, void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)*, void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)** %37, i64 9
  %39 = load void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)*, void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)** %38, align 8
  call void %39(%"class.blink::Modulator"* %33, %"class.blink::KURL"* dereferenceable(112) %1, i32 1, %"class.blink::ResourceFetcher"* %35, i32 %4, i32 %5, %"class.blink::ScriptFetchOptions"* nonnull dereferenceable(64) %10, i32 %7, %"class.blink::ModuleTreeClient"* %8) #10
  call void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %20) #10
  ret void
}

declare %"class.blink::Modulator"* @_ZN5blink9Modulator4FromEPNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.818"*, %"struct.std::__1::pair.818"** %19, align 8
  %21 = icmp eq %"struct.std::__1::pair.818"* %20, null
  br i1 %21, label %54, label %22, !prof !3

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %52, label %26

26:                                               ; preds = %22
  %27 = zext i32 %24 to i64
  br label %28

28:                                               ; preds = %49, %26
  %29 = phi i64 [ 0, %26 ], [ %50, %49 ]
  %30 = getelementptr inbounds %"struct.std::__1::pair.818", %"struct.std::__1::pair.818"* %20, i64 %29
  %31 = bitcast %"struct.std::__1::pair.818"* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast i8* %32 to %"class.WTF::StringImpl"*
  %34 = ptrtoint i8* %32 to i64
  switch i64 %34, label %35 [
    i64 -1, label %49
    i64 0, label %49
  ]

35:                                               ; preds = %28
  %36 = getelementptr inbounds i8, i8* %32, i64 8
  %37 = bitcast i8* %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = bitcast i8* %32 to i32*
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %35
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %35
  %46 = phi i32 [ %44, %43 ], [ %42, %35 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #10
  br label %49

49:                                               ; preds = %48, %45, %28, %28
  %50 = add nuw nsw i64 %29, 1
  %51 = icmp eq i64 %50, %27
  br i1 %51, label %52, label %28

52:                                               ; preds = %49, %22
  %53 = bitcast %"struct.std::__1::pair.818"* %20 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #10
  store %"struct.std::__1::pair.818"* null, %"struct.std::__1::pair.818"** %19, align 8
  br label %54

54:                                               ; preds = %18, %52
  %55 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #10
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkerOrWorkletGlobalScope35SetDefersLoadingForResourceFetchersENS_19WebLoaderFreezeModeE(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readonly, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %7 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %7, i64 %10
  br i1 %5, label %24, label %12

12:                                               ; preds = %2
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %12, %18
  %15 = phi %"class.blink::WeakMember.479"* [ %19, %18 ], [ %7, %12 ]
  %16 = bitcast %"class.blink::WeakMember.479"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %14, %14
  %19 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %15, i64 1
  %20 = icmp eq %"class.blink::WeakMember.479"* %19, %11
  br i1 %20, label %24, label %14

21:                                               ; preds = %14, %12
  %22 = phi %"class.blink::WeakMember.479"* [ %7, %12 ], [ %15, %14 ]
  %23 = icmp eq %"class.blink::WeakMember.479"* %22, %11
  br i1 %23, label %24, label %25

24:                                               ; preds = %18, %25, %38, %35, %2, %21
  ret void

25:                                               ; preds = %21, %38
  %26 = phi %"class.blink::WeakMember.479"* [ %32, %38 ], [ %22, %21 ]
  %27 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %27, align 8
  tail call void @_ZN5blink15ResourceFetcher16SetDefersLoadingENS_19WebLoaderFreezeModeE(%"class.blink::ResourceFetcher"* %28, i8 zeroext %1) #10
  %29 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %26, i64 1
  %30 = icmp eq %"class.blink::WeakMember.479"* %29, %11
  br i1 %30, label %24, label %31

31:                                               ; preds = %25, %35
  %32 = phi %"class.blink::WeakMember.479"* [ %36, %35 ], [ %29, %25 ]
  %33 = bitcast %"class.blink::WeakMember.479"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  switch i64 %34, label %38 [
    i64 -1, label %35
    i64 0, label %35
  ]

35:                                               ; preds = %31, %31
  %36 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %32, i64 1
  %37 = icmp eq %"class.blink::WeakMember.479"* %36, %11
  br i1 %37, label %24, label %31

38:                                               ; preds = %31
  %39 = icmp eq %"class.blink::WeakMember.479"* %32, %11
  br i1 %39, label %24, label %25
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink26WorkerOrWorkletGlobalScope28GetOutstandingThrottledLimitEv(%"class.blink::WorkerOrWorkletGlobalScope"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 7
  %5 = bitcast %"class.blink::Member.471"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv) #10
  br label %14

14:                                               ; preds = %2, %8
  %15 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 8
  %16 = bitcast %"class.blink::HeapHashSet.473"* %15 to i8*
  %17 = bitcast %"class.blink::HeapHashSet.473"* %15 to i64*
  %18 = load atomic i64, i64* %17 monotonic, align 8
  %19 = inttoptr i64 %18 to %"class.blink::WeakMember.479"*
  %20 = bitcast %"class.blink::HeapHashSet.473"* %15 to i8**
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %22 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %22, i64 11
  %24 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8** %20) #10
  %25 = inttoptr i64 %18 to i8*
  %26 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #10
  %27 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"class.blink::WeakMember.479"**
  store %"class.blink::WeakMember.479"* %19, %"class.blink::WeakMember.479"** %27, align 8
  %28 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %28, align 8
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %30 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %30, i64 10
  %32 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8* %25, i8** %20, i8* %25, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_15ResourceFetcherEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %16) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  %33 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 10
  %34 = bitcast %"class.blink::Member.482"* %33 to i64*
  %35 = load atomic i64, i64* %34 monotonic, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %14
  %38 = inttoptr i64 %35 to i8*
  %39 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %1, i8* nonnull %38, i8* nonnull %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SubresourceFilterEE5TraceEPNS_7VisitorEPKv) #10
  br label %43

43:                                               ; preds = %14, %37
  %44 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 11
  %45 = bitcast %"class.blink::Member.501"* %44 to i64*
  %46 = load atomic i64, i64* %45 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %43
  %49 = inttoptr i64 %46 to i8*
  %50 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %51 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, i64 5
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, align 8
  tail call void %53(%"class.blink::Visitor"* %1, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_31WorkerOrWorkletScriptControllerEE5TraceEPNS_7VisitorEPKv) #10
  br label %54

54:                                               ; preds = %43, %48
  %55 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 17
  %56 = bitcast %"class.blink::Member.584"* %55 to i64*
  %57 = load atomic i64, i64* %56 monotonic, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %54
  %60 = inttoptr i64 %57 to i8*
  %61 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %1, i8* nonnull %60, i8* nonnull %60, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv) #10
  br label %65

65:                                               ; preds = %54, %59
  %66 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 0, i32 1
  %67 = bitcast %"class.blink::EventTargetData"* %66 to i8*
  %68 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %67, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0), i32 261) #10
  %69 = bitcast i8* %68 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %69, %"class.blink::Visitor"* %1) #10
  %70 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %70, %"class.blink::Visitor"* %1) #10
  %71 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 1
  %72 = bitcast %"class.blink::ExecutionContext.base"* %71 to %"class.blink::ExecutionContext"*
  tail call void @_ZNK5blink16ExecutionContext5TraceEPNS_7VisitorE(%"class.blink::ExecutionContext"* %72, %"class.blink::Visitor"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE(%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %6, %"class.blink::Visitor"* %1) #10
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %7, %"class.blink::Visitor"* %1) #10
  ret void
}

declare void @_ZNK5blink16ExecutionContext5TraceEPNS_7VisitorE(%"class.blink::ExecutionContext"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 18
  %4 = bitcast i64* %3 to %"class.blink::WorkerOrWorkletGlobalScope"*
  tail call void @_ZNK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkerOrWorkletGlobalScope"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 14
  %4 = bitcast i64* %3 to %"class.blink::WorkerOrWorkletGlobalScope"*
  tail call void @_ZNK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkerOrWorkletGlobalScope"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn144_NK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 9
  %4 = bitcast i64* %3 to %"class.blink::WorkerOrWorkletGlobalScope"*
  tail call void @_ZNK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkerOrWorkletGlobalScope"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn176_NK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 5
  %4 = bitcast i64* %3 to %"class.blink::WorkerOrWorkletGlobalScope"*
  tail call void @_ZNK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkerOrWorkletGlobalScope"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn184_NK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 4
  %4 = bitcast i64* %3 to %"class.blink::WorkerOrWorkletGlobalScope"*
  tail call void @_ZNK5blink26WorkerOrWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkerOrWorkletGlobalScope"* %4, %"class.blink::Visitor"* %1)
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #10
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11EventTarget18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare void @__cxa_pure_virtual() unnamed_addr

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WorkerNavigator"* @_ZNK5blink26WorkerOrWorkletGlobalScope9navigatorEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::WorkerNavigator"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8 @_ZNK5blink26WorkerOrWorkletGlobalScope41ShouldRejectCoepUnsafeNoneTopModuleScriptEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 12
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext8IsWindowEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext19IsWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext20IsWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext30IsMainThreadWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext28IsDedicatedWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25IsSharedWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext26IsServiceWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext29IsAnimationWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25IsAudioWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext26IsLayoutWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25IsPaintWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext28IsThreadedWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext15IsContextThreadEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25ShouldInstallV8ExtensionsEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.blink::ContentSecurityPolicy"* @_ZN5blink16ExecutionContext32GetContentSecurityPolicyForWorldEPKNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext20GetUserAgentMetadataEv(%"struct.blink::UserAgentMetadata"* noalias sret, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.blink::UserAgentMetadata"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 152, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 87
  %3 = bitcast i64* %2 to i32*
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

declare void @_ZN5blink16ExecutionContext24RemoveURLFromMemoryCacheERKNS_4KURLE(%"class.blink::ExecutionContext"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16ExecutionContext29HasInsecureContextInAncestorsEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink16ExecutionContext16OutgoingReferrerEv(%"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CoreProbeSink"* @_ZN5blink16ExecutionContext12GetProbeSinkEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CoreProbeSink"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::TrustedTypePolicyFactory"* @_ZNK5blink16ExecutionContext15GetTrustedTypesEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::TrustedTypePolicyFactory"* null
}

declare zeroext i1 @_ZNK5blink16ExecutionContext19RequireTrustedTypesEv(%"class.blink::ExecutionContext"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE(%"class.blink::ExecutionContext"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext32ReportPermissionsPolicyViolationENS_5mojom24PermissionsPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringE(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext29ReportDocumentPolicyViolationENS_5mojom21DocumentPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringES7_(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ukm::UkmRecorder"* @_ZN5blink16ExecutionContext11UkmRecorderEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.ukm::UkmRecorder"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink16ExecutionContext11UkmSourceIDEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext30GetParentExecutionContextTokenEv(%"class.absl::optional.2429"* noalias sret, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional.2429", %"class.absl::optional.2429"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.absl::optional.2429", %"class.absl::optional.2429"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = bitcast %union.anon.2433* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptWrappable"* @_ZN5blink16ExecutionContext17ToScriptWrappableEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::ScriptWrappable"* null
}

declare void @_ZN5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #1

declare void @_ZN5blink24ContextLifecycleNotifier27AddContextLifecycleObserverEPNS_24ContextLifecycleObserverE(%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*) unnamed_addr #1

declare void @_ZN5blink24ContextLifecycleNotifier30RemoveContextLifecycleObserverEPNS_24ContextLifecycleObserverE(%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn120_NK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE(%"class.blink::ExecutionContext"*, i32) unnamed_addr #0 align 2

declare void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #10

declare void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD2Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %6) #10
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD0Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12FetchContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FetchContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #9 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12FetchContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FetchContext"*
  %4 = bitcast i8* %1 to void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)**, void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FetchContext"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_12FetchContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FetchContext"*
  %3 = bitcast i8* %0 to void (%"class.blink::FetchContext"*)***
  %4 = load void (%"class.blink::FetchContext"*)**, void (%"class.blink::FetchContext"*)*** %3, align 8
  %5 = load void (%"class.blink::FetchContext"*)*, void (%"class.blink::FetchContext"*)** %4, align 8
  tail call void %5(%"class.blink::FetchContext"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12FetchContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13WorkerClientsELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::WorkerClients"**
  %5 = load %"class.blink::WorkerClients"*, %"class.blink::WorkerClients"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::WorkerClients"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::WorkerClients"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13WorkerClientsEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13WorkerClientsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast i8* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #10
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_13WorkerClientsEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_13WorkerClientsEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_13WorkerClientsEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_13WorkerClientsEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #10
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_13WorkerClientsEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.276"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %181, %20
  ret void

33:                                               ; preds = %181, %30
  %34 = phi i64 [ 0, %30 ], [ %182, %181 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.276", %"struct.WTF::KeyValuePair.276"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.276"* %35 to i64*
  br i1 %28, label %37, label %109

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %181
    i64 0, label %181
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.276", %"struct.WTF::KeyValuePair.276"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.2458"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %181, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = and i64 %42, -131072
  %47 = inttoptr i64 %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 4138
  %49 = load i8, i8* %48, align 2
  %50 = icmp eq i8 %49, 1
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 4160
  br label %91

53:                                               ; preds = %44
  %54 = getelementptr inbounds i8, i8* %47, i64 4096
  %55 = bitcast i8* %54 to %"class.blink::NormalPage"*
  %56 = getelementptr inbounds i8, i8* %47, i64 4400
  %57 = bitcast i8* %56 to i8**
  %58 = bitcast i8* %56 to i64*
  %59 = load i64, i64* %58, align 16
  %60 = sub i64 %42, %59
  %61 = lshr i64 %60, 3
  %62 = lshr i64 %60, 6
  %63 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %55, i64 0, i32 2, i32 0, i32 1, i64 %62
  %64 = load atomic i8, i8* %63 acquire, align 1
  %65 = trunc i64 %61 to i32
  %66 = and i32 %65, 7
  %67 = shl i32 2, %66
  %68 = trunc i32 %67 to i8
  %69 = add i8 %68, -1
  %70 = and i8 %69, %64
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %53, %72
  %73 = phi i64 [ %74, %72 ], [ %62, %53 ]
  %74 = add i64 %73, -1
  %75 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %55, i64 0, i32 2, i32 0, i32 1, i64 %74
  %76 = load atomic i8, i8* %75 acquire, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %72, label %78

78:                                               ; preds = %72, %53
  %79 = phi i64 [ %62, %53 ], [ %74, %72 ]
  %80 = phi i8 [ %70, %53 ], [ %76, %72 ]
  %81 = zext i8 %80 to i32
  %82 = tail call i32 @llvm.ctlz.i32(i32 %81, i1 true) #10, !range !5
  %83 = add nsw i32 %82, -24
  %84 = shl i64 %79, 3
  %85 = or i64 %84, 7
  %86 = sext i32 %83 to i64
  %87 = sub i64 %85, %86
  %88 = shl i64 %87, 3
  %89 = load i8*, i8** %57, align 16
  %90 = getelementptr inbounds i8, i8* %89, i64 %88
  br label %91

91:                                               ; preds = %78, %51
  %92 = phi i8* [ %52, %51 ], [ %90, %78 ]
  %93 = getelementptr inbounds i8, i8* %92, i64 8
  %94 = getelementptr inbounds i8, i8* %92, i64 4
  %95 = bitcast i8* %94 to i16*
  %96 = load atomic i16, i16* %95 acquire, align 2
  %97 = lshr i16 %96, 2
  %98 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %99 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %98, i64 0, i32 0
  %100 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %99, align 8
  %101 = zext i16 %97 to i64
  %102 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %100, i64 %101
  %103 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %102, align 8
  %104 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %103, i64 0, i32 0
  %105 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %104, align 8
  %106 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %107 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %106, i64 5
  %108 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %107, align 8
  tail call void %108(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* %93, void (%"class.blink::Visitor"*, i8*)* %105) #10
  br label %181

109:                                              ; preds = %33
  %110 = load i64, i64* %36, align 8
  switch i64 %110, label %111 [
    i64 -1, label %181
    i64 0, label %181
  ]

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.276", %"struct.WTF::KeyValuePair.276"* %3, i64 %34, i32 1
  %113 = bitcast %"class.blink::Member.2458"* %112 to i64*
  %114 = load atomic i64, i64* %113 monotonic, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %181, label %116

116:                                              ; preds = %111
  %117 = inttoptr i64 %114 to i8*
  %118 = and i64 %114, -131072
  %119 = inttoptr i64 %118 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 4138
  %121 = load i8, i8* %120, align 2
  %122 = icmp eq i8 %121, 1
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = getelementptr inbounds i8, i8* %119, i64 4160
  br label %163

125:                                              ; preds = %116
  %126 = getelementptr inbounds i8, i8* %119, i64 4096
  %127 = bitcast i8* %126 to %"class.blink::NormalPage"*
  %128 = getelementptr inbounds i8, i8* %119, i64 4400
  %129 = bitcast i8* %128 to i8**
  %130 = bitcast i8* %128 to i64*
  %131 = load i64, i64* %130, align 16
  %132 = sub i64 %114, %131
  %133 = lshr i64 %132, 3
  %134 = lshr i64 %132, 6
  %135 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %127, i64 0, i32 2, i32 0, i32 1, i64 %134
  %136 = load atomic i8, i8* %135 acquire, align 1
  %137 = trunc i64 %133 to i32
  %138 = and i32 %137, 7
  %139 = shl i32 2, %138
  %140 = trunc i32 %139 to i8
  %141 = add i8 %140, -1
  %142 = and i8 %141, %136
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %150

144:                                              ; preds = %125, %144
  %145 = phi i64 [ %146, %144 ], [ %134, %125 ]
  %146 = add i64 %145, -1
  %147 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %127, i64 0, i32 2, i32 0, i32 1, i64 %146
  %148 = load atomic i8, i8* %147 acquire, align 1
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %144, label %150

150:                                              ; preds = %144, %125
  %151 = phi i64 [ %134, %125 ], [ %146, %144 ]
  %152 = phi i8 [ %142, %125 ], [ %148, %144 ]
  %153 = zext i8 %152 to i32
  %154 = tail call i32 @llvm.ctlz.i32(i32 %153, i1 true) #10, !range !5
  %155 = add nsw i32 %154, -24
  %156 = shl i64 %151, 3
  %157 = or i64 %156, 7
  %158 = sext i32 %155 to i64
  %159 = sub i64 %157, %158
  %160 = shl i64 %159, 3
  %161 = load i8*, i8** %129, align 16
  %162 = getelementptr inbounds i8, i8* %161, i64 %160
  br label %163

163:                                              ; preds = %150, %123
  %164 = phi i8* [ %124, %123 ], [ %162, %150 ]
  %165 = getelementptr inbounds i8, i8* %164, i64 8
  %166 = getelementptr inbounds i8, i8* %164, i64 4
  %167 = bitcast i8* %166 to i16*
  %168 = load atomic i16, i16* %167 acquire, align 2
  %169 = lshr i16 %168, 2
  %170 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %171 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %170, i64 0, i32 0
  %172 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %171, align 8
  %173 = zext i16 %169 to i64
  %174 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %172, i64 %173
  %175 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %174, align 8
  %176 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %175, i64 0, i32 0
  %177 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %176, align 8
  %178 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %179 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %178, i64 5
  %180 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %179, align 8
  tail call void %180(%"class.blink::Visitor"* %0, i8* nonnull %117, i8* %165, void (%"class.blink::Visitor"*, i8*)* %177) #10
  br label %181

181:                                              ; preds = %109, %109, %37, %37, %163, %111, %39, %91
  %182 = add nuw nsw i64 %34, 1
  %183 = icmp eq i64 %182, %23
  br i1 %183, label %32, label %33
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #11

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZN5blink31WorkerOrWorkletScriptControllerC1EPNS_26WorkerOrWorkletGlobalScopeEPN2v87IsolateE(%"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.v8::Isolate"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_31WorkerOrWorkletScriptControllerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_31WorkerOrWorkletScriptControllerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_31WorkerOrWorkletScriptControllerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_31WorkerOrWorkletScriptControllerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink31WorkerOrWorkletScriptControllerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_31WorkerOrWorkletScriptControllerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WorkerOrWorkletScriptController"*
  tail call void @_ZNK5blink31WorkerOrWorkletScriptController5TraceEPNS_7VisitorE(%"class.blink::WorkerOrWorkletScriptController"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_31WorkerOrWorkletScriptControllerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::WorkerOrWorkletScriptController"*
  tail call void @_ZN5blink31WorkerOrWorkletScriptControllerD1Ev(%"class.blink::WorkerOrWorkletScriptController"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_31WorkerOrWorkletScriptControllerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink31WorkerOrWorkletScriptController5TraceEPNS_7VisitorE(%"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink31WorkerOrWorkletScriptControllerD1Ev(%"class.blink::WorkerOrWorkletScriptController"*) unnamed_addr #3

declare void @_ZN5blink17SubresourceFilterC1EPNS_16ExecutionContextENSt3__110unique_ptrINS_28WebDocumentSubresourceFilterENS3_14default_deleteIS5_EEEE(%"class.blink::SubresourceFilter"*, %"class.blink::ExecutionContext"*, %"class.blink::WebDocumentSubresourceFilter"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17SubresourceFilterEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17SubresourceFilterEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17SubresourceFilterEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17SubresourceFilterEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17SubresourceFilterEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17SubresourceFilterEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SubresourceFilter"*
  tail call void @_ZNK5blink17SubresourceFilter5TraceEPNS_7VisitorE(%"class.blink::SubresourceFilter"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17SubresourceFilterEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SubresourceFilter"*
  tail call void @_ZN5blink17SubresourceFilterD1Ev(%"class.blink::SubresourceFilter"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17SubresourceFilterEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink17SubresourceFilter5TraceEPNS_7VisitorE(%"class.blink::SubresourceFilter"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink17SubresourceFilterD1Ev(%"class.blink::SubresourceFilter"*) unnamed_addr #3

declare void @_ZN5blink29FetchClientSettingsObjectImplC1ERNS_16ExecutionContextE(%"class.blink::FetchClientSettingsObjectImpl"*, %"class.blink::ExecutionContext"* dereferenceable(376)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_25FetchClientSettingsObjectEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25FetchClientSettingsObjectEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_25FetchClientSettingsObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FetchClientSettingsObject"*
  %4 = bitcast i8* %1 to void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)**, void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)** %5, i64 12
  %7 = load void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FetchClientSettingsObject"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_25FetchClientSettingsObjectEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FetchClientSettingsObject"*
  %3 = bitcast i8* %0 to void (%"class.blink::FetchClientSettingsObject"*)***
  %4 = load void (%"class.blink::FetchClientSettingsObject"*)**, void (%"class.blink::FetchClientSettingsObject"*)*** %3, align 8
  %5 = load void (%"class.blink::FetchClientSettingsObject"*)*, void (%"class.blink::FetchClientSettingsObject"*)** %4, align 8
  tail call void %5(%"class.blink::FetchClientSettingsObject"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_25FetchClientSettingsObjectEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink31WorkerResourceFetcherPropertiesC1ERNS_26WorkerOrWorkletGlobalScopeERKNS_25FetchClientSettingsObjectE13scoped_refptrINS_21WebWorkerFetchContextEE(%"class.blink::WorkerResourceFetcherProperties"*, %"class.blink::WorkerOrWorkletGlobalScope"* dereferenceable(1792), %"class.blink::FetchClientSettingsObject"* dereferenceable(8), %"class.blink::WebWorkerFetchContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_25ResourceFetcherPropertiesEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_25ResourceFetcherPropertiesEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_25ResourceFetcherPropertiesEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_25ResourceFetcherPropertiesEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25ResourceFetcherPropertiesEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_25ResourceFetcherPropertiesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ResourceFetcherProperties"*
  %4 = bitcast i8* %1 to void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)**, void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ResourceFetcherProperties"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_25ResourceFetcherPropertiesEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ResourceFetcherProperties"*
  %3 = bitcast i8* %0 to void (%"class.blink::ResourceFetcherProperties"*)***
  %4 = load void (%"class.blink::ResourceFetcherProperties"*)**, void (%"class.blink::ResourceFetcherProperties"*)*** %3, align 8
  %5 = load void (%"class.blink::ResourceFetcherProperties"*)*, void (%"class.blink::ResourceFetcherProperties"*)** %4, align 8
  tail call void %5(%"class.blink::ResourceFetcherProperties"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_25ResourceFetcherPropertiesEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

declare void @_ZN5blink18WorkerFetchContextC1ERKNS_35DetachableResourceFetcherPropertiesERNS_26WorkerOrWorkletGlobalScopeE13scoped_refptrINS_21WebWorkerFetchContextEEPNS_17SubresourceFilterERNS_21ContentSecurityPolicyERNS_28WorkerResourceTimingNotifierE(%"class.blink::WorkerFetchContext"*, %"class.blink::DetachableResourceFetcherProperties"* dereferenceable(152), %"class.blink::WorkerOrWorkletGlobalScope"* dereferenceable(1792), %"class.blink::WebWorkerFetchContext"*, %"class.blink::SubresourceFilter"*, %"class.blink::ContentSecurityPolicy"* dereferenceable(112), %"class.blink::WorkerResourceTimingNotifier"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ResourceFetcher13LoaderFactoryEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ResourceFetcher13LoaderFactoryEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ResourceFetcher13LoaderFactoryEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ResourceFetcher13LoaderFactoryEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ResourceFetcher13LoaderFactoryEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ResourceFetcher13LoaderFactoryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ResourceFetcher::LoaderFactory"*
  %4 = bitcast i8* %1 to void (%"class.blink::ResourceFetcher::LoaderFactory"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ResourceFetcher::LoaderFactory"*, %"class.blink::Visitor"*)**, void (%"class.blink::ResourceFetcher::LoaderFactory"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ResourceFetcher::LoaderFactory"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceFetcher::LoaderFactory"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::ResourceFetcher::LoaderFactory"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceFetcher::LoaderFactory"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ResourceFetcher::LoaderFactory"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ResourceFetcher13LoaderFactoryEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ResourceFetcher::LoaderFactory"*
  %3 = bitcast i8* %0 to void (%"class.blink::ResourceFetcher::LoaderFactory"*)***
  %4 = load void (%"class.blink::ResourceFetcher::LoaderFactory"*)**, void (%"class.blink::ResourceFetcher::LoaderFactory"*)*** %3, align 8
  %5 = load void (%"class.blink::ResourceFetcher::LoaderFactory"*)*, void (%"class.blink::ResourceFetcher::LoaderFactory"*)** %4, align 8
  tail call void %5(%"class.blink::ResourceFetcher::LoaderFactory"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ResourceFetcher13LoaderFactoryEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20DetachableUseCounterEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20DetachableUseCounterEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20DetachableUseCounterEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20DetachableUseCounterEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20DetachableUseCounterEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20DetachableUseCounterEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #10, !range !5
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #10
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20DetachableUseCounterEE8FinalizeEPv(i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20DetachableUseCounterEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20DetachableUseCounter5TraceEPNS_7VisitorE(%"class.blink::DetachableUseCounter"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::DetachableUseCounter", %"class.blink::DetachableUseCounter"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.613"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #10, !range !5
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #10
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor5TraceINS_10UseCounterEEEvRKNS_6MemberIT_EE(%"class.blink::Visitor"*, %"class.blink::Member.613"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.613"* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %72, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = and i64 %4, -131072
  %9 = inttoptr i64 %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 4138
  %11 = load i8, i8* %10, align 2
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %6
  %14 = getelementptr inbounds i8, i8* %9, i64 4160
  br label %53

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8, i8* %9, i64 4096
  %17 = bitcast i8* %16 to %"class.blink::NormalPage"*
  %18 = getelementptr inbounds i8, i8* %9, i64 4400
  %19 = bitcast i8* %18 to i8**
  %20 = bitcast i8* %18 to i64*
  %21 = load i64, i64* %20, align 16
  %22 = sub i64 %4, %21
  %23 = lshr i64 %22, 3
  %24 = lshr i64 %22, 6
  %25 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %17, i64 0, i32 2, i32 0, i32 1, i64 %24
  %26 = load atomic i8, i8* %25 acquire, align 1
  %27 = trunc i64 %23 to i32
  %28 = and i32 %27, 7
  %29 = shl i32 2, %28
  %30 = trunc i32 %29 to i8
  %31 = add i8 %30, -1
  %32 = and i8 %31, %26
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %15, %34
  %35 = phi i64 [ %36, %34 ], [ %24, %15 ]
  %36 = add i64 %35, -1
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %17, i64 0, i32 2, i32 0, i32 1, i64 %36
  %38 = load atomic i8, i8* %37 acquire, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %34, label %40

40:                                               ; preds = %34, %15
  %41 = phi i64 [ %24, %15 ], [ %36, %34 ]
  %42 = phi i8 [ %32, %15 ], [ %38, %34 ]
  %43 = zext i8 %42 to i32
  %44 = tail call i32 @llvm.ctlz.i32(i32 %43, i1 true) #10, !range !5
  %45 = add nsw i32 %44, -24
  %46 = shl i64 %41, 3
  %47 = or i64 %46, 7
  %48 = sext i32 %45 to i64
  %49 = sub i64 %47, %48
  %50 = shl i64 %49, 3
  %51 = load i8*, i8** %19, align 16
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  br label %53

53:                                               ; preds = %40, %13
  %54 = phi i8* [ %14, %13 ], [ %52, %40 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 8
  %56 = getelementptr inbounds i8, i8* %54, i64 4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 acquire, align 2
  %59 = lshr i16 %58, 2
  %60 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %61 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %60, i64 0, i32 0
  %62 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %61, align 8
  %63 = zext i16 %59 to i64
  %64 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %62, i64 %63
  %65 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %64, align 8
  %66 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %65, i64 0, i32 0
  %67 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %66, align 8
  %68 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %69, i64 5
  %71 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, align 8
  tail call void %71(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* %55, void (%"class.blink::Visitor"*, i8*)* %67) #10
  br label %72

72:                                               ; preds = %2, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10UseCounterD2Ev(%"class.blink::UseCounter"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20DetachableUseCounterD0Ev(%"class.blink::DetachableUseCounter"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20DetachableUseCounter8CountUseENS_5mojom10WebFeatureE(%"class.blink::DetachableUseCounter"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::DetachableUseCounter", %"class.blink::DetachableUseCounter"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::UseCounter"*, %"class.blink::UseCounter"** %3, align 8
  %5 = icmp eq %"class.blink::UseCounter"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::UseCounter"* %4 to void (%"class.blink::UseCounter"*, i32)***
  %8 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %8, i64 3
  %10 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %9, align 8
  tail call void %10(%"class.blink::UseCounter"* nonnull %4, i32 %1) #10
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_23DetachableConsoleLoggerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_23DetachableConsoleLoggerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_23DetachableConsoleLoggerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_23DetachableConsoleLoggerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23DetachableConsoleLoggerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23DetachableConsoleLoggerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #10, !range !5
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #10
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_23DetachableConsoleLoggerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_23DetachableConsoleLoggerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink23DetachableConsoleLogger5TraceEPNS_7VisitorE(%"class.blink::DetachableConsoleLogger"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::DetachableConsoleLogger", %"class.blink::DetachableConsoleLogger"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.619"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #10, !range !5
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #10
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23DetachableConsoleLoggerD0Ev(%"class.blink::DetachableConsoleLogger"*) unnamed_addr #9 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23DetachableConsoleLogger21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb(%"class.blink::DetachableConsoleLogger"*, i32, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.blink::DetachableConsoleLogger", %"class.blink::DetachableConsoleLogger"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::ConsoleLogger"*, %"class.blink::ConsoleLogger"** %6, align 8
  %8 = icmp eq %"class.blink::ConsoleLogger"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::ConsoleLogger"* %7 to void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)***
  %11 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)**, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %11, i64 3
  %13 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %12, align 8
  tail call void %13(%"class.blink::ConsoleLogger"* nonnull %7, i32 %1, i32 %2, %"class.WTF::String"* dereferenceable(8) %3, i1 zeroext %4) #10
  br label %14

14:                                               ; preds = %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ConsoleLoggerD2Ev(%"class.blink::ConsoleLogger"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink15ResourceFetcherC1ERKNS_19ResourceFetcherInitE(%"class.blink::ResourceFetcher"*, %"struct.blink::ResourceFetcherInit"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ResourceFetcherEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ResourceFetcherEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ResourceFetcherEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ResourceFetcherEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ResourceFetcherEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ResourceFetcher"*
  %4 = bitcast i8* %1 to void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)**, void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ResourceFetcher"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ResourceFetcherEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ResourceFetcher"*
  %3 = bitcast i8* %0 to void (%"class.blink::ResourceFetcher"*)***
  %4 = load void (%"class.blink::ResourceFetcher"*)**, void (%"class.blink::ResourceFetcher"*)*** %3, align 8
  %5 = load void (%"class.blink::ResourceFetcher"*)*, void (%"class.blink::ResourceFetcher"*)** %4, align 8
  tail call void %5(%"class.blink::ResourceFetcher"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ResourceFetcherEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink29ResourceLoadObserverForWorkerC1ERNS_13CoreProbeSinkERKNS_25ResourceFetcherPropertiesERNS_18WorkerFetchContextERKN4base16UnguessableTokenE(%"class.blink::ResourceLoadObserverForWorker"*, %"class.blink::CoreProbeSink"* dereferenceable(960), %"class.blink::ResourceFetcherProperties"* dereferenceable(8), %"class.blink::WorkerFetchContext"* dereferenceable(80), %"class.base::UnguessableToken"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20ResourceLoadObserverEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20ResourceLoadObserverEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20ResourceLoadObserverEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20ResourceLoadObserverEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20ResourceLoadObserverEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20ResourceLoadObserverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ResourceLoadObserver"*
  %4 = bitcast i8* %1 to void (%"class.blink::ResourceLoadObserver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ResourceLoadObserver"*, %"class.blink::Visitor"*)**, void (%"class.blink::ResourceLoadObserver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ResourceLoadObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceLoadObserver"*, %"class.blink::Visitor"*)** %5, i64 11
  %7 = load void (%"class.blink::ResourceLoadObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceLoadObserver"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ResourceLoadObserver"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20ResourceLoadObserverEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ResourceLoadObserver"*
  %3 = bitcast i8* %0 to void (%"class.blink::ResourceLoadObserver"*)***
  %4 = load void (%"class.blink::ResourceLoadObserver"*)**, void (%"class.blink::ResourceLoadObserver"*)*** %3, align 8
  %5 = load void (%"class.blink::ResourceLoadObserver"*)*, void (%"class.blink::ResourceLoadObserver"*)** %4, align 8
  tail call void %5(%"class.blink::ResourceLoadObserver"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20ResourceLoadObserverEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink29NullResourceFetcherPropertiesC1Ev(%"class.blink::NullResourceFetcherProperties"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::WeakMember.479"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.477"*, %"class.blink::ResourceFetcher"** dereferenceable(8), %"class.blink::ResourceFetcher"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 0
  %5 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %4, align 8
  %6 = icmp eq %"class.blink::WeakMember.479"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::WeakMember.479"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.477"* %0, %"class.blink::WeakMember.479"* null)
  %9 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::WeakMember.479"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::ResourceFetcher"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %40, align 8
  %42 = icmp eq %"class.blink::ResourceFetcher"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::ResourceFetcher"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::ResourceFetcher"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::WeakMember.479"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::WeakMember.479"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::ResourceFetcher"* %59, %43
  br i1 %64, label %149, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::ResourceFetcher"* %59, inttoptr (i64 -1 to %"class.blink::ResourceFetcher"*)
  %67 = select i1 %66, %"class.blink::WeakMember.479"* %60, %"class.blink::WeakMember.479"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %73, align 8
  %75 = icmp eq %"class.blink::ResourceFetcher"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::WeakMember.479"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::WeakMember.479"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::WeakMember.479"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %2, align 8
  %89 = ptrtoint %"class.blink::ResourceFetcher"* %88 to i64
  %90 = bitcast %"class.blink::WeakMember.479"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::ResourceFetcher"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #10
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::WeakMember.479"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #10
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::WeakMember.479"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.477"* %0, %"class.blink::WeakMember.479"* %87)
  br label %149

115:                                              ; preds = %103
  %116 = mul i32 %106, 6
  %117 = icmp ult i32 %116, %111
  %118 = icmp ugt i32 %111, 8
  %119 = and i1 %117, %118
  br i1 %119, label %120, label %149

120:                                              ; preds = %115
  %121 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %122 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %121, i64 0, i32 1
  %123 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %122) #10
  %124 = icmp eq i8* %123, null
  br i1 %124, label %125, label %127, !prof !2

125:                                              ; preds = %120
  %126 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %122, i8* %126) #10
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi i8* [ %126, %125 ], [ %123, %120 ]
  %129 = bitcast i8* %128 to %"class.blink::ThreadState"**
  %130 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 6
  %132 = load i8, i8* %131, align 8, !range !4
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 16
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %149, label %138

138:                                              ; preds = %127, %134
  %139 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 13
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %149

142:                                              ; preds = %138
  %143 = load i32, i32* %12, align 8
  %144 = lshr i32 %143, 1
  %145 = zext i32 %144 to i64
  %146 = tail call %"class.blink::HeapHashTableBacking.2630"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %145) #10
  %147 = bitcast %"class.blink::HeapHashTableBacking.2630"* %146 to %"class.blink::WeakMember.479"*
  %148 = tail call %"class.blink::WeakMember.479"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.477"* %0, %"class.blink::WeakMember.479"* %147, i32 %144, %"class.blink::WeakMember.479"* %87) #10
  br label %149

149:                                              ; preds = %58, %134, %115, %113, %142, %138
  %150 = phi i8 [ 1, %138 ], [ 1, %142 ], [ 1, %113 ], [ 1, %115 ], [ 1, %134 ], [ 0, %58 ]
  %151 = phi %"class.blink::WeakMember.479"* [ %87, %138 ], [ %148, %142 ], [ %114, %113 ], [ %87, %115 ], [ %87, %134 ], [ %60, %58 ]
  %152 = insertvalue { %"class.blink::WeakMember.479"*, i8 } undef, %"class.blink::WeakMember.479"* %151, 0
  %153 = insertvalue { %"class.blink::WeakMember.479"*, i8 } %152, i8 %150, 1
  ret { %"class.blink::WeakMember.479"*, i8 } %153
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember.479"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.477"*, %"class.blink::WeakMember.479"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::WeakMember.479"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.477"* %0, i32 %35, %"class.blink::WeakMember.479"* %1, i8* nonnull dereferenceable(1) %4) #10
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.2630"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #10
  %43 = bitcast %"class.blink::HeapHashTableBacking.2630"* %42 to %"class.blink::WeakMember.479"*
  %44 = call %"class.blink::WeakMember.479"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.477"* %0, %"class.blink::WeakMember.479"* %43, i32 %40, %"class.blink::WeakMember.479"* %1) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::WeakMember.479"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::WeakMember.479"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember.479"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.477"*, i32, %"class.blink::WeakMember.479"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 0
  %32 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %31, align 8
  %33 = icmp eq %"class.blink::WeakMember.479"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::WeakMember.479"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.2630"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking.2630"* %44 to %"class.blink::WeakMember.479"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::WeakMember.479"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::WeakMember.479"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %58, i64 %54
  %60 = icmp eq %"class.blink::WeakMember.479"* %59, %2
  %61 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::WeakMember.479"* %61, %"class.blink::WeakMember.479"* %55
  %63 = bitcast %"class.blink::WeakMember.479"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::WeakMember.479"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::WeakMember.479"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.477"* %0 to %"class.blink::HeapHashTableBacking.2630"**
  store %"class.blink::HeapHashTableBacking.2630"* %44, %"class.blink::HeapHashTableBacking.2630"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking.2630", %"class.blink::HeapHashTableBacking.2630"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #10
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::WeakMember.479"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::WeakMember.479"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.477"* %0, %"class.blink::WeakMember.479"* %42, i32 %1, %"class.blink::WeakMember.479"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::WeakMember.479"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %84, i64 %81
  %86 = icmp eq %"class.blink::WeakMember.479"* %85, %2
  %87 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::WeakMember.479"* %87, %"class.blink::WeakMember.479"* %82
  %89 = bitcast %"class.blink::WeakMember.479"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::WeakMember.479"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %96, i64 %95
  %98 = icmp eq %"class.blink::WeakMember.479"* %97, %2
  %99 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::WeakMember.479"* %99, %"class.blink::WeakMember.479"* %88
  %101 = bitcast %"class.blink::WeakMember.479"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::WeakMember.479"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::WeakMember.479"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::WeakMember.479"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember.479"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.477"*, %"class.blink::WeakMember.479"*, i32, %"class.blink::WeakMember.479"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.477", align 8
  %6 = bitcast %"class.WTF::HashTable.477"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.477"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.blink::WeakMember.479"* %1, %"class.blink::WeakMember.479"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"class.blink::WeakMember.479"* %1 to i64
  %17 = bitcast %"class.blink::WeakMember.479"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 0
  %20 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %19, align 8
  br label %48

21:                                               ; preds = %140
  %22 = bitcast %"class.WTF::HashTable.477"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %141, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"class.blink::WeakMember.479"* [ null, %15 ], [ %143, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %25
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #10
  %33 = load i32, i32* %12, align 8
  br label %34

34:                                               ; preds = %25, %32
  %35 = phi i32 [ %27, %25 ], [ %33, %32 ]
  %36 = bitcast %"class.WTF::HashTable.477"* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.WTF::HashTable.477"* %5 to i64*
  store atomic i64 %26, i64* %36 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = inttoptr i64 %26 to i8*
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #10
  br label %44

44:                                               ; preds = %34, %41
  store i32 %2, i32* %12, align 8
  store i64 %37, i64* %38, align 8
  store i32 %35, i32* %8, align 8
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable.477"* nonnull %5)
  %45 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, -2147483648
  store i32 %47, i32* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"class.blink::WeakMember.479"* %29

48:                                               ; preds = %18, %140
  %49 = phi i32 [ %13, %18 ], [ %141, %140 ]
  %50 = phi %"class.blink::WeakMember.479"* [ %20, %18 ], [ %142, %140 ]
  %51 = phi %"class.blink::WeakMember.479"* [ null, %18 ], [ %143, %140 ]
  %52 = phi i32 [ 0, %18 ], [ %144, %140 ]
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %50, i64 %53
  %55 = bitcast %"class.blink::WeakMember.479"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  switch i64 %56, label %57 [
    i64 -1, label %140
    i64 0, label %140
  ]

57:                                               ; preds = %48
  %58 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %7, align 8
  %59 = load i32, i32* %8, align 8
  %60 = add i32 %59, -1
  %61 = zext i32 %60 to i64
  %62 = shl i64 %56, 32
  %63 = xor i64 %62, -1
  %64 = add i64 %56, %63
  %65 = lshr i64 %64, 22
  %66 = xor i64 %65, %64
  %67 = shl i64 %66, 13
  %68 = xor i64 %67, -1
  %69 = add i64 %66, %68
  %70 = lshr i64 %69, 8
  %71 = xor i64 %70, %69
  %72 = mul i64 %71, 9
  %73 = lshr i64 %72, 15
  %74 = xor i64 %73, %72
  %75 = shl i64 %74, 27
  %76 = xor i64 %75, -1
  %77 = add i64 %74, %76
  %78 = lshr i64 %77, 31
  %79 = xor i64 %78, %77
  %80 = trunc i64 %79 to i32
  %81 = and i32 %60, %80
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %58, i64 %82
  %84 = ptrtoint %"class.blink::WeakMember.479"* %83 to i64
  %85 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %83, i64 0, i32 0, i32 0
  %86 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %85, align 8
  %87 = icmp eq %"class.blink::ResourceFetcher"* %86, null
  %88 = inttoptr i64 %56 to %"class.blink::ResourceFetcher"*
  br i1 %87, label %106, label %89

89:                                               ; preds = %57
  %90 = xor i32 %80, -1
  %91 = lshr i32 %80, 23
  %92 = add i32 %91, %90
  %93 = shl i32 %92, 12
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 7
  %96 = xor i32 %95, %94
  %97 = shl i32 %96, 2
  %98 = xor i32 %97, %96
  %99 = lshr i32 %98, 20
  %100 = xor i32 %99, %98
  %101 = or i32 %100, 1
  %102 = zext i32 %101 to i64
  br label %112

103:                                              ; preds = %119
  %104 = ptrtoint %"class.blink::WeakMember.479"* %126 to i64
  %105 = inttoptr i64 %121 to %"class.blink::WeakMember.479"*
  br label %106

106:                                              ; preds = %103, %57
  %107 = phi i64 [ %104, %103 ], [ %84, %57 ]
  %108 = phi %"class.blink::WeakMember.479"* [ %105, %103 ], [ null, %57 ]
  %109 = icmp eq %"class.blink::WeakMember.479"* %108, null
  %110 = ptrtoint %"class.blink::WeakMember.479"* %108 to i64
  %111 = select i1 %109, i64 %107, i64 %110
  br label %131

112:                                              ; preds = %119, %89
  %113 = phi i64 [ 0, %89 ], [ %121, %119 ]
  %114 = phi %"class.blink::ResourceFetcher"* [ %86, %89 ], [ %129, %119 ]
  %115 = phi i64 [ %84, %89 ], [ %127, %119 ]
  %116 = phi i64 [ %82, %89 ], [ %125, %119 ]
  %117 = phi i64 [ 0, %89 ], [ %123, %119 ]
  %118 = icmp eq %"class.blink::ResourceFetcher"* %114, %88
  br i1 %118, label %131, label %119

119:                                              ; preds = %112
  %120 = icmp eq %"class.blink::ResourceFetcher"* %114, inttoptr (i64 -1 to %"class.blink::ResourceFetcher"*)
  %121 = select i1 %120, i64 %115, i64 %113
  %122 = icmp eq i64 %117, 0
  %123 = select i1 %122, i64 %102, i64 %117
  %124 = add i64 %123, %116
  %125 = and i64 %124, %61
  %126 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %58, i64 %125
  %127 = ptrtoint %"class.blink::WeakMember.479"* %126 to i64
  %128 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %126, i64 0, i32 0, i32 0
  %129 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %128, align 8
  %130 = icmp eq %"class.blink::ResourceFetcher"* %129, null
  br i1 %130, label %103, label %112

131:                                              ; preds = %112, %106
  %132 = phi i64 [ %111, %106 ], [ %115, %112 ]
  %133 = inttoptr i64 %132 to %"class.blink::WeakMember.479"*
  %134 = inttoptr i64 %132 to i64*
  store i64 %56, i64* %134, align 8
  %135 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %19, align 8
  %136 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %135, i64 %53
  %137 = icmp eq %"class.blink::WeakMember.479"* %136, %3
  %138 = select i1 %137, %"class.blink::WeakMember.479"* %133, %"class.blink::WeakMember.479"* %51
  %139 = load i32, i32* %12, align 8
  br label %140

140:                                              ; preds = %48, %48, %131
  %141 = phi i32 [ %49, %48 ], [ %139, %131 ], [ %49, %48 ]
  %142 = phi %"class.blink::WeakMember.479"* [ %50, %48 ], [ %135, %131 ], [ %50, %48 ]
  %143 = phi %"class.blink::WeakMember.479"* [ %51, %48 ], [ %138, %131 ], [ %51, %48 ]
  %144 = add i32 %52, 1
  %145 = icmp eq i32 %144, %141
  br i1 %145, label %21, label %48
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.2630"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.14, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.2630"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.2630"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([387 x i8], [387 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_15ResourceFetcherEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WeakMember.479"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %3, i64 %33
  %35 = bitcast %"class.blink::WeakMember.479"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_15ResourceFetcherEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_15ResourceFetcherEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable.477"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 0
  %3 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %2, align 8
  %4 = icmp eq %"class.blink::WeakMember.479"* %3, null
  br i1 %4, label %45, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %41, label %10

10:                                               ; preds = %5
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #10
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !2

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #10
  br label %17

17:                                               ; preds = %10, %15
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 9
  %22 = load i8, i8* %21, align 1, !range !4
  %23 = icmp ne i8 %22, 0
  %24 = icmp ne i32 %7, 0
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %41

26:                                               ; preds = %17
  %27 = zext i32 %7 to i64
  br label %28

28:                                               ; preds = %38, %26
  %29 = phi i64 [ 0, %26 ], [ %39, %38 ]
  %30 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %3, i64 %29
  %31 = bitcast %"class.blink::WeakMember.479"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %33 [
    i64 -1, label %38
    i64 0, label %38
  ]

33:                                               ; preds = %28
  store atomic i64 -1, i64* %31 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #10
  br label %38

38:                                               ; preds = %36, %33, %28, %28
  %39 = add nuw nsw i64 %29, 1
  %40 = icmp eq i64 %39, %27
  br i1 %40, label %41, label %28

41:                                               ; preds = %38, %5, %17
  %42 = bitcast %"class.blink::WeakMember.479"* %3 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %42) #10
  %43 = bitcast %"class.WTF::HashTable.477"* %0 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  store i32 0, i32* %6, align 8
  %44 = getelementptr inbounds %"class.WTF::HashTable.477", %"class.WTF::HashTable.477"* %0, i64 0, i32 2
  store i32 0, i32* %44, align 4
  br label %45

45:                                               ; preds = %1, %41
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink21ContentSecurityPolicyC1Ev(%"class.blink::ContentSecurityPolicy"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21ContentSecurityPolicyEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ContentSecurityPolicyEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21ContentSecurityPolicyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContentSecurityPolicy"*
  tail call void @_ZNK5blink21ContentSecurityPolicy5TraceEPNS_7VisitorE(%"class.blink::ContentSecurityPolicy"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_21ContentSecurityPolicyEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ContentSecurityPolicy"*
  tail call void @_ZN5blink21ContentSecurityPolicyD1Ev(%"class.blink::ContentSecurityPolicy"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21ContentSecurityPolicyEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink21ContentSecurityPolicy5TraceEPNS_7VisitorE(%"class.blink::ContentSecurityPolicy"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink21ContentSecurityPolicyD1Ev(%"class.blink::ContentSecurityPolicy"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.96"* noalias sret, %"class.WTF::Vector.96"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.99", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.96"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  %8 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !2

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %12) #10
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #10
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.96"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.99"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.99"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.99"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  %31 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %31, align 8, !noalias !6
  %33 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !6
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.99"* nonnull sret %3, %"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %32) #10
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !2

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.99"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.96"* %0, %"class.mojo::StructPtr.99"* nonnull dereferenceable(8) %3) #10
  %50 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %50 to i8*
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %50) #10
  call void @_ZdlPv(i8* %53) #16
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  %55 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.99"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.96"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.99"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.96"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.99"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.99"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.99"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.99"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !13

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.99"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.99"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.99"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.99"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.99"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.99"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.99"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.99"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.99"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.99"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.99"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.99"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.99"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #10
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %73) #10
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #10
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.99"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.99"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.99"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.99"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.99"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.99"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !15

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.99"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.99"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.99"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.99"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.99"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.99"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.99"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.99"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.99"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.99"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.99"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.99"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.99"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.96"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #10
  %149 = bitcast %"class.WTF::Vector.96"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.96"*, %"class.mojo::StructPtr.99"* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.99"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.99"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.99"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.96"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.99"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.96"* %0, i32 %22) #10
  %36 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.99"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.99"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.99"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.96"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.99"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.96"* %0, i32 %50) #10
  %64 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.99"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.99"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.99"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.99"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.99"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.99"* noalias sret, %"class.network::mojom::blink::ContentSecurityPolicy"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.mojo::StructPtr.103", align 8
  %5 = alloca %"class.WTF::HashMap.110", align 8
  %6 = alloca %"class.WTF::HashMap.115", align 8
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca %"class.mojo::InlinedStructPtr", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.WTF::Vector.120", align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.mojo::StructPtr.125", align 8
  %16 = alloca %"class.WTF::Vector.120", align 8
  %17 = bitcast %"class.mojo::StructPtr.103"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %18, align 8, !noalias !16
  %20 = icmp eq %"class.network::mojom::blink::CSPSource"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.mojo::StructPtr.103"* %4 to i64*
  store i64 0, i64* %22, align 8, !alias.scope !16
  br label %24

23:                                               ; preds = %2
  call void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.103"* nonnull sret %4, %"class.network::mojom::blink::CSPSource"* nonnull %19) #10
  br label %24

24:                                               ; preds = %21, %23
  %25 = bitcast %"class.WTF::HashMap.110"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 1
  call void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_(%"class.WTF::HashMap.110"* nonnull sret %5, %"class.WTF::HashMap.110"* dereferenceable(24) %26) #10
  %27 = bitcast %"class.WTF::HashMap.115"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 2
  call void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_(%"class.WTF::HashMap.115"* nonnull sret %6, %"class.WTF::HashMap.115"* dereferenceable(24) %28) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #10
  %29 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 3
  %30 = load i8, i8* %29, align 1, !range !4
  store i8 %30, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #10
  %31 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 4
  %32 = load i8, i8* %31, align 1, !range !4
  store i8 %32, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #10
  %33 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 5
  %34 = load i8, i8* %33, align 1, !range !4
  store i8 %34, i8* %9, align 1
  %35 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #10
  %36 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 6
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %10, align 4
  %38 = bitcast %"class.mojo::InlinedStructPtr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #10
  %39 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 1
  %40 = load i32, i32* %39, align 8, !noalias !23
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #10, !alias.scope !23
  %43 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %43) #10
  %44 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 1
  store i32 0, i32* %44, align 8, !alias.scope !23
  br label %91

45:                                               ; preds = %24
  %46 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10, !noalias !30
  %47 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8, !noalias !30
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #10
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %55
  call void @llvm.trap() #10
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %50, %45
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %68, align 8, !noalias !30
  %69 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 1
  %70 = load i32, i32* %69, align 4, !noalias !30
  %71 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 2
  %72 = load i32, i32* %71, align 4, !noalias !30
  %73 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %73, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 %70, i32 %72) #10
  %74 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 1
  store i32 1, i32* %74, align 8, !alias.scope !33
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8, !noalias !30
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #10
  br label %90

90:                                               ; preds = %67, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10, !noalias !30
  br label %91

91:                                               ; preds = %42, %90
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #10
  %92 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 8
  %93 = load i8, i8* %92, align 1, !range !4
  store i8 %93, i8* %12, align 1
  %94 = bitcast %"class.WTF::Vector.120"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #10
  %95 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 9
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.120"* nonnull sret %13, %"class.WTF::Vector.120"* dereferenceable(16) %95) #10
  %96 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #10
  %97 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 10
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %14, align 4
  %99 = bitcast %"class.mojo::StructPtr.125"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #10
  %100 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %101 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %100, align 8, !noalias !36
  %102 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %91
  %104 = bitcast %"class.mojo::StructPtr.125"* %15 to i64*
  store i64 0, i64* %104, align 8, !alias.scope !36
  br label %106

105:                                              ; preds = %91
  call void @_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.125"* nonnull sret %15, %"class.network::mojom::blink::CSPTrustedTypes"* nonnull %101) #10
  br label %106

106:                                              ; preds = %103, %105
  %107 = bitcast %"class.WTF::Vector.120"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #10
  %108 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 12
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.120"* nonnull sret %16, %"class.WTF::Vector.120"* dereferenceable(16) %108) #10
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.99"* %0, %"class.mojo::StructPtr.103"* nonnull dereferenceable(8) %4, %"class.WTF::HashMap.110"* nonnull dereferenceable(24) %5, %"class.WTF::HashMap.115"* nonnull dereferenceable(24) %6, i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(1) %8, i8* nonnull dereferenceable(1) %9, i32* nonnull dereferenceable(4) %10, %"class.mojo::InlinedStructPtr"* nonnull dereferenceable(24) %11, i8* nonnull dereferenceable(1) %12, %"class.WTF::Vector.120"* nonnull dereferenceable(16) %13, i32* nonnull dereferenceable(4) %14, %"class.mojo::StructPtr.125"* nonnull dereferenceable(8) %15, %"class.WTF::Vector.120"* nonnull dereferenceable(16) %16) #10
  %109 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %16, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::String"*, %"class.WTF::String"** %109, align 8
  %111 = icmp eq %"class.WTF::String"* %110, null
  br i1 %111, label %146, label %112, !prof !3

112:                                              ; preds = %106
  %113 = bitcast %"class.WTF::String"* %110 to i8*
  %114 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %16, i64 0, i32 0, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %144, label %117, !prof !2

117:                                              ; preds = %112
  %118 = zext i32 %115 to i64
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 %118
  br label %120

120:                                              ; preds = %138, %117
  %121 = phi %"class.WTF::String"* [ %139, %138 ], [ %110, %117 ]
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #10
  br label %138

138:                                              ; preds = %137, %134, %120
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 1
  %140 = icmp eq %"class.WTF::String"* %139, %119
  br i1 %140, label %141, label %120

141:                                              ; preds = %138
  store i32 0, i32* %114, align 4
  %142 = bitcast %"class.WTF::Vector.120"* %16 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %141, %112
  %145 = phi i8* [ %143, %141 ], [ %113, %112 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %145) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %109, align 8
  br label %146

146:                                              ; preds = %106, %144
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #10
  %147 = getelementptr inbounds %"class.mojo::StructPtr.125", %"class.mojo::StructPtr.125"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %147, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %147, align 8
  %149 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %148) #10
  %151 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %148 to i8*
  call void @_ZdlPv(i8* %151) #16
  br label %152

152:                                              ; preds = %146, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #10
  %153 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %13, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::String"*, %"class.WTF::String"** %153, align 8
  %155 = icmp eq %"class.WTF::String"* %154, null
  br i1 %155, label %190, label %156, !prof !3

156:                                              ; preds = %152
  %157 = bitcast %"class.WTF::String"* %154 to i8*
  %158 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %13, i64 0, i32 0, i32 0, i32 2
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %188, label %161, !prof !2

161:                                              ; preds = %156
  %162 = zext i32 %159 to i64
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %154, i64 %162
  br label %164

164:                                              ; preds = %182, %161
  %165 = phi %"class.WTF::String"* [ %183, %182 ], [ %154, %161 ]
  %166 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #10
  br label %182

182:                                              ; preds = %181, %178, %164
  %183 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %165, i64 1
  %184 = icmp eq %"class.WTF::String"* %183, %163
  br i1 %184, label %185, label %164

185:                                              ; preds = %182
  store i32 0, i32* %158, align 4
  %186 = bitcast %"class.WTF::Vector.120"* %13 to i8**
  %187 = load i8*, i8** %186, align 8
  br label %188

188:                                              ; preds = %185, %156
  %189 = phi i8* [ %187, %185 ], [ %157, %156 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %189) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %153, align 8
  br label %190

190:                                              ; preds = %152, %188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #10
  %191 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %191) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  %192 = getelementptr inbounds %"class.WTF::HashMap.115", %"class.WTF::HashMap.115"* %6, i64 0, i32 0, i32 0
  %193 = load %"struct.WTF::KeyValuePair.119"*, %"struct.WTF::KeyValuePair.119"** %192, align 8
  %194 = icmp eq %"struct.WTF::KeyValuePair.119"* %193, null
  br i1 %194, label %217, label %195, !prof !3

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.WTF::HashMap.115", %"class.WTF::HashMap.115"* %6, i64 0, i32 0, i32 1
  %197 = load i32, i32* %196, align 8
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %215, label %199

199:                                              ; preds = %195
  %200 = zext i32 %197 to i64
  br label %201

201:                                              ; preds = %212, %199
  %202 = phi i64 [ 0, %199 ], [ %213, %212 ]
  %203 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %193, i64 %202, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, -1000001
  br i1 %205, label %212, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %193, i64 %202, i32 1, i32 0, i32 0, i32 0, i32 0
  %208 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %207, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %207, align 8
  %209 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %206
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %208) #10
  %211 = bitcast %"class.network::mojom::blink::CSPSourceList"* %208 to i8*
  call void @_ZdlPv(i8* %211) #16
  br label %212

212:                                              ; preds = %210, %206, %201
  %213 = add nuw nsw i64 %202, 1
  %214 = icmp eq i64 %213, %200
  br i1 %214, label %215, label %201

215:                                              ; preds = %212, %195
  %216 = bitcast %"struct.WTF::KeyValuePair.119"* %193 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %216) #10
  store %"struct.WTF::KeyValuePair.119"* null, %"struct.WTF::KeyValuePair.119"** %192, align 8
  br label %217

217:                                              ; preds = %190, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %218 = getelementptr inbounds %"class.WTF::HashMap.110", %"class.WTF::HashMap.110"* %5, i64 0, i32 0, i32 0
  %219 = load %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"** %218, align 8
  %220 = icmp eq %"struct.WTF::KeyValuePair.114"* %219, null
  br i1 %220, label %254, label %221, !prof !3

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.WTF::HashMap.110", %"class.WTF::HashMap.110"* %5, i64 0, i32 0, i32 1
  %223 = load i32, i32* %222, align 8
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %252, label %225

225:                                              ; preds = %221
  %226 = zext i32 %223 to i64
  br label %227

227:                                              ; preds = %249, %225
  %228 = phi i64 [ 0, %225 ], [ %250, %249 ]
  %229 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %219, i64 %228, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, -1000001
  br i1 %231, label %249, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %219, i64 %228, i32 1, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #10
  br label %249

249:                                              ; preds = %248, %245, %232, %227
  %250 = add nuw nsw i64 %228, 1
  %251 = icmp eq i64 %250, %226
  br i1 %251, label %252, label %227

252:                                              ; preds = %249, %221
  %253 = bitcast %"struct.WTF::KeyValuePair.114"* %219 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %253) #10
  store %"struct.WTF::KeyValuePair.114"* null, %"struct.WTF::KeyValuePair.114"** %218, align 8
  br label %254

254:                                              ; preds = %217, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  %255 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %256 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %255, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %255, align 8
  %257 = icmp eq %"class.network::mojom::blink::CSPSource"* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %256) #10
  %259 = bitcast %"class.network::mojom::blink::CSPSource"* %256 to i8*
  call void @_ZdlPv(i8* %259) #16
  br label %260

260:                                              ; preds = %254, %258
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.103"* dereferenceable(8), %"class.WTF::HashMap.110"* dereferenceable(24), %"class.WTF::HashMap.115"* dereferenceable(24), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i32* dereferenceable(4), %"class.mojo::InlinedStructPtr"* dereferenceable(24), i8* dereferenceable(1), %"class.WTF::Vector.120"* dereferenceable(16), i32* dereferenceable(4), %"class.mojo::StructPtr.125"* dereferenceable(8), %"class.WTF::Vector.120"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %15 = alloca %"class.mojo::StructPtr.103", align 8
  %16 = alloca %"class.WTF::HashMap.115", align 8
  %17 = alloca %"class.mojo::InlinedStructPtr", align 8
  %18 = alloca %"class.WTF::Vector.120", align 8
  %19 = alloca %"class.mojo::StructPtr.125", align 8
  %20 = alloca %"class.WTF::Vector.120", align 8
  %21 = tail call i8* @_Znwm(i64 144) #16
  %22 = bitcast i8* %21 to %"class.network::mojom::blink::ContentSecurityPolicy"*
  %23 = bitcast %"class.mojo::StructPtr.103"* %15 to i64*
  %24 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.mojo::StructPtr.103"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %23, align 8
  store i64 0, i64* %25, align 8
  %27 = getelementptr inbounds %"class.WTF::HashMap.115", %"class.WTF::HashMap.115"* %16, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::HashMap.115", %"class.WTF::HashMap.115"* %16, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::HashMap.115", %"class.WTF::HashMap.115"* %16, i64 0, i32 0, i32 3
  %30 = bitcast %"class.WTF::HashMap.115"* %3 to i64*
  %31 = bitcast %"class.WTF::HashMap.115"* %16 to i64*
  store i64 0, i64* %31, align 8
  %32 = load i64, i64* %30, align 8
  %33 = bitcast %"class.WTF::HashMap.115"* %16 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = getelementptr inbounds %"class.WTF::HashMap.115", %"class.WTF::HashMap.115"* %3, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %27, align 8
  store i32 0, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::HashMap.115", %"class.WTF::HashMap.115"* %3, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %28, align 4
  store i32 0, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::HashMap.115", %"class.WTF::HashMap.115"* %3, i64 0, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2147483647
  store i32 %40, i32* %29, align 8
  %41 = and i32 %39, -2147483648
  store i32 %41, i32* %38, align 8
  %42 = load i8, i8* %4, align 1, !range !4
  %43 = icmp ne i8 %42, 0
  %44 = load i8, i8* %5, align 1, !range !4
  %45 = icmp ne i8 %44, 0
  %46 = load i8, i8* %6, align 1, !range !4
  %47 = icmp ne i8 %46, 0
  %48 = load i32, i32* %7, align 4
  %49 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %17, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #10
  %50 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %17, i64 0, i32 1
  store i32 0, i32* %50, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #10
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #10
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 0
  call void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull dereferenceable(16) %49, %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16) %51) #10
  %52 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 1
  %53 = load i32, i32* %50, align 8
  %54 = load i32, i32* %52, align 4
  store i32 %54, i32* %50, align 8
  store i32 %53, i32* %52, align 4
  %55 = load i8, i8* %9, align 1, !range !4
  %56 = icmp ne i8 %55, 0
  %57 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %18, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %18, i64 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.WTF::Vector.120"* %10 to i64*
  %60 = bitcast %"class.WTF::Vector.120"* %18 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.WTF::Vector.120"* %18 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %10, i64 0, i32 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %57, align 8
  store i32 0, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %10, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %58, align 4
  store i32 0, i32* %65, align 4
  %67 = load i32, i32* %11, align 4
  %68 = bitcast %"class.mojo::StructPtr.125"* %19 to i64*
  %69 = getelementptr inbounds %"class.mojo::StructPtr.125", %"class.mojo::StructPtr.125"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.mojo::StructPtr.125"* %12 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %68, align 8
  store i64 0, i64* %70, align 8
  %72 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %20, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %20, i64 0, i32 0, i32 0, i32 2
  %74 = bitcast %"class.WTF::Vector.120"* %13 to i64*
  %75 = bitcast %"class.WTF::Vector.120"* %20 to i64*
  store i64 0, i64* %75, align 8
  %76 = load i64, i64* %74, align 8
  %77 = bitcast %"class.WTF::Vector.120"* %20 to i64*
  store atomic i64 0, i64* %74 monotonic, align 8
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %13, i64 0, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %72, align 8
  store i32 0, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %13, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %73, align 4
  store i32 0, i32* %80, align 4
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %22, %"class.mojo::StructPtr.103"* nonnull %15, %"class.WTF::HashMap.110"* dereferenceable(24) %2, %"class.WTF::HashMap.115"* nonnull %16, i1 zeroext %43, i1 zeroext %45, i1 zeroext %47, i32 %48, %"class.mojo::InlinedStructPtr"* nonnull %17, i1 zeroext %56, %"class.WTF::Vector.120"* nonnull %18, i32 %67, %"class.mojo::StructPtr.125"* nonnull %19, %"class.WTF::Vector.120"* nonnull %20) #10
  %82 = ptrtoint i8* %21 to i64
  %83 = bitcast %"class.mojo::StructPtr.99"* %0 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %20, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::String"*, %"class.WTF::String"** %84, align 8
  %86 = icmp eq %"class.WTF::String"* %85, null
  br i1 %86, label %120, label %87, !prof !3

87:                                               ; preds = %14
  %88 = bitcast %"class.WTF::String"* %85 to i8*
  %89 = load i32, i32* %73, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %118, label %91, !prof !2

91:                                               ; preds = %87
  %92 = zext i32 %89 to i64
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 %92
  br label %94

94:                                               ; preds = %112, %91
  %95 = phi %"class.WTF::String"* [ %113, %112 ], [ %85, %91 ]
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #10
  br label %112

112:                                              ; preds = %111, %108, %94
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 1
  %114 = icmp eq %"class.WTF::String"* %113, %93
  br i1 %114, label %115, label %94

115:                                              ; preds = %112
  store i32 0, i32* %73, align 4
  %116 = bitcast %"class.WTF::Vector.120"* %20 to i8**
  %117 = load i8*, i8** %116, align 8
  br label %118

118:                                              ; preds = %115, %87
  %119 = phi i8* [ %117, %115 ], [ %88, %87 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %119) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %84, align 8
  br label %120

120:                                              ; preds = %14, %118
  %121 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  %122 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %121) #10
  %124 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %121 to i8*
  call void @_ZdlPv(i8* %124) #16
  br label %125

125:                                              ; preds = %120, %123
  %126 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %18, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::String"*, %"class.WTF::String"** %126, align 8
  %128 = icmp eq %"class.WTF::String"* %127, null
  br i1 %128, label %162, label %129, !prof !3

129:                                              ; preds = %125
  %130 = bitcast %"class.WTF::String"* %127 to i8*
  %131 = load i32, i32* %58, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %160, label %133, !prof !2

133:                                              ; preds = %129
  %134 = zext i32 %131 to i64
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 %134
  br label %136

136:                                              ; preds = %154, %133
  %137 = phi %"class.WTF::String"* [ %155, %154 ], [ %127, %133 ]
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #10
  br label %154

154:                                              ; preds = %153, %150, %136
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 1
  %156 = icmp eq %"class.WTF::String"* %155, %135
  br i1 %156, label %157, label %136

157:                                              ; preds = %154
  store i32 0, i32* %58, align 4
  %158 = bitcast %"class.WTF::Vector.120"* %18 to i8**
  %159 = load i8*, i8** %158, align 8
  br label %160

160:                                              ; preds = %157, %129
  %161 = phi i8* [ %159, %157 ], [ %130, %129 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %161) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %126, align 8
  br label %162

162:                                              ; preds = %125, %160
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #10
  %163 = getelementptr inbounds %"class.WTF::HashMap.115", %"class.WTF::HashMap.115"* %16, i64 0, i32 0, i32 0
  %164 = load %"struct.WTF::KeyValuePair.119"*, %"struct.WTF::KeyValuePair.119"** %163, align 8
  %165 = icmp eq %"struct.WTF::KeyValuePair.119"* %164, null
  br i1 %165, label %187, label %166, !prof !3

166:                                              ; preds = %162
  %167 = load i32, i32* %27, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %185, label %169

169:                                              ; preds = %166
  %170 = zext i32 %167 to i64
  br label %171

171:                                              ; preds = %182, %169
  %172 = phi i64 [ 0, %169 ], [ %183, %182 ]
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %164, i64 %172, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, -1000001
  br i1 %175, label %182, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %164, i64 %172, i32 1, i32 0, i32 0, i32 0, i32 0
  %178 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  %179 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %176
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %178) #10
  %181 = bitcast %"class.network::mojom::blink::CSPSourceList"* %178 to i8*
  call void @_ZdlPv(i8* %181) #16
  br label %182

182:                                              ; preds = %180, %176, %171
  %183 = add nuw nsw i64 %172, 1
  %184 = icmp eq i64 %183, %170
  br i1 %184, label %185, label %171

185:                                              ; preds = %182, %166
  %186 = bitcast %"struct.WTF::KeyValuePair.119"* %164 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %186) #10
  store %"struct.WTF::KeyValuePair.119"* null, %"struct.WTF::KeyValuePair.119"** %163, align 8
  br label %187

187:                                              ; preds = %162, %185
  %188 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %24, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %24, align 8
  %189 = icmp eq %"class.network::mojom::blink::CSPSource"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %188) #10
  %191 = bitcast %"class.network::mojom::blink::CSPSource"* %188 to i8*
  call void @_ZdlPv(i8* %191) #16
  br label %192

192:                                              ; preds = %187, %190
  ret void
}

declare void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.mojo::StructPtr.103"*, %"class.WTF::HashMap.110"* dereferenceable(24), %"class.WTF::HashMap.115"*, i1 zeroext, i1 zeroext, i1 zeroext, i32, %"class.mojo::InlinedStructPtr"*, i1 zeroext, %"class.WTF::Vector.120"*, i32, %"class.mojo::StructPtr.125"*, %"class.WTF::Vector.120"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"*) unnamed_addr #3

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16), %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16)) local_unnamed_addr #9 comdat {
  %3 = alloca %"class.network::mojom::blink::ContentSecurityPolicyHeader", align 8
  %4 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %9 = bitcast i32* %8 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %5, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #10
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #10
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 1
  %31 = bitcast i32* %30 to i64*
  %32 = bitcast i32* %6 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #10
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %42
  tail call void @llvm.trap() #10
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %29
  %55 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %56 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0 to i64*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %55, i64* %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %54, %68, %71
  %73 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 1
  %74 = bitcast i32* %73 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %31, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #10
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %83
  tail call void @llvm.trap() #10
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %72
  %96 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  %97 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1 to i64*
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %96, i64* %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #10
  br label %113

113:                                              ; preds = %95, %109, %112
  %114 = load i64, i64* %32, align 8
  store i64 %114, i64* %74, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.103"* noalias sret, %"class.network::mojom::blink::CSPSource"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #10
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #10
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %2, %10, %25
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %28, align 8
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #10
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #10
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %27, %33, %48
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 4, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #10
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !2

72:                                               ; preds = %63
  tail call void @llvm.trap() #10
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %50, %58, %73
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 5
  %78 = load i8, i8* %77, align 1, !range !4
  %79 = icmp ne i8 %78, 0
  %80 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 6
  %81 = load i8, i8* %80, align 1, !range !4
  %82 = icmp ne i8 %81, 0
  %83 = tail call i8* @_Znwm(i64 40) #16, !noalias !43
  %84 = bitcast i8* %83 to %"class.network::mojom::blink::CSPSource"*
  call void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"* nonnull %84, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 %53, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext %79, i1 zeroext %82) #10, !noalias !43
  %85 = ptrtoint i8* %83 to i64
  %86 = bitcast %"class.mojo::StructPtr.103"* %0 to i64*
  store i64 %85, i64* %86, align 8, !alias.scope !43
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %75
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #10
  br label %102

102:                                              ; preds = %75, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #10
  br label %118

118:                                              ; preds = %102, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #10
  br label %134

134:                                              ; preds = %118, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

declare void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_(%"class.WTF::HashMap.110"* noalias sret, %"class.WTF::HashMap.110"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::HashMap.110"* %0 to i8*
  %6 = bitcast %"class.WTF::HashMap.110"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #10
  %7 = getelementptr inbounds %"class.WTF::HashMap.110", %"class.WTF::HashMap.110"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.110", %"class.WTF::HashMap.110"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap.110", %"class.WTF::HashMap.110"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %11, i64 %14
  br i1 %9, label %33, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.114"* [ %23, %22 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %25 [
    i32 -1000001, label %22
    i32 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.114"* %23, %15
  br i1 %24, label %33, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.114"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.114"* %26, %15
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = bitcast i32* %3 to i8*
  %30 = bitcast %"class.WTF::String"* %4 to i8*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::HashMap.110", %"class.WTF::HashMap.110"* %0, i64 0, i32 0
  br label %34

33:                                               ; preds = %22, %75, %85, %82, %2, %25
  ret void

34:                                               ; preds = %28, %85
  %35 = phi %"struct.WTF::KeyValuePair.114"* [ %26, %28 ], [ %79, %85 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #10
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %35, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #10
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !2

55:                                               ; preds = %46
  call void @llvm.trap() #10
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %34, %41, %56
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %31, align 8
  %59 = call { %"struct.WTF::KeyValuePair.114"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.111"* %32, i32* nonnull dereferenceable(4) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %58, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #10
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %35, i64 1
  %77 = icmp eq %"struct.WTF::KeyValuePair.114"* %76, %15
  br i1 %77, label %33, label %78

78:                                               ; preds = %75, %82
  %79 = phi %"struct.WTF::KeyValuePair.114"* [ %83, %82 ], [ %76, %75 ]
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %79, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  switch i32 %81, label %85 [
    i32 -1000001, label %82
    i32 0, label %82
  ]

82:                                               ; preds = %78, %78
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %79, i64 1
  %84 = icmp eq %"struct.WTF::KeyValuePair.114"* %83, %15
  br i1 %84, label %33, label %78

85:                                               ; preds = %78
  %86 = icmp eq %"struct.WTF::KeyValuePair.114"* %79, %15
  br i1 %86, label %33, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.114"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.111"*, i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.111", %"class.WTF::HashTable.111"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.114"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.114"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.111"* %0, %"struct.WTF::KeyValuePair.114"* null)
  %9 = load %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.114"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.111", %"class.WTF::HashTable.111"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.114"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.114"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %118, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.114"* %52, %"struct.WTF::KeyValuePair.114"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.114"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %59, i64 0, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.111", %"class.WTF::HashTable.111"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.114"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %87 = bitcast %"class.WTF::String"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  %89 = bitcast %"class.WTF::String"* %85 to i64*
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  store i64 %88, i64* %89, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %81
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #10
  br label %106

106:                                              ; preds = %81, %102, %105
  %107 = getelementptr inbounds %"class.WTF::HashTable.111", %"class.WTF::HashTable.111"* %0, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = getelementptr inbounds %"class.WTF::HashTable.111", %"class.WTF::HashTable.111"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, %109
  %113 = shl i32 %112, 1
  %114 = load i32, i32* %12, align 8
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %118, label %116

116:                                              ; preds = %106
  %117 = tail call %"struct.WTF::KeyValuePair.114"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.111"* %0, %"struct.WTF::KeyValuePair.114"* %83)
  br label %118

118:                                              ; preds = %50, %106, %116
  %119 = phi i8 [ 1, %106 ], [ 1, %116 ], [ 0, %50 ]
  %120 = phi %"struct.WTF::KeyValuePair.114"* [ %83, %106 ], [ %117, %116 ], [ %52, %50 ]
  %121 = insertvalue { %"struct.WTF::KeyValuePair.114"*, i8 } undef, %"struct.WTF::KeyValuePair.114"* %120, 0
  %122 = insertvalue { %"struct.WTF::KeyValuePair.114"*, i8 } %121, i8 %119, 1
  ret { %"struct.WTF::KeyValuePair.114"*, i8 } %122
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.114"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.111"*, %"struct.WTF::KeyValuePair.114"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.111", %"class.WTF::HashTable.111"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.111", %"class.WTF::HashTable.111"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv, i64 0, i64 0)) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.114"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %36, i64 %45, i32 1
  %49 = bitcast %"class.WTF::String"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %36, i64 %50, i32 1
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %36, i64 %54, i32 1
  %57 = bitcast %"class.WTF::String"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %36, i64 %58, i32 1
  %61 = bitcast %"class.WTF::String"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %36, i64 %69, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !46

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.114"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.111"* %0, %"struct.WTF::KeyValuePair.114"* %36, i32 %32, %"struct.WTF::KeyValuePair.114"* %1) #10
  ret %"struct.WTF::KeyValuePair.114"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.114"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.111"*, %"struct.WTF::KeyValuePair.114"*, i32, %"struct.WTF::KeyValuePair.114"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.114"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.111", %"class.WTF::HashTable.111"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.111", %"class.WTF::HashTable.111"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.111"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.114"* %16 to i64
  br label %62

18:                                               ; preds = %168
  %19 = bitcast %"class.WTF::HashTable.111"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %169, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.114"* [ null, %10 ], [ %172, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %170, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.114"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %53, %29
  %32 = phi i64 [ 0, %29 ], [ %54, %53 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %53, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %25, i64 %32, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #10
  br label %53

53:                                               ; preds = %52, %49, %36, %31
  %54 = add nuw nsw i64 %32, 1
  %55 = icmp eq i64 %54, %30
  br i1 %55, label %56, label %31

56:                                               ; preds = %53, %27
  %57 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #10
  br label %58

58:                                               ; preds = %20, %56
  %59 = getelementptr inbounds %"class.WTF::HashTable.111", %"class.WTF::HashTable.111"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %59, align 8
  ret %"struct.WTF::KeyValuePair.114"* %23

62:                                               ; preds = %13, %168
  %63 = phi i64 [ %17, %13 ], [ %169, %168 ]
  %64 = phi i32 [ %7, %13 ], [ %170, %168 ]
  %65 = phi %"struct.WTF::KeyValuePair.114"* [ %16, %13 ], [ %171, %168 ]
  %66 = phi %"struct.WTF::KeyValuePair.114"* [ null, %13 ], [ %172, %168 ]
  %67 = phi i32 [ 0, %13 ], [ %173, %168 ]
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %65, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  switch i32 %70, label %71 [
    i32 -1000001, label %168
    i32 0, label %168
  ]

71:                                               ; preds = %62
  %72 = shl i32 %70, 15
  %73 = xor i32 %72, -1
  %74 = add i32 %70, %73
  %75 = lshr i32 %74, 10
  %76 = xor i32 %75, %74
  %77 = mul i32 %76, 9
  %78 = lshr i32 %77, 6
  %79 = xor i32 %78, %77
  %80 = shl i32 %79, 11
  %81 = xor i32 %80, -1
  %82 = add i32 %79, %81
  %83 = lshr i32 %82, 16
  %84 = xor i32 %83, %82
  %85 = and i32 %84, %14
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %1, i64 %86
  %88 = ptrtoint %"struct.WTF::KeyValuePair.114"* %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %87, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %109, label %92

92:                                               ; preds = %71
  %93 = xor i32 %84, -1
  %94 = lshr i32 %82, 23
  %95 = add i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %115

106:                                              ; preds = %122
  %107 = ptrtoint %"struct.WTF::KeyValuePair.114"* %129 to i64
  %108 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair.114"*
  br label %109

109:                                              ; preds = %106, %71
  %110 = phi i64 [ %107, %106 ], [ %88, %71 ]
  %111 = phi %"struct.WTF::KeyValuePair.114"* [ %108, %106 ], [ null, %71 ]
  %112 = icmp eq %"struct.WTF::KeyValuePair.114"* %111, null
  %113 = ptrtoint %"struct.WTF::KeyValuePair.114"* %111 to i64
  %114 = select i1 %112, i64 %110, i64 %113
  br label %134

115:                                              ; preds = %122, %92
  %116 = phi i64 [ 0, %92 ], [ %124, %122 ]
  %117 = phi i32 [ %90, %92 ], [ %132, %122 ]
  %118 = phi i64 [ %88, %92 ], [ %130, %122 ]
  %119 = phi i64 [ %86, %92 ], [ %128, %122 ]
  %120 = phi i64 [ 0, %92 ], [ %126, %122 ]
  %121 = icmp eq i32 %117, %70
  br i1 %121, label %134, label %122

122:                                              ; preds = %115
  %123 = icmp eq i32 %117, -1000001
  %124 = select i1 %123, i64 %118, i64 %116
  %125 = icmp eq i64 %120, 0
  %126 = select i1 %125, i64 %105, i64 %120
  %127 = add i64 %126, %119
  %128 = and i64 %127, %15
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %1, i64 %128
  %130 = ptrtoint %"struct.WTF::KeyValuePair.114"* %129 to i64
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %129, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %106, label %115

134:                                              ; preds = %115, %109
  %135 = phi i64 [ %114, %109 ], [ %118, %115 ]
  %136 = inttoptr i64 %135 to %"struct.WTF::KeyValuePair.114"*
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %136, i64 0, i32 1, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #10
  br label %153

153:                                              ; preds = %134, %149, %152
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %136, i64 0, i32 0
  %155 = load i32, i32* %69, align 8
  store i32 %155, i32* %154, align 8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %136, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %65, i64 %68, i32 1
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %159 = bitcast %"class.WTF::String"* %157 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.WTF::String"* %156 to i64*
  store i64 %160, i64* %161, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %158, align 8
  %162 = load %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"** %9, align 8
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %162, i64 %68
  %164 = icmp eq %"struct.WTF::KeyValuePair.114"* %163, %3
  %165 = select i1 %164, %"struct.WTF::KeyValuePair.114"* %136, %"struct.WTF::KeyValuePair.114"* %66
  %166 = load i32, i32* %6, align 8
  %167 = ptrtoint %"struct.WTF::KeyValuePair.114"* %162 to i64
  br label %168

168:                                              ; preds = %62, %62, %153
  %169 = phi i64 [ %63, %62 ], [ %167, %153 ], [ %63, %62 ]
  %170 = phi i32 [ %64, %62 ], [ %166, %153 ], [ %64, %62 ]
  %171 = phi %"struct.WTF::KeyValuePair.114"* [ %65, %62 ], [ %162, %153 ], [ %65, %62 ]
  %172 = phi %"struct.WTF::KeyValuePair.114"* [ %66, %62 ], [ %165, %153 ], [ %66, %62 ]
  %173 = add i32 %67, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %18, label %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_(%"class.WTF::HashMap.115"* noalias sret, %"class.WTF::HashMap.115"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.mojo::StructPtr.2543", align 8
  %5 = bitcast %"class.WTF::HashMap.115"* %0 to i8*
  %6 = bitcast %"class.WTF::HashMap.115"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #10
  %7 = getelementptr inbounds %"class.WTF::HashMap.115", %"class.WTF::HashMap.115"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.115", %"class.WTF::HashMap.115"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.119"*, %"struct.WTF::KeyValuePair.119"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap.115", %"class.WTF::HashMap.115"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %11, i64 %14
  br i1 %9, label %34, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.119"* [ %23, %22 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %25 [
    i32 -1000001, label %22
    i32 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.119"* %23, %15
  br i1 %24, label %34, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.119"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.119"* %26, %15
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = bitcast i32* %3 to i8*
  %30 = bitcast %"class.mojo::StructPtr.2543"* %4 to i8*
  %31 = bitcast %"class.mojo::StructPtr.2543"* %4 to i64*
  %32 = getelementptr inbounds %"class.WTF::HashMap.115", %"class.WTF::HashMap.115"* %0, i64 0, i32 0
  %33 = getelementptr inbounds %"class.mojo::StructPtr.2543", %"class.mojo::StructPtr.2543"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %35

34:                                               ; preds = %22, %50, %60, %57, %2, %25
  ret void

35:                                               ; preds = %28, %60
  %36 = phi %"struct.WTF::KeyValuePair.119"* [ %26, %28 ], [ %54, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #10
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %36, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %39, align 8, !noalias !47
  %41 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %35
  store i64 0, i64* %31, align 8, !alias.scope !47
  br label %44

43:                                               ; preds = %35
  call void @_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2543"* nonnull sret %4, %"class.network::mojom::blink::CSPSourceList"* nonnull %40) #10
  br label %44

44:                                               ; preds = %42, %43
  %45 = call { %"struct.WTF::KeyValuePair.119"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.116"* %32, i32* nonnull dereferenceable(4) %3, %"class.mojo::StructPtr.2543"* nonnull dereferenceable(8) %4) #10
  %46 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %33, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %33, align 8
  %47 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %46) #10
  %49 = bitcast %"class.network::mojom::blink::CSPSourceList"* %46 to i8*
  call void @_ZdlPv(i8* %49) #16
  br label %50

50:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #10
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %36, i64 1
  %52 = icmp eq %"struct.WTF::KeyValuePair.119"* %51, %15
  br i1 %52, label %34, label %53

53:                                               ; preds = %50, %57
  %54 = phi %"struct.WTF::KeyValuePair.119"* [ %58, %57 ], [ %51, %50 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  switch i32 %56, label %60 [
    i32 -1000001, label %57
    i32 0, label %57
  ]

57:                                               ; preds = %53, %53
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %54, i64 1
  %59 = icmp eq %"struct.WTF::KeyValuePair.119"* %58, %15
  br i1 %59, label %34, label %53

60:                                               ; preds = %53
  %61 = icmp eq %"struct.WTF::KeyValuePair.119"* %54, %15
  br i1 %61, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.119"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.116"*, i32* dereferenceable(4), %"class.mojo::StructPtr.2543"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.116", %"class.WTF::HashTable.116"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.119"*, %"struct.WTF::KeyValuePair.119"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.119"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.119"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.116"* %0, %"struct.WTF::KeyValuePair.119"* null)
  %9 = load %"struct.WTF::KeyValuePair.119"*, %"struct.WTF::KeyValuePair.119"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.119"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.116", %"class.WTF::HashTable.116"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.119"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.119"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %111, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.119"* %52, %"struct.WTF::KeyValuePair.119"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.119"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %59, i64 0, i32 1
  %73 = bitcast %"class.mojo::StructPtr.2543"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.116", %"class.WTF::HashTable.116"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.119"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.mojo::StructPtr.2543", %"class.mojo::StructPtr.2543"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  %88 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %87, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %81
  %90 = bitcast %"class.mojo::StructPtr.2543"* %85 to i64*
  br label %95

91:                                               ; preds = %81
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %87) #10
  %92 = bitcast %"class.network::mojom::blink::CSPSourceList"* %87 to i8*
  tail call void @_ZdlPv(i8* %92) #16
  %93 = bitcast %"class.mojo::StructPtr.2543"* %85 to i64*
  %94 = load i64, i64* %93, align 8
  br label %95

95:                                               ; preds = %89, %91
  %96 = phi i64* [ %90, %89 ], [ %93, %91 ]
  %97 = phi i64 [ 0, %89 ], [ %94, %91 ]
  %98 = bitcast %"class.mojo::StructPtr.2543"* %2 to i64*
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %96, align 8
  store i64 %97, i64* %98, align 8
  %100 = getelementptr inbounds %"class.WTF::HashTable.116", %"class.WTF::HashTable.116"* %0, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.WTF::HashTable.116", %"class.WTF::HashTable.116"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, %102
  %106 = shl i32 %105, 1
  %107 = load i32, i32* %12, align 8
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %111, label %109

109:                                              ; preds = %95
  %110 = tail call %"struct.WTF::KeyValuePair.119"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.116"* %0, %"struct.WTF::KeyValuePair.119"* %83)
  br label %111

111:                                              ; preds = %50, %95, %109
  %112 = phi i8 [ 1, %95 ], [ 1, %109 ], [ 0, %50 ]
  %113 = phi %"struct.WTF::KeyValuePair.119"* [ %83, %95 ], [ %110, %109 ], [ %52, %50 ]
  %114 = insertvalue { %"struct.WTF::KeyValuePair.119"*, i8 } undef, %"struct.WTF::KeyValuePair.119"* %113, 0
  %115 = insertvalue { %"struct.WTF::KeyValuePair.119"*, i8 } %114, i8 %112, 1
  ret { %"struct.WTF::KeyValuePair.119"*, i8 } %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.119"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.116"*, %"struct.WTF::KeyValuePair.119"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.116", %"class.WTF::HashTable.116"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.116", %"class.WTF::HashTable.116"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv, i64 0, i64 0)) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.119"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %36, i64 %45, i32 1
  %49 = bitcast %"class.mojo::StructPtr.2543"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %36, i64 %50, i32 1
  %53 = bitcast %"class.mojo::StructPtr.2543"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %36, i64 %54, i32 1
  %57 = bitcast %"class.mojo::StructPtr.2543"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %36, i64 %58, i32 1
  %61 = bitcast %"class.mojo::StructPtr.2543"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %36, i64 %69, i32 1
  %73 = bitcast %"class.mojo::StructPtr.2543"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !54

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.119"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.116"* %0, %"struct.WTF::KeyValuePair.119"* %36, i32 %32, %"struct.WTF::KeyValuePair.119"* %1) #10
  ret %"struct.WTF::KeyValuePair.119"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.119"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.116"*, %"struct.WTF::KeyValuePair.119"*, i32, %"struct.WTF::KeyValuePair.119"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.119"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.116", %"class.WTF::HashTable.116"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.116", %"class.WTF::HashTable.116"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.116"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.119"*, %"struct.WTF::KeyValuePair.119"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.119"* %16 to i64
  br label %51

18:                                               ; preds = %146
  %19 = bitcast %"class.WTF::HashTable.116"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %147, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.119"* [ null, %10 ], [ %150, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %148, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.119"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %42, %29
  %32 = phi i64 [ 0, %29 ], [ %43, %42 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  %39 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %38) #10
  %41 = bitcast %"class.network::mojom::blink::CSPSourceList"* %38 to i8*
  tail call void @_ZdlPv(i8* %41) #16
  br label %42

42:                                               ; preds = %40, %36, %31
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, %30
  br i1 %44, label %45, label %31

45:                                               ; preds = %42, %27
  %46 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #10
  br label %47

47:                                               ; preds = %20, %45
  %48 = getelementptr inbounds %"class.WTF::HashTable.116", %"class.WTF::HashTable.116"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2147483648
  store i32 %50, i32* %48, align 8
  ret %"struct.WTF::KeyValuePair.119"* %23

51:                                               ; preds = %13, %146
  %52 = phi i64 [ %17, %13 ], [ %147, %146 ]
  %53 = phi i32 [ %7, %13 ], [ %148, %146 ]
  %54 = phi %"struct.WTF::KeyValuePair.119"* [ %16, %13 ], [ %149, %146 ]
  %55 = phi %"struct.WTF::KeyValuePair.119"* [ null, %13 ], [ %150, %146 ]
  %56 = phi i32 [ 0, %13 ], [ %151, %146 ]
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %54, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  switch i32 %59, label %60 [
    i32 -1000001, label %146
    i32 0, label %146
  ]

60:                                               ; preds = %51
  %61 = shl i32 %59, 15
  %62 = xor i32 %61, -1
  %63 = add i32 %59, %62
  %64 = lshr i32 %63, 10
  %65 = xor i32 %64, %63
  %66 = mul i32 %65, 9
  %67 = lshr i32 %66, 6
  %68 = xor i32 %67, %66
  %69 = shl i32 %68, 11
  %70 = xor i32 %69, -1
  %71 = add i32 %68, %70
  %72 = lshr i32 %71, 16
  %73 = xor i32 %72, %71
  %74 = and i32 %73, %14
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %1, i64 %75
  %77 = ptrtoint %"struct.WTF::KeyValuePair.119"* %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %76, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %98, label %81

81:                                               ; preds = %60
  %82 = xor i32 %73, -1
  %83 = lshr i32 %71, 23
  %84 = add i32 %83, %82
  %85 = shl i32 %84, 12
  %86 = xor i32 %85, %84
  %87 = lshr i32 %86, 7
  %88 = xor i32 %87, %86
  %89 = shl i32 %88, 2
  %90 = xor i32 %89, %88
  %91 = lshr i32 %90, 20
  %92 = xor i32 %91, %90
  %93 = or i32 %92, 1
  %94 = zext i32 %93 to i64
  br label %104

95:                                               ; preds = %111
  %96 = ptrtoint %"struct.WTF::KeyValuePair.119"* %118 to i64
  %97 = inttoptr i64 %113 to %"struct.WTF::KeyValuePair.119"*
  br label %98

98:                                               ; preds = %95, %60
  %99 = phi i64 [ %96, %95 ], [ %77, %60 ]
  %100 = phi %"struct.WTF::KeyValuePair.119"* [ %97, %95 ], [ null, %60 ]
  %101 = icmp eq %"struct.WTF::KeyValuePair.119"* %100, null
  %102 = ptrtoint %"struct.WTF::KeyValuePair.119"* %100 to i64
  %103 = select i1 %101, i64 %99, i64 %102
  br label %123

104:                                              ; preds = %111, %81
  %105 = phi i64 [ 0, %81 ], [ %113, %111 ]
  %106 = phi i32 [ %79, %81 ], [ %121, %111 ]
  %107 = phi i64 [ %77, %81 ], [ %119, %111 ]
  %108 = phi i64 [ %75, %81 ], [ %117, %111 ]
  %109 = phi i64 [ 0, %81 ], [ %115, %111 ]
  %110 = icmp eq i32 %106, %59
  br i1 %110, label %123, label %111

111:                                              ; preds = %104
  %112 = icmp eq i32 %106, -1000001
  %113 = select i1 %112, i64 %107, i64 %105
  %114 = icmp eq i64 %109, 0
  %115 = select i1 %114, i64 %94, i64 %109
  %116 = add i64 %115, %108
  %117 = and i64 %116, %15
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %1, i64 %117
  %119 = ptrtoint %"struct.WTF::KeyValuePair.119"* %118 to i64
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %118, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %95, label %104

123:                                              ; preds = %104, %98
  %124 = phi i64 [ %103, %98 ], [ %107, %104 ]
  %125 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair.119"*
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %125, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  %128 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %123
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %127) #10
  %130 = bitcast %"class.network::mojom::blink::CSPSourceList"* %127 to i8*
  tail call void @_ZdlPv(i8* %130) #16
  br label %131

131:                                              ; preds = %123, %129
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %125, i64 0, i32 0
  %133 = load i32, i32* %58, align 8
  store i32 %133, i32* %132, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %125, i64 0, i32 1
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %54, i64 %57, i32 1
  %136 = bitcast %"class.mojo::StructPtr.2543"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.2543", %"class.mojo::StructPtr.2543"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.2543"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  store i64 0, i64* %138, align 8
  %140 = load %"struct.WTF::KeyValuePair.119"*, %"struct.WTF::KeyValuePair.119"** %9, align 8
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.119", %"struct.WTF::KeyValuePair.119"* %140, i64 %57
  %142 = icmp eq %"struct.WTF::KeyValuePair.119"* %141, %3
  %143 = select i1 %142, %"struct.WTF::KeyValuePair.119"* %125, %"struct.WTF::KeyValuePair.119"* %55
  %144 = load i32, i32* %6, align 8
  %145 = ptrtoint %"struct.WTF::KeyValuePair.119"* %140 to i64
  br label %146

146:                                              ; preds = %51, %51, %131
  %147 = phi i64 [ %52, %51 ], [ %145, %131 ], [ %52, %51 ]
  %148 = phi i32 [ %53, %51 ], [ %144, %131 ], [ %53, %51 ]
  %149 = phi %"struct.WTF::KeyValuePair.119"* [ %54, %51 ], [ %140, %131 ], [ %54, %51 ]
  %150 = phi %"struct.WTF::KeyValuePair.119"* [ %55, %51 ], [ %143, %131 ], [ %55, %51 ]
  %151 = add i32 %56, 1
  %152 = icmp eq i32 %151, %148
  br i1 %152, label %18, label %51
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2543"* noalias sret, %"class.network::mojom::blink::CSPSourceList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.2547", align 8
  %4 = alloca %"class.WTF::Vector.120", align 8
  %5 = alloca %"class.WTF::Vector.2552", align 8
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = bitcast %"class.WTF::Vector.2547"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 0
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2547"* nonnull sret %3, %"class.WTF::Vector.2547"* dereferenceable(16) %16) #10
  %17 = bitcast %"class.WTF::Vector.120"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 1
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.120"* nonnull sret %4, %"class.WTF::Vector.120"* dereferenceable(16) %18) #10
  %19 = bitcast %"class.WTF::Vector.2552"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 2
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2552"* nonnull sret %5, %"class.WTF::Vector.2552"* dereferenceable(16) %20) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #10
  %21 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 3
  %22 = load i8, i8* %21, align 1, !range !4
  store i8 %22, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #10
  %23 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !4
  store i8 %24, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #10
  %25 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 5
  %26 = load i8, i8* %25, align 1, !range !4
  store i8 %26, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #10
  %27 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 6
  %28 = load i8, i8* %27, align 1, !range !4
  store i8 %28, i8* %9, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #10
  %29 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 7
  %30 = load i8, i8* %29, align 1, !range !4
  store i8 %30, i8* %10, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #10
  %31 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 8
  %32 = load i8, i8* %31, align 1, !range !4
  store i8 %32, i8* %11, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #10
  %33 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 9
  %34 = load i8, i8* %33, align 1, !range !4
  store i8 %34, i8* %12, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #10
  %35 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 10
  %36 = load i8, i8* %35, align 1, !range !4
  store i8 %36, i8* %13, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #10
  %37 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 11
  %38 = load i8, i8* %37, align 1, !range !4
  store i8 %38, i8* %14, align 1
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.2543"* %0, %"class.WTF::Vector.2547"* nonnull dereferenceable(16) %3, %"class.WTF::Vector.120"* nonnull dereferenceable(16) %4, %"class.WTF::Vector.2552"* nonnull dereferenceable(16) %5, i8* nonnull dereferenceable(1) %6, i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(1) %8, i8* nonnull dereferenceable(1) %9, i8* nonnull dereferenceable(1) %10, i8* nonnull dereferenceable(1) %11, i8* nonnull dereferenceable(1) %12, i8* nonnull dereferenceable(1) %13, i8* nonnull dereferenceable(1) %14) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  %39 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %5, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.mojo::StructPtr.2555"*, %"class.mojo::StructPtr.2555"** %39, align 8
  %41 = icmp eq %"class.mojo::StructPtr.2555"* %40, null
  br i1 %41, label %65, label %42, !prof !3

42:                                               ; preds = %2
  %43 = bitcast %"class.mojo::StructPtr.2555"* %40 to i8*
  %44 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %5, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %63, label %47, !prof !2

47:                                               ; preds = %42
  %48 = zext i32 %45 to i64
  %49 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %40, i64 %48
  br label %50

50:                                               ; preds = %57, %47
  %51 = phi %"class.mojo::StructPtr.2555"* [ %58, %57 ], [ %40, %47 ]
  %52 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %52, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %52, align 8
  %54 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %50
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %53) #10
  %56 = bitcast %"class.network::mojom::blink::CSPHashSource"* %53 to i8*
  call void @_ZdlPv(i8* %56) #16
  br label %57

57:                                               ; preds = %55, %50
  %58 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %51, i64 1
  %59 = icmp eq %"class.mojo::StructPtr.2555"* %58, %49
  br i1 %59, label %60, label %50

60:                                               ; preds = %57
  store i32 0, i32* %44, align 4
  %61 = bitcast %"class.WTF::Vector.2552"* %5 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %42
  %64 = phi i8* [ %62, %60 ], [ %43, %42 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #10
  store %"class.mojo::StructPtr.2555"* null, %"class.mojo::StructPtr.2555"** %39, align 8
  br label %65

65:                                               ; preds = %2, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #10
  %66 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %4, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::String"*, %"class.WTF::String"** %66, align 8
  %68 = icmp eq %"class.WTF::String"* %67, null
  br i1 %68, label %103, label %69, !prof !3

69:                                               ; preds = %65
  %70 = bitcast %"class.WTF::String"* %67 to i8*
  %71 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %4, i64 0, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %101, label %74, !prof !2

74:                                               ; preds = %69
  %75 = zext i32 %72 to i64
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 %75
  br label %77

77:                                               ; preds = %95, %74
  %78 = phi %"class.WTF::String"* [ %96, %95 ], [ %67, %74 ]
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #10
  br label %95

95:                                               ; preds = %94, %91, %77
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 1
  %97 = icmp eq %"class.WTF::String"* %96, %76
  br i1 %97, label %98, label %77

98:                                               ; preds = %95
  store i32 0, i32* %71, align 4
  %99 = bitcast %"class.WTF::Vector.120"* %4 to i8**
  %100 = load i8*, i8** %99, align 8
  br label %101

101:                                              ; preds = %98, %69
  %102 = phi i8* [ %100, %98 ], [ %70, %69 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %102) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %66, align 8
  br label %103

103:                                              ; preds = %65, %101
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  %104 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %3, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.mojo::StructPtr.103"*, %"class.mojo::StructPtr.103"** %104, align 8
  %106 = icmp eq %"class.mojo::StructPtr.103"* %105, null
  br i1 %106, label %130, label %107, !prof !3

107:                                              ; preds = %103
  %108 = bitcast %"class.mojo::StructPtr.103"* %105 to i8*
  %109 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %3, i64 0, i32 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %128, label %112, !prof !2

112:                                              ; preds = %107
  %113 = zext i32 %110 to i64
  %114 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %105, i64 %113
  br label %115

115:                                              ; preds = %122, %112
  %116 = phi %"class.mojo::StructPtr.103"* [ %123, %122 ], [ %105, %112 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %117, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %117, align 8
  %119 = icmp eq %"class.network::mojom::blink::CSPSource"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %115
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %118) #10
  %121 = bitcast %"class.network::mojom::blink::CSPSource"* %118 to i8*
  call void @_ZdlPv(i8* %121) #16
  br label %122

122:                                              ; preds = %120, %115
  %123 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %116, i64 1
  %124 = icmp eq %"class.mojo::StructPtr.103"* %123, %114
  br i1 %124, label %125, label %115

125:                                              ; preds = %122
  store i32 0, i32* %109, align 4
  %126 = bitcast %"class.WTF::Vector.2547"* %3 to i8**
  %127 = load i8*, i8** %126, align 8
  br label %128

128:                                              ; preds = %125, %107
  %129 = phi i8* [ %127, %125 ], [ %108, %107 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %129) #10
  store %"class.mojo::StructPtr.103"* null, %"class.mojo::StructPtr.103"** %104, align 8
  br label %130

130:                                              ; preds = %103, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.2543"*, %"class.WTF::Vector.2547"* dereferenceable(16), %"class.WTF::Vector.120"* dereferenceable(16), %"class.WTF::Vector.2552"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %14 = alloca %"class.WTF::Vector.2547", align 8
  %15 = alloca %"class.WTF::Vector.120", align 8
  %16 = alloca %"class.WTF::Vector.2552", align 8
  %17 = tail call i8* @_Znwm(i64 64) #16
  %18 = bitcast i8* %17 to %"class.network::mojom::blink::CSPSourceList"*
  %19 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %14, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %14, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast %"class.WTF::Vector.2547"* %1 to i64*
  %22 = bitcast %"class.WTF::Vector.2547"* %14 to i64*
  store i64 0, i64* %22, align 8
  %23 = load i64, i64* %21, align 8
  %24 = bitcast %"class.WTF::Vector.2547"* %14 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %19, align 8
  store i32 0, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %1, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %20, align 4
  store i32 0, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %15, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %15, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::Vector.120"* %2 to i64*
  %32 = bitcast %"class.WTF::Vector.120"* %15 to i64*
  store i64 0, i64* %32, align 8
  %33 = load i64, i64* %31, align 8
  %34 = bitcast %"class.WTF::Vector.120"* %15 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %2, i64 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %29, align 8
  store i32 0, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %2, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %30, align 4
  store i32 0, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %16, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %16, i64 0, i32 0, i32 0, i32 2
  %41 = bitcast %"class.WTF::Vector.2552"* %3 to i64*
  %42 = bitcast %"class.WTF::Vector.2552"* %16 to i64*
  store i64 0, i64* %42, align 8
  %43 = load i64, i64* %41, align 8
  %44 = bitcast %"class.WTF::Vector.2552"* %16 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %3, i64 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %39, align 8
  store i32 0, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %3, i64 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %40, align 4
  store i32 0, i32* %47, align 4
  %49 = load i8, i8* %4, align 1, !range !4
  %50 = icmp ne i8 %49, 0
  %51 = load i8, i8* %5, align 1, !range !4
  %52 = icmp ne i8 %51, 0
  %53 = load i8, i8* %6, align 1, !range !4
  %54 = icmp ne i8 %53, 0
  %55 = load i8, i8* %7, align 1, !range !4
  %56 = icmp ne i8 %55, 0
  %57 = load i8, i8* %8, align 1, !range !4
  %58 = icmp ne i8 %57, 0
  %59 = load i8, i8* %9, align 1, !range !4
  %60 = icmp ne i8 %59, 0
  %61 = load i8, i8* %10, align 1, !range !4
  %62 = icmp ne i8 %61, 0
  %63 = load i8, i8* %11, align 1, !range !4
  %64 = icmp ne i8 %63, 0
  %65 = load i8, i8* %12, align 1, !range !4
  %66 = icmp ne i8 %65, 0
  call void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"* nonnull %18, %"class.WTF::Vector.2547"* nonnull %14, %"class.WTF::Vector.120"* nonnull %15, %"class.WTF::Vector.2552"* nonnull %16, i1 zeroext %50, i1 zeroext %52, i1 zeroext %54, i1 zeroext %56, i1 zeroext %58, i1 zeroext %60, i1 zeroext %62, i1 zeroext %64, i1 zeroext %66) #10
  %67 = ptrtoint i8* %17 to i64
  %68 = bitcast %"class.mojo::StructPtr.2543"* %0 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %16, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.mojo::StructPtr.2555"*, %"class.mojo::StructPtr.2555"** %69, align 8
  %71 = icmp eq %"class.mojo::StructPtr.2555"* %70, null
  br i1 %71, label %94, label %72, !prof !3

72:                                               ; preds = %13
  %73 = bitcast %"class.mojo::StructPtr.2555"* %70 to i8*
  %74 = load i32, i32* %40, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %92, label %76, !prof !2

76:                                               ; preds = %72
  %77 = zext i32 %74 to i64
  %78 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %70, i64 %77
  br label %79

79:                                               ; preds = %86, %76
  %80 = phi %"class.mojo::StructPtr.2555"* [ %87, %86 ], [ %70, %76 ]
  %81 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  %83 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %79
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %82) #10
  %85 = bitcast %"class.network::mojom::blink::CSPHashSource"* %82 to i8*
  call void @_ZdlPv(i8* %85) #16
  br label %86

86:                                               ; preds = %84, %79
  %87 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %80, i64 1
  %88 = icmp eq %"class.mojo::StructPtr.2555"* %87, %78
  br i1 %88, label %89, label %79

89:                                               ; preds = %86
  store i32 0, i32* %40, align 4
  %90 = bitcast %"class.WTF::Vector.2552"* %16 to i8**
  %91 = load i8*, i8** %90, align 8
  br label %92

92:                                               ; preds = %89, %72
  %93 = phi i8* [ %91, %89 ], [ %73, %72 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %93) #10
  store %"class.mojo::StructPtr.2555"* null, %"class.mojo::StructPtr.2555"** %69, align 8
  br label %94

94:                                               ; preds = %13, %92
  %95 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %15, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::String"*, %"class.WTF::String"** %95, align 8
  %97 = icmp eq %"class.WTF::String"* %96, null
  br i1 %97, label %131, label %98, !prof !3

98:                                               ; preds = %94
  %99 = bitcast %"class.WTF::String"* %96 to i8*
  %100 = load i32, i32* %30, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %129, label %102, !prof !2

102:                                              ; preds = %98
  %103 = zext i32 %100 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %103
  br label %105

105:                                              ; preds = %123, %102
  %106 = phi %"class.WTF::String"* [ %124, %123 ], [ %96, %102 ]
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #10
  br label %123

123:                                              ; preds = %122, %119, %105
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 1
  %125 = icmp eq %"class.WTF::String"* %124, %104
  br i1 %125, label %126, label %105

126:                                              ; preds = %123
  store i32 0, i32* %30, align 4
  %127 = bitcast %"class.WTF::Vector.120"* %15 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %98
  %130 = phi i8* [ %128, %126 ], [ %99, %98 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %130) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %95, align 8
  br label %131

131:                                              ; preds = %94, %129
  %132 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %14, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.mojo::StructPtr.103"*, %"class.mojo::StructPtr.103"** %132, align 8
  %134 = icmp eq %"class.mojo::StructPtr.103"* %133, null
  br i1 %134, label %157, label %135, !prof !3

135:                                              ; preds = %131
  %136 = bitcast %"class.mojo::StructPtr.103"* %133 to i8*
  %137 = load i32, i32* %20, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %155, label %139, !prof !2

139:                                              ; preds = %135
  %140 = zext i32 %137 to i64
  %141 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %133, i64 %140
  br label %142

142:                                              ; preds = %149, %139
  %143 = phi %"class.mojo::StructPtr.103"* [ %150, %149 ], [ %133, %139 ]
  %144 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %143, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %144, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %144, align 8
  %146 = icmp eq %"class.network::mojom::blink::CSPSource"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %142
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %145) #10
  %148 = bitcast %"class.network::mojom::blink::CSPSource"* %145 to i8*
  call void @_ZdlPv(i8* %148) #16
  br label %149

149:                                              ; preds = %147, %142
  %150 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %143, i64 1
  %151 = icmp eq %"class.mojo::StructPtr.103"* %150, %141
  br i1 %151, label %152, label %142

152:                                              ; preds = %149
  store i32 0, i32* %20, align 4
  %153 = bitcast %"class.WTF::Vector.2547"* %14 to i8**
  %154 = load i8*, i8** %153, align 8
  br label %155

155:                                              ; preds = %152, %135
  %156 = phi i8* [ %154, %152 ], [ %136, %135 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %156) #10
  store %"class.mojo::StructPtr.103"* null, %"class.mojo::StructPtr.103"** %132, align 8
  br label %157

157:                                              ; preds = %131, %155
  ret void
}

declare void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"*, %"class.WTF::Vector.2547"*, %"class.WTF::Vector.120"*, %"class.WTF::Vector.2552"*, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2547"* noalias sret, %"class.WTF::Vector.2547"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.103", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.2547"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  %8 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !2

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %12) #10
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #10
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.2547"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.103"*, %"class.mojo::StructPtr.103"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.103"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.103"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.103"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  %31 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %31, align 8, !noalias !55
  %33 = icmp eq %"class.network::mojom::blink::CSPSource"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !55
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.103"* nonnull sret %3, %"class.network::mojom::blink::CSPSource"* nonnull %32) #10
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !2

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.103"*, %"class.mojo::StructPtr.103"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.103"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2547"* %0, %"class.mojo::StructPtr.103"* nonnull dereferenceable(8) %3) #10
  %50 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %28, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::CSPSource"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::CSPSource"* %50 to i8*
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %50) #10
  call void @_ZdlPv(i8* %53) #16
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  %55 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.103"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2547"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.103"*, %"class.mojo::StructPtr.103"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.103"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.2547"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.103"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.103"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.103"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.103"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !62

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.103"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.103"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.103"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.103"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.103"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.103"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.103"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.103"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.103"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.103"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.103"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.103"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.103"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #10
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %73) #10
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #10
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.103"*, %"class.mojo::StructPtr.103"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.103"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.103"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.103"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.103"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.103"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.103"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !63

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.103"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.103"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.103"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.103"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.103"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.103"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.103"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.103"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.103"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.103"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.103"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.103"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.103"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.2547"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #10
  %149 = bitcast %"class.WTF::Vector.2547"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2547"*, %"class.mojo::StructPtr.103"* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.103"*, %"class.mojo::StructPtr.103"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.103"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.103"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.103"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2547"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.103"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2547"* %0, i32 %22) #10
  %36 = load %"class.mojo::StructPtr.103"*, %"class.mojo::StructPtr.103"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.103"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.103"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.2547", %"class.WTF::Vector.2547"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.103"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2547"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.103"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2547"* %0, i32 %50) #10
  %64 = load %"class.mojo::StructPtr.103"*, %"class.mojo::StructPtr.103"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.103"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.103"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.103"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.103"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.103", %"class.mojo::StructPtr.103"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.103"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2552"* noalias sret, %"class.WTF::Vector.2552"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.2555", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.2552"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  %8 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !2

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %12) #10
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #10
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.2552"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.2555"*, %"class.mojo::StructPtr.2555"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.2555"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.2555"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.2555"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  %31 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %31, align 8, !noalias !64
  %33 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !64
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2555"* nonnull sret %3, %"class.network::mojom::blink::CSPHashSource"* nonnull %32) #10
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !2

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.2555"*, %"class.mojo::StructPtr.2555"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.2555"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2552"* %0, %"class.mojo::StructPtr.2555"* nonnull dereferenceable(8) %3) #10
  %50 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::CSPHashSource"* %50 to i8*
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %50) #10
  call void @_ZdlPv(i8* %53) #16
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  %55 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.2555"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2552"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.2555"*, %"class.mojo::StructPtr.2555"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.2555"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.2552"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.2555"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.2555"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.2555"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.2555"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !71

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.2555"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.2555"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.2555"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.2555"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.2555"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.2555"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.2555"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.2555"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.2555"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.2555"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.2555"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.2555"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.2555"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #10
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %73) #10
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #10
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.2555"*, %"class.mojo::StructPtr.2555"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.2555"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.2555"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.2555"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.2555"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.2555"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.2555"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !72

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.2555"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.2555"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.2555"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.2555"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.2555"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.2555"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.2555"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.2555"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.2555"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.2555"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.2555"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.2555"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.2555"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.2552"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #10
  %149 = bitcast %"class.WTF::Vector.2552"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2552"*, %"class.mojo::StructPtr.2555"* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.2555"*, %"class.mojo::StructPtr.2555"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.2555"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.2555"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.2555"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2552"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.2555"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2552"* %0, i32 %22) #10
  %36 = load %"class.mojo::StructPtr.2555"*, %"class.mojo::StructPtr.2555"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.2555"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.2555"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.2552", %"class.WTF::Vector.2552"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.2555"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2552"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.2555"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2552"* %0, i32 %50) #10
  %64 = load %"class.mojo::StructPtr.2555"*, %"class.mojo::StructPtr.2555"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.2555"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.2555"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.2555"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.2555"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.2555", %"class.mojo::StructPtr.2555"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.2555"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2555"* noalias sret, %"class.network::mojom::blink::CSPHashSource"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.2559", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.WTF::Vector.2559", align 8
  %6 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %"class.WTF::Vector.2559"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.WTF::Vector.2559", %"class.WTF::Vector.2559"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::Vector.2559", %"class.WTF::Vector.2559"* %5, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.2559", %"class.WTF::Vector.2559"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #10, !alias.scope !73
  %12 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4, !noalias !73
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %28, label %15, !prof !2

15:                                               ; preds = %2
  %16 = zext i32 %13 to i64
  %17 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %16) #10
  %18 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %17, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %19 = ptrtoint i8* %18 to i64
  %20 = bitcast %"class.WTF::Vector.2559"* %5 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load i32, i32* %12, align 4, !noalias !73
  %22 = trunc i64 %17 to i32
  store i32 %22, i32* %10, align 8
  %23 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8, !noalias !73
  %25 = zext i32 %21 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = icmp eq i32 %21, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %2, %15
  %29 = phi i32 [ %22, %15 ], [ 0, %2 ]
  %30 = phi i64 [ %19, %15 ], [ 0, %2 ]
  %31 = bitcast %"class.WTF::Vector.2559"* %5 to i64*
  br label %56

32:                                               ; preds = %15, %48
  %33 = phi i32 [ %50, %48 ], [ %22, %15 ]
  %34 = phi i32 [ %49, %48 ], [ 0, %15 ]
  %35 = phi i8* [ %46, %48 ], [ %24, %15 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10, !noalias !73
  %36 = load i8, i8* %35, align 1
  store i8 %36, i8* %4, align 1, !noalias !73
  %37 = icmp eq i32 %34, %33
  br i1 %37, label %44, label %38, !prof !2

38:                                               ; preds = %32
  %39 = load i8*, i8** %9, align 8, !alias.scope !73
  %40 = zext i32 %34 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  store i8 %36, i8* %41, align 1
  %42 = load i32, i32* %11, align 4, !alias.scope !73
  %43 = add i32 %42, 1
  store i32 %43, i32* %11, align 4, !alias.scope !73
  br label %45

44:                                               ; preds = %32
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_(%"class.WTF::Vector.2559"* nonnull %5, i8* nonnull dereferenceable(1) %4) #10
  br label %45

45:                                               ; preds = %44, %38
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10, !noalias !73
  %46 = getelementptr inbounds i8, i8* %35, i64 1
  %47 = icmp eq i8* %46, %26
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = load i32, i32* %11, align 4, !alias.scope !73
  %50 = load i32, i32* %10, align 8, !alias.scope !73
  br label %32

51:                                               ; preds = %45
  %52 = bitcast %"class.WTF::Vector.2559"* %5 to i64*
  %53 = load i64, i64* %52, align 8, !noalias !78
  %54 = load i32, i32* %10, align 8, !noalias !78
  %55 = load i32, i32* %11, align 4, !noalias !78
  br label %56

56:                                               ; preds = %28, %51
  %57 = phi i64* [ %31, %28 ], [ %52, %51 ]
  %58 = phi i32 [ 0, %28 ], [ %55, %51 ]
  %59 = phi i32 [ %29, %28 ], [ %54, %51 ]
  %60 = phi i64 [ %30, %28 ], [ %53, %51 ]
  %61 = bitcast %"class.WTF::Vector.2559"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #10, !noalias !78
  %62 = call i8* @_Znwm(i64 24) #16, !noalias !78
  %63 = bitcast i8* %62 to %"class.network::mojom::blink::CSPHashSource"*
  %64 = getelementptr inbounds %"class.WTF::Vector.2559", %"class.WTF::Vector.2559"* %3, i64 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::Vector.2559", %"class.WTF::Vector.2559"* %3, i64 0, i32 0, i32 0, i32 2
  %66 = bitcast %"class.WTF::Vector.2559"* %3 to i64*
  store i64 0, i64* %66, align 8, !noalias !78
  store atomic i64 0, i64* %57 monotonic, align 8, !noalias !78
  store atomic i64 %60, i64* %66 monotonic, align 8, !noalias !78
  store i32 %59, i32* %64, align 8, !noalias !78
  store i32 0, i32* %10, align 8, !noalias !78
  store i32 %58, i32* %65, align 4, !noalias !78
  store i32 0, i32* %11, align 4, !noalias !78
  call void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"* nonnull %63, i32 %7, %"class.WTF::Vector.2559"* nonnull %3) #10, !noalias !78
  %67 = ptrtoint i8* %62 to i64
  %68 = bitcast %"class.mojo::StructPtr.2555"* %0 to i64*
  store i64 %67, i64* %68, align 8, !alias.scope !78
  %69 = getelementptr inbounds %"class.WTF::Vector.2559", %"class.WTF::Vector.2559"* %3, i64 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8, !noalias !78
  %71 = icmp eq i8* %70, null
  br i1 %71, label %77, label %72, !prof !3

72:                                               ; preds = %56
  %73 = load i32, i32* %65, align 4, !noalias !78
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !2

75:                                               ; preds = %72
  store i32 0, i32* %65, align 4, !noalias !78
  br label %76

76:                                               ; preds = %75, %72
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #10, !noalias !78
  store i8* null, i8** %69, align 8, !noalias !78
  br label %77

77:                                               ; preds = %56, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #10, !noalias !78
  %78 = load i8*, i8** %9, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %85, label %80, !prof !3

80:                                               ; preds = %77
  %81 = load i32, i32* %11, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83, !prof !2

83:                                               ; preds = %80
  store i32 0, i32* %11, align 4
  br label %84

84:                                               ; preds = %83, %80
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #10
  store i8* null, i8** %9, align 8
  br label %85

85:                                               ; preds = %77, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

declare void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"*, i32, %"class.WTF::Vector.2559"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #10
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_(%"class.WTF::Vector.2559"*, i8* dereferenceable(1)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2559", %"class.WTF::Vector.2559"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2559", %"class.WTF::Vector.2559"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %46, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2559", %"class.WTF::Vector.2559"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %83, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i8* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector.2559"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %14, align 8
  br label %83

33:                                               ; preds = %24
  %34 = load i8*, i8** %6, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !3

38:                                               ; preds = %33
  %39 = load i32, i32* %3, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #10
  %41 = load i8*, i8** %6, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #10
  %44 = bitcast %"class.WTF::Vector.2559"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %14, align 8
  br label %83

46:                                               ; preds = %9
  %47 = ptrtoint i8* %1 to i64
  %48 = ptrtoint i8* %7 to i64
  %49 = sub i64 %47, %48
  %50 = getelementptr inbounds %"class.WTF::Vector.2559", %"class.WTF::Vector.2559"* %0, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 2
  %53 = add i32 %51, 1
  %54 = add i32 %53, %52
  %55 = icmp ugt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = icmp ugt i32 %56, %5
  %58 = select i1 %57, i32 %56, i32 %5
  %59 = icmp ult i32 %51, %58
  br i1 %59, label %60, label %80, !prof !3

60:                                               ; preds = %46
  %61 = icmp eq i8* %7, null
  %62 = zext i32 %58 to i64
  %63 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %62) #10
  %64 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %63, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %65 = ptrtoint i8* %64 to i64
  br i1 %61, label %77, label %66

66:                                               ; preds = %60
  %67 = load i8*, i8** %6, align 8
  %68 = icmp ne i8* %64, null
  %69 = icmp ne i8* %67, null
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %75, !prof !3

71:                                               ; preds = %66
  %72 = load i32, i32* %3, align 4
  %73 = zext i32 %72 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* nonnull align 1 %67, i64 %73, i1 false) #10
  %74 = load i8*, i8** %6, align 8
  br label %75

75:                                               ; preds = %71, %66
  %76 = phi i8* [ %67, %66 ], [ %74, %71 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #10
  br label %77

77:                                               ; preds = %60, %75
  %78 = bitcast %"class.WTF::Vector.2559"* %0 to i64*
  store atomic i64 %65, i64* %78 monotonic, align 8
  %79 = trunc i64 %63 to i32
  store i32 %79, i32* %50, align 8
  br label %80

80:                                               ; preds = %77, %46
  %81 = phi i8* [ %7, %46 ], [ %64, %77 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %49
  br label %83

83:                                               ; preds = %42, %30, %13, %80
  %84 = phi i8* [ %81, %80 ], [ %7, %13 ], [ %28, %30 ], [ %28, %42 ]
  %85 = phi i8* [ %82, %80 ], [ %1, %13 ], [ %1, %30 ], [ %1, %42 ]
  %86 = load i32, i32* %3, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = load i8, i8* %85, align 1
  store i8 %89, i8* %88, align 1
  %90 = load i32, i32* %3, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %3, align 4
  ret void
}

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*, %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.120"* noalias sret, %"class.WTF::Vector.120"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.120"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  %8 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %81, label %11, !prof !2

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %12) #10
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.120"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::String"*, %"class.WTF::String"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %81, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %25, %78
  %29 = phi %"class.WTF::String"* [ %21, %25 ], [ %79, %78 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #10
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  call void @llvm.trap() #10
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %28, %33, %48
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %27, align 8
  %51 = load i32, i32* %6, align 4
  %52 = load i32, i32* %5, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %62, label %54, !prof !2

54:                                               ; preds = %50
  %55 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %56 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %57 = zext i32 %51 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 %57
  %59 = bitcast %"class.WTF::String"* %58 to i64*
  store i64 %55, i64* %59, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %60 = load i32, i32* %6, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %6, align 4
  br label %78

62:                                               ; preds = %50
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.120"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #10
  br label %78

78:                                               ; preds = %54, %62, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 1
  %80 = icmp eq %"class.WTF::String"* %79, %23
  br i1 %80, label %81, label %28

81:                                               ; preds = %78, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.120"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.120"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.120"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.120"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.120"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.120"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.120"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.125"* noalias sret, %"class.network::mojom::blink::CSPTrustedTypes"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.120", align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = bitcast %"class.WTF::Vector.120"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 0
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.120"* nonnull sret %3, %"class.WTF::Vector.120"* dereferenceable(16) %7) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  %8 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 1
  %9 = load i8, i8* %8, align 1, !range !4
  store i8 %9, i8* %4, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  %10 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 1, !range !4
  store i8 %11, i8* %5, align 1
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.125"* %0, %"class.WTF::Vector.120"* nonnull dereferenceable(16) %3, i8* nonnull dereferenceable(1) %4, i8* nonnull dereferenceable(1) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  %12 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %14 = icmp eq %"class.WTF::String"* %13, null
  br i1 %14, label %49, label %15, !prof !3

15:                                               ; preds = %2
  %16 = bitcast %"class.WTF::String"* %13 to i8*
  %17 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %3, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %47, label %20, !prof !2

20:                                               ; preds = %15
  %21 = zext i32 %18 to i64
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %21
  br label %23

23:                                               ; preds = %41, %20
  %24 = phi %"class.WTF::String"* [ %42, %41 ], [ %13, %20 ]
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #10
  br label %41

41:                                               ; preds = %40, %37, %23
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 1
  %43 = icmp eq %"class.WTF::String"* %42, %22
  br i1 %43, label %44, label %23

44:                                               ; preds = %41
  store i32 0, i32* %17, align 4
  %45 = bitcast %"class.WTF::Vector.120"* %3 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %15
  %48 = phi i8* [ %46, %44 ], [ %16, %15 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %12, align 8
  br label %49

49:                                               ; preds = %2, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.125"*, %"class.WTF::Vector.120"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::Vector.120", align 8
  %6 = tail call i8* @_Znwm(i64 24) #16
  %7 = bitcast i8* %6 to %"class.network::mojom::blink::CSPTrustedTypes"*
  %8 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::Vector.120"* %1 to i64*
  %11 = bitcast %"class.WTF::Vector.120"* %5 to i64*
  store i64 0, i64* %11, align 8
  %12 = load i64, i64* %10, align 8
  %13 = bitcast %"class.WTF::Vector.120"* %5 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %8, align 8
  store i32 0, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %9, align 4
  store i32 0, i32* %16, align 4
  %18 = load i8, i8* %2, align 1, !range !4
  %19 = icmp ne i8 %18, 0
  %20 = load i8, i8* %3, align 1, !range !4
  %21 = icmp ne i8 %20, 0
  call void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %7, %"class.WTF::Vector.120"* nonnull %5, i1 zeroext %19, i1 zeroext %21) #10
  %22 = ptrtoint i8* %6 to i64
  %23 = bitcast %"class.mojo::StructPtr.125"* %0 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.120", %"class.WTF::Vector.120"* %5, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %26 = icmp eq %"class.WTF::String"* %25, null
  br i1 %26, label %60, label %27, !prof !3

27:                                               ; preds = %4
  %28 = bitcast %"class.WTF::String"* %25 to i8*
  %29 = load i32, i32* %9, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %58, label %31, !prof !2

31:                                               ; preds = %27
  %32 = zext i32 %29 to i64
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 %32
  br label %34

34:                                               ; preds = %52, %31
  %35 = phi %"class.WTF::String"* [ %53, %52 ], [ %25, %31 ]
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #10
  br label %52

52:                                               ; preds = %51, %48, %34
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 1
  %54 = icmp eq %"class.WTF::String"* %53, %33
  br i1 %54, label %55, label %34

55:                                               ; preds = %52
  store i32 0, i32* %9, align 4
  %56 = bitcast %"class.WTF::Vector.120"* %5 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %27
  %59 = phi i8* [ %57, %55 ], [ %28, %27 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %24, align 8
  br label %60

60:                                               ; preds = %4, %58
  ret void
}

declare void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"*, %"class.WTF::Vector.120"*, i1 zeroext, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_126OutsideSettingsCSPDelegateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26WorkerOrWorkletGlobalScopeEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %84, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = and i64 %16, -131072
  %21 = inttoptr i64 %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 4138
  %23 = load i8, i8* %22, align 2
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = getelementptr inbounds i8, i8* %21, i64 4160
  br label %65

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %21, i64 4096
  %29 = bitcast i8* %28 to %"class.blink::NormalPage"*
  %30 = getelementptr inbounds i8, i8* %21, i64 4400
  %31 = bitcast i8* %30 to i8**
  %32 = bitcast i8* %30 to i64*
  %33 = load i64, i64* %32, align 16
  %34 = sub i64 %16, %33
  %35 = lshr i64 %34, 3
  %36 = lshr i64 %34, 6
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %36
  %38 = load atomic i8, i8* %37 acquire, align 1
  %39 = trunc i64 %35 to i32
  %40 = and i32 %39, 7
  %41 = shl i32 2, %40
  %42 = trunc i32 %41 to i8
  %43 = add i8 %42, -1
  %44 = and i8 %43, %38
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %27, %46
  %47 = phi i64 [ %48, %46 ], [ %36, %27 ]
  %48 = add i64 %47, -1
  %49 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %48
  %50 = load atomic i8, i8* %49 acquire, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %46, label %52

52:                                               ; preds = %46, %27
  %53 = phi i64 [ %36, %27 ], [ %48, %46 ]
  %54 = phi i8 [ %44, %27 ], [ %50, %46 ]
  %55 = zext i8 %54 to i32
  %56 = tail call i32 @llvm.ctlz.i32(i32 %55, i1 true) #10, !range !5
  %57 = add nsw i32 %56, -24
  %58 = shl i64 %53, 3
  %59 = or i64 %58, 7
  %60 = sext i32 %57 to i64
  %61 = sub i64 %59, %60
  %62 = shl i64 %61, 3
  %63 = load i8*, i8** %31, align 16
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  br label %65

65:                                               ; preds = %52, %25
  %66 = phi i8* [ %26, %25 ], [ %64, %52 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = getelementptr inbounds i8, i8* %66, i64 4
  %69 = bitcast i8* %68 to i16*
  %70 = load atomic i16, i16* %69 acquire, align 2
  %71 = lshr i16 %70, 2
  %72 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %73 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %72, i64 0, i32 0
  %74 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %73, align 8
  %75 = zext i16 %71 to i64
  %76 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %74, i64 %75
  %77 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %76, align 8
  %78 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %77, i64 0, i32 0
  %79 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %78, align 8
  %80 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %81 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %81, i64 5
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, align 8
  tail call void %83(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* %67, void (%"class.blink::Visitor"*, i8*)* %79) #10
  br label %84

84:                                               ; preds = %13, %65
  %85 = getelementptr inbounds i8, i8* %1, i64 8
  %86 = bitcast i8* %85 to i64*
  %87 = load atomic i64, i64* %86 monotonic, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %84
  %90 = inttoptr i64 %87 to i8*
  %91 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %92 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %92, i64 5
  %94 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %93, align 8
  tail call void %94(%"class.blink::Visitor"* %0, i8* nonnull %90, i8* nonnull %90, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25FetchClientSettingsObjectEE5TraceEPNS_7VisitorEPKv) #10
  br label %95

95:                                               ; preds = %84, %89
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal { i8*, i8 } @_ZN5blink9NameTraitINS_12_GLOBAL__N_126OutsideSettingsCSPDelegateEE7GetNameEPKv(i8* nocapture readnone) #6 align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate", %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.505"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26WorkerOrWorkletGlobalScopeEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate", %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* %0, i64 0, i32 2
  tail call void @_ZN5blink7Visitor5TraceINS_10UseCounterEEEvRKNS_6MemberIT_EE(%"class.blink::Visitor"* %1, %"class.blink::Member.613"* dereferenceable(8) %14)
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate", %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* %0, i64 0, i32 1
  %16 = bitcast %"class.blink::Member.596"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %13
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25FetchClientSettingsObjectEE5TraceEPNS_7VisitorEPKv) #10
  br label %25

25:                                               ; preds = %13, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26WorkerOrWorkletGlobalScopeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WorkerOrWorkletGlobalScope"*
  %4 = bitcast i8* %1 to void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*)**, void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*)*, void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*)*, void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::WorkerOrWorkletGlobalScope"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::SecurityOrigin"* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate17GetSecurityOriginEv(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate", %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::FetchClientSettingsObject"*, %"class.blink::FetchClientSettingsObject"** %2, align 8
  %4 = bitcast %"class.blink::FetchClientSettingsObject"* %3 to %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)***
  %5 = load %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)**, %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)** %5, i64 4
  %7 = load %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)** %6, align 8
  %8 = tail call %"class.blink::SecurityOrigin"* %7(%"class.blink::FetchClientSettingsObject"* %3) #10
  ret %"class.blink::SecurityOrigin"* %8
}

; Function Attrs: nounwind ssp uwtable
define internal dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate3UrlEv(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate", %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::FetchClientSettingsObject"*, %"class.blink::FetchClientSettingsObject"** %2, align 8
  %4 = bitcast %"class.blink::FetchClientSettingsObject"* %3 to %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)***
  %5 = load %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)**, %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)** %5, i64 2
  %7 = load %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)** %6, align 8
  %8 = tail call dereferenceable(112) %"class.blink::KURL"* %7(%"class.blink::FetchClientSettingsObject"* %3) #10
  ret %"class.blink::KURL"* %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate15SetSandboxFlagsEN7network5mojom15WebSandboxFlagsE(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture, i32) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate22SetRequireTrustedTypesEv(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate24AddInsecureRequestPolicyENS_5mojom21InsecureRequestPolicyE(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture, i32) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.blink::SourceLocation"* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate17GetSourceLocationEv(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture readnone) unnamed_addr #6 align 2 {
  ret %"class.blink::SourceLocation"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate13GetStatusCodeEv(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate19GetDocumentReferrerEv(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture readnone) unnamed_addr #6 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate22DispatchViolationEventERKNS_32SecurityPolicyViolationEventInitEPNS_7ElementE(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture, %"class.blink::SecurityPolicyViolationEventInit"* nocapture, %"class.blink::Element"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate19PostViolationReportERKNS_32SecurityPolicyViolationEventInitERKN3WTF6StringEbRKNS5_6VectorIS6_Lj0ENS5_18PartitionAllocatorEEEb(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture, %"class.blink::SecurityPolicyViolationEventInit"* nocapture, %"class.WTF::String"* nocapture dereferenceable(8), i1 zeroext, %"class.WTF::Vector.120"* nocapture dereferenceable(16), i1 zeroext) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate5CountENS_5mojom10WebFeatureE(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate", %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::UseCounter"*, %"class.blink::UseCounter"** %3, align 8
  %5 = bitcast %"class.blink::UseCounter"* %4 to void (%"class.blink::UseCounter"*, i32)***
  %6 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %6, i64 3
  %8 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %7, align 8
  tail call void %8(%"class.blink::UseCounter"* %4, i32 %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate17AddConsoleMessageEPNS_14ConsoleMessageE(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture readonly, %"class.blink::ConsoleMessage"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate", %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::WorkerOrWorkletGlobalScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %4, i64 0, i32 1
  %6 = bitcast %"class.blink::ExecutionContext.base"* %5 to %"class.blink::ExecutionContext"*
  %7 = bitcast %"class.blink::ExecutionContext.base"* %5 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %8 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %8, i64 52
  %10 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %9, align 8
  tail call void %10(%"class.blink::ExecutionContext"* %6, %"class.blink::ConsoleMessage"* %1, i1 zeroext false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate17AddInspectorIssueEN4mojo9StructPtrINS_5mojom5blink18InspectorIssueInfoEEE(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture readonly, %"class.mojo::StructPtr.2711"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr.2711", align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate", %"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::WorkerOrWorkletGlobalScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %5, i64 0, i32 1
  %7 = bitcast %"class.blink::ExecutionContext.base"* %6 to %"class.blink::ExecutionContext"*
  %8 = bitcast %"class.mojo::StructPtr.2711"* %3 to i64*
  %9 = getelementptr inbounds %"class.mojo::StructPtr.2711", %"class.mojo::StructPtr.2711"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.mojo::StructPtr.2711"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  store i64 0, i64* %10, align 8
  %12 = bitcast %"class.blink::ExecutionContext.base"* %6 to void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2711"*)***
  %13 = load void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2711"*)**, void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2711"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2711"*)*, void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2711"*)** %13, i64 30
  %15 = load void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2711"*)*, void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2711"*)** %14, align 8
  call void %15(%"class.blink::ExecutionContext"* %7, %"class.mojo::StructPtr.2711"* nonnull %3) #10
  %16 = load %"class.blink::mojom::blink::InspectorIssueInfo"*, %"class.blink::mojom::blink::InspectorIssueInfo"** %9, align 8
  store %"class.blink::mojom::blink::InspectorIssueInfo"* null, %"class.blink::mojom::blink::InspectorIssueInfo"** %9, align 8
  %17 = icmp eq %"class.blink::mojom::blink::InspectorIssueInfo"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %2
  call void @_ZN5blink5mojom5blink18InspectorIssueInfoD1Ev(%"class.blink::mojom::blink::InspectorIssueInfo"* nonnull %16) #10
  %19 = bitcast %"class.blink::mojom::blink::InspectorIssueInfo"* %16 to i8*
  call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate11DisableEvalERKN3WTF6StringE(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture, %"class.WTF::String"* nocapture dereferenceable(8)) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate39ReportBlockedScriptExecutionToInspectorERKN3WTF6StringE(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture, %"class.WTF::String"* nocapture dereferenceable(8)) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126OutsideSettingsCSPDelegate29DidAddContentSecurityPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS2_18PartitionAllocatorEEE(%"class.blink::(anonymous namespace)::OutsideSettingsCSPDelegate"* nocapture, %"class.WTF::Vector.96"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink18InspectorIssueInfoD1Ev(%"class.blink::mojom::blink::InspectorIssueInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_15ResourceFetcherEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WeakMember.479"**
  %4 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %3, align 8
  %5 = icmp eq %"class.blink::WeakMember.479"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %4, i64 %10
  %12 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %11, i64 -1
  %13 = icmp ult %"class.blink::WeakMember.479"* %12, %4
  br i1 %13, label %61, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %57
  %20 = phi %"class.blink::WeakMember.479"* [ %12, %14 ], [ %58, %57 ]
  %21 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %21, align 8
  %23 = ptrtoint %"class.blink::ResourceFetcher"* %22 to i64
  switch i64 %23, label %24 [
    i64 -1, label %57
    i64 0, label %57
  ]

24:                                               ; preds = %19
  %25 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %26 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %25, i64 0, i32 1
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #10
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31, !prof !2

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %26, i8* %30) #10
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi i8* [ %30, %29 ], [ %27, %24 ]
  %33 = bitcast i8* %32 to %"class.blink::ThreadState"**
  %34 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %33, align 8
  %35 = icmp eq %"class.blink::ThreadState"* %34, null
  br i1 %35, label %57, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %22, i64 -1, i32 32, i32 0, i32 1
  %38 = bitcast i64* %37 to %"class.blink::HeapObjectHeader"*
  %39 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %38, i64 0, i32 2
  %40 = load i16, i16* %39, align 2
  %41 = and i16 %40, 1
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %36
  %44 = bitcast %"class.blink::WeakMember.479"* %20 to i64*
  store atomic i64 -1, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #10
  br label %49

49:                                               ; preds = %43, %47
  %50 = load i32, i32* %16, align 8
  %51 = add i32 %50, 1
  %52 = and i32 %51, 2147483647
  %53 = and i32 %50, -2147483648
  %54 = or i32 %52, %53
  store i32 %54, i32* %16, align 8
  %55 = load i32, i32* %18, align 4
  %56 = add i32 %55, -1
  store i32 %56, i32* %18, align 4
  br label %57

57:                                               ; preds = %36, %19, %19, %31, %49
  %58 = getelementptr inbounds %"class.blink::WeakMember.479", %"class.blink::WeakMember.479"* %20, i64 -1
  %59 = load %"class.blink::WeakMember.479"*, %"class.blink::WeakMember.479"** %3, align 8
  %60 = icmp ult %"class.blink::WeakMember.479"* %58, %59
  br i1 %60, label %61, label %19

61:                                               ; preds = %57, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Modulator"*
  %4 = bitcast i8* %1 to void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)**, void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)*, void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::Modulator"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{i32 24, i32 33}
!6 = !{!7, !9, !11}
!7 = distinct !{!7, !8, !"_ZNK4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEE5CloneEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEE5CloneEv"}
!9 = distinct !{!9, !10, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELb1EE5CloneERKS6_: argument 0"}
!10 = distinct !{!10, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELb1EE5CloneERKS6_"}
!11 = distinct !{!11, !12, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEET_RKS7_: argument 0"}
!12 = distinct !{!12, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEET_RKS7_"}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = !{!17, !19, !21}
!17 = distinct !{!17, !18, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv"}
!19 = distinct !{!19, !20, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_: argument 0"}
!20 = distinct !{!20, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_"}
!21 = distinct !{!21, !22, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_: argument 0"}
!22 = distinct !{!22, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_"}
!23 = !{!24, !26, !28}
!24 = distinct !{!24, !25, !"_ZNK4mojo16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEE5CloneEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4mojo16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEE5CloneEv"}
!26 = distinct !{!26, !27, !"_ZN4mojo11CloneTraitsINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEELb1EE5CloneERKS6_: argument 0"}
!27 = distinct !{!27, !"_ZN4mojo11CloneTraitsINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEELb1EE5CloneERKS6_"}
!28 = distinct !{!28, !29, !"_ZN4mojo5CloneINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEEEET_RKS7_: argument 0"}
!29 = distinct !{!29, !"_ZN4mojo5CloneINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEEEET_RKS7_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK7network5mojom5blink27ContentSecurityPolicyHeader5CloneIN4mojo16InlinedStructPtrIS2_EEEES6_v: argument 0"}
!32 = distinct !{!32, !"_ZNK7network5mojom5blink27ContentSecurityPolicyHeader5CloneIN4mojo16InlinedStructPtrIS2_EEEES6_v"}
!33 = !{!34, !31}
!34 = distinct !{!34, !35, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!35 = distinct !{!35, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!36 = !{!37, !39, !41}
!37 = distinct !{!37, !38, !"_ZNK4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEE5CloneEv: argument 0"}
!38 = distinct !{!38, !"_ZNK4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEE5CloneEv"}
!39 = distinct !{!39, !40, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEELb1EE5CloneERKS6_: argument 0"}
!40 = distinct !{!40, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEELb1EE5CloneERKS6_"}
!41 = distinct !{!41, !42, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEEEET_RKS7_: argument 0"}
!42 = distinct !{!42, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEEEET_RKS7_"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN7network5mojom5blink9CSPSource3NewIJN3WTF6StringES5_iS5_bbEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!45 = distinct !{!45, !"_ZN7network5mojom5blink9CSPSource3NewIJN3WTF6StringES5_iS5_bbEEEN4mojo9StructPtrIS2_EEDpOT_"}
!46 = distinct !{!46, !14}
!47 = !{!48, !50, !52}
!48 = distinct !{!48, !49, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEE5CloneEv: argument 0"}
!49 = distinct !{!49, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEE5CloneEv"}
!50 = distinct !{!50, !51, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEELb1EE5CloneERKS6_: argument 0"}
!51 = distinct !{!51, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEELb1EE5CloneERKS6_"}
!52 = distinct !{!52, !53, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEEEET_RKS7_: argument 0"}
!53 = distinct !{!53, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEEEET_RKS7_"}
!54 = distinct !{!54, !14}
!55 = !{!56, !58, !60}
!56 = distinct !{!56, !57, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv: argument 0"}
!57 = distinct !{!57, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv"}
!58 = distinct !{!58, !59, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_: argument 0"}
!59 = distinct !{!59, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_"}
!60 = distinct !{!60, !61, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_: argument 0"}
!61 = distinct !{!61, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_"}
!62 = distinct !{!62, !14}
!63 = distinct !{!63, !14}
!64 = !{!65, !67, !69}
!65 = distinct !{!65, !66, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEE5CloneEv: argument 0"}
!66 = distinct !{!66, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEE5CloneEv"}
!67 = distinct !{!67, !68, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELb1EE5CloneERKS6_: argument 0"}
!68 = distinct !{!68, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELb1EE5CloneERKS6_"}
!69 = distinct !{!69, !70, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEET_RKS7_: argument 0"}
!70 = distinct !{!70, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEET_RKS7_"}
!71 = distinct !{!71, !14}
!72 = distinct !{!72, !14}
!73 = !{!74, !76}
!74 = distinct !{!74, !75, !"_ZN4mojo11CloneTraitsIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS4_: argument 0"}
!75 = distinct !{!75, !"_ZN4mojo11CloneTraitsIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS4_"}
!76 = distinct !{!76, !77, !"_ZN4mojo5CloneIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEEET_RKS5_: argument 0"}
!77 = distinct !{!77, !"_ZN4mojo5CloneIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEEET_RKS5_"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN7network5mojom5blink13CSPHashSource3NewIJNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!80 = distinct !{!80, !"_ZN7network5mojom5blink13CSPHashSource3NewIJNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_"}
