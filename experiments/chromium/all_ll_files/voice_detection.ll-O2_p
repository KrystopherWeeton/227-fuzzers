; ModuleID = '../../third_party/webrtc/modules/audio_processing/voice_detection.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/voice_detection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::VoiceDetection" = type { i32, i64, i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::VoiceDetection::Vad"* }
%"class.webrtc::VoiceDetection::Vad" = type { %struct.WebRtcVadInst* }
%struct.WebRtcVadInst = type opaque
%"class.webrtc::AudioBuffer" = type { i32 (...)**, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.23", %"class.std::__1::vector.29", %"class.std::__1::vector.29", i8, i64 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.webrtc::ChannelBuffer"* }
%"class.webrtc::ChannelBuffer" = type { %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", i64, i64, i64, i64, i64, %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { float* }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::vector.16" = type opaque
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::vector.16"* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.webrtc::SplittingFilter"* }
%"class.webrtc::SplittingFilter" = type opaque
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::unique_ptr.31" = type opaque
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::unique_ptr.31"* }
%"struct.std::__1::array" = type { [160 x i16] }

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = comdat any

@.str = private unnamed_addr constant [69 x i8] c"../../third_party/webrtc/modules/audio_processing/voice_detection.cc\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"state_\00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = linkonce_odr hidden constant [1 x i8] zeroinitializer, comdat, align 1

@_ZN6webrtc14VoiceDetectionC1EiNS0_10LikelihoodE = hidden unnamed_addr alias void (%"class.webrtc::VoiceDetection"*, i32, i32), void (%"class.webrtc::VoiceDetection"*, i32, i32)* @_ZN6webrtc14VoiceDetectionC2EiNS0_10LikelihoodE
@_ZN6webrtc14VoiceDetectionD1Ev = hidden unnamed_addr alias void (%"class.webrtc::VoiceDetection"*), void (%"class.webrtc::VoiceDetection"*)* @_ZN6webrtc14VoiceDetectionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14VoiceDetectionC2EiNS0_10LikelihoodE(%"class.webrtc::VoiceDetection"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::VoiceDetection", %"class.webrtc::VoiceDetection"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::VoiceDetection", %"class.webrtc::VoiceDetection"* %0, i64 0, i32 1
  %6 = sdiv i32 %1, 100
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.webrtc::VoiceDetection", %"class.webrtc::VoiceDetection"* %0, i64 0, i32 2
  store i32 %2, i32* %8, align 8
  %9 = tail call i8* @_Znwm(i64 8) #7
  %10 = bitcast i8* %9 to %struct.WebRtcVadInst**
  %11 = tail call %struct.WebRtcVadInst* @WebRtcVad_Create() #8
  store %struct.WebRtcVadInst* %11, %struct.WebRtcVadInst** %10, align 8
  %12 = icmp eq %struct.WebRtcVadInst* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i32 22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t, i64 0, i64 0)) #9
  unreachable

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.webrtc::VoiceDetection", %"class.webrtc::VoiceDetection"* %0, i64 0, i32 3
  %16 = tail call i32 @WebRtcVad_Init(%struct.WebRtcVadInst* nonnull %11) #8
  %17 = ptrtoint i8* %9 to i64
  %18 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 %17, i64* %18, align 8
  %19 = icmp ult i32 %2, 4
  %20 = sub i32 3, %2
  %21 = select i1 %19, i32 %20, i32 2
  %22 = bitcast i8* %9 to %struct.WebRtcVadInst**
  %23 = load %struct.WebRtcVadInst*, %struct.WebRtcVadInst** %22, align 8
  %24 = tail call i32 @WebRtcVad_set_mode(%struct.WebRtcVadInst* %23, i32 %21) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @WebRtcVad_set_mode(%struct.WebRtcVadInst*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14VoiceDetectionD2Ev(%"class.webrtc::VoiceDetection"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VoiceDetection", %"class.webrtc::VoiceDetection"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::VoiceDetection::Vad"*, %"class.webrtc::VoiceDetection::Vad"** %2, align 8
  store %"class.webrtc::VoiceDetection::Vad"* null, %"class.webrtc::VoiceDetection::Vad"** %2, align 8
  %4 = icmp eq %"class.webrtc::VoiceDetection::Vad"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::VoiceDetection::Vad", %"class.webrtc::VoiceDetection::Vad"* %3, i64 0, i32 0
  %7 = load %struct.WebRtcVadInst*, %struct.WebRtcVadInst** %6, align 8
  tail call void @WebRtcVad_Free(%struct.WebRtcVadInst* %7) #8
  %8 = bitcast %"class.webrtc::VoiceDetection::Vad"* %3 to i8*
  tail call void @_ZdlPv(i8* %8) #7
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc14VoiceDetection19ProcessCaptureAudioEPNS_11AudioBufferE(%"class.webrtc::VoiceDetection"* nocapture readonly, %"class.webrtc::AudioBuffer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::array", align 2
  %4 = bitcast %"struct.std::__1::array"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %4, i8 -86, i64 320, i1 false)
  %5 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 0
  %6 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 9
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = select i1 %8, i16* null, i16* %5
  %10 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 7
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %25

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %15 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %14, align 8
  %16 = icmp eq %"class.webrtc::ChannelBuffer"* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %19 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %18, align 8
  br label %20

20:                                               ; preds = %13, %17
  %21 = phi %"class.webrtc::ChannelBuffer"* [ %19, %17 ], [ %15, %13 ]
  %22 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %21, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load float**, float*** %22, align 8
  %24 = load float*, float** %23, align 8
  call void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float* %24, i64 %7, i16* nonnull %5) #8
  br label %84

25:                                               ; preds = %2
  %26 = trunc i64 %11 to i32
  br i1 %8, label %84, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %30 = icmp sgt i32 %26, 1
  %31 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %28, align 8
  %32 = icmp eq %"class.webrtc::ChannelBuffer"* %31, null
  %33 = and i64 %11, 4294967295
  br label %34

34:                                               ; preds = %53, %27
  %35 = phi i64 [ 0, %27 ], [ %58, %53 ]
  br i1 %32, label %36, label %38

36:                                               ; preds = %34
  %37 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %29, align 8
  br label %38

38:                                               ; preds = %34, %36
  %39 = phi %"class.webrtc::ChannelBuffer"* [ %37, %36 ], [ %31, %34 ]
  %40 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %39, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load float**, float*** %40, align 8
  %42 = load float*, float** %41, align 8
  %43 = getelementptr inbounds float, float* %42, i64 %35
  %44 = load float, float* %43, align 4
  %45 = fcmp ogt float %44, 3.276700e+04
  %46 = select i1 %45, float 3.276700e+04, float %44
  %47 = fcmp olt float %46, -3.276800e+04
  %48 = select i1 %47, float -3.276800e+04, float %46
  %49 = tail call float @llvm.copysign.f32(float 5.000000e-01, float %48) #8
  %50 = fadd float %48, %49
  %51 = fptosi float %50 to i16
  %52 = sext i16 %51 to i32
  br i1 %30, label %60, label %53

53:                                               ; preds = %65, %38
  %54 = phi i32 [ %52, %38 ], [ %81, %65 ]
  %55 = sdiv i32 %54, %26
  %56 = trunc i32 %55 to i16
  %57 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 %35
  store i16 %56, i16* %57, align 2
  %58 = add nuw i64 %35, 1
  %59 = icmp eq i64 %58, %7
  br i1 %59, label %84, label %34

60:                                               ; preds = %38, %65
  %61 = phi i64 [ %82, %65 ], [ 1, %38 ]
  %62 = phi i32 [ %81, %65 ], [ %52, %38 ]
  br i1 %32, label %63, label %65

63:                                               ; preds = %60
  %64 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %29, align 8
  br label %65

65:                                               ; preds = %60, %63
  %66 = phi %"class.webrtc::ChannelBuffer"* [ %64, %63 ], [ %31, %60 ]
  %67 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %66, i64 0, i32 1, i32 0, i32 0, i32 0
  %68 = load float**, float*** %67, align 8
  %69 = getelementptr inbounds float*, float** %68, i64 %61
  %70 = load float*, float** %69, align 8
  %71 = getelementptr inbounds float, float* %70, i64 %35
  %72 = load float, float* %71, align 4
  %73 = fcmp ogt float %72, 3.276700e+04
  %74 = select i1 %73, float 3.276700e+04, float %72
  %75 = fcmp olt float %74, -3.276800e+04
  %76 = select i1 %75, float -3.276800e+04, float %74
  %77 = tail call float @llvm.copysign.f32(float 5.000000e-01, float %76) #8
  %78 = fadd float %76, %77
  %79 = fptosi float %78 to i16
  %80 = sext i16 %79 to i32
  %81 = add nsw i32 %62, %80
  %82 = add nuw nsw i64 %61, 1
  %83 = icmp eq i64 %82, %33
  br i1 %83, label %53, label %60

84:                                               ; preds = %53, %25, %20
  %85 = getelementptr inbounds %"class.webrtc::VoiceDetection", %"class.webrtc::VoiceDetection"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.webrtc::VoiceDetection::Vad"*, %"class.webrtc::VoiceDetection::Vad"** %85, align 8
  %87 = getelementptr inbounds %"class.webrtc::VoiceDetection::Vad", %"class.webrtc::VoiceDetection::Vad"* %86, i64 0, i32 0
  %88 = load %struct.WebRtcVadInst*, %struct.WebRtcVadInst** %87, align 8
  %89 = getelementptr inbounds %"class.webrtc::VoiceDetection", %"class.webrtc::VoiceDetection"* %0, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %"class.webrtc::VoiceDetection", %"class.webrtc::VoiceDetection"* %0, i64 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = call i32 @WebRtcVad_Process(%struct.WebRtcVadInst* %88, i32 %90, i16* %9, i64 %92) #8
  %94 = icmp ne i32 %93, 0
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %4) #8
  ret i1 %94
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float*, i64, i16*) local_unnamed_addr #3

declare i32 @WebRtcVad_Process(%struct.WebRtcVadInst*, i32, i16*, i64) local_unnamed_addr #3

declare %struct.WebRtcVadInst* @WebRtcVad_Create() local_unnamed_addr #3

declare i32 @WebRtcVad_Init(%struct.WebRtcVadInst*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.copysign.f32(float, float) #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @WebRtcVad_Free(%struct.WebRtcVadInst*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
