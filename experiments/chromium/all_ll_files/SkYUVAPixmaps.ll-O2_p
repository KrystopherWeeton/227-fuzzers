; ModuleID = '../../third_party/skia/src/core/SkYUVAPixmaps.cpp'
source_filename = "../../third_party/skia/src/core/SkYUVAPixmaps.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.9", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%struct.SkISize = type { i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.3, i32, i32 }
%class.sk_sp.3 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%"struct.std::__1::array.9" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.10", %class.sk_sp.11, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.10" = type { [4 x %class.SkPixmap] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.11 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.12, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.12 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::array.13" = type { [4 x %"struct.SkYUVAInfo::YUVALocation"] }
%"struct.SkYUVAInfo::YUVALocation" = type { i32, i32 }

$_ZNSt3__1eqI11SkImageInfoLm4EEEbRKNS_5arrayIT_XT0_EEES6_ = comdat any

$_ZNK16SkYUVAPixmapInfo18SupportedDataTypes9supportedEN10SkYUVAInfo11PlaneConfigENS_8DataTypeE = comdat any

$_ZNSt3__15arrayI11SkImageInfoLm4EEaSERKS2_ = comdat any

@switch.table._ZN16SkYUVAPixmapInfo18SupportedDataTypesC2ERK14GrImageContext = private unnamed_addr constant [4 x i32] [i32 11, i32 15, i32 4, i32 4], align 4
@switch.table._ZN16SkYUVAPixmapInfo18SupportedDataTypesC2ERK14GrImageContext.1 = private unnamed_addr constant [4 x i32] [i32 18, i32 19, i32 20, i32 20], align 4
@switch.table._ZN16SkYUVAPixmapInfo18SupportedDataTypesC2ERK14GrImageContext.2 = private unnamed_addr constant [4 x i32] [i32 16, i32 17, i32 13, i32 13], align 4
@switch.table._ZN16SkYUVAPixmapInfo22NumChannelsAndDataTypeE11SkColorType = private unnamed_addr constant [20 x i64] [i64 1, i64 0, i64 0, i64 4, i64 3, i64 0, i64 4, i64 0, i64 3, i64 0, i64 1, i64 4, i64 4, i64 0, i64 2, i64 1, i64 2, i64 1, i64 2, i64 4], align 8
@switch.table._ZN16SkYUVAPixmapInfo22NumChannelsAndDataTypeE11SkColorType.3 = private unnamed_addr constant [20 x i64] [i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 12884901888, i64 0, i64 12884901888, i64 0, i64 0, i64 8589934592, i64 8589934592, i64 0, i64 0, i64 8589934592, i64 8589934592, i64 4294967296, i64 4294967296, i64 4294967296], align 8
@switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoPK11SkColorTypePKm = private unnamed_addr constant [3 x i32] [i32 1, i32 2, i32 1], align 4
@switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoPK11SkColorTypePKm.4 = private unnamed_addr constant [20 x i32] [i32 1, i32 0, i32 0, i32 4, i32 3, i32 0, i32 4, i32 0, i32 3, i32 0, i32 1, i32 4, i32 4, i32 0, i32 2, i32 1, i32 2, i32 1, i32 2, i32 4], align 4
@switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoPK11SkColorTypePKm.5 = private unnamed_addr constant [20 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 3, i32 0, i32 0, i32 2, i32 2, i32 0, i32 0, i32 2, i32 2, i32 1, i32 1, i32 1], align 4
@switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoNS_8DataTypeEPKm = private unnamed_addr constant [4 x i32] [i32 11, i32 18, i32 16, i32 0], align 4
@switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoNS_8DataTypeEPKm.6 = private unnamed_addr constant [4 x i32] [i32 15, i32 19, i32 17, i32 0], align 4
@switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoNS_8DataTypeEPKm.8 = private unnamed_addr constant [4 x i32] [i32 4, i32 20, i32 13, i32 7], align 4
@switch.table._ZN13SkYUVAPixmaps24RecommendedRGBAColorTypeEN16SkYUVAPixmapInfo8DataTypeE = private unnamed_addr constant [4 x i32] [i32 4, i32 13, i32 13, i32 7], align 4
@switch.table._ZNK13SkYUVAPixmaps15toYUVALocationsEv.11 = private unnamed_addr constant [21 x i32] [i32 0, i32 8, i32 7, i32 15, i32 15, i32 7, i32 15, i32 15, i32 15, i32 7, i32 7, i32 16, i32 15, i32 15, i32 15, i32 3, i32 8, i32 3, i32 8, i32 3, i32 15], align 4

@_ZN16SkYUVAPixmapInfo18SupportedDataTypesC1ERK14GrImageContext = hidden unnamed_addr alias void (%"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.GrImageContext*), void (%"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.GrImageContext*)* @_ZN16SkYUVAPixmapInfo18SupportedDataTypesC2ERK14GrImageContext
@_ZN16SkYUVAPixmapInfoC1ERK10SkYUVAInfoPK11SkColorTypePKm = hidden unnamed_addr alias void (%class.SkYUVAPixmapInfo*, %class.SkYUVAInfo*, i32*, i64*), void (%class.SkYUVAPixmapInfo*, %class.SkYUVAInfo*, i32*, i64*)* @_ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoPK11SkColorTypePKm
@_ZN16SkYUVAPixmapInfoC1ERK10SkYUVAInfoNS_8DataTypeEPKm = hidden unnamed_addr alias void (%class.SkYUVAPixmapInfo*, %class.SkYUVAInfo*, i32, i64*), void (%class.SkYUVAPixmapInfo*, %class.SkYUVAInfo*, i32, i64*)* @_ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoNS_8DataTypeEPKm
@_ZN13SkYUVAPixmapsC1ERK16SkYUVAPixmapInfo5sk_spI6SkDataE = hidden unnamed_addr alias void (%class.SkYUVAPixmaps*, %class.SkYUVAPixmapInfo*, %class.sk_sp.11*), void (%class.SkYUVAPixmaps*, %class.SkYUVAPixmapInfo*, %class.sk_sp.11*)* @_ZN13SkYUVAPixmapsC2ERK16SkYUVAPixmapInfo5sk_spI6SkDataE
@_ZN13SkYUVAPixmapsC1ERK10SkYUVAInfoN16SkYUVAPixmapInfo8DataTypeEPK8SkPixmap = hidden unnamed_addr alias void (%class.SkYUVAPixmaps*, %class.SkYUVAInfo*, i32, %class.SkPixmap*), void (%class.SkYUVAPixmaps*, %class.SkYUVAInfo*, i32, %class.SkPixmap*)* @_ZN13SkYUVAPixmapsC2ERK10SkYUVAInfoN16SkYUVAPixmapInfo8DataTypeEPK8SkPixmap

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkYUVAPixmapInfo18SupportedDataTypesC2ERK14GrImageContext(%"class.SkYUVAPixmapInfo::SupportedDataTypes"* nocapture, %class.GrImageContext* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %class.GrBackendFormat, align 8
  %4 = alloca %class.GrBackendFormat, align 8
  %5 = alloca %class.GrBackendFormat, align 8
  %6 = alloca %class.GrBackendFormat, align 8
  %7 = getelementptr inbounds %"class.SkYUVAPixmapInfo::SupportedDataTypes", %"class.SkYUVAPixmapInfo::SupportedDataTypes"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = bitcast %class.GrBackendFormat* %3 to i8*
  %9 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %1, i64 0, i32 0
  %10 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %3, i64 0, i32 1
  %11 = bitcast %class.GrBackendFormat* %4 to i8*
  %12 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %4, i64 0, i32 1
  %13 = bitcast %class.GrBackendFormat* %5 to i8*
  %14 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %5, i64 0, i32 1
  %15 = bitcast %class.GrBackendFormat* %6 to i8*
  %16 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %6, i64 0, i32 1
  br label %18

17:                                               ; preds = %84
  ret void

18:                                               ; preds = %84, %2
  %19 = phi i64 [ 1, %2 ], [ %85, %84 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #8
  %20 = trunc i64 %19 to i32
  %21 = add i32 %20, -1
  %22 = icmp ult i32 %21, 4
  br i1 %22, label %23, label %27

23:                                               ; preds = %18
  %24 = sext i32 %21 to i64
  %25 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfo18SupportedDataTypesC2ERK14GrImageContext, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  br label %27

27:                                               ; preds = %18, %23
  %28 = phi i32 [ %26, %23 ], [ 0, %18 ]
  call void @_ZNK14GrContext_Base20defaultBackendFormatE11SkColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %3, %class.GrContext_Base* %9, i32 %28, i1 zeroext false) #8
  %29 = load i8, i8* %10, align 4, !range !2
  %30 = icmp eq i8 %29, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #8
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = shl i64 %19, 2
  %33 = add nsw i64 %32, -4
  %34 = shl i64 1, %33
  %35 = load i64, i64* %7, align 8
  %36 = or i64 %35, %34
  store i64 %36, i64* %7, align 8
  br label %37

37:                                               ; preds = %27, %31
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #8
  %38 = add i32 %20, -1
  %39 = icmp ult i32 %38, 4
  br i1 %39, label %40, label %44

40:                                               ; preds = %37
  %41 = sext i32 %38 to i64
  %42 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfo18SupportedDataTypesC2ERK14GrImageContext.1, i64 0, i64 %41
  %43 = load i32, i32* %42, align 4
  br label %44

44:                                               ; preds = %37, %40
  %45 = phi i32 [ %43, %40 ], [ 0, %37 ]
  call void @_ZNK14GrContext_Base20defaultBackendFormatE11SkColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %4, %class.GrContext_Base* %9, i32 %45, i1 zeroext false) #8
  %46 = load i8, i8* %12, align 4, !range !2
  %47 = icmp eq i8 %46, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #8
  br i1 %47, label %54, label %48

48:                                               ; preds = %44
  %49 = shl i64 %19, 2
  %50 = add nsw i64 %49, -3
  %51 = shl i64 1, %50
  %52 = load i64, i64* %7, align 8
  %53 = or i64 %52, %51
  store i64 %53, i64* %7, align 8
  br label %54

54:                                               ; preds = %44, %48
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #8
  %55 = add i32 %20, -1
  %56 = icmp ult i32 %55, 4
  br i1 %56, label %57, label %61

57:                                               ; preds = %54
  %58 = sext i32 %55 to i64
  %59 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfo18SupportedDataTypesC2ERK14GrImageContext.2, i64 0, i64 %58
  %60 = load i32, i32* %59, align 4
  br label %61

61:                                               ; preds = %54, %57
  %62 = phi i32 [ %60, %57 ], [ 0, %54 ]
  call void @_ZNK14GrContext_Base20defaultBackendFormatE11SkColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %5, %class.GrContext_Base* %9, i32 %62, i1 zeroext false) #8
  %63 = load i8, i8* %14, align 4, !range !2
  %64 = icmp eq i8 %63, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #8
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = shl i64 %19, 2
  %67 = add nsw i64 %66, -2
  %68 = shl i64 1, %67
  %69 = load i64, i64* %7, align 8
  %70 = or i64 %69, %68
  store i64 %70, i64* %7, align 8
  br label %71

71:                                               ; preds = %61, %65
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %15) #8
  switch i32 %20, label %74 [
    i32 4, label %73
    i32 3, label %72
  ]

72:                                               ; preds = %71
  br label %74

73:                                               ; preds = %71
  br label %74

74:                                               ; preds = %71, %72, %73
  %75 = phi i32 [ 7, %73 ], [ 7, %72 ], [ 0, %71 ]
  call void @_ZNK14GrContext_Base20defaultBackendFormatE11SkColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %6, %class.GrContext_Base* %9, i32 %75, i1 zeroext false) #8
  %76 = load i8, i8* %16, align 4, !range !2
  %77 = icmp eq i8 %76, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %15) #8
  br i1 %77, label %84, label %78

78:                                               ; preds = %74
  %79 = shl i64 %19, 2
  %80 = add nsw i64 %79, -1
  %81 = shl i64 1, %80
  %82 = load i64, i64* %7, align 8
  %83 = or i64 %82, %81
  store i64 %83, i64* %7, align 8
  br label %84

84:                                               ; preds = %74, %78
  %85 = add nuw nsw i64 %19, 1
  %86 = icmp eq i64 %85, 5
  br i1 %86, label %17, label %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK14GrContext_Base20defaultBackendFormatE11SkColorType12GrRenderable(%class.GrBackendFormat* sret, %class.GrContext_Base*, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkYUVAPixmapInfo18SupportedDataTypes14enableDataTypeENS_8DataTypeEi(%"class.SkYUVAPixmapInfo::SupportedDataTypes"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = add i32 %2, -1
  %5 = icmp ugt i32 %4, 3
  br i1 %5, label %16, label %6

6:                                                ; preds = %3
  %7 = sext i32 %1 to i64
  %8 = shl i32 %2, 2
  %9 = add nsw i32 %8, -4
  %10 = sext i32 %9 to i64
  %11 = add nsw i64 %10, %7
  %12 = getelementptr inbounds %"class.SkYUVAPixmapInfo::SupportedDataTypes", %"class.SkYUVAPixmapInfo::SupportedDataTypes"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = shl i64 1, %11
  %14 = load i64, i64* %12, align 8
  %15 = or i64 %14, %13
  store i64 %15, i64* %12, align 8
  br label %16

16:                                               ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i64 @_ZN16SkYUVAPixmapInfo22NumChannelsAndDataTypeE11SkColorType(i32) local_unnamed_addr #3 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 20
  br i1 %3, label %4, label %11

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [20 x i64], [20 x i64]* @switch.table._ZN16SkYUVAPixmapInfo22NumChannelsAndDataTypeE11SkColorType, i64 0, i64 %5
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds [20 x i64], [20 x i64]* @switch.table._ZN16SkYUVAPixmapInfo22NumChannelsAndDataTypeE11SkColorType.3, i64 0, i64 %8
  %10 = load i64, i64* %9, align 8
  br label %11

11:                                               ; preds = %1, %4
  %12 = phi i64 [ %7, %4 ], [ 0, %1 ]
  %13 = phi i64 [ %10, %4 ], [ 0, %1 ]
  %14 = or i64 %13, %12
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoPK11SkColorTypePKm(%class.SkYUVAPixmapInfo*, %class.SkYUVAInfo* nocapture readonly dereferenceable(32), i32* nocapture readonly, i64* readonly) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkYUVAPixmapInfo, align 8
  %6 = alloca [4 x %struct.SkISize], align 16
  %7 = alloca [4 x i64], align 16
  %8 = alloca %class.SkYUVAPixmapInfo, align 8
  %9 = bitcast %class.SkYUVAPixmapInfo* %0 to i8*
  %10 = bitcast %class.SkYUVAInfo* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %10, i64 32, i1 false)
  %11 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1
  %12 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 1
  %13 = bitcast %"struct.std::__1::array"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false)
  %14 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 2
  %15 = bitcast %struct.SkImageInfo* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false)
  %16 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 3
  %17 = bitcast %struct.SkImageInfo* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false)
  %18 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 2
  %19 = bitcast %"struct.std::__1::array.9"* %18 to i8*
  %20 = bitcast %struct.SkImageInfo* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false)
  %21 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 3
  %22 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 1
  %23 = bitcast %"struct.std::__1::array.9"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 36, i1 false)
  %24 = load i32, i32* %22, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %77

26:                                               ; preds = %4
  %27 = bitcast %class.SkYUVAPixmapInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %27) #8
  %28 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 0, i32 3
  %29 = bitcast %class.SkYUVAPixmapInfo* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 168, i1 false)
  store i32 10, i32* %28, align 8
  %30 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 0, i32 4
  store i32 1, i32* %30, align 4
  %31 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 0, i32 5
  %32 = bitcast i32* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 140, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* nonnull align 8 %27, i64 32, i1 false) #8
  %33 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 1
  %34 = call dereferenceable(96) %"struct.std::__1::array"* @_ZNSt3__15arrayI11SkImageInfoLm4EEaSERKS2_(%"struct.std::__1::array"* %11, %"struct.std::__1::array"* dereferenceable(96) %33) #8
  %35 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 2
  %36 = bitcast %"struct.std::__1::array.9"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %36, i64 36, i1 false) #8
  %37 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0, i32 0
  %38 = load %class.SkColorSpace*, %class.SkColorSpace** %37, align 8
  %39 = icmp eq %class.SkColorSpace* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %26
  %41 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = bitcast %class.SkColorSpace* %38 to i8*
  call void @_ZdlPv(i8* %45) #9
  br label %46

46:                                               ; preds = %44, %40, %26
  %47 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0, i32 0
  %48 = load %class.SkColorSpace*, %class.SkColorSpace** %47, align 8
  %49 = icmp eq %class.SkColorSpace* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 -1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = bitcast %class.SkColorSpace* %48 to i8*
  call void @_ZdlPv(i8* %55) #9
  br label %56

56:                                               ; preds = %54, %50, %46
  %57 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0, i32 0
  %58 = load %class.SkColorSpace*, %class.SkColorSpace** %57, align 8
  %59 = icmp eq %class.SkColorSpace* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = bitcast %class.SkColorSpace* %58 to i8*
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %64, %60, %56
  %67 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %5, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0, i32 0
  %68 = load %class.SkColorSpace*, %class.SkColorSpace** %67, align 8
  %69 = icmp eq %class.SkColorSpace* %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = bitcast %class.SkColorSpace* %68 to i8*
  call void @_ZdlPv(i8* %75) #9
  br label %76

76:                                               ; preds = %66, %70, %74
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %27) #8
  br label %263

77:                                               ; preds = %4
  %78 = bitcast [4 x %struct.SkISize]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %78) #8
  %79 = getelementptr inbounds [4 x %struct.SkISize], [4 x %struct.SkISize]* %6, i64 0, i64 0
  %80 = bitcast %class.SkYUVAInfo* %1 to i64*
  %81 = bitcast [4 x %struct.SkISize]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %81, i8 -86, i64 32, i1 false)
  %82 = load i64, i64* %80, align 4
  %83 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 4
  %86 = load i32, i32* %85, align 4
  %87 = call i32 @_ZN10SkYUVAInfo15PlaneDimensionsE7SkISizeNS_11PlaneConfigENS_11SubsamplingE15SkEncodedOriginPS0_(i64 %82, i32 %24, i32 %84, i32 %86, %struct.SkISize* nonnull %79) #8
  %88 = bitcast [4 x i64]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %88) #8
  %89 = getelementptr inbounds [4 x i64], [4 x i64]* %7, i64 0, i64 0
  %90 = icmp eq i64* %3, null
  %91 = bitcast [4 x i64]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %91, i8 -86, i64 32, i1 false)
  br i1 %90, label %92, label %108

92:                                               ; preds = %77
  %93 = icmp sgt i32 %87, 0
  br i1 %93, label %94, label %108

94:                                               ; preds = %92
  %95 = zext i32 %87 to i64
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %106, %96 ]
  %98 = getelementptr inbounds i32, i32* %2, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = call i32 @_Z24SkColorTypeBytesPerPixel11SkColorType(i32 %99) #8
  %101 = getelementptr inbounds [4 x %struct.SkISize], [4 x %struct.SkISize]* %6, i64 0, i64 %97, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = mul nsw i32 %102, %100
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [4 x i64], [4 x i64]* %7, i64 0, i64 %97
  store i64 %104, i64* %105, align 8
  %106 = add nuw nsw i64 %97, 1
  %107 = icmp eq i64 %106, %95
  br i1 %107, label %108, label %96

108:                                              ; preds = %96, %92, %77
  %109 = phi i64* [ %3, %77 ], [ %89, %92 ], [ %89, %96 ]
  %110 = sext i32 %87 to i64
  %111 = icmp eq i32 %87, 0
  br i1 %111, label %262, label %113

112:                                              ; preds = %206
  br i1 %208, label %262, label %211

113:                                              ; preds = %108, %206
  %114 = phi i64 [ %209, %206 ], [ 0, %108 ]
  %115 = phi i1 [ %208, %206 ], [ true, %108 ]
  %116 = getelementptr inbounds i64, i64* %109, i64 %114
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 2, i32 0, i64 %114
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds [4 x %struct.SkISize], [4 x %struct.SkISize]* %6, i64 0, i64 %114
  %120 = bitcast %struct.SkISize* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds i32, i32* %2, i64 %114
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i64
  %125 = or i64 %124, 12884901888
  %126 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 %114
  %127 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %126, i64 0, i32 0, i32 0, i32 0
  %128 = load %class.SkColorSpace*, %class.SkColorSpace** %127, align 8
  %129 = bitcast %struct.SkImageInfo* %126 to i64*
  store i64 0, i64* %129, align 8
  %130 = icmp eq %class.SkColorSpace* %128, null
  br i1 %130, label %137, label %131

131:                                              ; preds = %113
  %132 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 -1 acq_rel
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  %136 = bitcast %class.SkColorSpace* %128 to i8*
  call void @_ZdlPv(i8* %136) #9
  br label %137

137:                                              ; preds = %113, %131, %135
  %138 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 %114, i32 0, i32 1
  %139 = bitcast i32* %138 to i64*
  store i64 %125, i64* %139, align 8
  %140 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 %114, i32 1
  %141 = bitcast %struct.SkISize* %140 to i64*
  store i64 %121, i64* %141, align 8
  %142 = trunc i64 %114 to i32
  %143 = load i32, i32* %22, align 4
  switch i32 %143, label %168 [
    i32 12, label %160
    i32 1, label %144
    i32 2, label %144
    i32 3, label %147
    i32 4, label %147
    i32 5, label %152
    i32 6, label %152
    i32 7, label %155
    i32 8, label %155
    i32 9, label %158
    i32 10, label %158
    i32 11, label %160
  ]

144:                                              ; preds = %137, %137
  %145 = icmp ult i32 %142, 3
  %146 = zext i1 %145 to i32
  br label %168

147:                                              ; preds = %137, %137
  %148 = icmp eq i32 %142, 1
  %149 = select i1 %148, i32 2, i32 0
  %150 = icmp eq i32 %142, 0
  %151 = select i1 %150, i32 1, i32 %149
  br label %168

152:                                              ; preds = %137, %137
  %153 = icmp eq i32 %142, 0
  %154 = select i1 %153, i32 3, i32 0
  br label %168

155:                                              ; preds = %137, %137
  %156 = icmp ult i32 %142, 4
  %157 = zext i1 %156 to i32
  br label %168

158:                                              ; preds = %137, %137
  %159 = icmp ult i32 %142, 3
  br i1 %159, label %163, label %168

160:                                              ; preds = %137, %137
  %161 = icmp eq i32 %142, 0
  %162 = select i1 %161, i32 4, i32 0
  br label %168

163:                                              ; preds = %158
  %164 = shl i64 %114, 32
  %165 = ashr exact i64 %164, 32
  %166 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoPK11SkColorTypePKm, i64 0, i64 %165
  %167 = load i32, i32* %166, align 4
  br label %168

168:                                              ; preds = %158, %163, %137, %144, %147, %152, %155, %160
  %169 = phi i32 [ %162, %160 ], [ %157, %155 ], [ %154, %152 ], [ %146, %144 ], [ %151, %147 ], [ 0, %137 ], [ %167, %163 ], [ 0, %158 ]
  %170 = load i32, i32* %122, align 4
  %171 = add i32 %170, -1
  %172 = icmp ult i32 %171, 20
  br i1 %172, label %173, label %180

173:                                              ; preds = %168
  %174 = sext i32 %171 to i64
  %175 = getelementptr inbounds [20 x i32], [20 x i32]* @switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoPK11SkColorTypePKm.4, i64 0, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %171 to i64
  %178 = getelementptr inbounds [20 x i32], [20 x i32]* @switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoPK11SkColorTypePKm.5, i64 0, i64 %177
  %179 = load i32, i32* %178, align 4
  br label %180

180:                                              ; preds = %168, %173
  %181 = phi i32 [ %176, %173 ], [ 0, %168 ]
  %182 = phi i32 [ %179, %173 ], [ 0, %168 ]
  %183 = icmp eq i64 %114, 0
  br i1 %183, label %187, label %184

184:                                              ; preds = %180
  %185 = load i32, i32* %21, align 8
  %186 = icmp eq i32 %185, %182
  br label %187

187:                                              ; preds = %184, %180
  %188 = phi i1 [ true, %180 ], [ %186, %184 ]
  %189 = and i1 %115, %188
  %190 = icmp sle i32 %169, %181
  %191 = and i1 %190, %189
  %192 = load i64, i64* %118, align 8
  %193 = shl i64 %121, 32
  %194 = ashr exact i64 %193, 32
  %195 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %126, i64 0, i32 0
  %196 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %195) #8
  %197 = sext i32 %196 to i64
  %198 = mul nsw i64 %194, %197
  %199 = icmp ugt i64 %198, %192
  br i1 %199, label %206, label %200

200:                                              ; preds = %187
  %201 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %195) #8
  %202 = zext i32 %201 to i64
  %203 = shl i64 -1, %202
  %204 = and i64 %203, %192
  %205 = icmp eq i64 %204, %192
  br label %206

206:                                              ; preds = %187, %200
  %207 = phi i1 [ %205, %200 ], [ false, %187 ]
  %208 = and i1 %191, %207
  store i32 %182, i32* %21, align 8
  %209 = add nuw i64 %114, 1
  %210 = icmp ult i64 %209, %110
  br i1 %210, label %113, label %112

211:                                              ; preds = %112
  %212 = bitcast %class.SkYUVAPixmapInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %212) #8
  %213 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %8, i64 0, i32 0, i32 3
  %214 = bitcast %class.SkYUVAPixmapInfo* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %214, i8 0, i64 168, i1 false)
  store i32 10, i32* %213, align 8
  %215 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %8, i64 0, i32 0, i32 4
  store i32 1, i32* %215, align 4
  %216 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %8, i64 0, i32 0, i32 5
  %217 = bitcast i32* %216 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 140, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* nonnull align 8 %212, i64 32, i1 false) #8
  %218 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %8, i64 0, i32 1
  %219 = call dereferenceable(96) %"struct.std::__1::array"* @_ZNSt3__15arrayI11SkImageInfoLm4EEaSERKS2_(%"struct.std::__1::array"* %11, %"struct.std::__1::array"* dereferenceable(96) %218) #8
  %220 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %8, i64 0, i32 2
  %221 = bitcast %"struct.std::__1::array.9"* %220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %221, i64 36, i1 false) #8
  %222 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %8, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0, i32 0
  %223 = load %class.SkColorSpace*, %class.SkColorSpace** %222, align 8
  %224 = icmp eq %class.SkColorSpace* %223, null
  br i1 %224, label %231, label %225

225:                                              ; preds = %211
  %226 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %223, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = atomicrmw add i32* %226, i32 -1 acq_rel
  %228 = icmp eq i32 %227, 1
  br i1 %228, label %229, label %231

229:                                              ; preds = %225
  %230 = bitcast %class.SkColorSpace* %223 to i8*
  call void @_ZdlPv(i8* %230) #9
  br label %231

231:                                              ; preds = %229, %225, %211
  %232 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %8, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0, i32 0
  %233 = load %class.SkColorSpace*, %class.SkColorSpace** %232, align 8
  %234 = icmp eq %class.SkColorSpace* %233, null
  br i1 %234, label %241, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = atomicrmw add i32* %236, i32 -1 acq_rel
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %239, label %241

239:                                              ; preds = %235
  %240 = bitcast %class.SkColorSpace* %233 to i8*
  call void @_ZdlPv(i8* %240) #9
  br label %241

241:                                              ; preds = %239, %235, %231
  %242 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %8, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0, i32 0
  %243 = load %class.SkColorSpace*, %class.SkColorSpace** %242, align 8
  %244 = icmp eq %class.SkColorSpace* %243, null
  br i1 %244, label %251, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %243, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = atomicrmw add i32* %246, i32 -1 acq_rel
  %248 = icmp eq i32 %247, 1
  br i1 %248, label %249, label %251

249:                                              ; preds = %245
  %250 = bitcast %class.SkColorSpace* %243 to i8*
  call void @_ZdlPv(i8* %250) #9
  br label %251

251:                                              ; preds = %249, %245, %241
  %252 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %8, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0, i32 0
  %253 = load %class.SkColorSpace*, %class.SkColorSpace** %252, align 8
  %254 = icmp eq %class.SkColorSpace* %253, null
  br i1 %254, label %261, label %255

255:                                              ; preds = %251
  %256 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %253, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = atomicrmw add i32* %256, i32 -1 acq_rel
  %258 = icmp eq i32 %257, 1
  br i1 %258, label %259, label %261

259:                                              ; preds = %255
  %260 = bitcast %class.SkColorSpace* %253 to i8*
  call void @_ZdlPv(i8* %260) #9
  br label %261

261:                                              ; preds = %251, %255, %259
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %212) #8
  br label %262

262:                                              ; preds = %108, %112, %261
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %88) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %78) #8
  br label %263

263:                                              ; preds = %262, %76
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_Z24SkColorTypeBytesPerPixel11SkColorType(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoNS_8DataTypeEPKm(%class.SkYUVAPixmapInfo*, %class.SkYUVAInfo* nocapture readonly dereferenceable(32), i32, i64* readonly) unnamed_addr #0 align 2 {
  %5 = alloca [4 x i32], align 16
  %6 = alloca %class.SkYUVAPixmapInfo, align 8
  %7 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 0, i32 3
  %8 = bitcast %class.SkYUVAPixmapInfo* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 16, i1 false) #8
  store i32 10, i32* %7, align 4
  %9 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 0, i32 4
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 0, i32 5
  %11 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 1
  %12 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 32, i1 false)
  %13 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 2
  %14 = bitcast %struct.SkImageInfo* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false)
  %15 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 3
  %16 = bitcast %struct.SkImageInfo* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false)
  %17 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 2, i32 0
  %18 = bitcast %struct.SkImageInfo* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false)
  %19 = bitcast [4 x i32]* %5 to i8*
  %20 = bitcast [4 x i64]* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 36, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 0, i64 16, i1 false)
  %21 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  switch i32 %22, label %31 [
    i32 0, label %32
    i32 1, label %82
    i32 2, label %82
    i32 3, label %23
    i32 4, label %24
    i32 5, label %25
    i32 6, label %26
    i32 7, label %27
    i32 8, label %28
    i32 9, label %82
    i32 10, label %82
    i32 11, label %29
    i32 12, label %30
  ]

23:                                               ; preds = %4
  br label %82

24:                                               ; preds = %4
  br label %82

25:                                               ; preds = %4
  br label %82

26:                                               ; preds = %4
  br label %82

27:                                               ; preds = %4
  br label %82

28:                                               ; preds = %4
  br label %82

29:                                               ; preds = %4
  br label %82

30:                                               ; preds = %4
  br label %82

31:                                               ; preds = %4
  tail call void @llvm.trap() #8
  unreachable

32:                                               ; preds = %102, %128, %145, %158, %4
  %33 = bitcast %class.SkYUVAPixmapInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %33) #8
  %34 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 0
  call void @_ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoPK11SkColorTypePKm(%class.SkYUVAPixmapInfo* nonnull %6, %class.SkYUVAInfo* dereferenceable(32) %1, i32* nonnull %34, i64* %3)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* nonnull align 8 %33, i64 32, i1 false) #8
  %35 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %6, i64 0, i32 1
  %37 = call dereferenceable(96) %"struct.std::__1::array"* @_ZNSt3__15arrayI11SkImageInfoLm4EEaSERKS2_(%"struct.std::__1::array"* %35, %"struct.std::__1::array"* dereferenceable(96) %36) #8
  %38 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 2
  %39 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %6, i64 0, i32 2
  %40 = bitcast %"struct.std::__1::array.9"* %38 to i8*
  %41 = bitcast %"struct.std::__1::array.9"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 36, i1 false) #8
  %42 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %6, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0, i32 0
  %43 = load %class.SkColorSpace*, %class.SkColorSpace** %42, align 8
  %44 = icmp eq %class.SkColorSpace* %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %32
  %46 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = bitcast %class.SkColorSpace* %43 to i8*
  call void @_ZdlPv(i8* %50) #9
  br label %51

51:                                               ; preds = %49, %45, %32
  %52 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %6, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0, i32 0
  %53 = load %class.SkColorSpace*, %class.SkColorSpace** %52, align 8
  %54 = icmp eq %class.SkColorSpace* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = bitcast %class.SkColorSpace* %53 to i8*
  call void @_ZdlPv(i8* %60) #9
  br label %61

61:                                               ; preds = %59, %55, %51
  %62 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %6, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0, i32 0
  %63 = load %class.SkColorSpace*, %class.SkColorSpace** %62, align 8
  %64 = icmp eq %class.SkColorSpace* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = bitcast %class.SkColorSpace* %63 to i8*
  call void @_ZdlPv(i8* %70) #9
  br label %71

71:                                               ; preds = %69, %65, %61
  %72 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %6, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0, i32 0
  %73 = load %class.SkColorSpace*, %class.SkColorSpace** %72, align 8
  %74 = icmp eq %class.SkColorSpace* %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = bitcast %class.SkColorSpace* %73 to i8*
  call void @_ZdlPv(i8* %80) #9
  br label %81

81:                                               ; preds = %71, %75, %79
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %33) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8
  ret void

82:                                               ; preds = %23, %24, %25, %26, %27, %28, %29, %30, %4, %4, %4, %4
  %83 = phi i64 [ 2, %23 ], [ 2, %24 ], [ 1, %25 ], [ 1, %26 ], [ 4, %27 ], [ 4, %28 ], [ 1, %29 ], [ 1, %30 ], [ 3, %4 ], [ 3, %4 ], [ 3, %4 ], [ 3, %4 ]
  switch i32 %22, label %102 [
    i32 12, label %86
    i32 1, label %88
    i32 2, label %88
    i32 3, label %88
    i32 4, label %88
    i32 5, label %84
    i32 6, label %84
    i32 7, label %88
    i32 8, label %88
    i32 9, label %88
    i32 10, label %88
    i32 11, label %86
  ]

84:                                               ; preds = %82, %82
  %85 = icmp ult i32 %2, 4
  br i1 %85, label %94, label %102

86:                                               ; preds = %82, %82
  %87 = icmp ult i32 %2, 4
  br i1 %87, label %98, label %102

88:                                               ; preds = %82, %82, %82, %82, %82, %82, %82, %82
  %89 = icmp ult i32 %2, 4
  br i1 %89, label %90, label %102

90:                                               ; preds = %88
  %91 = sext i32 %2 to i64
  %92 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoNS_8DataTypeEPKm, i64 0, i64 %91
  %93 = load i32, i32* %92, align 4
  br label %102

94:                                               ; preds = %84
  %95 = sext i32 %2 to i64
  %96 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoNS_8DataTypeEPKm.8, i64 0, i64 %95
  %97 = load i32, i32* %96, align 4
  br label %102

98:                                               ; preds = %86
  %99 = sext i32 %2 to i64
  %100 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoNS_8DataTypeEPKm.8, i64 0, i64 %99
  %101 = load i32, i32* %100, align 4
  br label %102

102:                                              ; preds = %86, %84, %82, %88, %98, %94, %90
  %103 = phi i32 [ %93, %90 ], [ %97, %94 ], [ %101, %98 ], [ 0, %88 ], [ 0, %82 ], [ 0, %84 ], [ 0, %86 ]
  %104 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 0
  store i32 %103, i32* %104, align 16
  %105 = icmp eq i64 %83, 1
  br i1 %105, label %32, label %106

106:                                              ; preds = %102
  switch i32 %22, label %128 [
    i32 10, label %116
    i32 1, label %107
    i32 2, label %107
    i32 3, label %108
    i32 4, label %108
    i32 9, label %116
    i32 8, label %122
    i32 7, label %122
  ]

107:                                              ; preds = %106, %106
  br label %108

108:                                              ; preds = %106, %106, %107
  %109 = phi i32 [ 1, %107 ], [ 2, %106 ], [ 2, %106 ]
  switch i32 %109, label %128 [
    i32 1, label %122
    i32 2, label %116
    i32 3, label %110
  ]

110:                                              ; preds = %108
  %111 = icmp ult i32 %2, 4
  br i1 %111, label %112, label %128

112:                                              ; preds = %110
  %113 = sext i32 %2 to i64
  %114 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoNS_8DataTypeEPKm.8, i64 0, i64 %113
  %115 = load i32, i32* %114, align 4
  br label %128

116:                                              ; preds = %106, %106, %108
  %117 = icmp ult i32 %2, 4
  br i1 %117, label %118, label %128

118:                                              ; preds = %116
  %119 = sext i32 %2 to i64
  %120 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoNS_8DataTypeEPKm.6, i64 0, i64 %119
  %121 = load i32, i32* %120, align 4
  br label %128

122:                                              ; preds = %106, %108, %106
  %123 = icmp ult i32 %2, 4
  br i1 %123, label %124, label %128

124:                                              ; preds = %122
  %125 = sext i32 %2 to i64
  %126 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoNS_8DataTypeEPKm, i64 0, i64 %125
  %127 = load i32, i32* %126, align 4
  br label %128

128:                                              ; preds = %124, %122, %118, %116, %112, %110, %108, %106
  %129 = phi i32 [ %127, %124 ], [ %121, %118 ], [ %115, %112 ], [ 0, %110 ], [ 0, %116 ], [ 0, %122 ], [ 0, %108 ], [ 0, %106 ]
  %130 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 1
  store i32 %129, i32* %130, align 4
  %131 = icmp eq i64 %83, 2
  br i1 %131, label %32, label %132

132:                                              ; preds = %128
  switch i32 %22, label %145 [
    i32 10, label %139
    i32 1, label %133
    i32 2, label %133
    i32 3, label %134
    i32 4, label %134
    i32 9, label %139
    i32 8, label %139
    i32 7, label %139
  ]

133:                                              ; preds = %132, %132
  br label %134

134:                                              ; preds = %132, %132, %133
  %135 = phi i32 [ 1, %133 ], [ 0, %132 ], [ 0, %132 ]
  %136 = icmp eq i32 %135, 1
  %137 = icmp ult i32 %2, 4
  %138 = and i1 %136, %137
  br i1 %138, label %141, label %145

139:                                              ; preds = %132, %132, %132, %132
  %140 = icmp ult i32 %2, 4
  br i1 %140, label %141, label %145

141:                                              ; preds = %134, %139
  %142 = sext i32 %2 to i64
  %143 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoNS_8DataTypeEPKm, i64 0, i64 %142
  %144 = load i32, i32* %143, align 4
  br label %145

145:                                              ; preds = %134, %141, %139, %132
  %146 = phi i32 [ %144, %141 ], [ 0, %139 ], [ 0, %134 ], [ 0, %132 ]
  %147 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 2
  store i32 %146, i32* %147, align 8
  %148 = icmp eq i64 %83, 3
  br i1 %148, label %32, label %149

149:                                              ; preds = %145
  %150 = add i32 %22, -7
  %151 = icmp ult i32 %150, 2
  %152 = icmp ult i32 %2, 4
  %153 = and i1 %151, %152
  br i1 %153, label %154, label %158

154:                                              ; preds = %149
  %155 = sext i32 %2 to i64
  %156 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoNS_8DataTypeEPKm, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  br label %158

158:                                              ; preds = %149, %154
  %159 = phi i32 [ %157, %154 ], [ 0, %149 ]
  %160 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 3
  store i32 %159, i32* %160, align 4
  br label %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16SkYUVAPixmapInfoeqERKS_(%class.SkYUVAPixmapInfo*, %class.SkYUVAPixmapInfo* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK10SkYUVAInfoeqERKS_(%class.SkYUVAInfo* %3, %class.SkYUVAInfo* dereferenceable(32) %4) #8
  br i1 %5, label %6, label %34

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 1
  %9 = tail call zeroext i1 @_ZNSt3__1eqI11SkImageInfoLm4EEEbRKNS_5arrayIT_XT0_EEES6_(%"struct.std::__1::array"* dereferenceable(96) %7, %"struct.std::__1::array"* dereferenceable(96) %8)
  br i1 %9, label %10, label %34

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 2, i32 0, i64 0
  %12 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 2, i32 0, i64 0
  %13 = load i64, i64* %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = icmp eq i64 %13, %14
  br i1 %15, label %16, label %34

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 2, i32 0, i64 1
  %18 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 2, i32 0, i64 1
  %19 = load i64, i64* %17, align 8
  %20 = load i64, i64* %18, align 8
  %21 = icmp eq i64 %19, %20
  br i1 %21, label %22, label %34

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 2, i32 0, i64 2
  %24 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 2, i32 0, i64 2
  %25 = load i64, i64* %23, align 8
  %26 = load i64, i64* %24, align 8
  %27 = icmp eq i64 %25, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 2, i32 0, i64 3
  %30 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 2, i32 0, i64 3
  %31 = load i64, i64* %29, align 8
  %32 = load i64, i64* %30, align 8
  %33 = icmp eq i64 %31, %32
  br label %34

34:                                               ; preds = %28, %22, %16, %10, %6, %2
  %35 = phi i1 [ false, %6 ], [ false, %2 ], [ %33, %28 ], [ false, %22 ], [ false, %16 ], [ false, %10 ]
  ret i1 %35
}

declare zeroext i1 @_ZNK10SkYUVAInfoeqERKS_(%class.SkYUVAInfo*, %class.SkYUVAInfo* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__1eqI11SkImageInfoLm4EEEbRKNS_5arrayIT_XT0_EEES6_(%"struct.std::__1::array"* dereferenceable(96), %"struct.std::__1::array"* dereferenceable(96)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %38

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %38

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %38

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %38

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %28 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %30 = load %class.SkColorSpace*, %class.SkColorSpace** %29, align 8
  %31 = tail call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %28, %class.SkColorSpace* %30) #8
  br i1 %31, label %32, label %38

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 1, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %39, label %38

38:                                               ; preds = %111, %105, %99, %93, %87, %81, %75, %69, %63, %57, %51, %45, %39, %32, %2, %8, %14, %20, %26
  ret i1 false

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 1, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 1, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %45, label %38

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %51, label %38

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %57, label %38

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %59 = load %class.SkColorSpace*, %class.SkColorSpace** %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %61 = load %class.SkColorSpace*, %class.SkColorSpace** %60, align 8
  %62 = tail call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %59, %class.SkColorSpace* %61) #8
  br i1 %62, label %63, label %38

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 1, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %65, %67
  br i1 %68, label %69, label %38

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 1, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 1, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %75, label %38

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %81, label %38

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %83, %85
  br i1 %86, label %87, label %38

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 0, i32 0, i32 0
  %89 = load %class.SkColorSpace*, %class.SkColorSpace** %88, align 8
  %90 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 0, i32 0, i32 0
  %91 = load %class.SkColorSpace*, %class.SkColorSpace** %90, align 8
  %92 = tail call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %89, %class.SkColorSpace* %91) #8
  br i1 %92, label %93, label %38

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 1, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 1, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %95, %97
  br i1 %98, label %99, label %38

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 1, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 1, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %101, %103
  br i1 %104, label %105, label %38

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %107, %109
  br i1 %110, label %111, label %38

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %38

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 0, i32 0, i32 0
  %119 = load %class.SkColorSpace*, %class.SkColorSpace** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 0, i32 0, i32 0
  %121 = load %class.SkColorSpace*, %class.SkColorSpace** %120, align 8
  %122 = tail call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %119, %class.SkColorSpace* %121) #8
  ret i1 %122
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK16SkYUVAPixmapInfo17computeTotalBytesEPm(%class.SkYUVAPixmapInfo*, i64*) local_unnamed_addr #0 align 2 {
  %3 = bitcast i64* %1 to i8*
  %4 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = icmp eq i64* %1, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 32, i1 false)
  br label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 0
  %12 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 2, i32 0, i64 0
  %13 = tail call i64 @_ZNK10SkYUVAInfo17computeTotalBytesEPKmPm(%class.SkYUVAInfo* %11, i64* %12, i64* %1) #8
  br label %14

14:                                               ; preds = %9, %7, %10
  %15 = phi i64 [ %13, %10 ], [ 0, %7 ], [ 0, %9 ]
  ret i64 %15
}

declare i64 @_ZNK10SkYUVAInfo17computeTotalBytesEPKmPm(%class.SkYUVAInfo*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16SkYUVAPixmapInfo31initPixmapsFromSingleAllocationEPvP8SkPixmap(%class.SkYUVAPixmapInfo*, i8*, %class.SkPixmap*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %14 [
    i32 0, label %56
    i32 12, label %13
    i32 1, label %15
    i32 2, label %15
    i32 3, label %6
    i32 4, label %7
    i32 5, label %8
    i32 6, label %9
    i32 7, label %10
    i32 8, label %11
    i32 9, label %15
    i32 10, label %15
    i32 11, label %12
  ]

6:                                                ; preds = %3
  br label %15

7:                                                ; preds = %3
  br label %15

8:                                                ; preds = %3
  br label %15

9:                                                ; preds = %3
  br label %15

10:                                               ; preds = %3
  br label %15

11:                                               ; preds = %3
  br label %15

12:                                               ; preds = %3
  br label %15

13:                                               ; preds = %3
  br label %15

14:                                               ; preds = %3
  tail call void @llvm.trap() #8
  unreachable

15:                                               ; preds = %3, %3, %3, %3, %6, %7, %8, %9, %10, %11, %12, %13
  %16 = phi i32 [ 1, %13 ], [ 1, %12 ], [ 4, %11 ], [ 4, %10 ], [ 1, %9 ], [ 1, %8 ], [ 2, %7 ], [ 2, %6 ], [ 3, %3 ], [ 3, %3 ], [ 3, %3 ], [ 3, %3 ]
  %17 = zext i32 %16 to i64
  br label %20

18:                                               ; preds = %20
  %19 = icmp ult i32 %16, 4
  br i1 %19, label %36, label %56

20:                                               ; preds = %20, %15
  %21 = phi i64 [ 0, %15 ], [ %34, %20 ]
  %22 = phi i8* [ %1, %15 ], [ %33, %20 ]
  %23 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 %21
  %24 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 1, i32 0, i64 %21
  %25 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 2, i32 0, i64 %21
  %26 = load i64, i64* %25, align 8
  tail call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %23, %struct.SkImageInfo* dereferenceable(24) %24, i8* %22, i64 %26) #8
  %27 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 %21, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 %21, i32 2, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = mul i64 %28, %31
  %33 = getelementptr inbounds i8, i8* %22, i64 %32
  %34 = add nuw nsw i64 %21, 1
  %35 = icmp eq i64 %34, %17
  br i1 %35, label %18, label %20

36:                                               ; preds = %18, %51
  %37 = phi i64 [ %54, %51 ], [ %17, %18 ]
  %38 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 %37
  %39 = bitcast %class.SkPixmap* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false)
  %40 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 %37, i32 2
  %41 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %class.SkColorSpace*, %class.SkColorSpace** %41, align 8
  %43 = bitcast %struct.SkImageInfo* %40 to i64*
  store i64 0, i64* %43, align 8
  %44 = icmp eq %class.SkColorSpace* %42, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %36
  %46 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = bitcast %class.SkColorSpace* %42 to i8*
  tail call void @_ZdlPv(i8* %50) #9
  br label %51

51:                                               ; preds = %49, %45, %36
  %52 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 %37, i32 2, i32 0, i32 1
  %53 = bitcast i32* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false)
  %54 = add nuw nsw i64 %37, 1
  %55 = icmp eq i64 %54, 4
  br i1 %55, label %56, label %36

56:                                               ; preds = %51, %18, %3
  %57 = phi i1 [ false, %3 ], [ true, %18 ], [ true, %51 ]
  ret i1 %57
}

declare void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16SkYUVAPixmapInfo11isSupportedERKNS_18SupportedDataTypesE(%class.SkYUVAPixmapInfo* nocapture readonly, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = tail call zeroext i1 @_ZNK16SkYUVAPixmapInfo18SupportedDataTypes9supportedEN10SkYUVAInfo11PlaneConfigENS_8DataTypeE(%"class.SkYUVAPixmapInfo::SupportedDataTypes"* %1, i32 %4, i32 %8)
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ %9, %6 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkYUVAPixmapInfo18SupportedDataTypes9supportedEN10SkYUVAInfo11PlaneConfigENS_8DataTypeE(%"class.SkYUVAPixmapInfo::SupportedDataTypes"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  switch i32 %1, label %12 [
    i32 0, label %33
    i32 1, label %13
    i32 2, label %13
    i32 3, label %4
    i32 4, label %5
    i32 5, label %6
    i32 6, label %7
    i32 7, label %8
    i32 8, label %9
    i32 9, label %13
    i32 10, label %13
    i32 11, label %10
    i32 12, label %11
  ]

4:                                                ; preds = %3
  br label %13

5:                                                ; preds = %3
  br label %13

6:                                                ; preds = %3
  br label %13

7:                                                ; preds = %3
  br label %13

8:                                                ; preds = %3
  br label %13

9:                                                ; preds = %3
  br label %13

10:                                               ; preds = %3
  br label %13

11:                                               ; preds = %3
  br label %13

12:                                               ; preds = %3
  tail call void @llvm.trap() #8
  unreachable

13:                                               ; preds = %3, %3, %3, %3, %11, %10, %9, %8, %7, %6, %5, %4
  %14 = phi i32 [ 2, %4 ], [ 2, %5 ], [ 1, %6 ], [ 1, %7 ], [ 4, %8 ], [ 4, %9 ], [ 1, %10 ], [ 1, %11 ], [ 3, %3 ], [ 3, %3 ], [ 3, %3 ], [ 3, %3 ]
  %15 = sext i32 %2 to i64
  %16 = add nsw i64 %15, -4
  %17 = getelementptr inbounds %"class.SkYUVAPixmapInfo::SupportedDataTypes", %"class.SkYUVAPixmapInfo::SupportedDataTypes"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  switch i32 %1, label %27 [
    i32 12, label %25
    i32 1, label %21
    i32 2, label %21
    i32 3, label %22
    i32 4, label %22
    i32 5, label %23
    i32 6, label %23
    i32 7, label %24
    i32 8, label %24
    i32 9, label %26
    i32 10, label %26
    i32 11, label %25
  ]

19:                                               ; preds = %27
  %20 = icmp eq i32 %14, 1
  br i1 %20, label %33, label %35

21:                                               ; preds = %13, %13
  br label %27

22:                                               ; preds = %13, %13
  br label %27

23:                                               ; preds = %13, %13
  br label %27

24:                                               ; preds = %13, %13
  br label %27

25:                                               ; preds = %13, %13
  br label %27

26:                                               ; preds = %13, %13
  br label %27

27:                                               ; preds = %26, %13, %21, %22, %23, %24, %25
  %28 = phi i64 [ 16, %25 ], [ 4, %24 ], [ 12, %23 ], [ 4, %21 ], [ 4, %22 ], [ 0, %13 ], [ 4, %26 ]
  %29 = add nsw i64 %16, %28
  %30 = shl i64 1, %29
  %31 = and i64 %30, %18
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %19

33:                                               ; preds = %27, %19, %40, %46, %52, %58, %3
  %34 = phi i1 [ true, %3 ], [ false, %27 ], [ true, %19 ], [ false, %40 ], [ true, %46 ], [ false, %52 ], [ true, %58 ]
  ret i1 %34

35:                                               ; preds = %19
  switch i32 %1, label %40 [
    i32 10, label %36
    i32 1, label %39
    i32 2, label %39
    i32 3, label %38
    i32 4, label %38
    i32 9, label %36
    i32 8, label %37
    i32 7, label %37
  ]

36:                                               ; preds = %35, %35
  br label %40

37:                                               ; preds = %35, %35
  br label %40

38:                                               ; preds = %35, %35
  br label %40

39:                                               ; preds = %35, %35
  br label %40

40:                                               ; preds = %39, %38, %37, %36, %35
  %41 = phi i64 [ 4, %37 ], [ 4, %39 ], [ 8, %38 ], [ 8, %36 ], [ 0, %35 ]
  %42 = add nsw i64 %16, %41
  %43 = shl i64 1, %42
  %44 = and i64 %43, %18
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %33, label %46

46:                                               ; preds = %40
  %47 = icmp eq i32 %14, 2
  br i1 %47, label %33, label %48

48:                                               ; preds = %46
  switch i32 %1, label %52 [
    i32 10, label %49
    i32 1, label %51
    i32 2, label %51
    i32 9, label %49
    i32 8, label %50
    i32 7, label %50
  ]

49:                                               ; preds = %48, %48
  br label %52

50:                                               ; preds = %48, %48
  br label %52

51:                                               ; preds = %48, %48
  br label %52

52:                                               ; preds = %51, %50, %49, %48
  %53 = phi i64 [ 4, %50 ], [ 4, %51 ], [ 4, %49 ], [ 0, %48 ]
  %54 = add nsw i64 %16, %53
  %55 = shl i64 1, %54
  %56 = and i64 %55, %18
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %33, label %58

58:                                               ; preds = %52
  %59 = icmp eq i32 %14, 3
  br i1 %59, label %33, label %60

60:                                               ; preds = %58
  %61 = add i32 %1, -7
  %62 = icmp ult i32 %61, 2
  %63 = select i1 %62, i64 4, i64 0
  %64 = add nsw i64 %16, %63
  %65 = shl i64 1, %64
  %66 = and i64 %65, %18
  %67 = icmp eq i64 %66, 0
  %68 = select i1 %67, i1 false, i1 true
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkYUVAPixmaps24RecommendedRGBAColorTypeEN16SkYUVAPixmapInfo8DataTypeE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp ult i32 %0, 4
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @llvm.trap()
  unreachable

4:                                                ; preds = %1
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN13SkYUVAPixmaps24RecommendedRGBAColorTypeEN16SkYUVAPixmapInfo8DataTypeE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkYUVAPixmaps8AllocateERK16SkYUVAPixmapInfo(%class.SkYUVAPixmaps* noalias sret, %class.SkYUVAPixmapInfo* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.11, align 8
  %4 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 2, i32 3
  %9 = bitcast %class.SkYUVAPixmaps* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 208, i1 false)
  %10 = bitcast i32* %8 to <4 x i32>*
  store <4 x i32> <i32 10, i32 1, i32 0, i32 0>, <4 x i32>* %10, align 4
  br label %40

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 0
  %13 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 2, i32 0, i64 0
  %14 = tail call i64 @_ZNK10SkYUVAInfo17computeTotalBytesEPKmPm(%class.SkYUVAInfo* %12, i64* %13, i64* null) #8
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.11* nonnull sret %3, i64 %14) #8
  %15 = bitcast %class.SkYUVAPixmaps* %0 to i8*
  %16 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 160, i1 false) #8
  %17 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 1
  %18 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %3, i64 0, i32 0
  %19 = bitcast %class.sk_sp.11* %3 to i64*
  %20 = load i64, i64* %19, align 8
  store %class.SkData* null, %class.SkData** %18, align 8
  %21 = bitcast %class.sk_sp.11* %17 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 2
  %23 = bitcast %class.SkYUVAInfo* %22 to i8*
  %24 = bitcast %class.SkYUVAPixmapInfo* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 4 %24, i64 32, i1 false) #8
  %25 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 3
  %26 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 3
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %25, align 8
  %28 = inttoptr i64 %20 to %class.SkData*
  %29 = getelementptr inbounds %class.SkData, %class.SkData* %28, i64 0, i32 3
  %30 = load i8*, i8** %29, align 8
  %31 = call zeroext i1 @_ZNK16SkYUVAPixmapInfo31initPixmapsFromSingleAllocationEPvP8SkPixmap(%class.SkYUVAPixmapInfo* %1, i8* %30, %class.SkPixmap* %16) #8
  %32 = load %class.SkData*, %class.SkData** %18, align 8
  %33 = icmp eq %class.SkData* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %11
  %35 = getelementptr inbounds %class.SkData, %class.SkData* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %32) #8
  %39 = bitcast %class.SkData* %32 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %39) #8
  br label %40

40:                                               ; preds = %38, %34, %11, %7
  ret void
}

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.11* sret, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkYUVAPixmaps8FromDataERK16SkYUVAPixmapInfo5sk_spI6SkDataE(%class.SkYUVAPixmaps* noalias sret, %class.SkYUVAPixmapInfo* dereferenceable(168), %class.sk_sp.11* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 2, i32 3
  %9 = bitcast %class.SkYUVAPixmaps* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 208, i1 false)
  %10 = bitcast i32* %8 to <4 x i32>*
  store <4 x i32> <i32 10, i32 1, i32 0, i32 0>, <4 x i32>* %10, align 4
  br label %39

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 0
  %13 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 2, i32 0, i64 0
  %14 = tail call i64 @_ZNK10SkYUVAInfo17computeTotalBytesEPKmPm(%class.SkYUVAInfo* %12, i64* %13, i64* null) #8
  %15 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %2, i64 0, i32 0
  %16 = load %class.SkData*, %class.SkData** %15, align 8
  %17 = getelementptr inbounds %class.SkData, %class.SkData* %16, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %14, %18
  br i1 %19, label %20, label %24

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 2, i32 3
  %22 = bitcast %class.SkYUVAPixmaps* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 208, i1 false)
  %23 = bitcast i32* %21 to <4 x i32>*
  store <4 x i32> <i32 10, i32 1, i32 0, i32 0>, <4 x i32>* %23, align 4
  br label %39

24:                                               ; preds = %11
  %25 = ptrtoint %class.SkData* %16 to i64
  store %class.SkData* null, %class.SkData** %15, align 8
  %26 = bitcast %class.SkYUVAPixmaps* %0 to i8*
  %27 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 160, i1 false) #8
  %28 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 1
  %29 = bitcast %class.sk_sp.11* %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 2
  %31 = bitcast %class.SkYUVAInfo* %30 to i8*
  %32 = bitcast %class.SkYUVAPixmapInfo* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 4 %32, i64 32, i1 false) #8
  %33 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 3
  %34 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %class.SkData, %class.SkData* %16, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZNK16SkYUVAPixmapInfo31initPixmapsFromSingleAllocationEPvP8SkPixmap(%class.SkYUVAPixmapInfo* %1, i8* %37, %class.SkPixmap* %27) #8
  br label %39

39:                                               ; preds = %24, %20, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkYUVAPixmaps8MakeCopyERKS_(%class.SkYUVAPixmaps* noalias sret, %class.SkYUVAPixmaps* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkYUVAPixmaps, align 8
  %4 = alloca %class.SkYUVAPixmapInfo, align 8
  %5 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 2
  %6 = bitcast %class.SkYUVAInfo* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = icmp sgt i32 %8, 0
  %12 = icmp sgt i32 %10, 0
  %13 = and i1 %11, %12
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 2, i32 3
  %16 = bitcast %class.SkYUVAPixmaps* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 208, i1 false)
  %17 = bitcast i32* %15 to <4 x i32>*
  store <4 x i32> <i32 10, i32 1, i32 0, i32 0>, <4 x i32>* %17, align 4
  br label %220

18:                                               ; preds = %2
  %19 = bitcast %class.SkYUVAPixmaps* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 208, i1 false)
  %20 = bitcast %class.SkYUVAPixmapInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %20) #8
  call void @_ZNK13SkYUVAPixmaps11pixmapsInfoEv(%class.SkYUVAPixmapInfo* nonnull sret %4, %class.SkYUVAPixmaps* %1)
  call void @_ZN13SkYUVAPixmaps8AllocateERK16SkYUVAPixmapInfo(%class.SkYUVAPixmaps* nonnull sret %3, %class.SkYUVAPixmapInfo* nonnull dereferenceable(168) %4)
  %21 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %4, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0, i32 0
  %22 = load %class.SkColorSpace*, %class.SkColorSpace** %21, align 8
  %23 = icmp eq %class.SkColorSpace* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = bitcast %class.SkColorSpace* %22 to i8*
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %28, %24, %18
  %31 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %4, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0, i32 0
  %32 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  %33 = icmp eq %class.SkColorSpace* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = bitcast %class.SkColorSpace* %32 to i8*
  call void @_ZdlPv(i8* %39) #9
  br label %40

40:                                               ; preds = %38, %34, %30
  %41 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %4, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0, i32 0
  %42 = load %class.SkColorSpace*, %class.SkColorSpace** %41, align 8
  %43 = icmp eq %class.SkColorSpace* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = bitcast %class.SkColorSpace* %42 to i8*
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %44, %40
  %51 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %4, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0, i32 0
  %52 = load %class.SkColorSpace*, %class.SkColorSpace** %51, align 8
  %53 = icmp eq %class.SkColorSpace* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  %59 = bitcast %class.SkColorSpace* %52 to i8*
  call void @_ZdlPv(i8* %59) #9
  br label %60

60:                                               ; preds = %50, %54, %58
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %20) #8
  %61 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 2
  %62 = bitcast %class.SkYUVAInfo* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = trunc i64 %63 to i32
  %65 = lshr i64 %63, 32
  %66 = trunc i64 %65 to i32
  %67 = icmp sgt i32 %64, 0
  %68 = icmp sgt i32 %66, 0
  %69 = and i1 %67, %68
  br i1 %69, label %70, label %84

70:                                               ; preds = %60
  %71 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 2, i32 1
  %72 = load i32, i32* %71, align 8
  switch i32 %72, label %81 [
    i32 0, label %84
    i32 1, label %82
    i32 2, label %82
    i32 3, label %73
    i32 4, label %74
    i32 5, label %75
    i32 6, label %76
    i32 7, label %77
    i32 8, label %78
    i32 9, label %82
    i32 10, label %82
    i32 11, label %79
    i32 12, label %80
  ]

73:                                               ; preds = %70
  br label %82

74:                                               ; preds = %70
  br label %82

75:                                               ; preds = %70
  br label %82

76:                                               ; preds = %70
  br label %82

77:                                               ; preds = %70
  br label %82

78:                                               ; preds = %70
  br label %82

79:                                               ; preds = %70
  br label %82

80:                                               ; preds = %70
  br label %82

81:                                               ; preds = %70
  call void @llvm.trap() #8
  unreachable

82:                                               ; preds = %70, %70, %70, %70, %80, %79, %78, %77, %76, %75, %74, %73
  %83 = phi i64 [ 2, %73 ], [ 2, %74 ], [ 1, %75 ], [ 1, %76 ], [ 4, %77 ], [ 4, %78 ], [ 1, %79 ], [ 1, %80 ], [ 3, %70 ], [ 3, %70 ], [ 3, %70 ], [ 3, %70 ]
  br label %156

84:                                               ; preds = %217, %60, %70
  %85 = bitcast %class.SkYUVAPixmaps* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* nonnull align 8 %19, i64 16, i1 false) #8
  %86 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 0, i32 2
  %87 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 0, i32 2
  %88 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %87, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %struct.SkImageInfo* %87 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %88, align 8
  %91 = bitcast %struct.SkImageInfo* %86 to <2 x i64>*
  store <2 x i64> %90, <2 x i64>* %91, align 8
  %92 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 0, i32 2, i32 1
  %93 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 0, i32 2, i32 1
  %94 = bitcast %struct.SkISize* %93 to i64*
  %95 = bitcast %struct.SkISize* %92 to i64*
  %96 = load i64, i64* %94, align 8
  store i64 %96, i64* %95, align 8
  %97 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 1
  %98 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 1
  %99 = bitcast %class.SkPixmap* %97 to i8*
  %100 = bitcast %class.SkPixmap* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #8
  %101 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 1, i32 2
  %102 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 1, i32 2
  %103 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %102, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %struct.SkImageInfo* %102 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %103, align 8
  %106 = bitcast %struct.SkImageInfo* %101 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %106, align 8
  %107 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 1, i32 2, i32 1
  %108 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 1, i32 2, i32 1
  %109 = bitcast %struct.SkISize* %108 to i64*
  %110 = bitcast %struct.SkISize* %107 to i64*
  %111 = load i64, i64* %109, align 8
  store i64 %111, i64* %110, align 8
  %112 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 2
  %113 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 2
  %114 = bitcast %class.SkPixmap* %112 to i8*
  %115 = bitcast %class.SkPixmap* %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 16, i1 false) #8
  %116 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 2, i32 2
  %117 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 2, i32 2
  %118 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %117, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %struct.SkImageInfo* %117 to <2 x i64>*
  %120 = load <2 x i64>, <2 x i64>* %119, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %118, align 8
  %121 = bitcast %struct.SkImageInfo* %116 to <2 x i64>*
  store <2 x i64> %120, <2 x i64>* %121, align 8
  %122 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 2, i32 2, i32 1
  %123 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 2, i32 2, i32 1
  %124 = bitcast %struct.SkISize* %123 to i64*
  %125 = bitcast %struct.SkISize* %122 to i64*
  %126 = load i64, i64* %124, align 8
  store i64 %126, i64* %125, align 8
  %127 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 3
  %128 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 3
  %129 = bitcast %class.SkPixmap* %127 to i8*
  %130 = bitcast %class.SkPixmap* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 16, i1 false) #8
  %131 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 3, i32 2
  %132 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 3, i32 2
  %133 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %132, i64 0, i32 0, i32 0, i32 0
  %134 = bitcast %struct.SkImageInfo* %132 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %133, align 8
  %136 = bitcast %struct.SkImageInfo* %131 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %136, align 8
  %137 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 3, i32 2, i32 1
  %138 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 3, i32 2, i32 1
  %139 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 1, i32 0
  %140 = bitcast %struct.SkISize* %138 to <2 x i64>*
  %141 = load <2 x i64>, <2 x i64>* %140, align 8
  store %class.SkData* null, %class.SkData** %139, align 8
  %142 = bitcast %struct.SkISize* %137 to <2 x i64>*
  store <2 x i64> %141, <2 x i64>* %142, align 8
  %143 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 2
  %144 = bitcast %class.SkYUVAInfo* %143 to i8*
  %145 = bitcast %class.SkYUVAInfo* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 36, i1 false) #8
  %146 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 0, i32 2, i32 0, i32 0, i32 0
  %147 = load %class.SkColorSpace*, %class.SkColorSpace** %146, align 8
  %148 = bitcast %class.SkColorSpace* %147 to i8*
  %149 = icmp eq %class.SkColorSpace* %147, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %84
  %151 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = atomicrmw add i32* %151, i32 -1 acq_rel
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %154, label %155

154:                                              ; preds = %150
  call void @_ZdlPv(i8* %148) #9
  br label %155

155:                                              ; preds = %84, %150, %154
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %19) #8
  br label %220

156:                                              ; preds = %217, %82
  %157 = phi i64 [ 0, %82 ], [ %218, %217 ]
  %158 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 %157, i32 0
  %159 = load i8*, i8** %158, align 8
  %160 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %3, i64 0, i32 0, i32 0, i64 %157, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 %157, i32 0
  %163 = load i8*, i8** %162, align 8
  %164 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 %157, i32 1
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 %157, i32 2, i32 1, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 %157, i32 2, i32 0
  %170 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %169) #8
  %171 = sext i32 %170 to i64
  %172 = mul nsw i64 %171, %168
  %173 = icmp ult i64 %172, 2147483648
  %174 = select i1 %173, i64 %172, i64 0
  %175 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 %157, i32 2, i32 1, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i64 %174, %161
  %178 = icmp eq i64 %174, %165
  %179 = and i1 %177, %178
  br i1 %179, label %188, label %180

180:                                              ; preds = %156
  %181 = icmp sgt i32 %176, 0
  br i1 %181, label %182, label %217

182:                                              ; preds = %180
  %183 = add i32 %176, -1
  %184 = and i32 %176, 3
  %185 = icmp ult i32 %183, 3
  br i1 %185, label %205, label %186

186:                                              ; preds = %182
  %187 = sub i32 %176, %184
  br label %191

188:                                              ; preds = %156
  %189 = sext i32 %176 to i64
  %190 = mul i64 %165, %189
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %159, i8* align 1 %163, i64 %190, i1 false) #8
  br label %217

191:                                              ; preds = %191, %186
  %192 = phi i8* [ %159, %186 ], [ %201, %191 ]
  %193 = phi i8* [ %163, %186 ], [ %202, %191 ]
  %194 = phi i32 [ %187, %186 ], [ %203, %191 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %192, i8* align 1 %193, i64 %174, i1 false) #8
  %195 = getelementptr inbounds i8, i8* %192, i64 %161
  %196 = getelementptr inbounds i8, i8* %193, i64 %165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %195, i8* align 1 %196, i64 %174, i1 false) #8
  %197 = getelementptr inbounds i8, i8* %195, i64 %161
  %198 = getelementptr inbounds i8, i8* %196, i64 %165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %198, i64 %174, i1 false) #8
  %199 = getelementptr inbounds i8, i8* %197, i64 %161
  %200 = getelementptr inbounds i8, i8* %198, i64 %165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %199, i8* align 1 %200, i64 %174, i1 false) #8
  %201 = getelementptr inbounds i8, i8* %199, i64 %161
  %202 = getelementptr inbounds i8, i8* %200, i64 %165
  %203 = add i32 %194, -4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %191

205:                                              ; preds = %191, %182
  %206 = phi i8* [ %159, %182 ], [ %201, %191 ]
  %207 = phi i8* [ %163, %182 ], [ %202, %191 ]
  %208 = icmp eq i32 %184, 0
  br i1 %208, label %217, label %209

209:                                              ; preds = %205, %209
  %210 = phi i8* [ %213, %209 ], [ %206, %205 ]
  %211 = phi i8* [ %214, %209 ], [ %207, %205 ]
  %212 = phi i32 [ %215, %209 ], [ %184, %205 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %210, i8* align 1 %211, i64 %174, i1 false) #8
  %213 = getelementptr inbounds i8, i8* %210, i64 %161
  %214 = getelementptr inbounds i8, i8* %211, i64 %165
  %215 = add i32 %212, -1
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %209, !llvm.loop !3

217:                                              ; preds = %205, %209, %180, %188
  %218 = add nuw nsw i64 %157, 1
  %219 = icmp eq i64 %218, %83
  br i1 %219, label %84, label %156

220:                                              ; preds = %155, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkYUVAPixmaps11pixmapsInfoEv(%class.SkYUVAPixmapInfo* noalias sret, %class.SkYUVAPixmaps* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca [4 x i32], align 16
  %4 = alloca [4 x i64], align 16
  %5 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 2
  %6 = bitcast %class.SkYUVAInfo* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = icmp sgt i32 %8, 0
  %12 = icmp sgt i32 %10, 0
  %13 = and i1 %11, %12
  br i1 %13, label %20, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 0, i32 3
  %16 = bitcast %class.SkYUVAPixmapInfo* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 168, i1 false)
  store i32 10, i32* %15, align 4
  %17 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 0, i32 4
  store i32 1, i32* %17, align 4
  %18 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %0, i64 0, i32 0, i32 5
  %19 = bitcast i32* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 140, i1 false)
  br label %46

20:                                               ; preds = %2
  %21 = bitcast [4 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 0, i64 16, i1 false)
  %22 = bitcast [4 x i64]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 0, i64 32, i1 false)
  %23 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 2, i32 1
  %24 = load i32, i32* %23, align 4
  switch i32 %24, label %33 [
    i32 0, label %34
    i32 1, label %37
    i32 2, label %37
    i32 3, label %25
    i32 4, label %26
    i32 5, label %27
    i32 6, label %28
    i32 7, label %29
    i32 8, label %30
    i32 9, label %37
    i32 10, label %37
    i32 11, label %31
    i32 12, label %32
  ]

25:                                               ; preds = %20
  br label %37

26:                                               ; preds = %20
  br label %37

27:                                               ; preds = %20
  br label %37

28:                                               ; preds = %20
  br label %37

29:                                               ; preds = %20
  br label %37

30:                                               ; preds = %20
  br label %37

31:                                               ; preds = %20
  br label %37

32:                                               ; preds = %20
  br label %37

33:                                               ; preds = %20
  tail call void @llvm.trap() #8
  unreachable

34:                                               ; preds = %37, %47, %55, %63, %20
  %35 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 0
  %36 = getelementptr inbounds [4 x i64], [4 x i64]* %4, i64 0, i64 0
  call void @_ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoPK11SkColorTypePKm(%class.SkYUVAPixmapInfo* %0, %class.SkYUVAInfo* dereferenceable(32) %5, i32* nonnull %35, i64* nonnull %36)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #8
  br label %46

37:                                               ; preds = %25, %26, %27, %28, %29, %30, %31, %32, %20, %20, %20, %20
  %38 = phi i64 [ 2, %25 ], [ 2, %26 ], [ 1, %27 ], [ 1, %28 ], [ 4, %29 ], [ 4, %30 ], [ 1, %31 ], [ 1, %32 ], [ 3, %20 ], [ 3, %20 ], [ 3, %20 ], [ 3, %20 ]
  %39 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 0, i32 2, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 0
  store i32 %40, i32* %41, align 16
  %42 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds [4 x i64], [4 x i64]* %4, i64 0, i64 0
  store i64 %43, i64* %44, align 16
  %45 = icmp eq i64 %38, 1
  br i1 %45, label %34, label %47

46:                                               ; preds = %34, %14
  ret void

47:                                               ; preds = %37
  %48 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 1, i32 2, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 1
  store i32 %49, i32* %50, align 4
  %51 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 1, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds [4 x i64], [4 x i64]* %4, i64 0, i64 1
  store i64 %52, i64* %53, align 8
  %54 = icmp eq i64 %38, 2
  br i1 %54, label %34, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 2, i32 2, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  store i32 %57, i32* %58, align 8
  %59 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 2, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds [4 x i64], [4 x i64]* %4, i64 0, i64 2
  store i64 %60, i64* %61, align 16
  %62 = icmp eq i64 %38, 3
  br i1 %62, label %34, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 3, i32 2, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 3, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds [4 x i64], [4 x i64]* %4, i64 0, i64 3
  store i64 %68, i64* %69, align 8
  br label %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkYUVAPixmaps18FromExternalMemoryERK16SkYUVAPixmapInfoPv(%class.SkYUVAPixmaps* noalias sret, %class.SkYUVAPixmapInfo* dereferenceable(168), i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x %class.SkPixmap], align 16
  %5 = bitcast [4 x %class.SkPixmap]* %4 to i8*
  %6 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 2, i32 3
  %11 = bitcast %class.SkYUVAPixmaps* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 208, i1 false)
  %12 = bitcast i32* %10 to <4 x i32>*
  store <4 x i32> <i32 10, i32 1, i32 0, i32 0>, <4 x i32>* %12, align 4
  br label %83

13:                                               ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %5) #8
  %14 = getelementptr inbounds [4 x %class.SkPixmap], [4 x %class.SkPixmap]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 160, i1 false)
  %15 = call zeroext i1 @_ZNK16SkYUVAPixmapInfo31initPixmapsFromSingleAllocationEPvP8SkPixmap(%class.SkYUVAPixmapInfo* %1, i8* %2, %class.SkPixmap* nonnull %14)
  %16 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 0
  %19 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 2
  %20 = bitcast %class.SkYUVAInfo* %19 to i8*
  %21 = bitcast %class.SkYUVAPixmapInfo* %1 to i8*
  %22 = bitcast %class.SkYUVAPixmaps* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 168, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 4 %21, i64 32, i1 false) #8
  %23 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 3
  store i32 %17, i32* %23, align 8
  %24 = load i32, i32* %6, align 4
  switch i32 %24, label %33 [
    i32 0, label %69
    i32 1, label %34
    i32 2, label %34
    i32 3, label %25
    i32 4, label %26
    i32 5, label %27
    i32 6, label %28
    i32 7, label %29
    i32 8, label %30
    i32 9, label %34
    i32 10, label %34
    i32 11, label %31
    i32 12, label %32
  ]

25:                                               ; preds = %13
  br label %34

26:                                               ; preds = %13
  br label %34

27:                                               ; preds = %13
  br label %34

28:                                               ; preds = %13
  br label %34

29:                                               ; preds = %13
  br label %34

30:                                               ; preds = %13
  br label %34

31:                                               ; preds = %13
  br label %34

32:                                               ; preds = %13
  br label %34

33:                                               ; preds = %13
  call void @llvm.trap() #8
  unreachable

34:                                               ; preds = %32, %31, %30, %29, %28, %27, %26, %25, %13, %13, %13, %13
  %35 = phi i64 [ 1, %32 ], [ 1, %31 ], [ 4, %30 ], [ 4, %29 ], [ 1, %28 ], [ 1, %27 ], [ 2, %26 ], [ 2, %25 ], [ 3, %13 ], [ 3, %13 ], [ 3, %13 ], [ 3, %13 ]
  %36 = getelementptr inbounds [4 x %class.SkPixmap], [4 x %class.SkPixmap]* %4, i64 0, i64 %35
  br label %37

37:                                               ; preds = %60, %34
  %38 = phi %class.SkPixmap* [ %67, %60 ], [ %18, %34 ]
  %39 = phi %class.SkPixmap* [ %66, %60 ], [ %14, %34 ]
  %40 = bitcast %class.SkPixmap* %38 to i8*
  %41 = bitcast %class.SkPixmap* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 16, i1 false) #8
  %42 = icmp eq %class.SkPixmap* %38, %39
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %39, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = load %class.SkColorSpace*, %class.SkColorSpace** %44, align 8
  %46 = icmp eq %class.SkColorSpace* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 1 monotonic
  br label %50

50:                                               ; preds = %47, %43
  %51 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %38, i64 0, i32 2, i32 0, i32 0, i32 0
  %52 = load %class.SkColorSpace*, %class.SkColorSpace** %51, align 8
  store %class.SkColorSpace* %45, %class.SkColorSpace** %51, align 8
  %53 = icmp eq %class.SkColorSpace* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  %59 = bitcast %class.SkColorSpace* %52 to i8*
  call void @_ZdlPv(i8* %59) #9
  br label %60

60:                                               ; preds = %58, %54, %50, %37
  %61 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %38, i64 0, i32 2, i32 0, i32 1
  %62 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %39, i64 0, i32 2, i32 0, i32 1
  %63 = bitcast i32* %62 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 8
  %65 = bitcast i32* %61 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %65, align 8
  %66 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %39, i64 1
  %67 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %38, i64 1
  %68 = icmp eq %class.SkPixmap* %66, %36
  br i1 %68, label %69, label %37

69:                                               ; preds = %60, %13
  %70 = getelementptr inbounds [4 x %class.SkPixmap], [4 x %class.SkPixmap]* %4, i64 0, i64 3, i32 2, i32 0, i32 0, i32 0
  %71 = load %class.SkColorSpace*, %class.SkColorSpace** %70, align 8
  %72 = icmp eq %class.SkColorSpace* %71, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = bitcast %class.SkColorSpace* %71 to i8*
  call void @_ZdlPv(i8* %78) #9
  br label %79

79:                                               ; preds = %69, %73, %77
  %80 = getelementptr inbounds [4 x %class.SkPixmap], [4 x %class.SkPixmap]* %4, i64 0, i64 2, i32 2, i32 0, i32 0, i32 0
  %81 = load %class.SkColorSpace*, %class.SkColorSpace** %80, align 16
  %82 = icmp eq %class.SkColorSpace* %81, null
  br i1 %82, label %90, label %84

83:                                               ; preds = %110, %9
  ret void

84:                                               ; preds = %79
  %85 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 -1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  %89 = bitcast %class.SkColorSpace* %81 to i8*
  call void @_ZdlPv(i8* %89) #9
  br label %90

90:                                               ; preds = %88, %84, %79
  %91 = getelementptr inbounds [4 x %class.SkPixmap], [4 x %class.SkPixmap]* %4, i64 0, i64 1, i32 2, i32 0, i32 0, i32 0
  %92 = load %class.SkColorSpace*, %class.SkColorSpace** %91, align 8
  %93 = icmp eq %class.SkColorSpace* %92, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = bitcast %class.SkColorSpace* %92 to i8*
  call void @_ZdlPv(i8* %99) #9
  br label %100

100:                                              ; preds = %98, %94, %90
  %101 = getelementptr inbounds [4 x %class.SkPixmap], [4 x %class.SkPixmap]* %4, i64 0, i64 0, i32 2, i32 0, i32 0, i32 0
  %102 = load %class.SkColorSpace*, %class.SkColorSpace** %101, align 16
  %103 = icmp eq %class.SkColorSpace* %102, null
  br i1 %103, label %110, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 -1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = bitcast %class.SkColorSpace* %102 to i8*
  call void @_ZdlPv(i8* %109) #9
  br label %110

110:                                              ; preds = %108, %104, %100
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %5) #8
  br label %83
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkYUVAPixmaps19FromExternalPixmapsERK10SkYUVAInfoPK8SkPixmap(%class.SkYUVAPixmaps* noalias sret, %class.SkYUVAInfo* nocapture readonly dereferenceable(32), %class.SkPixmap* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x i32], align 16
  %5 = alloca [4 x i64], align 16
  %6 = alloca %class.SkYUVAPixmapInfo, align 8
  %7 = bitcast [4 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 16, i1 false)
  %8 = bitcast [4 x i64]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 32, i1 false)
  %9 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %19 [
    i32 0, label %20
    i32 1, label %27
    i32 2, label %27
    i32 3, label %11
    i32 4, label %12
    i32 5, label %13
    i32 6, label %14
    i32 7, label %15
    i32 8, label %16
    i32 9, label %27
    i32 10, label %27
    i32 11, label %17
    i32 12, label %18
  ]

11:                                               ; preds = %3
  br label %27

12:                                               ; preds = %3
  br label %27

13:                                               ; preds = %3
  br label %27

14:                                               ; preds = %3
  br label %27

15:                                               ; preds = %3
  br label %27

16:                                               ; preds = %3
  br label %27

17:                                               ; preds = %3
  br label %27

18:                                               ; preds = %3
  br label %27

19:                                               ; preds = %3
  tail call void @llvm.trap() #8
  unreachable

20:                                               ; preds = %27, %135, %143, %151, %3
  %21 = bitcast %class.SkYUVAPixmapInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 168, i1 false)
  %22 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 0
  %23 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 0
  call void @_ZN16SkYUVAPixmapInfoC2ERK10SkYUVAInfoPK11SkColorTypePKm(%class.SkYUVAPixmapInfo* nonnull %6, %class.SkYUVAInfo* dereferenceable(32) %1, i32* nonnull %22, i64* nonnull %23)
  %24 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %6, i64 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %36, label %40

27:                                               ; preds = %11, %12, %13, %14, %15, %16, %17, %18, %3, %3, %3, %3
  %28 = phi i64 [ 2, %11 ], [ 2, %12 ], [ 1, %13 ], [ 1, %14 ], [ 4, %15 ], [ 4, %16 ], [ 1, %17 ], [ 1, %18 ], [ 3, %3 ], [ 3, %3 ], [ 3, %3 ], [ 3, %3 ]
  %29 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 0
  store i32 %30, i32* %31, align 16
  %32 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 0
  store i64 %33, i64* %34, align 16
  %35 = icmp eq i64 %28, 1
  br i1 %35, label %20, label %135

36:                                               ; preds = %20
  %37 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 2, i32 3
  %38 = bitcast %class.SkYUVAPixmaps* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 208, i1 false)
  %39 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 10, i32 1, i32 0, i32 0>, <4 x i32>* %39, align 4
  br label %94

40:                                               ; preds = %20
  %41 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %6, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 0
  %44 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 2
  %45 = bitcast %class.SkYUVAInfo* %44 to i8*
  %46 = bitcast %class.SkYUVAInfo* %1 to i8*
  %47 = bitcast %class.SkYUVAPixmaps* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 168, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 4 %46, i64 32, i1 false) #8
  %48 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 3
  store i32 %42, i32* %48, align 8
  %49 = load i32, i32* %9, align 4
  switch i32 %49, label %58 [
    i32 0, label %94
    i32 1, label %59
    i32 2, label %59
    i32 3, label %50
    i32 4, label %51
    i32 5, label %52
    i32 6, label %53
    i32 7, label %54
    i32 8, label %55
    i32 9, label %59
    i32 10, label %59
    i32 11, label %56
    i32 12, label %57
  ]

50:                                               ; preds = %40
  br label %59

51:                                               ; preds = %40
  br label %59

52:                                               ; preds = %40
  br label %59

53:                                               ; preds = %40
  br label %59

54:                                               ; preds = %40
  br label %59

55:                                               ; preds = %40
  br label %59

56:                                               ; preds = %40
  br label %59

57:                                               ; preds = %40
  br label %59

58:                                               ; preds = %40
  call void @llvm.trap() #8
  unreachable

59:                                               ; preds = %57, %56, %55, %54, %53, %52, %51, %50, %40, %40, %40, %40
  %60 = phi i64 [ 1, %57 ], [ 1, %56 ], [ 4, %55 ], [ 4, %54 ], [ 1, %53 ], [ 1, %52 ], [ 2, %51 ], [ 2, %50 ], [ 3, %40 ], [ 3, %40 ], [ 3, %40 ], [ 3, %40 ]
  %61 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 %60
  br label %62

62:                                               ; preds = %85, %59
  %63 = phi %class.SkPixmap* [ %92, %85 ], [ %43, %59 ]
  %64 = phi %class.SkPixmap* [ %91, %85 ], [ %2, %59 ]
  %65 = bitcast %class.SkPixmap* %63 to i8*
  %66 = bitcast %class.SkPixmap* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 16, i1 false) #8
  %67 = icmp eq %class.SkPixmap* %63, %64
  br i1 %67, label %85, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %64, i64 0, i32 2, i32 0, i32 0, i32 0
  %70 = load %class.SkColorSpace*, %class.SkColorSpace** %69, align 8
  %71 = icmp eq %class.SkColorSpace* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 1 monotonic
  br label %75

75:                                               ; preds = %72, %68
  %76 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %63, i64 0, i32 2, i32 0, i32 0, i32 0
  %77 = load %class.SkColorSpace*, %class.SkColorSpace** %76, align 8
  store %class.SkColorSpace* %70, %class.SkColorSpace** %76, align 8
  %78 = icmp eq %class.SkColorSpace* %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = bitcast %class.SkColorSpace* %77 to i8*
  call void @_ZdlPv(i8* %84) #9
  br label %85

85:                                               ; preds = %83, %79, %75, %62
  %86 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %63, i64 0, i32 2, i32 0, i32 1
  %87 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %64, i64 0, i32 2, i32 0, i32 1
  %88 = bitcast i32* %87 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8
  %90 = bitcast i32* %86 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %90, align 8
  %91 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %64, i64 1
  %92 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %63, i64 1
  %93 = icmp eq %class.SkPixmap* %91, %61
  br i1 %93, label %94, label %62

94:                                               ; preds = %85, %40, %36
  %95 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %6, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0, i32 0
  %96 = load %class.SkColorSpace*, %class.SkColorSpace** %95, align 8
  %97 = icmp eq %class.SkColorSpace* %96, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = bitcast %class.SkColorSpace* %96 to i8*
  call void @_ZdlPv(i8* %103) #9
  br label %104

104:                                              ; preds = %102, %98, %94
  %105 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %6, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0, i32 0
  %106 = load %class.SkColorSpace*, %class.SkColorSpace** %105, align 8
  %107 = icmp eq %class.SkColorSpace* %106, null
  br i1 %107, label %114, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw add i32* %109, i32 -1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = bitcast %class.SkColorSpace* %106 to i8*
  call void @_ZdlPv(i8* %113) #9
  br label %114

114:                                              ; preds = %112, %108, %104
  %115 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %6, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0, i32 0
  %116 = load %class.SkColorSpace*, %class.SkColorSpace** %115, align 8
  %117 = icmp eq %class.SkColorSpace* %116, null
  br i1 %117, label %124, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 -1 acq_rel
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  %123 = bitcast %class.SkColorSpace* %116 to i8*
  call void @_ZdlPv(i8* %123) #9
  br label %124

124:                                              ; preds = %122, %118, %114
  %125 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %6, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0, i32 0
  %126 = load %class.SkColorSpace*, %class.SkColorSpace** %125, align 8
  %127 = icmp eq %class.SkColorSpace* %126, null
  br i1 %127, label %134, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw add i32* %129, i32 -1 acq_rel
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %134

132:                                              ; preds = %128
  %133 = bitcast %class.SkColorSpace* %126 to i8*
  call void @_ZdlPv(i8* %133) #9
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void

135:                                              ; preds = %27
  %136 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 1, i32 2, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  %138 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 1
  store i32 %137, i32* %138, align 4
  %139 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 1, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 1
  store i64 %140, i64* %141, align 8
  %142 = icmp eq i64 %28, 2
  br i1 %142, label %20, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 2, i32 2, i32 0, i32 1
  %145 = load i32, i32* %144, align 8
  %146 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 2
  store i32 %145, i32* %146, align 8
  %147 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 2, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 2
  store i64 %148, i64* %149, align 16
  %150 = icmp eq i64 %28, 3
  br i1 %150, label %20, label %151

151:                                              ; preds = %143
  %152 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 3, i32 2, i32 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 3
  store i32 %153, i32* %154, align 4
  %155 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 3, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds [4 x i64], [4 x i64]* %5, i64 0, i64 3
  store i64 %156, i64* %157, align 8
  br label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkYUVAPixmapsC2ERK16SkYUVAPixmapInfo5sk_spI6SkDataE(%class.SkYUVAPixmaps*, %class.SkYUVAPixmapInfo* dereferenceable(168), %class.sk_sp.11* nocapture) unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkYUVAPixmaps* %0 to i8*
  %5 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 160, i1 false)
  %6 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %2, i64 0, i32 0
  %8 = bitcast %class.sk_sp.11* %2 to i64*
  %9 = load i64, i64* %8, align 8
  store %class.SkData* null, %class.SkData** %7, align 8
  %10 = bitcast %class.sk_sp.11* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 2
  %12 = bitcast %class.SkYUVAInfo* %11 to i8*
  %13 = bitcast %class.SkYUVAPixmapInfo* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 4 %13, i64 32, i1 false)
  %14 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 3
  %15 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %14, align 8
  %17 = inttoptr i64 %9 to %class.SkData*
  %18 = getelementptr inbounds %class.SkData, %class.SkData* %17, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = tail call zeroext i1 @_ZNK16SkYUVAPixmapInfo31initPixmapsFromSingleAllocationEPvP8SkPixmap(%class.SkYUVAPixmapInfo* %1, i8* %19, %class.SkPixmap* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkYUVAPixmapsC2ERK10SkYUVAInfoN16SkYUVAPixmapInfo8DataTypeEPK8SkPixmap(%class.SkYUVAPixmaps*, %class.SkYUVAInfo* nocapture readonly dereferenceable(32), i32, %class.SkPixmap* readonly) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 2
  %7 = bitcast %class.SkYUVAInfo* %6 to i8*
  %8 = bitcast %class.SkYUVAInfo* %1 to i8*
  %9 = bitcast %class.SkYUVAPixmaps* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 168, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 4 %8, i64 32, i1 false)
  %10 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %0, i64 0, i32 3
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %class.SkYUVAInfo, %class.SkYUVAInfo* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %21 [
    i32 0, label %62
    i32 1, label %22
    i32 2, label %22
    i32 3, label %13
    i32 4, label %14
    i32 5, label %15
    i32 6, label %16
    i32 7, label %17
    i32 8, label %18
    i32 9, label %22
    i32 10, label %22
    i32 11, label %19
    i32 12, label %20
  ]

13:                                               ; preds = %4
  br label %22

14:                                               ; preds = %4
  br label %22

15:                                               ; preds = %4
  br label %22

16:                                               ; preds = %4
  br label %22

17:                                               ; preds = %4
  br label %22

18:                                               ; preds = %4
  br label %22

19:                                               ; preds = %4
  br label %22

20:                                               ; preds = %4
  br label %22

21:                                               ; preds = %4
  tail call void @llvm.trap() #8
  unreachable

22:                                               ; preds = %4, %4, %4, %4, %13, %14, %15, %16, %17, %18, %19, %20
  %23 = phi i64 [ 1, %20 ], [ 1, %19 ], [ 4, %18 ], [ 4, %17 ], [ 1, %16 ], [ 1, %15 ], [ 2, %14 ], [ 2, %13 ], [ 3, %4 ], [ 3, %4 ], [ 3, %4 ], [ 3, %4 ]
  %24 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 %23
  br label %25

25:                                               ; preds = %22, %48
  %26 = phi %class.SkPixmap* [ %60, %48 ], [ %5, %22 ]
  %27 = phi %class.SkPixmap* [ %59, %48 ], [ %3, %22 ]
  %28 = bitcast %class.SkPixmap* %26 to i8*
  %29 = bitcast %class.SkPixmap* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #8
  %30 = icmp eq %class.SkPixmap* %26, %27
  br i1 %30, label %48, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %27, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8
  %34 = icmp eq %class.SkColorSpace* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic
  br label %38

38:                                               ; preds = %35, %31
  %39 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %26, i64 0, i32 2, i32 0, i32 0, i32 0
  %40 = load %class.SkColorSpace*, %class.SkColorSpace** %39, align 8
  store %class.SkColorSpace* %33, %class.SkColorSpace** %39, align 8
  %41 = icmp eq %class.SkColorSpace* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = bitcast %class.SkColorSpace* %40 to i8*
  tail call void @_ZdlPv(i8* %47) #9
  br label %48

48:                                               ; preds = %46, %42, %38, %25
  %49 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %26, i64 0, i32 2, i32 0, i32 1
  %50 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %27, i64 0, i32 2, i32 0, i32 1
  %51 = bitcast i32* %50 to i64*
  %52 = bitcast i32* %49 to i64*
  %53 = load i64, i64* %51, align 8
  store i64 %53, i64* %52, align 8
  %54 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %26, i64 0, i32 2, i32 1
  %55 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %27, i64 0, i32 2, i32 1
  %56 = bitcast %struct.SkISize* %55 to i64*
  %57 = bitcast %struct.SkISize* %54 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %27, i64 1
  %60 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %26, i64 1
  %61 = icmp eq %class.SkPixmap* %59, %24
  br i1 %61, label %62, label %25

62:                                               ; preds = %48, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkYUVAPixmaps15toYUVALocationsEv(%"struct.std::__1::array.13"* noalias sret, %class.SkYUVAPixmaps*) local_unnamed_addr #0 align 2 {
  %3 = alloca [4 x i32], align 16
  %4 = bitcast [4 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 0
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 1
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 2
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 3
  %9 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast [4 x i32]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 16, i1 false)
  %11 = load i32, i32* %9, align 8
  %12 = icmp ult i32 %11, 21
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  tail call void @llvm.trap() #8
  unreachable

14:                                               ; preds = %2
  %15 = sext i32 %11 to i64
  %16 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK13SkYUVAPixmaps15toYUVALocationsEv.11, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %5, align 16
  %18 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 1, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ult i32 %19, 21
  br i1 %20, label %22, label %21

21:                                               ; preds = %14
  tail call void @llvm.trap() #8
  unreachable

22:                                               ; preds = %14
  %23 = sext i32 %19 to i64
  %24 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK13SkYUVAPixmaps15toYUVALocationsEv.11, i64 0, i64 %23
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %6, align 4
  %26 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 2, i32 2, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp ult i32 %27, 21
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  tail call void @llvm.trap() #8
  unreachable

30:                                               ; preds = %22
  %31 = sext i32 %27 to i64
  %32 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK13SkYUVAPixmaps15toYUVALocationsEv.11, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %7, align 8
  %34 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0, i32 0, i64 3, i32 2, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp ult i32 %35, 21
  br i1 %36, label %38, label %37

37:                                               ; preds = %30
  tail call void @llvm.trap() #8
  unreachable

38:                                               ; preds = %30
  %39 = sext i32 %35 to i64
  %40 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK13SkYUVAPixmaps15toYUVALocationsEv.11, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %8, align 4
  %42 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 2
  %43 = bitcast %"struct.std::__1::array.13"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 -86, i64 32, i1 false)
  call void @_ZNK10SkYUVAInfo15toYUVALocationsEPKj(%"struct.std::__1::array.13"* sret %0, %class.SkYUVAInfo* %42, i32* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret void
}

declare void @_ZNK10SkYUVAInfo15toYUVALocationsEPKj(%"struct.std::__1::array.13"* sret, %class.SkYUVAInfo*, i32*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"struct.std::__1::array"* @_ZNSt3__15arrayI11SkImageInfoLm4EEaSERKS2_(%"struct.std::__1::array"*, %"struct.std::__1::array"* dereferenceable(96)) local_unnamed_addr #4 comdat align 2 {
  %3 = icmp eq %"struct.std::__1::array"* %0, %1
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.SkColorSpace*, %class.SkColorSpace** %5, align 8
  %7 = icmp eq %class.SkColorSpace* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %8, %4
  %12 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  store %class.SkColorSpace* %6, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = bitcast %class.SkColorSpace* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #9
  br label %21

21:                                               ; preds = %2, %11, %15, %19
  %22 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 0, i32 1
  %24 = bitcast i32* %23 to i64*
  %25 = bitcast i32* %22 to i64*
  %26 = load i64, i64* %24, align 8
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 1
  %29 = bitcast %struct.SkISize* %28 to i64*
  %30 = bitcast %struct.SkISize* %27 to i64*
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  br i1 %3, label %49, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %33, align 8
  %35 = icmp eq %class.SkColorSpace* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  br label %39

39:                                               ; preds = %36, %32
  %40 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %41 = load %class.SkColorSpace*, %class.SkColorSpace** %40, align 8
  store %class.SkColorSpace* %34, %class.SkColorSpace** %40, align 8
  %42 = icmp eq %class.SkColorSpace* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = bitcast %class.SkColorSpace* %41 to i8*
  tail call void @_ZdlPv(i8* %48) #9
  br label %49

49:                                               ; preds = %47, %43, %39, %21
  %50 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 0, i32 1
  %51 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 0, i32 1
  %52 = bitcast i32* %51 to i64*
  %53 = bitcast i32* %50 to i64*
  %54 = load i64, i64* %52, align 8
  store i64 %54, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 1
  %56 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 1
  %57 = bitcast %struct.SkISize* %56 to i64*
  %58 = bitcast %struct.SkISize* %55 to i64*
  %59 = load i64, i64* %57, align 8
  store i64 %59, i64* %58, align 8
  br i1 %3, label %77, label %60

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 0, i32 0, i32 0
  %62 = load %class.SkColorSpace*, %class.SkColorSpace** %61, align 8
  %63 = icmp eq %class.SkColorSpace* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 1 monotonic
  br label %67

67:                                               ; preds = %64, %60
  %68 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 0, i32 0, i32 0
  %69 = load %class.SkColorSpace*, %class.SkColorSpace** %68, align 8
  store %class.SkColorSpace* %62, %class.SkColorSpace** %68, align 8
  %70 = icmp eq %class.SkColorSpace* %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = bitcast %class.SkColorSpace* %69 to i8*
  tail call void @_ZdlPv(i8* %76) #9
  br label %77

77:                                               ; preds = %75, %71, %67, %49
  %78 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 0, i32 1
  %80 = bitcast i32* %79 to i64*
  %81 = bitcast i32* %78 to i64*
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 1
  %84 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 1
  %85 = bitcast %struct.SkISize* %84 to i64*
  %86 = bitcast %struct.SkISize* %83 to i64*
  %87 = load i64, i64* %85, align 8
  store i64 %87, i64* %86, align 8
  br i1 %3, label %105, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 0, i32 0, i32 0
  %90 = load %class.SkColorSpace*, %class.SkColorSpace** %89, align 8
  %91 = icmp eq %class.SkColorSpace* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 1 monotonic
  br label %95

95:                                               ; preds = %92, %88
  %96 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 0, i32 0, i32 0
  %97 = load %class.SkColorSpace*, %class.SkColorSpace** %96, align 8
  store %class.SkColorSpace* %90, %class.SkColorSpace** %96, align 8
  %98 = icmp eq %class.SkColorSpace* %97, null
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = bitcast %class.SkColorSpace* %97 to i8*
  tail call void @_ZdlPv(i8* %104) #9
  br label %105

105:                                              ; preds = %103, %99, %95, %77
  %106 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 0, i32 1
  %107 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 0, i32 1
  %108 = bitcast i32* %107 to i64*
  %109 = bitcast i32* %106 to i64*
  %110 = load i64, i64* %108, align 8
  store i64 %110, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 1
  %112 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 1
  %113 = bitcast %struct.SkISize* %112 to i64*
  %114 = bitcast %struct.SkISize* %111 to i64*
  %115 = load i64, i64* %113, align 8
  store i64 %115, i64* %114, align 8
  ret %"struct.std::__1::array"* %0
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i32 @_ZN10SkYUVAInfo15PlaneDimensionsE7SkISizeNS_11PlaneConfigENS_11SubsamplingE15SkEncodedOriginPS0_(i64, i32, i32, i32, %struct.SkISize*) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #7

declare zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
