; ModuleID = 'gen/services/device/public/mojom/screen_orientation.mojom-test-utils.cc'
source_filename = "gen/services/device/public/mojom/screen_orientation.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::mojom::ScreenOrientationAsyncWaiter" = type { %"class.device::mojom::ScreenOrientation"* }
%"class.device::mojom::ScreenOrientation" = type { i32 (...)** }
%"class.device::mojom::ScreenOrientationListenerAsyncWaiter" = type { %"class.device::mojom::ScreenOrientationListener"* }
%"class.device::mojom::ScreenOrientationListener" = type { i32 (...)** }
%"class.device::mojom::ScreenOrientationInterceptorForTesting" = type { %"class.device::mojom::ScreenOrientation" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.9, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.2", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.4" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.9 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.10" }>
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.12", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.13" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.device::mojom::ScreenOrientationListenerInterceptorForTesting" = type { %"class.device::mojom::ScreenOrientationListener" }
%"class.base::OnceCallback.18" = type { %"class.base::internal::CallbackBase" }

$_ZN6device5mojom17ScreenOrientationD2Ev = comdat any

$_ZN6device5mojom38ScreenOrientationInterceptorForTestingD0Ev = comdat any

$_ZN6device5mojom25ScreenOrientationListenerD2Ev = comdat any

$_ZN6device5mojom46ScreenOrientationListenerInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [16 x i8] c"LockOrientation\00", align 1
@.str.1 = private unnamed_addr constant [72 x i8] c"gen/services/device/public/mojom/screen_orientation.mojom-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"IsAutoRotateEnabledByUser\00", align 1
@_ZTVN6device5mojom38ScreenOrientationInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::mojom::ScreenOrientation"*)* @_ZN6device5mojom17ScreenOrientationD2Ev to i8*), i8* bitcast (void (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)* @_ZN6device5mojom38ScreenOrientationInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*, i32, %"class.base::OnceCallback"*)* @_ZN6device5mojom38ScreenOrientationInterceptorForTesting15LockOrientationENS0_25ScreenOrientationLockTypeEN4base12OnceCallbackIFvNS0_27ScreenOrientationLockResultEEEE to i8*), i8* bitcast (void (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)* @_ZN6device5mojom38ScreenOrientationInterceptorForTesting17UnlockOrientationEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN6device5mojom46ScreenOrientationListenerInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::mojom::ScreenOrientationListener"*)* @_ZN6device5mojom25ScreenOrientationListenerD2Ev to i8*), i8* bitcast (void (%"class.device::mojom::ScreenOrientationListenerInterceptorForTesting"*)* @_ZN6device5mojom46ScreenOrientationListenerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.device::mojom::ScreenOrientationListenerInterceptorForTesting"*, %"class.base::OnceCallback.18"*)* @_ZN6device5mojom46ScreenOrientationListenerInterceptorForTesting25IsAutoRotateEnabledByUserEN4base12OnceCallbackIFvbEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN6device5mojom28ScreenOrientationAsyncWaiterC1EPNS0_17ScreenOrientationE = hidden unnamed_addr alias void (%"class.device::mojom::ScreenOrientationAsyncWaiter"*, %"class.device::mojom::ScreenOrientation"*), void (%"class.device::mojom::ScreenOrientationAsyncWaiter"*, %"class.device::mojom::ScreenOrientation"*)* @_ZN6device5mojom28ScreenOrientationAsyncWaiterC2EPNS0_17ScreenOrientationE
@_ZN6device5mojom28ScreenOrientationAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.device::mojom::ScreenOrientationAsyncWaiter"*), void (%"class.device::mojom::ScreenOrientationAsyncWaiter"*)* @_ZN6device5mojom28ScreenOrientationAsyncWaiterD2Ev
@_ZN6device5mojom36ScreenOrientationListenerAsyncWaiterC1EPNS0_25ScreenOrientationListenerE = hidden unnamed_addr alias void (%"class.device::mojom::ScreenOrientationListenerAsyncWaiter"*, %"class.device::mojom::ScreenOrientationListener"*), void (%"class.device::mojom::ScreenOrientationListenerAsyncWaiter"*, %"class.device::mojom::ScreenOrientationListener"*)* @_ZN6device5mojom36ScreenOrientationListenerAsyncWaiterC2EPNS0_25ScreenOrientationListenerE
@_ZN6device5mojom36ScreenOrientationListenerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.device::mojom::ScreenOrientationListenerAsyncWaiter"*), void (%"class.device::mojom::ScreenOrientationListenerAsyncWaiter"*)* @_ZN6device5mojom36ScreenOrientationListenerAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5mojom38ScreenOrientationInterceptorForTesting15LockOrientationENS0_25ScreenOrientationLockTypeEN4base12OnceCallbackIFvNS0_27ScreenOrientationLockResultEEEE(%"class.device::mojom::ScreenOrientationInterceptorForTesting"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.device::mojom::ScreenOrientationInterceptorForTesting"* %0 to %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)***
  %6 = load %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)**, %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)*, %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)** %6, i64 4
  %8 = load %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)*, %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.device::mojom::ScreenOrientation"* %8(%"class.device::mojom::ScreenOrientationInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.device::mojom::ScreenOrientation"* %9 to void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)**, void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)*, void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)** %15, i64 2
  %17 = load void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)*, void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.device::mojom::ScreenOrientation"* %9, i32 %1, %"class.base::OnceCallback"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5mojom38ScreenOrientationInterceptorForTesting17UnlockOrientationEv(%"class.device::mojom::ScreenOrientationInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.device::mojom::ScreenOrientationInterceptorForTesting"* %0 to %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)***
  %3 = load %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)**, %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)*, %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)** %3, i64 4
  %5 = load %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)*, %"class.device::mojom::ScreenOrientation"* (%"class.device::mojom::ScreenOrientationInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.device::mojom::ScreenOrientation"* %5(%"class.device::mojom::ScreenOrientationInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.device::mojom::ScreenOrientation"* %6 to void (%"class.device::mojom::ScreenOrientation"*)***
  %8 = load void (%"class.device::mojom::ScreenOrientation"*)**, void (%"class.device::mojom::ScreenOrientation"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.device::mojom::ScreenOrientation"*)*, void (%"class.device::mojom::ScreenOrientation"*)** %8, i64 3
  %10 = load void (%"class.device::mojom::ScreenOrientation"*)*, void (%"class.device::mojom::ScreenOrientation"*)** %9, align 8
  tail call void %10(%"class.device::mojom::ScreenOrientation"* %6) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6device5mojom28ScreenOrientationAsyncWaiterC2EPNS0_17ScreenOrientationE(%"class.device::mojom::ScreenOrientationAsyncWaiter"* nocapture, %"class.device::mojom::ScreenOrientation"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.device::mojom::ScreenOrientationAsyncWaiter", %"class.device::mojom::ScreenOrientationAsyncWaiter"* %0, i64 0, i32 0
  store %"class.device::mojom::ScreenOrientation"* %1, %"class.device::mojom::ScreenOrientation"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device5mojom28ScreenOrientationAsyncWaiterD2Ev(%"class.device::mojom::ScreenOrientationAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5mojom28ScreenOrientationAsyncWaiter15LockOrientationENS0_25ScreenOrientationLockTypeEPNS0_27ScreenOrientationLockResultE(%"class.device::mojom::ScreenOrientationAsyncWaiter"* nocapture readonly, i32, i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint i32* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %9 = getelementptr inbounds %"class.device::mojom::ScreenOrientationAsyncWaiter", %"class.device::mojom::ScreenOrientationAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.device::mojom::ScreenOrientation"*, %"class.device::mojom::ScreenOrientation"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN6device5mojom28ScreenOrientationAsyncWaiter15LockOrientationENS4_25ScreenOrientationLockTypeEPNS4_27ScreenOrientationLockResultEE3$_0JPNS_7RunLoopES8_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN6device5mojom28ScreenOrientationAsyncWaiter15LockOrientationENS3_25ScreenOrientationLockTypeEPNS3_27ScreenOrientationLockResultEE3$_0JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !2
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !2
  %18 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !2
  %19 = bitcast %"class.device::mojom::ScreenOrientation"* %10 to void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)**, void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)*, void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)** %20, i64 2
  %22 = load void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)*, void (%"class.device::mojom::ScreenOrientation"*, i32, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.device::mojom::ScreenOrientation"* %10, i32 %1, %"class.base::OnceCallback"* nonnull %5) #10
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 55) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5mojom46ScreenOrientationListenerInterceptorForTesting25IsAutoRotateEnabledByUserEN4base12OnceCallbackIFvbEEE(%"class.device::mojom::ScreenOrientationListenerInterceptorForTesting"*, %"class.base::OnceCallback.18"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.18", align 8
  %4 = bitcast %"class.device::mojom::ScreenOrientationListenerInterceptorForTesting"* %0 to %"class.device::mojom::ScreenOrientationListener"* (%"class.device::mojom::ScreenOrientationListenerInterceptorForTesting"*)***
  %5 = load %"class.device::mojom::ScreenOrientationListener"* (%"class.device::mojom::ScreenOrientationListenerInterceptorForTesting"*)**, %"class.device::mojom::ScreenOrientationListener"* (%"class.device::mojom::ScreenOrientationListenerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.device::mojom::ScreenOrientationListener"* (%"class.device::mojom::ScreenOrientationListenerInterceptorForTesting"*)*, %"class.device::mojom::ScreenOrientationListener"* (%"class.device::mojom::ScreenOrientationListenerInterceptorForTesting"*)** %5, i64 3
  %7 = load %"class.device::mojom::ScreenOrientationListener"* (%"class.device::mojom::ScreenOrientationListenerInterceptorForTesting"*)*, %"class.device::mojom::ScreenOrientationListener"* (%"class.device::mojom::ScreenOrientationListenerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.device::mojom::ScreenOrientationListener"* %7(%"class.device::mojom::ScreenOrientationListenerInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback.18", %"class.base::OnceCallback.18"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.18"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.18"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.device::mojom::ScreenOrientationListener"* %8 to void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)***
  %14 = load void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)**, void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)*, void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)** %14, i64 2
  %16 = load void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)*, void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)** %15, align 8
  call void %16(%"class.device::mojom::ScreenOrientationListener"* %8, %"class.base::OnceCallback.18"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback.18", %"class.base::OnceCallback.18"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6device5mojom36ScreenOrientationListenerAsyncWaiterC2EPNS0_25ScreenOrientationListenerE(%"class.device::mojom::ScreenOrientationListenerAsyncWaiter"* nocapture, %"class.device::mojom::ScreenOrientationListener"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.device::mojom::ScreenOrientationListenerAsyncWaiter", %"class.device::mojom::ScreenOrientationListenerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.device::mojom::ScreenOrientationListener"* %1, %"class.device::mojom::ScreenOrientationListener"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device5mojom36ScreenOrientationListenerAsyncWaiterD2Ev(%"class.device::mojom::ScreenOrientationListenerAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5mojom36ScreenOrientationListenerAsyncWaiter25IsAutoRotateEnabledByUserEPb(%"class.device::mojom::ScreenOrientationListenerAsyncWaiter"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback.18", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = ptrtoint i8* %1 to i64
  %7 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #10
  %8 = getelementptr inbounds %"class.device::mojom::ScreenOrientationListenerAsyncWaiter", %"class.device::mojom::ScreenOrientationListenerAsyncWaiter"* %0, i64 0, i32 0
  %9 = load %"class.device::mojom::ScreenOrientationListener"*, %"class.device::mojom::ScreenOrientationListener"** %8, align 8
  %10 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %11 = call i8* @_Znwm(i64 56) #11, !noalias !7
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN6device5mojom36ScreenOrientationListenerAsyncWaiter25IsAutoRotateEnabledByUserEPbE3$_1JPNS_7RunLoopES6_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN6device5mojom36ScreenOrientationListenerAsyncWaiter25IsAutoRotateEnabledByUserEPbE3$_1JPNS_7RunLoopES5_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !7
  %13 = getelementptr inbounds i8, i8* %11, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8, !noalias !7
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 8, !noalias !7
  %17 = bitcast %"class.base::OnceCallback.18"* %4 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !7
  %18 = bitcast %"class.device::mojom::ScreenOrientationListener"* %9 to void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)***
  %19 = load void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)**, void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)*, void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)** %19, i64 2
  %21 = load void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)*, void (%"class.device::mojom::ScreenOrientationListener"*, %"class.base::OnceCallback.18"*)** %20, align 8
  call void %21(%"class.device::mojom::ScreenOrientationListener"* %9, %"class.base::OnceCallback.18"* nonnull %4) #10
  %22 = getelementptr inbounds %"class.base::OnceCallback.18", %"class.base::OnceCallback.18"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  %23 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 81) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6device5mojom17ScreenOrientationD2Ev(%"class.device::mojom::ScreenOrientation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6device5mojom38ScreenOrientationInterceptorForTestingD0Ev(%"class.device::mojom::ScreenOrientationInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6device5mojom25ScreenOrientationListenerD2Ev(%"class.device::mojom::ScreenOrientationListener"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6device5mojom46ScreenOrientationListenerInterceptorForTestingD0Ev(%"class.device::mojom::ScreenOrientationListenerInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN6device5mojom28ScreenOrientationAsyncWaiter15LockOrientationENS4_25ScreenOrientationLockTypeEPNS4_27ScreenOrientationLockResultEE3$_0JPNS_7RunLoopES8_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN6device5mojom28ScreenOrientationAsyncWaiter15LockOrientationENS3_25ScreenOrientationLockTypeEPNS3_27ScreenOrientationLockResultEE3$_0JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN6device5mojom36ScreenOrientationListenerAsyncWaiter25IsAutoRotateEnabledByUserEPbE3$_1JPNS_7RunLoopES6_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb"(%"class.base::internal::BindStateBase"* nocapture readonly, i1 zeroext) #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i8**
  %8 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %9 = load i8*, i8** %7, align 8
  store i8 %3, i8* %9, align 1
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN6device5mojom36ScreenOrientationListenerAsyncWaiter25IsAutoRotateEnabledByUserEPbE3$_1JPNS_7RunLoopES5_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN6device5mojom28ScreenOrientationAsyncWaiter15LockOrientationENS4_25ScreenOrientationLockTypeEPNS4_27ScreenOrientationLockResultEE3$_0JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN6device5mojom28ScreenOrientationAsyncWaiter15LockOrientationENS4_25ScreenOrientationLockTypeEPNS4_27ScreenOrientationLockResultEE3$_0JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN6device5mojom28ScreenOrientationAsyncWaiter15LockOrientationENS2_25ScreenOrientationLockTypeEPNS2_27ScreenOrientationLockResultEE3$_0JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN6device5mojom28ScreenOrientationAsyncWaiter15LockOrientationENS2_25ScreenOrientationLockTypeEPNS2_27ScreenOrientationLockResultEE3$_0JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN6device5mojom36ScreenOrientationListenerAsyncWaiter25IsAutoRotateEnabledByUserEPbE3$_1JPNS_7RunLoopERS6_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN6device5mojom36ScreenOrientationListenerAsyncWaiter25IsAutoRotateEnabledByUserEPbE3$_1JPNS_7RunLoopERS6_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN6device5mojom36ScreenOrientationListenerAsyncWaiter25IsAutoRotateEnabledByUserEPbE3$_1JPNS_7RunLoopERS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN6device5mojom36ScreenOrientationListenerAsyncWaiter25IsAutoRotateEnabledByUserEPbE3$_1JPNS_7RunLoopERS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
