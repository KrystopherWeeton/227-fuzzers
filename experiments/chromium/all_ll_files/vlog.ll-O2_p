; ModuleID = '../../base/vlog.cc'
source_filename = "../../base/vlog.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.logging::VlogInfo::VmodulePattern" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::VlogInfo" = type { %"class.std::__1::vector", i32* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.logging::VlogInfo::VmodulePattern"*, %"struct.logging::VlogInfo::VmodulePattern"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.logging::VlogInfo::VmodulePattern"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.8" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::pair"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN7logging8VlogInfo14VmodulePatternENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

@_ZN7logging8VlogInfo17kDefaultVlogLevelE = hidden local_unnamed_addr constant i32 0, align 4
@.str = private unnamed_addr constant [3 x i8] c"\5C/\00", align 1
@_ZZN7logging12_GLOBAL__N_19GetModuleERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE10kInlSuffix = internal constant [5 x i8] c"-inl\00", align 1

@_ZN7logging8VlogInfo14VmodulePatternC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = hidden unnamed_addr alias void (%"struct.logging::VlogInfo::VmodulePattern"*, %"class.std::__1::basic_string"*), void (%"struct.logging::VlogInfo::VmodulePattern"*, %"class.std::__1::basic_string"*)* @_ZN7logging8VlogInfo14VmodulePatternC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
@_ZN7logging8VlogInfo14VmodulePatternC1Ev = hidden unnamed_addr alias void (%"struct.logging::VlogInfo::VmodulePattern"*), void (%"struct.logging::VlogInfo::VmodulePattern"*)* @_ZN7logging8VlogInfo14VmodulePatternC2Ev
@_ZN7logging8VlogInfoC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_Pi = hidden unnamed_addr alias void (%"class.logging::VlogInfo"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i32*), void (%"class.logging::VlogInfo"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i32*)* @_ZN7logging8VlogInfoC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_Pi
@_ZN7logging8VlogInfoD1Ev = hidden unnamed_addr alias void (%"class.logging::VlogInfo"*), void (%"class.logging::VlogInfo"*)* @_ZN7logging8VlogInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7logging8VlogInfo14VmodulePatternC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.logging::VlogInfo::VmodulePattern"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %0 to i8*
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #10
  br label %17

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #10
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %17

17:                                               ; preds = %7, %10
  %18 = phi i8* [ %9, %7 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %0, i64 0, i32 1
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %0, i64 0, i32 2
  store i32 0, i32* %20, align 4
  %21 = load i8, i8* %4, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %21 to i64
  %28 = select i1 %22, i8* %24, i8* %18
  %29 = select i1 %22, i64 %26, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %17
  %32 = getelementptr inbounds i8, i8* %28, i64 %29
  br label %33

33:                                               ; preds = %45, %31
  %34 = phi i8* [ %28, %31 ], [ %46, %45 ]
  %35 = load i8, i8* %34, align 1
  switch i8 %35, label %45 [
    i8 92, label %36
    i8 47, label %36
  ]

36:                                               ; preds = %33, %33
  %37 = icmp eq i8* %34, %32
  %38 = ptrtoint i8* %34 to i64
  %39 = ptrtoint i8* %28 to i64
  %40 = sub i64 %38, %39
  %41 = icmp eq i64 %40, -1
  %42 = or i1 %37, %41
  br i1 %42, label %44, label %43

43:                                               ; preds = %36
  store i32 1, i32* %20, align 4
  br label %44

44:                                               ; preds = %45, %36, %17, %43
  ret void

45:                                               ; preds = %33
  %46 = getelementptr inbounds i8, i8* %34, i64 1
  %47 = icmp eq i8* %46, %32
  br i1 %47, label %44, label %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7logging8VlogInfo14VmodulePatternC2Ev(%"struct.logging::VlogInfo::VmodulePattern"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7logging8VlogInfoC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_Pi(%"class.logging::VlogInfo"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32*) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::vector.6", align 8
  %7 = alloca %"struct.logging::VlogInfo::VmodulePattern", align 8
  %8 = getelementptr inbounds %"class.logging::VlogInfo", %"class.logging::VlogInfo"* %0, i64 0, i32 0
  %9 = bitcast %"class.logging::VlogInfo"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #10
  %10 = getelementptr inbounds %"class.logging::VlogInfo", %"class.logging::VlogInfo"* %0, i64 0, i32 1
  store i32* %3, i32** %10, align 8
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #10
  store i32 0, i32* %5, align 4
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %25 = select i1 %15, i8* %23, i8* %24
  %26 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %25, i64 %19, i32* nonnull %5) #10
  br i1 %26, label %27, label %31

27:                                               ; preds = %21
  %28 = load i32, i32* %5, align 4
  %29 = sub nsw i32 0, %28
  %30 = load i32*, i32** %10, align 8
  store i32 %29, i32* %30, align 4
  br label %31

31:                                               ; preds = %27, %21, %4
  %32 = bitcast %"class.std::__1::vector.6"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #10
  %33 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %6, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 24, i1 false) #10
  %35 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %42 = select i1 %38, i8* %40, i8* %41
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %37 to i64
  %46 = select i1 %38, i64 %44, i64 %45
  %47 = call zeroext i1 @_ZN4base28SplitStringIntoKeyValuePairsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEccPNS1_6vectorINS1_4pairINS1_12basic_stringIcS3_NS1_9allocatorIcEEEESA_EENS8_ISB_EEEE(i8* %42, i64 %46, i8 signext 61, i8 signext 44, %"class.std::__1::vector.6"* nonnull %6) #10
  %48 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %33, align 8
  %49 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %34, align 8
  %50 = icmp eq %"struct.std::__1::pair"* %48, %49
  br i1 %50, label %67, label %51

51:                                               ; preds = %31
  %52 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %7 to i8*
  %53 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %7, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %7, i64 0, i32 2
  %57 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %7, i64 0, i32 0
  %58 = getelementptr inbounds %"class.logging::VlogInfo", %"class.logging::VlogInfo"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.logging::VlogInfo", %"class.logging::VlogInfo"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = bitcast i32* %55 to i64*
  %63 = bitcast %"struct.logging::VlogInfo::VmodulePattern"** %58 to i64*
  %64 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %7 to i8*
  br label %101

65:                                               ; preds = %182
  %66 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %33, align 8
  br label %67

67:                                               ; preds = %65, %31
  %68 = phi %"struct.std::__1::pair"* [ %48, %31 ], [ %66, %65 ]
  %69 = phi %"struct.std::__1::pair"* [ %48, %31 ], [ %183, %65 ]
  %70 = icmp eq %"struct.std::__1::pair"* %68, null
  br i1 %70, label %100, label %71

71:                                               ; preds = %67
  %72 = bitcast %"struct.std::__1::pair"* %68 to i8*
  %73 = icmp eq %"struct.std::__1::pair"* %69, %68
  br i1 %73, label %98, label %74

74:                                               ; preds = %71, %93
  %75 = phi %"struct.std::__1::pair"* [ %76, %93 ], [ %69, %71 ]
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 -1
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 -1, i32 1
  %78 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #11
  br label %85

85:                                               ; preds = %82, %74
  %86 = bitcast %"struct.std::__1::pair"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %90, %85
  %94 = icmp eq %"struct.std::__1::pair"* %76, %68
  br i1 %94, label %95, label %74

95:                                               ; preds = %93
  %96 = bitcast %"class.std::__1::vector.6"* %6 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %71
  %99 = phi i8* [ %97, %95 ], [ %72, %71 ]
  store %"struct.std::__1::pair"* %68, %"struct.std::__1::pair"** %34, align 8
  call void @_ZdlPv(i8* %99) #11
  br label %100

100:                                              ; preds = %67, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #10
  ret void

101:                                              ; preds = %51, %182
  %102 = phi %"struct.std::__1::pair"* [ %48, %51 ], [ %183, %182 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #10
  %103 = bitcast %"struct.std::__1::pair"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 32, i1 false)
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %101
  %108 = bitcast %"struct.std::__1::pair"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 8 %108, i64 24, i1 false) #10
  br label %115

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %57, i8* %111, i64 %113) #10
  %114 = bitcast %"struct.std::__1::pair"* %102 to i8*
  br label %115

115:                                              ; preds = %109, %107
  %116 = phi i8* [ %108, %107 ], [ %114, %109 ]
  store i32 0, i32* %55, align 8
  store i32 0, i32* %56, align 4
  %117 = load i8, i8* %104, align 1
  %118 = icmp slt i8 %117, 0
  %119 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = zext i8 %117 to i64
  %124 = select i1 %118, i8* %120, i8* %116
  %125 = select i1 %118, i64 %122, i64 %123
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %115
  %128 = getelementptr inbounds i8, i8* %124, i64 %125
  br label %129

129:                                              ; preds = %140, %127
  %130 = phi i8* [ %124, %127 ], [ %141, %140 ]
  %131 = load i8, i8* %130, align 1
  switch i8 %131, label %140 [
    i8 92, label %132
    i8 47, label %132
  ]

132:                                              ; preds = %129, %129
  %133 = icmp eq i8* %130, %128
  %134 = ptrtoint i8* %130 to i64
  %135 = ptrtoint i8* %124 to i64
  %136 = sub i64 %134, %135
  %137 = icmp eq i64 %136, -1
  %138 = or i1 %133, %137
  br i1 %138, label %143, label %139

139:                                              ; preds = %132
  store i32 1, i32* %56, align 4
  br label %143

140:                                              ; preds = %129
  %141 = getelementptr inbounds i8, i8* %130, i64 1
  %142 = icmp eq i8* %141, %128
  br i1 %142, label %143, label %129

143:                                              ; preds = %140, %115, %132, %139
  %144 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 1
  %145 = bitcast %"class.std::__1::basic_string"* %144 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = bitcast %"class.std::__1::basic_string"* %144 to i8*
  %152 = select i1 %148, i8* %150, i8* %151
  %153 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %154 = load i64, i64* %153, align 8
  %155 = zext i8 %147 to i64
  %156 = select i1 %148, i64 %154, i64 %155
  %157 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %152, i64 %156, i32* %55) #10
  %158 = load %"struct.logging::VlogInfo::VmodulePattern"*, %"struct.logging::VlogInfo::VmodulePattern"** %58, align 8
  %159 = load %"struct.logging::VlogInfo::VmodulePattern"*, %"struct.logging::VlogInfo::VmodulePattern"** %59, align 8
  %160 = icmp eq %"struct.logging::VlogInfo::VmodulePattern"* %158, %159
  br i1 %160, label %176, label %161

161:                                              ; preds = %143
  %162 = load i8, i8* %61, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %161
  %165 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* nonnull align 8 %52, i64 24, i1 false) #10
  br label %170

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %158, i64 0, i32 0
  %168 = load i8*, i8** %53, align 8
  %169 = load i64, i64* %54, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %167, i8* %168, i64 %169) #10
  br label %170

170:                                              ; preds = %166, %164
  %171 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %158, i64 0, i32 1
  %172 = bitcast i32* %171 to i64*
  %173 = load i64, i64* %62, align 8
  store i64 %173, i64* %172, align 8
  %174 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %158, i64 1
  %175 = ptrtoint %"struct.logging::VlogInfo::VmodulePattern"* %174 to i64
  store i64 %175, i64* %63, align 8
  br label %177

176:                                              ; preds = %143
  call void @_ZNSt3__16vectorIN7logging8VlogInfo14VmodulePatternENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* %8, %"struct.logging::VlogInfo::VmodulePattern"* nonnull dereferenceable(32) %7) #10
  br label %177

177:                                              ; preds = %170, %176
  %178 = load i8, i8* %61, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %177
  %181 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %181) #11
  br label %182

182:                                              ; preds = %177, %180
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #10
  %183 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 1
  %184 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %34, align 8
  %185 = icmp eq %"struct.std::__1::pair"* %183, %184
  br i1 %185, label %65, label %101
}

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7logging8VlogInfo15SetMaxVlogLevelEi(%"class.logging::VlogInfo"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = sub nsw i32 0, %1
  %4 = getelementptr inbounds %"class.logging::VlogInfo", %"class.logging::VlogInfo"* %0, i64 0, i32 1
  %5 = load i32*, i32** %4, align 8
  store i32 %3, i32* %5, align 4
  ret void
}

declare zeroext i1 @_ZN4base28SplitStringIntoKeyValuePairsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEccPNS1_6vectorINS1_4pairINS1_12basic_stringIcS3_NS1_9allocatorIcEEEESA_EENS8_ISB_EEEE(i8*, i64, i8 signext, i8 signext, %"class.std::__1::vector.6"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7logging8VlogInfoD2Ev(%"class.logging::VlogInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.logging::VlogInfo", %"class.logging::VlogInfo"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.logging::VlogInfo::VmodulePattern"*, %"struct.logging::VlogInfo::VmodulePattern"** %2, align 8
  %4 = icmp eq %"struct.logging::VlogInfo::VmodulePattern"* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %3 to i8*
  %7 = getelementptr inbounds %"class.logging::VlogInfo", %"class.logging::VlogInfo"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.logging::VlogInfo::VmodulePattern"*, %"struct.logging::VlogInfo::VmodulePattern"** %7, align 8
  %9 = icmp eq %"struct.logging::VlogInfo::VmodulePattern"* %8, %3
  br i1 %9, label %25, label %10

10:                                               ; preds = %5, %20
  %11 = phi %"struct.logging::VlogInfo::VmodulePattern"* [ %12, %20 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %11, i64 -1
  %13 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %17, %10
  %21 = icmp eq %"struct.logging::VlogInfo::VmodulePattern"* %12, %3
  br i1 %21, label %22, label %10

22:                                               ; preds = %20
  %23 = bitcast %"class.logging::VlogInfo"* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %5
  %26 = phi i8* [ %24, %22 ], [ %6, %5 ]
  store %"struct.logging::VlogInfo::VmodulePattern"* %3, %"struct.logging::VlogInfo::VmodulePattern"** %7, align 8
  tail call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %1, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7logging8VlogInfo12GetVlogLevelERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.logging::VlogInfo"* nocapture readonly, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::BasicStringPiece"*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"class.base::BasicStringPiece"*
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = getelementptr inbounds %"class.logging::VlogInfo", %"class.logging::VlogInfo"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.logging::VlogInfo::VmodulePattern"*, %"struct.logging::VlogInfo::VmodulePattern"** %9, align 8
  %11 = getelementptr inbounds %"class.logging::VlogInfo", %"class.logging::VlogInfo"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load %"struct.logging::VlogInfo::VmodulePattern"*, %"struct.logging::VlogInfo::VmodulePattern"** %11, align 8
  %13 = icmp eq %"struct.logging::VlogInfo::VmodulePattern"* %10, %12
  br i1 %13, label %90, label %14

14:                                               ; preds = %2
  %15 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = bitcast <2 x i64>* %3 to i8*
  %17 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16)
  %18 = bitcast <2 x i64>* %3 to i8**
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %20 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %16, i8* align 8 %20, i64 16, i1 false) #10
  %21 = load i8*, i8** %18, align 16
  %22 = load i64, i64* %19, align 8
  %23 = tail call i64 @_ZN4base8internal12find_last_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %21, i64 %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2, i64 -1) #10
  %24 = icmp eq i64 %23, -1
  br i1 %24, label %28, label %25

25:                                               ; preds = %14
  %26 = add nuw i64 %23, 1
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %4, i64 %26) #10
  %27 = load i64, i64* %19, align 8
  br label %28

28:                                               ; preds = %25, %14
  %29 = phi i64 [ %22, %14 ], [ %27, %25 ]
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %45, label %31

31:                                               ; preds = %28
  %32 = add i64 %29, -1
  %33 = load i8*, i8** %18, align 16
  %34 = getelementptr inbounds i8, i8* %33, i64 %32
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 46
  br i1 %36, label %45, label %37

37:                                               ; preds = %31, %40
  %38 = phi i64 [ %41, %40 ], [ %32, %31 ]
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %37
  %41 = add i64 %38, -1
  %42 = getelementptr inbounds i8, i8* %33, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 46
  br i1 %44, label %45, label %37

45:                                               ; preds = %40, %37, %31, %28
  %46 = phi i64 [ -1, %28 ], [ %32, %31 ], [ -1, %37 ], [ %41, %40 ]
  %47 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 0, i64 %46) #10
  %48 = extractvalue { i8*, i64 } %47, 0
  %49 = extractvalue { i8*, i64 } %47, 1
  store i8* %48, i8** %18, align 16
  store i64 %49, i64* %19, align 8
  %50 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %48, i64 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN7logging12_GLOBAL__N_19GetModuleERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE10kInlSuffix, i64 0, i64 0), i64 4, i32 0) #10
  br i1 %50, label %51, label %52

51:                                               ; preds = %45
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"* nonnull %4, i64 4) #10
  br label %52

52:                                               ; preds = %45, %51
  %53 = load <2 x i64>, <2 x i64>* %3, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16)
  store <2 x i64> %53, <2 x i64>* %5, align 16
  %54 = load %"struct.logging::VlogInfo::VmodulePattern"*, %"struct.logging::VlogInfo::VmodulePattern"** %9, align 8
  %55 = load %"struct.logging::VlogInfo::VmodulePattern"*, %"struct.logging::VlogInfo::VmodulePattern"** %11, align 8
  %56 = icmp eq %"struct.logging::VlogInfo::VmodulePattern"* %54, %55
  br i1 %56, label %65, label %57

57:                                               ; preds = %52
  %58 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  %59 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %61 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  %62 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  br label %66

63:                                               ; preds = %66
  %64 = icmp eq %"struct.logging::VlogInfo::VmodulePattern"* %88, %55
  br i1 %64, label %65, label %66

65:                                               ; preds = %63, %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  br label %90

66:                                               ; preds = %57, %63
  %67 = phi %"struct.logging::VlogInfo::VmodulePattern"* [ %54, %57 ], [ %88, %63 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #10
  %68 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %67, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 16, i1 false)
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 1
  %71 = select i1 %70, %"class.base::BasicStringPiece"* %1, %"class.base::BasicStringPiece"* %6
  %72 = bitcast %"class.base::BasicStringPiece"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* align 8 %72, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #10
  %73 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %67 to i8*
  %80 = select i1 %76, i8* %78, i8* %79
  store i8* %80, i8** %60, align 8
  %81 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = zext i8 %75 to i64
  %84 = select i1 %76, i64 %82, i64 %83
  store i64 %84, i64* %61, align 8
  %85 = call zeroext i1 @_ZN7logging16MatchVlogPatternERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES7_(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %8)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #10
  %86 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %67, i64 0, i32 1
  %87 = load i32, i32* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #10
  %88 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %67, i64 1
  br i1 %85, label %89, label %63

89:                                               ; preds = %66
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  br label %95

90:                                               ; preds = %65, %2
  %91 = getelementptr inbounds %"class.logging::VlogInfo", %"class.logging::VlogInfo"* %0, i64 0, i32 1
  %92 = load i32*, i32** %91, align 8
  %93 = load i32, i32* %92, align 4
  %94 = sub nsw i32 0, %93
  br label %95

95:                                               ; preds = %89, %90
  %96 = phi i32 [ %94, %90 ], [ %87, %89 ]
  ret i32 %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7logging16MatchVlogPatternERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES7_(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %7 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %7, i64 16, i1 false)
  %8 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %10 = bitcast %"class.base::BasicStringPiece"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %10, i64 16, i1 false)
  %11 = load i64, i64* %9, align 8
  %12 = load i64, i64* %6, align 8
  %13 = or i64 %11, %12
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %2
  %16 = icmp ne i64 %12, 0
  %17 = icmp ne i64 %11, 0
  br label %18

18:                                               ; preds = %15, %62
  %19 = phi i1 [ %66, %62 ], [ %16, %15 ]
  %20 = phi i1 [ %65, %62 ], [ %17, %15 ]
  %21 = phi i64 [ %28, %62 ], [ 0, %15 ]
  %22 = phi i64 [ %64, %62 ], [ 0, %15 ]
  %23 = phi i64 [ %30, %62 ], [ 0, %15 ]
  %24 = phi i64 [ %63, %62 ], [ 0, %15 ]
  %25 = add i64 %24, 1
  br label %26

26:                                               ; preds = %18, %49
  %27 = phi i1 [ %19, %18 ], [ %51, %49 ]
  %28 = phi i64 [ %21, %18 ], [ %29, %49 ]
  %29 = phi i64 [ %22, %18 ], [ %50, %49 ]
  %30 = phi i64 [ %23, %18 ], [ %25, %49 ]
  br i1 %27, label %31, label %68

31:                                               ; preds = %26
  %32 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %3, i64 %29) #10
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  switch i32 %34, label %53 [
    i32 47, label %35
    i32 92, label %35
    i32 63, label %46
    i32 42, label %49
  ]

35:                                               ; preds = %31, %31
  br i1 %20, label %36, label %68

36:                                               ; preds = %35
  %37 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %4, i64 %24) #10
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 47
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %4, i64 %24) #10
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 92
  br i1 %43, label %44, label %68

44:                                               ; preds = %40, %36
  %45 = add nuw i64 %29, 1
  br label %62

46:                                               ; preds = %31
  br i1 %20, label %47, label %68

47:                                               ; preds = %46
  %48 = add nuw i64 %29, 1
  br label %62

49:                                               ; preds = %31
  %50 = add nuw i64 %29, 1
  %51 = icmp ult i64 %50, %12
  %52 = or i1 %20, %51
  br i1 %52, label %26, label %71

53:                                               ; preds = %31
  br i1 %20, label %54, label %68

54:                                               ; preds = %53
  %55 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %4, i64 %24) #10
  %56 = load i8, i8* %55, align 1
  %57 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %3, i64 %29) #10
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %56, %58
  br i1 %59, label %60, label %68

60:                                               ; preds = %54
  %61 = add nuw i64 %29, 1
  br label %62

62:                                               ; preds = %60, %47, %44, %68
  %63 = phi i64 [ %30, %68 ], [ %25, %44 ], [ %25, %47 ], [ %25, %60 ]
  %64 = phi i64 [ %28, %68 ], [ %45, %44 ], [ %48, %47 ], [ %61, %60 ]
  %65 = icmp ult i64 %63, %11
  %66 = icmp ult i64 %64, %12
  %67 = or i1 %65, %66
  br i1 %67, label %18, label %71

68:                                               ; preds = %26, %40, %35, %46, %54, %53
  %69 = add i64 %30, -1
  %70 = icmp ult i64 %69, %11
  br i1 %70, label %62, label %71

71:                                               ; preds = %68, %62, %49, %2
  %72 = phi i1 [ true, %2 ], [ true, %49 ], [ true, %62 ], [ false, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret i1 %72
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7logging8VlogInfo15GetMaxVlogLevelEv(%"class.logging::VlogInfo"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.logging::VlogInfo", %"class.logging::VlogInfo"* %0, i64 0, i32 1
  %3 = load i32*, i32** %2, align 8
  %4 = load i32, i32* %3, align 4
  %5 = sub nsw i32 0, %4
  ret i32 %5
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare i64 @_ZN4base8internal12find_last_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7logging8VlogInfo14VmodulePatternENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"*, %"struct.logging::VlogInfo::VmodulePattern"* dereferenceable(32)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.logging::VlogInfo::VmodulePattern"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.logging::VlogInfo::VmodulePattern"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"struct.logging::VlogInfo::VmodulePattern"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.logging::VlogInfo::VmodulePattern"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %36, i64 %35
  %39 = ptrtoint %"struct.logging::VlogInfo::VmodulePattern"* %38 to i64
  %40 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %34
  %45 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %37 to i8*
  %46 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #10
  br label %53

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %37, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %48, i8* %50, i64 %52) #10
  br label %53

53:                                               ; preds = %44, %47
  %54 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %36, i64 %9, i32 1
  %55 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %1, i64 0, i32 1
  %56 = bitcast i32* %55 to i64*
  %57 = bitcast i32* %54 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %37, i64 1
  %60 = ptrtoint %"struct.logging::VlogInfo::VmodulePattern"* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %62 = load %"struct.logging::VlogInfo::VmodulePattern"*, %"struct.logging::VlogInfo::VmodulePattern"** %61, align 8
  %63 = ptrtoint %"struct.logging::VlogInfo::VmodulePattern"* %62 to i64
  %64 = load %"struct.logging::VlogInfo::VmodulePattern"*, %"struct.logging::VlogInfo::VmodulePattern"** %3, align 8
  %65 = icmp eq %"struct.logging::VlogInfo::VmodulePattern"* %64, %62
  br i1 %65, label %113, label %66

66:                                               ; preds = %53
  %67 = getelementptr %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %64, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = ptrtoint i8** %67 to i64
  %69 = sub i64 %68, %63
  %70 = and i64 %69, 32
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %82

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %37, i64 -1
  %74 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %64, i64 -1
  %75 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %73 to i8*
  %76 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #10
  %77 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %37, i64 -1, i32 1
  %78 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %64, i64 -1, i32 1
  %79 = bitcast i32* %78 to i64*
  %80 = bitcast i32* %77 to i64*
  %81 = load i64, i64* %79, align 8
  store i64 %81, i64* %80, align 8
  br label %82

82:                                               ; preds = %72, %66
  %83 = phi %"struct.logging::VlogInfo::VmodulePattern"* [ undef, %66 ], [ %73, %72 ]
  %84 = phi %"struct.logging::VlogInfo::VmodulePattern"* [ %37, %66 ], [ %73, %72 ]
  %85 = phi %"struct.logging::VlogInfo::VmodulePattern"* [ %64, %66 ], [ %74, %72 ]
  %86 = icmp ult i64 %69, 32
  br i1 %86, label %109, label %87

87:                                               ; preds = %82, %87
  %88 = phi %"struct.logging::VlogInfo::VmodulePattern"* [ %99, %87 ], [ %84, %82 ]
  %89 = phi %"struct.logging::VlogInfo::VmodulePattern"* [ %100, %87 ], [ %85, %82 ]
  %90 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %88, i64 -1
  %91 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %89, i64 -1
  %92 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %90 to i8*
  %93 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #10
  %94 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %88, i64 -1, i32 1
  %95 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %89, i64 -1, i32 1
  %96 = bitcast i32* %95 to i64*
  %97 = bitcast i32* %94 to i64*
  %98 = load i64, i64* %96, align 8
  store i64 %98, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %88, i64 -2
  %100 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %89, i64 -2
  %101 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %99 to i8*
  %102 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #10
  %103 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %88, i64 -2, i32 1
  %104 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %89, i64 -2, i32 1
  %105 = bitcast i32* %104 to i64*
  %106 = bitcast i32* %103 to i64*
  %107 = load i64, i64* %105, align 8
  store i64 %107, i64* %106, align 8
  %108 = icmp eq %"struct.logging::VlogInfo::VmodulePattern"* %100, %62
  br i1 %108, label %109, label %87

109:                                              ; preds = %87, %82
  %110 = phi %"struct.logging::VlogInfo::VmodulePattern"* [ %83, %82 ], [ %99, %87 ]
  %111 = load i64, i64* %6, align 8
  %112 = load %"struct.logging::VlogInfo::VmodulePattern"*, %"struct.logging::VlogInfo::VmodulePattern"** %3, align 8
  br label %113

113:                                              ; preds = %53, %109
  %114 = phi %"struct.logging::VlogInfo::VmodulePattern"* [ %112, %109 ], [ %62, %53 ]
  %115 = phi %"struct.logging::VlogInfo::VmodulePattern"* [ %110, %109 ], [ %37, %53 ]
  %116 = phi i64 [ %111, %109 ], [ %63, %53 ]
  %117 = ptrtoint %"struct.logging::VlogInfo::VmodulePattern"* %115 to i64
  store i64 %117, i64* %6, align 8
  store i64 %60, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %118 = inttoptr i64 %116 to %"struct.logging::VlogInfo::VmodulePattern"*
  %119 = icmp eq %"struct.logging::VlogInfo::VmodulePattern"* %114, %118
  br i1 %119, label %132, label %120

120:                                              ; preds = %113, %130
  %121 = phi %"struct.logging::VlogInfo::VmodulePattern"* [ %122, %130 ], [ %114, %113 ]
  %122 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %121, i64 -1
  %123 = bitcast %"struct.logging::VlogInfo::VmodulePattern"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"struct.logging::VlogInfo::VmodulePattern", %"struct.logging::VlogInfo::VmodulePattern"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  tail call void @_ZdlPv(i8* %129) #11
  br label %130

130:                                              ; preds = %127, %120
  %131 = icmp eq %"struct.logging::VlogInfo::VmodulePattern"* %122, %118
  br i1 %131, label %132, label %120

132:                                              ; preds = %130, %113
  %133 = icmp eq i64 %116, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = inttoptr i64 %116 to i8*
  tail call void @_ZdlPv(i8* %135) #11
  br label %136

136:                                              ; preds = %132, %134
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
