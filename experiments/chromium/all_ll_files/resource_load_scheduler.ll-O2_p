; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/resource_load_scheduler.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/resource_load_scheduler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, i32, %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsDelayType, true>::Option"*, i64 }
%"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsDelayType, true>::Option" = type { i32, i8* }
%"struct.base::FeatureParam.275" = type { %"struct.base::Feature"*, i8*, i32, %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsThreshold, true>::Option"*, i64 }
%"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsThreshold, true>::Option" = type { i32, i8* }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.71", i32, [4 x i8], %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.206", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.222", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.240", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.247", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.189", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__cxx_atomic_impl.110" }
%"struct.std::__1::__cxx_atomic_impl.110" = type { %"struct.std::__1::__cxx_atomic_base_impl.111" }
%"struct.std::__1::__cxx_atomic_base_impl.111" = type { i64 }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::Worklist.118"* }
%"class.blink::Worklist.118" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::Worklist.125"* }
%"class.blink::Worklist.125" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::Worklist.132"* }
%"class.blink::Worklist.132" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::Worklist.139"* }
%"class.blink::Worklist.139" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::Worklist.146"* }
%"class.blink::Worklist.146" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::Worklist.153"* }
%"class.blink::Worklist.153" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::Worklist.160"* }
%"class.blink::Worklist.160" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.167", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.182", [4 x i8] }>
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169", %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i64 }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { float }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.192", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.214" }
%"class.WTF::VectorBuffer.214" = type { %"class.WTF::VectorBufferBase.215" }
%"class.WTF::VectorBufferBase.215" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.228" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.118"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.125"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.132"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.139"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.146"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.251" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.246 }
%class.scoped_refptr.246 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.247" = type { %"struct.std::__1::__atomic_base.248" }
%"struct.std::__1::__atomic_base.248" = type { %"struct.std::__1::__cxx_atomic_impl.249" }
%"struct.std::__1::__cxx_atomic_impl.249" = type { %"struct.std::__1::__cxx_atomic_base_impl.250" }
%"struct.std::__1::__cxx_atomic_base_impl.250" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.44" }
%"struct.std::__1::atomic.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__cxx_atomic_impl.47" }
%"struct.std::__1::__cxx_atomic_impl.47" = type { %"struct.std::__1::__cxx_atomic_base_impl.48" }
%"struct.std::__1::__cxx_atomic_base_impl.48" = type { i32 }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap", %"class.WTF::HashSet", i8, [3 x i8], i32, %"class.blink::HeapHashMap", %"class.std::__1::map", %"class.std::__1::map.31", %"class.std::__1::unique_ptr.40", %"class.blink::Member.57", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.63", %"class.mojo::InlinedStructPtr", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.10" }
%"class.WTF::HashTable.10" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.15" }
%"class.WTF::HashMap.15" = type { %"class.WTF::HashTable.16" }
%"class.WTF::HashTable.16" = type <{ %"struct.WTF::KeyValuePair.18"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.18" = type { i64, %"class.blink::Member.19" }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"struct.blink::ResourceLoadScheduler::ClientInfo"* }
%"struct.blink::ResourceLoadScheduler::ClientInfo" = type <{ %"class.blink::Member.23", i32, i32, i32, [4 x i8] }>
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::ResourceLoadSchedulerClient"* }
%"class.blink::ResourceLoadSchedulerClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::map.31" = type { %"class.std::__1::__tree.32" }
%"class.std::__1::__tree.32" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.44" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.49" }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i8 }
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.base::Clock" = type { i32 (...)** }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::DetachableResourceFetcherProperties" = type <{ %"class.blink::ResourceFetcherProperties", %"class.blink::Member.2", %"class.blink::Member.4", i8, i8, i8, i8, i8, [3 x i8], %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::ResourceFetcherProperties" = type { i32 (...)** }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::ResourceFetcherProperties"* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::FetchClientSettingsObject"* }
%"class.blink::FetchClientSettingsObject" = type { i32 (...)** }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.65", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.65" = type { %"class.WTF::HashTable.66" }
%"class.WTF::HashTable.66" = type <{ %"struct.WTF::KeyValuePair.69"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.69" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.70 }
%class.scoped_refptr.70 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.61" }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::LoadingBehaviorObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.base::DefaultClock" = type { %"class.base::Clock" }
%"class.std::__1::map.276" = type { %"class.std::__1::__tree.277" }
%"class.std::__1::__tree.277" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.278", %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.287" }
%"struct.std::__1::pair.287" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node.292" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.293" }
%"struct.std::__1::__value_type.293" = type { %"struct.std::__1::pair.294" }
%"struct.std::__1::pair.294" = type { i32, %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.263" }
%"class.base::time_internal::TimeBase.263" = type { i64 }
%"class.std::__1::__tree_node.288" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.289" }
%"struct.std::__1::__value_type.289" = type { %"struct.std::__1::pair.290" }
%"struct.std::__1::pair.290" = type { i32, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.256" }
%"class.std::__1::__tree.256" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.315", %"class.blink::FreeList", %"class.WTF::Vector.320" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.315" = type { %"class.WTF::VectorBuffer.316" }
%"class.WTF::VectorBuffer.316" = type { %"class.WTF::VectorBufferBase.317" }
%"class.WTF::VectorBufferBase.317" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.320" = type { %"class.WTF::VectorBuffer.321" }
%"class.WTF::VectorBuffer.321" = type { %"class.WTF::VectorBufferBase.322" }
%"class.WTF::VectorBufferBase.322" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::ResourceLoadScheduler::ClientIdWithPriority" = type { i64, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__tree_node.291" = type { %"class.std::__1::__tree_node_base.base", %"class.blink::ResourceLoadScheduler::ClientIdWithPriority" }
%"class.blink::ResourceLoadScheduler::TrafficReportHints" = type { i8, i64, i64 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsDelayTypeELb1EE3GetEv = comdat any

$_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsThresholdELb1EE3GetEv = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE = comdat any

$_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_21ResourceLoadScheduler10ClientInfoEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_35DetachableResourceFetcherPropertiesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23DetachableConsoleLoggerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21ResourceLoadScheduler10ClientInfoEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink9NameTraitINS_21ResourceLoadScheduler10ClientInfoEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERmPS5_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableImNS1_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashImEENS1_18HashMapValueTraitsINS1_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE16LookupForWritingERKm = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE4findERKm = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE21__emplace_unique_implIJRmRNS1_13WebURLRequest8PriorityERiEEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEEDpOT_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE4findERKm = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKm = comdat any

$_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE8RehashToEPmjS8_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE5eraseEPKS7_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERmRS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKmRmEENS_18HashTableAddResultIS7_mEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6ExpandEPm = comdat any

$_ZZN5blink11GCInfoTraitINS_21ResourceLoadScheduler10ClientInfoEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21ResourceLoadScheduler10ClientInfoEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink21ResourceLoadScheduler16kInvalidClientIdE = hidden local_unnamed_addr constant i64 0, align 8
@_ZTVN5blink21ResourceLoadSchedulerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ResourceLoadScheduler"*)* @_ZN5blink21ResourceLoadSchedulerD2Ev to i8*), i8* bitcast (void (%"class.blink::ResourceLoadScheduler"*)* @_ZN5blink21ResourceLoadSchedulerD0Ev to i8*), i8* bitcast (void (%"class.blink::ResourceLoadScheduler"*, i32)* @_ZN5blink21ResourceLoadScheduler23OnLifecycleStateChangedENS_9scheduler24SchedulingLifecycleStateE to i8*)] }, align 8
@_ZN5blink12_GLOBAL__N_130kRendererSideResourceSchedulerE = internal unnamed_addr constant [30 x i8] c"RendererSideResourceScheduler\00", align 16
@_ZN5blink12_GLOBAL__N_142kLimitForRendererSideResourceSchedulerNameE = internal constant [6 x i8] c"limit\00", align 1
@_ZN5blink12_GLOBAL__N_147kTightLimitForRendererSideResourceSchedulerNameE = internal constant [12 x i8] c"tight_limit\00", align 1
@.str = private unnamed_addr constant [9 x i8] c"0u != id\00", align 1
@.str.1 = private unnamed_addr constant [82 x i8] c"../../third_party/blink/renderer/platform/loader/fetch/resource_load_scheduler.cc\00", align 1
@_ZN5blink8features34kDelayCompetingLowPriorityRequestsE = external global %"struct.base::Feature", align 8
@.str.2 = private unnamed_addr constant [307 x i8] c"Some resource load requests were throttled while the tab was in background, and no request was sent from the queue in the last 1 minute. This means previously requested in-flight requests haven't received any response from servers. See https://www.chromestatus.com/feature/5527160148197376 for more details\00", align 1
@_ZN5blink8features44kDelayCompetingLowPriorityRequestsDelayParamE = external global %"struct.base::FeatureParam", align 8
@_ZN5blink8features48kDelayCompetingLowPriorityRequestsThresholdParamE = external global %"struct.base::FeatureParam.275", align 8
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ResourceLoadScheduler10ClientInfoEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ResourceLoadScheduler::ClientInfo]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_21ResourceLoadScheduler10ClientInfoEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21ResourceLoadScheduler10ClientInfoEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21ResourceLoadScheduler10ClientInfoEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21ResourceLoadScheduler10ClientInfoEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.12 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.13 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableImNS_12KeyValuePairImNS1_6MemberINS1_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSE_IS8_EEEESF_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [446 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<unsigned long, WTF::KeyValuePair<unsigned long, blink::Member<blink::ResourceLoadScheduler::ClientInfo> >, WTF::KeyValuePairKeyExtractor, WTF::IntHash<unsigned long>, WTF::HashMapValueTraits<WTF::HashTraits<unsigned long>, WTF::HashTraits<blink::Member<blink::ResourceLoadScheduler::ClientInfo> > >, WTF::HashTraits<unsigned long>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned long, blink::WebURLRequest::Priority>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned long]\00", align 1

@_ZN5blink21ResourceLoadSchedulerC1ENS0_16ThrottlingPolicyENS0_22ThrottleOptionOverrideERKNS_35DetachableResourceFetcherPropertiesEPNS_22FrameOrWorkerSchedulerERNS_23DetachableConsoleLoggerEPNS_23LoadingBehaviorObserverE = hidden unnamed_addr alias void (%"class.blink::ResourceLoadScheduler"*, i32, i32, %"class.blink::DetachableResourceFetcherProperties"*, %"class.blink::FrameOrWorkerScheduler"*, %"class.blink::DetachableConsoleLogger"*, %"class.blink::LoadingBehaviorObserver"*), void (%"class.blink::ResourceLoadScheduler"*, i32, i32, %"class.blink::DetachableResourceFetcherProperties"*, %"class.blink::FrameOrWorkerScheduler"*, %"class.blink::DetachableConsoleLogger"*, %"class.blink::LoadingBehaviorObserver"*)* @_ZN5blink21ResourceLoadSchedulerC2ENS0_16ThrottlingPolicyENS0_22ThrottleOptionOverrideERKNS_35DetachableResourceFetcherPropertiesEPNS_22FrameOrWorkerSchedulerERNS_23DetachableConsoleLoggerEPNS_23LoadingBehaviorObserverE
@_ZN5blink21ResourceLoadSchedulerD1Ev = hidden unnamed_addr alias void (%"class.blink::ResourceLoadScheduler"*), void (%"class.blink::ResourceLoadScheduler"*)* @_ZN5blink21ResourceLoadSchedulerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadSchedulerC2ENS0_16ThrottlingPolicyENS0_22ThrottleOptionOverrideERKNS_35DetachableResourceFetcherPropertiesEPNS_22FrameOrWorkerSchedulerERNS_23DetachableConsoleLoggerEPNS_23LoadingBehaviorObserverE(%"class.blink::ResourceLoadScheduler"*, i32, i32, %"class.blink::DetachableResourceFetcherProperties"* dereferenceable(152), %"class.blink::FrameOrWorkerScheduler"*, %"class.blink::DetachableConsoleLogger"* dereferenceable(16), %"class.blink::LoadingBehaviorObserver"*) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21ResourceLoadSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::DetachableResourceFetcherProperties"* %3, %"class.blink::DetachableResourceFetcherProperties"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 2
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 4
  store i32 %1, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 7
  %16 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %3, i64 0, i32 1, i32 0, i32 0
  %17 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 -1, i64 16, i1 false)
  %18 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %16, align 8
  %19 = icmp eq %"class.blink::ResourceFetcherProperties"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %7
  %21 = bitcast %"class.blink::ResourceFetcherProperties"* %18 to i32 (%"class.blink::ResourceFetcherProperties"*)***
  %22 = load i32 (%"class.blink::ResourceFetcherProperties"*)**, i32 (%"class.blink::ResourceFetcherProperties"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::ResourceFetcherProperties"*)*, i32 (%"class.blink::ResourceFetcherProperties"*)** %22, i64 15
  %24 = load i32 (%"class.blink::ResourceFetcherProperties"*)*, i32 (%"class.blink::ResourceFetcherProperties"*)** %23, align 8
  %25 = tail call i32 %24(%"class.blink::ResourceFetcherProperties"* nonnull %18) #14
  br label %29

26:                                               ; preds = %7
  %27 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %3, i64 0, i32 10
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %20, %26
  %30 = phi i32 [ %25, %20 ], [ %28, %26 ]
  %31 = sext i32 %30 to i64
  store i64 %31, i64* %15, align 8
  %32 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 8
  %33 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 10
  %34 = bitcast %"class.WTF::HashSet"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 20, i1 false) #14
  %35 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 11
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 13
  %37 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 0
  %40 = bitcast %"class.std::__1::__tree_node_base"** %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #14
  %41 = bitcast i64* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 28, i1 false)
  %42 = bitcast i32* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 24, i1 false)
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %39, align 8
  %43 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 0
  %46 = bitcast %"class.std::__1::__tree_node_base"** %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 17
  %48 = bitcast %"class.std::__1::unique_ptr.40"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 18, i32 0, i32 0
  store %"class.blink::DetachableConsoleLogger"* %5, %"class.blink::DetachableConsoleLogger"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 19
  %51 = tail call %"class.base::DefaultClock"* @_ZN4base12DefaultClock11GetInstanceEv() #14
  %52 = getelementptr inbounds %"class.base::DefaultClock", %"class.base::DefaultClock"* %51, i64 0, i32 0
  store %"class.base::Clock"* %52, %"class.base::Clock"** %50, align 8
  %53 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 20
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 21
  store i8 0, i8* %54, align 4
  %55 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 23
  store i32 %2, i32* %55, align 8
  %56 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 25, i32 0, i32 0
  store %"class.blink::LoadingBehaviorObserver"* %6, %"class.blink::LoadingBehaviorObserver"** %56, align 8
  %57 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 0
  tail call void @_ZN5blink5mojom5blink38DelayCompetingLowPriorityRequestsHintsC1Ev(%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints"* %57) #14
  %58 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 1
  store i32 0, i32* %58, align 4
  %59 = icmp eq %"class.blink::FrameOrWorkerScheduler"* %4, null
  br i1 %59, label %72, label %60

60:                                               ; preds = %29
  %61 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_124GetFieldTrialUint32ParamEPKcS2_j(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN5blink12_GLOBAL__N_142kLimitForRendererSideResourceSchedulerNameE, i64 0, i64 0), i32 1024)
  %62 = zext i32 %61 to i64
  store i64 %62, i64* %14, align 8
  %63 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_124GetFieldTrialUint32ParamEPKcS2_j(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN5blink12_GLOBAL__N_147kTightLimitForRendererSideResourceSchedulerNameE, i64 0, i64 0), i32 2)
  %64 = zext i32 %63 to i64
  store i64 %64, i64* %13, align 8
  %65 = tail call %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* @_ZN5blink22FrameOrWorkerScheduler20AddLifecycleObserverENS0_12ObserverTypeEPNS0_8ObserverE(%"class.blink::FrameOrWorkerScheduler"* nonnull %4, i32 0, %"class.blink::FrameOrWorkerScheduler::Observer"* %8) #14
  %66 = ptrtoint %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %47, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*, %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"** %67, align 8
  store i64 %66, i64* %48, align 8
  %69 = icmp eq %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %60
  tail call void @_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleD1Ev(%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* nonnull %68) #14
  %71 = bitcast %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %68 to i8*
  tail call void @free(i8* %71) #14
  br label %72

72:                                               ; preds = %60, %70, %29
  ret void
}

declare %"class.base::DefaultClock"* @_ZN4base12DefaultClock11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_124GetFieldTrialUint32ParamEPKcS2_j(i8* nocapture readonly, i32) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::map.276", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca i32, align 4
  %7 = bitcast %"class.std::__1::map.276"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.std::__1::map.276", %"class.std::__1::map.276"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::map.276", %"class.std::__1::map.276"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::map.276", %"class.std::__1::map.276"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #14
  %13 = call i8* @_Znwm(i64 32) #15
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %16, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 16 getelementptr inbounds ([30 x i8], [30 x i8]* @_ZN5blink12_GLOBAL__N_130kRendererSideResourceSchedulerE, i64 0, i64 0), i64 29, i1 false) #14
  %17 = getelementptr inbounds i8, i8* %13, i64 29
  store i8 0, i8* %17, align 1
  %18 = call zeroext i1 @_ZN4base19GetFieldTrialParamsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::map.276"* nonnull %3) #14
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %2, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #14
  br i1 %18, label %26, label %84

26:                                               ; preds = %25
  %27 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #14
  %28 = call i64 @strlen(i8* %0) #14
  %29 = icmp ugt i64 %28, -17
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %31) #16
  unreachable

32:                                               ; preds = %26
  %33 = icmp ult i64 %28, 23
  br i1 %33, label %43, label %34

34:                                               ; preds = %32
  %35 = add nuw i64 %28, 16
  %36 = and i64 %35, -16
  %37 = call i8* @_Znwm(i64 %36) #15
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %37, i8** %38, align 8
  %39 = or i64 %36, -9223372036854775808
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %28, i64* %41, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %48

43:                                               ; preds = %32
  %44 = trunc i64 %28 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  %47 = icmp eq i64 %28, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %43, %34
  %49 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %45, %43 ], [ %42, %34 ]
  %50 = phi i8* [ %27, %43 ], [ %37, %34 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %50, i8* align 1 %0, i64 %28, i1 false) #14
  br label %51

51:                                               ; preds = %43, %48
  %52 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %45, %43 ], [ %49, %48 ]
  %53 = phi i8* [ %27, %43 ], [ %50, %48 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 %28
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds %"class.std::__1::map.276", %"class.std::__1::map.276"* %3, i64 0, i32 0
  %56 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree.277"* nonnull %55, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #14
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #15
  br label %63

63:                                               ; preds = %51, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #14
  %64 = icmp eq %"class.std::__1::__tree_end_node"* %56, %10
  br i1 %64, label %84, label %65

65:                                               ; preds = %63
  %66 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #14
  store i32 -1431655766, i32* %6, align 4
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 7
  %68 = bitcast %"class.std::__1::__tree_end_node"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = bitcast %"class.std::__1::__tree_end_node"* %67 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = bitcast %"class.std::__1::__tree_end_node"* %67 to i8*
  %75 = select i1 %71, i8* %73, i8* %74
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 8
  %77 = bitcast %"class.std::__1::__tree_end_node"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %70 to i64
  %80 = select i1 %71, i64 %78, i64 %79
  %81 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %75, i64 %80, i32* nonnull %6) #14
  %82 = load i32, i32* %6, align 4
  %83 = select i1 %81, i32 %82, i32 %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #14
  br label %84

84:                                               ; preds = %65, %63, %25
  %85 = phi i32 [ %1, %25 ], [ %83, %65 ], [ %1, %63 ]
  %86 = getelementptr inbounds %"class.std::__1::map.276", %"class.std::__1::map.276"* %3, i64 0, i32 0
  %87 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %88 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %87, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.277"* nonnull %86, %"class.std::__1::__tree_node"* %88) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  ret i32 %85
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* @_ZN5blink22FrameOrWorkerScheduler20AddLifecycleObserverENS0_12ObserverTypeEPNS0_8ObserverE(%"class.blink::FrameOrWorkerScheduler"*, i32, %"class.blink::FrameOrWorkerScheduler::Observer"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadSchedulerD2Ev(%"class.blink::ResourceLoadScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink21ResourceLoadSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 0
  tail call void @_ZN5blink5mojom5blink38DelayCompetingLowPriorityRequestsHintsD1Ev(%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints"* %3) #14
  %4 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 17, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*, %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"** %4, align 8
  store %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* null, %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"** %4, align 8
  %6 = icmp eq %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleD1Ev(%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* nonnull %5) #14
  %8 = bitcast %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %5 to i8*
  tail call void @free(i8* %8) #14
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0
  %11 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.292"**
  %13 = load %"class.std::__1::__tree_node.292"*, %"class.std::__1::__tree_node.292"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.32"* %10, %"class.std::__1::__tree_node.292"* %13) #14
  %14 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0
  %15 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node.288"**
  %17 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %16, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree"* %14, %"class.std::__1::__tree_node.288"* %17) #14
  %18 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 10, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %19, null
  br i1 %20, label %23, label %21, !prof !2

21:                                               ; preds = %9
  %22 = bitcast i64* %19 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %22) #14
  store i64* null, i64** %18, align 8
  br label %23

23:                                               ; preds = %9, %21
  %24 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 9, i32 0, i32 0
  %25 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %24, align 8
  %26 = icmp eq %"struct.WTF::KeyValuePair"* %25, null
  br i1 %26, label %29, label %27, !prof !2

27:                                               ; preds = %23
  %28 = bitcast %"struct.WTF::KeyValuePair"* %25 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %28) #14
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %24, align 8
  br label %29

29:                                               ; preds = %23, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadSchedulerD0Ev(%"class.blink::ResourceLoadScheduler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink21ResourceLoadSchedulerD2Ev(%"class.blink::ResourceLoadScheduler"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21ResourceLoadScheduler5TraceEPNS_7VisitorE(%"class.blink::ResourceLoadScheduler"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14
  %4 = bitcast %"class.blink::HeapHashMap"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.blink::HeapHashMap"* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #14
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #14
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 1
  %20 = bitcast %"class.blink::Member"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = inttoptr i64 %21 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_35DetachableResourceFetcherPropertiesEE5TraceEPNS_7VisitorEPKv) #14
  br label %29

29:                                               ; preds = %18, %23
  %30 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 18
  %31 = bitcast %"class.blink::Member.57"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23DetachableConsoleLoggerEE5TraceEPNS_7VisitorEPKv) #14
  br label %40

40:                                               ; preds = %29, %34
  %41 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 25
  %42 = bitcast %"class.blink::Member.63"* %41 to i64*
  %43 = load atomic i64, i64* %42 monotonic, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %111, label %45

45:                                               ; preds = %40
  %46 = inttoptr i64 %43 to i8*
  %47 = and i64 %43, -131072
  %48 = inttoptr i64 %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 4138
  %50 = load i8, i8* %49, align 2
  %51 = icmp eq i8 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %45
  %53 = getelementptr inbounds i8, i8* %48, i64 4160
  br label %92

54:                                               ; preds = %45
  %55 = getelementptr inbounds i8, i8* %48, i64 4096
  %56 = bitcast i8* %55 to %"class.blink::NormalPage"*
  %57 = getelementptr inbounds i8, i8* %48, i64 4400
  %58 = bitcast i8* %57 to i8**
  %59 = bitcast i8* %57 to i64*
  %60 = load i64, i64* %59, align 16
  %61 = sub i64 %43, %60
  %62 = lshr i64 %61, 3
  %63 = lshr i64 %61, 6
  %64 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %56, i64 0, i32 2, i32 0, i32 1, i64 %63
  %65 = load atomic i8, i8* %64 acquire, align 1
  %66 = trunc i64 %62 to i32
  %67 = and i32 %66, 7
  %68 = shl i32 2, %67
  %69 = trunc i32 %68 to i8
  %70 = add i8 %69, -1
  %71 = and i8 %70, %65
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %79

73:                                               ; preds = %54, %73
  %74 = phi i64 [ %75, %73 ], [ %63, %54 ]
  %75 = add i64 %74, -1
  %76 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %56, i64 0, i32 2, i32 0, i32 1, i64 %75
  %77 = load atomic i8, i8* %76 acquire, align 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %73, label %79

79:                                               ; preds = %73, %54
  %80 = phi i64 [ %63, %54 ], [ %75, %73 ]
  %81 = phi i8 [ %71, %54 ], [ %77, %73 ]
  %82 = zext i8 %81 to i32
  %83 = tail call i32 @llvm.ctlz.i32(i32 %82, i1 true) #14, !range !3
  %84 = add nsw i32 %83, -24
  %85 = shl i64 %80, 3
  %86 = or i64 %85, 7
  %87 = sext i32 %84 to i64
  %88 = sub i64 %86, %87
  %89 = shl i64 %88, 3
  %90 = load i8*, i8** %58, align 16
  %91 = getelementptr inbounds i8, i8* %90, i64 %89
  br label %92

92:                                               ; preds = %79, %52
  %93 = phi i8* [ %53, %52 ], [ %91, %79 ]
  %94 = getelementptr inbounds i8, i8* %93, i64 8
  %95 = getelementptr inbounds i8, i8* %93, i64 4
  %96 = bitcast i8* %95 to i16*
  %97 = load atomic i16, i16* %96 acquire, align 2
  %98 = lshr i16 %97, 2
  %99 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %100 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %99, i64 0, i32 0
  %101 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %100, align 8
  %102 = zext i16 %98 to i64
  %103 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %101, i64 %102
  %104 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %103, align 8
  %105 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %104, i64 0, i32 0
  %106 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %105, align 8
  %107 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %108 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %108, i64 5
  %110 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %109, align 8
  tail call void %110(%"class.blink::Visitor"* %1, i8* nonnull %46, i8* %94, void (%"class.blink::Visitor"*, i8*)* %106) #14
  br label %111

111:                                              ; preds = %40, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadScheduler22LoosenThrottlingPolicyEv(%"class.blink::ResourceLoadScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4
  tail call void @_ZN5blink21ResourceLoadScheduler8MaybeRunEv(%"class.blink::ResourceLoadScheduler"* %0)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadScheduler8MaybeRunEv(%"class.blink::ResourceLoadScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %36

6:                                                ; preds = %1
  %7 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  store i64 0, i64* %2, align 8
  %8 = call zeroext i1 @_ZN5blink21ResourceLoadScheduler21GetNextPendingRequestEPm(%"class.blink::ResourceLoadScheduler"* %0, i64* nonnull %2)
  br i1 %8, label %9, label %35

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0
  %11 = getelementptr inbounds %"class.WTF::HashMap.15", %"class.WTF::HashMap.15"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::HashMap.15", %"class.WTF::HashMap.15"* %10, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0, i32 1
  br label %14

14:                                               ; preds = %9, %33
  %15 = call { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.16"* %11, i64* nonnull dereferenceable(8) %2) #14
  %16 = extractvalue { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } %15, 0
  %17 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %12, align 8
  %18 = load i32, i32* %13, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %17, i64 %19
  %21 = icmp eq %"struct.WTF::KeyValuePair.18"* %16, %20
  br i1 %21, label %33, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %16, i64 0, i32 1, i32 0, i32 0
  %24 = load %"struct.blink::ResourceLoadScheduler::ClientInfo"*, %"struct.blink::ResourceLoadScheduler::ClientInfo"** %23, align 8
  %25 = getelementptr inbounds %"struct.blink::ResourceLoadScheduler::ClientInfo", %"struct.blink::ResourceLoadScheduler::ClientInfo"* %24, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.blink::ResourceLoadScheduler::ClientInfo", %"struct.blink::ResourceLoadScheduler::ClientInfo"* %24, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::ResourceLoadSchedulerClient"*, %"class.blink::ResourceLoadSchedulerClient"** %27, align 8
  %29 = getelementptr inbounds %"struct.blink::ResourceLoadScheduler::ClientInfo", %"struct.blink::ResourceLoadScheduler::ClientInfo"* %24, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  call void @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.16"* %11, %"struct.WTF::KeyValuePair.18"* %16) #14
  %31 = load i64, i64* %2, align 8
  %32 = icmp eq i32 %30, 0
  call void @_ZN5blink21ResourceLoadScheduler3RunEmPNS_27ResourceLoadSchedulerClientEbNS_13WebURLRequest8PriorityE(%"class.blink::ResourceLoadScheduler"* %0, i64 %31, %"class.blink::ResourceLoadSchedulerClient"* %28, i1 zeroext %32, i32 %26)
  br label %33

33:                                               ; preds = %14, %22
  %34 = call zeroext i1 @_ZN5blink21ResourceLoadScheduler21GetNextPendingRequestEPm(%"class.blink::ResourceLoadScheduler"* %0, i64* nonnull %2)
  br i1 %34, label %14, label %35

35:                                               ; preds = %33, %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  br label %36

36:                                               ; preds = %1, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadScheduler8ShutdownEv(%"class.blink::ResourceLoadScheduler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  store i8 1, i8* %2, align 8
  %6 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 17, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*, %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"** %6, align 8
  store %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* null, %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"** %6, align 8
  %8 = icmp eq %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleD1Ev(%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* nonnull %7) #14
  %10 = bitcast %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %7 to i8*
  tail call void @free(i8* %10) #14
  br label %11

11:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadScheduler7RequestEPNS_27ResourceLoadSchedulerClientENS0_14ThrottleOptionENS_13WebURLRequest8PriorityEiPm(%"class.blink::ResourceLoadScheduler"*, %"class.blink::ResourceLoadSchedulerClient"*, i32, i32, i32, i64*) local_unnamed_addr #0 align 2 {
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.blink::ResourceLoadScheduler::ClientIdWithPriority", align 8
  %10 = alloca %"struct.blink::ResourceLoadScheduler::ClientInfo"*, align 8
  %11 = ptrtoint %"class.blink::ResourceLoadSchedulerClient"* %1 to i64
  %12 = tail call i64 @_ZN5blink21ResourceLoadScheduler16GenerateClientIdEv(%"class.blink::ResourceLoadScheduler"* %0)
  store i64 %12, i64* %5, align 8
  %13 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %308

16:                                               ; preds = %6
  %17 = icmp eq i32 %2, 1
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 23
  %20 = load i32, i32* %19, align 8
  %21 = icmp ne i32 %20, 1
  %22 = zext i1 %21 to i32
  br label %23

23:                                               ; preds = %18, %16
  %24 = phi i32 [ %2, %16 ], [ %22, %18 ]
  %25 = bitcast %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #14
  %26 = getelementptr inbounds %"class.blink::ResourceLoadScheduler::ClientIdWithPriority", %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* %9, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::ResourceLoadScheduler::ClientIdWithPriority", %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* %9, i64 0, i32 1
  %28 = getelementptr inbounds %"class.blink::ResourceLoadScheduler::ClientIdWithPriority", %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* %9, i64 0, i32 2
  store i64 %12, i64* %26, align 8
  store i32 %3, i32* %27, align 8
  store i32 %4, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 13
  %30 = load i32, i32* %29, align 4
  %31 = icmp ult i32 %30, 3
  %32 = icmp eq i32 %24, 0
  %33 = icmp ne i32 %24, 2
  %34 = select i1 %31, i1 %32, i1 %33
  br i1 %34, label %66, label %35

35:                                               ; preds = %23
  %36 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37)
  store i64 %12, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %38 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsDelayTypeELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN5blink8features44kDelayCompetingLowPriorityRequestsDelayParamE) #14
  %39 = icmp ult i32 %38, 3
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsThresholdELb1EE3GetEv(%"struct.base::FeatureParam.275"* nonnull @_ZN5blink8features48kDelayCompetingLowPriorityRequestsThresholdParamE) #14
  switch i32 %41, label %43 [
    i32 1, label %52
    i32 0, label %42
  ]

42:                                               ; preds = %40
  br label %52

43:                                               ; preds = %40, %35
  %44 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  %51 = select i1 %50, i32 2, i32 3
  br label %52

52:                                               ; preds = %47, %43, %42, %40
  %53 = phi i32 [ %51, %47 ], [ 2, %42 ], [ 3, %40 ], [ 3, %43 ]
  %54 = icmp sgt i32 %53, %3
  br i1 %54, label %59, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 20
  %57 = load i32, i32* %56, align 8
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %52, %55
  %60 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 9, i32 0
  %61 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERmRS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %60, i64* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %8) #14
  %62 = bitcast %"class.blink::ResourceLoadSchedulerClient"* %1 to void (%"class.blink::ResourceLoadSchedulerClient"*)***
  %63 = load void (%"class.blink::ResourceLoadSchedulerClient"*)**, void (%"class.blink::ResourceLoadSchedulerClient"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::ResourceLoadSchedulerClient"*)*, void (%"class.blink::ResourceLoadSchedulerClient"*)** %63, i64 1
  %65 = load void (%"class.blink::ResourceLoadSchedulerClient"*)*, void (%"class.blink::ResourceLoadSchedulerClient"*)** %64, align 8
  call void %65(%"class.blink::ResourceLoadSchedulerClient"* %1) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37)
  br label %307

66:                                               ; preds = %23
  %67 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15
  %68 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"class.std::__1::__tree_node.288"**
  %70 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node.288"* %70, null
  br i1 %71, label %100, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %74

74:                                               ; preds = %96, %72
  %75 = phi %"class.std::__1::__tree_node.288"* [ %99, %96 ], [ %70, %72 ]
  %76 = phi %"class.std::__1::__tree_node_base"** [ %98, %96 ], [ %73, %72 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %75, i64 0, i32 1, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp slt i32 %24, %78
  br i1 %79, label %80, label %86

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %75, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %84, label %96

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %75, i64 0, i32 0, i32 0
  br label %102

86:                                               ; preds = %74
  %87 = icmp slt i32 %78, %24
  br i1 %87, label %88, label %94

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %75, i64 0, i32 0, i32 1
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %75, i64 0, i32 0, i32 0
  br label %102

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %75, i64 0, i32 0, i32 0
  br label %102

96:                                               ; preds = %88, %80
  %97 = phi %"class.std::__1::__tree_node_base"* [ %82, %80 ], [ %90, %88 ]
  %98 = phi %"class.std::__1::__tree_node_base"** [ %81, %80 ], [ %89, %88 ]
  %99 = bitcast %"class.std::__1::__tree_node_base"* %97 to %"class.std::__1::__tree_node.288"*
  br label %74

100:                                              ; preds = %66
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  br label %102

102:                                              ; preds = %100, %94, %92, %84
  %103 = phi %"class.std::__1::__tree_end_node"* [ %68, %100 ], [ %85, %84 ], [ %93, %92 ], [ %95, %94 ]
  %104 = phi %"class.std::__1::__tree_node_base"** [ %101, %100 ], [ %81, %84 ], [ %89, %92 ], [ %76, %94 ]
  %105 = bitcast %"class.std::__1::__tree_node_base"** %104 to %"class.std::__1::__tree_node.288"**
  %106 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node.288"* %106, null
  br i1 %107, label %108, label %136

108:                                              ; preds = %102
  %109 = tail call i8* @_Znwm(i64 64) #15, !noalias !5
  %110 = getelementptr inbounds i8, i8* %109, i64 32
  %111 = bitcast i8* %110 to i32*
  store i32 %24, i32* %111, align 8, !noalias !5
  %112 = getelementptr inbounds i8, i8* %109, i64 48
  %113 = getelementptr inbounds i8, i8* %109, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false) #14, !noalias !5
  %114 = bitcast i8* %113 to i8**
  store i8* %112, i8** %114, align 8, !noalias !5
  %115 = bitcast i8* %109 to %"class.std::__1::__tree_node.288"*
  %116 = bitcast i8* %109 to %"class.std::__1::__tree_node_base"*
  %117 = getelementptr inbounds i8, i8* %109, i64 16
  %118 = bitcast i8* %117 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %103, %"class.std::__1::__tree_end_node"** %118, align 8
  %119 = bitcast %"class.std::__1::__tree_node_base"** %104 to i8**
  store i8* %109, i8** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %67, i64 0, i32 0, i32 0
  %121 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, null
  br i1 %124, label %129, label %125

125:                                              ; preds = %108
  %126 = ptrtoint %"class.std::__1::__tree_node_base"* %123 to i64
  %127 = bitcast %"class.std::__1::map"* %67 to i64*
  store i64 %126, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  br label %129

129:                                              ; preds = %125, %108
  %130 = phi %"class.std::__1::__tree_node_base"* [ %116, %108 ], [ %128, %125 ]
  %131 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  %132 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %131, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %132, %"class.std::__1::__tree_node_base"* %130) #14
  %133 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %133, align 8
  br label %136

136:                                              ; preds = %102, %129
  %137 = phi %"class.std::__1::__tree_node.288"* [ %115, %129 ], [ %106, %102 ]
  %138 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %137, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %220

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 19
  %143 = load %"class.base::Clock"*, %"class.base::Clock"** %142, align 8
  %144 = bitcast %"class.base::Clock"* %143 to i64 (%"class.base::Clock"*)***
  %145 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %144, align 8
  %146 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %145, i64 2
  %147 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %146, align 8
  %148 = tail call i64 %147(%"class.base::Clock"* %143) #14
  %149 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16
  %150 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %151 = bitcast %"class.std::__1::__tree_end_node"* %150 to %"class.std::__1::__tree_node.292"**
  %152 = load %"class.std::__1::__tree_node.292"*, %"class.std::__1::__tree_node.292"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node.292"* %152, null
  br i1 %153, label %182, label %154

154:                                              ; preds = %141
  %155 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %156

156:                                              ; preds = %178, %154
  %157 = phi %"class.std::__1::__tree_node.292"* [ %181, %178 ], [ %152, %154 ]
  %158 = phi %"class.std::__1::__tree_node_base"** [ %180, %178 ], [ %155, %154 ]
  %159 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %157, i64 0, i32 1, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp slt i32 %24, %160
  br i1 %161, label %162, label %168

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %157, i64 0, i32 0, i32 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, null
  br i1 %165, label %166, label %178

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %157, i64 0, i32 0, i32 0
  br label %184

168:                                              ; preds = %156
  %169 = icmp slt i32 %160, %24
  br i1 %169, label %170, label %176

170:                                              ; preds = %168
  %171 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %157, i64 0, i32 0, i32 1
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = icmp eq %"class.std::__1::__tree_node_base"* %172, null
  br i1 %173, label %174, label %178

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %157, i64 0, i32 0, i32 0
  br label %184

176:                                              ; preds = %168
  %177 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %157, i64 0, i32 0, i32 0
  br label %184

178:                                              ; preds = %170, %162
  %179 = phi %"class.std::__1::__tree_node_base"* [ %164, %162 ], [ %172, %170 ]
  %180 = phi %"class.std::__1::__tree_node_base"** [ %163, %162 ], [ %171, %170 ]
  %181 = bitcast %"class.std::__1::__tree_node_base"* %179 to %"class.std::__1::__tree_node.292"*
  br label %156

182:                                              ; preds = %141
  %183 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %150, i64 0, i32 0
  br label %184

184:                                              ; preds = %182, %176, %174, %166
  %185 = phi %"class.std::__1::__tree_end_node"* [ %150, %182 ], [ %167, %166 ], [ %175, %174 ], [ %177, %176 ]
  %186 = phi %"class.std::__1::__tree_node_base"** [ %183, %182 ], [ %163, %166 ], [ %171, %174 ], [ %158, %176 ]
  %187 = bitcast %"class.std::__1::__tree_node_base"** %186 to %"class.std::__1::__tree_node.292"**
  %188 = load %"class.std::__1::__tree_node.292"*, %"class.std::__1::__tree_node.292"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node.292"* %188, null
  br i1 %189, label %190, label %217

190:                                              ; preds = %184
  %191 = tail call i8* @_Znwm(i64 48) #15, !noalias !8
  %192 = getelementptr inbounds i8, i8* %191, i64 32
  %193 = bitcast i8* %192 to i32*
  store i32 %24, i32* %193, align 8, !noalias !8
  %194 = getelementptr inbounds i8, i8* %191, i64 40
  %195 = bitcast i8* %194 to i64*
  store i64 0, i64* %195, align 8, !noalias !8
  %196 = bitcast i8* %191 to %"class.std::__1::__tree_node.292"*
  %197 = bitcast i8* %191 to %"class.std::__1::__tree_node_base"*
  %198 = getelementptr inbounds i8, i8* %191, i64 16
  %199 = bitcast i8* %198 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %191, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %185, %"class.std::__1::__tree_end_node"** %199, align 8
  %200 = bitcast %"class.std::__1::__tree_node_base"** %186 to i8**
  store i8* %191, i8** %200, align 8
  %201 = getelementptr inbounds %"class.std::__1::map.31", %"class.std::__1::map.31"* %149, i64 0, i32 0, i32 0
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %201, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, null
  br i1 %205, label %210, label %206

206:                                              ; preds = %190
  %207 = ptrtoint %"class.std::__1::__tree_node_base"* %204 to i64
  %208 = bitcast %"class.std::__1::map.31"* %149 to i64*
  store i64 %207, i64* %208, align 8
  %209 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  br label %210

210:                                              ; preds = %206, %190
  %211 = phi %"class.std::__1::__tree_node_base"* [ %197, %190 ], [ %209, %206 ]
  %212 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %213, %"class.std::__1::__tree_node_base"* %211) #14
  %214 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %215 = load i64, i64* %214, align 8
  %216 = add i64 %215, 1
  store i64 %216, i64* %214, align 8
  br label %217

217:                                              ; preds = %184, %210
  %218 = phi %"class.std::__1::__tree_node.292"* [ %196, %210 ], [ %188, %184 ]
  %219 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %218, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 %148, i64* %219, align 8
  br label %220

220:                                              ; preds = %217, %136
  %221 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %69, align 8
  %222 = icmp eq %"class.std::__1::__tree_node.288"* %221, null
  br i1 %222, label %251, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %225

225:                                              ; preds = %247, %223
  %226 = phi %"class.std::__1::__tree_node.288"* [ %250, %247 ], [ %221, %223 ]
  %227 = phi %"class.std::__1::__tree_node_base"** [ %249, %247 ], [ %224, %223 ]
  %228 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %226, i64 0, i32 1, i32 0, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = icmp slt i32 %24, %229
  br i1 %230, label %231, label %237

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %226, i64 0, i32 0, i32 0, i32 0
  %233 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %232, align 8
  %234 = icmp eq %"class.std::__1::__tree_node_base"* %233, null
  br i1 %234, label %235, label %247

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %226, i64 0, i32 0, i32 0
  br label %253

237:                                              ; preds = %225
  %238 = icmp slt i32 %229, %24
  br i1 %238, label %239, label %245

239:                                              ; preds = %237
  %240 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %226, i64 0, i32 0, i32 1
  %241 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %240, align 8
  %242 = icmp eq %"class.std::__1::__tree_node_base"* %241, null
  br i1 %242, label %243, label %247

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %226, i64 0, i32 0, i32 0
  br label %253

245:                                              ; preds = %237
  %246 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %226, i64 0, i32 0, i32 0
  br label %253

247:                                              ; preds = %239, %231
  %248 = phi %"class.std::__1::__tree_node_base"* [ %233, %231 ], [ %241, %239 ]
  %249 = phi %"class.std::__1::__tree_node_base"** [ %232, %231 ], [ %240, %239 ]
  %250 = bitcast %"class.std::__1::__tree_node_base"* %248 to %"class.std::__1::__tree_node.288"*
  br label %225

251:                                              ; preds = %220
  %252 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  br label %253

253:                                              ; preds = %251, %245, %243, %235
  %254 = phi %"class.std::__1::__tree_end_node"* [ %68, %251 ], [ %236, %235 ], [ %244, %243 ], [ %246, %245 ]
  %255 = phi %"class.std::__1::__tree_node_base"** [ %252, %251 ], [ %232, %235 ], [ %240, %243 ], [ %227, %245 ]
  %256 = bitcast %"class.std::__1::__tree_node_base"** %255 to %"class.std::__1::__tree_node.288"**
  %257 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %256, align 8
  %258 = icmp eq %"class.std::__1::__tree_node.288"* %257, null
  br i1 %258, label %259, label %287

259:                                              ; preds = %253
  %260 = tail call i8* @_Znwm(i64 64) #15, !noalias !11
  %261 = getelementptr inbounds i8, i8* %260, i64 32
  %262 = bitcast i8* %261 to i32*
  store i32 %24, i32* %262, align 8, !noalias !11
  %263 = getelementptr inbounds i8, i8* %260, i64 48
  %264 = getelementptr inbounds i8, i8* %260, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %263, i8 0, i64 16, i1 false) #14, !noalias !11
  %265 = bitcast i8* %264 to i8**
  store i8* %263, i8** %265, align 8, !noalias !11
  %266 = bitcast i8* %260 to %"class.std::__1::__tree_node.288"*
  %267 = bitcast i8* %260 to %"class.std::__1::__tree_node_base"*
  %268 = getelementptr inbounds i8, i8* %260, i64 16
  %269 = bitcast i8* %268 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %260, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %269, align 8
  %270 = bitcast %"class.std::__1::__tree_node_base"** %255 to i8**
  store i8* %260, i8** %270, align 8
  %271 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %67, i64 0, i32 0, i32 0
  %272 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %271, align 8
  %273 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %272, i64 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  %275 = icmp eq %"class.std::__1::__tree_node_base"* %274, null
  br i1 %275, label %280, label %276

276:                                              ; preds = %259
  %277 = ptrtoint %"class.std::__1::__tree_node_base"* %274 to i64
  %278 = bitcast %"class.std::__1::map"* %67 to i64*
  store i64 %277, i64* %278, align 8
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %255, align 8
  br label %280

280:                                              ; preds = %276, %259
  %281 = phi %"class.std::__1::__tree_node_base"* [ %267, %259 ], [ %279, %276 ]
  %282 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  %283 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %282, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %283, %"class.std::__1::__tree_node_base"* %281) #14
  %284 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %285 = load i64, i64* %284, align 8
  %286 = add i64 %285, 1
  store i64 %286, i64* %284, align 8
  br label %287

287:                                              ; preds = %253, %280
  %288 = phi %"class.std::__1::__tree_node.288"* [ %266, %280 ], [ %257, %253 ]
  %289 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %288, i64 0, i32 1, i32 0, i32 1, i32 0
  %290 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.256"* %289, %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* nonnull dereferenceable(16) %9, %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* nonnull dereferenceable(16) %9) #14
  %291 = bitcast %"struct.blink::ResourceLoadScheduler::ClientInfo"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291) #14
  %292 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ResourceLoadScheduler10ClientInfoEEEPhm(i64 24) #14
  %293 = bitcast i8* %292 to i64*
  store i64 %11, i64* %293, align 8
  %294 = getelementptr inbounds i8, i8* %292, i64 8
  %295 = bitcast i8* %294 to i32*
  store i32 %24, i32* %295, align 8
  %296 = getelementptr inbounds i8, i8* %292, i64 12
  %297 = bitcast i8* %296 to i32*
  store i32 %3, i32* %297, align 4
  %298 = getelementptr inbounds i8, i8* %292, i64 16
  %299 = bitcast i8* %298 to i32*
  store i32 %4, i32* %299, align 8
  %300 = getelementptr inbounds i8, i8* %292, i64 -4
  %301 = bitcast i8* %300 to i16*
  %302 = load atomic i16, i16* %301 monotonic, align 2
  %303 = or i16 %302, 1
  store atomic i16 %303, i16* %301 release, align 2
  %304 = bitcast %"struct.blink::ResourceLoadScheduler::ClientInfo"** %10 to i8**
  store i8* %292, i8** %304, align 8
  %305 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0
  %306 = call { %"struct.WTF::KeyValuePair.18"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERmPS5_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.16"* %305, i64* dereferenceable(8) %5, %"struct.blink::ResourceLoadScheduler::ClientInfo"** nonnull dereferenceable(8) %10) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %291) #14
  call void @_ZN5blink21ResourceLoadScheduler8MaybeRunEv(%"class.blink::ResourceLoadScheduler"* %0)
  br label %307

307:                                              ; preds = %287, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #14
  br label %308

308:                                              ; preds = %6, %307
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink21ResourceLoadScheduler16GenerateClientIdEv(%"class.blink::ResourceLoadScheduler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 8
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 1
  store i64 %7, i64* %5, align 8
  %8 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp eq i64 %7, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %9, align 8
  br label %22

13:                                               ; preds = %1
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %9, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 269, %"class.logging::CheckOpResult"* nonnull %3) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret i64 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink21ResourceLoadScheduler17IsClientDelayableENS0_14ThrottleOptionE(%"class.blink::ResourceLoadScheduler"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 13
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, 3
  %6 = icmp eq i32 %1, 0
  %7 = icmp ne i32 %1, 2
  %8 = select i1 %5, i1 %6, i1 %7
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadScheduler3RunEmPNS_27ResourceLoadSchedulerClientEbNS_13WebURLRequest8PriorityE(%"class.blink::ResourceLoadScheduler"*, i64, %"class.blink::ResourceLoadSchedulerClient"*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store i64 %1, i64* %6, align 8
  store i32 %4, i32* %7, align 4
  %8 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsDelayTypeELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN5blink8features44kDelayCompetingLowPriorityRequestsDelayParamE) #14
  %9 = icmp ult i32 %8, 3
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsThresholdELb1EE3GetEv(%"struct.base::FeatureParam.275"* nonnull @_ZN5blink8features48kDelayCompetingLowPriorityRequestsThresholdParamE) #14
  switch i32 %11, label %13 [
    i32 1, label %22
    i32 0, label %12
  ]

12:                                               ; preds = %10
  br label %22

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 1
  %21 = select i1 %20, i32 2, i32 3
  br label %22

22:                                               ; preds = %10, %12, %13, %17
  %23 = phi i32 [ %21, %17 ], [ 2, %12 ], [ 3, %10 ], [ 3, %13 ]
  %24 = icmp sgt i32 %23, %4
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 20
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 8
  br label %29

29:                                               ; preds = %22, %25
  %30 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 9, i32 0
  %31 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERmRS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %30, i64* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %7) #14
  br i1 %3, label %32, label %35

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 10, i32 0
  %34 = call { i64*, i8 } @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKmRmEENS_18HashTableAddResultIS7_mEEOT0_OT1_(%"class.WTF::HashTable.10"* %33, i64* nonnull dereferenceable(8) %6, i64* nonnull dereferenceable(8) %6) #14
  br label %35

35:                                               ; preds = %32, %29
  %36 = bitcast %"class.blink::ResourceLoadSchedulerClient"* %2 to void (%"class.blink::ResourceLoadSchedulerClient"*)***
  %37 = load void (%"class.blink::ResourceLoadSchedulerClient"*)**, void (%"class.blink::ResourceLoadSchedulerClient"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::ResourceLoadSchedulerClient"*)*, void (%"class.blink::ResourceLoadSchedulerClient"*)** %37, i64 1
  %39 = load void (%"class.blink::ResourceLoadSchedulerClient"*)*, void (%"class.blink::ResourceLoadSchedulerClient"*)** %38, align 8
  call void %39(%"class.blink::ResourceLoadSchedulerClient"* %2) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadScheduler11SetPriorityEmNS_13WebURLRequest8PriorityEi(%"class.blink::ResourceLoadScheduler"*, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  store i32 %3, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.15", %"class.WTF::HashMap.15"* %8, i64 0, i32 0
  %10 = call { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.16"* %9, i64* nonnull dereferenceable(8) %5) #14
  %11 = extractvalue { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } %10, 0
  %12 = getelementptr inbounds %"class.WTF::HashMap.15", %"class.WTF::HashMap.15"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %13, i64 %16
  %18 = icmp eq %"struct.WTF::KeyValuePair.18"* %11, %17
  br i1 %18, label %210, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %11, i64 0, i32 1, i32 0, i32 0
  %22 = load %"struct.blink::ResourceLoadScheduler::ClientInfo"*, %"struct.blink::ResourceLoadScheduler::ClientInfo"** %21, align 8
  %23 = getelementptr inbounds %"struct.blink::ResourceLoadScheduler::ClientInfo", %"struct.blink::ResourceLoadScheduler::ClientInfo"* %22, i64 0, i32 1
  %24 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node.288"**
  %26 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node.288"* %26, null
  br i1 %27, label %57, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = load i32, i32* %23, align 4
  br label %31

31:                                               ; preds = %53, %28
  %32 = phi %"class.std::__1::__tree_node.288"* [ %56, %53 ], [ %26, %28 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %55, %53 ], [ %29, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %32, i64 0, i32 1, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %30, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %32, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %41, label %53

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %32, i64 0, i32 0, i32 0
  br label %59

43:                                               ; preds = %31
  %44 = icmp slt i32 %35, %30
  br i1 %44, label %45, label %51

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %32, i64 0, i32 0, i32 1
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %32, i64 0, i32 0, i32 0
  br label %59

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %32, i64 0, i32 0, i32 0
  br label %59

53:                                               ; preds = %45, %37
  %54 = phi %"class.std::__1::__tree_node_base"* [ %39, %37 ], [ %47, %45 ]
  %55 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %46, %45 ]
  %56 = bitcast %"class.std::__1::__tree_node_base"* %54 to %"class.std::__1::__tree_node.288"*
  br label %31

57:                                               ; preds = %19
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  br label %59

59:                                               ; preds = %57, %51, %49, %41
  %60 = phi %"class.std::__1::__tree_end_node"* [ %24, %57 ], [ %42, %41 ], [ %50, %49 ], [ %52, %51 ]
  %61 = phi %"class.std::__1::__tree_node_base"** [ %58, %57 ], [ %38, %41 ], [ %46, %49 ], [ %33, %51 ]
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node.288"**
  %63 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node.288"* %63, null
  br i1 %64, label %65, label %95

65:                                               ; preds = %59
  %66 = call i8* @_Znwm(i64 64) #15, !noalias !14
  %67 = getelementptr inbounds i8, i8* %66, i64 32
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %23, align 4, !noalias !14
  store i32 %69, i32* %68, align 8, !noalias !14
  %70 = getelementptr inbounds i8, i8* %66, i64 48
  %71 = getelementptr inbounds i8, i8* %66, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #14, !noalias !14
  %72 = bitcast i8* %71 to i8**
  store i8* %70, i8** %72, align 8, !noalias !14
  %73 = bitcast i8* %66 to %"class.std::__1::__tree_node.288"*
  %74 = bitcast i8* %66 to %"class.std::__1::__tree_node_base"*
  %75 = getelementptr inbounds i8, i8* %66, i64 16
  %76 = bitcast i8* %75 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %60, %"class.std::__1::__tree_end_node"** %76, align 8
  %77 = bitcast %"class.std::__1::__tree_node_base"** %61 to i8**
  store i8* %66, i8** %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %20, i64 0, i32 0, i32 0
  %79 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 0, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %65
  %84 = ptrtoint %"class.std::__1::__tree_node_base"* %81 to i64
  %85 = bitcast %"class.std::__1::map"* %20 to i64*
  store i64 %84, i64* %85, align 8
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  br label %87

87:                                               ; preds = %83, %65
  %88 = phi %"class.std::__1::__tree_node_base"* [ %74, %65 ], [ %86, %83 ]
  %89 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %90, %"class.std::__1::__tree_node_base"* %88) #14
  %91 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  store i64 %93, i64* %91, align 8
  %94 = load %"struct.blink::ResourceLoadScheduler::ClientInfo"*, %"struct.blink::ResourceLoadScheduler::ClientInfo"** %21, align 8
  br label %95

95:                                               ; preds = %59, %87
  %96 = phi %"struct.blink::ResourceLoadScheduler::ClientInfo"* [ %94, %87 ], [ %22, %59 ]
  %97 = phi %"class.std::__1::__tree_node.288"* [ %73, %87 ], [ %63, %59 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %97, i64 0, i32 1, i32 0, i32 1
  %99 = load i64, i64* %5, align 8
  %100 = getelementptr inbounds %"struct.blink::ResourceLoadScheduler::ClientInfo", %"struct.blink::ResourceLoadScheduler::ClientInfo"* %96, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.blink::ResourceLoadScheduler::ClientInfo", %"struct.blink::ResourceLoadScheduler::ClientInfo"* %96, i64 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %97, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.std::__1::__tree_node.291"**
  %106 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node.291"* %106, null
  %108 = bitcast %"class.std::__1::__tree_node.291"* %106 to %"class.std::__1::__tree_node_base"*
  br i1 %107, label %158, label %109

109:                                              ; preds = %95, %127
  %110 = phi %"class.std::__1::__tree_end_node"* [ %134, %127 ], [ %104, %95 ]
  %111 = phi %"class.std::__1::__tree_node.291"* [ %135, %127 ], [ %106, %95 ]
  %112 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %111, i64 0, i32 1, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, %101
  br i1 %114, label %117, label %115

115:                                              ; preds = %109
  %116 = icmp sgt i32 %113, %101
  br label %127

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %111, i64 0, i32 1, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, %103
  br i1 %120, label %123, label %121

121:                                              ; preds = %117
  %122 = icmp sgt i32 %119, %103
  br label %127

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %111, i64 0, i32 1, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %99
  br label %127

127:                                              ; preds = %123, %121, %115
  %128 = phi i1 [ %116, %115 ], [ %122, %121 ], [ %126, %123 ]
  %129 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %111, i64 0, i32 0, i32 1
  %130 = bitcast %"class.std::__1::__tree_node_base"** %129 to %"class.std::__1::__tree_node.291"**
  %131 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %111, i64 0, i32 0, i32 0
  %132 = bitcast %"class.std::__1::__tree_node.291"* %111 to %"class.std::__1::__tree_node.291"**
  %133 = select i1 %128, %"class.std::__1::__tree_node.291"** %130, %"class.std::__1::__tree_node.291"** %132
  %134 = select i1 %128, %"class.std::__1::__tree_end_node"* %110, %"class.std::__1::__tree_end_node"* %131
  %135 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %133, align 8
  %136 = icmp eq %"class.std::__1::__tree_node.291"* %135, null
  br i1 %136, label %137, label %109

137:                                              ; preds = %127
  %138 = icmp eq %"class.std::__1::__tree_end_node"* %134, %104
  br i1 %138, label %158, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 4
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 5
  %142 = bitcast %"class.std::__1::__tree_end_node"* %141 to i32*
  %143 = load i32, i32* %142, align 8
  %144 = icmp eq i32 %101, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = icmp sgt i32 %101, %143
  br i1 %146, label %158, label %159

147:                                              ; preds = %139
  %148 = bitcast %"class.std::__1::__tree_end_node"* %140 to %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"*
  %149 = getelementptr inbounds %"class.blink::ResourceLoadScheduler::ClientIdWithPriority", %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* %148, i64 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %103, %150
  br i1 %151, label %154, label %152

152:                                              ; preds = %147
  %153 = icmp sgt i32 %103, %150
  br i1 %153, label %158, label %159

154:                                              ; preds = %147
  %155 = bitcast %"class.std::__1::__tree_end_node"* %140 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = icmp ult i64 %99, %156
  br i1 %157, label %158, label %159

158:                                              ; preds = %154, %152, %145, %137, %95
  br label %159

159:                                              ; preds = %145, %152, %154, %158
  %160 = phi %"class.std::__1::__tree_end_node"* [ %104, %158 ], [ %134, %152 ], [ %134, %145 ], [ %134, %154 ]
  %161 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %160, i64 1, i32 0
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, null
  br i1 %163, label %164, label %172

164:                                              ; preds = %159
  %165 = bitcast %"class.std::__1::__tree_end_node"* %160 to %"class.std::__1::__tree_node_base"*
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %160, i64 2
  %167 = bitcast %"class.std::__1::__tree_end_node"* %166 to %"class.std::__1::__tree_end_node"**
  %168 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %168, i64 0, i32 0
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %169, align 8
  %171 = icmp eq %"class.std::__1::__tree_node_base"* %170, %165
  br i1 %171, label %188, label %179

172:                                              ; preds = %159, %172
  %173 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %162, %159 ]
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %173, i64 0, i32 0, i32 0
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %177, label %172

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %173, i64 0, i32 0
  br label %188

179:                                              ; preds = %164, %179
  %180 = phi %"class.std::__1::__tree_end_node"** [ %183, %179 ], [ %167, %164 ]
  %181 = bitcast %"class.std::__1::__tree_end_node"** %180 to %"class.std::__1::__tree_node_base"**
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %182, i64 0, i32 2
  %184 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %183, align 8
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 0, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = icmp eq %"class.std::__1::__tree_node_base"* %186, %182
  br i1 %187, label %188, label %179

188:                                              ; preds = %179, %177, %164
  %189 = phi %"class.std::__1::__tree_end_node"* [ %178, %177 ], [ %168, %164 ], [ %184, %179 ]
  %190 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %98, i64 0, i32 0, i32 0
  %191 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %190, align 8
  %192 = icmp eq %"class.std::__1::__tree_end_node"* %191, %160
  br i1 %192, label %193, label %196

193:                                              ; preds = %188
  %194 = ptrtoint %"class.std::__1::__tree_end_node"* %189 to i64
  %195 = bitcast %"class.std::__1::set"* %98 to i64*
  store i64 %194, i64* %195, align 8
  br label %196

196:                                              ; preds = %188, %193
  %197 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %97, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %198 = load i64, i64* %197, align 8
  %199 = add i64 %198, -1
  store i64 %199, i64* %197, align 8
  %200 = bitcast %"class.std::__1::__tree_end_node"* %160 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %108, %"class.std::__1::__tree_node_base"* %200) #14
  %201 = bitcast %"class.std::__1::__tree_end_node"* %160 to i8*
  call void @_ZdlPv(i8* %201) #15
  %202 = load i32, i32* %6, align 4
  %203 = load %"struct.blink::ResourceLoadScheduler::ClientInfo"*, %"struct.blink::ResourceLoadScheduler::ClientInfo"** %21, align 8
  %204 = getelementptr inbounds %"struct.blink::ResourceLoadScheduler::ClientInfo", %"struct.blink::ResourceLoadScheduler::ClientInfo"* %203, i64 0, i32 2
  store i32 %202, i32* %204, align 4
  %205 = load i32, i32* %7, align 4
  %206 = load %"struct.blink::ResourceLoadScheduler::ClientInfo"*, %"struct.blink::ResourceLoadScheduler::ClientInfo"** %21, align 8
  %207 = getelementptr inbounds %"struct.blink::ResourceLoadScheduler::ClientInfo", %"struct.blink::ResourceLoadScheduler::ClientInfo"* %206, i64 0, i32 3
  store i32 %205, i32* %207, align 8
  %208 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %98, i64 0, i32 0
  %209 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE21__emplace_unique_implIJRmRNS1_13WebURLRequest8PriorityERiEEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEEDpOT_(%"class.std::__1::__tree.256"* %208, i64* nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7) #14
  call void @_ZN5blink21ResourceLoadScheduler8MaybeRunEv(%"class.blink::ResourceLoadScheduler"* %0)
  br label %210

210:                                              ; preds = %4, %196
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21ResourceLoadScheduler7ReleaseEmNS0_13ReleaseOptionERKNS0_18TrafficReportHintsE(%"class.blink::ResourceLoadScheduler"*, i64, i32, %"class.blink::ResourceLoadScheduler::TrafficReportHints"* nocapture readnone dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  store i64 %1, i64* %5, align 8
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %216, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 9
  %9 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %8, i64 0, i32 0
  %10 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE4findERKm(%"class.WTF::HashTable"* %9, i64* nonnull dereferenceable(8) %5) #14
  %11 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %10, 0
  %12 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 9, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %16
  %18 = icmp eq %"struct.WTF::KeyValuePair"* %11, %17
  br i1 %18, label %201, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsDelayTypeELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN5blink8features44kDelayCompetingLowPriorityRequestsDelayParamE) #14
  %23 = icmp ult i32 %22, 3
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsThresholdELb1EE3GetEv(%"struct.base::FeatureParam.275"* nonnull @_ZN5blink8features48kDelayCompetingLowPriorityRequestsThresholdParamE) #14
  switch i32 %25, label %27 [
    i32 1, label %36
    i32 0, label %26
  ]

26:                                               ; preds = %24
  br label %36

27:                                               ; preds = %24, %19
  %28 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 1
  %35 = select i1 %34, i32 2, i32 3
  br label %36

36:                                               ; preds = %24, %26, %27, %31
  %37 = phi i32 [ %35, %31 ], [ 2, %26 ], [ 3, %24 ], [ 3, %27 ]
  %38 = icmp slt i32 %21, %37
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 20
  %41 = load i32, i32* %40, align 8
  %42 = add nsw i32 %41, -1
  store i32 %42, i32* %40, align 8
  br label %43

43:                                               ; preds = %36, %39
  %44 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE4findERKm(%"class.WTF::HashTable"* %9, i64* nonnull dereferenceable(8) %5) #14
  %45 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %44, 0
  %46 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %12, align 8
  %47 = load i32, i32* %14, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %48
  %50 = icmp eq %"struct.WTF::KeyValuePair"* %49, %45
  br i1 %50, label %98, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0
  store i64 -1, i64* %52, align 8
  %53 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 9, i32 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = add i32 %54, 1
  %56 = and i32 %55, 2147483647
  %57 = and i32 %54, -2147483648
  %58 = or i32 %56, %57
  store i32 %58, i32* %53, align 8
  %59 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 9, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %60, -1
  store i32 %61, i32* %59, align 4
  %62 = mul i32 %61, 6
  %63 = load i32, i32* %14, align 8
  %64 = icmp ult i32 %62, %63
  %65 = icmp ugt i32 %63, 8
  %66 = and i1 %64, %65
  br i1 %66, label %67, label %98

67:                                               ; preds = %51
  %68 = lshr i32 %63, 1
  %69 = zext i32 %68 to i64
  %70 = shl nuw nsw i64 %69, 4
  %71 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %70, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEEEEPKcv, i64 0, i64 0)) #14
  %72 = bitcast i8* %71 to %"struct.WTF::KeyValuePair"*
  %73 = icmp eq i32 %68, 0
  br i1 %73, label %96, label %74

74:                                               ; preds = %67
  %75 = and i64 %69, 1
  %76 = icmp eq i32 %68, 1
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = sub nsw i64 %69, %75
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %87, %79 ]
  %81 = phi i64 [ %78, %77 ], [ %88, %79 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 %80, i32 0
  store i64 0, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 %80, i32 1
  store i32 -128, i32* %83, align 8
  %84 = or i64 %80, 1
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 %84, i32 0
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 %84, i32 1
  store i32 -128, i32* %86, align 8
  %87 = add nuw nsw i64 %80, 2
  %88 = add i64 %81, -2
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %79

90:                                               ; preds = %79, %74
  %91 = phi i64 [ 0, %74 ], [ %87, %79 ]
  %92 = icmp eq i64 %75, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 %91, i32 0
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 %91, i32 1
  store i32 -128, i32* %95, align 8
  br label %96

96:                                               ; preds = %93, %90, %67
  %97 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %9, %"struct.WTF::KeyValuePair"* %72, i32 %68, %"struct.WTF::KeyValuePair"* null) #14
  br label %98

98:                                               ; preds = %43, %51, %96
  %99 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 10
  %100 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %99, i64 0, i32 0
  %101 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %99, i64 0, i32 0, i32 0
  %102 = load i64*, i64** %101, align 8
  %103 = icmp eq i64* %102, null
  %104 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 10, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  br i1 %103, label %168, label %106

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  %108 = zext i32 %107 to i64
  %109 = load i64, i64* %5, align 8
  %110 = shl i64 %109, 32
  %111 = xor i64 %110, -1
  %112 = add i64 %109, %111
  %113 = lshr i64 %112, 22
  %114 = xor i64 %113, %112
  %115 = shl i64 %114, 13
  %116 = xor i64 %115, -1
  %117 = add i64 %114, %116
  %118 = lshr i64 %117, 8
  %119 = xor i64 %118, %117
  %120 = mul i64 %119, 9
  %121 = lshr i64 %120, 15
  %122 = xor i64 %121, %120
  %123 = shl i64 %122, 27
  %124 = xor i64 %123, -1
  %125 = add i64 %122, %124
  %126 = lshr i64 %125, 31
  %127 = xor i64 %126, %125
  %128 = trunc i64 %127 to i32
  %129 = and i32 %107, %128
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds i64, i64* %102, i64 %130
  %132 = load i64, i64* %131, align 8
  %133 = icmp eq i64 %132, %109
  br i1 %133, label %163, label %134

134:                                              ; preds = %106
  %135 = xor i32 %128, -1
  %136 = lshr i32 %128, 23
  %137 = add i32 %136, %135
  %138 = shl i32 %137, 12
  %139 = xor i32 %138, %137
  %140 = lshr i32 %139, 7
  %141 = xor i32 %140, %139
  %142 = shl i32 %141, 2
  %143 = xor i32 %142, %141
  %144 = lshr i32 %143, 20
  %145 = xor i32 %144, %143
  %146 = or i32 %145, 1
  %147 = zext i32 %146 to i64
  br label %148

148:                                              ; preds = %153, %134
  %149 = phi i64 [ %132, %134 ], [ %159, %153 ]
  %150 = phi i64 [ %130, %134 ], [ %157, %153 ]
  %151 = phi i64 [ 0, %134 ], [ %155, %153 ]
  %152 = icmp eq i64 %149, 0
  br i1 %152, label %168, label %153

153:                                              ; preds = %148
  %154 = icmp eq i64 %151, 0
  %155 = select i1 %154, i64 %147, i64 %151
  %156 = add i64 %155, %150
  %157 = and i64 %156, %108
  %158 = getelementptr inbounds i64, i64* %102, i64 %157
  %159 = load i64, i64* %158, align 8
  %160 = icmp eq i64 %159, %109
  br i1 %160, label %161, label %148

161:                                              ; preds = %153
  %162 = getelementptr inbounds i64, i64* %102, i64 %157
  br label %163

163:                                              ; preds = %161, %106
  %164 = phi i64* [ %131, %106 ], [ %162, %161 ]
  %165 = icmp eq i64* %164, null
  br i1 %165, label %168, label %166

166:                                              ; preds = %163
  %167 = zext i32 %105 to i64
  br label %171

168:                                              ; preds = %148, %163, %98
  %169 = zext i32 %105 to i64
  %170 = getelementptr inbounds i64, i64* %102, i64 %169
  br label %171

171:                                              ; preds = %166, %168
  %172 = phi i64 [ %167, %166 ], [ %169, %168 ]
  %173 = phi i64* [ %164, %166 ], [ %170, %168 ]
  %174 = getelementptr inbounds i64, i64* %102, i64 %172
  %175 = icmp eq i64* %174, %173
  br i1 %175, label %198, label %176

176:                                              ; preds = %171
  store i64 -1, i64* %173, align 8
  %177 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 10, i32 0, i32 3
  %178 = load i32, i32* %177, align 8
  %179 = add i32 %178, 1
  %180 = and i32 %179, 2147483647
  %181 = and i32 %178, -2147483648
  %182 = or i32 %180, %181
  store i32 %182, i32* %177, align 8
  %183 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 10, i32 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = add i32 %184, -1
  store i32 %185, i32* %183, align 4
  %186 = mul i32 %185, 6
  %187 = load i32, i32* %104, align 8
  %188 = icmp ult i32 %186, %187
  %189 = icmp ugt i32 %187, 8
  %190 = and i1 %188, %189
  br i1 %190, label %191, label %198

191:                                              ; preds = %176
  %192 = lshr i32 %187, 1
  %193 = zext i32 %192 to i64
  %194 = shl nuw nsw i64 %193, 3
  %195 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %194, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #14
  call void @llvm.memset.p0i8.i64(i8* align 1 %195, i8 0, i64 %194, i1 false) #14
  %196 = bitcast i8* %195 to i64*
  %197 = call i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE8RehashToEPmjS8_(%"class.WTF::HashTable.10"* %100, i64* %196, i32 %192, i64* null) #14
  br label %198

198:                                              ; preds = %171, %176, %191
  %199 = icmp eq i32 %2, 1
  br i1 %199, label %200, label %216

200:                                              ; preds = %198
  call void @_ZN5blink21ResourceLoadScheduler8MaybeRunEv(%"class.blink::ResourceLoadScheduler"* %0)
  br label %216

201:                                              ; preds = %7
  %202 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0
  %203 = getelementptr inbounds %"class.WTF::HashMap.15", %"class.WTF::HashMap.15"* %202, i64 0, i32 0
  %204 = call { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.16"* %203, i64* nonnull dereferenceable(8) %5) #14
  %205 = extractvalue { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } %204, 0
  %206 = getelementptr inbounds %"class.WTF::HashMap.15", %"class.WTF::HashMap.15"* %202, i64 0, i32 0, i32 0
  %207 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0, i32 1
  %209 = load i32, i32* %208, align 8
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %207, i64 %210
  %212 = icmp eq %"struct.WTF::KeyValuePair.18"* %205, %211
  br i1 %212, label %216, label %213

213:                                              ; preds = %201
  call void @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.16"* %203, %"struct.WTF::KeyValuePair.18"* %205) #14
  %214 = icmp eq i32 %2, 1
  br i1 %214, label %215, label %216

215:                                              ; preds = %213
  call void @_ZN5blink21ResourceLoadScheduler8MaybeRunEv(%"class.blink::ResourceLoadScheduler"* %0)
  br label %216

216:                                              ; preds = %201, %200, %198, %213, %215, %4
  %217 = phi i1 [ false, %4 ], [ true, %200 ], [ true, %198 ], [ true, %215 ], [ true, %213 ], [ false, %201 ]
  ret i1 %217
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21ResourceLoadScheduler27PriorityImportanceThresholdEv(%"class.blink::ResourceLoadScheduler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsDelayTypeELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN5blink8features44kDelayCompetingLowPriorityRequestsDelayParamE)
  %3 = icmp ult i32 %2, 3
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsThresholdELb1EE3GetEv(%"struct.base::FeatureParam.275"* nonnull @_ZN5blink8features48kDelayCompetingLowPriorityRequestsThresholdParamE)
  switch i32 %5, label %7 [
    i32 1, label %16
    i32 0, label %6
  ]

6:                                                ; preds = %4
  br label %16

7:                                                ; preds = %4, %1
  %8 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 1
  %15 = select i1 %14, i32 2, i32 3
  ret i32 %15

16:                                               ; preds = %7, %4, %6
  %17 = phi i32 [ 2, %6 ], [ 3, %4 ], [ 3, %7 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadScheduler29SetOutstandingLimitForTestingEmm(%"class.blink::ResourceLoadScheduler"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 5
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 6
  store i64 %2, i64* %5, align 8
  tail call void @_ZN5blink21ResourceLoadScheduler8MaybeRunEv(%"class.blink::ResourceLoadScheduler"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadScheduler23OnLifecycleStateChangedENS_9scheduler24SchedulingLifecycleStateE(%"class.blink::ResourceLoadScheduler"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 13
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @_ZN5blink21ResourceLoadScheduler26ShowConsoleMessageIfNeededEv(%"class.blink::ResourceLoadScheduler"* %0)
  br label %9

9:                                                ; preds = %8, %6
  tail call void @_ZN5blink21ResourceLoadScheduler8MaybeRunEv(%"class.blink::ResourceLoadScheduler"* %0)
  br label %10

10:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadScheduler26ShowConsoleMessageIfNeededEv(%"class.blink::ResourceLoadScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 8, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %196

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %196, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 19
  %12 = load %"class.base::Clock"*, %"class.base::Clock"** %11, align 8
  %13 = bitcast %"class.base::Clock"* %12 to i64 (%"class.base::Clock"*)***
  %14 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %14, i64 2
  %16 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %15, align 8
  %17 = tail call i64 %16(%"class.base::Clock"* %12) #14
  %18 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %17, i64 -60000000)
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 -9223372036854775808, i64 %20, !prof !17
  %22 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16
  %23 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node.292"**
  %25 = load %"class.std::__1::__tree_node.292"*, %"class.std::__1::__tree_node.292"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node.292"* %25, null
  br i1 %26, label %55, label %27

27:                                               ; preds = %10
  %28 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %51, %27
  %30 = phi %"class.std::__1::__tree_node.292"* [ %54, %51 ], [ %25, %27 ]
  %31 = phi %"class.std::__1::__tree_node_base"** [ %53, %51 ], [ %28, %27 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %30, i64 0, i32 1, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %51

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %30, i64 0, i32 0, i32 0
  br label %57

41:                                               ; preds = %29
  %42 = icmp slt i32 %33, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %30, i64 0, i32 0, i32 1
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %30, i64 0, i32 0, i32 0
  br label %57

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %30, i64 0, i32 0, i32 0
  br label %57

51:                                               ; preds = %43, %35
  %52 = phi %"class.std::__1::__tree_node_base"* [ %37, %35 ], [ %45, %43 ]
  %53 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %44, %43 ]
  %54 = bitcast %"class.std::__1::__tree_node_base"* %52 to %"class.std::__1::__tree_node.292"*
  br label %29

55:                                               ; preds = %10
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 0, i32 0
  br label %57

57:                                               ; preds = %55, %49, %47, %39
  %58 = phi %"class.std::__1::__tree_end_node"* [ %23, %55 ], [ %40, %39 ], [ %48, %47 ], [ %50, %49 ]
  %59 = phi %"class.std::__1::__tree_node_base"** [ %56, %55 ], [ %36, %39 ], [ %44, %47 ], [ %31, %49 ]
  %60 = bitcast %"class.std::__1::__tree_node_base"** %59 to %"class.std::__1::__tree_node.292"**
  %61 = load %"class.std::__1::__tree_node.292"*, %"class.std::__1::__tree_node.292"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node.292"* %61, null
  br i1 %62, label %63, label %90

63:                                               ; preds = %57
  %64 = tail call i8* @_Znwm(i64 48) #15, !noalias !18
  %65 = getelementptr inbounds i8, i8* %64, i64 32
  %66 = bitcast i8* %65 to i32*
  store i32 0, i32* %66, align 8, !noalias !18
  %67 = getelementptr inbounds i8, i8* %64, i64 40
  %68 = bitcast i8* %67 to i64*
  store i64 0, i64* %68, align 8, !noalias !18
  %69 = bitcast i8* %64 to %"class.std::__1::__tree_node.292"*
  %70 = bitcast i8* %64 to %"class.std::__1::__tree_node_base"*
  %71 = getelementptr inbounds i8, i8* %64, i64 16
  %72 = bitcast i8* %71 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %58, %"class.std::__1::__tree_end_node"** %72, align 8
  %73 = bitcast %"class.std::__1::__tree_node_base"** %59 to i8**
  store i8* %64, i8** %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::map.31", %"class.std::__1::map.31"* %22, i64 0, i32 0, i32 0
  %75 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %63
  %80 = ptrtoint %"class.std::__1::__tree_node_base"* %77 to i64
  %81 = bitcast %"class.std::__1::map.31"* %22 to i64*
  store i64 %80, i64* %81, align 8
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %83

83:                                               ; preds = %79, %63
  %84 = phi %"class.std::__1::__tree_node_base"* [ %70, %63 ], [ %82, %79 ]
  %85 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %86, %"class.std::__1::__tree_node_base"* %84) #14
  %87 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 1
  store i64 %89, i64* %87, align 8
  br label %90

90:                                               ; preds = %57, %83
  %91 = phi %"class.std::__1::__tree_node.292"* [ %69, %83 ], [ %61, %57 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %91, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = icmp slt i64 %93, %21
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  %96 = tail call zeroext i1 @_ZN5blink21ResourceLoadScheduler32IsPendingRequestEffectivelyEmptyENS0_14ThrottleOptionE(%"class.blink::ResourceLoadScheduler"* %0, i32 0)
  br i1 %96, label %97, label %170

97:                                               ; preds = %90, %95
  %98 = load %"class.std::__1::__tree_node.292"*, %"class.std::__1::__tree_node.292"** %24, align 8
  %99 = icmp eq %"class.std::__1::__tree_node.292"* %98, null
  br i1 %99, label %128, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %102

102:                                              ; preds = %124, %100
  %103 = phi %"class.std::__1::__tree_node.292"* [ %127, %124 ], [ %98, %100 ]
  %104 = phi %"class.std::__1::__tree_node_base"** [ %126, %124 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %103, i64 0, i32 1, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, 1
  br i1 %107, label %108, label %114

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %103, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, null
  br i1 %111, label %112, label %124

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %103, i64 0, i32 0, i32 0
  br label %130

114:                                              ; preds = %102
  %115 = icmp eq i32 %106, 1
  br i1 %115, label %122, label %116

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %103, i64 0, i32 0, i32 1
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, null
  br i1 %119, label %120, label %124

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %103, i64 0, i32 0, i32 0
  br label %130

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %103, i64 0, i32 0, i32 0
  br label %130

124:                                              ; preds = %116, %108
  %125 = phi %"class.std::__1::__tree_node_base"* [ %110, %108 ], [ %118, %116 ]
  %126 = phi %"class.std::__1::__tree_node_base"** [ %109, %108 ], [ %117, %116 ]
  %127 = bitcast %"class.std::__1::__tree_node_base"* %125 to %"class.std::__1::__tree_node.292"*
  br label %102

128:                                              ; preds = %97
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 0, i32 0
  br label %130

130:                                              ; preds = %128, %122, %120, %112
  %131 = phi %"class.std::__1::__tree_end_node"* [ %23, %128 ], [ %113, %112 ], [ %121, %120 ], [ %123, %122 ]
  %132 = phi %"class.std::__1::__tree_node_base"** [ %129, %128 ], [ %109, %112 ], [ %117, %120 ], [ %104, %122 ]
  %133 = bitcast %"class.std::__1::__tree_node_base"** %132 to %"class.std::__1::__tree_node.292"**
  %134 = load %"class.std::__1::__tree_node.292"*, %"class.std::__1::__tree_node.292"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node.292"* %134, null
  br i1 %135, label %136, label %163

136:                                              ; preds = %130
  %137 = tail call i8* @_Znwm(i64 48) #15, !noalias !21
  %138 = getelementptr inbounds i8, i8* %137, i64 32
  %139 = bitcast i8* %138 to i32*
  store i32 1, i32* %139, align 8, !noalias !21
  %140 = getelementptr inbounds i8, i8* %137, i64 40
  %141 = bitcast i8* %140 to i64*
  store i64 0, i64* %141, align 8, !noalias !21
  %142 = bitcast i8* %137 to %"class.std::__1::__tree_node.292"*
  %143 = bitcast i8* %137 to %"class.std::__1::__tree_node_base"*
  %144 = getelementptr inbounds i8, i8* %137, i64 16
  %145 = bitcast i8* %144 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %131, %"class.std::__1::__tree_end_node"** %145, align 8
  %146 = bitcast %"class.std::__1::__tree_node_base"** %132 to i8**
  store i8* %137, i8** %146, align 8
  %147 = getelementptr inbounds %"class.std::__1::map.31", %"class.std::__1::map.31"* %22, i64 0, i32 0, i32 0
  %148 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %147, align 8
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %148, i64 0, i32 0
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %150, null
  br i1 %151, label %156, label %152

152:                                              ; preds = %136
  %153 = ptrtoint %"class.std::__1::__tree_node_base"* %150 to i64
  %154 = bitcast %"class.std::__1::map.31"* %22 to i64*
  store i64 %153, i64* %154, align 8
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  br label %156

156:                                              ; preds = %152, %136
  %157 = phi %"class.std::__1::__tree_node_base"* [ %143, %136 ], [ %155, %152 ]
  %158 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %159 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %158, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %159, %"class.std::__1::__tree_node_base"* %157) #14
  %160 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = add i64 %161, 1
  store i64 %162, i64* %160, align 8
  br label %163

163:                                              ; preds = %130, %156
  %164 = phi %"class.std::__1::__tree_node.292"* [ %142, %156 ], [ %134, %130 ]
  %165 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %164, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %166 = load i64, i64* %165, align 8
  %167 = icmp slt i64 %166, %21
  br i1 %167, label %168, label %196

168:                                              ; preds = %163
  %169 = tail call zeroext i1 @_ZN5blink21ResourceLoadScheduler32IsPendingRequestEffectivelyEmptyENS0_14ThrottleOptionE(%"class.blink::ResourceLoadScheduler"* %0, i32 1)
  br i1 %169, label %196, label %170

170:                                              ; preds = %168, %95
  %171 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 18, i32 0, i32 0
  %172 = load %"class.blink::DetachableConsoleLogger"*, %"class.blink::DetachableConsoleLogger"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::DetachableConsoleLogger", %"class.blink::DetachableConsoleLogger"* %172, i64 0, i32 0
  %174 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([307 x i8], [307 x i8]* @.str.2, i64 0, i64 0), i64 306) #14
  %175 = bitcast %"class.blink::DetachableConsoleLogger"* %172 to void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)***
  %176 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)**, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %176, i64 3
  %178 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %177, align 8
  call void %178(%"class.blink::ConsoleLogger"* %173, i32 8, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %2, i1 zeroext false) #14
  %179 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %170
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #14
  br label %195

195:                                              ; preds = %170, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #14
  store i8 1, i8* %3, align 8
  br label %196

196:                                              ; preds = %163, %195, %168, %1, %6
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21ResourceLoadScheduler32IsPendingRequestEffectivelyEmptyENS0_14ThrottleOptionE(%"class.blink::ResourceLoadScheduler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15
  %4 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.288"**
  %6 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.288"* %6, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %32, %8
  %11 = phi %"class.std::__1::__tree_node.288"* [ %35, %32 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %34, %32 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %11, i64 0, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %11, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %11, i64 0, i32 0, i32 0
  br label %38

22:                                               ; preds = %10
  %23 = icmp slt i32 %14, %1
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %11, i64 0, i32 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %11, i64 0, i32 0, i32 0
  br label %38

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %11, i64 0, i32 0, i32 0
  br label %38

32:                                               ; preds = %24, %16
  %33 = phi %"class.std::__1::__tree_node_base"* [ %18, %16 ], [ %26, %24 ]
  %34 = phi %"class.std::__1::__tree_node_base"** [ %17, %16 ], [ %25, %24 ]
  %35 = bitcast %"class.std::__1::__tree_node_base"* %33 to %"class.std::__1::__tree_node.288"*
  br label %10

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %38

38:                                               ; preds = %36, %30, %28, %20
  %39 = phi %"class.std::__1::__tree_end_node"* [ %4, %36 ], [ %21, %20 ], [ %29, %28 ], [ %31, %30 ]
  %40 = phi %"class.std::__1::__tree_node_base"** [ %37, %36 ], [ %17, %20 ], [ %25, %28 ], [ %12, %30 ]
  %41 = bitcast %"class.std::__1::__tree_node_base"** %40 to %"class.std::__1::__tree_node.288"**
  %42 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node.288"* %42, null
  br i1 %43, label %44, label %72

44:                                               ; preds = %38
  %45 = tail call i8* @_Znwm(i64 64) #15, !noalias !24
  %46 = getelementptr inbounds i8, i8* %45, i64 32
  %47 = bitcast i8* %46 to i32*
  store i32 %1, i32* %47, align 8, !noalias !24
  %48 = getelementptr inbounds i8, i8* %45, i64 48
  %49 = getelementptr inbounds i8, i8* %45, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #14, !noalias !24
  %50 = bitcast i8* %49 to i8**
  store i8* %48, i8** %50, align 8, !noalias !24
  %51 = bitcast i8* %45 to %"class.std::__1::__tree_node.288"*
  %52 = bitcast i8* %45 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds i8, i8* %45, i64 16
  %54 = bitcast i8* %53 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %39, %"class.std::__1::__tree_end_node"** %54, align 8
  %55 = bitcast %"class.std::__1::__tree_node_base"** %40 to i8**
  store i8* %45, i8** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %44
  %62 = ptrtoint %"class.std::__1::__tree_node_base"* %59 to i64
  %63 = bitcast %"class.std::__1::map"* %3 to i64*
  store i64 %62, i64* %63, align 8
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  br label %65

65:                                               ; preds = %61, %44
  %66 = phi %"class.std::__1::__tree_node_base"* [ %52, %44 ], [ %64, %61 ]
  %67 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %68, %"class.std::__1::__tree_node_base"* %66) #14
  %69 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %69, align 8
  br label %72

72:                                               ; preds = %38, %65
  %73 = phi %"class.std::__1::__tree_node.288"* [ %51, %65 ], [ %42, %38 ]
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %73, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %75 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %73, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %77 = icmp eq %"class.std::__1::__tree_end_node"* %75, %76
  br i1 %77, label %125, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0
  %80 = getelementptr inbounds %"class.WTF::HashMap.15", %"class.WTF::HashMap.15"* %79, i64 0, i32 0
  %81 = getelementptr inbounds %"class.WTF::HashMap.15", %"class.WTF::HashMap.15"* %79, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0, i32 1
  br label %83

83:                                               ; preds = %78, %122
  %84 = phi %"class.std::__1::__tree_end_node"* [ %75, %78 ], [ %123, %122 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 4
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to i64*
  %87 = tail call { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.16"* %80, i64* dereferenceable(8) %86) #14
  %88 = extractvalue { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } %87, 0
  %89 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %81, align 8
  %90 = load i32, i32* %82, align 8
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %89, i64 %91
  %93 = icmp eq %"struct.WTF::KeyValuePair.18"* %88, %92
  br i1 %93, label %94, label %125

94:                                               ; preds = %83
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 1, i32 0
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node_base"* %96, null
  br i1 %97, label %98, label %106

98:                                               ; preds = %94
  %99 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_node_base"*
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 2
  %101 = bitcast %"class.std::__1::__tree_end_node"* %100 to %"class.std::__1::__tree_end_node"**
  %102 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %101, align 8
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %102, i64 0, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, %99
  br i1 %105, label %122, label %113

106:                                              ; preds = %94, %106
  %107 = phi %"class.std::__1::__tree_node_base"* [ %109, %106 ], [ %96, %94 ]
  %108 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %107, i64 0, i32 0, i32 0
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node_base"* %109, null
  br i1 %110, label %111, label %106

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %107, i64 0, i32 0
  br label %122

113:                                              ; preds = %98, %113
  %114 = phi %"class.std::__1::__tree_end_node"** [ %117, %113 ], [ %101, %98 ]
  %115 = bitcast %"class.std::__1::__tree_end_node"** %114 to %"class.std::__1::__tree_node_base"**
  %116 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %116, i64 0, i32 2
  %118 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %117, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %118, i64 0, i32 0
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, %116
  br i1 %121, label %122, label %113

122:                                              ; preds = %113, %98, %111
  %123 = phi %"class.std::__1::__tree_end_node"* [ %112, %111 ], [ %102, %98 ], [ %118, %113 ]
  %124 = icmp eq %"class.std::__1::__tree_end_node"* %123, %76
  br i1 %124, label %125, label %83

125:                                              ; preds = %83, %122, %72
  %126 = phi i1 [ true, %72 ], [ true, %122 ], [ false, %83 ]
  ret i1 %126
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21ResourceLoadScheduler21GetNextPendingRequestEPm(%"class.blink::ResourceLoadScheduler"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15
  %4 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.288"**
  %6 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.288"* %6, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %32, %8
  %11 = phi %"class.std::__1::__tree_node.288"* [ %35, %32 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %34, %32 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %11, i64 0, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %11, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %11, i64 0, i32 0, i32 0
  br label %38

22:                                               ; preds = %10
  %23 = icmp eq i32 %14, 1
  br i1 %23, label %30, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %11, i64 0, i32 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %11, i64 0, i32 0, i32 0
  br label %38

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %11, i64 0, i32 0, i32 0
  br label %38

32:                                               ; preds = %24, %16
  %33 = phi %"class.std::__1::__tree_node_base"* [ %18, %16 ], [ %26, %24 ]
  %34 = phi %"class.std::__1::__tree_node_base"** [ %17, %16 ], [ %25, %24 ]
  %35 = bitcast %"class.std::__1::__tree_node_base"* %33 to %"class.std::__1::__tree_node.288"*
  br label %10

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %38

38:                                               ; preds = %36, %30, %28, %20
  %39 = phi %"class.std::__1::__tree_end_node"* [ %4, %36 ], [ %21, %20 ], [ %29, %28 ], [ %31, %30 ]
  %40 = phi %"class.std::__1::__tree_node_base"** [ %37, %36 ], [ %17, %20 ], [ %25, %28 ], [ %12, %30 ]
  %41 = bitcast %"class.std::__1::__tree_node_base"** %40 to %"class.std::__1::__tree_node.288"**
  %42 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node.288"* %42, null
  br i1 %43, label %44, label %73

44:                                               ; preds = %38
  %45 = tail call i8* @_Znwm(i64 64) #15, !noalias !27
  %46 = getelementptr inbounds i8, i8* %45, i64 32
  %47 = bitcast i8* %46 to i32*
  store i32 1, i32* %47, align 8, !noalias !27
  %48 = getelementptr inbounds i8, i8* %45, i64 48
  %49 = getelementptr inbounds i8, i8* %45, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #14, !noalias !27
  %50 = bitcast i8* %49 to i8**
  store i8* %48, i8** %50, align 8, !noalias !27
  %51 = bitcast i8* %45 to %"class.std::__1::__tree_node.288"*
  %52 = bitcast i8* %45 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds i8, i8* %45, i64 16
  %54 = bitcast i8* %53 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %39, %"class.std::__1::__tree_end_node"** %54, align 8
  %55 = bitcast %"class.std::__1::__tree_node_base"** %40 to i8**
  store i8* %45, i8** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %44
  %62 = ptrtoint %"class.std::__1::__tree_node_base"* %59 to i64
  %63 = bitcast %"class.std::__1::map"* %3 to i64*
  store i64 %62, i64* %63, align 8
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  br label %65

65:                                               ; preds = %61, %44
  %66 = phi %"class.std::__1::__tree_node_base"* [ %52, %44 ], [ %64, %61 ]
  %67 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %68, %"class.std::__1::__tree_node_base"* %66) #14
  %69 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %69, align 8
  %72 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %5, align 8
  br label %73

73:                                               ; preds = %38, %65
  %74 = phi %"class.std::__1::__tree_node.288"* [ %72, %65 ], [ %6, %38 ]
  %75 = phi %"class.std::__1::__tree_node.288"* [ %51, %65 ], [ %42, %38 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %75, i64 0, i32 1, i32 0, i32 1
  %77 = icmp eq %"class.std::__1::__tree_node.288"* %74, null
  br i1 %77, label %106, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %80

80:                                               ; preds = %102, %78
  %81 = phi %"class.std::__1::__tree_node.288"* [ %105, %102 ], [ %74, %78 ]
  %82 = phi %"class.std::__1::__tree_node_base"** [ %104, %102 ], [ %79, %78 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %81, i64 0, i32 1, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %81, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %90, label %102

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %81, i64 0, i32 0, i32 0
  br label %108

92:                                               ; preds = %80
  %93 = icmp slt i32 %84, 0
  br i1 %93, label %94, label %100

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %81, i64 0, i32 0, i32 1
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node_base"* %96, null
  br i1 %97, label %98, label %102

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %81, i64 0, i32 0, i32 0
  br label %108

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %81, i64 0, i32 0, i32 0
  br label %108

102:                                              ; preds = %94, %86
  %103 = phi %"class.std::__1::__tree_node_base"* [ %88, %86 ], [ %96, %94 ]
  %104 = phi %"class.std::__1::__tree_node_base"** [ %87, %86 ], [ %95, %94 ]
  %105 = bitcast %"class.std::__1::__tree_node_base"* %103 to %"class.std::__1::__tree_node.288"*
  br label %80

106:                                              ; preds = %73
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %108

108:                                              ; preds = %106, %100, %98, %90
  %109 = phi %"class.std::__1::__tree_end_node"* [ %4, %106 ], [ %91, %90 ], [ %99, %98 ], [ %101, %100 ]
  %110 = phi %"class.std::__1::__tree_node_base"** [ %107, %106 ], [ %87, %90 ], [ %95, %98 ], [ %82, %100 ]
  %111 = bitcast %"class.std::__1::__tree_node_base"** %110 to %"class.std::__1::__tree_node.288"**
  %112 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node.288"* %112, null
  br i1 %113, label %114, label %142

114:                                              ; preds = %108
  %115 = tail call i8* @_Znwm(i64 64) #15, !noalias !30
  %116 = getelementptr inbounds i8, i8* %115, i64 32
  %117 = bitcast i8* %116 to i32*
  store i32 0, i32* %117, align 8, !noalias !30
  %118 = getelementptr inbounds i8, i8* %115, i64 48
  %119 = getelementptr inbounds i8, i8* %115, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 16, i1 false) #14, !noalias !30
  %120 = bitcast i8* %119 to i8**
  store i8* %118, i8** %120, align 8, !noalias !30
  %121 = bitcast i8* %115 to %"class.std::__1::__tree_node.288"*
  %122 = bitcast i8* %115 to %"class.std::__1::__tree_node_base"*
  %123 = getelementptr inbounds i8, i8* %115, i64 16
  %124 = bitcast i8* %123 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %109, %"class.std::__1::__tree_end_node"** %124, align 8
  %125 = bitcast %"class.std::__1::__tree_node_base"** %110 to i8**
  store i8* %115, i8** %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %127 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %127, i64 0, i32 0
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = icmp eq %"class.std::__1::__tree_node_base"* %129, null
  br i1 %130, label %135, label %131

131:                                              ; preds = %114
  %132 = ptrtoint %"class.std::__1::__tree_node_base"* %129 to i64
  %133 = bitcast %"class.std::__1::map"* %3 to i64*
  store i64 %132, i64* %133, align 8
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  br label %135

135:                                              ; preds = %131, %114
  %136 = phi %"class.std::__1::__tree_node_base"* [ %122, %114 ], [ %134, %131 ]
  %137 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %138, %"class.std::__1::__tree_node_base"* %136) #14
  %139 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = add i64 %140, 1
  store i64 %141, i64* %139, align 8
  br label %142

142:                                              ; preds = %108, %135
  %143 = phi %"class.std::__1::__tree_node.288"* [ %121, %135 ], [ %112, %108 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %143, i64 0, i32 1, i32 0, i32 1
  %145 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %76, i64 0, i32 0, i32 0
  %146 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %75, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %148 = icmp eq %"class.std::__1::__tree_end_node"* %146, %147
  br i1 %148, label %180, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 13
  %151 = load i32, i32* %150, align 4
  %152 = icmp ugt i32 %151, 2
  br i1 %152, label %153, label %180

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 10, i32 0, i32 2
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i64
  %157 = icmp ne i32 %151, 3
  %158 = sext i1 %157 to i64
  %159 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 4
  %160 = load i32, i32* %159, align 4
  switch i32 %160, label %177 [
    i32 0, label %161
    i32 1, label %172
  ]

161:                                              ; preds = %153
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 5
  %163 = bitcast %"class.std::__1::__tree_end_node"* %162 to i32*
  %164 = load i32, i32* %163, align 8
  %165 = icmp slt i32 %164, 3
  %166 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 5
  %167 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 6
  %168 = select i1 %165, i64* %166, i64* %167
  %169 = load i64, i64* %168, align 8
  %170 = icmp ult i64 %169, %158
  %171 = select i1 %170, i64 %169, i64 %158
  br label %177

172:                                              ; preds = %153
  %173 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 6
  %174 = load i64, i64* %173, align 8
  %175 = icmp ult i64 %174, %158
  %176 = select i1 %175, i64 %174, i64 %158
  br label %177

177:                                              ; preds = %153, %161, %172
  %178 = phi i64 [ %158, %153 ], [ %176, %172 ], [ %171, %161 ]
  %179 = icmp ugt i64 %178, %156
  br label %180

180:                                              ; preds = %142, %149, %177
  %181 = phi i1 [ false, %142 ], [ true, %149 ], [ %179, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %144, i64 0, i32 0, i32 0
  %183 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %182, align 8
  %184 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %143, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %185 = icmp eq %"class.std::__1::__tree_end_node"* %183, %184
  br i1 %185, label %219, label %186

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 13
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 10, i32 0, i32 2
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %183, i64 5
  %193 = bitcast %"class.std::__1::__tree_end_node"* %192 to i32*
  %194 = load i32, i32* %193, align 8
  switch i32 %188, label %199 [
    i32 1, label %195
    i32 2, label %195
    i32 3, label %198
  ]

195:                                              ; preds = %186, %186
  %196 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 7
  %197 = load i64, i64* %196, align 8
  br label %199

198:                                              ; preds = %186
  br label %199

199:                                              ; preds = %198, %195, %186
  %200 = phi i64 [ -1, %186 ], [ 0, %198 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 4
  %202 = load i32, i32* %201, align 4
  switch i32 %202, label %216 [
    i32 0, label %203
    i32 1, label %211
  ]

203:                                              ; preds = %199
  %204 = icmp slt i32 %194, 3
  %205 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 5
  %206 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 6
  %207 = select i1 %204, i64* %205, i64* %206
  %208 = load i64, i64* %207, align 8
  %209 = icmp ult i64 %208, %200
  %210 = select i1 %209, i64 %208, i64 %200
  br label %216

211:                                              ; preds = %199
  %212 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 6
  %213 = load i64, i64* %212, align 8
  %214 = icmp ult i64 %213, %200
  %215 = select i1 %214, i64 %213, i64 %200
  br label %216

216:                                              ; preds = %199, %203, %211
  %217 = phi i64 [ %200, %199 ], [ %215, %211 ], [ %210, %203 ]
  %218 = icmp ugt i64 %217, %191
  br label %219

219:                                              ; preds = %180, %216
  %220 = phi i1 [ false, %180 ], [ %218, %216 ]
  %221 = or i1 %181, %220
  br i1 %221, label %222, label %603

222:                                              ; preds = %219
  %223 = and i1 %181, %220
  br i1 %223, label %224, label %252

224:                                              ; preds = %222
  %225 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 4
  %226 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %183, i64 4
  %227 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 5
  %228 = bitcast %"class.std::__1::__tree_end_node"* %227 to i32*
  %229 = load i32, i32* %228, align 8
  %230 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %183, i64 5
  %231 = bitcast %"class.std::__1::__tree_end_node"* %230 to i32*
  %232 = load i32, i32* %231, align 8
  %233 = icmp eq i32 %229, %232
  br i1 %233, label %236, label %234

234:                                              ; preds = %224
  %235 = icmp sgt i32 %229, %232
  br i1 %235, label %253, label %428

236:                                              ; preds = %224
  %237 = bitcast %"class.std::__1::__tree_end_node"* %226 to %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"*
  %238 = bitcast %"class.std::__1::__tree_end_node"* %225 to %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"*
  %239 = getelementptr inbounds %"class.blink::ResourceLoadScheduler::ClientIdWithPriority", %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* %238, i64 0, i32 2
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds %"class.blink::ResourceLoadScheduler::ClientIdWithPriority", %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* %237, i64 0, i32 2
  %242 = load i32, i32* %241, align 4
  %243 = icmp eq i32 %240, %242
  br i1 %243, label %246, label %244

244:                                              ; preds = %236
  %245 = icmp sgt i32 %240, %242
  br i1 %245, label %253, label %428

246:                                              ; preds = %236
  %247 = bitcast %"class.std::__1::__tree_end_node"* %225 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast %"class.std::__1::__tree_end_node"* %226 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = icmp ult i64 %248, %250
  br i1 %251, label %253, label %428

252:                                              ; preds = %222
  br i1 %181, label %253, label %428

253:                                              ; preds = %246, %244, %234, %252
  %254 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 4
  %255 = bitcast %"class.std::__1::__tree_end_node"* %254 to i64*
  %256 = load i64, i64* %255, align 8
  store i64 %256, i64* %1, align 8
  %257 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0
  %258 = tail call { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.16"* %257, i64* dereferenceable(8) %1) #14
  %259 = extractvalue { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } %258, 0
  %260 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features34kDelayCompetingLowPriorityRequestsE) #14
  br i1 %260, label %261, label %307

261:                                              ; preds = %253
  %262 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 21
  %263 = load i8, i8* %262, align 4, !range !4
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %265, label %307

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 20
  %267 = load i32, i32* %266, align 8
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %307, label %269

269:                                              ; preds = %265
  %270 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 13
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 1
  br i1 %272, label %307, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %275 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %274, align 8
  %276 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0, i32 1
  %277 = load i32, i32* %276, align 8
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %275, i64 %278
  %280 = icmp eq %"struct.WTF::KeyValuePair.18"* %279, %259
  br i1 %280, label %307, label %281

281:                                              ; preds = %273
  %282 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %259, i64 0, i32 1, i32 0, i32 0
  %283 = load %"struct.blink::ResourceLoadScheduler::ClientInfo"*, %"struct.blink::ResourceLoadScheduler::ClientInfo"** %282, align 8
  %284 = getelementptr inbounds %"struct.blink::ResourceLoadScheduler::ClientInfo", %"struct.blink::ResourceLoadScheduler::ClientInfo"* %283, i64 0, i32 2
  %285 = load i32, i32* %284, align 4
  %286 = icmp sgt i32 %285, 1
  br i1 %286, label %307, label %287

287:                                              ; preds = %281
  %288 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsDelayTypeELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN5blink8features44kDelayCompetingLowPriorityRequestsDelayParamE) #14
  %289 = icmp eq i32 %288, 3
  br i1 %289, label %290, label %298

290:                                              ; preds = %287
  %291 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 1
  %292 = load i32, i32* %291, align 4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %307, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 0, i32 0
  %296 = load i32, i32* %295, align 4
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %307, label %298

298:                                              ; preds = %294, %287
  %299 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 25, i32 0, i32 0
  %300 = load %"class.blink::LoadingBehaviorObserver"*, %"class.blink::LoadingBehaviorObserver"** %299, align 8
  %301 = icmp eq %"class.blink::LoadingBehaviorObserver"* %300, null
  br i1 %301, label %603, label %302

302:                                              ; preds = %298
  %303 = bitcast %"class.blink::LoadingBehaviorObserver"* %300 to void (%"class.blink::LoadingBehaviorObserver"*, i32)***
  %304 = load void (%"class.blink::LoadingBehaviorObserver"*, i32)**, void (%"class.blink::LoadingBehaviorObserver"*, i32)*** %303, align 8
  %305 = getelementptr inbounds void (%"class.blink::LoadingBehaviorObserver"*, i32)*, void (%"class.blink::LoadingBehaviorObserver"*, i32)** %304, i64 1
  %306 = load void (%"class.blink::LoadingBehaviorObserver"*, i32)*, void (%"class.blink::LoadingBehaviorObserver"*, i32)** %305, align 8
  tail call void %306(%"class.blink::LoadingBehaviorObserver"* nonnull %300, i32 1024) #14
  br label %603

307:                                              ; preds = %253, %261, %265, %269, %273, %281, %290, %294
  %308 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 1, i32 0
  %309 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %308, align 8
  %310 = icmp eq %"class.std::__1::__tree_node_base"* %309, null
  br i1 %310, label %311, label %319

311:                                              ; preds = %307
  %312 = bitcast %"class.std::__1::__tree_end_node"* %146 to %"class.std::__1::__tree_node_base"*
  %313 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 2
  %314 = bitcast %"class.std::__1::__tree_end_node"* %313 to %"class.std::__1::__tree_end_node"**
  %315 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %314, align 8
  %316 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %315, i64 0, i32 0
  %317 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %316, align 8
  %318 = icmp eq %"class.std::__1::__tree_node_base"* %317, %312
  br i1 %318, label %335, label %326

319:                                              ; preds = %307, %319
  %320 = phi %"class.std::__1::__tree_node_base"* [ %322, %319 ], [ %309, %307 ]
  %321 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 0, i32 0
  %322 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %321, align 8
  %323 = icmp eq %"class.std::__1::__tree_node_base"* %322, null
  br i1 %323, label %324, label %319

324:                                              ; preds = %319
  %325 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 0
  br label %335

326:                                              ; preds = %311, %326
  %327 = phi %"class.std::__1::__tree_end_node"** [ %330, %326 ], [ %314, %311 ]
  %328 = bitcast %"class.std::__1::__tree_end_node"** %327 to %"class.std::__1::__tree_node_base"**
  %329 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %328, align 8
  %330 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %329, i64 0, i32 2
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %330, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %329
  br i1 %334, label %335, label %326

335:                                              ; preds = %326, %324, %311
  %336 = phi %"class.std::__1::__tree_end_node"* [ %325, %324 ], [ %315, %311 ], [ %331, %326 ]
  %337 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %145, align 8
  %338 = icmp eq %"class.std::__1::__tree_end_node"* %337, %146
  br i1 %338, label %339, label %342

339:                                              ; preds = %335
  %340 = ptrtoint %"class.std::__1::__tree_end_node"* %336 to i64
  %341 = bitcast %"class.std::__1::set"* %76 to i64*
  store i64 %340, i64* %341, align 8
  br label %342

342:                                              ; preds = %335, %339
  %343 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %75, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %344 = load i64, i64* %343, align 8
  %345 = add i64 %344, -1
  store i64 %345, i64* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %75, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = bitcast %"class.std::__1::__tree_end_node"* %146 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %347, %"class.std::__1::__tree_node_base"* %348) #14
  %349 = bitcast %"class.std::__1::__tree_end_node"* %146 to i8*
  tail call void @_ZdlPv(i8* %349) #15
  %350 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 19
  %351 = load %"class.base::Clock"*, %"class.base::Clock"** %350, align 8
  %352 = bitcast %"class.base::Clock"* %351 to i64 (%"class.base::Clock"*)***
  %353 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %352, align 8
  %354 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %353, i64 2
  %355 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %354, align 8
  %356 = tail call i64 %355(%"class.base::Clock"* %351) #14
  %357 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16
  %358 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %359 = bitcast %"class.std::__1::__tree_end_node"* %358 to %"class.std::__1::__tree_node.292"**
  %360 = load %"class.std::__1::__tree_node.292"*, %"class.std::__1::__tree_node.292"** %359, align 8
  %361 = icmp eq %"class.std::__1::__tree_node.292"* %360, null
  br i1 %361, label %390, label %362

362:                                              ; preds = %342
  %363 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %364

364:                                              ; preds = %386, %362
  %365 = phi %"class.std::__1::__tree_node.292"* [ %389, %386 ], [ %360, %362 ]
  %366 = phi %"class.std::__1::__tree_node_base"** [ %388, %386 ], [ %363, %362 ]
  %367 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %365, i64 0, i32 1, i32 0, i32 0
  %368 = load i32, i32* %367, align 4
  %369 = icmp sgt i32 %368, 1
  br i1 %369, label %370, label %376

370:                                              ; preds = %364
  %371 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %365, i64 0, i32 0, i32 0, i32 0
  %372 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %371, align 8
  %373 = icmp eq %"class.std::__1::__tree_node_base"* %372, null
  br i1 %373, label %374, label %386

374:                                              ; preds = %370
  %375 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %365, i64 0, i32 0, i32 0
  br label %392

376:                                              ; preds = %364
  %377 = icmp eq i32 %368, 1
  br i1 %377, label %384, label %378

378:                                              ; preds = %376
  %379 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %365, i64 0, i32 0, i32 1
  %380 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %379, align 8
  %381 = icmp eq %"class.std::__1::__tree_node_base"* %380, null
  br i1 %381, label %382, label %386

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %365, i64 0, i32 0, i32 0
  br label %392

384:                                              ; preds = %376
  %385 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %365, i64 0, i32 0, i32 0
  br label %392

386:                                              ; preds = %378, %370
  %387 = phi %"class.std::__1::__tree_node_base"* [ %372, %370 ], [ %380, %378 ]
  %388 = phi %"class.std::__1::__tree_node_base"** [ %371, %370 ], [ %379, %378 ]
  %389 = bitcast %"class.std::__1::__tree_node_base"* %387 to %"class.std::__1::__tree_node.292"*
  br label %364

390:                                              ; preds = %342
  %391 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %358, i64 0, i32 0
  br label %392

392:                                              ; preds = %390, %384, %382, %374
  %393 = phi %"class.std::__1::__tree_end_node"* [ %358, %390 ], [ %375, %374 ], [ %383, %382 ], [ %385, %384 ]
  %394 = phi %"class.std::__1::__tree_node_base"** [ %391, %390 ], [ %371, %374 ], [ %379, %382 ], [ %366, %384 ]
  %395 = bitcast %"class.std::__1::__tree_node_base"** %394 to %"class.std::__1::__tree_node.292"**
  %396 = load %"class.std::__1::__tree_node.292"*, %"class.std::__1::__tree_node.292"** %395, align 8
  %397 = icmp eq %"class.std::__1::__tree_node.292"* %396, null
  br i1 %397, label %398, label %425

398:                                              ; preds = %392
  %399 = tail call i8* @_Znwm(i64 48) #15, !noalias !33
  %400 = getelementptr inbounds i8, i8* %399, i64 32
  %401 = bitcast i8* %400 to i32*
  store i32 1, i32* %401, align 8, !noalias !33
  %402 = getelementptr inbounds i8, i8* %399, i64 40
  %403 = bitcast i8* %402 to i64*
  store i64 0, i64* %403, align 8, !noalias !33
  %404 = bitcast i8* %399 to %"class.std::__1::__tree_node.292"*
  %405 = bitcast i8* %399 to %"class.std::__1::__tree_node_base"*
  %406 = getelementptr inbounds i8, i8* %399, i64 16
  %407 = bitcast i8* %406 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %399, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %393, %"class.std::__1::__tree_end_node"** %407, align 8
  %408 = bitcast %"class.std::__1::__tree_node_base"** %394 to i8**
  store i8* %399, i8** %408, align 8
  %409 = getelementptr inbounds %"class.std::__1::map.31", %"class.std::__1::map.31"* %357, i64 0, i32 0, i32 0
  %410 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %409, align 8
  %411 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %410, i64 0, i32 0
  %412 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %411, align 8
  %413 = icmp eq %"class.std::__1::__tree_node_base"* %412, null
  br i1 %413, label %418, label %414

414:                                              ; preds = %398
  %415 = ptrtoint %"class.std::__1::__tree_node_base"* %412 to i64
  %416 = bitcast %"class.std::__1::map.31"* %357 to i64*
  store i64 %415, i64* %416, align 8
  %417 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %394, align 8
  br label %418

418:                                              ; preds = %414, %398
  %419 = phi %"class.std::__1::__tree_node_base"* [ %405, %398 ], [ %417, %414 ]
  %420 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %421 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %420, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %421, %"class.std::__1::__tree_node_base"* %419) #14
  %422 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %423 = load i64, i64* %422, align 8
  %424 = add i64 %423, 1
  store i64 %424, i64* %422, align 8
  br label %425

425:                                              ; preds = %392, %418
  %426 = phi %"class.std::__1::__tree_node.292"* [ %404, %418 ], [ %396, %392 ]
  %427 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %426, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 %356, i64* %427, align 8
  br label %603

428:                                              ; preds = %246, %244, %234, %252
  %429 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %183, i64 4
  %430 = bitcast %"class.std::__1::__tree_end_node"* %429 to i64*
  %431 = load i64, i64* %430, align 8
  store i64 %431, i64* %1, align 8
  %432 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0
  %433 = tail call { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.16"* %432, i64* dereferenceable(8) %1) #14
  %434 = extractvalue { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } %433, 0
  %435 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features34kDelayCompetingLowPriorityRequestsE) #14
  br i1 %435, label %436, label %482

436:                                              ; preds = %428
  %437 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 21
  %438 = load i8, i8* %437, align 4, !range !4
  %439 = icmp eq i8 %438, 0
  br i1 %439, label %440, label %482

440:                                              ; preds = %436
  %441 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 20
  %442 = load i32, i32* %441, align 8
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %482, label %444

444:                                              ; preds = %440
  %445 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 13
  %446 = load i32, i32* %445, align 4
  %447 = icmp eq i32 %446, 1
  br i1 %447, label %482, label %448

448:                                              ; preds = %444
  %449 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %450 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %449, align 8
  %451 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0, i32 1
  %452 = load i32, i32* %451, align 8
  %453 = zext i32 %452 to i64
  %454 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %450, i64 %453
  %455 = icmp eq %"struct.WTF::KeyValuePair.18"* %454, %434
  br i1 %455, label %482, label %456

456:                                              ; preds = %448
  %457 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %434, i64 0, i32 1, i32 0, i32 0
  %458 = load %"struct.blink::ResourceLoadScheduler::ClientInfo"*, %"struct.blink::ResourceLoadScheduler::ClientInfo"** %457, align 8
  %459 = getelementptr inbounds %"struct.blink::ResourceLoadScheduler::ClientInfo", %"struct.blink::ResourceLoadScheduler::ClientInfo"* %458, i64 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp sgt i32 %460, 1
  br i1 %461, label %482, label %462

462:                                              ; preds = %456
  %463 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsDelayTypeELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN5blink8features44kDelayCompetingLowPriorityRequestsDelayParamE) #14
  %464 = icmp eq i32 %463, 3
  br i1 %464, label %465, label %473

465:                                              ; preds = %462
  %466 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 1
  %467 = load i32, i32* %466, align 4
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %482, label %469

469:                                              ; preds = %465
  %470 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 0, i32 0
  %471 = load i32, i32* %470, align 4
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %482, label %473

473:                                              ; preds = %469, %462
  %474 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 25, i32 0, i32 0
  %475 = load %"class.blink::LoadingBehaviorObserver"*, %"class.blink::LoadingBehaviorObserver"** %474, align 8
  %476 = icmp eq %"class.blink::LoadingBehaviorObserver"* %475, null
  br i1 %476, label %603, label %477

477:                                              ; preds = %473
  %478 = bitcast %"class.blink::LoadingBehaviorObserver"* %475 to void (%"class.blink::LoadingBehaviorObserver"*, i32)***
  %479 = load void (%"class.blink::LoadingBehaviorObserver"*, i32)**, void (%"class.blink::LoadingBehaviorObserver"*, i32)*** %478, align 8
  %480 = getelementptr inbounds void (%"class.blink::LoadingBehaviorObserver"*, i32)*, void (%"class.blink::LoadingBehaviorObserver"*, i32)** %479, i64 1
  %481 = load void (%"class.blink::LoadingBehaviorObserver"*, i32)*, void (%"class.blink::LoadingBehaviorObserver"*, i32)** %480, align 8
  tail call void %481(%"class.blink::LoadingBehaviorObserver"* nonnull %475, i32 1024) #14
  br label %603

482:                                              ; preds = %428, %436, %440, %444, %448, %456, %465, %469
  %483 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %183, i64 1, i32 0
  %484 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %483, align 8
  %485 = icmp eq %"class.std::__1::__tree_node_base"* %484, null
  br i1 %485, label %486, label %494

486:                                              ; preds = %482
  %487 = bitcast %"class.std::__1::__tree_end_node"* %183 to %"class.std::__1::__tree_node_base"*
  %488 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %183, i64 2
  %489 = bitcast %"class.std::__1::__tree_end_node"* %488 to %"class.std::__1::__tree_end_node"**
  %490 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %489, align 8
  %491 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %490, i64 0, i32 0
  %492 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %491, align 8
  %493 = icmp eq %"class.std::__1::__tree_node_base"* %492, %487
  br i1 %493, label %510, label %501

494:                                              ; preds = %482, %494
  %495 = phi %"class.std::__1::__tree_node_base"* [ %497, %494 ], [ %484, %482 ]
  %496 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %495, i64 0, i32 0, i32 0
  %497 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %496, align 8
  %498 = icmp eq %"class.std::__1::__tree_node_base"* %497, null
  br i1 %498, label %499, label %494

499:                                              ; preds = %494
  %500 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %495, i64 0, i32 0
  br label %510

501:                                              ; preds = %486, %501
  %502 = phi %"class.std::__1::__tree_end_node"** [ %505, %501 ], [ %489, %486 ]
  %503 = bitcast %"class.std::__1::__tree_end_node"** %502 to %"class.std::__1::__tree_node_base"**
  %504 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %503, align 8
  %505 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %504, i64 0, i32 2
  %506 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %505, align 8
  %507 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %506, i64 0, i32 0
  %508 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %507, align 8
  %509 = icmp eq %"class.std::__1::__tree_node_base"* %508, %504
  br i1 %509, label %510, label %501

510:                                              ; preds = %501, %499, %486
  %511 = phi %"class.std::__1::__tree_end_node"* [ %500, %499 ], [ %490, %486 ], [ %506, %501 ]
  %512 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %182, align 8
  %513 = icmp eq %"class.std::__1::__tree_end_node"* %512, %183
  br i1 %513, label %514, label %517

514:                                              ; preds = %510
  %515 = ptrtoint %"class.std::__1::__tree_end_node"* %511 to i64
  %516 = bitcast %"class.std::__1::set"* %144 to i64*
  store i64 %515, i64* %516, align 8
  br label %517

517:                                              ; preds = %510, %514
  %518 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %143, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %519 = load i64, i64* %518, align 8
  %520 = add i64 %519, -1
  store i64 %520, i64* %518, align 8
  %521 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %143, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %522 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %521, align 8
  %523 = bitcast %"class.std::__1::__tree_end_node"* %183 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %522, %"class.std::__1::__tree_node_base"* %523) #14
  %524 = bitcast %"class.std::__1::__tree_end_node"* %183 to i8*
  tail call void @_ZdlPv(i8* %524) #15
  %525 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 19
  %526 = load %"class.base::Clock"*, %"class.base::Clock"** %525, align 8
  %527 = bitcast %"class.base::Clock"* %526 to i64 (%"class.base::Clock"*)***
  %528 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %527, align 8
  %529 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %528, i64 2
  %530 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %529, align 8
  %531 = tail call i64 %530(%"class.base::Clock"* %526) #14
  %532 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16
  %533 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %534 = bitcast %"class.std::__1::__tree_end_node"* %533 to %"class.std::__1::__tree_node.292"**
  %535 = load %"class.std::__1::__tree_node.292"*, %"class.std::__1::__tree_node.292"** %534, align 8
  %536 = icmp eq %"class.std::__1::__tree_node.292"* %535, null
  br i1 %536, label %565, label %537

537:                                              ; preds = %517
  %538 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %539

539:                                              ; preds = %561, %537
  %540 = phi %"class.std::__1::__tree_node.292"* [ %564, %561 ], [ %535, %537 ]
  %541 = phi %"class.std::__1::__tree_node_base"** [ %563, %561 ], [ %538, %537 ]
  %542 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %540, i64 0, i32 1, i32 0, i32 0
  %543 = load i32, i32* %542, align 4
  %544 = icmp sgt i32 %543, 0
  br i1 %544, label %545, label %551

545:                                              ; preds = %539
  %546 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %540, i64 0, i32 0, i32 0, i32 0
  %547 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %546, align 8
  %548 = icmp eq %"class.std::__1::__tree_node_base"* %547, null
  br i1 %548, label %549, label %561

549:                                              ; preds = %545
  %550 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %540, i64 0, i32 0, i32 0
  br label %567

551:                                              ; preds = %539
  %552 = icmp slt i32 %543, 0
  br i1 %552, label %553, label %559

553:                                              ; preds = %551
  %554 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %540, i64 0, i32 0, i32 1
  %555 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %554, align 8
  %556 = icmp eq %"class.std::__1::__tree_node_base"* %555, null
  br i1 %556, label %557, label %561

557:                                              ; preds = %553
  %558 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %540, i64 0, i32 0, i32 0
  br label %567

559:                                              ; preds = %551
  %560 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %540, i64 0, i32 0, i32 0
  br label %567

561:                                              ; preds = %553, %545
  %562 = phi %"class.std::__1::__tree_node_base"* [ %547, %545 ], [ %555, %553 ]
  %563 = phi %"class.std::__1::__tree_node_base"** [ %546, %545 ], [ %554, %553 ]
  %564 = bitcast %"class.std::__1::__tree_node_base"* %562 to %"class.std::__1::__tree_node.292"*
  br label %539

565:                                              ; preds = %517
  %566 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %533, i64 0, i32 0
  br label %567

567:                                              ; preds = %565, %559, %557, %549
  %568 = phi %"class.std::__1::__tree_end_node"* [ %533, %565 ], [ %550, %549 ], [ %558, %557 ], [ %560, %559 ]
  %569 = phi %"class.std::__1::__tree_node_base"** [ %566, %565 ], [ %546, %549 ], [ %554, %557 ], [ %541, %559 ]
  %570 = bitcast %"class.std::__1::__tree_node_base"** %569 to %"class.std::__1::__tree_node.292"**
  %571 = load %"class.std::__1::__tree_node.292"*, %"class.std::__1::__tree_node.292"** %570, align 8
  %572 = icmp eq %"class.std::__1::__tree_node.292"* %571, null
  br i1 %572, label %573, label %600

573:                                              ; preds = %567
  %574 = tail call i8* @_Znwm(i64 48) #15, !noalias !36
  %575 = getelementptr inbounds i8, i8* %574, i64 32
  %576 = bitcast i8* %575 to i32*
  store i32 0, i32* %576, align 8, !noalias !36
  %577 = getelementptr inbounds i8, i8* %574, i64 40
  %578 = bitcast i8* %577 to i64*
  store i64 0, i64* %578, align 8, !noalias !36
  %579 = bitcast i8* %574 to %"class.std::__1::__tree_node.292"*
  %580 = bitcast i8* %574 to %"class.std::__1::__tree_node_base"*
  %581 = getelementptr inbounds i8, i8* %574, i64 16
  %582 = bitcast i8* %581 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %574, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %568, %"class.std::__1::__tree_end_node"** %582, align 8
  %583 = bitcast %"class.std::__1::__tree_node_base"** %569 to i8**
  store i8* %574, i8** %583, align 8
  %584 = getelementptr inbounds %"class.std::__1::map.31", %"class.std::__1::map.31"* %532, i64 0, i32 0, i32 0
  %585 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %584, align 8
  %586 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %585, i64 0, i32 0
  %587 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %586, align 8
  %588 = icmp eq %"class.std::__1::__tree_node_base"* %587, null
  br i1 %588, label %593, label %589

589:                                              ; preds = %573
  %590 = ptrtoint %"class.std::__1::__tree_node_base"* %587 to i64
  %591 = bitcast %"class.std::__1::map.31"* %532 to i64*
  store i64 %590, i64* %591, align 8
  %592 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %569, align 8
  br label %593

593:                                              ; preds = %589, %573
  %594 = phi %"class.std::__1::__tree_node_base"* [ %580, %573 ], [ %592, %589 ]
  %595 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %596 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %595, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %596, %"class.std::__1::__tree_node_base"* %594) #14
  %597 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %598 = load i64, i64* %597, align 8
  %599 = add i64 %598, 1
  store i64 %599, i64* %597, align 8
  br label %600

600:                                              ; preds = %567, %593
  %601 = phi %"class.std::__1::__tree_node.292"* [ %579, %593 ], [ %571, %567 ]
  %602 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %601, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 %531, i64* %602, align 8
  br label %603

603:                                              ; preds = %425, %600, %298, %302, %473, %477, %219
  %604 = phi i1 [ false, %219 ], [ true, %425 ], [ true, %600 ], [ false, %298 ], [ false, %302 ], [ false, %473 ], [ false, %477 ]
  ret i1 %604
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink21ResourceLoadScheduler19GetOutstandingLimitENS_13WebURLRequest8PriorityE(%"class.blink::ResourceLoadScheduler"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 13
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %9 [
    i32 1, label %5
    i32 2, label %5
    i32 3, label %8
  ]

5:                                                ; preds = %2, %2
  %6 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 7
  %7 = load i64, i64* %6, align 8
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %8, %5
  %10 = phi i64 [ -1, %2 ], [ 0, %8 ], [ %7, %5 ]
  %11 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %26 [
    i32 0, label %13
    i32 1, label %21
  ]

13:                                               ; preds = %9
  %14 = icmp slt i32 %1, 3
  %15 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 5
  %16 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 6
  %17 = select i1 %14, i64* %15, i64* %16
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, %10
  %20 = select i1 %19, i64 %18, i64 %10
  br label %26

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 6
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %10
  %25 = select i1 %24, i64 %23, i64 %10
  br label %26

26:                                               ; preds = %9, %21, %13
  %27 = phi i64 [ %10, %9 ], [ %25, %21 ], [ %20, %13 ]
  ret i64 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink21ResourceLoadScheduler11ShouldDelayEN3WTF24HashTableIteratorAdapterINS1_9HashTableImNS1_12KeyValuePairImNS_6MemberINS0_10ClientInfoEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashImEENS1_18HashMapValueTraitsINS1_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEES8_EE(%"class.blink::ResourceLoadScheduler"* nocapture readonly, %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"*) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features34kDelayCompetingLowPriorityRequestsE) #14
  br i1 %4, label %5, label %51

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 21
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %51

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 20
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %51, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 13
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %51, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 14, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %19, i64 %22
  %24 = icmp eq %"struct.WTF::KeyValuePair.18"* %23, %1
  br i1 %24, label %51, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %1, i64 0, i32 1, i32 0, i32 0
  %27 = load %"struct.blink::ResourceLoadScheduler::ClientInfo"*, %"struct.blink::ResourceLoadScheduler::ClientInfo"** %26, align 8
  %28 = getelementptr inbounds %"struct.blink::ResourceLoadScheduler::ClientInfo", %"struct.blink::ResourceLoadScheduler::ClientInfo"* %27, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 1
  br i1 %30, label %51, label %31

31:                                               ; preds = %25
  %32 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsDelayTypeELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN5blink8features44kDelayCompetingLowPriorityRequestsDelayParamE)
  %33 = icmp eq i32 %32, 3
  br i1 %33, label %34, label %42

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %38, %31
  %43 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 25, i32 0, i32 0
  %44 = load %"class.blink::LoadingBehaviorObserver"*, %"class.blink::LoadingBehaviorObserver"** %43, align 8
  %45 = icmp eq %"class.blink::LoadingBehaviorObserver"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.blink::LoadingBehaviorObserver"* %44 to void (%"class.blink::LoadingBehaviorObserver"*, i32)***
  %48 = load void (%"class.blink::LoadingBehaviorObserver"*, i32)**, void (%"class.blink::LoadingBehaviorObserver"*, i32)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::LoadingBehaviorObserver"*, i32)*, void (%"class.blink::LoadingBehaviorObserver"*, i32)** %48, i64 1
  %50 = load void (%"class.blink::LoadingBehaviorObserver"*, i32)*, void (%"class.blink::LoadingBehaviorObserver"*, i32)** %49, align 8
  tail call void %50(%"class.blink::LoadingBehaviorObserver"* nonnull %44, i32 1024) #14
  br label %51

51:                                               ; preds = %34, %42, %46, %38, %25, %17, %13, %9, %5, %3
  %52 = phi i1 [ false, %3 ], [ false, %5 ], [ false, %9 ], [ false, %13 ], [ false, %17 ], [ false, %25 ], [ false, %34 ], [ false, %38 ], [ true, %46 ], [ true, %42 ]
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadScheduler14MarkFirstPaintEv(%"class.blink::ResourceLoadScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features34kDelayCompetingLowPriorityRequestsE) #14
  br i1 %2, label %3, label %19

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 21
  %5 = load i8, i8* %4, align 4, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %3
  %8 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsDelayTypeELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN5blink8features44kDelayCompetingLowPriorityRequestsDelayParamE) #14
  switch i32 %8, label %13 [
    i32 0, label %18
    i32 1, label %19
    i32 2, label %19
    i32 3, label %9
  ]

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %14

13:                                               ; preds = %7
  unreachable

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %19

18:                                               ; preds = %7, %14
  store i8 1, i8* %4, align 4
  tail call void @_ZN5blink21ResourceLoadScheduler8MaybeRunEv(%"class.blink::ResourceLoadScheduler"* %0)
  br label %19

19:                                               ; preds = %7, %7, %9, %3, %1, %18, %14
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21ResourceLoadScheduler21ComputeDelayMilestoneEv(%"class.blink::ResourceLoadScheduler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsDelayTypeELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN5blink8features44kDelayCompetingLowPriorityRequestsDelayParamE)
  switch i32 %2, label %12 [
    i32 0, label %13
    i32 1, label %3
    i32 2, label %4
    i32 3, label %5
  ]

3:                                                ; preds = %1
  br label %13

4:                                                ; preds = %1
  br label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  br label %13

12:                                               ; preds = %1
  unreachable

13:                                               ; preds = %5, %1, %9, %4, %3
  %14 = phi i32 [ %11, %9 ], [ 0, %4 ], [ 2, %3 ], [ 1, %1 ], [ 0, %5 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ResourceLoadScheduler24MarkFirstContentfulPaintEv(%"class.blink::ResourceLoadScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features34kDelayCompetingLowPriorityRequestsE) #14
  br i1 %2, label %3, label %19

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 21
  %5 = load i8, i8* %4, align 4, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %3
  %8 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsDelayTypeELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN5blink8features44kDelayCompetingLowPriorityRequestsDelayParamE) #14
  switch i32 %8, label %13 [
    i32 0, label %19
    i32 1, label %18
    i32 2, label %19
    i32 3, label %9
  ]

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %14

13:                                               ; preds = %7
  unreachable

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 26, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %19

18:                                               ; preds = %7, %14
  store i8 1, i8* %4, align 4
  tail call void @_ZN5blink21ResourceLoadScheduler8MaybeRunEv(%"class.blink::ResourceLoadScheduler"* %0)
  br label %19

19:                                               ; preds = %7, %9, %7, %3, %1, %18, %14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink21ResourceLoadScheduler18SetClockForTestingEPKN4base5ClockE(%"class.blink::ResourceLoadScheduler"* nocapture, %"class.base::Clock"*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::ResourceLoadScheduler", %"class.blink::ResourceLoadScheduler"* %0, i64 0, i32 19
  store %"class.base::Clock"* %1, %"class.base::Clock"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsDelayTypeELb1EE3GetEv(%"struct.base::FeatureParam"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i64 @strlen(i8* %13) #14
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #16
  unreachable

18:                                               ; preds = %1
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #15
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %18
  %30 = trunc i64 %14 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %20 ]
  %36 = phi i8* [ %11, %29 ], [ %23, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %13, i64 %14, i1 false) #14
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %11, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %14
  store i8 0, i8* %40, align 1
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"struct.base::Feature"* dereferenceable(16) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %37, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %48 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i64, i64* %7, align 8
  %53 = zext i8 %50 to i64
  %54 = select i1 %51, i64 %52, i64 %53
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 4
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %92, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 3
  br label %64

62:                                               ; preds = %47
  %63 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 2
  br label %132

64:                                               ; preds = %86, %60
  %65 = phi i64 [ %58, %60 ], [ %83, %86 ]
  %66 = phi i64 [ %52, %60 ], [ %88, %86 ]
  %67 = phi i8 [ %50, %60 ], [ %87, %86 ]
  %68 = phi i64 [ 0, %60 ], [ %84, %86 ]
  %69 = load %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsDelayType, true>::Option"*, %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsDelayType, true>::Option"** %61, align 8
  %70 = getelementptr inbounds %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsDelayType, true>::Option", %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsDelayType, true>::Option"* %69, i64 %68, i32 1
  %71 = load i8*, i8** %70, align 8
  %72 = call i64 @strlen(i8* %71) #14
  %73 = icmp slt i8 %67, 0
  %74 = zext i8 %67 to i64
  %75 = select i1 %73, i64 %66, i64 %74
  %76 = icmp eq i64 %72, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %64
  %78 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* %71, i64 %72) #14
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %77
  %81 = load i64, i64* %57, align 8
  br label %82

82:                                               ; preds = %80, %64
  %83 = phi i64 [ %81, %80 ], [ %65, %64 ]
  %84 = add nuw i64 %68, 1
  %85 = icmp ult i64 %84, %83
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = load i8, i8* %49, align 1
  %88 = load i64, i64* %7, align 8
  br label %64

89:                                               ; preds = %77
  %90 = load %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsDelayType, true>::Option"*, %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsDelayType, true>::Option"** %61, align 8
  %91 = getelementptr inbounds %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsDelayType, true>::Option", %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsDelayType, true>::Option"* %90, i64 %68, i32 0
  br label %132

92:                                               ; preds = %82, %56
  %93 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %94 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #14
  %95 = load i8*, i8** %12, align 8
  %96 = call i64 @strlen(i8* %95) #14
  %97 = icmp ugt i64 %96, -17
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %99) #16
  unreachable

100:                                              ; preds = %92
  %101 = icmp ult i64 %96, 23
  br i1 %101, label %111, label %102

102:                                              ; preds = %100
  %103 = add nuw i64 %96, 16
  %104 = and i64 %103, -16
  %105 = call i8* @_Znwm(i64 %104) #15
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %105, i8** %106, align 8
  %107 = or i64 %104, -9223372036854775808
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %96, i64* %109, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %116

111:                                              ; preds = %100
  %112 = trunc i64 %96 to i8
  %113 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  store i8 %112, i8* %114, align 1
  %115 = icmp eq i64 %96, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %111, %102
  %117 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %110, %102 ]
  %118 = phi i8* [ %94, %111 ], [ %105, %102 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* align 1 %95, i64 %96, i1 false) #14
  br label %119

119:                                              ; preds = %111, %116
  %120 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %117, %116 ]
  %121 = phi i8* [ %94, %111 ], [ %118, %116 ]
  %122 = getelementptr inbounds i8, i8* %121, i64 %96
  store i8 0, i8* %122, align 1
  %123 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 2
  %124 = load i32, i32* %123, align 8
  call void @_ZN4base19LogInvalidEnumValueERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_i(%"struct.base::Feature"* dereferenceable(16) %93, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 %124) #14
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #15
  br label %131

131:                                              ; preds = %119, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #14
  br label %132

132:                                              ; preds = %89, %131, %62
  %133 = phi i32* [ %63, %62 ], [ %123, %131 ], [ %91, %89 ]
  %134 = load i32, i32* %133, align 8
  %135 = load i8, i8* %49, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %132
  %138 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %138) #15
  br label %139

139:                                              ; preds = %132, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret i32 %134
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4base12FeatureParamIN5blink8features42DelayCompetingLowPriorityRequestsThresholdELb1EE3GetEv(%"struct.base::FeatureParam.275"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.base::FeatureParam.275", %"struct.base::FeatureParam.275"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"struct.base::FeatureParam.275", %"struct.base::FeatureParam.275"* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i64 @strlen(i8* %13) #14
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #16
  unreachable

18:                                               ; preds = %1
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #15
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %18
  %30 = trunc i64 %14 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %20 ]
  %36 = phi i8* [ %11, %29 ], [ %23, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %13, i64 %14, i1 false) #14
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %11, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %14
  store i8 0, i8* %40, align 1
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"struct.base::Feature"* dereferenceable(16) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %37, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %48 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i64, i64* %7, align 8
  %53 = zext i8 %50 to i64
  %54 = select i1 %51, i64 %52, i64 %53
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.base::FeatureParam.275", %"struct.base::FeatureParam.275"* %0, i64 0, i32 4
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %92, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.base::FeatureParam.275", %"struct.base::FeatureParam.275"* %0, i64 0, i32 3
  br label %64

62:                                               ; preds = %47
  %63 = getelementptr inbounds %"struct.base::FeatureParam.275", %"struct.base::FeatureParam.275"* %0, i64 0, i32 2
  br label %132

64:                                               ; preds = %86, %60
  %65 = phi i64 [ %58, %60 ], [ %83, %86 ]
  %66 = phi i64 [ %52, %60 ], [ %88, %86 ]
  %67 = phi i8 [ %50, %60 ], [ %87, %86 ]
  %68 = phi i64 [ 0, %60 ], [ %84, %86 ]
  %69 = load %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsThreshold, true>::Option"*, %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsThreshold, true>::Option"** %61, align 8
  %70 = getelementptr inbounds %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsThreshold, true>::Option", %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsThreshold, true>::Option"* %69, i64 %68, i32 1
  %71 = load i8*, i8** %70, align 8
  %72 = call i64 @strlen(i8* %71) #14
  %73 = icmp slt i8 %67, 0
  %74 = zext i8 %67 to i64
  %75 = select i1 %73, i64 %66, i64 %74
  %76 = icmp eq i64 %72, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %64
  %78 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* %71, i64 %72) #14
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %77
  %81 = load i64, i64* %57, align 8
  br label %82

82:                                               ; preds = %80, %64
  %83 = phi i64 [ %81, %80 ], [ %65, %64 ]
  %84 = add nuw i64 %68, 1
  %85 = icmp ult i64 %84, %83
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = load i8, i8* %49, align 1
  %88 = load i64, i64* %7, align 8
  br label %64

89:                                               ; preds = %77
  %90 = load %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsThreshold, true>::Option"*, %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsThreshold, true>::Option"** %61, align 8
  %91 = getelementptr inbounds %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsThreshold, true>::Option", %"struct.base::FeatureParam<blink::features::DelayCompetingLowPriorityRequestsThreshold, true>::Option"* %90, i64 %68, i32 0
  br label %132

92:                                               ; preds = %82, %56
  %93 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %94 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #14
  %95 = load i8*, i8** %12, align 8
  %96 = call i64 @strlen(i8* %95) #14
  %97 = icmp ugt i64 %96, -17
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %99) #16
  unreachable

100:                                              ; preds = %92
  %101 = icmp ult i64 %96, 23
  br i1 %101, label %111, label %102

102:                                              ; preds = %100
  %103 = add nuw i64 %96, 16
  %104 = and i64 %103, -16
  %105 = call i8* @_Znwm(i64 %104) #15
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %105, i8** %106, align 8
  %107 = or i64 %104, -9223372036854775808
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %96, i64* %109, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %116

111:                                              ; preds = %100
  %112 = trunc i64 %96 to i8
  %113 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  store i8 %112, i8* %114, align 1
  %115 = icmp eq i64 %96, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %111, %102
  %117 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %110, %102 ]
  %118 = phi i8* [ %94, %111 ], [ %105, %102 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* align 1 %95, i64 %96, i1 false) #14
  br label %119

119:                                              ; preds = %111, %116
  %120 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %117, %116 ]
  %121 = phi i8* [ %94, %111 ], [ %118, %116 ]
  %122 = getelementptr inbounds i8, i8* %121, i64 %96
  store i8 0, i8* %122, align 1
  %123 = getelementptr inbounds %"struct.base::FeatureParam.275", %"struct.base::FeatureParam.275"* %0, i64 0, i32 2
  %124 = load i32, i32* %123, align 8
  call void @_ZN4base19LogInvalidEnumValueERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_i(%"struct.base::Feature"* dereferenceable(16) %93, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 %124) #14
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #15
  br label %131

131:                                              ; preds = %119, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #14
  br label %132

132:                                              ; preds = %89, %131, %62
  %133 = phi i32* [ %63, %62 ], [ %123, %131 ], [ %91, %89 ]
  %134 = load i32, i32* %133, align 8
  %135 = load i8, i8* %49, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %132
  %138 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %138) #15
  br label %139

139:                                              ; preds = %132, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret i32 %134
}

declare void @_ZN5blink5mojom5blink38DelayCompetingLowPriorityRequestsHintsC1Ev(%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints"*) unnamed_addr #1

declare zeroext i1 @_ZN4base19GetFieldTrialParamsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::map.276"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8*, i64, i32*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree.277"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.277", %"class.std::__1::__tree.277"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #14
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #14
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.277"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.277"* %0, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.277"* %0, %"class.std::__1::__tree_node"* %9) #14
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #15
  br label %19

19:                                               ; preds = %16, %4
  %20 = bitcast %"struct.std::__1::pair.287"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.std::__1::pair.287", %"struct.std::__1::pair.287"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %19, %24
  %28 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %2, %27
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink38DelayCompetingLowPriorityRequestsHintsD1Ev(%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints"*) unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.288"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.288"* %1, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.288"* %1 to %"class.std::__1::__tree_node.288"**
  %6 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.288"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.288"**
  %9 = load %"class.std::__1::__tree_node.288"*, %"class.std::__1::__tree_node.288"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.288"* %9) #14
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node.288", %"class.std::__1::__tree_node.288"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.291"**
  %13 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %12, align 8
  tail call void @_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.256"* %10, %"class.std::__1::__tree_node.291"* %13) #14
  %14 = bitcast %"class.std::__1::__tree_node.288"* %1 to i8*
  tail call void @_ZdlPv(i8* %14) #15
  ret void

15:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.256"*, %"class.std::__1::__tree_node.291"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.291"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.291"* %1 to %"class.std::__1::__tree_node.291"**
  %6 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %5, align 8
  tail call void @_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.256"* %0, %"class.std::__1::__tree_node.291"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.291"**
  %9 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %8, align 8
  tail call void @_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.256"* %0, %"class.std::__1::__tree_node.291"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node.291"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.32"*, %"class.std::__1::__tree_node.292"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.292"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.292"* %1 to %"class.std::__1::__tree_node.292"**
  %6 = load %"class.std::__1::__tree_node.292"*, %"class.std::__1::__tree_node.292"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.32"* %0, %"class.std::__1::__tree_node.292"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.292", %"class.std::__1::__tree_node.292"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.292"**
  %9 = load %"class.std::__1::__tree_node.292"*, %"class.std::__1::__tree_node.292"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.32"* %0, %"class.std::__1::__tree_node.292"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node.292"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #14
  br i1 %28, label %93, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.18"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !17

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %52 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %52, i64 3
  %54 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::Visitor"* %0) #14
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %93, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %59

59:                                               ; preds = %90, %57
  %60 = phi i64 [ 0, %57 ], [ %91, %90 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %30, i64 %60, i32 0
  br i1 %55, label %62, label %76

62:                                               ; preds = %59
  %63 = load atomic i64, i64* %61 monotonic, align 8
  %64 = add i64 %63, 1
  %65 = icmp ult i64 %64, 2
  br i1 %65, label %90, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %30, i64 %60, i32 1
  %68 = bitcast %"class.blink::Member.19"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %66
  %72 = inttoptr i64 %69 to i8*
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %74 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, i64 5
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, align 8
  tail call void %75(%"class.blink::Visitor"* %0, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ResourceLoadScheduler10ClientInfoEE5TraceEPNS_7VisitorEPKv) #14
  br label %90

76:                                               ; preds = %59
  %77 = load i64, i64* %61, align 8
  %78 = add i64 %77, 1
  %79 = icmp ult i64 %78, 2
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %30, i64 %60, i32 1
  %82 = bitcast %"class.blink::Member.19"* %81 to i64*
  %83 = load atomic i64, i64* %82 monotonic, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = inttoptr i64 %83 to i8*
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %88 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %87, i64 5
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %88, align 8
  tail call void %89(%"class.blink::Visitor"* %0, i8* nonnull %86, i8* nonnull %86, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ResourceLoadScheduler10ClientInfoEE5TraceEPNS_7VisitorEPKv) #14
  br label %90

90:                                               ; preds = %85, %80, %76, %71, %66, %62
  %91 = add nuw nsw i64 %60, 1
  %92 = icmp eq i64 %91, %50
  br i1 %92, label %93, label %59

93:                                               ; preds = %90, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21ResourceLoadScheduler10ClientInfoEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %72, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = and i64 %4, -131072
  %9 = inttoptr i64 %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 4138
  %11 = load i8, i8* %10, align 2
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %6
  %14 = getelementptr inbounds i8, i8* %9, i64 4160
  br label %53

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8, i8* %9, i64 4096
  %17 = bitcast i8* %16 to %"class.blink::NormalPage"*
  %18 = getelementptr inbounds i8, i8* %9, i64 4400
  %19 = bitcast i8* %18 to i8**
  %20 = bitcast i8* %18 to i64*
  %21 = load i64, i64* %20, align 16
  %22 = sub i64 %4, %21
  %23 = lshr i64 %22, 3
  %24 = lshr i64 %22, 6
  %25 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %17, i64 0, i32 2, i32 0, i32 1, i64 %24
  %26 = load atomic i8, i8* %25 acquire, align 1
  %27 = trunc i64 %23 to i32
  %28 = and i32 %27, 7
  %29 = shl i32 2, %28
  %30 = trunc i32 %29 to i8
  %31 = add i8 %30, -1
  %32 = and i8 %31, %26
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %15, %34
  %35 = phi i64 [ %36, %34 ], [ %24, %15 ]
  %36 = add i64 %35, -1
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %17, i64 0, i32 2, i32 0, i32 1, i64 %36
  %38 = load atomic i8, i8* %37 acquire, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %34, label %40

40:                                               ; preds = %34, %15
  %41 = phi i64 [ %24, %15 ], [ %36, %34 ]
  %42 = phi i8 [ %32, %15 ], [ %38, %34 ]
  %43 = zext i8 %42 to i32
  %44 = tail call i32 @llvm.ctlz.i32(i32 %43, i1 true) #14, !range !3
  %45 = add nsw i32 %44, -24
  %46 = shl i64 %41, 3
  %47 = or i64 %46, 7
  %48 = sext i32 %45 to i64
  %49 = sub i64 %47, %48
  %50 = shl i64 %49, 3
  %51 = load i8*, i8** %19, align 16
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  br label %53

53:                                               ; preds = %40, %13
  %54 = phi i8* [ %14, %13 ], [ %52, %40 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 8
  %56 = getelementptr inbounds i8, i8* %54, i64 4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 acquire, align 2
  %59 = lshr i16 %58, 2
  %60 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %61 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %60, i64 0, i32 0
  %62 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %61, align 8
  %63 = zext i16 %59 to i64
  %64 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %62, i64 %63
  %65 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %64, align 8
  %66 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %65, i64 0, i32 0
  %67 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %66, align 8
  %68 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %69, i64 5
  %71 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, align 8
  tail call void %71(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* %55, void (%"class.blink::Visitor"*, i8*)* %67) #14
  br label %72

72:                                               ; preds = %2, %53
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_35DetachableResourceFetcherPropertiesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DetachableResourceFetcherProperties"*
  tail call void @_ZNK5blink35DetachableResourceFetcherProperties5TraceEPNS_7VisitorE(%"class.blink::DetachableResourceFetcherProperties"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZNK5blink35DetachableResourceFetcherProperties5TraceEPNS_7VisitorE(%"class.blink::DetachableResourceFetcherProperties"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23DetachableConsoleLoggerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #14, !range !3
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #14
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleD1Ev(%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !4
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !4
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.256"*, %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* dereferenceable(16), %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.256", %"class.std::__1::__tree.256"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.291"**
  %6 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.291"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.256", %"class.std::__1::__tree.256"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::ResourceLoadScheduler::ClientIdWithPriority", %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::ResourceLoadScheduler::ClientIdWithPriority", %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::ResourceLoadScheduler::ClientIdWithPriority", %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* %1, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %54, %8
  %17 = phi %"class.std::__1::__tree_node.291"* [ %57, %54 ], [ %6, %8 ]
  %18 = phi %"class.std::__1::__tree_node_base"** [ %56, %54 ], [ %9, %8 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %17, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %11, %20
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = icmp sgt i32 %11, %20
  br i1 %23, label %34, label %40

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %17, i64 0, i32 1, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %13, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = icmp sgt i32 %13, %26
  br i1 %29, label %34, label %42

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %17, i64 0, i32 1, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %15, %32
  br i1 %33, label %34, label %44

34:                                               ; preds = %30, %28, %22
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %17, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %54

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %17, i64 0, i32 0, i32 0
  br label %60

40:                                               ; preds = %22
  %41 = icmp sgt i32 %20, %11
  br i1 %41, label %46, label %52

42:                                               ; preds = %28
  %43 = icmp sgt i32 %26, %13
  br i1 %43, label %46, label %52

44:                                               ; preds = %30
  %45 = icmp ult i64 %32, %15
  br i1 %45, label %46, label %52

46:                                               ; preds = %44, %42, %40
  %47 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %17, i64 0, i32 0, i32 1
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %17, i64 0, i32 0, i32 0
  br label %60

52:                                               ; preds = %44, %42, %40
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %17, i64 0, i32 0, i32 0
  br label %60

54:                                               ; preds = %46, %34
  %55 = phi %"class.std::__1::__tree_node_base"* [ %36, %34 ], [ %48, %46 ]
  %56 = phi %"class.std::__1::__tree_node_base"** [ %35, %34 ], [ %47, %46 ]
  %57 = bitcast %"class.std::__1::__tree_node_base"* %55 to %"class.std::__1::__tree_node.291"*
  br label %16

58:                                               ; preds = %3
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %60

60:                                               ; preds = %38, %50, %52, %58
  %61 = phi %"class.std::__1::__tree_end_node"* [ %4, %58 ], [ %39, %38 ], [ %51, %50 ], [ %53, %52 ]
  %62 = phi %"class.std::__1::__tree_node_base"** [ %59, %58 ], [ %35, %38 ], [ %47, %50 ], [ %18, %52 ]
  %63 = bitcast %"class.std::__1::__tree_node_base"** %62 to %"class.std::__1::__tree_node.291"**
  %64 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node.291"* %64, null
  br i1 %65, label %66, label %91

66:                                               ; preds = %60
  %67 = tail call i8* @_Znwm(i64 48) #15, !noalias !39
  %68 = getelementptr inbounds i8, i8* %67, i64 32
  %69 = bitcast %"class.blink::ResourceLoadScheduler::ClientIdWithPriority"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 16, i1 false) #14, !noalias !39
  %70 = bitcast i8* %67 to %"class.std::__1::__tree_node.291"*
  %71 = bitcast i8* %67 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds i8, i8* %67, i64 16
  %73 = bitcast i8* %72 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %61, %"class.std::__1::__tree_end_node"** %73, align 8
  %74 = bitcast %"class.std::__1::__tree_node_base"** %62 to i8**
  store i8* %67, i8** %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree.256", %"class.std::__1::__tree.256"* %0, i64 0, i32 0
  %76 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %76, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %66
  %81 = ptrtoint %"class.std::__1::__tree_node_base"* %78 to i64
  %82 = bitcast %"class.std::__1::__tree.256"* %0 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  br label %84

84:                                               ; preds = %80, %66
  %85 = phi %"class.std::__1::__tree_node_base"* [ %71, %66 ], [ %83, %80 ]
  %86 = getelementptr inbounds %"class.std::__1::__tree.256", %"class.std::__1::__tree.256"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %87, %"class.std::__1::__tree_node_base"* %85) #14
  %88 = getelementptr inbounds %"class.std::__1::__tree.256", %"class.std::__1::__tree.256"* %0, i64 0, i32 2, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 1
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %84, %60
  %92 = phi i8 [ 1, %84 ], [ 0, %60 ]
  %93 = phi %"class.std::__1::__tree_node.291"* [ %70, %84 ], [ %64, %60 ]
  %94 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %93, i64 0, i32 0, i32 0
  %95 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %94, 0
  %96 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %95, i8 %92, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21ResourceLoadScheduler10ClientInfoEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !17

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ResourceLoadScheduler10ClientInfoEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21ResourceLoadScheduler10ClientInfoEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ResourceLoadScheduler10ClientInfoEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ResourceLoadScheduler10ClientInfoEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #13 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #14
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %21, i8* %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #14
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !17

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #14
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21ResourceLoadScheduler10ClientInfoEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.18"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERmPS5_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.16"*, i64* dereferenceable(8), %"struct.blink::ResourceLoadScheduler::ClientInfo"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.18"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.16"* %0, %"struct.WTF::KeyValuePair.18"* null)
  %9 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.18"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %11, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %85, label %42

42:                                               ; preds = %10
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %42, %63
  %57 = phi i64 [ %40, %42 ], [ %72, %63 ]
  %58 = phi %"struct.WTF::KeyValuePair.18"* [ %38, %42 ], [ %70, %63 ]
  %59 = phi %"struct.WTF::KeyValuePair.18"* [ null, %42 ], [ %65, %63 ]
  %60 = phi i64 [ %37, %42 ], [ %69, %63 ]
  %61 = phi i64 [ 0, %42 ], [ %67, %63 ]
  %62 = icmp eq i64 %57, %16
  br i1 %62, label %146, label %63

63:                                               ; preds = %56
  %64 = icmp eq i64 %57, -1
  %65 = select i1 %64, %"struct.WTF::KeyValuePair.18"* %58, %"struct.WTF::KeyValuePair.18"* %59
  %66 = icmp eq i64 %61, 0
  %67 = select i1 %66, i64 %55, i64 %61
  %68 = add i64 %67, %60
  %69 = and i64 %68, %15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %11, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %56

74:                                               ; preds = %63
  %75 = icmp eq %"struct.WTF::KeyValuePair.18"* %65, null
  br i1 %75, label %85, label %76

76:                                               ; preds = %74
  %77 = bitcast %"struct.WTF::KeyValuePair.18"* %65 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %77, i64 16) #14
  %78 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  %84 = load i64, i64* %1, align 8
  br label %85

85:                                               ; preds = %10, %74, %76
  %86 = phi i64 [ %84, %76 ], [ %16, %74 ], [ %16, %10 ]
  %87 = phi %"struct.WTF::KeyValuePair.18"* [ %65, %76 ], [ %70, %74 ], [ %38, %10 ]
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %87, i64 0, i32 0
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %87, i64 0, i32 1
  %90 = load %"struct.blink::ResourceLoadScheduler::ClientInfo"*, %"struct.blink::ResourceLoadScheduler::ClientInfo"** %2, align 8
  %91 = ptrtoint %"struct.blink::ResourceLoadScheduler::ClientInfo"* %90 to i64
  %92 = bitcast %"class.blink::Member.19"* %89 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %85
  %96 = bitcast %"struct.blink::ResourceLoadScheduler::ClientInfo"* %90 to i8*
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #14
  br label %98

98:                                               ; preds = %85, %95
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %134, label %101

101:                                              ; preds = %98
  %102 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %103 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %102, i64 0, i32 1
  %104 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %103) #14
  %105 = icmp eq i8* %104, null
  br i1 %105, label %106, label %108, !prof !17

106:                                              ; preds = %101
  %107 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %103, i8* %107) #14
  br label %108

108:                                              ; preds = %106, %101
  %109 = phi i8* [ %107, %106 ], [ %104, %101 ]
  %110 = bitcast i8* %109 to %"class.blink::ThreadState"**
  %111 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 9
  %113 = load i8, i8* %112, align 1, !range !4
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %134, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 13
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 1
  store i64 %118, i64* %116, align 8
  %119 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %120 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %119, align 8
  %121 = load atomic i64, i64* %92 monotonic, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %120, i64 0, i32 0, i32 0
  %125 = inttoptr i64 %121 to i8*
  %126 = bitcast %"class.blink::MarkingVisitor"* %120 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %127 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %127, i64 5
  %129 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, align 8
  tail call void %129(%"class.blink::Visitor"* %124, i8* nonnull %125, i8* %125, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ResourceLoadScheduler10ClientInfoEE5TraceEPNS_7VisitorEPKv) #14
  %130 = load i64, i64* %116, align 8
  br label %131

131:                                              ; preds = %123, %115
  %132 = phi i64 [ %118, %115 ], [ %130, %123 ]
  %133 = add i64 %132, -1
  store i64 %133, i64* %116, align 8
  br label %134

134:                                              ; preds = %98, %108, %131
  %135 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %135, align 4
  %138 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = add i32 %139, %137
  %141 = shl i32 %140, 1
  %142 = load i32, i32* %12, align 8
  %143 = icmp ult i32 %141, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %134
  %145 = tail call %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.16"* %0, %"struct.WTF::KeyValuePair.18"* %87)
  br label %146

146:                                              ; preds = %56, %134, %144
  %147 = phi i8 [ 1, %134 ], [ 1, %144 ], [ 0, %56 ]
  %148 = phi %"struct.WTF::KeyValuePair.18"* [ %87, %134 ], [ %145, %144 ], [ %58, %56 ]
  %149 = insertvalue { %"struct.WTF::KeyValuePair.18"*, i8 } undef, %"struct.WTF::KeyValuePair.18"* %148, 0
  %150 = insertvalue { %"struct.WTF::KeyValuePair.18"*, i8 } %149, i8 %147, 1
  ret { %"struct.WTF::KeyValuePair.18"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.16"*, %"struct.WTF::KeyValuePair.18"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #14
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %23, i8* %24) #14
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.16"* %0, i32 %35, %"struct.WTF::KeyValuePair.18"* %1, i8* nonnull dereferenceable(1) %4) #14
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #14
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.18"*
  %44 = call %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.16"* %0, %"struct.WTF::KeyValuePair.18"* %43, i32 %40, %"struct.WTF::KeyValuePair.18"* %1) #14
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.18"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.18"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.16"*, i32, %"struct.WTF::KeyValuePair.18"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #14
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !17

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #14
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0)) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.18"* %32, null
  br i1 %33, label %82, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.18"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #14
  br i1 %38, label %39, label %82

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #14
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.18"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %79, %39
  %48 = phi %"struct.WTF::KeyValuePair.18"* [ null, %39 ], [ %65, %79 ]
  %49 = bitcast %"class.WTF::HashTable.16"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #14
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.18"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.16"* %0, %"struct.WTF::KeyValuePair.18"* %42, i32 %1, %"struct.WTF::KeyValuePair.18"* %48)
  br label %82

58:                                               ; preds = %39, %79
  %59 = phi i64 [ %80, %79 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.18"* [ %65, %79 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.18"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.18"* %64, %"struct.WTF::KeyValuePair.18"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %62, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  %69 = icmp ult i64 %68, 2
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.18"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false)
  br label %79

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %64, i64 0, i32 0
  store i64 %67, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %45, i64 %59, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %61, i64 %59, i32 1
  %76 = bitcast %"class.blink::Member.19"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::Member.19"* %74 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %70, %72
  %80 = add nuw nsw i64 %59, 1
  %81 = icmp eq i64 %80, %43
  br i1 %81, label %47, label %58

82:                                               ; preds = %34, %30, %55
  %83 = phi %"struct.WTF::KeyValuePair.18"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.18"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.16"*, %"struct.WTF::KeyValuePair.18"*, i32, %"struct.WTF::KeyValuePair.18"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.16", align 8
  %6 = bitcast %"class.WTF::HashTable.16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.16"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.18"* %1, %"struct.WTF::KeyValuePair.18"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.18"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.18"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable.16"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.18"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.16"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #14
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.16"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.16"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #14
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #14
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret %"struct.WTF::KeyValuePair.18"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair.18"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair.18"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %59, i64 %62, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 1
  %66 = icmp ult i64 %65, 2
  br i1 %66, label %82, label %67

67:                                               ; preds = %57
  %68 = call { %"struct.WTF::KeyValuePair.18"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE16LookupForWritingERKm(%"class.WTF::HashTable.16"* nonnull %5, i64* dereferenceable(8) %63) #14
  %69 = extractvalue { %"struct.WTF::KeyValuePair.18"*, i8 } %68, 0
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %69, i64 0, i32 0
  %71 = load i64, i64* %63, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member.19"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.19"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair.18"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair.18"* %69, %"struct.WTF::KeyValuePair.18"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %67
  %83 = phi i32 [ %58, %57 ], [ %81, %67 ]
  %84 = phi %"struct.WTF::KeyValuePair.18"* [ %59, %57 ], [ %77, %67 ]
  %85 = phi %"struct.WTF::KeyValuePair.18"* [ %60, %57 ], [ %80, %67 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.13, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableImNS1_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashImEENS1_18HashMapValueTraitsINS1_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableImNS1_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashImEENS1_18HashMapValueTraitsINS1_10HashTraitsImEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !17

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([446 x i8], [446 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableImNS_12KeyValuePairImNS1_6MemberINS1_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSE_IS8_EEEESF_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.18"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE16LookupForWritingERKm(%"class.WTF::HashTable.16"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i64, i64* %1, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %7, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 %30
  %32 = ptrtoint %"struct.WTF::KeyValuePair.18"* %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %31, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %53, label %36

36:                                               ; preds = %2
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %59

50:                                               ; preds = %66
  %51 = ptrtoint %"struct.WTF::KeyValuePair.18"* %73 to i64
  %52 = inttoptr i64 %68 to %"struct.WTF::KeyValuePair.18"*
  br label %53

53:                                               ; preds = %50, %2
  %54 = phi i64 [ %51, %50 ], [ %32, %2 ]
  %55 = phi %"struct.WTF::KeyValuePair.18"* [ %52, %50 ], [ null, %2 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.18"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair.18"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %78

59:                                               ; preds = %66, %36
  %60 = phi i64 [ 0, %36 ], [ %68, %66 ]
  %61 = phi i64 [ %34, %36 ], [ %76, %66 ]
  %62 = phi i64 [ %32, %36 ], [ %74, %66 ]
  %63 = phi i64 [ %30, %36 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %36 ], [ %70, %66 ]
  %65 = icmp eq i64 %61, %9
  br i1 %65, label %78, label %66

66:                                               ; preds = %59
  %67 = icmp eq i64 %61, -1
  %68 = select i1 %67, i64 %62, i64 %60
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %49, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 %72
  %74 = ptrtoint %"struct.WTF::KeyValuePair.18"* %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %50, label %59

78:                                               ; preds = %59, %53
  %79 = phi i64 [ %58, %53 ], [ %62, %59 ]
  %80 = phi i8 [ 0, %53 ], [ 1, %59 ]
  %81 = inttoptr i64 %79 to %"struct.WTF::KeyValuePair.18"*
  %82 = insertvalue { %"struct.WTF::KeyValuePair.18"*, i8 } undef, %"struct.WTF::KeyValuePair.18"* %81, 0
  %83 = insertvalue { %"struct.WTF::KeyValuePair.18"*, i8 } %82, i8 %80, 1
  ret { %"struct.WTF::KeyValuePair.18"*, i8 } %83
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.16"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.18"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %68, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %8
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 0
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %8
  %66 = phi %"struct.WTF::KeyValuePair.18"* [ %33, %8 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.18"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %7 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %7 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %4, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"struct.WTF::KeyValuePair.18"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"struct.WTF::KeyValuePair.18"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } undef, %"struct.WTF::KeyValuePair.18"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } %77, %"struct.WTF::KeyValuePair.18"* %76, 1
  ret { %"struct.WTF::KeyValuePair.18"*, %"struct.WTF::KeyValuePair.18"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !4
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !4
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !4
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !4
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !4
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !4
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !4
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !4
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !4
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !4
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !4
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !4
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !4
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE21__emplace_unique_implIJRmRNS1_13WebURLRequest8PriorityERiEEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEEDpOT_(%"class.std::__1::__tree.256"*, i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call i8* @_Znwm(i64 48) #15, !noalias !42
  %6 = getelementptr inbounds i8, i8* %5, i64 32
  %7 = load i64, i64* %1, align 8, !noalias !42
  %8 = load i32, i32* %2, align 4, !noalias !42
  %9 = load i32, i32* %3, align 4, !noalias !42
  %10 = bitcast i8* %6 to i64*
  store i64 %7, i64* %10, align 8, !noalias !42
  %11 = getelementptr inbounds i8, i8* %5, i64 40
  %12 = bitcast i8* %11 to i32*
  store i32 %8, i32* %12, align 8, !noalias !42
  %13 = getelementptr inbounds i8, i8* %5, i64 44
  %14 = bitcast i8* %13 to i32*
  store i32 %9, i32* %14, align 4, !noalias !42
  %15 = getelementptr inbounds %"class.std::__1::__tree.256", %"class.std::__1::__tree.256"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node.291"**
  %17 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node.291"* %17, null
  br i1 %18, label %63, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.std::__1::__tree.256", %"class.std::__1::__tree.256"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %21

21:                                               ; preds = %59, %19
  %22 = phi %"class.std::__1::__tree_node.291"* [ %62, %59 ], [ %17, %19 ]
  %23 = phi %"class.std::__1::__tree_node_base"** [ %61, %59 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %22, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %8, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = icmp sgt i32 %8, %25
  br i1 %28, label %39, label %45

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %22, i64 0, i32 1, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %9, %31
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = icmp sgt i32 %9, %31
  br i1 %34, label %39, label %47

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %22, i64 0, i32 1, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %7, %37
  br i1 %38, label %39, label %49

39:                                               ; preds = %35, %33, %27
  %40 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %22, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %59

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %22, i64 0, i32 0, i32 0
  br label %65

45:                                               ; preds = %27
  %46 = icmp sgt i32 %25, %8
  br i1 %46, label %51, label %57

47:                                               ; preds = %33
  %48 = icmp sgt i32 %31, %9
  br i1 %48, label %51, label %57

49:                                               ; preds = %35
  %50 = icmp ult i64 %37, %7
  br i1 %50, label %51, label %57

51:                                               ; preds = %49, %47, %45
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %22, i64 0, i32 0, i32 1
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, null
  br i1 %54, label %55, label %59

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %22, i64 0, i32 0, i32 0
  br label %65

57:                                               ; preds = %49, %47, %45
  %58 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %22, i64 0, i32 0, i32 0
  br label %65

59:                                               ; preds = %51, %39
  %60 = phi %"class.std::__1::__tree_node_base"* [ %41, %39 ], [ %53, %51 ]
  %61 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %52, %51 ]
  %62 = bitcast %"class.std::__1::__tree_node_base"* %60 to %"class.std::__1::__tree_node.291"*
  br label %21

63:                                               ; preds = %4
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 0, i32 0
  br label %65

65:                                               ; preds = %43, %55, %57, %63
  %66 = phi %"class.std::__1::__tree_end_node"* [ %15, %63 ], [ %44, %43 ], [ %56, %55 ], [ %58, %57 ]
  %67 = phi %"class.std::__1::__tree_node_base"** [ %64, %63 ], [ %40, %43 ], [ %52, %55 ], [ %23, %57 ]
  %68 = bitcast %"class.std::__1::__tree_node_base"** %67 to %"class.std::__1::__tree_node.291"**
  %69 = load %"class.std::__1::__tree_node.291"*, %"class.std::__1::__tree_node.291"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node.291"* %69, null
  br i1 %70, label %71, label %93

71:                                               ; preds = %65
  %72 = bitcast i8* %5 to %"class.std::__1::__tree_node_base"*
  %73 = getelementptr inbounds i8, i8* %5, i64 16
  %74 = bitcast i8* %73 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %66, %"class.std::__1::__tree_end_node"** %74, align 8
  %75 = bitcast %"class.std::__1::__tree_node_base"** %67 to i8**
  store i8* %5, i8** %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree.256", %"class.std::__1::__tree.256"* %0, i64 0, i32 0
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %71
  %82 = ptrtoint %"class.std::__1::__tree_node_base"* %79 to i64
  %83 = bitcast %"class.std::__1::__tree.256"* %0 to i64*
  store i64 %82, i64* %83, align 8
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  br label %85

85:                                               ; preds = %81, %71
  %86 = phi %"class.std::__1::__tree_node_base"* [ %72, %71 ], [ %84, %81 ]
  %87 = getelementptr inbounds %"class.std::__1::__tree.256", %"class.std::__1::__tree.256"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %88, %"class.std::__1::__tree_node_base"* %86) #14
  %89 = getelementptr inbounds %"class.std::__1::__tree.256", %"class.std::__1::__tree.256"* %0, i64 0, i32 2, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %89, align 8
  %92 = bitcast i8* %5 to %"class.std::__1::__tree_end_node"*
  br label %95

93:                                               ; preds = %65
  %94 = getelementptr inbounds %"class.std::__1::__tree_node.291", %"class.std::__1::__tree_node.291"* %69, i64 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* nonnull %5) #15
  br label %95

95:                                               ; preds = %85, %93
  %96 = phi %"class.std::__1::__tree_end_node"* [ %92, %85 ], [ %94, %93 ]
  %97 = phi i8 [ 1, %85 ], [ 0, %93 ]
  %98 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %96, 0
  %99 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %98, i8 %97, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE4findERKm(%"class.WTF::HashTable"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %68, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %8
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 0
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %8
  %66 = phi %"struct.WTF::KeyValuePair"* [ %33, %8 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %7 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %7 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"struct.WTF::KeyValuePair"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %42

24:                                               ; preds = %65
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %66, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %69, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %67, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #14
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret %"struct.WTF::KeyValuePair"* %33

42:                                               ; preds = %21, %65
  %43 = phi i64 [ %66, %65 ], [ %23, %21 ]
  %44 = phi i32 [ %67, %65 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ %68, %65 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %69, %65 ], [ null, %21 ]
  %47 = phi i32 [ %70, %65 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 1
  %53 = icmp ult i64 %52, 2
  br i1 %53, label %65, label %54

54:                                               ; preds = %42
  %55 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKm(%"class.WTF::HashTable"* nonnull %5, i64* dereferenceable(8) %50) #14
  %56 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %55, 0
  %57 = bitcast %"struct.WTF::KeyValuePair"* %56 to i8*
  %58 = bitcast %"struct.WTF::KeyValuePair"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 16, i1 false) #14
  %59 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %48
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %60, %3
  %62 = select i1 %61, %"struct.WTF::KeyValuePair"* %56, %"struct.WTF::KeyValuePair"* %46
  %63 = load i32, i32* %12, align 8
  %64 = ptrtoint %"struct.WTF::KeyValuePair"* %59 to i64
  br label %65

65:                                               ; preds = %42, %54
  %66 = phi i64 [ %43, %42 ], [ %64, %54 ]
  %67 = phi i32 [ %44, %42 ], [ %63, %54 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ %45, %42 ], [ %59, %54 ]
  %69 = phi %"struct.WTF::KeyValuePair"* [ %46, %42 ], [ %62, %54 ]
  %70 = add i32 %47, 1
  %71 = icmp eq i32 %70, %67
  br i1 %71, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKm(%"class.WTF::HashTable"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i64, i64* %1, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %7, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %30
  %32 = ptrtoint %"struct.WTF::KeyValuePair"* %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %53, label %36

36:                                               ; preds = %2
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %59

50:                                               ; preds = %66
  %51 = ptrtoint %"struct.WTF::KeyValuePair"* %73 to i64
  %52 = inttoptr i64 %68 to %"struct.WTF::KeyValuePair"*
  br label %53

53:                                               ; preds = %50, %2
  %54 = phi i64 [ %51, %50 ], [ %32, %2 ]
  %55 = phi %"struct.WTF::KeyValuePair"* [ %52, %50 ], [ null, %2 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %78

59:                                               ; preds = %66, %36
  %60 = phi i64 [ 0, %36 ], [ %68, %66 ]
  %61 = phi i64 [ %34, %36 ], [ %76, %66 ]
  %62 = phi i64 [ %32, %36 ], [ %74, %66 ]
  %63 = phi i64 [ %30, %36 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %36 ], [ %70, %66 ]
  %65 = icmp eq i64 %61, %9
  br i1 %65, label %78, label %66

66:                                               ; preds = %59
  %67 = icmp eq i64 %61, -1
  %68 = select i1 %67, i64 %62, i64 %60
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %49, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %72
  %74 = ptrtoint %"struct.WTF::KeyValuePair"* %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %50, label %59

78:                                               ; preds = %59, %53
  %79 = phi i64 [ %58, %53 ], [ %62, %59 ]
  %80 = phi i8 [ 0, %53 ], [ 1, %59 ]
  %81 = inttoptr i64 %79 to %"struct.WTF::KeyValuePair"*
  %82 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %81, 0
  %83 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %82, i8 %80, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE8RehashToEPmjS8_(%"class.WTF::HashTable.10"*, i64*, i32, i64*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i64* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.10", %"class.WTF::HashTable.10"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.10", %"class.WTF::HashTable.10"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.10"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i64*, i64** %9, align 8
  %17 = ptrtoint i64* %16 to i64
  br label %31

18:                                               ; preds = %118
  %19 = bitcast %"class.WTF::HashTable.10"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %119, %18 ]
  %23 = phi i64* [ null, %10 ], [ %122, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #14
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.10", %"class.WTF::HashTable.10"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i64* %23

31:                                               ; preds = %13, %118
  %32 = phi i64 [ %17, %13 ], [ %119, %118 ]
  %33 = phi i32 [ %7, %13 ], [ %120, %118 ]
  %34 = phi i64* [ %16, %13 ], [ %121, %118 ]
  %35 = phi i64* [ null, %13 ], [ %122, %118 ]
  %36 = phi i32 [ 0, %13 ], [ %123, %118 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i64, i64* %34, i64 %37
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  %41 = icmp ult i64 %40, 2
  br i1 %41, label %118, label %42

42:                                               ; preds = %31
  %43 = shl i64 %39, 32
  %44 = xor i64 %43, -1
  %45 = add i64 %39, %44
  %46 = lshr i64 %45, 22
  %47 = xor i64 %46, %45
  %48 = shl i64 %47, 13
  %49 = xor i64 %48, -1
  %50 = add i64 %47, %49
  %51 = lshr i64 %50, 8
  %52 = xor i64 %51, %50
  %53 = mul i64 %52, 9
  %54 = lshr i64 %53, 15
  %55 = xor i64 %54, %53
  %56 = shl i64 %55, 27
  %57 = xor i64 %56, -1
  %58 = add i64 %55, %57
  %59 = lshr i64 %58, 31
  %60 = xor i64 %59, %58
  %61 = trunc i64 %60 to i32
  %62 = and i32 %14, %61
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i64, i64* %1, i64 %63
  %65 = ptrtoint i64* %64 to i64
  %66 = load i64, i64* %64, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %85, label %68

68:                                               ; preds = %42
  %69 = xor i32 %61, -1
  %70 = lshr i32 %61, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint i64* %105 to i64
  %84 = inttoptr i64 %100 to i64*
  br label %85

85:                                               ; preds = %82, %42
  %86 = phi i64 [ %83, %82 ], [ %65, %42 ]
  %87 = phi i64* [ %84, %82 ], [ null, %42 ]
  %88 = icmp eq i64* %87, null
  %89 = ptrtoint i64* %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi i64 [ %66, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %65, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %63, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq i64 %93, %39
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq i64 %93, -1
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds i64, i64* %1, i64 %104
  %106 = ptrtoint i64* %105 to i64
  %107 = load i64, i64* %105, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to i64*
  store i64 %39, i64* %111, align 8
  %112 = load i64*, i64** %9, align 8
  %113 = getelementptr inbounds i64, i64* %112, i64 %37
  %114 = icmp eq i64* %113, %3
  %115 = select i1 %114, i64* %111, i64* %35
  %116 = load i32, i32* %6, align 8
  %117 = ptrtoint i64* %112 to i64
  br label %118

118:                                              ; preds = %31, %109
  %119 = phi i64 [ %32, %31 ], [ %117, %109 ]
  %120 = phi i32 [ %33, %31 ], [ %116, %109 ]
  %121 = phi i64* [ %34, %31 ], [ %112, %109 ]
  %122 = phi i64* [ %35, %31 ], [ %115, %109 ]
  %123 = add i32 %36, 1
  %124 = icmp eq i32 %123, %120
  br i1 %124, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.16"*, %"struct.WTF::KeyValuePair.18"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %1, i64 0, i32 0
  store i64 -1, i64* %3, align 8
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.18", %"struct.WTF::KeyValuePair.18"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.19"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #14
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !17

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #14
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ResourceLoadScheduler10ClientInfoEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_10HashTraitsImEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #14
  %48 = bitcast %"class.blink::HeapHashTableBacking"* %47 to %"struct.WTF::KeyValuePair.18"*
  %49 = tail call %"struct.WTF::KeyValuePair.18"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ResourceLoadScheduler10ClientInfoEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.16"* %0, %"struct.WTF::KeyValuePair.18"* %48, i32 %45, %"struct.WTF::KeyValuePair.18"* null) #14
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERmRS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, i64* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %86, label %42

42:                                               ; preds = %10
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %42, %63
  %57 = phi i64 [ %40, %42 ], [ %72, %63 ]
  %58 = phi %"struct.WTF::KeyValuePair"* [ %38, %42 ], [ %70, %63 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ null, %42 ], [ %65, %63 ]
  %60 = phi i64 [ %37, %42 ], [ %69, %63 ]
  %61 = phi i64 [ 0, %42 ], [ %67, %63 ]
  %62 = icmp eq i64 %57, %16
  br i1 %62, label %103, label %63

63:                                               ; preds = %56
  %64 = icmp eq i64 %57, -1
  %65 = select i1 %64, %"struct.WTF::KeyValuePair"* %58, %"struct.WTF::KeyValuePair"* %59
  %66 = icmp eq i64 %61, 0
  %67 = select i1 %66, i64 %55, i64 %61
  %68 = add i64 %67, %60
  %69 = and i64 %68, %15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %56

74:                                               ; preds = %63
  %75 = icmp eq %"struct.WTF::KeyValuePair"* %65, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 0, i32 0
  store i64 0, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 0, i32 1
  store i32 -128, i32* %78, align 8
  %79 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %80 = load i32, i32* %79, align 8
  %81 = add i32 %80, 2147483647
  %82 = and i32 %81, 2147483647
  %83 = and i32 %80, -2147483648
  %84 = or i32 %82, %83
  store i32 %84, i32* %79, align 8
  %85 = load i64, i64* %1, align 8
  br label %86

86:                                               ; preds = %10, %74, %76
  %87 = phi i64 [ %85, %76 ], [ %16, %74 ], [ %16, %10 ]
  %88 = phi %"struct.WTF::KeyValuePair"* [ %65, %76 ], [ %70, %74 ], [ %38, %10 ]
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 0
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1
  %91 = load i32, i32* %2, align 4
  store i32 %91, i32* %90, align 4
  %92 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %86
  %102 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %88)
  br label %103

103:                                              ; preds = %56, %86, %101
  %104 = phi i8 [ 1, %86 ], [ 1, %101 ], [ 0, %56 ]
  %105 = phi %"struct.WTF::KeyValuePair"* [ %88, %86 ], [ %102, %101 ], [ %58, %56 ]
  %106 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %105, 0
  %107 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %106, i8 %104, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #14
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #14
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEEEEPKcv, i64 0, i64 0)) #14
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %52, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 0
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 1
  store i32 -128, i32* %47, align 8
  %48 = or i64 %44, 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %48, i32 0
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %48, i32 1
  store i32 -128, i32* %50, align 8
  %51 = add nuw nsw i64 %44, 2
  %52 = add i64 %45, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %43

54:                                               ; preds = %43, %38
  %55 = phi i64 [ 0, %38 ], [ %51, %43 ]
  %56 = icmp eq i64 %39, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %55, i32 0
  store i64 0, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %55, i32 1
  store i32 -128, i32* %59, align 8
  br label %60

60:                                               ; preds = %57, %54, %31
  %61 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink13WebURLRequest8PriorityEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_10HashTraitsImEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #14
  ret %"struct.WTF::KeyValuePair"* %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64*, i8 } @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKmRmEENS_18HashTableAddResultIS7_mEEOT0_OT1_(%"class.WTF::HashTable.10"*, i64* dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.10", %"class.WTF::HashTable.10"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = icmp eq i64* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6ExpandEPm(%"class.WTF::HashTable.10"* %0, i64* null)
  %9 = load i64*, i64** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i64* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.10", %"class.WTF::HashTable.10"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i64, i64* %11, i64 %37
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %81, label %41

41:                                               ; preds = %10
  %42 = xor i32 %35, -1
  %43 = lshr i32 %35, 23
  %44 = add i32 %43, %42
  %45 = shl i32 %44, 12
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 7
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 2
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 20
  %52 = xor i32 %51, %50
  %53 = or i32 %52, 1
  %54 = zext i32 %53 to i64
  br label %55

55:                                               ; preds = %41, %62
  %56 = phi i64 [ %39, %41 ], [ %70, %62 ]
  %57 = phi i64* [ %38, %41 ], [ %69, %62 ]
  %58 = phi i64* [ null, %41 ], [ %64, %62 ]
  %59 = phi i64 [ %37, %41 ], [ %68, %62 ]
  %60 = phi i64 [ 0, %41 ], [ %66, %62 ]
  %61 = icmp eq i64 %56, %16
  br i1 %61, label %95, label %62

62:                                               ; preds = %55
  %63 = icmp eq i64 %56, -1
  %64 = select i1 %63, i64* %57, i64* %58
  %65 = icmp eq i64 %60, 0
  %66 = select i1 %65, i64 %54, i64 %60
  %67 = add i64 %66, %59
  %68 = and i64 %67, %15
  %69 = getelementptr inbounds i64, i64* %11, i64 %68
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %55

72:                                               ; preds = %62
  %73 = icmp eq i64* %64, null
  br i1 %73, label %81, label %74

74:                                               ; preds = %72
  store i64 0, i64* %64, align 8
  %75 = getelementptr inbounds %"class.WTF::HashTable.10", %"class.WTF::HashTable.10"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  br label %81

81:                                               ; preds = %10, %72, %74
  %82 = phi i64* [ %64, %74 ], [ %69, %72 ], [ %38, %10 ]
  %83 = load i64, i64* %2, align 8
  store i64 %83, i64* %82, align 8
  %84 = getelementptr inbounds %"class.WTF::HashTable.10", %"class.WTF::HashTable.10"* %0, i64 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %84, align 4
  %87 = getelementptr inbounds %"class.WTF::HashTable.10", %"class.WTF::HashTable.10"* %0, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, %86
  %90 = shl i32 %89, 1
  %91 = load i32, i32* %12, align 8
  %92 = icmp ult i32 %90, %91
  br i1 %92, label %95, label %93

93:                                               ; preds = %81
  %94 = tail call i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6ExpandEPm(%"class.WTF::HashTable.10"* %0, i64* %82)
  br label %95

95:                                               ; preds = %55, %81, %93
  %96 = phi i8 [ 1, %81 ], [ 1, %93 ], [ 0, %55 ]
  %97 = phi i64* [ %82, %81 ], [ %94, %93 ], [ %57, %55 ]
  %98 = insertvalue { i64*, i8 } undef, i64* %97, 0
  %99 = insertvalue { i64*, i8 } %98, i8 %96, 1
  ret { i64*, i8 } %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6ExpandEPm(%"class.WTF::HashTable.10"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.10", %"class.WTF::HashTable.10"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.10", %"class.WTF::HashTable.10"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #14
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #14
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #14
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #14
  %36 = bitcast i8* %35 to i64*
  %37 = call i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorENS_7IntHashImEENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE8RehashToEPmjS8_(%"class.WTF::HashTable.10"* %0, i64* %36, i32 %32, i64* %1) #14
  ret i64* %37
}

declare void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base19LogInvalidEnumValueERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_i(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i32 24, i32 33}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_ISU_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_ISU_EEEEEEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_ISU_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_ISU_EEEEEEDpOT_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_ISU_EEEEEEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_ISU_EEEEEEDpOT_"}
!17 = !{!"branch_weights", i32 1, i32 2000}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_ISU_EEEEEEDpOT_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_ISU_EEEEEEDpOT_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_IST_EEEEEEDpOT_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_IST_EEEEEEDpOT_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_IST_EEEEEEDpOT_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionENS_3setINS3_20ClientIdWithPriorityENS6_7CompareENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_IST_EEEEEEDpOT_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__16__treeINS_12__value_typeIN5blink21ResourceLoadScheduler14ThrottleOptionEN4base4TimeEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE16__construct_nodeIJRmRNS1_13WebURLRequest8PriorityERiEEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS5_ISH_EEEEEEDpOT_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__16__treeIN5blink21ResourceLoadScheduler20ClientIdWithPriorityENS3_7CompareENS_9allocatorIS3_EEE16__construct_nodeIJRmRNS1_13WebURLRequest8PriorityERiEEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS5_ISH_EEEEEEDpOT_"}
