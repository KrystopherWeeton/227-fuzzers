; ModuleID = '../../third_party/boringssl/src/ssl/bio_ssl.cc'
source_filename = "../../third_party/boringssl/src/ssl/bio_ssl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.ssl_st = type opaque

@_ZL10ssl_method = internal constant %struct.bio_method_st { i32 519, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 (%struct.bio_st*, i8*, i32)* @_ZL9ssl_writeP6bio_stPKci, i32 (%struct.bio_st*, i8*, i32)* @_ZL8ssl_readP6bio_stPci, i32 (%struct.bio_st*, i8*)* null, i32 (%struct.bio_st*, i8*, i32)* null, i64 (%struct.bio_st*, i32, i64, i8*)* @_ZL8ssl_ctrlP6bio_stilPv, i32 (%struct.bio_st*)* @_ZL7ssl_newP6bio_st, i32 (%struct.bio_st*)* @_ZL8ssl_freeP6bio_st, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* @_ZL17ssl_callback_ctrlP6bio_stiPFlS0_iPKcillE }, align 8
@.str = private unnamed_addr constant [4 x i8] c"SSL\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"../../third_party/boringssl/src/ssl/bio_ssl.cc\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.bio_method_st* @BIO_f_ssl() local_unnamed_addr #0 {
  ret %struct.bio_method_st* @_ZL10ssl_method
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @BIO_set_ssl(%struct.bio_st*, %struct.ssl_st*, i32) local_unnamed_addr #1 {
  %4 = sext i32 %2 to i64
  %5 = bitcast %struct.ssl_st* %1 to i8*
  %6 = tail call i64 @BIO_ctrl(%struct.bio_st* %0, i32 109, i64 %4, i8* %5) #3
  ret i64 %6
}

declare i64 @BIO_ctrl(%struct.bio_st*, i32, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL9ssl_writeP6bio_stPKci(%struct.bio_st*, i8*, i32) #1 {
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %5 = bitcast i8** %4 to %struct.ssl_st**
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = icmp eq %struct.ssl_st* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #3
  %9 = tail call i32 @SSL_write(%struct.ssl_st* nonnull %6, i8* %1, i32 %2) #3
  %10 = tail call i32 @SSL_get_error(%struct.ssl_st* nonnull %6, i32 %9) #3
  switch i32 %10, label %14 [
    i32 3, label %11
    i32 2, label %12
    i32 7, label %13
  ]

11:                                               ; preds = %8
  tail call void @BIO_set_retry_write(%struct.bio_st* %0) #3
  br label %14

12:                                               ; preds = %8
  tail call void @BIO_set_retry_read(%struct.bio_st* %0) #3
  br label %14

13:                                               ; preds = %8
  tail call void @BIO_set_retry_special(%struct.bio_st* %0) #3
  tail call void @BIO_set_retry_reason(%struct.bio_st* %0, i32 2) #3
  br label %14

14:                                               ; preds = %11, %12, %13, %8, %3
  %15 = phi i32 [ 0, %3 ], [ %9, %8 ], [ %9, %13 ], [ %9, %12 ], [ %9, %11 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL8ssl_readP6bio_stPci(%struct.bio_st*, i8*, i32) #1 {
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %5 = bitcast i8** %4 to %struct.ssl_st**
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = icmp eq %struct.ssl_st* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #3
  %9 = tail call i32 @SSL_read(%struct.ssl_st* nonnull %6, i8* %1, i32 %2) #3
  %10 = tail call i32 @SSL_get_error(%struct.ssl_st* nonnull %6, i32 %9) #3
  switch i32 %10, label %15 [
    i32 2, label %11
    i32 3, label %12
    i32 8, label %13
    i32 7, label %14
  ]

11:                                               ; preds = %8
  tail call void @BIO_set_retry_read(%struct.bio_st* %0) #3
  br label %15

12:                                               ; preds = %8
  tail call void @BIO_set_retry_write(%struct.bio_st* %0) #3
  br label %15

13:                                               ; preds = %8
  tail call void @BIO_set_retry_special(%struct.bio_st* %0) #3
  tail call void @BIO_set_retry_reason(%struct.bio_st* %0, i32 3) #3
  br label %15

14:                                               ; preds = %8
  tail call void @BIO_set_retry_special(%struct.bio_st* %0) #3
  tail call void @BIO_set_retry_reason(%struct.bio_st* %0, i32 2) #3
  br label %15

15:                                               ; preds = %11, %12, %13, %14, %8, %3
  %16 = phi i32 [ 0, %3 ], [ %9, %8 ], [ %9, %14 ], [ %9, %13 ], [ %9, %12 ], [ %9, %11 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZL8ssl_ctrlP6bio_stilPv(%struct.bio_st*, i32, i64, i8*) #1 {
  %5 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %6 = bitcast i8** %5 to %struct.ssl_st**
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = icmp eq %struct.ssl_st* %7, null
  %9 = icmp ne i32 %1, 109
  %10 = and i1 %9, %8
  br i1 %10, label %39, label %11

11:                                               ; preds = %4
  switch i32 %1, label %36 [
    i32 109, label %12
    i32 8, label %18
    i32 9, label %22
    i32 13, label %25
    i32 10, label %28
    i32 11, label %31
    i32 6, label %39
    i32 7, label %39
    i32 12, label %39
  ]

12:                                               ; preds = %11
  br i1 %8, label %14, label %13

13:                                               ; preds = %12
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 104) #3
  br label %39

14:                                               ; preds = %12
  %15 = trunc i64 %2 to i32
  %16 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  store i32 %15, i32* %16, align 4
  store i8* %3, i8** %5, align 8
  %17 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  store i32 1, i32* %17, align 8
  br label %39

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  br label %39

22:                                               ; preds = %11
  %23 = trunc i64 %2 to i32
  %24 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  store i32 %23, i32* %24, align 4
  br label %39

25:                                               ; preds = %11
  %26 = tail call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* %7) #3
  %27 = tail call i64 @BIO_ctrl(%struct.bio_st* %26, i32 13, i64 %2, i8* %3) #3
  br label %39

28:                                               ; preds = %11
  %29 = tail call i32 @SSL_pending(%struct.ssl_st* %7) #3
  %30 = sext i32 %29 to i64
  br label %39

31:                                               ; preds = %11
  %32 = tail call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* %7) #3
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #3
  %33 = tail call i64 @BIO_ctrl(%struct.bio_st* %32, i32 11, i64 %2, i8* %3) #3
  %34 = tail call i32 @BIO_get_retry_flags(%struct.bio_st* %32) #3
  tail call void @BIO_set_flags(%struct.bio_st* %0, i32 %34) #3
  %35 = tail call i32 @BIO_get_retry_reason(%struct.bio_st* %32) #3
  tail call void @BIO_set_retry_reason(%struct.bio_st* %0, i32 %35) #3
  br label %39

36:                                               ; preds = %11
  %37 = tail call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* %7) #3
  %38 = tail call i64 @BIO_ctrl(%struct.bio_st* %37, i32 %1, i64 %2, i8* %3) #3
  br label %39

39:                                               ; preds = %11, %11, %11, %4, %36, %31, %28, %25, %22, %18, %14, %13
  %40 = phi i64 [ %38, %36 ], [ %33, %31 ], [ %30, %28 ], [ %27, %25 ], [ 1, %22 ], [ %21, %18 ], [ 0, %13 ], [ 1, %14 ], [ 0, %4 ], [ -1, %11 ], [ -1, %11 ], [ -1, %11 ]
  ret i64 %40
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL7ssl_newP6bio_st(%struct.bio_st* nocapture readnone) #0 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL8ssl_freeP6bio_st(%struct.bio_st* nocapture readonly) #1 {
  %2 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %3 = bitcast i8** %2 to %struct.ssl_st**
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = icmp eq %struct.ssl_st* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = tail call i32 @SSL_shutdown(%struct.ssl_st* nonnull %4) #3
  %8 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void @SSL_free(%struct.ssl_st* nonnull %4) #3
  br label %12

12:                                               ; preds = %11, %6, %1
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZL17ssl_callback_ctrlP6bio_stiPFlS0_iPKcillE(%struct.bio_st* nocapture readonly, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*) #1 {
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %5 = bitcast i8** %4 to %struct.ssl_st**
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = icmp eq %struct.ssl_st* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = icmp eq i32 %1, 14
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = tail call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* nonnull %6) #3
  %12 = tail call i64 @BIO_callback_ctrl(%struct.bio_st* %11, i32 %1, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)* %2) #3
  br label %13

13:                                               ; preds = %8, %3, %10
  %14 = phi i64 [ %12, %10 ], [ 0, %3 ], [ -1, %8 ]
  ret i64 %14
}

declare void @BIO_clear_retry_flags(%struct.bio_st*) local_unnamed_addr #2

declare i32 @SSL_write(%struct.ssl_st*, i8*, i32) local_unnamed_addr #2

declare i32 @SSL_get_error(%struct.ssl_st*, i32) local_unnamed_addr #2

declare void @BIO_set_retry_write(%struct.bio_st*) local_unnamed_addr #2

declare void @BIO_set_retry_read(%struct.bio_st*) local_unnamed_addr #2

declare void @BIO_set_retry_special(%struct.bio_st*) local_unnamed_addr #2

declare void @BIO_set_retry_reason(%struct.bio_st*, i32) local_unnamed_addr #2

declare i32 @SSL_read(%struct.ssl_st*, i8*, i32) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare %struct.bio_st* @SSL_get_wbio(%struct.ssl_st*) local_unnamed_addr #2

declare i32 @SSL_pending(%struct.ssl_st*) local_unnamed_addr #2

declare void @BIO_set_flags(%struct.bio_st*, i32) local_unnamed_addr #2

declare i32 @BIO_get_retry_flags(%struct.bio_st*) local_unnamed_addr #2

declare i32 @BIO_get_retry_reason(%struct.bio_st*) local_unnamed_addr #2

declare %struct.bio_st* @SSL_get_rbio(%struct.ssl_st*) local_unnamed_addr #2

declare i32 @SSL_shutdown(%struct.ssl_st*) local_unnamed_addr #2

declare void @SSL_free(%struct.ssl_st*) local_unnamed_addr #2

declare i64 @BIO_callback_ctrl(%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
