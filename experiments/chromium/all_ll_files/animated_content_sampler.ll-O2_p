; ModuleID = '../../media/capture/content/animated_content_sampler.cc'
source_filename = "../../media/capture/content/animated_content_sampler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.media::AnimatedContentSampler" = type { %"class.base::TimeDelta", %"class.base::circular_deque", %"class.gfx::Rect", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i32, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.media::AnimatedContentSampler::Observation"*, i64 }
%"struct.media::AnimatedContentSampler::Observation" = type { %"class.gfx::Rect", %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEED2Ev = comdat any

$_ZNK4base9TimeDelta6IntDivES0_ = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm = comdat any

$_ZNK4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm = comdat any

$_ZN4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_ = comdat any

$_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE25ShrinkCapacityIfNecessaryEv = comdat any

@_ZN5media12_GLOBAL__N_116kDriftCorrectionE = internal constant %"class.base::TimeDelta" { i64 2000000 }, align 8
@.str = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN5media22AnimatedContentSamplerC1EN4base9TimeDeltaE = hidden unnamed_addr alias void (%"class.media::AnimatedContentSampler"*, i64), void (%"class.media::AnimatedContentSampler"*, i64)* @_ZN5media22AnimatedContentSamplerC2EN4base9TimeDeltaE
@_ZN5media22AnimatedContentSamplerD1Ev = hidden unnamed_addr alias void (%"class.media::AnimatedContentSampler"*), void (%"class.media::AnimatedContentSampler"*)* @_ZN5media22AnimatedContentSamplerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22AnimatedContentSamplerC2EN4base9TimeDeltaE(%"class.media::AnimatedContentSampler"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 7, i32 0
  %6 = bitcast %"class.base::circular_deque"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 76, i1 false)
  %7 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22AnimatedContentSamplerD2Ev(%"class.media::AnimatedContentSampler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1
  tail call void @_ZN4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEED2Ev(%"class.base::circular_deque"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #12
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #12
  %15 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #12
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #12
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media22AnimatedContentSampler19SetMinCapturePeriodEN4base9TimeDeltaE(%"class.media::AnimatedContentSampler"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media22AnimatedContentSampler23SetTargetSamplingPeriodEN4base9TimeDeltaE(%"class.media::AnimatedContentSampler"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 4, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22AnimatedContentSampler25ConsiderPresentationEventERKN3gfx4RectEN4base9TimeTicksE(%"class.media::AnimatedContentSampler"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  tail call void @_ZN5media22AnimatedContentSampler14AddObservationERKN3gfx4RectEN4base9TimeTicksE(%"class.media::AnimatedContentSampler"* %0, %"class.gfx::Rect"* dereferenceable(16) %1, i64 %2)
  %7 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 3
  %9 = tail call zeroext i1 @_ZNK5media22AnimatedContentSampler19AnalyzeObservationsEN4base9TimeTicksEPN3gfx4RectEPNS1_9TimeDeltaE(%"class.media::AnimatedContentSampler"* %0, i64 %2, %"class.gfx::Rect"* %7, %"class.base::TimeDelta"* %8)
  br i1 %9, label %10, label %15

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %8, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, -1
  %14 = icmp ugt i64 %13, 83332
  br i1 %14, label %15, label %19

15:                                               ; preds = %3, %10
  %16 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %8, i64 0, i32 0
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 6
  store i32 0, i32* %18, align 8
  br label %129

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 3, i32 0
  %21 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 4, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = tail call i64 @_ZN5media22AnimatedContentSampler21ComputeSamplingPeriodEN4base9TimeDeltaES2_S2_(i64 %12, i64 %22, i64 %24)
  %26 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 5, i32 0
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 6
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %19
  store i32 1, i32* %27, align 8
  br label %31

31:                                               ; preds = %30, %19
  %32 = phi i32 [ 1, %30 ], [ %28, %19 ]
  %33 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %56

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 2, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %56

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 2, i32 1, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %56

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 2, i32 1, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %59, label %56

56:                                               ; preds = %31, %44, %38, %50
  %57 = icmp eq i32 %32, 3
  br i1 %57, label %58, label %129

58:                                               ; preds = %56
  store i32 2, i32* %27, align 8
  br label %129

59:                                               ; preds = %50
  %60 = icmp eq i32 %32, 1
  br i1 %60, label %61, label %95

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 8, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = sub nsw i64 %2, %63
  %65 = icmp sgt i64 %64, %25
  br i1 %65, label %66, label %71

66:                                               ; preds = %61
  %67 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #12
  %68 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %2, i64* %68, align 8
  %69 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %4, i64 %25) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #12
  store i64 %69, i64* %62, align 8
  %70 = load i64, i64* %26, align 8
  br label %71

71:                                               ; preds = %61, %66
  %72 = phi i64 [ %70, %66 ], [ %64, %61 ]
  %73 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 7, i32 0
  store i64 %72, i64* %73, align 8
  %74 = load i64, i64* %11, align 8
  %75 = sdiv i64 %74, 2
  %76 = add i64 %75, -9223372036854775807
  %77 = icmp ult i64 %76, 2
  br i1 %77, label %85, label %78

78:                                               ; preds = %71
  %79 = icmp slt i64 %74, -1
  %80 = select i1 %79, i64 -9223372036854775808, i64 9223372036854775807
  %81 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %72, i64 %75) #12
  %82 = extractvalue { i64, i1 } %81, 1
  %83 = extractvalue { i64, i1 } %81, 0
  %84 = select i1 %82, i64 %80, i64 %83, !prof !2
  br label %93

85:                                               ; preds = %71
  %86 = add i64 %72, -9223372036854775807
  %87 = icmp ugt i64 %86, 1
  %88 = icmp eq i64 %72, %75
  %89 = or i1 %88, %87
  br i1 %89, label %93, label %90

90:                                               ; preds = %85
  %91 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #12
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #12
  br label %93

93:                                               ; preds = %78, %85, %90
  %94 = phi i64 [ %84, %78 ], [ %75, %85 ], [ %75, %90 ]
  store i64 %94, i64* %73, align 8
  br label %118

95:                                               ; preds = %59
  %96 = load i64, i64* %20, align 8
  %97 = add i64 %96, -9223372036854775807
  %98 = icmp ult i64 %97, 2
  %99 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 7, i32 0
  %100 = load i64, i64* %99, align 8
  br i1 %98, label %108, label %101

101:                                              ; preds = %95
  %102 = icmp slt i64 %96, 0
  %103 = select i1 %102, i64 -9223372036854775808, i64 9223372036854775807
  %104 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %100, i64 %96) #12
  %105 = extractvalue { i64, i1 } %104, 1
  %106 = extractvalue { i64, i1 } %104, 0
  %107 = select i1 %105, i64 %103, i64 %106, !prof !2
  br label %116

108:                                              ; preds = %95
  %109 = add i64 %100, -9223372036854775807
  %110 = icmp ugt i64 %109, 1
  %111 = icmp eq i64 %100, %96
  %112 = or i1 %111, %110
  br i1 %112, label %116, label %113

113:                                              ; preds = %108
  %114 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #12
  %115 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #12
  br label %116

116:                                              ; preds = %101, %108, %113
  %117 = phi i64 [ %107, %101 ], [ %96, %108 ], [ %96, %113 ]
  store i64 %117, i64* %99, align 8
  br label %118

118:                                              ; preds = %116, %93
  %119 = phi i64 [ %117, %116 ], [ %94, %93 ]
  %120 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 7
  %121 = load i64, i64* %26, align 8
  %122 = icmp slt i64 %119, %121
  br i1 %122, label %128, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %120, i64 0, i32 0
  %125 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* %120, i64 %121) #12
  store i64 %125, i64* %124, align 8
  %126 = call i64 @_ZNK5media22AnimatedContentSampler25ComputeNextFrameTimestampEN4base9TimeTicksE(%"class.media::AnimatedContentSampler"* %0, i64 %2)
  %127 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 %126, i64* %127, align 8
  store i32 3, i32* %27, align 8
  br label %129

128:                                              ; preds = %118
  store i32 2, i32* %27, align 8
  br label %129

129:                                              ; preds = %56, %58, %15, %128, %123
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22AnimatedContentSampler14AddObservationERKN3gfx4RectEN4base9TimeTicksE(%"class.media::AnimatedContentSampler"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Rect", align 8
  %5 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %76, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %76, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %15, %17
  br i1 %18, label %32, label %19

19:                                               ; preds = %12
  %20 = icmp eq i64 %17, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %19, %21
  %25 = phi i64 [ %23, %21 ], [ %17, %19 ]
  %26 = add i64 %25, -1
  %27 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %13, i64 0, i32 0
  %28 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZNK4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %27, i64 %26) #12
  %29 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp sgt i64 %30, %2
  br i1 %31, label %76, label %32

32:                                               ; preds = %24, %12
  %33 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33)
  %34 = bitcast %"class.gfx::Rect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 4 %34, i64 16, i1 false)
  tail call void @_ZN4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %13, i64 1) #12
  %35 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %13, i64 0, i32 0
  %36 = load i64, i64* %16, align 8
  %37 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %35, i64 %36) #12
  %38 = bitcast %"struct.media::AnimatedContentSampler::Observation"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %33, i64 16, i1 false)
  %39 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %37, i64 0, i32 1, i32 0, i32 0
  store i64 %2, i64* %39, align 8
  %40 = load i64, i64* %16, align 8
  %41 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, -1
  %44 = icmp eq i64 %40, %43
  br i1 %44, label %45, label %46

45:                                               ; preds = %32
  store i64 0, i64* %16, align 8
  br label %49

46:                                               ; preds = %32
  %47 = add i64 %40, 1
  store i64 %47, i64* %16, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46, %45
  br label %50

50:                                               ; preds = %46, %49
  %51 = phi i64 [ %43, %49 ], [ %40, %46 ]
  %52 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZNK4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %35, i64 %51) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33)
  %53 = load i64, i64* %14, align 8
  %54 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %35, i64 %53) #12
  %55 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %54, i64 0, i32 1, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = sub nsw i64 %2, %56
  %58 = icmp sgt i64 %57, 2000000
  br i1 %58, label %59, label %76

59:                                               ; preds = %50, %59
  %60 = load i64, i64* %14, align 8
  %61 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %35, i64 %60) #12
  %62 = load i64, i64* %14, align 8
  %63 = add i64 %62, 1
  %64 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %35, i64 %63) #12
  %65 = load i64, i64* %14, align 8
  %66 = add i64 %65, 1
  %67 = load i64, i64* %41, align 8
  %68 = icmp eq i64 %66, %67
  %69 = select i1 %68, i64 0, i64 %66
  store i64 %69, i64* %14, align 8
  tail call void @_ZN4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %13) #12
  %70 = load i64, i64* %14, align 8
  %71 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %35, i64 %70) #12
  %72 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %71, i64 0, i32 1, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = sub nsw i64 %2, %73
  %75 = icmp sgt i64 %74, 2000000
  br i1 %75, label %59, label %76

76:                                               ; preds = %59, %50, %3, %24, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5media22AnimatedContentSampler19AnalyzeObservationsEN4base9TimeTicksEPN3gfx4RectEPNS1_9TimeDeltaE(%"class.media::AnimatedContentSampler"*, i64, %"class.gfx::Rect"* nocapture, %"class.base::TimeDelta"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = tail call { i64, i64 } @_ZNK5media22AnimatedContentSampler23ElectMajorityDamageRectEv(%"class.media::AnimatedContentSampler"* %0)
  %7 = extractvalue { i64, i64 } %6, 0
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = extractvalue { i64, i64 } %6, 1
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i32 %12, 0
  %14 = icmp ult i64 %11, 4294967296
  %15 = or i1 %14, %13
  br i1 %15, label %175, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1, i32 2
  %18 = load i64, i64* %17, align 8, !noalias !3
  %19 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !6
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %146, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1, i32 0
  %25 = lshr i64 %11, 32
  %26 = trunc i64 %25 to i32
  %27 = bitcast %"class.logging::CheckError"* %5 to i8*
  br label %28

28:                                               ; preds = %22, %133
  %29 = phi i64 [ 0, %22 ], [ %46, %133 ]
  %30 = phi i64 [ 0, %22 ], [ %130, %133 ]
  %31 = phi i64 [ 0, %22 ], [ %129, %133 ]
  %32 = phi i64 [ 0, %22 ], [ %128, %133 ]
  %33 = phi i64 [ 0, %22 ], [ %127, %133 ]
  %34 = phi i64 [ 0, %22 ], [ %126, %133 ]
  %35 = phi i64 [ %18, %22 ], [ %135, %133 ]
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %28
  %38 = load i64, i64* %23, align 8
  br label %39

39:                                               ; preds = %28, %37
  %40 = phi i64 [ %38, %37 ], [ %35, %28 ]
  %41 = add i64 %40, -1
  %42 = call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZNK4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %24, i64 %41) #12
  %43 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %42, i64 0, i32 0, i32 1
  %44 = call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %43) #12
  %45 = sext i32 %44 to i64
  %46 = add nsw i64 %29, %45
  br i1 %36, label %47, label %49

47:                                               ; preds = %39
  %48 = load i64, i64* %23, align 8
  br label %49

49:                                               ; preds = %39, %47
  %50 = phi i64 [ %48, %47 ], [ %35, %39 ]
  %51 = add i64 %50, -1
  %52 = call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZNK4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %24, i64 %51) #12
  %53 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %8
  br i1 %55, label %56, label %125

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %52, i64 0, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %10
  br i1 %59, label %60, label %125

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %52, i64 0, i32 0, i32 1, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %12
  br i1 %63, label %64, label %125

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %52, i64 0, i32 0, i32 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %26
  br i1 %67, label %68, label %125

68:                                               ; preds = %64
  %69 = add nsw i64 %30, %45
  %70 = icmp eq i64 %34, 0
  br i1 %70, label %71, label %82

71:                                               ; preds = %68
  br i1 %36, label %72, label %74

72:                                               ; preds = %71
  %73 = load i64, i64* %23, align 8
  br label %74

74:                                               ; preds = %71, %72
  %75 = phi i64 [ %73, %72 ], [ %35, %71 ]
  %76 = add i64 %75, -1
  %77 = call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZNK4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %24, i64 %76) #12
  %78 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %77, i64 0, i32 1, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = sub nsw i64 %1, %79
  %81 = icmp sgt i64 %80, 249999
  br i1 %81, label %175, label %113

82:                                               ; preds = %68
  br i1 %36, label %83, label %85

83:                                               ; preds = %82
  %84 = load i64, i64* %23, align 8
  br label %85

85:                                               ; preds = %82, %83
  %86 = phi i64 [ %84, %83 ], [ %35, %82 ]
  %87 = add i64 %86, -1
  %88 = call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZNK4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %24, i64 %87) #12
  %89 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %88, i64 0, i32 1, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = sub nsw i64 %33, %90
  %92 = icmp sgt i64 %91, 249999
  br i1 %92, label %138, label %93

93:                                               ; preds = %85
  %94 = add i64 %91, -9223372036854775807
  %95 = icmp ult i64 %94, 2
  br i1 %95, label %103, label %96

96:                                               ; preds = %93
  %97 = icmp slt i64 %91, 0
  %98 = select i1 %97, i64 -9223372036854775808, i64 9223372036854775807
  %99 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %32, i64 %91) #12
  %100 = extractvalue { i64, i1 } %99, 1
  %101 = extractvalue { i64, i1 } %99, 0
  %102 = select i1 %100, i64 %98, i64 %101, !prof !2
  br label %110

103:                                              ; preds = %93
  %104 = add i64 %32, -9223372036854775807
  %105 = icmp ugt i64 %104, 1
  %106 = icmp eq i64 %32, %91
  %107 = or i1 %105, %106
  br i1 %107, label %110, label %108

108:                                              ; preds = %103
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #12
  %109 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %110

110:                                              ; preds = %108, %103, %96
  %111 = phi i64 [ %102, %96 ], [ -9223372036854775808, %103 ], [ -9223372036854775808, %108 ]
  %112 = add i64 %31, 1
  br label %113

113:                                              ; preds = %110, %74
  %114 = phi i64 [ %79, %74 ], [ %34, %110 ]
  %115 = phi i64 [ %32, %74 ], [ %111, %110 ]
  %116 = phi i64 [ %31, %74 ], [ %112, %110 ]
  br i1 %36, label %117, label %119

117:                                              ; preds = %113
  %118 = load i64, i64* %23, align 8
  br label %119

119:                                              ; preds = %113, %117
  %120 = phi i64 [ %118, %117 ], [ %35, %113 ]
  %121 = add i64 %120, -1
  %122 = call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZNK4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %24, i64 %121) #12
  %123 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %122, i64 0, i32 1, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  br label %125

125:                                              ; preds = %64, %49, %60, %56, %119
  %126 = phi i64 [ %114, %119 ], [ %34, %64 ], [ %34, %56 ], [ %34, %60 ], [ %34, %49 ]
  %127 = phi i64 [ %124, %119 ], [ %33, %64 ], [ %33, %56 ], [ %33, %60 ], [ %33, %49 ]
  %128 = phi i64 [ %115, %119 ], [ %32, %64 ], [ %32, %56 ], [ %32, %60 ], [ %32, %49 ]
  %129 = phi i64 [ %116, %119 ], [ %31, %64 ], [ %31, %56 ], [ %31, %60 ], [ %31, %49 ]
  %130 = phi i64 [ %69, %119 ], [ %30, %64 ], [ %30, %56 ], [ %30, %60 ], [ %30, %49 ]
  br i1 %36, label %131, label %133

131:                                              ; preds = %125
  %132 = load i64, i64* %23, align 8
  br label %133

133:                                              ; preds = %125, %131
  %134 = phi i64 [ %132, %131 ], [ %35, %125 ]
  %135 = add i64 %134, -1
  %136 = load i64, i64* %19, align 8, !noalias !6
  %137 = icmp eq i64 %135, %136
  br i1 %137, label %138, label %28

138:                                              ; preds = %133, %85
  %139 = phi i64 [ %34, %85 ], [ %126, %133 ]
  %140 = phi i64 [ %33, %85 ], [ %127, %133 ]
  %141 = phi i64 [ %32, %85 ], [ %128, %133 ]
  %142 = phi i64 [ %31, %85 ], [ %129, %133 ]
  %143 = phi i64 [ %69, %85 ], [ %130, %133 ]
  %144 = shl i64 %46, 1
  %145 = sdiv i64 %144, 3
  br label %146

146:                                              ; preds = %138, %16
  %147 = phi i64 [ 0, %16 ], [ %139, %138 ]
  %148 = phi i64 [ 0, %16 ], [ %140, %138 ]
  %149 = phi i64 [ 0, %16 ], [ %141, %138 ]
  %150 = phi i64 [ 0, %16 ], [ %142, %138 ]
  %151 = phi i64 [ 0, %16 ], [ %143, %138 ]
  %152 = phi i64 [ 0, %16 ], [ %145, %138 ]
  %153 = sub nsw i64 %147, %148
  %154 = icmp sgt i64 %153, 999999
  %155 = icmp sgt i64 %151, %152
  %156 = and i1 %154, %155
  br i1 %156, label %157, label %175

157:                                              ; preds = %146
  %158 = bitcast %"class.gfx::Rect"* %2 to i64*
  store i64 %7, i64* %158, align 4
  %159 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1
  %160 = bitcast %"class.gfx::Size"* %159 to i64*
  store i64 %11, i64* %160, align 4
  %161 = icmp ne i64 %150, 0
  %162 = icmp sgt i64 %149, -1
  %163 = and i1 %162, %161
  br i1 %163, label %164, label %170, !prof !9

164:                                              ; preds = %157
  %165 = udiv i64 %149, %150
  %166 = icmp sgt i64 %165, 0
  %167 = select i1 %166, i64 %165, i64 0
  %168 = icmp sgt i64 %165, -1
  %169 = select i1 %168, i64 %167, i64 9223372036854775807
  br label %172

170:                                              ; preds = %157
  %171 = select i1 %162, i64 9223372036854775807, i64 -9223372036854775808
  br label %172

172:                                              ; preds = %164, %170
  %173 = phi i64 [ %169, %164 ], [ %171, %170 ]
  %174 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %173, i64* %174, align 8
  br label %175

175:                                              ; preds = %74, %146, %4, %172
  %176 = phi i1 [ true, %172 ], [ false, %146 ], [ false, %4 ], [ false, %74 ]
  ret i1 %176
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5media22AnimatedContentSampler21ComputeSamplingPeriodEN4base9TimeDeltaES2_S2_(i64, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %5, align 8
  %7 = icmp eq i64 %0, 0
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = icmp slt i64 %1, %2
  %10 = bitcast i64* %5 to %"class.base::TimeDelta"*
  %11 = select i1 %9, %"class.base::TimeDelta"* %10, %"class.base::TimeDelta"* %4
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %11, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  br label %77

14:                                               ; preds = %3
  %15 = icmp slt i64 %0, %1
  br i1 %15, label %16, label %73

16:                                               ; preds = %14
  %17 = call i64 @_ZNK4base9TimeDelta6IntDivES0_(%"class.base::TimeDelta"* nonnull %4, i64 %0)
  %18 = load i64, i64* %6, align 8
  %19 = add i64 %18, -9223372036854775807
  %20 = icmp ult i64 %19, 2
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = sitofp i64 %18 to double
  %23 = fdiv double %22, 1.000000e+06
  br label %27

24:                                               ; preds = %16
  %25 = icmp slt i64 %18, 0
  %26 = select i1 %25, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %27

27:                                               ; preds = %21, %24
  %28 = phi double [ %26, %24 ], [ %23, %21 ]
  %29 = fdiv double 1.000000e+00, %28
  %30 = add i64 %0, -9223372036854775807
  %31 = icmp ult i64 %30, 2
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = sitofp i64 %0 to double
  %34 = fdiv double %33, 1.000000e+06
  br label %38

35:                                               ; preds = %27
  %36 = icmp slt i64 %0, 0
  %37 = select i1 %36, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %38

38:                                               ; preds = %32, %35
  %39 = phi double [ %37, %35 ], [ %34, %32 ]
  %40 = fdiv double 1.000000e+00, %39
  %41 = sitofp i64 %17 to double
  %42 = fdiv double %40, %41
  %43 = fsub double %42, %29
  %44 = call double @llvm.fabs.f64(double %43) #12
  %45 = add nsw i64 %17, 1
  %46 = sitofp i64 %45 to double
  %47 = fdiv double %40, %46
  %48 = fsub double %47, %29
  %49 = call double @llvm.fabs.f64(double %48) #12
  %50 = fcmp olt double %44, %49
  br i1 %50, label %51, label %62

51:                                               ; preds = %38
  %52 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %0, i64 %17) #12
  %53 = extractvalue { i64, i1 } %52, 1
  %54 = extractvalue { i64, i1 } %52, 0
  br i1 %53, label %55, label %73

55:                                               ; preds = %51
  %56 = lshr i64 %0, 63
  %57 = trunc i64 %56 to i32
  %58 = lshr i64 %17, 63
  %59 = trunc i64 %58 to i32
  %60 = icmp eq i32 %57, %59
  %61 = select i1 %60, i64 9223372036854775807, i64 -9223372036854775808
  br label %73

62:                                               ; preds = %38
  %63 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %0, i64 %45) #12
  %64 = extractvalue { i64, i1 } %63, 1
  %65 = extractvalue { i64, i1 } %63, 0
  br i1 %64, label %66, label %73

66:                                               ; preds = %62
  %67 = lshr i64 %0, 63
  %68 = trunc i64 %67 to i32
  %69 = lshr i64 %45, 63
  %70 = trunc i64 %69 to i32
  %71 = icmp eq i32 %68, %70
  %72 = select i1 %71, i64 9223372036854775807, i64 -9223372036854775808
  br label %73

73:                                               ; preds = %14, %66, %62, %55, %51
  %74 = phi i64 [ %54, %51 ], [ %61, %55 ], [ %65, %62 ], [ %72, %66 ], [ %0, %14 ]
  %75 = icmp slt i64 %74, %2
  %76 = select i1 %75, i64 %2, i64 %74
  br label %77

77:                                               ; preds = %73, %8
  %78 = phi i64 [ %13, %8 ], [ %76, %73 ]
  ret i64 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5media22AnimatedContentSampler25ComputeNextFrameTimestampEN4base9TimeTicksE(%"class.media::AnimatedContentSampler"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 5, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 8, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %6, -9223372036854775807
  %10 = icmp ult i64 %9, 2
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = icmp slt i64 %6, 0
  %13 = select i1 %12, i64 -9223372036854775808, i64 9223372036854775807
  %14 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %8, i64 %6) #12
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 %13, i64 %16, !prof !2
  br label %27

18:                                               ; preds = %2
  %19 = add i64 %8, -9223372036854775807
  %20 = icmp ugt i64 %19, 1
  %21 = icmp eq i64 %8, %6
  %22 = or i1 %21, %20
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %26 = load i64, i64* %5, align 8
  br label %27

27:                                               ; preds = %11, %18, %23
  %28 = phi i64 [ %6, %11 ], [ %6, %18 ], [ %26, %23 ]
  %29 = phi i64 [ %17, %11 ], [ %6, %18 ], [ %6, %23 ]
  %30 = sub nsw i64 %29, %1
  %31 = call i64 @_ZNK4base9TimeDelta6IntDivES0_(%"class.base::TimeDelta"* nonnull @_ZN5media12_GLOBAL__N_116kDriftCorrectionE, i64 %28)
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33, !prof !2

33:                                               ; preds = %27
  %34 = icmp eq i64 %30, -9223372036854775808
  %35 = icmp eq i64 %31, -1
  %36 = and i1 %34, %35
  br i1 %36, label %39, label %37, !prof !2

37:                                               ; preds = %33
  %38 = sdiv i64 %30, %31
  br label %46

39:                                               ; preds = %33, %27
  %40 = lshr i64 %30, 63
  %41 = trunc i64 %40 to i32
  %42 = lshr i64 %31, 63
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %41, %43
  %45 = select i1 %44, i64 9223372036854775807, i64 -9223372036854775808
  br label %46

46:                                               ; preds = %37, %39
  %47 = phi i64 [ %38, %37 ], [ %45, %39 ]
  %48 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #12
  %49 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %29, i64* %49, align 8
  %50 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %47) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #12
  ret i64 %50
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5media22AnimatedContentSampler11HasProposalEv(%"class.media::AnimatedContentSampler"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5media22AnimatedContentSampler12ShouldSampleEv(%"class.media::AnimatedContentSampler"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media22AnimatedContentSampler12RecordSampleEN4base9TimeTicksE(%"class.media::AnimatedContentSampler"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %8 [
    i32 0, label %5
    i32 3, label %7
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 %1, i64* %6, align 8
  br label %8

7:                                                ; preds = %2
  store i32 2, i32* %3, align 8
  br label %8

8:                                                ; preds = %2, %7, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5media22AnimatedContentSampler23ElectMajorityDamageRectEv(%"class.media::AnimatedContentSampler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, %5
  br i1 %6, label %77, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.media::AnimatedContentSampler", %"class.media::AnimatedContentSampler"* %0, i64 0, i32 1, i32 0, i32 1
  br label %12

10:                                               ; preds = %62
  %11 = icmp sgt i64 %64, 0
  br i1 %11, label %71, label %77

12:                                               ; preds = %7, %62
  %13 = phi i64 [ 0, %7 ], [ %64, %62 ]
  %14 = phi %"class.gfx::Rect"* [ null, %7 ], [ %63, %62 ]
  %15 = phi i64 [ %3, %7 ], [ %68, %62 ]
  %16 = icmp eq i64 %13, 0
  %17 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZNK4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %8, i64 %15) #12
  br i1 %16, label %18, label %23

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %17, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %17, i64 0, i32 0, i32 1
  %21 = tail call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %20) #12
  %22 = sext i32 %21 to i64
  br label %62

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %14, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %29, label %47

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %17, i64 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %14, i64 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %35, label %47

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %17, i64 0, i32 0, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %14, i64 0, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %41, label %47

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %17, i64 0, i32 0, i32 1, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %14, i64 0, i32 1, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %43, %45
  br label %47

47:                                               ; preds = %23, %29, %35, %41
  %48 = phi i1 [ false, %29 ], [ false, %35 ], [ %46, %41 ], [ false, %23 ]
  %49 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZNK4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %8, i64 %15) #12
  %50 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %49, i64 0, i32 0, i32 1
  %51 = tail call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %50) #12
  %52 = sext i32 %51 to i64
  br i1 %48, label %53, label %55

53:                                               ; preds = %47
  %54 = add nsw i64 %13, %52
  br label %62

55:                                               ; preds = %47
  %56 = sub nsw i64 %13, %52
  %57 = icmp slt i64 %56, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %55
  %59 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZNK4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %8, i64 %15) #12
  %60 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %59, i64 0, i32 0
  %61 = sub nsw i64 0, %56
  br label %62

62:                                               ; preds = %18, %55, %58, %53
  %63 = phi %"class.gfx::Rect"* [ %19, %18 ], [ %14, %53 ], [ %60, %58 ], [ %14, %55 ]
  %64 = phi i64 [ %22, %18 ], [ %54, %53 ], [ %61, %58 ], [ %56, %55 ]
  %65 = add i64 %15, 1
  %66 = load i64, i64* %9, align 8
  %67 = icmp eq i64 %65, %66
  %68 = select i1 %67, i64 0, i64 %65
  %69 = load i64, i64* %4, align 8
  %70 = icmp eq i64 %68, %69
  br i1 %70, label %10, label %12

71:                                               ; preds = %10
  %72 = bitcast %"class.gfx::Rect"* %63 to i64*
  %73 = load i64, i64* %72, align 4
  %74 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %63, i64 0, i32 1
  %75 = bitcast %"class.gfx::Size"* %74 to i64*
  %76 = load i64, i64* %75, align 4
  br label %77

77:                                               ; preds = %1, %10, %71
  %78 = phi i64 [ %76, %71 ], [ 0, %10 ], [ 0, %1 ]
  %79 = phi i64 [ %73, %71 ], [ 0, %10 ], [ 0, %1 ]
  %80 = insertvalue { i64, i64 } undef, i64 %79, 0
  %81 = insertvalue { i64, i64 } %80, i64 %78, 1
  ret { i64, i64 } %81
}

declare i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDelta6IntDivES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  br i1 %8, label %20, label %9

9:                                                ; preds = %2
  %10 = icmp eq i64 %1, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  %12 = sdiv i64 %6, %1
  br label %38

13:                                               ; preds = %9
  %14 = icmp eq i64 %6, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %13
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 313, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #12
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  %18 = load i64, i64* %5, align 8
  %19 = add i64 %18, -9223372036854775807
  br label %20

20:                                               ; preds = %2, %13, %15
  %21 = phi i64 [ %7, %2 ], [ %7, %13 ], [ %19, %15 ]
  %22 = phi i64 [ %6, %2 ], [ %6, %13 ], [ %18, %15 ]
  %23 = add i64 %1, -9223372036854775807
  %24 = or i64 %21, %23
  %25 = icmp ult i64 %24, 2
  br i1 %25, label %26, label %30

26:                                               ; preds = %20
  %27 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 314, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0)) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  %29 = load i64, i64* %5, align 8
  br label %30

30:                                               ; preds = %20, %26
  %31 = phi i64 [ %22, %20 ], [ %29, %26 ]
  %32 = lshr i64 %31, 63
  %33 = trunc i64 %32 to i32
  %34 = lshr i64 %1, 63
  %35 = trunc i64 %34 to i32
  %36 = icmp eq i32 %33, %35
  %37 = select i1 %36, i64 9223372036854775807, i64 -9223372036854775808
  br label %38

38:                                               ; preds = %30, %11
  %39 = phi i64 [ %37, %30 ], [ %12, %11 ]
  ret i64 %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #12
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #7

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.media::AnimatedContentSampler::Observation"*, %"struct.media::AnimatedContentSampler::Observation"** %23, align 8
  %25 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %24, i64 %1
  ret %"struct.media::AnimatedContentSampler::Observation"* %25
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZNK4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.media::AnimatedContentSampler::Observation"*, %"struct.media::AnimatedContentSampler::Observation"** %23, align 8
  %25 = getelementptr inbounds %"struct.media::AnimatedContentSampler::Observation", %"struct.media::AnimatedContentSampler::Observation"* %24, i64 %1
  ret %"struct.media::AnimatedContentSampler::Observation"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 24) #12
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #12
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #12
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #12
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #12
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"struct.media::AnimatedContentSampler::Observation"*, %"struct.media::AnimatedContentSampler::Observation"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::AnimatedContentSampler::Observation"* %11, %"struct.media::AnimatedContentSampler::Observation"* %12, %"struct.media::AnimatedContentSampler::Observation"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"struct.media::AnimatedContentSampler::Observation"*, %"struct.media::AnimatedContentSampler::Observation"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::AnimatedContentSampler::Observation"* %19, %"struct.media::AnimatedContentSampler::Observation"* %20, %"struct.media::AnimatedContentSampler::Observation"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(24) %"struct.media::AnimatedContentSampler::Observation"* @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::AnimatedContentSampler::Observation"* %24, %"struct.media::AnimatedContentSampler::Observation"* %25, %"struct.media::AnimatedContentSampler::Observation"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN5media22AnimatedContentSampler11ObservationEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::AnimatedContentSampler::Observation"*, %"struct.media::AnimatedContentSampler::Observation"*, %"struct.media::AnimatedContentSampler::Observation"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"struct.media::AnimatedContentSampler::Observation"* %0 to i64
  %6 = icmp ult %"struct.media::AnimatedContentSampler::Observation"* %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint %"struct.media::AnimatedContentSampler::Observation"* %2 to i64
  %9 = ptrtoint %"struct.media::AnimatedContentSampler::Observation"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #12
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #12
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !2

16:                                               ; preds = %7
  tail call void @llvm.trap() #12
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i64 14) #12
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i64 14) #12
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #12
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i64 8) #12
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint %"struct.media::AnimatedContentSampler::Observation"* %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #12
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %41
  call void @llvm.trap() #12
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast %"struct.media::AnimatedContentSampler::Observation"* %0 to i8*
  %50 = bitcast %"struct.media::AnimatedContentSampler::Observation"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %49, i64 %48, i1 false)
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !10
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #12
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 24) #12
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #12
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #12
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #12
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #12
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #12
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE6rbeginEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE6rbeginEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE4rendEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base14circular_dequeIN5media22AnimatedContentSampler11ObservationEE4rendEv"}
!9 = !{!"branch_weights", i32 2000, i32 2002}
!10 = !{i8 0, i8 2}
