; ModuleID = '../../third_party/blink/renderer/core/layout/layout_table.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::LayoutTable" = type { %"class.blink::LayoutBlock.base", %"class.blink::LayoutNGTableInterface", %"class.WTF::Vector.2101", %"class.WTF::Vector.2106", %"class.WTF::Vector.2110", %"class.WTF::Vector.2115", %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"*, %"class.std::__1::unique_ptr.2145", i16, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1623, %"class.WTF::Vector.1624", %"class.std::__1::unique_ptr.1629", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1650, %"class.blink::Persistent.1651" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2189 }
%class.scoped_refptr.2189 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2190", %"class.WTF::Vector.630", %"class.WTF::Vector.2192", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2190" = type { %"class.base::RefCounted.2191" }
%"class.base::RefCounted.2191" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2192" = type { %"class.WTF::VectorBuffer.2193" }
%"class.WTF::VectorBuffer.2193" = type { %"class.WTF::VectorBufferBase.2194" }
%"class.WTF::VectorBufferBase.2194" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2195 }
%union.anon.2195 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2175" }
%"class.blink::Member.2175" = type { %"class.blink::MemberBase.2176" }
%"class.blink::MemberBase.2176" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2177" }
%"class.blink::Member.2177" = type { %"class.blink::MemberBase.2178" }
%"class.blink::MemberBase.2178" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1977", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1979", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1984 }
%"class.WTF::RefCounted.1977" = type { %"class.base::RefCounted.1978" }
%"class.base::RefCounted.1978" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1979" = type { %"class.absl::optional_internal::optional_data.1980" }
%"class.absl::optional_internal::optional_data.1980" = type { %"class.absl::optional_internal::optional_data_base.1981" }
%"class.absl::optional_internal::optional_data_base.1981" = type { %"class.absl::optional_internal::optional_data_dtor_base.1982" }
%"class.absl::optional_internal::optional_data_dtor_base.1982" = type { i8, %union.anon.1983 }
%union.anon.1983 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1984 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1993", %"class.std::__1::map.2002"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1979" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1985", %"class.std::__1::__compressed_pair.1990" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1985" = type { %"struct.std::__1::__compressed_pair_elem.1986" }
%"struct.std::__1::__compressed_pair_elem.1986" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1990" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1993" = type { %"class.std::__1::__tree.1994" }
%"class.std::__1::__tree.1994" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1995", %"class.std::__1::__compressed_pair.1999" }
%"class.std::__1::__compressed_pair.1995" = type { %"struct.std::__1::__compressed_pair_elem.1986" }
%"class.std::__1::__compressed_pair.1999" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2002" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2203 }
%class.scoped_refptr.2203 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2213" }
%"class.blink::Member.2213" = type { %"class.blink::MemberBase.2214" }
%"class.blink::MemberBase.2214" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2209" }
%"class.blink::MemberBase.2209" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2210" }
%"class.blink::MemberBase.2210" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2211" }
%"class.blink::MemberBase.2211" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2212" }
%"class.blink::MemberBase.2212" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2204", %"class.WTF::Vector.2204" }
%"class.WTF::Vector.2204" = type { %"class.WTF::VectorBuffer.2205" }
%"class.WTF::VectorBuffer.2205" = type { %"class.WTF::VectorBufferBase.2206" }
%"class.WTF::VectorBufferBase.2206" = type { %class.scoped_refptr.2203*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1708", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.1928", %"class.std::__1::unique_ptr.1934", %"class.std::__1::unique_ptr.1940", %class.scoped_refptr.1704, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.1946", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1667", %"class.std::__1::unique_ptr.1677" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::Persistent.1667" = type { %"class.blink::PersistentBase.1668" }
%"class.blink::PersistentBase.1668" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1671", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1680", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1680" = type { %"class.WTF::HashTable.1683", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1683" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1686", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1689, %"class.std::__1::unique_ptr.1690", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1689 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1975", i16, %class.scoped_refptr.1689 }
%"class.WTF::ThreadSafeRefCounted.1975" = type { %"class.base::RefCountedThreadSafe.1976" }
%"class.base::RefCountedThreadSafe.1976" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.WTF::Vector.1693"* }
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695" }
%"class.WTF::VectorBufferBase.1695" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1704, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1708" = type { %"class.blink::MemberBase.1709" }
%"class.blink::MemberBase.1709" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1712", %"class.blink::Member.1717", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1719", i8, i32, %"class.blink::Color", %"class.absl::optional.1722", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1727", %"class.blink::Member.1729", %"class.blink::Member.1729", %"class.std::__1::unique_ptr.1732", i32, [4 x i8], %"class.WTF::HashSet.1735", %"class.blink::Member.1742", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1744", %"class.blink::HeapHashSet.1751", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1759", i8, %"class.blink::Member.1765", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1777", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1791", i8, %"class.std::__1::unique_ptr.1797", %"class.std::__1::unique_ptr.1878", %"class.WTF::Vector.1884", i32, %class.scoped_refptr.1889, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1890", %"class.blink::Member.1892", %"class.blink::Member.1894", %"class.blink::HeapHashSet.1896", %"class.blink::HeapHashSet.1903", %"class.std::__1::unique_ptr.1910", %"class.std::__1::unique_ptr.1917", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1712" = type { %"class.WTF::HashTable.1713" }
%"class.WTF::HashTable.1713" = type <{ %class.scoped_refptr.1716*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1716 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1717" = type { %"class.blink::MemberBase.1718" }
%"class.blink::MemberBase.1718" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1719" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1720", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1720" = type { %"class.blink::MemberBase.1721" }
%"class.blink::MemberBase.1721" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1722" = type { %"class.absl::optional_internal::optional_data.1723" }
%"class.absl::optional_internal::optional_data.1723" = type { %"class.absl::optional_internal::optional_data_base.1724" }
%"class.absl::optional_internal::optional_data_base.1724" = type { %"class.absl::optional_internal::optional_data_dtor_base.1725" }
%"class.absl::optional_internal::optional_data_dtor_base.1725" = type { i8, %union.anon.1726 }
%union.anon.1726 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::HeapHashSet.1731"* }
%"class.blink::HeapHashSet.1731" = type opaque
%"class.std::__1::unique_ptr.1732" = type { %"class.std::__1::__compressed_pair.1733" }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.1734" }
%"struct.std::__1::__compressed_pair_elem.1734" = type { %"class.WTF::HashSet.1735"* }
%"class.WTF::HashSet.1735" = type { %"class.WTF::HashTable.1736" }
%"class.WTF::HashTable.1736" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1744" = type { %"class.WTF::HashSet.1747" }
%"class.WTF::HashSet.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"class.blink::Member.1750"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1750" = type opaque
%"class.blink::HeapHashSet.1751" = type { %"class.WTF::HashSet.1754" }
%"class.WTF::HashSet.1754" = type { %"class.WTF::HashTable.1755" }
%"class.WTF::HashTable.1755" = type <{ %"class.blink::Member.1757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1963", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1973", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1965", %"class.blink::Member.1967", %"class.blink::Member.1969", %"class.blink::Member.1971", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1973" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1974", { i64, i64 } }
%"class.blink::WeakMember.1974" = type { %"class.blink::MemberBase.1758" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1759" = type { %"class.std::__1::__compressed_pair.1760" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.1761" }
%"struct.std::__1::__compressed_pair_elem.1761" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type { i32, [21 x i32] }
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1769", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1769" = type { %"class.WTF::HashTable.1770" }
%"class.WTF::HashTable.1770" = type <{ %"struct.WTF::KeyValuePair.1772"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1772" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1773", i32, i32 }
%"class.WTF::Vector.1773" = type { %"class.WTF::VectorBuffer.1774" }
%"class.WTF::VectorBuffer.1774" = type { %"class.WTF::VectorBufferBase.1775" }
%"class.WTF::VectorBufferBase.1775" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1777" = type { %"class.WTF::LinkedHashSet.1780" }
%"class.WTF::LinkedHashSet.1780" = type { %"class.WTF::HashMap.1781", %"class.WTF::VectorBackedLinkedList.1785" }
%"class.WTF::HashMap.1781" = type { %"class.WTF::HashTable.1782" }
%"class.WTF::HashTable.1782" = type <{ %"struct.WTF::KeyValuePair.1784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1784" = type opaque
%"class.WTF::VectorBackedLinkedList.1785" = type { %"class.WTF::Vector.1786", i32, i32 }
%"class.WTF::Vector.1786" = type { %"class.WTF::VectorBuffer.1787" }
%"class.WTF::VectorBuffer.1787" = type { %"class.WTF::VectorBufferBase.1788" }
%"class.WTF::VectorBufferBase.1788" = type { %"class.WTF::VectorBackedLinkedListNode.1789"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1789" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1791" = type { %"class.std::__1::__compressed_pair.1792" }
%"class.std::__1::__compressed_pair.1792" = type { %"struct.std::__1::__compressed_pair_elem.1793" }
%"struct.std::__1::__compressed_pair_elem.1793" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1800, %class.scoped_refptr.1800, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1855", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1860", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1800 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1801", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1808" }
%"class.WTF::RefCounted.1801" = type { %"class.base::RefCounted.1802" }
%"class.base::RefCounted.1802" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1803", i32, [4 x i8] }>
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1808" = type { %"class.WTF::VectorBuffer.1809" }
%"class.WTF::VectorBuffer.1809" = type { %"class.WTF::VectorBufferBase.1810" }
%"class.WTF::VectorBufferBase.1810" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1811", %"class.std::__1::unique_ptr.1827", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1814", %"class.WTF::Vector.1819", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1814" = type { %"class.WTF::VectorBuffer.1815" }
%"class.WTF::VectorBuffer.1815" = type { %"class.WTF::VectorBufferBase.1816" }
%"class.WTF::VectorBufferBase.1816" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1819" = type { %"class.WTF::VectorBuffer.1820" }
%"class.WTF::VectorBuffer.1820" = type { %"class.WTF::VectorBufferBase.1821" }
%"class.WTF::VectorBufferBase.1821" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1830", %"class.absl::optional.1830" }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, [3 x i8], %union.anon.1834 }
%union.anon.1834 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1808"*, %"class.absl::optional.1840", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1840" = type { %"class.absl::optional_internal::optional_data.1841" }
%"class.absl::optional_internal::optional_data.1841" = type { %"class.absl::optional_internal::optional_data_base.1842" }
%"class.absl::optional_internal::optional_data_base.1842" = type { %"class.absl::optional_internal::optional_data_dtor_base.1843" }
%"class.absl::optional_internal::optional_data_dtor_base.1843" = type { i8, %union.anon.1844 }
%union.anon.1844 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1845", %"class.WTF::Vector.1850" }
%"class.WTF::Vector.1845" = type { %"class.WTF::VectorBuffer.1846" }
%"class.WTF::VectorBuffer.1846" = type { %"class.WTF::VectorBufferBase.1847", [128 x i8] }
%"class.WTF::VectorBufferBase.1847" = type { i32*, i32, i32 }
%"class.WTF::Vector.1850" = type { %"class.WTF::VectorBuffer.1851" }
%"class.WTF::VectorBuffer.1851" = type { %"class.WTF::VectorBufferBase.1852", [128 x i8] }
%"class.WTF::VectorBufferBase.1852" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1855" = type { %"class.WTF::VectorBuffer.1856" }
%"class.WTF::VectorBuffer.1856" = type { %"class.WTF::VectorBufferBase.1857" }
%"class.WTF::VectorBufferBase.1857" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1860" = type { %"class.WTF::HashTable.1861" }
%"class.WTF::HashTable.1861" = type <{ %"struct.WTF::KeyValuePair.1864"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1864" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1865", %"class.WTF::Vector.1870" }
%"class.WTF::HashMap.1865" = type { %"class.WTF::HashTable.1866" }
%"class.WTF::HashTable.1866" = type <{ %"struct.WTF::KeyValuePair.1869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1869" = type opaque
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1878" = type { %"class.std::__1::__compressed_pair.1879" }
%"class.std::__1::__compressed_pair.1879" = type { %"struct.std::__1::__compressed_pair_elem.1880" }
%"struct.std::__1::__compressed_pair_elem.1880" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1889 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1890" = type { %"class.blink::MemberBase.1891" }
%"class.blink::MemberBase.1891" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1896" = type { %"class.WTF::HashSet.1899" }
%"class.WTF::HashSet.1899" = type { %"class.WTF::HashTable.1900" }
%"class.WTF::HashTable.1900" = type <{ %"class.blink::WeakMember.1902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1902" = type opaque
%"class.blink::HeapHashSet.1903" = type { %"class.WTF::HashSet.1906" }
%"class.WTF::HashSet.1906" = type { %"class.WTF::HashTable.1907" }
%"class.WTF::HashTable.1907" = type <{ %"class.blink::WeakMember.1909"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1909" = type opaque
%"class.std::__1::unique_ptr.1910" = type { %"class.std::__1::__compressed_pair.1911" }
%"class.std::__1::__compressed_pair.1911" = type { %"struct.std::__1::__compressed_pair_elem.1912" }
%"struct.std::__1::__compressed_pair_elem.1912" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1913" }
%"class.base::time_internal::TimeBase.1913" = type { i64 }
%"class.std::__1::unique_ptr.1917" = type { %"class.std::__1::__compressed_pair.1918" }
%"class.std::__1::__compressed_pair.1918" = type { %"struct.std::__1::__compressed_pair_elem.1919" }
%"struct.std::__1::__compressed_pair_elem.1919" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1920", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1920" = type { %"class.absl::optional_internal::optional_data.1921" }
%"class.absl::optional_internal::optional_data.1921" = type { %"class.absl::optional_internal::optional_data_base.1922" }
%"class.absl::optional_internal::optional_data_base.1922" = type { %"class.absl::optional_internal::optional_data_dtor_base.1923" }
%"class.absl::optional_internal::optional_data_dtor_base.1923" = type { i8, %union.anon.1924 }
%union.anon.1924 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.1928" = type { %"class.std::__1::__compressed_pair.1929" }
%"class.std::__1::__compressed_pair.1929" = type { %"struct.std::__1::__compressed_pair_elem.1930" }
%"struct.std::__1::__compressed_pair_elem.1930" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.1934" = type { %"class.std::__1::__compressed_pair.1935" }
%"class.std::__1::__compressed_pair.1935" = type { %"struct.std::__1::__compressed_pair_elem.1936" }
%"struct.std::__1::__compressed_pair_elem.1936" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.1940" = type { %"class.std::__1::__compressed_pair.1941" }
%"class.std::__1::__compressed_pair.1941" = type { %"struct.std::__1::__compressed_pair_elem.1942" }
%"struct.std::__1::__compressed_pair_elem.1942" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1704 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.1946" = type { %"class.blink::PersistentBase.1947" }
%"class.blink::PersistentBase.1947" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.1950", i64 }
%"class.blink::HeapVector.1950" = type { %"class.WTF::Vector.1953" }
%"class.WTF::Vector.1953" = type { %"class.WTF::VectorBuffer.1954" }
%"class.WTF::VectorBuffer.1954" = type { %"class.WTF::VectorBufferBase.1955", [368 x i8] }
%"class.WTF::VectorBufferBase.1955" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1757", i8, %"class.blink::Member.1956", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1956" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::HeapLinkedHashSet.1958"* }
%"class.blink::HeapLinkedHashSet.1958" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type <{ %"class.blink::Member.2005", %"class.blink::LayoutBlock"*, %"class.WTF::Vector.2007", %"class.blink::TextAutosizer::FingerprintMapper", %"struct.blink::TextAutosizer::PageInfo", i8, i8, [2 x i8] }>
%"class.blink::Member.2005" = type { %"class.blink::MemberBase.2006" }
%"class.blink::MemberBase.2006" = type { %"class.blink::Document"* }
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.WTF::Vector.2007" = type { %"class.WTF::VectorBuffer.2008" }
%"class.WTF::VectorBuffer.2008" = type { %"class.WTF::VectorBufferBase.2009" }
%"class.WTF::VectorBufferBase.2009" = type { %"class.std::__1::unique_ptr.2010"*, i32, i32 }
%"class.std::__1::unique_ptr.2010" = type opaque
%"class.blink::TextAutosizer::FingerprintMapper" = type { %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2018", %"class.WTF::HashMap.2023", %"class.WTF::HashSet.2028" }
%"class.WTF::HashMap.2013" = type { %"class.WTF::HashTable.2014" }
%"class.WTF::HashTable.2014" = type <{ %"struct.WTF::KeyValuePair.2017"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2017" = type opaque
%"class.WTF::HashMap.2018" = type { %"class.WTF::HashTable.2019" }
%"class.WTF::HashTable.2019" = type <{ %"struct.WTF::KeyValuePair.2022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2022" = type opaque
%"class.WTF::HashMap.2023" = type { %"class.WTF::HashTable.2024" }
%"class.WTF::HashTable.2024" = type <{ %"struct.WTF::KeyValuePair.2027"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2027" = type opaque
%"class.WTF::HashSet.2028" = type { %"class.WTF::HashTable.2029" }
%"class.WTF::HashTable.2029" = type <{ %"struct.blink::TextAutosizer::Supercluster"**, i32, i32, i32, [4 x i8] }>
%"struct.blink::TextAutosizer::Supercluster" = type <{ %"class.WTF::HashSet.2032"*, i32, float, i32, [4 x i8] }>
%"class.WTF::HashSet.2032" = type opaque
%"struct.blink::TextAutosizer::PageInfo" = type <{ %"class.blink::mojom::blink::TextAutosizerPageInfo", float, i8, i8, i8, i8 }>
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2179" }
%"class.WTF::Vector.2179" = type { %"class.WTF::VectorBuffer.2180" }
%"class.WTF::VectorBuffer.2180" = type { %"class.WTF::VectorBufferBase.2181" }
%"class.WTF::VectorBufferBase.2181" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2184", %"class.absl::optional.2184", %"class.absl::optional.2184" }
%"class.absl::optional.2184" = type { %"class.absl::optional_internal::optional_data.2185" }
%"class.absl::optional_internal::optional_data.2185" = type { %"class.absl::optional_internal::optional_data_base.2186" }
%"class.absl::optional_internal::optional_data_base.2186" = type { %"class.absl::optional_internal::optional_data_dtor_base.2187" }
%"class.absl::optional_internal::optional_data_dtor_base.2187" = type { i8, %union.anon.2188 }
%union.anon.2188 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2199" }
%"class.WTF::VectorBuffer.2199" = type { %"class.WTF::VectorBufferBase.2200", [32 x i8] }
%"class.WTF::VectorBufferBase.2200" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.2033", %"class.blink::Persistent.2039", %"class.std::__1::unique_ptr.2063", %"class.blink::CullRect", %"class.std::__1::unique_ptr.2079" }
%"class.std::__1::unique_ptr.2033" = type { %"class.std::__1::__compressed_pair.2034" }
%"class.std::__1::__compressed_pair.2034" = type { %"struct.std::__1::__compressed_pair_elem.2035" }
%"struct.std::__1::__compressed_pair_elem.2035" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.2039" = type { %"class.blink::PersistentBase.2040" }
%"class.blink::PersistentBase.2040" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.2045", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2058" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.2043", %"class.blink::Member.1757", %"class.blink::Member.1757", i8, [7 x i8] }>
%"class.blink::Member.2043" = type { %"class.blink::MemberBase.2044" }
%"class.blink::MemberBase.2044" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1963", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.2045" = type { %"class.std::__1::__compressed_pair.2046" }
%"class.std::__1::__compressed_pair.2046" = type { %"struct.std::__1::__compressed_pair_elem.2047" }
%"struct.std::__1::__compressed_pair_elem.2047" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.2048", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1819" }
%"class.WTF::HashMap.2048" = type { %"class.WTF::HashTable.2049" }
%"class.WTF::HashTable.2049" = type <{ %"struct.WTF::KeyValuePair.2052"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2052" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2056" }
%"class.blink::Member.2056" = type { %"class.blink::MemberBase.2057" }
%"class.blink::MemberBase.2057" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2056" }
%"class.absl::optional.2058" = type { %"class.absl::optional_internal::optional_data.2059" }
%"class.absl::optional_internal::optional_data.2059" = type { %"class.absl::optional_internal::optional_data_base.2060" }
%"class.absl::optional_internal::optional_data_base.2060" = type { %"class.absl::optional_internal::optional_data_dtor_base.2061" }
%"class.absl::optional_internal::optional_data_dtor_base.2061" = type { i8, %union.anon.2062 }
%union.anon.2062 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.2063" = type { %"class.std::__1::__compressed_pair.2064" }
%"class.std::__1::__compressed_pair.2064" = type { %"struct.std::__1::__compressed_pair_elem.2065" }
%"struct.std::__1::__compressed_pair_elem.2065" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.2066", %"class.WTF::Vector.2066", %"class.WTF::HashMap.2071", %"class.WTF::Vector.2066", i8, [7 x i8] }>
%"class.WTF::HashMap.2071" = type { %"class.WTF::HashTable.2072" }
%"class.WTF::HashTable.2072" = type <{ %"struct.WTF::KeyValuePair.2075"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2075" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.2066" }
%"class.WTF::Vector.2066" = type { %"class.WTF::VectorBuffer.2067" }
%"class.WTF::VectorBuffer.2067" = type { %"class.WTF::VectorBufferBase.2068" }
%"class.WTF::VectorBufferBase.2068" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.2079" = type { %"class.std::__1::__compressed_pair.2080" }
%"class.std::__1::__compressed_pair.2080" = type { %"struct.std::__1::__compressed_pair_elem.2081" }
%"struct.std::__1::__compressed_pair_elem.2081" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.2082", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.2088", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.2094", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.2082" = type { %"class.std::__1::__compressed_pair.2083" }
%"class.std::__1::__compressed_pair.2083" = type { %"struct.std::__1::__compressed_pair_elem.2084" }
%"struct.std::__1::__compressed_pair_elem.2084" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.2088" = type { %"class.std::__1::__compressed_pair.2089" }
%"class.std::__1::__compressed_pair.2089" = type { %"struct.std::__1::__compressed_pair_elem.2090" }
%"struct.std::__1::__compressed_pair_elem.2090" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.2094" = type { %"class.blink::PersistentBase.2095" }
%"class.blink::PersistentBase.2095" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1623 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1624" = type { %"class.WTF::VectorBuffer.1625" }
%"class.WTF::VectorBuffer.1625" = type { %"class.WTF::VectorBufferBase.1626", [8 x i8] }
%"class.WTF::VectorBufferBase.1626" = type { %class.scoped_refptr.1623*, i32, i32 }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1632", %"class.absl::optional.1637", %"class.absl::optional.1642" }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, %union.anon.1636 }
%union.anon.1636 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, [3 x i8], %union.anon.1641 }
%union.anon.1641 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1642" = type { %"class.absl::optional_internal::optional_data.1643" }
%"class.absl::optional_internal::optional_data.1643" = type { %"class.absl::optional_internal::optional_data_base.1644" }
%"class.absl::optional_internal::optional_data_base.1644" = type { %"class.absl::optional_internal::optional_data_dtor_base.1645" }
%"class.absl::optional_internal::optional_data_dtor_base.1645" = type { i8, %union.anon.1646 }
%union.anon.1646 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1650 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1651" = type { %"class.blink::PersistentBase.1652" }
%"class.blink::PersistentBase.1652" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1655", %"struct.blink::PhysicalRect", %"class.blink::Member.1665" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.WTF::HashSet.1658"* }
%"class.WTF::HashSet.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.WTF::Vector.2101" = type { %"class.WTF::VectorBuffer.2102" }
%"class.WTF::VectorBuffer.2102" = type { %"class.WTF::VectorBufferBase.2103" }
%"class.WTF::VectorBufferBase.2103" = type { %"struct.blink::LayoutTable::ColumnStruct"*, i32, i32 }
%"struct.blink::LayoutTable::ColumnStruct" = type { i32 }
%"class.WTF::Vector.2106" = type { %"class.WTF::VectorBuffer.2107" }
%"class.WTF::VectorBuffer.2107" = type { %"class.WTF::VectorBufferBase.1847" }
%"class.WTF::Vector.2110" = type { %"class.WTF::VectorBuffer.2111" }
%"class.WTF::VectorBuffer.2111" = type { %"class.WTF::VectorBufferBase.2112" }
%"class.WTF::VectorBufferBase.2112" = type { %"class.blink::LayoutTableCaption"**, i32, i32 }
%"class.blink::LayoutTableCaption" = type { %"class.blink::LayoutBlockFlow" }
%"class.WTF::Vector.2115" = type { %"class.WTF::VectorBuffer.2116" }
%"class.WTF::VectorBuffer.2116" = type { %"class.WTF::VectorBufferBase.2117" }
%"class.WTF::VectorBufferBase.2117" = type { %"class.blink::LayoutTableCol"**, i32, i32 }
%"class.blink::LayoutTableCol" = type { %"class.blink::LayoutTableBoxComponent.base", i32 }
%"class.blink::LayoutTableBoxComponent.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i32, %"class.blink::CullRect" }>
%"class.blink::LayoutTableSection" = type <{ %"class.blink::LayoutTableBoxComponent.base", [4 x i8], %"class.blink::LayoutNGTableSectionInterface", %"class.WTF::Vector.2120", %"class.WTF::Vector.2106", %"class.WTF::Vector.2106", i8, [3 x i8], i32, i32, i8, [3 x i8], %"class.WTF::HashSet.2141", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.WTF::Vector.2120" = type { %"class.WTF::VectorBuffer.2121" }
%"class.WTF::VectorBuffer.2121" = type { %"class.WTF::VectorBufferBase.2122" }
%"class.WTF::VectorBufferBase.2122" = type { %"struct.blink::LayoutTableSection::TableGridRow"*, i32, i32 }
%"struct.blink::LayoutTableSection::TableGridRow" = type <{ %"class.WTF::Vector.2123", %"class.blink::LayoutTableRow"*, %"class.blink::LayoutUnit", %"class.blink::Length", [4 x i8] }>
%"class.WTF::Vector.2123" = type { %"class.WTF::VectorBuffer.2124" }
%"class.WTF::VectorBuffer.2124" = type { %"class.WTF::VectorBufferBase.2125" }
%"class.WTF::VectorBufferBase.2125" = type { %"class.blink::TableGridCell"*, i32, i32 }
%"class.blink::TableGridCell" = type <{ %"class.WTF::Vector.2126", i8, [7 x i8] }>
%"class.WTF::Vector.2126" = type { %"class.WTF::VectorBuffer.2127" }
%"class.WTF::VectorBuffer.2127" = type { %"class.WTF::VectorBufferBase.2128", [8 x i8] }
%"class.WTF::VectorBufferBase.2128" = type { %"class.blink::LayoutTableCell"**, i32, i32 }
%"class.blink::LayoutTableCell" = type { %"class.blink::LayoutBlockFlow", %"class.blink::LayoutNGTableCellInterface", i32, %"class.std::__1::unique_ptr.2129", i32, i32 }
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2129" = type { %"class.std::__1::__compressed_pair.2130" }
%"class.std::__1::__compressed_pair.2130" = type { %"struct.std::__1::__compressed_pair_elem.2131" }
%"struct.std::__1::__compressed_pair_elem.2131" = type { %"class.blink::CollapsedBorderValues"* }
%"class.blink::CollapsedBorderValues" = type { [4 x %"class.blink::CollapsedBorderValue"], %"class.blink::LayoutRect" }
%"class.blink::CollapsedBorderValue" = type { %"class.blink::Color", i32 }
%"class.blink::LayoutTableRow" = type <{ %"class.blink::LayoutTableBoxComponent.base", [4 x i8], %"class.blink::LayoutNGTableRowInterface", i32, [4 x i8] }>
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.WTF::HashSet.2141" = type { %"class.WTF::HashTable.2142" }
%"class.WTF::HashTable.2142" = type <{ %"class.blink::LayoutTableCell"**, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2145" = type { %"class.std::__1::__compressed_pair.2146" }
%"class.std::__1::__compressed_pair.2146" = type { %"struct.std::__1::__compressed_pair_elem.2147" }
%"struct.std::__1::__compressed_pair_elem.2147" = type { %"class.blink::TableLayoutAlgorithm"* }
%"class.blink::TableLayoutAlgorithm" = type { i32 (...)**, %"class.blink::LayoutTable"* }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.blink::StyleDifference" = type { [3 x i8], i8 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::TableLayoutAlgorithmFixed" = type { %"class.blink::TableLayoutAlgorithm", i8, %"class.WTF::Vector.701" }
%"class.blink::TableLayoutAlgorithmAuto" = type { %"class.blink::TableLayoutAlgorithm", %"class.WTF::Vector.2160", %"class.WTF::Vector.2165", i8, %"class.blink::LayoutUnit" }
%"class.WTF::Vector.2160" = type { %"class.WTF::VectorBuffer.2161" }
%"class.WTF::VectorBuffer.2161" = type { %"class.WTF::VectorBufferBase.2162", [160 x i8] }
%"class.WTF::VectorBufferBase.2162" = type { %"struct.blink::TableLayoutAlgorithmAuto::Layout"*, i32, i32 }
%"struct.blink::TableLayoutAlgorithmAuto::Layout" = type <{ %"class.blink::Length", %"class.blink::Length", i32, i32, i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.2165" = type { %"class.WTF::VectorBuffer.2166" }
%"class.WTF::VectorBuffer.2166" = type { %"class.WTF::VectorBufferBase.2128", [32 x i8] }
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.blink::LayoutBox::LogicalExtentComputedValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::LayoutBox::ComputedMarginValues" }
%"struct.blink::LayoutBox::ComputedMarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutAnalyzer::Scope" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutAnalyzer"* }
%"class.blink::TextAutosizer::LayoutScope" = type { %"class.blink::TextAutosizer"*, %"class.blink::LayoutBlock"* }
%"struct.blink::LayoutTable::ColAndColGroup" = type <{ %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"*, i8, i8, [6 x i8] }>
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.2244", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.2245", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.2244" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.2245" = type { %"class.absl::optional_internal::optional_data.2246" }
%"class.absl::optional_internal::optional_data.2246" = type { %"class.absl::optional_internal::optional_data_base.2247" }
%"class.absl::optional_internal::optional_data_base.2247" = type { %"class.absl::optional_internal::optional_data_dtor_base.2248" }
%"class.absl::optional_internal::optional_data_dtor_base.2248" = type { i8, %union.anon.2249 }
%union.anon.2249 = type { %"class.blink::FloatSize" }
%"struct.blink::PaintInfo" = type opaque
%"class.blink::TablePainter" = type { %"class.blink::LayoutTable"* }
%"struct.blink::PaintInvalidatorContext" = type opaque
%"class.blink::TablePaintInvalidator" = type { %"class.blink::LayoutTable"*, %"struct.blink::PaintInvalidatorContext"* }
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGGridInterface" = type opaque
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.WTF::Vector.2173" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.2082", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.WTF::Vector.2174" = type opaque
%"class.blink::NGPhysicalBoxFragment" = type opaque
%class.anon = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2228" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2228" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2215", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2215" = type { %"class.std::__1::__vector_base.2216" }
%"class.std::__1::__vector_base.2216" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2223" }
%"class.std::__1::__compressed_pair.2223" = type { %"struct.std::__1::__compressed_pair_elem.2224" }
%"struct.std::__1::__compressed_pair_elem.2224" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2217", i64, i64 }
%"class.std::__1::unique_ptr.2217" = type { %"class.std::__1::__compressed_pair.2218" }
%"class.std::__1::__compressed_pair.2218" = type { %"struct.std::__1::__compressed_pair_elem.2219" }
%"struct.std::__1::__compressed_pair_elem.2219" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE4FillIS1_EENSt3__19enable_ifIXntsrT_19kIsGarbageCollectedEvE4typeERKij = comdat any

$_ZNK5blink11LayoutTable21ShouldCollapseBordersEv = comdat any

$_ZNK5blink11LayoutTable22RecalcSectionsIfNeededEv = comdat any

$_ZNK5blink11LayoutTable38BordersPaddingAndSpacingInRowDirectionEv = comdat any

$_ZNK5blink9LayoutBox19ClientLogicalBottomEv = comdat any

$_ZNK5blink9LayoutBox20ContentLogicalHeightEv = comdat any

$_ZN5blink12LayoutObject16ClearNeedsLayoutEv = comdat any

$_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE6insertIRjEEvjOT_ = comdat any

$_ZNK5blink11LayoutTable31AbsoluteColumnToEffectiveColumnEj = comdat any

$_ZNK5blink11LayoutTable7GetNameEv = comdat any

$_ZN5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink11LayoutBlock13IsLayoutBlockEv = comdat any

$_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink11LayoutTable24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink12LayoutObject19VirtualContinuationEv = comdat any

$_ZNK5blink9LayoutBox18SpannerPlaceholderEv = comdat any

$_ZNK5blink12LayoutObject13HoverAncestorEv = comdat any

$_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink11LayoutTable8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ = comdat any

$_ZNK5blink9LayoutBox11OffsetWidthEv = comdat any

$_ZNK5blink9LayoutBox12OffsetHeightEv = comdat any

$_ZNK5blink9LayoutBox17BorderBoundingBoxEv = comdat any

$_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv = comdat any

$_ZNK5blink9LayoutBox9MarginTopEv = comdat any

$_ZNK5blink9LayoutBox12MarginBottomEv = comdat any

$_ZNK5blink9LayoutBox10MarginLeftEv = comdat any

$_ZNK5blink9LayoutBox11MarginRightEv = comdat any

$_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE = comdat any

$_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv = comdat any

$_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv = comdat any

$_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv = comdat any

$_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv = comdat any

$_ZNK5blink9LayoutBox20CollapsedMarginAfterEv = comdat any

$_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE = comdat any

$_ZNK5blink9LayoutBox13IntrinsicSizeEv = comdat any

$_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv = comdat any

$_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowXEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowYEv = comdat any

$_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE = comdat any

$_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv = comdat any

$_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ = comdat any

$_ZNK5blink11LayoutTable33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj = comdat any

$_ZNK5blink11LayoutBlock15CurrentFragmentEv = comdat any

$_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ = comdat any

$_ZNK5blink11LayoutTable14HBorderSpacingEv = comdat any

$_ZNK5blink11LayoutTable14VBorderSpacingEv = comdat any

$_ZN5blink11LayoutTable19ForceSectionsRecalcEv = comdat any

$_ZNK5blink11LayoutTable28RowOffsetFromRepeatingHeaderEv = comdat any

$_ZNK5blink11LayoutTable28RowOffsetFromRepeatingFooterEv = comdat any

$_ZNK5blink11LayoutTable14HasColElementsEv = comdat any

$_ZNK5blink11LayoutTable19HasCollapsedBordersEv = comdat any

$_ZNK5blink11LayoutTable14ToLayoutObjectEv = comdat any

$_ZN5blink11LayoutTable21ToMutableLayoutObjectEv = comdat any

$_ZNK5blink11LayoutTable18IsFixedTableLayoutEv = comdat any

$_ZThn240_NK5blink11LayoutTable14ToLayoutObjectEv = comdat any

$_ZThn240_N5blink11LayoutTable21ToMutableLayoutObjectEv = comdat any

$_ZThn240_NK5blink11LayoutTable21ShouldCollapseBordersEv = comdat any

$_ZThn240_NK5blink11LayoutTable19HasCollapsedBordersEv = comdat any

$_ZThn240_NK5blink11LayoutTable18IsFixedTableLayoutEv = comdat any

$_ZThn240_NK5blink11LayoutTable14HBorderSpacingEv = comdat any

$_ZThn240_NK5blink11LayoutTable14VBorderSpacingEv = comdat any

$_ZThn240_NK5blink11LayoutTable14HasColElementsEv = comdat any

$_ZThn240_NK5blink11LayoutTable31AbsoluteColumnToEffectiveColumnEj = comdat any

$_ZThn240_NK5blink11LayoutTable22RecalcSectionsIfNeededEv = comdat any

$_ZThn240_N5blink11LayoutTable19ForceSectionsRecalcEv = comdat any

$_ZThn240_NK5blink11LayoutTable28RowOffsetFromRepeatingFooterEv = comdat any

$_ZThn240_NK5blink11LayoutTable28RowOffsetFromRepeatingHeaderEv = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE = comdat any

$_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink18LayoutTableCaptionEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink14LayoutTableColEEEmm = comdat any

$_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11LayoutTable12ColumnStructEEEmm = comdat any

$_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_ = comdat any

$_ZN3WTF6VectorIPN5blink14LayoutTableColELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIPN5blink14LayoutTableColELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZTVN5blink11LayoutTableE = hidden unnamed_addr constant { [234 x i8*], [7 x i8*], [22 x i8*] } { [234 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZN5blink11LayoutTableD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZN5blink11LayoutTableD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i8*, i32)* @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink11LayoutTable8AddChildEPNS_12LayoutObjectES2_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject11RemoveChildEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutTable"*)* @_ZN5blink11LayoutTable20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZN5blink11LayoutTable20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZN5blink11LayoutTable12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTable"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink11LayoutTable11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.WTF::Vector.2173"*, i32)* @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.WTF::Vector.2174"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink11LayoutBlock15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink11LayoutTable15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i8)* @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTable"*, i32)* @_ZNK5blink11LayoutTable8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink11LayoutBlock15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink11LayoutTable14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i1)* @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZN5blink11LayoutTable33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ to i8*), i8* bitcast (%"class.blink::LayoutBlock"* (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11OffsetWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12OffsetHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LayerTypeRequiredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15UpdateFromStyleEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17BorderBoundingBoxEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable10PaddingTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable13PaddingBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable11PaddingLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable12PaddingRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable9BorderTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable12BorderBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable10BorderLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable11BorderRightEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9MarginTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12MarginBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10MarginLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11MarginRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)* @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*, i32, i1, i32, i32)* @_ZNK5blink11LayoutTable16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)* @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2173"*, i32)* @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2173"*)* @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LocationContainerEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox14HasTopOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox15HasLeftOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11ScrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12ScrollHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, i32)* @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE to i8*), i8* bitcast (%"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15CreateInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10BreakAfterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11BreakBeforeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13StartPageNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11EndPageNameEv to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZN5blink11LayoutTable18UpdateLogicalWidthEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13IntrinsicSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowXEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowYEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutTable"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink11LayoutTable16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutTable28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutTable9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable20FirstLineBoxBaselineEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*, i32)* @_ZNK5blink11LayoutTable19InlineBlockBaselineENS_17LineDirectionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutTable"*, %"class.blink::LayoutObject"*)* @_ZNK5blink11LayoutTable32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i64 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable29ComputeIntrinsicLogicalWidthsEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutTable"*, %"struct.blink::PhysicalRect"*, i32)* @_ZNK5blink11LayoutTable33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink11LayoutBlock15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast (%"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15CurrentFragmentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1)* @_ZN5blink11LayoutBlock17UpdateBlockLayoutEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i1, i32)* @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i32)* @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutTable11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZN5blink11LayoutTable26SimplifiedNormalFlowLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*, i1)* @_ZN5blink11LayoutTable21ComputeVisualOverflowEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, i1)* @_ZN5blink11LayoutBlock21ComputeLayoutOverflowENS_10LayoutUnitEb to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZN5blink11LayoutTable29AddLayoutOverflowFromChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock32UpdateLogicalWidthAndColumnWidthEv to i8*), i8* bitcast (i16 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable14HBorderSpacingEv to i8*), i8* bitcast (i16 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable14VBorderSpacingEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable21ShouldCollapseBordersEv to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZN5blink11LayoutTable19ForceSectionsRecalcEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable28RowOffsetFromRepeatingHeaderEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable28RowOffsetFromRepeatingFooterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*, i32)* @_ZNK5blink11LayoutTable31AbsoluteColumnToEffectiveColumnEj to i8*), i8* bitcast (i1 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable14HasColElementsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable19HasCollapsedBordersEv to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable22RecalcSectionsIfNeededEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable14ToLayoutObjectEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutTable"*)* @_ZN5blink11LayoutTable21ToMutableLayoutObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable18IsFixedTableLayoutEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable18FirstBodyInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable19TopSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable27TopNonEmptySectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable22BottomSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTable"*)* @_ZNK5blink11LayoutTable30BottomNonEmptySectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTable"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)* @_ZNK5blink11LayoutTable21SectionBelowInterfaceEPKNS_29LayoutNGTableSectionInterfaceENS_22SkipEmptySectionsValueE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTable"*, %"class.blink::LayoutNGTableCellInterface"*)* @_ZNK5blink11LayoutTable11IsFirstCellERKNS_26LayoutNGTableCellInterfaceE to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZThn8_N5blink11LayoutTableD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZThn8_N5blink11LayoutTableD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*)], [22 x i8*] [i8* inttoptr (i64 -240 to i8*), i8* null, i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable14ToLayoutObjectEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutTable"*)* @_ZThn240_N5blink11LayoutTable21ToMutableLayoutObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable21ShouldCollapseBordersEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable19HasCollapsedBordersEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable18IsFixedTableLayoutEv to i8*), i8* bitcast (i16 (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable14HBorderSpacingEv to i8*), i8* bitcast (i16 (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable14VBorderSpacingEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable14HasColElementsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*, i32)* @_ZThn240_NK5blink11LayoutTable31AbsoluteColumnToEffectiveColumnEj to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable22RecalcSectionsIfNeededEv to i8*), i8* bitcast (void (%"class.blink::LayoutTable"*)* @_ZThn240_N5blink11LayoutTable19ForceSectionsRecalcEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable28RowOffsetFromRepeatingFooterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable28RowOffsetFromRepeatingHeaderEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable18FirstBodyInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable19TopSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable27TopNonEmptySectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable22BottomSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTable"*)* @_ZThn240_NK5blink11LayoutTable30BottomNonEmptySectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTable"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)* @_ZThn240_NK5blink11LayoutTable21SectionBelowInterfaceEPKNS_29LayoutNGTableSectionInterfaceENS_22SkipEmptySectionsValueE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTable"*, %"class.blink::LayoutNGTableCellInterface"*)* @_ZThn240_NK5blink11LayoutTable11IsFirstCellERKNS_26LayoutNGTableCellInterfaceE to i8*)] }, align 8
@_ZN5blink26layout_invalidation_reason13kTableChangedE = external constant [0 x i8], align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase38is_visibility_collapse_column_enabled_E = external local_unnamed_addr global i8, align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"LayoutTable\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink18LayoutTableCaptionEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutTableCaption *]\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14LayoutTableColEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutTableCol *]\00", align 1
@_ZN5blink10html_names9kTableTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.10 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11LayoutTable12ColumnStructEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutTable::ColumnStruct]\00", align 1
@switch.table._ZN5blink11LayoutTable14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE.11 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1], align 4

@_ZN5blink11LayoutTableC1EPNS_7ElementE = hidden unnamed_addr alias void (%"class.blink::LayoutTable"*, %"class.blink::Element"*), void (%"class.blink::LayoutTable"*, %"class.blink::Element"*)* @_ZN5blink11LayoutTableC2EPNS_7ElementE
@_ZN5blink11LayoutTableD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutTable"*), void (%"class.blink::LayoutTable"*)* @_ZN5blink11LayoutTableD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTableC2EPNS_7ElementE(%"class.blink::LayoutTable"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast %"class.blink::LayoutTable"* %0 to %"class.blink::LayoutBlock"*
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  tail call void @_ZN5blink11LayoutBlockC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlock"* %4, %"class.blink::ContainerNode"* %5) #14
  %6 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 1, i32 0
  %7 = bitcast %"class.blink::LayoutTable"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [234 x i8*], [7 x i8*], [22 x i8*] }, { [234 x i8*], [7 x i8*], [22 x i8*] }* @_ZTVN5blink11LayoutTableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [234 x i8*], [7 x i8*], [22 x i8*] }, { [234 x i8*], [7 x i8*], [22 x i8*] }* @_ZTVN5blink11LayoutTableE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [234 x i8*], [7 x i8*], [22 x i8*] }, { [234 x i8*], [7 x i8*], [22 x i8*] }* @_ZTVN5blink11LayoutTableE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %11 = bitcast %"class.WTF::Vector.2101"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 96, i1 false)
  %12 = load i16, i16* %10, align 8
  %13 = and i16 %12, -2048
  store i16 %13, i16* %10, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 11
  %15 = bitcast i32* %3 to i8*
  %16 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 44, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #14
  store i32 0, i32* %3, align 4
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE4FillIS1_EENSt3__19enable_ifIXntsrT_19kIsGarbageCollectedEvE4typeERKij(%"class.WTF::Vector.2106"* %9, i32* nonnull dereferenceable(4) %3, i32 1)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #14
  ret void
}

declare void @_ZN5blink11LayoutBlockC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlock"*, %"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE4FillIS1_EENSt3__19enable_ifIXntsrT_19kIsGarbageCollectedEvE4typeERKij(%"class.WTF::Vector.2106"*, i32* dereferenceable(4), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i32* %1 to i8*
  %5 = bitcast i32* %1 to i8*
  %6 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ugt i32 %7, %2
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  store i32 %2, i32* %6, align 4
  br label %59

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %12, %2
  br i1 %13, label %14, label %57

14:                                               ; preds = %10
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %14
  %17 = icmp eq i32 %7, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %16
  store i32 0, i32* %6, align 4
  br label %19

19:                                               ; preds = %18, %16
  %20 = bitcast %"class.WTF::Vector.2106"* %0 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"class.WTF::Vector.2106"* %0 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  store i32 0, i32* %11, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #14
  %23 = load i32, i32* %11, align 8
  br label %24

24:                                               ; preds = %14, %19
  %25 = phi i32 [ 0, %14 ], [ %23, %19 ]
  %26 = icmp ult i32 %25, %2
  br i1 %26, label %27, label %57, !prof !2

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = icmp eq i32* %29, null
  %31 = zext i32 %2 to i64
  %32 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %31) #14
  %33 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %32, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #14
  br i1 %30, label %34, label %39

34:                                               ; preds = %27
  %35 = ptrtoint i8* %33 to i64
  %36 = bitcast %"class.WTF::Vector.2106"* %0 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = lshr i64 %32, 2
  %38 = trunc i64 %37 to i32
  store i32 %38, i32* %11, align 8
  br label %57

39:                                               ; preds = %27
  %40 = lshr i64 %32, 2
  %41 = ptrtoint i8* %33 to i64
  %42 = load i32*, i32** %28, align 8
  %43 = icmp ne i8* %33, null
  %44 = icmp ne i32* %42, null
  %45 = and i1 %43, %44
  %46 = bitcast i32* %42 to i8*
  br i1 %45, label %47, label %53, !prof !2

47:                                               ; preds = %39
  %48 = load i32, i32* %6, align 4
  %49 = zext i32 %48 to i64
  %50 = shl nuw nsw i64 %49, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* nonnull align 4 %46, i64 %50, i1 false) #14
  %51 = bitcast %"class.WTF::Vector.2106"* %0 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %47, %39
  %54 = phi i8* [ %52, %47 ], [ %46, %39 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %54) #14
  %55 = bitcast %"class.WTF::Vector.2106"* %0 to i64*
  store atomic i64 %41, i64* %55 monotonic, align 8
  %56 = trunc i64 %40 to i32
  store i32 %56, i32* %11, align 8
  br label %57

57:                                               ; preds = %10, %24, %34, %53
  %58 = load i32, i32* %6, align 4
  br label %59

59:                                               ; preds = %57, %9
  %60 = phi i32 [ %58, %57 ], [ %2, %9 ]
  %61 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = icmp eq i32 %60, 0
  br i1 %62, label %137, label %63

63:                                               ; preds = %59
  %64 = zext i32 %60 to i64
  %65 = load i32*, i32** %61, align 8
  %66 = icmp ult i32 %60, 8
  br i1 %66, label %125, label %67

67:                                               ; preds = %63
  %68 = bitcast i32* %65 to i8*
  %69 = getelementptr i32, i32* %65, i64 %64
  %70 = getelementptr i8, i8* %5, i64 1
  %71 = icmp ugt i8* %70, %68
  %72 = icmp ugt i32* %69, %1
  %73 = and i1 %71, %72
  br i1 %73, label %125, label %74

74:                                               ; preds = %67
  %75 = and i64 %64, 4294967288
  %76 = getelementptr i32, i32* %65, i64 %75
  %77 = sub nsw i64 %64, %75
  %78 = add nsw i64 %75, -8
  %79 = lshr exact i64 %78, 3
  %80 = add nuw nsw i64 %79, 1
  %81 = and i64 %80, 1
  %82 = icmp eq i64 %78, 0
  br i1 %82, label %110, label %83

83:                                               ; preds = %74
  %84 = sub nuw nsw i64 %80, %81
  %85 = load i32, i32* %1, align 4, !alias.scope !3
  %86 = insertelement <4 x i32> undef, i32 %85, i32 0
  %87 = shufflevector <4 x i32> %86, <4 x i32> undef, <4 x i32> zeroinitializer
  %88 = insertelement <4 x i32> undef, i32 %85, i32 0
  %89 = shufflevector <4 x i32> %88, <4 x i32> undef, <4 x i32> zeroinitializer
  %90 = load i32, i32* %1, align 4, !alias.scope !3
  %91 = insertelement <4 x i32> undef, i32 %90, i32 0
  %92 = shufflevector <4 x i32> %91, <4 x i32> undef, <4 x i32> zeroinitializer
  %93 = insertelement <4 x i32> undef, i32 %90, i32 0
  %94 = shufflevector <4 x i32> %93, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %95

95:                                               ; preds = %95, %83
  %96 = phi i64 [ 0, %83 ], [ %107, %95 ]
  %97 = phi i64 [ %84, %83 ], [ %108, %95 ]
  %98 = getelementptr i32, i32* %65, i64 %96
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %87, <4 x i32>* %99, align 4, !alias.scope !6, !noalias !3
  %100 = getelementptr i32, i32* %98, i64 4
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %101, align 4, !alias.scope !6, !noalias !3
  %102 = or i64 %96, 8
  %103 = getelementptr i32, i32* %65, i64 %102
  %104 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> %92, <4 x i32>* %104, align 4, !alias.scope !6, !noalias !3
  %105 = getelementptr i32, i32* %103, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %94, <4 x i32>* %106, align 4, !alias.scope !6, !noalias !3
  %107 = add i64 %96, 16
  %108 = add i64 %97, -2
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %95, !llvm.loop !8

110:                                              ; preds = %95, %74
  %111 = phi i64 [ 0, %74 ], [ %107, %95 ]
  %112 = icmp eq i64 %81, 0
  br i1 %112, label %123, label %113

113:                                              ; preds = %110
  %114 = getelementptr i32, i32* %65, i64 %111
  %115 = load i32, i32* %1, align 4, !alias.scope !3
  %116 = insertelement <4 x i32> undef, i32 %115, i32 0
  %117 = shufflevector <4 x i32> %116, <4 x i32> undef, <4 x i32> zeroinitializer
  %118 = insertelement <4 x i32> undef, i32 %115, i32 0
  %119 = shufflevector <4 x i32> %118, <4 x i32> undef, <4 x i32> zeroinitializer
  %120 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %117, <4 x i32>* %120, align 4, !alias.scope !6, !noalias !3
  %121 = getelementptr i32, i32* %114, i64 4
  %122 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %122, align 4, !alias.scope !6, !noalias !3
  br label %123

123:                                              ; preds = %110, %113
  %124 = icmp eq i64 %75, %64
  br i1 %124, label %135, label %125

125:                                              ; preds = %123, %67, %63
  %126 = phi i32* [ %65, %67 ], [ %65, %63 ], [ %76, %123 ]
  %127 = phi i64 [ %64, %67 ], [ %64, %63 ], [ %77, %123 ]
  br label %128

128:                                              ; preds = %125, %128
  %129 = phi i32* [ %132, %128 ], [ %126, %125 ]
  %130 = phi i64 [ %133, %128 ], [ %127, %125 ]
  %131 = load i32, i32* %1, align 4
  store i32 %131, i32* %129, align 4
  %132 = getelementptr inbounds i32, i32* %129, i64 1
  %133 = add nsw i64 %130, -1
  %134 = icmp sgt i64 %133, 0
  br i1 %134, label %128, label %135, !llvm.loop !10

135:                                              ; preds = %128, %123
  %136 = load i32, i32* %6, align 4
  br label %137

137:                                              ; preds = %135, %59
  %138 = phi i32 [ %136, %135 ], [ 0, %59 ]
  %139 = load i32*, i32** %61, align 8
  %140 = zext i32 %2 to i64
  %141 = getelementptr inbounds i32, i32* %139, i64 %140
  %142 = icmp eq i32 %138, %2
  br i1 %142, label %257, label %143

143:                                              ; preds = %137
  %144 = zext i32 %138 to i64
  %145 = getelementptr inbounds i32, i32* %139, i64 %144
  %146 = shl nuw nsw i64 %140, 2
  %147 = add nsw i64 %146, -4
  %148 = shl nuw nsw i64 %144, 2
  %149 = sub nsw i64 %147, %148
  %150 = lshr exact i64 %149, 2
  %151 = add nuw nsw i64 %150, 1
  %152 = icmp ult i64 %151, 8
  br i1 %152, label %217, label %153

153:                                              ; preds = %143
  %154 = bitcast i32* %145 to i8*
  %155 = shl nuw nsw i64 %140, 2
  %156 = add nsw i64 %155, -4
  %157 = shl nuw nsw i64 %144, 2
  %158 = sub nsw i64 %156, %157
  %159 = lshr exact i64 %158, 2
  %160 = add nuw nsw i64 %159, %144
  %161 = add nuw i64 %160, 1
  %162 = getelementptr i32, i32* %139, i64 %161
  %163 = getelementptr i8, i8* %4, i64 1
  %164 = icmp ugt i8* %163, %154
  %165 = icmp ugt i32* %162, %1
  %166 = and i1 %164, %165
  br i1 %166, label %217, label %167

167:                                              ; preds = %153
  %168 = and i64 %151, 9223372036854775800
  %169 = getelementptr i32, i32* %145, i64 %168
  %170 = add nsw i64 %168, -8
  %171 = lshr exact i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 1
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %202, label %175

175:                                              ; preds = %167
  %176 = sub nuw nsw i64 %172, %173
  %177 = load i32, i32* %1, align 4, !alias.scope !11
  %178 = insertelement <4 x i32> undef, i32 %177, i32 0
  %179 = shufflevector <4 x i32> %178, <4 x i32> undef, <4 x i32> zeroinitializer
  %180 = insertelement <4 x i32> undef, i32 %177, i32 0
  %181 = shufflevector <4 x i32> %180, <4 x i32> undef, <4 x i32> zeroinitializer
  %182 = load i32, i32* %1, align 4, !alias.scope !11
  %183 = insertelement <4 x i32> undef, i32 %182, i32 0
  %184 = shufflevector <4 x i32> %183, <4 x i32> undef, <4 x i32> zeroinitializer
  %185 = insertelement <4 x i32> undef, i32 %182, i32 0
  %186 = shufflevector <4 x i32> %185, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %187

187:                                              ; preds = %187, %175
  %188 = phi i64 [ 0, %175 ], [ %199, %187 ]
  %189 = phi i64 [ %176, %175 ], [ %200, %187 ]
  %190 = getelementptr i32, i32* %145, i64 %188
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %179, <4 x i32>* %191, align 4, !alias.scope !14, !noalias !11
  %192 = getelementptr i32, i32* %190, i64 4
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %181, <4 x i32>* %193, align 4, !alias.scope !14, !noalias !11
  %194 = or i64 %188, 8
  %195 = getelementptr i32, i32* %145, i64 %194
  %196 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> %184, <4 x i32>* %196, align 4, !alias.scope !14, !noalias !11
  %197 = getelementptr i32, i32* %195, i64 4
  %198 = bitcast i32* %197 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %198, align 4, !alias.scope !14, !noalias !11
  %199 = add i64 %188, 16
  %200 = add i64 %189, -2
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %202, label %187, !llvm.loop !16

202:                                              ; preds = %187, %167
  %203 = phi i64 [ 0, %167 ], [ %199, %187 ]
  %204 = icmp eq i64 %173, 0
  br i1 %204, label %215, label %205

205:                                              ; preds = %202
  %206 = getelementptr i32, i32* %145, i64 %203
  %207 = load i32, i32* %1, align 4, !alias.scope !11
  %208 = insertelement <4 x i32> undef, i32 %207, i32 0
  %209 = shufflevector <4 x i32> %208, <4 x i32> undef, <4 x i32> zeroinitializer
  %210 = insertelement <4 x i32> undef, i32 %207, i32 0
  %211 = shufflevector <4 x i32> %210, <4 x i32> undef, <4 x i32> zeroinitializer
  %212 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> %209, <4 x i32>* %212, align 4, !alias.scope !14, !noalias !11
  %213 = getelementptr i32, i32* %206, i64 4
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> %211, <4 x i32>* %214, align 4, !alias.scope !14, !noalias !11
  br label %215

215:                                              ; preds = %202, %205
  %216 = icmp eq i64 %151, %168
  br i1 %216, label %257, label %217

217:                                              ; preds = %215, %153, %143
  %218 = phi i32* [ %145, %153 ], [ %145, %143 ], [ %169, %215 ]
  %219 = ptrtoint i32* %218 to i64
  %220 = add nsw i64 %140, -1
  %221 = getelementptr i32, i32* %139, i64 %220
  %222 = ptrtoint i32* %221 to i64
  %223 = sub i64 %222, %219
  %224 = lshr i64 %223, 2
  %225 = add nuw nsw i64 %224, 1
  %226 = and i64 %225, 7
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %235, label %228

228:                                              ; preds = %217, %228
  %229 = phi i32* [ %232, %228 ], [ %218, %217 ]
  %230 = phi i64 [ %233, %228 ], [ %226, %217 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %229, align 4
  %232 = getelementptr inbounds i32, i32* %229, i64 1
  %233 = add i64 %230, -1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %228, !llvm.loop !17

235:                                              ; preds = %228, %217
  %236 = phi i32* [ %218, %217 ], [ %232, %228 ]
  %237 = icmp ult i64 %223, 28
  br i1 %237, label %257, label %238

238:                                              ; preds = %235, %238
  %239 = phi i32* [ %255, %238 ], [ %236, %235 ]
  %240 = load i32, i32* %1, align 4
  store i32 %240, i32* %239, align 4
  %241 = getelementptr inbounds i32, i32* %239, i64 1
  %242 = load i32, i32* %1, align 4
  store i32 %242, i32* %241, align 4
  %243 = getelementptr inbounds i32, i32* %239, i64 2
  %244 = load i32, i32* %1, align 4
  store i32 %244, i32* %243, align 4
  %245 = getelementptr inbounds i32, i32* %239, i64 3
  %246 = load i32, i32* %1, align 4
  store i32 %246, i32* %245, align 4
  %247 = getelementptr inbounds i32, i32* %239, i64 4
  %248 = load i32, i32* %1, align 4
  store i32 %248, i32* %247, align 4
  %249 = getelementptr inbounds i32, i32* %239, i64 5
  %250 = load i32, i32* %1, align 4
  store i32 %250, i32* %249, align 4
  %251 = getelementptr inbounds i32, i32* %239, i64 6
  %252 = load i32, i32* %1, align 4
  store i32 %252, i32* %251, align 4
  %253 = getelementptr inbounds i32, i32* %239, i64 7
  %254 = load i32, i32* %1, align 4
  store i32 %254, i32* %253, align 4
  %255 = getelementptr inbounds i32, i32* %239, i64 8
  %256 = icmp eq i32* %255, %141
  br i1 %256, label %257, label %238, !llvm.loop !19

257:                                              ; preds = %235, %238, %215, %137
  store i32 %2, i32* %6, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTableD2Ev(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutTable"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [234 x i8*], [7 x i8*], [22 x i8*] }, { [234 x i8*], [7 x i8*], [22 x i8*] }* @_ZTVN5blink11LayoutTableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [234 x i8*], [7 x i8*], [22 x i8*] }, { [234 x i8*], [7 x i8*], [22 x i8*] }* @_ZTVN5blink11LayoutTableE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [234 x i8*], [7 x i8*], [22 x i8*] }, { [234 x i8*], [7 x i8*], [22 x i8*] }* @_ZTVN5blink11LayoutTableE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %5 = load %"class.blink::TableLayoutAlgorithm"*, %"class.blink::TableLayoutAlgorithm"** %4, align 8
  store %"class.blink::TableLayoutAlgorithm"* null, %"class.blink::TableLayoutAlgorithm"** %4, align 8
  %6 = icmp eq %"class.blink::TableLayoutAlgorithm"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::TableLayoutAlgorithm"* %5 to void (%"class.blink::TableLayoutAlgorithm"*)***
  %9 = load void (%"class.blink::TableLayoutAlgorithm"*)**, void (%"class.blink::TableLayoutAlgorithm"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::TableLayoutAlgorithm"*)*, void (%"class.blink::TableLayoutAlgorithm"*)** %9, i64 1
  %11 = load void (%"class.blink::TableLayoutAlgorithm"*)*, void (%"class.blink::TableLayoutAlgorithm"*)** %10, align 8
  tail call void %11(%"class.blink::TableLayoutAlgorithm"* nonnull %5) #14
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load %"class.blink::LayoutTableCol"**, %"class.blink::LayoutTableCol"*** %13, align 8
  %15 = icmp eq %"class.blink::LayoutTableCol"** %14, null
  %16 = bitcast %"class.blink::LayoutTableCol"** %14 to i8*
  br i1 %15, label %23, label %17, !prof !2

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !20

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #14
  store %"class.blink::LayoutTableCol"** null, %"class.blink::LayoutTableCol"*** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.blink::LayoutTableCaption"**, %"class.blink::LayoutTableCaption"*** %24, align 8
  %26 = icmp eq %"class.blink::LayoutTableCaption"** %25, null
  %27 = bitcast %"class.blink::LayoutTableCaption"** %25 to i8*
  br i1 %26, label %34, label %28, !prof !2

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !20

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #14
  store %"class.blink::LayoutTableCaption"** null, %"class.blink::LayoutTableCaption"*** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp eq i32* %36, null
  %38 = bitcast i32* %36 to i8*
  br i1 %37, label %45, label %39, !prof !2

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !20

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #14
  store i32* null, i32** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %47 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %46, align 8
  %48 = icmp eq %"struct.blink::LayoutTable::ColumnStruct"* %47, null
  %49 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %47 to i8*
  br i1 %48, label %56, label %50, !prof !2

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54, !prof !20

54:                                               ; preds = %50
  store i32 0, i32* %51, align 4
  br label %55

55:                                               ; preds = %54, %50
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #14
  store %"struct.blink::LayoutTable::ColumnStruct"* null, %"struct.blink::LayoutTable::ColumnStruct"** %46, align 8
  br label %56

56:                                               ; preds = %45, %55
  %57 = bitcast %"class.blink::LayoutTable"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlockD2Ev(%"class.blink::LayoutBlock"* %57) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink11LayoutBlockD2Ev(%"class.blink::LayoutBlock"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink11LayoutTableD1Ev(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 21
  %3 = bitcast %"class.blink::LayoutUnit"* %2 to %"class.blink::LayoutTable"*
  tail call void @_ZN5blink11LayoutTableD2Ev(%"class.blink::LayoutTable"* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTableD0Ev(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink11LayoutTableD2Ev(%"class.blink::LayoutTable"* %0) #14
  %2 = bitcast %"class.blink::LayoutTable"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink11LayoutTableD0Ev(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 21
  %3 = bitcast %"class.blink::LayoutUnit"* %2 to %"class.blink::LayoutTable"*
  tail call void @_ZN5blink11LayoutTableD2Ev(%"class.blink::LayoutTable"* %3) #14
  %4 = bitcast %"class.blink::LayoutUnit"* %2 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutTable"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to %"class.blink::StyleDifference"*
  store i32 %1, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::LayoutTable"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlock"* %7, i32 %1, %"class.blink::ComputedStyle"* %2) #14
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = bitcast %"class.blink::ComputedStyle"** %8 to %"class.blink::ComputedStyleBase"**
  %10 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %10, i64 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 81129638414606681695789005144064
  %15 = icmp eq i160 %14, 0
  %16 = bitcast %"class.blink::ComputedStyleBase"* %10 to %"class.blink::ComputedStyle"*
  br i1 %15, label %17, label %22

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i96 %20, -147573952589676412929
  store i96 %21, i96* %19, align 4
  br label %22

22:                                               ; preds = %17, %3
  %23 = icmp ne %"class.blink::ComputedStyle"* %2, null
  br i1 %23, label %24, label %46

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = and i160 %27, 45671926166590716193865151022383844364247891968
  %29 = icmp eq i160 %28, 0
  br i1 %29, label %46, label %30

30:                                               ; preds = %24
  %31 = and i160 %27, 15211807202738752817960438464512
  %32 = icmp eq i160 %31, 0
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %34, i64 0, i32 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %34, i64 0, i32 3
  %37 = select i1 %32, %"class.blink::Length"* %35, %"class.blink::Length"* %36
  %38 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %37, i64 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = add i8 %39, -1
  %41 = icmp ult i8 %40, 8
  br i1 %41, label %42, label %46

42:                                               ; preds = %30
  %43 = sext i8 %40 to i64
  %44 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN5blink11LayoutTable14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE.11, i64 0, i64 %43
  %45 = load i32, i32* %44, align 4
  br label %46

46:                                               ; preds = %30, %42, %24, %22
  %47 = phi i32 [ 0, %22 ], [ 0, %24 ], [ %45, %42 ], [ 0, %30 ]
  %48 = load i160, i160* %12, align 8
  %49 = and i160 %48, 81129638414606681695789005144064
  %50 = icmp eq i160 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %10, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %53, i64 0, i32 6
  %55 = load i16, i16* %54, align 4
  br label %56

56:                                               ; preds = %46, %51
  %57 = phi i16 [ %55, %51 ], [ 0, %46 ]
  %58 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 12
  store i16 %57, i16* %58, align 8
  %59 = load i160, i160* %12, align 8
  %60 = and i160 %59, 81129638414606681695789005144064
  %61 = icmp eq i160 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %10, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %64, i64 0, i32 7
  %66 = load i16, i16* %65, align 2
  br label %67

67:                                               ; preds = %56, %62
  %68 = phi i16 [ %66, %62 ], [ 0, %56 ]
  %69 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 13
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %71 = load %"class.blink::TableLayoutAlgorithm"*, %"class.blink::TableLayoutAlgorithm"** %70, align 8
  %72 = icmp eq %"class.blink::TableLayoutAlgorithm"* %71, null
  br i1 %72, label %104, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %10, i64 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 45671926166590716193865151022383844364247891968
  %78 = icmp eq i160 %77, 0
  br i1 %78, label %95, label %79

79:                                               ; preds = %73
  %80 = and i160 %76, 15211807202738752817960438464512
  %81 = icmp eq i160 %80, 0
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %10, i64 0, i32 5, i32 0, i32 0
  %83 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %83, i64 0, i32 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %83, i64 0, i32 3
  %86 = select i1 %81, %"class.blink::Length"* %84, %"class.blink::Length"* %85
  %87 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %86, i64 0, i32 2
  %88 = load i8, i8* %87, align 1
  %89 = add i8 %88, -1
  %90 = icmp ult i8 %89, 8
  br i1 %90, label %91, label %95

91:                                               ; preds = %79
  %92 = sext i8 %89 to i64
  %93 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN5blink11LayoutTable14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE.11, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  br label %95

95:                                               ; preds = %79, %91, %73
  %96 = phi i32 [ 0, %73 ], [ %94, %91 ], [ 0, %79 ]
  %97 = icmp eq i32 %47, %96
  br i1 %97, label %143, label %98

98:                                               ; preds = %95
  %99 = bitcast %"class.blink::TableLayoutAlgorithm"* %71 to void (%"class.blink::TableLayoutAlgorithm"*)***
  %100 = load void (%"class.blink::TableLayoutAlgorithm"*)**, void (%"class.blink::TableLayoutAlgorithm"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::TableLayoutAlgorithm"*)*, void (%"class.blink::TableLayoutAlgorithm"*)** %100, i64 6
  %102 = load void (%"class.blink::TableLayoutAlgorithm"*)*, void (%"class.blink::TableLayoutAlgorithm"*)** %101, align 8
  tail call void %102(%"class.blink::TableLayoutAlgorithm"* nonnull %71) #14
  %103 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  br label %104

104:                                              ; preds = %67, %98
  %105 = phi %"class.blink::ComputedStyle"* [ %16, %67 ], [ %103, %98 ]
  %106 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %105, i64 0, i32 0, i32 9
  %107 = bitcast [20 x i8]* %106 to i160*
  %108 = load i160, i160* %107, align 8
  %109 = and i160 %108, 45671926166590716193865151022383844364247891968
  %110 = icmp eq i160 %109, 0
  br i1 %110, label %132, label %111

111:                                              ; preds = %104
  %112 = and i160 %108, 15211807202738752817960438464512
  %113 = icmp eq i160 %112, 0
  %114 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %105, i64 0, i32 0, i32 5, i32 0, i32 0
  %115 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %115, i64 0, i32 8
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %115, i64 0, i32 3
  %118 = select i1 %113, %"class.blink::Length"* %116, %"class.blink::Length"* %117
  %119 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %118, i64 0, i32 2
  %120 = load i8, i8* %119, align 1
  switch i8 %120, label %132 [
    i8 2, label %121
    i8 1, label %121
    i8 8, label %121
    i8 3, label %121
    i8 7, label %121
  ]

121:                                              ; preds = %111, %111, %111, %111, %111
  %122 = tail call noalias i8* @malloc(i64 40) #14
  %123 = bitcast i8* %122 to %"class.blink::TableLayoutAlgorithmFixed"*
  tail call void @_ZN5blink25TableLayoutAlgorithmFixedC1EPNS_11LayoutTableE(%"class.blink::TableLayoutAlgorithmFixed"* %123, %"class.blink::LayoutTable"* %0) #14
  %124 = load %"class.blink::TableLayoutAlgorithm"*, %"class.blink::TableLayoutAlgorithm"** %70, align 8
  %125 = bitcast %"class.blink::TableLayoutAlgorithm"** %70 to i8**
  store i8* %122, i8** %125, align 8
  %126 = icmp eq %"class.blink::TableLayoutAlgorithm"* %124, null
  br i1 %126, label %143, label %127

127:                                              ; preds = %121
  %128 = bitcast %"class.blink::TableLayoutAlgorithm"* %124 to void (%"class.blink::TableLayoutAlgorithm"*)***
  %129 = load void (%"class.blink::TableLayoutAlgorithm"*)**, void (%"class.blink::TableLayoutAlgorithm"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.blink::TableLayoutAlgorithm"*)*, void (%"class.blink::TableLayoutAlgorithm"*)** %129, i64 1
  %131 = load void (%"class.blink::TableLayoutAlgorithm"*)*, void (%"class.blink::TableLayoutAlgorithm"*)** %130, align 8
  tail call void %131(%"class.blink::TableLayoutAlgorithm"* nonnull %124) #14
  br label %143

132:                                              ; preds = %111, %104
  %133 = tail call noalias i8* @malloc(i64 248) #14
  %134 = bitcast i8* %133 to %"class.blink::TableLayoutAlgorithmAuto"*
  tail call void @_ZN5blink24TableLayoutAlgorithmAutoC1EPNS_11LayoutTableE(%"class.blink::TableLayoutAlgorithmAuto"* %134, %"class.blink::LayoutTable"* %0) #14
  %135 = load %"class.blink::TableLayoutAlgorithm"*, %"class.blink::TableLayoutAlgorithm"** %70, align 8
  %136 = bitcast %"class.blink::TableLayoutAlgorithm"** %70 to i8**
  store i8* %133, i8** %136, align 8
  %137 = icmp eq %"class.blink::TableLayoutAlgorithm"* %135, null
  br i1 %137, label %143, label %138

138:                                              ; preds = %132
  %139 = bitcast %"class.blink::TableLayoutAlgorithm"* %135 to void (%"class.blink::TableLayoutAlgorithm"*)***
  %140 = load void (%"class.blink::TableLayoutAlgorithm"*)**, void (%"class.blink::TableLayoutAlgorithm"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.blink::TableLayoutAlgorithm"*)*, void (%"class.blink::TableLayoutAlgorithm"*)** %140, i64 1
  %142 = load void (%"class.blink::TableLayoutAlgorithm"*)*, void (%"class.blink::TableLayoutAlgorithm"*)** %141, align 8
  tail call void %142(%"class.blink::TableLayoutAlgorithm"* nonnull %135) #14
  br label %143

143:                                              ; preds = %132, %138, %121, %127, %95
  br i1 %23, label %144, label %180

144:                                              ; preds = %143
  %145 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %146 = bitcast [20 x i8]* %145 to i160*
  %147 = load i160, i160* %146, align 8
  %148 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %9, align 8
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %148, i64 0, i32 9
  %150 = bitcast [20 x i8]* %149 to i160*
  %151 = load i160, i160* %150, align 8
  %152 = xor i160 %151, %147
  %153 = and i160 %152, 81129638414606681695789005144064
  %154 = icmp eq i160 %153, 0
  br i1 %154, label %160, label %155

155:                                              ; preds = %144
  %156 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %157 = load i16, i16* %156, align 8
  %158 = and i16 %157, -26
  %159 = or i16 %158, 8
  store i16 %159, i16* %156, align 8
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %6) #14
  br label %161

160:                                              ; preds = %144
  call void @_ZN5blink23LayoutTableBoxComponent39InvalidateCollapsedBordersOnStyleChangeERKNS_12LayoutObjectERNS_11LayoutTableERKNS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutObject"* dereferenceable(88) %6, %"class.blink::LayoutTable"* dereferenceable(392) %0, %"class.blink::StyleDifference"* nonnull dereferenceable(4) %5, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2) #14
  br label %161

161:                                              ; preds = %160, %155
  %162 = call zeroext i1 @_ZN5blink23LayoutTableBoxComponent21DoCellsHaveDirtyWidthERKNS_12LayoutObjectERKNS_11LayoutTableERKNS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutObject"* dereferenceable(88) %6, %"class.blink::LayoutTable"* dereferenceable(392) %0, %"class.blink::StyleDifference"* nonnull dereferenceable(4) %5, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2) #14
  br i1 %162, label %163, label %180

163:                                              ; preds = %161
  %164 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %165 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %164, align 8
  %166 = icmp eq %"class.blink::LayoutObject"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %163, %176
  %168 = phi %"class.blink::LayoutObject"* [ %178, %176 ], [ %165, %163 ]
  %169 = bitcast %"class.blink::LayoutObject"* %168 to i1 (%"class.blink::LayoutObject"*, i32)***
  %170 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %169, align 8
  %171 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %170, i64 92
  %172 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %171, align 8
  %173 = call zeroext i1 %172(%"class.blink::LayoutObject"* nonnull %168, i32 50) #14
  br i1 %173, label %174, label %176

174:                                              ; preds = %167
  %175 = bitcast %"class.blink::LayoutObject"* %168 to %"class.blink::LayoutTableSection"*
  call void @_ZN5blink18LayoutTableSection39MarkAllCellsWidthsDirtyAndOrNeedsLayoutENS_11LayoutTable18WhatToMarkAllCellsE(%"class.blink::LayoutTableSection"* nonnull %175, i32 1) #14
  br label %176

176:                                              ; preds = %174, %167
  %177 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %168, i64 0, i32 9
  %178 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %177, align 8
  %179 = icmp eq %"class.blink::LayoutObject"* %178, null
  br i1 %179, label %180, label %167

180:                                              ; preds = %176, %163, %161, %143
  ret void
}

declare void @_ZN5blink11LayoutBlock14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTable21ShouldCollapseBordersEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 81129638414606681695789005144064
  %9 = icmp eq i160 %8, 0
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable26InvalidateCollapsedBordersEv(%"class.blink::LayoutTable"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %4 = load i16, i16* %3, align 8
  %5 = and i16 %4, -26
  %6 = or i16 %5, 8
  store i16 %6, i16* %3, align 8
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %2) #14
  ret void
}

declare void @_ZN5blink23LayoutTableBoxComponent39InvalidateCollapsedBordersOnStyleChangeERKNS_12LayoutObjectERNS_11LayoutTableERKNS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::LayoutTable"* dereferenceable(392), %"class.blink::StyleDifference"* dereferenceable(4), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink23LayoutTableBoxComponent21DoCellsHaveDirtyWidthERKNS_12LayoutObjectERKNS_11LayoutTableERKNS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::LayoutTable"* dereferenceable(392), %"class.blink::StyleDifference"* dereferenceable(4), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable39MarkAllCellsWidthsDirtyAndOrNeedsLayoutENS0_18WhatToMarkAllCellsE(%"class.blink::LayoutTable"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %16, %2
  ret void

7:                                                ; preds = %2, %16
  %8 = phi %"class.blink::LayoutObject"* [ %18, %16 ], [ %4, %2 ]
  %9 = bitcast %"class.blink::LayoutObject"* %8 to i1 (%"class.blink::LayoutObject"*, i32)***
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, i64 92
  %12 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* nonnull %8, i32 50) #14
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = bitcast %"class.blink::LayoutObject"* %8 to %"class.blink::LayoutTableSection"*
  tail call void @_ZN5blink18LayoutTableSection39MarkAllCellsWidthsDirtyAndOrNeedsLayoutENS_11LayoutTable18WhatToMarkAllCellsE(%"class.blink::LayoutTableSection"* nonnull %15, i32 %1) #14
  br label %16

16:                                               ; preds = %7, %14
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 9
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutObject"* %18, null
  br i1 %19, label %6, label %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutTable"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 113336795588871485128704
  %9 = icmp ne i96 %8, 75557863725914323419136
  %10 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, i64 92
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::LayoutObject"* %1, i32 45) #14
  br i1 %14, label %114, label %15

15:                                               ; preds = %3
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %16, i64 92
  %18 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::LayoutObject"* %1, i32 48) #14
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %22 = load i16, i16* %21, align 8
  %23 = or i16 %22, 64
  store i16 %23, i16* %21, align 8
  br label %114

24:                                               ; preds = %15
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %25, i64 92
  %27 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::LayoutObject"* %1, i32 50) #14
  br i1 %28, label %29, label %114

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %31 = bitcast %"class.blink::ComputedStyle"** %30 to %"class.blink::ComputedStyleBase"**
  %32 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %32, i64 0, i32 9
  %34 = bitcast [20 x i8]* %33 to i160*
  %35 = load i160, i160* %34, align 8
  %36 = lshr i160 %35, 32
  %37 = trunc i160 %36 to i32
  %38 = and i32 %37, 31
  switch i32 %38, label %114 [
    i32 7, label %39
    i32 8, label %76
    i32 6, label %95
  ]

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %41 = icmp eq %"class.blink::LayoutObject"* %2, null
  %42 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %40, align 8
  %43 = icmp eq %"class.blink::LayoutTableSection"* %42, null
  %44 = or i1 %41, %43
  %45 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %44, label %55, label %46

46:                                               ; preds = %39, %46
  %47 = phi %"class.blink::LayoutObject"* [ %49, %46 ], [ %2, %39 ]
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 8
  %49 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %48, align 8
  %50 = icmp ne %"class.blink::LayoutObject"* %49, null
  %51 = icmp ne %"class.blink::LayoutObject"* %49, %45
  %52 = and i1 %50, %51
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  br i1 %50, label %55, label %54

54:                                               ; preds = %53
  store %"class.blink::LayoutTableSection"* null, %"class.blink::LayoutTableSection"** %40, align 8
  br label %56

55:                                               ; preds = %53, %39
  br i1 %43, label %56, label %58

56:                                               ; preds = %54, %55
  %57 = bitcast %"class.blink::LayoutTableSection"** %40 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %57, align 8
  br label %114

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %60 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %59, align 8
  %61 = icmp eq %"class.blink::LayoutTableSection"* %60, null
  %62 = or i1 %41, %61
  %63 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %62, label %73, label %64

64:                                               ; preds = %58, %64
  %65 = phi %"class.blink::LayoutObject"* [ %67, %64 ], [ %2, %58 ]
  %66 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %65, i64 0, i32 8
  %67 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %66, align 8
  %68 = icmp ne %"class.blink::LayoutObject"* %67, null
  %69 = icmp ne %"class.blink::LayoutObject"* %67, %63
  %70 = and i1 %68, %69
  br i1 %70, label %64, label %71

71:                                               ; preds = %64
  br i1 %68, label %73, label %72

72:                                               ; preds = %71
  store %"class.blink::LayoutTableSection"* null, %"class.blink::LayoutTableSection"** %59, align 8
  br label %74

73:                                               ; preds = %71, %58
  br i1 %61, label %74, label %114

74:                                               ; preds = %72, %73
  %75 = bitcast %"class.blink::LayoutTableSection"** %59 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %75, align 8
  br label %114

76:                                               ; preds = %29
  %77 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %78 = icmp eq %"class.blink::LayoutObject"* %2, null
  %79 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %77, align 8
  %80 = icmp eq %"class.blink::LayoutTableSection"* %79, null
  %81 = or i1 %78, %80
  %82 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %81, label %92, label %83

83:                                               ; preds = %76, %83
  %84 = phi %"class.blink::LayoutObject"* [ %86, %83 ], [ %2, %76 ]
  %85 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %84, i64 0, i32 8
  %86 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %85, align 8
  %87 = icmp ne %"class.blink::LayoutObject"* %86, null
  %88 = icmp ne %"class.blink::LayoutObject"* %86, %82
  %89 = and i1 %87, %88
  br i1 %89, label %83, label %90

90:                                               ; preds = %83
  br i1 %87, label %92, label %91

91:                                               ; preds = %90
  store %"class.blink::LayoutTableSection"* null, %"class.blink::LayoutTableSection"** %77, align 8
  br label %93

92:                                               ; preds = %90, %76
  br i1 %80, label %93, label %95

93:                                               ; preds = %91, %92
  %94 = bitcast %"class.blink::LayoutTableSection"** %77 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %94, align 8
  br label %114

95:                                               ; preds = %92, %29
  %96 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %97 = icmp eq %"class.blink::LayoutObject"* %2, null
  %98 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %96, align 8
  %99 = icmp eq %"class.blink::LayoutTableSection"* %98, null
  %100 = or i1 %97, %99
  %101 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %100, label %111, label %102

102:                                              ; preds = %95, %102
  %103 = phi %"class.blink::LayoutObject"* [ %105, %102 ], [ %2, %95 ]
  %104 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %103, i64 0, i32 8
  %105 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %104, align 8
  %106 = icmp ne %"class.blink::LayoutObject"* %105, null
  %107 = icmp ne %"class.blink::LayoutObject"* %105, %101
  %108 = and i1 %106, %107
  br i1 %108, label %102, label %109

109:                                              ; preds = %102
  br i1 %106, label %111, label %110

110:                                              ; preds = %109
  store %"class.blink::LayoutTableSection"* null, %"class.blink::LayoutTableSection"** %96, align 8
  br label %112

111:                                              ; preds = %109, %95
  br i1 %99, label %112, label %114

112:                                              ; preds = %110, %111
  %113 = bitcast %"class.blink::LayoutTableSection"** %96 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %113, align 8
  br label %114

114:                                              ; preds = %24, %112, %111, %56, %74, %73, %3, %20, %93, %29
  %115 = phi i1 [ false, %20 ], [ %9, %29 ], [ false, %93 ], [ false, %3 ], [ false, %73 ], [ false, %74 ], [ false, %56 ], [ false, %111 ], [ false, %112 ], [ true, %24 ]
  %116 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %117 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %116, i64 92
  %118 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %117, align 8
  %119 = tail call zeroext i1 %118(%"class.blink::LayoutObject"* %1, i32 50) #14
  br i1 %119, label %120, label %149

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %122 = load %"class.blink::Node"*, %"class.blink::Node"** %121, align 8
  %123 = icmp eq %"class.blink::Node"* %122, null
  br i1 %123, label %124, label %131

124:                                              ; preds = %120, %124
  %125 = phi %"class.blink::LayoutObject"* [ %127, %124 ], [ %4, %120 ]
  %126 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %125, i64 0, i32 7
  %127 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %127, i64 0, i32 6, i32 0, i32 0
  %129 = load %"class.blink::Node"*, %"class.blink::Node"** %128, align 8
  %130 = icmp eq %"class.blink::Node"* %129, null
  br i1 %130, label %124, label %131

131:                                              ; preds = %124, %120
  %132 = phi %"class.blink::Node"* [ %122, %120 ], [ %129, %124 ]
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %132, i64 0, i32 3, i32 0, i32 0
  %134 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %134, i64 0, i32 2, i32 0, i32 0
  %136 = load %"class.blink::Document"*, %"class.blink::Document"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %136, i64 0, i32 5, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp sgt i32 %138, 19
  br i1 %139, label %149, label %140

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %142 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %143 = bitcast %"class.blink::LayoutTableSection"** %141 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 24, i1 false) #14
  %144 = load i16, i16* %142, align 8
  %145 = or i16 %144, 128
  store i16 %145, i16* %142, align 8
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason13kTableChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #14
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %4, i8 zeroext 3) #14
  %146 = load i16, i16* %142, align 8
  %147 = and i16 %146, -26
  %148 = or i16 %147, 8
  store i16 %148, i16* %142, align 8
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %4) #14
  br label %149

149:                                              ; preds = %140, %131, %114
  %150 = icmp ne %"class.blink::LayoutObject"* %2, null
  br i1 %115, label %161, label %151

151:                                              ; preds = %149
  br i1 %150, label %152, label %159

152:                                              ; preds = %151
  %153 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 7
  %154 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %153, align 8
  %155 = icmp eq %"class.blink::LayoutObject"* %154, %4
  br i1 %155, label %159, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %158 = tail call %"class.blink::LayoutObject"* @_ZN5blink9LayoutBox30SplitAnonymousBoxesAroundChildEPNS_12LayoutObjectE(%"class.blink::LayoutBox"* %157, %"class.blink::LayoutObject"* nonnull %2) #14
  br label %159

159:                                              ; preds = %152, %156, %151
  %160 = phi %"class.blink::LayoutObject"* [ %158, %156 ], [ %2, %152 ], [ null, %151 ]
  tail call void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %160) #14
  br label %357

161:                                              ; preds = %149
  br i1 %150, label %204, label %162

162:                                              ; preds = %161
  %163 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 1
  %164 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %163, align 8
  %165 = icmp eq %"class.blink::LayoutObject"* %164, null
  br i1 %165, label %349, label %166

166:                                              ; preds = %162
  %167 = bitcast %"class.blink::LayoutObject"* %164 to i1 (%"class.blink::LayoutObject"*, i32)***
  %168 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %167, align 8
  %169 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %168, i64 92
  %170 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %169, align 8
  %171 = tail call zeroext i1 %170(%"class.blink::LayoutObject"* nonnull %164, i32 50) #14
  br i1 %171, label %172, label %349

172:                                              ; preds = %166
  %173 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %163, align 8
  %174 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %173, i64 0, i32 4
  %175 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %174 to i96*
  %176 = load i96, i96* %175, align 4
  %177 = and i96 %176, 16777216
  %178 = icmp eq i96 %177, 0
  br i1 %178, label %349, label %179

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %173, i64 0, i32 5, i32 0
  %181 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %181, i64 0, i32 0, i32 9
  %183 = bitcast [20 x i8]* %182 to i160*
  %184 = load i160, i160* %183, align 8
  %185 = and i160 %184, 2113929216
  %186 = icmp eq i160 %185, 100663296
  br i1 %186, label %187, label %198

187:                                              ; preds = %179
  %188 = and i96 %176, 33554432
  %189 = icmp eq i96 %188, 0
  br i1 %189, label %349, label %190

190:                                              ; preds = %187
  %191 = bitcast %"class.blink::LayoutObject"* %173 to i1 (%"class.blink::LayoutObject"*, i32)***
  %192 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %191, align 8
  %193 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %192, i64 92
  %194 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %193, align 8
  %195 = tail call zeroext i1 %194(%"class.blink::LayoutObject"* %173, i32 0) #14
  br i1 %195, label %349, label %196

196:                                              ; preds = %190
  %197 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %163, align 8
  br label %198

198:                                              ; preds = %196, %179
  %199 = phi %"class.blink::LayoutObject"* [ %197, %196 ], [ %173, %179 ]
  %200 = bitcast %"class.blink::LayoutObject"* %199 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %201 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %200, align 8
  %202 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %201, i64 16
  %203 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %202, align 8
  tail call void %203(%"class.blink::LayoutObject"* %199, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* null) #14
  br label %357

204:                                              ; preds = %161
  %205 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 4
  %206 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %205 to i96*
  %207 = load i96, i96* %206, align 4
  %208 = and i96 %207, 16777216
  %209 = icmp eq i96 %208, 0
  br i1 %209, label %210, label %230

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 7
  %212 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %211, align 8
  %213 = icmp eq %"class.blink::LayoutObject"* %212, %4
  br i1 %213, label %214, label %230

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 8
  %216 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %215, align 8
  %217 = icmp eq %"class.blink::LayoutObject"* %216, null
  br i1 %217, label %230, label %218

218:                                              ; preds = %214
  %219 = bitcast %"class.blink::LayoutObject"* %216 to i1 (%"class.blink::LayoutObject"*, i32)***
  %220 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %219, align 8
  %221 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %220, i64 92
  %222 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %221, align 8
  %223 = tail call zeroext i1 %222(%"class.blink::LayoutObject"* nonnull %216, i32 50) #14
  br i1 %223, label %224, label %230

224:                                              ; preds = %218
  %225 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %216, i64 0, i32 4
  %226 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %225 to i96*
  %227 = load i96, i96* %226, align 4
  %228 = and i96 %227, 16777216
  %229 = icmp eq i96 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %210, %218, %214, %204, %224
  br label %236

231:                                              ; preds = %224
  %232 = bitcast %"class.blink::LayoutObject"* %216 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %233 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %232, align 8
  %234 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %233, i64 16
  %235 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %234, align 8
  tail call void %235(%"class.blink::LayoutObject"* nonnull %216, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* null) #14
  br label %357

236:                                              ; preds = %230, %261
  %237 = phi %"class.blink::LayoutObject"* [ %262, %261 ], [ %2, %230 ]
  %238 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %237, i64 0, i32 7
  %239 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %238, align 8
  %240 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %239, i64 0, i32 4
  %241 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %240 to i96*
  %242 = load i96, i96* %241, align 4
  %243 = and i96 %242, 16777216
  %244 = icmp eq i96 %243, 0
  br i1 %244, label %264, label %245

245:                                              ; preds = %236
  %246 = bitcast %"class.blink::LayoutObject"* %237 to i1 (%"class.blink::LayoutObject"*, i32)***
  %247 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %246, align 8
  %248 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %247, i64 92
  %249 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %248, align 8
  %250 = tail call zeroext i1 %249(%"class.blink::LayoutObject"* nonnull %237, i32 50) #14
  br i1 %250, label %264, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %237, i64 0, i32 5, i32 0
  %253 = bitcast %"class.blink::ComputedStyle"** %252 to %"class.blink::ComputedStyleBase"**
  %254 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %253, align 8
  %255 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %254, i64 0, i32 9
  %256 = bitcast [20 x i8]* %255 to i160*
  %257 = load i160, i160* %256, align 8
  %258 = lshr i160 %257, 32
  %259 = trunc i160 %258 to i32
  %260 = and i32 %259, 31
  switch i32 %260, label %261 [
    i32 13, label %264
    i32 10, label %264
    i32 11, label %264
  ]

261:                                              ; preds = %251
  %262 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %238, align 8
  %263 = icmp eq %"class.blink::LayoutObject"* %262, null
  br i1 %263, label %331, label %236

264:                                              ; preds = %236, %245, %251, %251, %251
  %265 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %237, i64 0, i32 4
  %266 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %265 to i96*
  %267 = load i96, i96* %266, align 4
  %268 = and i96 %267, 16777216
  %269 = icmp eq i96 %268, 0
  br i1 %269, label %331, label %270

270:                                              ; preds = %264
  %271 = bitcast %"class.blink::LayoutObject"* %237 to i1 (%"class.blink::LayoutObject"*, i32)***
  %272 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %271, align 8
  %273 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %272, i64 92
  %274 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %273, align 8
  %275 = tail call zeroext i1 %274(%"class.blink::LayoutObject"* nonnull %237, i32 46) #14
  br i1 %275, label %296, label %276

276:                                              ; preds = %270
  %277 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %271, align 8
  %278 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %277, i64 92
  %279 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %278, align 8
  %280 = tail call zeroext i1 %279(%"class.blink::LayoutObject"* nonnull %237, i32 48) #14
  br i1 %280, label %296, label %281

281:                                              ; preds = %276
  %282 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %271, align 8
  %283 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %282, i64 92
  %284 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %283, align 8
  %285 = tail call zeroext i1 %284(%"class.blink::LayoutObject"* nonnull %237, i32 45) #14
  br i1 %285, label %296, label %286

286:                                              ; preds = %281
  %287 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %271, align 8
  %288 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %287, i64 92
  %289 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %288, align 8
  %290 = tail call zeroext i1 %289(%"class.blink::LayoutObject"* nonnull %237, i32 49) #14
  br i1 %290, label %296, label %291

291:                                              ; preds = %286
  %292 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %271, align 8
  %293 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %292, i64 92
  %294 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %293, align 8
  %295 = tail call zeroext i1 %294(%"class.blink::LayoutObject"* nonnull %237, i32 50) #14
  br i1 %295, label %296, label %331

296:                                              ; preds = %270, %276, %281, %286, %291
  %297 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %237, i64 0, i32 5, i32 0
  %298 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %297, align 8
  %299 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %298, i64 0, i32 0, i32 9
  %300 = bitcast [20 x i8]* %299 to i160*
  %301 = load i160, i160* %300, align 8
  %302 = and i160 %301, 2113929216
  %303 = icmp eq i160 %302, 134217728
  br i1 %303, label %304, label %313

304:                                              ; preds = %296
  %305 = load i96, i96* %266, align 4
  %306 = and i96 %305, 33554432
  %307 = icmp eq i96 %306, 0
  br i1 %307, label %331, label %308

308:                                              ; preds = %304
  %309 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %271, align 8
  %310 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %309, i64 92
  %311 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %310, align 8
  %312 = tail call zeroext i1 %311(%"class.blink::LayoutObject"* nonnull %237, i32 0) #14
  br i1 %312, label %331, label %313

313:                                              ; preds = %296, %308
  %314 = icmp eq %"class.blink::LayoutObject"* %237, %2
  br i1 %314, label %315, label %325

315:                                              ; preds = %313
  %316 = bitcast %"class.blink::LayoutObject"* %2 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %317 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %316, align 8
  %318 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %317, i64 13
  %319 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %318, align 8
  %320 = tail call %"class.blink::LayoutObjectChildList"* %319(%"class.blink::LayoutObject"* nonnull %2) #14
  %321 = icmp eq %"class.blink::LayoutObjectChildList"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %315
  %323 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %320, i64 0, i32 0
  %324 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %323, align 8
  br label %325

325:                                              ; preds = %322, %315, %313
  %326 = phi %"class.blink::LayoutObject"* [ %2, %313 ], [ %324, %322 ], [ null, %315 ]
  %327 = bitcast %"class.blink::LayoutObject"* %237 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %328 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %327, align 8
  %329 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %328, i64 16
  %330 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %329, align 8
  tail call void %330(%"class.blink::LayoutObject"* nonnull %237, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %326) #14
  br label %357

331:                                              ; preds = %261, %264, %308, %304, %291
  br i1 %150, label %332, label %349

332:                                              ; preds = %331
  %333 = bitcast %"class.blink::LayoutObject"* %2 to i1 (%"class.blink::LayoutObject"*, i32)***
  %334 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %333, align 8
  %335 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %334, i64 92
  %336 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %335, align 8
  %337 = tail call zeroext i1 %336(%"class.blink::LayoutObject"* nonnull %2, i32 50) #14
  br i1 %337, label %349, label %338

338:                                              ; preds = %332
  %339 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 5, i32 0
  %340 = bitcast %"class.blink::ComputedStyle"** %339 to %"class.blink::ComputedStyleBase"**
  %341 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %340, align 8
  %342 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %341, i64 0, i32 9
  %343 = bitcast [20 x i8]* %342 to i160*
  %344 = load i160, i160* %343, align 8
  %345 = lshr i160 %344, 32
  %346 = trunc i160 %345 to i32
  %347 = and i32 %346, 31
  switch i32 %347, label %348 [
    i32 13, label %349
    i32 10, label %349
    i32 11, label %349
  ]

348:                                              ; preds = %338
  br label %349

349:                                              ; preds = %172, %166, %162, %187, %190, %348, %338, %338, %338, %332, %331
  %350 = phi %"class.blink::LayoutObject"* [ %2, %332 ], [ null, %331 ], [ null, %348 ], [ %2, %338 ], [ %2, %338 ], [ %2, %338 ], [ null, %190 ], [ null, %187 ], [ null, %162 ], [ null, %166 ], [ null, %172 ]
  %351 = tail call %"class.blink::LayoutBox"* @_ZN5blink19LayoutObjectFactory37CreateAnonymousTableSectionWithParentERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %4) #14
  %352 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %351, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11LayoutTable8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutTable"* %0, %"class.blink::LayoutObject"* %352, %"class.blink::LayoutObject"* %350)
  %353 = bitcast %"class.blink::LayoutBox"* %351 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %354 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %353, align 8
  %355 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %354, i64 16
  %356 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %355, align 8
  tail call void %356(%"class.blink::LayoutObject"* %352, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* null) #14
  ret void

357:                                              ; preds = %325, %231, %198, %159
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink9LayoutBox30SplitAnonymousBoxesAroundChildEPNS_12LayoutObjectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink19LayoutObjectFactory37CreateAnonymousTableSectionWithParentERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable10AddCaptionEPKNS_18LayoutTableCaptionE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableCaption"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutTableCaption"*, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4
  %5 = bitcast %"class.blink::LayoutTableCaption"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  store %"class.blink::LayoutTableCaption"* %1, %"class.blink::LayoutTableCaption"** %3, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %20, label %11, !prof !20

11:                                               ; preds = %2
  %12 = ptrtoint %"class.blink::LayoutTableCaption"* %1 to i64
  %13 = getelementptr inbounds %"class.WTF::Vector.2110", %"class.WTF::Vector.2110"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::LayoutTableCaption"**, %"class.blink::LayoutTableCaption"*** %13, align 8
  %15 = zext i32 %7 to i64
  %16 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %14, i64 %15
  %17 = bitcast %"class.blink::LayoutTableCaption"** %16 to i64*
  store i64 %12, i64* %17, align 8
  %18 = load i32, i32* %6, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %6, align 4
  br label %21

20:                                               ; preds = %2
  call void @_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2110"* %4, %"class.blink::LayoutTableCaption"** nonnull dereferenceable(8) %3) #14
  br label %21

21:                                               ; preds = %11, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable13RemoveCaptionEPKNS_18LayoutTableCaptionE(%"class.blink::LayoutTable"* nocapture, %"class.blink::LayoutTableCaption"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutTableCaption"**, %"class.blink::LayoutTableCaption"*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %60, label %13

13:                                               ; preds = %2, %17
  %14 = phi %"class.blink::LayoutTableCaption"** [ %18, %17 ], [ %7, %2 ]
  %15 = load %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %14, align 8
  %16 = icmp eq %"class.blink::LayoutTableCaption"* %15, %1
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %14, i64 1
  %19 = icmp ult %"class.blink::LayoutTableCaption"** %18, %11
  br i1 %19, label %13, label %60

20:                                               ; preds = %13
  %21 = ptrtoint %"class.blink::LayoutTableCaption"** %14 to i64
  %22 = ptrtoint %"class.blink::LayoutTableCaption"** %7 to i64
  %23 = sub i64 %21, %22
  %24 = lshr exact i64 %23, 3
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %60, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  %31 = icmp ugt i32 %9, %25
  br i1 %31, label %32, label %33

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %25) #14
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %34, i8* %35) #14
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #14
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #14
  br label %42

42:                                               ; preds = %39, %33, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  %43 = load %"class.blink::LayoutTableCaption"**, %"class.blink::LayoutTableCaption"*** %6, align 8
  %44 = and i64 %24, 4294967295
  %45 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %43, i64 %44
  %46 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %45, i64 1
  %47 = icmp eq %"class.blink::LayoutTableCaption"** %45, null
  br i1 %47, label %57, label %48, !prof !20

48:                                               ; preds = %42
  %49 = load i32, i32* %8, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %43, i64 %50
  %52 = bitcast %"class.blink::LayoutTableCaption"** %45 to i8*
  %53 = bitcast %"class.blink::LayoutTableCaption"** %46 to i8*
  %54 = ptrtoint %"class.blink::LayoutTableCaption"** %51 to i64
  %55 = ptrtoint %"class.blink::LayoutTableCaption"** %46 to i64
  %56 = sub i64 %54, %55
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* nonnull align 8 %53, i64 %56, i1 false) #14
  br label %57

57:                                               ; preds = %42, %48
  %58 = load i32, i32* %8, align 4
  %59 = add i32 %58, -1
  store i32 %59, i32* %8, align 4
  br label %60

60:                                               ; preds = %17, %2, %20, %57
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable23InvalidateCachedColumnsEv(%"class.blink::LayoutTable"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, -1025
  store i16 %4, i16* %2, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 0, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable22ColumnStructureChangedEv(%"class.blink::LayoutTable"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, -1537
  %5 = or i16 %4, 512
  store i16 %5, i16* %2, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %1, %11
  %12 = phi %"class.blink::LayoutObject"* [ %14, %11 ], [ %7, %1 ]
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 7
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 6, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %11, label %18

18:                                               ; preds = %11, %1
  %19 = phi %"class.blink::Node"* [ %9, %1 ], [ %16, %11 ]
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 0, i32 5, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, 19
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %29 = bitcast %"class.blink::LayoutTableSection"** %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #14
  %30 = or i16 %4, 640
  store i16 %30, i16* %2, align 8
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason13kTableChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #14
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %7, i8 zeroext 3) #14
  %31 = load i16, i16* %2, align 8
  %32 = and i16 %31, -26
  %33 = or i16 %32, 8
  store i16 %33, i16* %2, align 8
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %7) #14
  br label %34

34:                                               ; preds = %18, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable9AddColumnEPKNS_14LayoutTableColE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableCol"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %4 = load i16, i16* %3, align 8
  %5 = and i16 %4, -1537
  %6 = or i16 %5, 512
  store i16 %6, i16* %3, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %12, label %19

12:                                               ; preds = %2, %12
  %13 = phi %"class.blink::LayoutObject"* [ %15, %12 ], [ %8, %2 ]
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 7
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 6, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %12, label %19

19:                                               ; preds = %12, %2
  %20 = phi %"class.blink::Node"* [ %10, %2 ], [ %17, %12 ]
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %24, i64 0, i32 5, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, 19
  br i1 %27, label %35, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %30 = bitcast %"class.blink::LayoutTableSection"** %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #14
  %31 = or i16 %5, 640
  store i16 %31, i16* %3, align 8
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason13kTableChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #14
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %8, i8 zeroext 3) #14
  %32 = load i16, i16* %3, align 8
  %33 = and i16 %32, -26
  %34 = or i16 %33, 8
  store i16 %34, i16* %3, align 8
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %8) #14
  br label %35

35:                                               ; preds = %19, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable12RemoveColumnEPKNS_14LayoutTableColE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableCol"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %4 = load i16, i16* %3, align 8
  %5 = and i16 %4, -1537
  %6 = or i16 %5, 512
  store i16 %6, i16* %3, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %12, label %19

12:                                               ; preds = %2, %12
  %13 = phi %"class.blink::LayoutObject"* [ %15, %12 ], [ %8, %2 ]
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 7
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 6, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %12, label %19

19:                                               ; preds = %12, %2
  %20 = phi %"class.blink::Node"* [ %10, %2 ], [ %17, %12 ]
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %24, i64 0, i32 5, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, 19
  br i1 %27, label %35, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %30 = bitcast %"class.blink::LayoutTableSection"** %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #14
  %31 = or i16 %5, 640
  store i16 %31, i16* %3, align 8
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason13kTableChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #14
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %8, i8 zeroext 3) #14
  %32 = load i16, i16* %3, align 8
  %33 = and i16 %32, -26
  %34 = or i16 %33, 8
  store i16 %34, i16* %3, align 8
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %8) #14
  br label %35

35:                                               ; preds = %19, %28
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink11LayoutTable18FirstBodyInterfaceEv(%"class.blink::LayoutTable"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %3 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutTableSection"* %3, null
  %5 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %3, i64 0, i32 2
  %6 = select i1 %4, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %5
  ret %"class.blink::LayoutNGTableSectionInterface"* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZThn240_NK5blink11LayoutTable18FirstBodyInterfaceEv(%"class.blink::LayoutTable"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 13, i32 0, i32 1
  %4 = bitcast [8 x i8]* %3 to %"class.blink::LayoutTableSection"**
  %5 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutTableSection"* %5, null
  %7 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %5, i64 0, i32 2
  %8 = select i1 %6, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %7
  ret %"class.blink::LayoutNGTableSectionInterface"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink11LayoutTable19TopSectionInterfaceEv(%"class.blink::LayoutTable"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %3 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutTableSection"* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %7 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %6, align 8
  %8 = icmp eq %"class.blink::LayoutTableSection"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %11 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %10, align 8
  br label %12

12:                                               ; preds = %1, %5, %9
  %13 = phi %"class.blink::LayoutTableSection"* [ %11, %9 ], [ %3, %1 ], [ %7, %5 ]
  %14 = icmp eq %"class.blink::LayoutTableSection"* %13, null
  %15 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %13, i64 0, i32 2
  %16 = select i1 %14, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %15
  ret %"class.blink::LayoutNGTableSectionInterface"* %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZThn240_NK5blink11LayoutTable19TopSectionInterfaceEv(%"class.blink::LayoutTable"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 13
  %4 = bitcast %"class.WTF::Vector.1624"* %3 to %"class.blink::LayoutTableSection"**
  %5 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutTableSection"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 13, i32 0, i32 1
  %9 = bitcast [8 x i8]* %8 to %"class.blink::LayoutTableSection"**
  %10 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutTableSection"* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 13, i32 0, i32 0, i32 1
  %14 = bitcast i32* %13 to %"class.blink::LayoutTableSection"**
  %15 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %14, align 8
  br label %16

16:                                               ; preds = %1, %7, %12
  %17 = phi %"class.blink::LayoutTableSection"* [ %15, %12 ], [ %5, %1 ], [ %10, %7 ]
  %18 = icmp eq %"class.blink::LayoutTableSection"* %17, null
  %19 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %17, i64 0, i32 2
  %20 = select i1 %18, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %19
  ret %"class.blink::LayoutNGTableSectionInterface"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink11LayoutTable22BottomSectionInterfaceEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 8
  %4 = trunc i16 %3 to i8
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %9 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %8, align 8
  %10 = icmp eq %"class.blink::LayoutTableSection"* %9, null
  br i1 %10, label %11, label %44

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %13 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %12, align 8
  %14 = icmp eq %"class.blink::LayoutTableSection"* %13, null
  %15 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %14, label %20, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %18 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutTableSection"* %18, null
  br i1 %19, label %44, label %20

20:                                               ; preds = %16, %11
  %21 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %44, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::LayoutTableSection"** %12 to %"class.blink::LayoutObject"**
  br label %26

26:                                               ; preds = %40, %24
  %27 = phi %"class.blink::LayoutObject"* [ %15, %24 ], [ %41, %40 ]
  %28 = phi %"class.blink::LayoutObject"* [ %22, %24 ], [ %38, %40 ]
  %29 = icmp eq %"class.blink::LayoutObject"* %28, %27
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.blink::LayoutObject"* %28 to i1 (%"class.blink::LayoutObject"*, i32)***
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, i64 92
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* nonnull %28, i32 50) #14
  br i1 %35, label %42, label %36

36:                                               ; preds = %30, %26
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 8
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  br label %26

42:                                               ; preds = %30
  %43 = bitcast %"class.blink::LayoutObject"* %28 to %"class.blink::LayoutTableSection"*
  br label %44

44:                                               ; preds = %36, %7, %16, %20, %42
  %45 = phi %"class.blink::LayoutTableSection"* [ %43, %42 ], [ %9, %7 ], [ %13, %16 ], [ null, %20 ], [ null, %36 ]
  %46 = icmp eq %"class.blink::LayoutTableSection"* %45, null
  %47 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %45, i64 0, i32 2
  %48 = select i1 %46, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %47
  ret %"class.blink::LayoutNGTableSectionInterface"* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable13BottomSectionEv(%"class.blink::LayoutTable"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 8
  %4 = trunc i16 %3 to i8
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %9 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %8, align 8
  %10 = icmp eq %"class.blink::LayoutTableSection"* %9, null
  br i1 %10, label %11, label %44

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %13 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %12, align 8
  %14 = icmp eq %"class.blink::LayoutTableSection"* %13, null
  %15 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %14, label %20, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %18 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutTableSection"* %18, null
  br i1 %19, label %44, label %20

20:                                               ; preds = %16, %11
  %21 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %44, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::LayoutTableSection"** %12 to %"class.blink::LayoutObject"**
  br label %26

26:                                               ; preds = %40, %24
  %27 = phi %"class.blink::LayoutObject"* [ %15, %24 ], [ %41, %40 ]
  %28 = phi %"class.blink::LayoutObject"* [ %22, %24 ], [ %38, %40 ]
  %29 = icmp eq %"class.blink::LayoutObject"* %28, %27
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.blink::LayoutObject"* %28 to i1 (%"class.blink::LayoutObject"*, i32)***
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, i64 92
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* nonnull %28, i32 50) #14
  br i1 %35, label %42, label %36

36:                                               ; preds = %30, %26
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 8
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  br label %26

42:                                               ; preds = %30
  %43 = bitcast %"class.blink::LayoutObject"* %28 to %"class.blink::LayoutTableSection"*
  br label %44

44:                                               ; preds = %36, %20, %7, %16, %42
  %45 = phi %"class.blink::LayoutTableSection"* [ %43, %42 ], [ %9, %7 ], [ %13, %16 ], [ null, %20 ], [ null, %36 ]
  ret %"class.blink::LayoutTableSection"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZThn240_NK5blink11LayoutTable22BottomSectionInterfaceEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 14, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to i16*
  %5 = load i16, i16* %4, align 8
  %6 = trunc i16 %5 to i8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::Vector.1624"* %2 to %"class.blink::LayoutTable"*
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %9) #14
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 13, i32 0, i32 0, i32 1
  %12 = bitcast i32* %11 to %"class.blink::LayoutTableSection"**
  %13 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %12, align 8
  %14 = icmp eq %"class.blink::LayoutTableSection"* %13, null
  br i1 %14, label %15, label %51

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 13
  %17 = bitcast %"class.WTF::Vector.1624"* %16 to %"class.blink::LayoutTableSection"**
  %18 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutTableSection"* %18, null
  %20 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %19, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 13, i32 0, i32 1
  %23 = bitcast [8 x i8]* %22 to %"class.blink::LayoutTableSection"**
  %24 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutTableSection"* %24, null
  br i1 %25, label %51, label %26

26:                                               ; preds = %21, %15
  %27 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 9, i32 0, i32 0, i32 1
  %28 = bitcast i32* %27 to %"class.blink::LayoutObject"**
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutObject"* %29, null
  br i1 %30, label %51, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.WTF::Vector.1624"* %16 to %"class.blink::LayoutObject"**
  br label %33

33:                                               ; preds = %47, %31
  %34 = phi %"class.blink::LayoutObject"* [ %20, %31 ], [ %48, %47 ]
  %35 = phi %"class.blink::LayoutObject"* [ %29, %31 ], [ %45, %47 ]
  %36 = icmp eq %"class.blink::LayoutObject"* %35, %34
  br i1 %36, label %43, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.blink::LayoutObject"* %35 to i1 (%"class.blink::LayoutObject"*, i32)***
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, i64 92
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* nonnull %35, i32 50) #14
  br i1 %42, label %49, label %43

43:                                               ; preds = %37, %33
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 8
  %45 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %46 = icmp eq %"class.blink::LayoutObject"* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  br label %33

49:                                               ; preds = %37
  %50 = bitcast %"class.blink::LayoutObject"* %35 to %"class.blink::LayoutTableSection"*
  br label %51

51:                                               ; preds = %43, %10, %21, %26, %49
  %52 = phi %"class.blink::LayoutTableSection"* [ %50, %49 ], [ %13, %10 ], [ %18, %21 ], [ null, %26 ], [ null, %43 ]
  %53 = icmp eq %"class.blink::LayoutTableSection"* %52, null
  %54 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %52, i64 0, i32 2
  %55 = select i1 %53, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %54
  ret %"class.blink::LayoutNGTableSectionInterface"* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink11LayoutTable27TopNonEmptySectionInterfaceEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable18TopNonEmptySectionEv(%"class.blink::LayoutTable"* %0)
  %3 = icmp eq %"class.blink::LayoutTableSection"* %2, null
  %4 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %2, i64 0, i32 2
  %5 = select i1 %3, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %4
  ret %"class.blink::LayoutNGTableSectionInterface"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable18TopNonEmptySectionEv(%"class.blink::LayoutTable"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %3 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutTableSection"* %3, null
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %7 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %6, align 8
  %8 = icmp eq %"class.blink::LayoutTableSection"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %11 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %10, align 8
  %12 = icmp eq %"class.blink::LayoutTableSection"* %11, null
  br i1 %12, label %75, label %13

13:                                               ; preds = %5, %1, %9
  %14 = phi %"class.blink::LayoutTableSection"* [ %11, %9 ], [ %7, %5 ], [ %3, %1 ]
  %15 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %14, i64 0, i32 3, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %75

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %20 = load i16, i16* %19, align 8
  %21 = trunc i16 %20 to i8
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %24

24:                                               ; preds = %23, %18
  %25 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %26 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutTableSection"* %26, %14
  br i1 %27, label %75, label %28

28:                                               ; preds = %24
  %29 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %2, align 8
  %30 = icmp eq %"class.blink::LayoutTableSection"* %29, %14
  %31 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %33 = select i1 %30, %"class.blink::LayoutObject"** %31, %"class.blink::LayoutObject"** %32
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = icmp eq %"class.blink::LayoutObject"* %34, null
  br i1 %35, label %63, label %36

36:                                               ; preds = %28
  %37 = bitcast %"class.blink::LayoutTableSection"** %2 to %"class.blink::LayoutObject"**
  %38 = bitcast %"class.blink::LayoutTableSection"** %25 to %"class.blink::LayoutObject"**
  br label %39

39:                                               ; preds = %57, %36
  %40 = phi %"class.blink::LayoutObject"* [ %34, %36 ], [ %59, %57 ]
  %41 = bitcast %"class.blink::LayoutObject"* %40 to i1 (%"class.blink::LayoutObject"*, i32)***
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, i64 92
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* nonnull %40, i32 50) #14
  br i1 %45, label %46, label %57

46:                                               ; preds = %39
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %48 = icmp eq %"class.blink::LayoutObject"* %40, %47
  br i1 %48, label %57, label %49

49:                                               ; preds = %46
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %51 = icmp eq %"class.blink::LayoutObject"* %40, %50
  br i1 %51, label %57, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::LayoutObject"* %40 to %"class.blink::LayoutTableSection"*
  %54 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %53, i64 0, i32 3, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %72

57:                                               ; preds = %52, %49, %46, %39
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 9
  %59 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %58, align 8
  %60 = icmp eq %"class.blink::LayoutObject"* %59, null
  br i1 %60, label %61, label %39

61:                                               ; preds = %57
  %62 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %25, align 8
  br label %63

63:                                               ; preds = %61, %28
  %64 = phi %"class.blink::LayoutTableSection"* [ %62, %61 ], [ %26, %28 ]
  %65 = icmp eq %"class.blink::LayoutTableSection"* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %64, i64 0, i32 3, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"* %67
  br label %72

72:                                               ; preds = %52, %66, %63
  %73 = phi %"class.blink::LayoutObject"* [ null, %63 ], [ %71, %66 ], [ %40, %52 ]
  %74 = bitcast %"class.blink::LayoutObject"* %73 to %"class.blink::LayoutTableSection"*
  br label %75

75:                                               ; preds = %72, %24, %13, %9
  %76 = phi %"class.blink::LayoutTableSection"* [ %14, %13 ], [ null, %9 ], [ %74, %72 ], [ null, %24 ]
  ret %"class.blink::LayoutTableSection"* %76
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZThn240_NK5blink11LayoutTable27TopNonEmptySectionInterfaceEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = bitcast %"class.WTF::Vector.1624"* %2 to %"class.blink::LayoutTable"*
  %4 = tail call %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable18TopNonEmptySectionEv(%"class.blink::LayoutTable"* %3) #14
  %5 = icmp eq %"class.blink::LayoutTableSection"* %4, null
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %4, i64 0, i32 2
  %7 = select i1 %5, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %6
  ret %"class.blink::LayoutNGTableSectionInterface"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink11LayoutTable21SectionBelowInterfaceEPKNS_29LayoutNGTableSectionInterfaceENS_22SkipEmptySectionsValueE(%"class.blink::LayoutTable"*, %"class.blink::LayoutNGTableSectionInterface"*, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::LayoutNGTableSectionInterface"* %1 to %"class.blink::LayoutTableSection"* (%"class.blink::LayoutNGTableSectionInterface"*)***
  %5 = load %"class.blink::LayoutTableSection"* (%"class.blink::LayoutNGTableSectionInterface"*)**, %"class.blink::LayoutTableSection"* (%"class.blink::LayoutNGTableSectionInterface"*)*** %4, align 8
  %6 = load %"class.blink::LayoutTableSection"* (%"class.blink::LayoutNGTableSectionInterface"*)*, %"class.blink::LayoutTableSection"* (%"class.blink::LayoutNGTableSectionInterface"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutTableSection"* %6(%"class.blink::LayoutNGTableSectionInterface"* %1) #14
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %9 = load i16, i16* %8, align 8
  %10 = trunc i16 %9 to i8
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %13

13:                                               ; preds = %12, %3
  %14 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %15 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %14, align 8
  %16 = icmp eq %"class.blink::LayoutTableSection"* %15, %7
  br i1 %16, label %69, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %19 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutTableSection"* %19, %7
  %21 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %23 = select i1 %20, %"class.blink::LayoutObject"** %21, %"class.blink::LayoutObject"** %22
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutObject"* %24, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %17
  %27 = bitcast %"class.blink::LayoutTableSection"** %18 to %"class.blink::LayoutObject"**
  %28 = bitcast %"class.blink::LayoutTableSection"** %14 to %"class.blink::LayoutObject"**
  %29 = icmp eq i32 %2, 0
  br label %30

30:                                               ; preds = %49, %26
  %31 = phi %"class.blink::LayoutObject"* [ %24, %26 ], [ %51, %49 ]
  %32 = bitcast %"class.blink::LayoutObject"* %31 to i1 (%"class.blink::LayoutObject"*, i32)***
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* nonnull %31, i32 50) #14
  br i1 %36, label %37, label %49

37:                                               ; preds = %30
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %31, %38
  br i1 %39, label %49, label %40

40:                                               ; preds = %37
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %42 = icmp eq %"class.blink::LayoutObject"* %31, %41
  br i1 %42, label %49, label %43

43:                                               ; preds = %40
  br i1 %29, label %66, label %44

44:                                               ; preds = %43
  %45 = bitcast %"class.blink::LayoutObject"* %31 to %"class.blink::LayoutTableSection"*
  %46 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %45, i64 0, i32 3, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %66

49:                                               ; preds = %44, %40, %37, %30
  %50 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 9
  %51 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %50, align 8
  %52 = icmp eq %"class.blink::LayoutObject"* %51, null
  br i1 %52, label %53, label %30

53:                                               ; preds = %49
  %54 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %14, align 8
  br label %55

55:                                               ; preds = %53, %17
  %56 = phi %"class.blink::LayoutTableSection"* [ %54, %53 ], [ %15, %17 ]
  %57 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = icmp eq %"class.blink::LayoutTableSection"* %56, null
  br i1 %58, label %66, label %59

59:                                               ; preds = %55
  %60 = icmp eq i32 %2, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %56, i64 0, i32 3, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %61, %59
  br label %66

66:                                               ; preds = %44, %43, %65, %61, %55
  %67 = phi %"class.blink::LayoutObject"* [ %57, %65 ], [ null, %61 ], [ null, %55 ], [ %31, %43 ], [ %31, %44 ]
  %68 = bitcast %"class.blink::LayoutObject"* %67 to %"class.blink::LayoutTableSection"*
  br label %69

69:                                               ; preds = %13, %66
  %70 = phi %"class.blink::LayoutTableSection"* [ %68, %66 ], [ null, %13 ]
  %71 = icmp eq %"class.blink::LayoutTableSection"* %70, null
  %72 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %70, i64 0, i32 2
  %73 = select i1 %71, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %72
  ret %"class.blink::LayoutNGTableSectionInterface"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable12SectionBelowEPKNS_18LayoutTableSectionENS_22SkipEmptySectionsValueE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableSection"* readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %5 = load i16, i16* %4, align 8
  %6 = trunc i16 %5 to i8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %9

9:                                                ; preds = %3, %8
  %10 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %11 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %10, align 8
  %12 = icmp eq %"class.blink::LayoutTableSection"* %11, %1
  br i1 %12, label %65, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %15 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %14, align 8
  %16 = icmp eq %"class.blink::LayoutTableSection"* %15, %1
  %17 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %19 = select i1 %16, %"class.blink::LayoutObject"** %17, %"class.blink::LayoutObject"** %18
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %21, label %51, label %22

22:                                               ; preds = %13
  %23 = bitcast %"class.blink::LayoutTableSection"** %14 to %"class.blink::LayoutObject"**
  %24 = bitcast %"class.blink::LayoutTableSection"** %10 to %"class.blink::LayoutObject"**
  %25 = icmp eq i32 %2, 0
  br label %26

26:                                               ; preds = %22, %45
  %27 = phi %"class.blink::LayoutObject"* [ %20, %22 ], [ %47, %45 ]
  %28 = bitcast %"class.blink::LayoutObject"* %27 to i1 (%"class.blink::LayoutObject"*, i32)***
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, i64 92
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* nonnull %27, i32 50) #14
  br i1 %32, label %33, label %45

33:                                               ; preds = %26
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %35 = icmp eq %"class.blink::LayoutObject"* %27, %34
  br i1 %35, label %45, label %36

36:                                               ; preds = %33
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %38 = icmp eq %"class.blink::LayoutObject"* %27, %37
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  br i1 %25, label %62, label %40

40:                                               ; preds = %39
  %41 = bitcast %"class.blink::LayoutObject"* %27 to %"class.blink::LayoutTableSection"*
  %42 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %41, i64 0, i32 3, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %62

45:                                               ; preds = %40, %36, %33, %26
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 9
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  %48 = icmp eq %"class.blink::LayoutObject"* %47, null
  br i1 %48, label %49, label %26

49:                                               ; preds = %45
  %50 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %10, align 8
  br label %51

51:                                               ; preds = %49, %13
  %52 = phi %"class.blink::LayoutTableSection"* [ %50, %49 ], [ %11, %13 ]
  %53 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = icmp eq %"class.blink::LayoutTableSection"* %52, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %51
  %56 = icmp eq i32 %2, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %52, i64 0, i32 3, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %57, %55
  br label %62

62:                                               ; preds = %39, %40, %57, %51, %61
  %63 = phi %"class.blink::LayoutObject"* [ %53, %61 ], [ null, %57 ], [ null, %51 ], [ %27, %40 ], [ %27, %39 ]
  %64 = bitcast %"class.blink::LayoutObject"* %63 to %"class.blink::LayoutTableSection"*
  br label %65

65:                                               ; preds = %9, %62
  %66 = phi %"class.blink::LayoutTableSection"* [ %64, %62 ], [ null, %9 ]
  ret %"class.blink::LayoutTableSection"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZThn240_NK5blink11LayoutTable21SectionBelowInterfaceEPKNS_29LayoutNGTableSectionInterfaceENS_22SkipEmptySectionsValueE(%"class.blink::LayoutTable"*, %"class.blink::LayoutNGTableSectionInterface"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %5 = bitcast %"class.blink::LayoutNGTableSectionInterface"* %1 to %"class.blink::LayoutTableSection"* (%"class.blink::LayoutNGTableSectionInterface"*)***
  %6 = load %"class.blink::LayoutTableSection"* (%"class.blink::LayoutNGTableSectionInterface"*)**, %"class.blink::LayoutTableSection"* (%"class.blink::LayoutNGTableSectionInterface"*)*** %5, align 8
  %7 = load %"class.blink::LayoutTableSection"* (%"class.blink::LayoutNGTableSectionInterface"*)*, %"class.blink::LayoutTableSection"* (%"class.blink::LayoutNGTableSectionInterface"*)** %6, align 8
  %8 = tail call %"class.blink::LayoutTableSection"* %7(%"class.blink::LayoutNGTableSectionInterface"* %1) #14
  %9 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %4, i64 14, i32 0, i32 0, i32 1
  %10 = bitcast i32* %9 to i16*
  %11 = load i16, i16* %10, align 8
  %12 = trunc i16 %11 to i8
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = bitcast %"class.WTF::Vector.1624"* %4 to %"class.blink::LayoutTable"*
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %15) #14
  br label %16

16:                                               ; preds = %14, %3
  %17 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %4, i64 13, i32 0, i32 0, i32 1
  %18 = bitcast i32* %17 to %"class.blink::LayoutTableSection"**
  %19 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutTableSection"* %19, %8
  br i1 %20, label %75, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %4, i64 13
  %23 = bitcast %"class.WTF::Vector.1624"* %22 to %"class.blink::LayoutTableSection"**
  %24 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutTableSection"* %24, %8
  %26 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %4, i64 9
  %27 = bitcast %"class.WTF::Vector.1624"* %26 to %"class.blink::LayoutObject"**
  %28 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %29 = select i1 %25, %"class.blink::LayoutObject"** %27, %"class.blink::LayoutObject"** %28
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %31 = icmp eq %"class.blink::LayoutObject"* %30, null
  br i1 %31, label %61, label %32

32:                                               ; preds = %21
  %33 = bitcast %"class.WTF::Vector.1624"* %22 to %"class.blink::LayoutObject"**
  %34 = bitcast i32* %17 to %"class.blink::LayoutObject"**
  %35 = icmp eq i32 %2, 0
  br label %36

36:                                               ; preds = %55, %32
  %37 = phi %"class.blink::LayoutObject"* [ %30, %32 ], [ %57, %55 ]
  %38 = bitcast %"class.blink::LayoutObject"* %37 to i1 (%"class.blink::LayoutObject"*, i32)***
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, i64 92
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* nonnull %37, i32 50) #14
  br i1 %42, label %43, label %55

43:                                               ; preds = %36
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %45 = icmp eq %"class.blink::LayoutObject"* %37, %44
  br i1 %45, label %55, label %46

46:                                               ; preds = %43
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %48 = icmp eq %"class.blink::LayoutObject"* %37, %47
  br i1 %48, label %55, label %49

49:                                               ; preds = %46
  br i1 %35, label %72, label %50

50:                                               ; preds = %49
  %51 = bitcast %"class.blink::LayoutObject"* %37 to %"class.blink::LayoutTableSection"*
  %52 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %51, i64 0, i32 3, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %72

55:                                               ; preds = %50, %46, %43, %36
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 9
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %56, align 8
  %58 = icmp eq %"class.blink::LayoutObject"* %57, null
  br i1 %58, label %59, label %36

59:                                               ; preds = %55
  %60 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %18, align 8
  br label %61

61:                                               ; preds = %59, %21
  %62 = phi %"class.blink::LayoutTableSection"* [ %60, %59 ], [ %19, %21 ]
  %63 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = icmp eq %"class.blink::LayoutTableSection"* %62, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = icmp eq i32 %2, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %62, i64 0, i32 3, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %67, %65
  br label %72

72:                                               ; preds = %50, %49, %71, %67, %61
  %73 = phi %"class.blink::LayoutObject"* [ %63, %71 ], [ null, %67 ], [ null, %61 ], [ %37, %49 ], [ %37, %50 ]
  %74 = bitcast %"class.blink::LayoutObject"* %73 to %"class.blink::LayoutTableSection"*
  br label %75

75:                                               ; preds = %16, %72
  %76 = phi %"class.blink::LayoutTableSection"* [ %74, %72 ], [ null, %16 ]
  %77 = icmp eq %"class.blink::LayoutTableSection"* %76, null
  %78 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %76, i64 0, i32 2
  %79 = select i1 %77, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %78
  ret %"class.blink::LayoutNGTableSectionInterface"* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink11LayoutTable30BottomNonEmptySectionInterfaceEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable21BottomNonEmptySectionEv(%"class.blink::LayoutTable"* %0)
  %3 = icmp eq %"class.blink::LayoutTableSection"* %2, null
  %4 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %2, i64 0, i32 2
  %5 = select i1 %3, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %4
  ret %"class.blink::LayoutNGTableSectionInterface"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable21BottomNonEmptySectionEv(%"class.blink::LayoutTable"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 8
  %4 = trunc i16 %3 to i8
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %9 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %8, align 8
  %10 = icmp eq %"class.blink::LayoutTableSection"* %9, null
  br i1 %10, label %11, label %44

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %13 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %12, align 8
  %14 = icmp eq %"class.blink::LayoutTableSection"* %13, null
  %15 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %14, label %20, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %18 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutTableSection"* %18, null
  br i1 %19, label %44, label %20

20:                                               ; preds = %16, %11
  %21 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %105, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::LayoutTableSection"** %12 to %"class.blink::LayoutObject"**
  br label %26

26:                                               ; preds = %40, %24
  %27 = phi %"class.blink::LayoutObject"* [ %15, %24 ], [ %41, %40 ]
  %28 = phi %"class.blink::LayoutObject"* [ %22, %24 ], [ %38, %40 ]
  %29 = icmp eq %"class.blink::LayoutObject"* %28, %27
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.blink::LayoutObject"* %28 to i1 (%"class.blink::LayoutObject"*, i32)***
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, i64 92
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* nonnull %28, i32 50) #14
  br i1 %35, label %42, label %36

36:                                               ; preds = %30, %26
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 8
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, null
  br i1 %39, label %105, label %40

40:                                               ; preds = %36
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  br label %26

42:                                               ; preds = %30
  %43 = bitcast %"class.blink::LayoutObject"* %28 to %"class.blink::LayoutTableSection"*
  br label %44

44:                                               ; preds = %42, %16, %7
  %45 = phi %"class.blink::LayoutTableSection"* [ %43, %42 ], [ %13, %16 ], [ %9, %7 ]
  %46 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %45, i64 0, i32 3, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %105

49:                                               ; preds = %44
  %50 = load i16, i16* %2, align 8
  %51 = trunc i16 %50 to i8
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %54

54:                                               ; preds = %53, %49
  %55 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %56 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %55, align 8
  %57 = icmp eq %"class.blink::LayoutTableSection"* %56, %45
  br i1 %57, label %105, label %58

58:                                               ; preds = %54
  %59 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %8, align 8
  %60 = icmp eq %"class.blink::LayoutTableSection"* %59, %45
  %61 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 1
  %62 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %63 = select i1 %60, %"class.blink::LayoutObject"** %61, %"class.blink::LayoutObject"** %62
  %64 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %63, align 8
  %65 = icmp eq %"class.blink::LayoutObject"* %64, null
  br i1 %65, label %93, label %66

66:                                               ; preds = %58
  %67 = bitcast %"class.blink::LayoutTableSection"** %55 to %"class.blink::LayoutObject"**
  %68 = bitcast %"class.blink::LayoutTableSection"** %8 to %"class.blink::LayoutObject"**
  br label %69

69:                                               ; preds = %87, %66
  %70 = phi %"class.blink::LayoutObject"* [ %64, %66 ], [ %89, %87 ]
  %71 = bitcast %"class.blink::LayoutObject"* %70 to i1 (%"class.blink::LayoutObject"*, i32)***
  %72 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %71, align 8
  %73 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %72, i64 92
  %74 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %73, align 8
  %75 = tail call zeroext i1 %74(%"class.blink::LayoutObject"* nonnull %70, i32 50) #14
  br i1 %75, label %76, label %87

76:                                               ; preds = %69
  %77 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %67, align 8
  %78 = icmp eq %"class.blink::LayoutObject"* %70, %77
  br i1 %78, label %87, label %79

79:                                               ; preds = %76
  %80 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %68, align 8
  %81 = icmp eq %"class.blink::LayoutObject"* %70, %80
  br i1 %81, label %87, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.blink::LayoutObject"* %70 to %"class.blink::LayoutTableSection"*
  %84 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %83, i64 0, i32 3, i32 0, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %102

87:                                               ; preds = %82, %79, %76, %69
  %88 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %70, i64 0, i32 8
  %89 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %88, align 8
  %90 = icmp eq %"class.blink::LayoutObject"* %89, null
  br i1 %90, label %91, label %69

91:                                               ; preds = %87
  %92 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %55, align 8
  br label %93

93:                                               ; preds = %91, %58
  %94 = phi %"class.blink::LayoutTableSection"* [ %92, %91 ], [ %56, %58 ]
  %95 = icmp eq %"class.blink::LayoutTableSection"* %94, null
  br i1 %95, label %102, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %94, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %94, i64 0, i32 3, i32 0, i32 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  %101 = select i1 %100, %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"* %97
  br label %102

102:                                              ; preds = %82, %96, %93
  %103 = phi %"class.blink::LayoutObject"* [ null, %93 ], [ %101, %96 ], [ %70, %82 ]
  %104 = bitcast %"class.blink::LayoutObject"* %103 to %"class.blink::LayoutTableSection"*
  br label %105

105:                                              ; preds = %36, %20, %102, %54, %44
  %106 = phi %"class.blink::LayoutTableSection"* [ %45, %44 ], [ %104, %102 ], [ null, %54 ], [ null, %20 ], [ null, %36 ]
  ret %"class.blink::LayoutTableSection"* %106
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZThn240_NK5blink11LayoutTable30BottomNonEmptySectionInterfaceEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = bitcast %"class.WTF::Vector.1624"* %2 to %"class.blink::LayoutTable"*
  %4 = tail call %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable21BottomNonEmptySectionEv(%"class.blink::LayoutTable"* %3) #14
  %5 = icmp eq %"class.blink::LayoutTableSection"* %4, null
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %4, i64 0, i32 2
  %7 = select i1 %5, %"class.blink::LayoutNGTableSectionInterface"* null, %"class.blink::LayoutNGTableSectionInterface"* %6
  ret %"class.blink::LayoutNGTableSectionInterface"* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink11LayoutTable18IsLogicalWidthAutoEv(%"class.blink::LayoutTable"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 3
  %13 = select i1 %8, %"class.blink::Length"* %11, %"class.blink::Length"* %12
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 2
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %30 [
    i8 8, label %33
    i8 1, label %16
    i8 2, label %16
  ]

16:                                               ; preds = %1, %1
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 3
  %18 = load i8, i8* %17, align 2, !range !21
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::Length"* %13 to float*
  %22 = load float, float* %21, align 4
  br label %27

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = sitofp i32 %25 to float
  br label %27

27:                                               ; preds = %20, %23
  %28 = phi float [ %22, %20 ], [ %26, %23 ]
  %29 = fcmp ogt float %28, 0.000000e+00
  br i1 %29, label %33, label %30

30:                                               ; preds = %1, %27
  %31 = add i8 %15, -3
  %32 = icmp ugt i8 %31, 4
  br label %33

33:                                               ; preds = %1, %30, %27
  %34 = phi i1 [ false, %27 ], [ %32, %30 ], [ false, %1 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable18UpdateLogicalWidthEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Length"*, align 8
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca %"class.blink::Length"*, align 8
  %18 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %"struct.blink::LayoutBox::ComputedMarginValues", align 4
  %23 = alloca i64, align 8
  %24 = bitcast i64* %23 to %"class.blink::Length"*
  %25 = alloca i64, align 8
  %26 = bitcast i64* %25 to %"class.blink::Length"*
  %27 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %29 = load i16, i16* %28, align 8
  %30 = trunc i16 %29 to i8
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %1
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %33

33:                                               ; preds = %1, %32
  %34 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox42UpdateCachedIntrinsicLogicalWidthsIfNeededEv(%"class.blink::LayoutBox"* %34) #14
  %35 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = icmp eq %"class.blink::LayoutObject"* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.blink::LayoutObject"* %36 to i1 (%"class.blink::LayoutObject"*, i32)***
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, i64 92
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::LayoutObject"* nonnull %36, i32 10) #14
  br i1 %43, label %44, label %45

44:                                               ; preds = %38
  tail call void @_ZN5blink9LayoutBox18UpdateLogicalWidthEv(%"class.blink::LayoutBox"* %34) #14
  br label %726

45:                                               ; preds = %33, %38
  %46 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  %48 = load i96, i96* %47, align 4
  %49 = and i96 %48, 113336795588871485128704
  %50 = icmp eq i96 %49, 75557863725914323419136
  br i1 %50, label %51, label %155

51:                                               ; preds = %45
  %52 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #14
  %53 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %18, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %18, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %18, i64 0, i32 2, i32 2, i32 0
  %56 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %18, i64 0, i32 2, i32 3, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %52, i8 0, i64 24, i1 false) #14
  call void @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %34, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %18) #14
  %57 = load i32, i32* %53, align 4
  %58 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %59, i64 0, i32 0, i32 9
  %61 = bitcast [20 x i8]* %60 to i160*
  %62 = load i160, i160* %61, align 8
  %63 = and i160 %62, 15211807202738752817960438464512
  %64 = icmp eq i160 %63, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %51
  %66 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %57
  br i1 %68, label %75, label %69

69:                                               ; preds = %65
  store i32 %57, i32* %66, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %75

70:                                               ; preds = %51
  %71 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %57
  br i1 %73, label %75, label %74

74:                                               ; preds = %70
  store i32 %57, i32* %71, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %75

75:                                               ; preds = %65, %69, %70, %74
  %76 = load i32, i32* %54, align 4
  %77 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %77, i64 0, i32 0, i32 9
  %79 = bitcast [20 x i8]* %78 to i160*
  %80 = load i160, i160* %79, align 8
  %81 = and i160 %80, 15211807202738752817960438464512
  %82 = icmp eq i160 %81, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, %76
  br i1 %86, label %93, label %87

87:                                               ; preds = %83
  store i32 %76, i32* %84, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %93

88:                                               ; preds = %75
  %89 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, %76
  br i1 %91, label %93, label %92

92:                                               ; preds = %88
  store i32 %76, i32* %89, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %93

93:                                               ; preds = %83, %87, %88, %92
  %94 = load i32, i32* %55, align 4
  %95 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  %96 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %95, i64 0, i32 0, i32 9
  %97 = bitcast [20 x i8]* %96 to i160*
  %98 = load i160, i160* %97, align 8, !noalias !22
  %99 = bitcast %"class.blink::LayoutTable"* %0 to i8*
  %100 = and i160 %98, 15211807202738752817960438464512
  %101 = icmp eq i160 %100, 0
  %102 = and i160 %98, 41538374868278621028243970633760768
  %103 = icmp eq i160 %102, 0
  %104 = select i1 %103, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }
  %105 = select i1 %103, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }
  %106 = select i1 %101, { i64, i64 } %105, { i64, i64 } %104
  %107 = select i1 %101, { i64, i64 } %105, { i64, i64 } %104
  %108 = extractvalue { i64, i64 } %106, 0
  %109 = extractvalue { i64, i64 } %107, 1
  %110 = getelementptr inbounds i8, i8* %99, i64 %109
  %111 = bitcast i8* %110 to %"class.blink::LayoutBox"*
  %112 = and i64 %108, 1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %121, label %114

114:                                              ; preds = %93
  %115 = bitcast i8* %110 to i8**
  %116 = load i8*, i8** %115, align 8
  %117 = add i64 %108, -1
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = bitcast i8* %118 to void (%"class.blink::LayoutBox"*, i32)**
  %120 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %119, align 8
  br label %123

121:                                              ; preds = %93
  %122 = inttoptr i64 %108 to void (%"class.blink::LayoutBox"*, i32)*
  br label %123

123:                                              ; preds = %114, %121
  %124 = phi void (%"class.blink::LayoutBox"*, i32)* [ %120, %114 ], [ %122, %121 ]
  call void %124(%"class.blink::LayoutBox"* %111, i32 %94) #14
  %125 = load i32, i32* %56, align 4
  %126 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  %127 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %126, i64 0, i32 0, i32 9
  %128 = bitcast [20 x i8]* %127 to i160*
  %129 = load i160, i160* %128, align 8, !noalias !25
  %130 = and i160 %129, 15211807202738752817960438464512
  %131 = icmp eq i160 %130, 0
  %132 = and i160 %129, 41538374868278621028243970633760768
  %133 = icmp eq i160 %132, 0
  %134 = select i1 %133, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }
  %135 = select i1 %133, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }
  %136 = select i1 %131, { i64, i64 } %135, { i64, i64 } %134
  %137 = select i1 %131, { i64, i64 } %135, { i64, i64 } %134
  %138 = extractvalue { i64, i64 } %136, 0
  %139 = extractvalue { i64, i64 } %137, 1
  %140 = getelementptr inbounds i8, i8* %99, i64 %139
  %141 = bitcast i8* %140 to %"class.blink::LayoutBox"*
  %142 = and i64 %138, 1
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %151, label %144

144:                                              ; preds = %123
  %145 = bitcast i8* %140 to i8**
  %146 = load i8*, i8** %145, align 8
  %147 = add i64 %138, -1
  %148 = getelementptr i8, i8* %146, i64 %147
  %149 = bitcast i8* %148 to void (%"class.blink::LayoutBox"*, i32)**
  %150 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %149, align 8
  br label %153

151:                                              ; preds = %123
  %152 = inttoptr i64 %138 to void (%"class.blink::LayoutBox"*, i32)*
  br label %153

153:                                              ; preds = %144, %151
  %154 = phi void (%"class.blink::LayoutBox"*, i32)* [ %150, %144 ], [ %152, %151 ]
  call void %154(%"class.blink::LayoutBox"* %141, i32 %125) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #14
  br label %155

155:                                              ; preds = %153, %45
  %156 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %27, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #14
  %157 = call i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"* %34) #14
  %158 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %156, i64 0, i32 0, i32 0, i32 0
  %159 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %156, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %160 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %160, i64 0, i32 0, i32 9
  %162 = bitcast [20 x i8]* %161 to i160*
  %163 = load i160, i160* %162, align 8
  %164 = and i160 %163, 15211807202738752817960438464512
  %165 = icmp eq i160 %164, 0
  %166 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %167 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %167, i64 0, i32 0, i32 9
  %169 = bitcast [20 x i8]* %168 to i160*
  %170 = load i160, i160* %169, align 8
  %171 = and i160 %170, 15211807202738752817960438464512
  %172 = icmp eq i160 %171, 0
  %173 = xor i1 %165, %172
  br i1 %173, label %174, label %176

174:                                              ; preds = %155
  %175 = call i32 @_ZNK5blink9LayoutBox41PerpendicularContainingBlockLogicalHeightEv(%"class.blink::LayoutBox"* %34) #14
  br label %176

176:                                              ; preds = %155, %174
  %177 = phi i32 [ %175, %174 ], [ %157, %155 ]
  %178 = call i64 @_ZNK5blink11LayoutTable22PreferredLogicalWidthsEv(%"class.blink::LayoutTable"* %0)
  %179 = trunc i64 %178 to i32
  %180 = lshr i64 %178, 32
  %181 = trunc i64 %180 to i32
  %182 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %183 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %182, i64 0, i32 0, i32 9
  %184 = bitcast [20 x i8]* %183 to i160*
  %185 = load i160, i160* %184, align 8
  %186 = and i160 %185, 15211807202738752817960438464512
  %187 = icmp eq i160 %186, 0
  %188 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %182, i64 0, i32 0, i32 5, i32 0, i32 0
  %189 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %189, i64 0, i32 8
  %191 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %189, i64 0, i32 3
  %192 = select i1 %187, %"class.blink::Length"* %190, %"class.blink::Length"* %191
  %193 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %192, i64 0, i32 2
  %194 = load i8, i8* %193, align 1
  switch i8 %194, label %209 [
    i8 8, label %212
    i8 1, label %195
    i8 2, label %195
  ]

195:                                              ; preds = %176, %176
  %196 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %192, i64 0, i32 3
  %197 = load i8, i8* %196, align 2, !range !21
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %202, label %199

199:                                              ; preds = %195
  %200 = bitcast %"class.blink::Length"* %192 to float*
  %201 = load float, float* %200, align 4
  br label %206

202:                                              ; preds = %195
  %203 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %192, i64 0, i32 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = sitofp i32 %204 to float
  br label %206

206:                                              ; preds = %202, %199
  %207 = phi float [ %201, %199 ], [ %205, %202 ]
  %208 = fcmp ogt float %207, 0.000000e+00
  br i1 %208, label %212, label %230

209:                                              ; preds = %176
  %210 = add i8 %194, -3
  %211 = icmp ugt i8 %210, 4
  br i1 %211, label %230, label %212

212:                                              ; preds = %176, %206, %209
  %213 = call i32 @_ZNK5blink11LayoutTable39ConvertStyleLogicalWidthToComputedWidthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutTable"* %0, %"class.blink::Length"* dereferenceable(8) %192, i32 %177)
  %214 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %215 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %214, i64 0, i32 0, i32 9
  %216 = bitcast [20 x i8]* %215 to i160*
  %217 = load i160, i160* %216, align 8
  %218 = and i160 %217, 15211807202738752817960438464512
  %219 = icmp eq i160 %218, 0
  br i1 %219, label %220, label %225

220:                                              ; preds = %212
  %221 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %222 = load i32, i32* %221, align 4
  %223 = icmp eq i32 %222, %213
  br i1 %223, label %430, label %224

224:                                              ; preds = %220
  store i32 %213, i32* %221, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %430

225:                                              ; preds = %212
  %226 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, %213
  br i1 %228, label %430, label %229

229:                                              ; preds = %225
  store i32 %213, i32* %226, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %430

230:                                              ; preds = %206, %209
  %231 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %231)
  %232 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232)
  %233 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233)
  %234 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234)
  %235 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %182, i64 0, i32 0, i32 7, i32 0, i32 0
  %236 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %235, align 8, !noalias !28
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %236, i64 0, i32 12
  %238 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %236, i64 0, i32 11
  %239 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %236, i64 0, i32 9
  %240 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %236, i64 0, i32 10
  store %"class.blink::Length"* %237, %"class.blink::Length"** %10, align 8, !alias.scope !28
  store %"class.blink::Length"* %238, %"class.blink::Length"** %11, align 8, !alias.scope !28
  store %"class.blink::Length"* %239, %"class.blink::Length"** %12, align 8, !alias.scope !28
  store %"class.blink::Length"* %240, %"class.blink::Length"** %13, align 8, !alias.scope !28
  %241 = and i160 %185, 41538374868278621028243970633760768
  %242 = icmp eq i160 %241, 0
  %243 = select i1 %242, %"class.blink::Length"** %13, %"class.blink::Length"** %11
  %244 = select i1 %242, %"class.blink::Length"** %10, %"class.blink::Length"** %12
  %245 = select i1 %187, %"class.blink::Length"** %243, %"class.blink::Length"** %244
  %246 = load %"class.blink::Length"*, %"class.blink::Length"** %245, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234)
  %247 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %246, i64 0, i32 2
  %248 = load i8, i8* %247, align 1
  %249 = icmp eq i8 %248, 2
  br i1 %249, label %250, label %271, !prof !2

250:                                              ; preds = %230
  %251 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %246, i64 0, i32 3
  %252 = load i8, i8* %251, align 2, !range !21
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %257, label %254

254:                                              ; preds = %250
  %255 = bitcast %"class.blink::Length"* %246 to float*
  %256 = load float, float* %255, align 4
  br label %261

257:                                              ; preds = %250
  %258 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %246, i64 0, i32 0, i32 0
  %259 = load i32, i32* %258, align 4
  %260 = sitofp i32 %259 to float
  br label %261

261:                                              ; preds = %257, %254
  %262 = phi float [ %256, %254 ], [ %260, %257 ]
  %263 = fmul float %262, 6.400000e+01
  %264 = fcmp ult float %263, 0xC1E0000000000000
  %265 = fcmp ugt float %263, 0x41DFFFFFE0000000
  %266 = fcmp ogt float %263, 0xC1E0000000000000
  %267 = select i1 %266, float %263, float 0xC1E0000000000000
  %268 = fptosi float %267 to i32
  %269 = select i1 %264, i32 0, i32 2147483647
  %270 = select i1 %265, i32 %269, i32 %268
  br label %281

271:                                              ; preds = %230
  %272 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %246, i32 %157) #14
  %273 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %274 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %273, i64 0, i32 0, i32 9
  %275 = bitcast [20 x i8]* %274 to i160*
  %276 = load i160, i160* %275, align 8, !noalias !31
  %277 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %273, i64 0, i32 0, i32 7, i32 0, i32 0
  %278 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %277, align 8, !noalias !31
  %279 = and i160 %276, 15211807202738752817960438464512
  %280 = and i160 %276, 41538374868278621028243970633760768
  br label %281

281:                                              ; preds = %261, %271
  %282 = phi i160 [ %241, %261 ], [ %280, %271 ]
  %283 = phi i160 [ %186, %261 ], [ %279, %271 ]
  %284 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %236, %261 ], [ %278, %271 ]
  %285 = phi i32 [ %270, %261 ], [ %272, %271 ]
  %286 = bitcast %"class.blink::Length"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %286)
  %287 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287)
  %288 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %288)
  %289 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %289)
  %290 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %284, i64 0, i32 12
  %291 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %284, i64 0, i32 11
  %292 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %284, i64 0, i32 9
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %284, i64 0, i32 10
  store %"class.blink::Length"* %290, %"class.blink::Length"** %2, align 8, !alias.scope !31
  store %"class.blink::Length"* %291, %"class.blink::Length"** %3, align 8, !alias.scope !31
  store %"class.blink::Length"* %292, %"class.blink::Length"** %4, align 8, !alias.scope !31
  store %"class.blink::Length"* %293, %"class.blink::Length"** %5, align 8, !alias.scope !31
  %294 = icmp eq i160 %283, 0
  %295 = icmp eq i160 %282, 0
  %296 = select i1 %295, %"class.blink::Length"** %3, %"class.blink::Length"** %5
  %297 = select i1 %295, %"class.blink::Length"** %4, %"class.blink::Length"** %2
  %298 = select i1 %294, %"class.blink::Length"** %296, %"class.blink::Length"** %297
  %299 = load %"class.blink::Length"*, %"class.blink::Length"** %298, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %286)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %288)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %289)
  %300 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %299, i64 0, i32 2
  %301 = load i8, i8* %300, align 1
  %302 = icmp eq i8 %301, 2
  br i1 %302, label %303, label %324, !prof !2

303:                                              ; preds = %281
  %304 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %299, i64 0, i32 3
  %305 = load i8, i8* %304, align 2, !range !21
  %306 = icmp eq i8 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %303
  %308 = bitcast %"class.blink::Length"* %299 to float*
  %309 = load float, float* %308, align 4
  br label %314

310:                                              ; preds = %303
  %311 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %299, i64 0, i32 0, i32 0
  %312 = load i32, i32* %311, align 4
  %313 = sitofp i32 %312 to float
  br label %314

314:                                              ; preds = %310, %307
  %315 = phi float [ %309, %307 ], [ %313, %310 ]
  %316 = fmul float %315, 6.400000e+01
  %317 = fcmp ult float %316, 0xC1E0000000000000
  %318 = fcmp ugt float %316, 0x41DFFFFFE0000000
  %319 = fcmp ogt float %316, 0xC1E0000000000000
  %320 = select i1 %319, float %316, float 0xC1E0000000000000
  %321 = fptosi float %320 to i32
  %322 = select i1 %317, i32 0, i32 2147483647
  %323 = select i1 %318, i32 %322, i32 %321
  br label %326

324:                                              ; preds = %281
  %325 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %299, i32 %157) #14
  br label %326

326:                                              ; preds = %314, %324
  %327 = phi i32 [ %323, %314 ], [ %325, %324 ]
  %328 = icmp slt i32 %327, 0
  %329 = select i1 %328, i32 -2147483648, i32 2147483647
  %330 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %285, i32 %327) #14
  %331 = extractvalue { i32, i1 } %330, 1
  %332 = extractvalue { i32, i1 } %330, 0
  %333 = select i1 %331, i32 %329, i32 %332, !prof !20
  %334 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %334)
  store i32 0, i32* %19, align 4
  %335 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 10
  %336 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %335, align 8
  %337 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %336, null
  br i1 %337, label %348, label %338

338:                                              ; preds = %326
  %339 = call i32 @_ZNK5blink9LayoutBox27OverrideAvailableInlineSizeEv(%"class.blink::LayoutBox"* %34) #14
  %340 = icmp sgt i32 %333, -1
  %341 = select i1 %340, i32 -2147483648, i32 2147483647
  %342 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %339, i32 %333) #14
  %343 = extractvalue { i32, i1 } %342, 1
  %344 = extractvalue { i32, i1 } %342, 0
  %345 = select i1 %343, i32 %341, i32 %344, !prof !20
  %346 = icmp sgt i32 %345, 0
  %347 = select i1 %346, i32 %345, i32 0
  store i32 %347, i32* %19, align 4
  br label %381

348:                                              ; preds = %326
  %349 = icmp sgt i32 %333, -1
  %350 = select i1 %349, i32 -2147483648, i32 2147483647
  %351 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %177, i32 %333) #14
  %352 = extractvalue { i32, i1 } %351, 1
  %353 = extractvalue { i32, i1 } %351, 0
  %354 = select i1 %352, i32 %350, i32 %353, !prof !20
  %355 = icmp sgt i32 %354, 0
  %356 = select i1 %355, i32 %354, i32 0
  store i32 %356, i32* %19, align 4
  %357 = icmp eq %"class.blink::LayoutBlock"* %156, null
  br i1 %357, label %358, label %360

358:                                              ; preds = %348
  %359 = call zeroext i1 @_ZNK5blink9LayoutBox19ShrinkToAvoidFloatsEv(%"class.blink::LayoutBox"* %34) #14
  br label %381

360:                                              ; preds = %348
  %361 = bitcast %"class.blink::LayoutBlock"* %156 to i1 (%"class.blink::LayoutObject"*)***
  %362 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %361, align 8
  %363 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %362, i64 24
  %364 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %363, align 8
  %365 = call zeroext i1 %364(%"class.blink::LayoutObject"* %158) #14
  %366 = bitcast %"class.blink::LayoutBlock"* %156 to %"class.blink::LayoutBlockFlow"*
  %367 = select i1 %365, %"class.blink::LayoutBlockFlow"* %366, %"class.blink::LayoutBlockFlow"* null
  %368 = call zeroext i1 @_ZNK5blink9LayoutBox19ShrinkToAvoidFloatsEv(%"class.blink::LayoutBox"* %34) #14
  %369 = and i1 %365, %368
  br i1 %369, label %370, label %381

370:                                              ; preds = %360
  %371 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %367, i64 0, i32 3, i32 0, i32 0, i32 0
  %372 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %371, align 8
  %373 = icmp eq %"class.blink::FloatingObjects"* %372, null
  br i1 %373, label %381, label %374

374:                                              ; preds = %370
  %375 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %372, i64 0, i32 0, i32 0, i32 2
  %376 = load i32, i32* %375, align 4
  %377 = icmp eq i32 %376, 0
  %378 = or i1 %173, %377
  br i1 %378, label %381, label %379

379:                                              ; preds = %374
  %380 = call i32 @_ZNK5blink9LayoutBox31ShrinkLogicalWidthToAvoidFloatsENS_10LayoutUnitES1_PKNS_15LayoutBlockFlowE(%"class.blink::LayoutBox"* %34, i32 %285, i32 %327, %"class.blink::LayoutBlockFlow"* nonnull %367) #14
  store i32 %380, i32* %19, align 4
  br label %381

381:                                              ; preds = %370, %338, %374, %379, %360, %358
  %382 = phi i32 [ %356, %370 ], [ %347, %338 ], [ %356, %374 ], [ %380, %379 ], [ %356, %360 ], [ %356, %358 ]
  %383 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %383)
  store i32 %181, i32* %20, align 4
  %384 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %384)
  %385 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %386 = load %"class.blink::TableLayoutAlgorithm"*, %"class.blink::TableLayoutAlgorithm"** %385, align 8
  %387 = bitcast %"class.blink::TableLayoutAlgorithm"* %386 to i32 (%"class.blink::TableLayoutAlgorithm"*)***
  %388 = load i32 (%"class.blink::TableLayoutAlgorithm"*)**, i32 (%"class.blink::TableLayoutAlgorithm"*)*** %387, align 8
  %389 = getelementptr inbounds i32 (%"class.blink::TableLayoutAlgorithm"*)*, i32 (%"class.blink::TableLayoutAlgorithm"*)** %388, i64 3
  %390 = load i32 (%"class.blink::TableLayoutAlgorithm"*)*, i32 (%"class.blink::TableLayoutAlgorithm"*)** %389, align 8
  %391 = call i32 %390(%"class.blink::TableLayoutAlgorithm"* %386) #14
  %392 = call i32 @_ZNK5blink11LayoutTable38BordersPaddingAndSpacingInRowDirectionEv(%"class.blink::LayoutTable"* %0)
  %393 = icmp slt i32 %392, 0
  %394 = select i1 %393, i32 -2147483648, i32 2147483647
  %395 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %391, i32 %392) #14
  %396 = extractvalue { i32, i1 } %395, 1
  %397 = extractvalue { i32, i1 } %395, 0
  %398 = select i1 %396, i32 %394, i32 %397, !prof !20
  store i32 %398, i32* %21, align 4
  %399 = icmp slt i32 %398, %181
  %400 = bitcast i32* %21 to %"class.blink::LayoutUnit"*
  %401 = bitcast i32* %20 to %"class.blink::LayoutUnit"*
  %402 = select i1 %399, %"class.blink::LayoutUnit"* %401, %"class.blink::LayoutUnit"* %400
  %403 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %402, i64 0, i32 0
  %404 = load i32, i32* %403, align 4
  store i32 %404, i32* %20, align 4
  %405 = icmp slt i32 %404, %382
  %406 = bitcast i32* %19 to %"class.blink::LayoutUnit"*
  %407 = select i1 %405, %"class.blink::LayoutUnit"* %401, %"class.blink::LayoutUnit"* %406
  %408 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %407, i64 0, i32 0
  %409 = load i32, i32* %408, align 4
  %410 = icmp slt i32 %409, -2147483584
  %411 = and i32 %409, -64
  %412 = select i1 %410, i32 -2147483648, i32 %411, !prof !20
  %413 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %414 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %413, i64 0, i32 0, i32 9
  %415 = bitcast [20 x i8]* %414 to i160*
  %416 = load i160, i160* %415, align 8
  %417 = and i160 %416, 15211807202738752817960438464512
  %418 = icmp eq i160 %417, 0
  br i1 %418, label %419, label %424

419:                                              ; preds = %381
  %420 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %421 = load i32, i32* %420, align 4
  %422 = icmp eq i32 %421, %412
  br i1 %422, label %429, label %423

423:                                              ; preds = %419
  store i32 %412, i32* %420, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %429

424:                                              ; preds = %381
  %425 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %426 = load i32, i32* %425, align 4
  %427 = icmp eq i32 %426, %412
  br i1 %427, label %429, label %428

428:                                              ; preds = %424
  store i32 %412, i32* %425, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %429

429:                                              ; preds = %419, %423, %424, %428
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %384)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %383)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %334)
  br label %430

430:                                              ; preds = %229, %225, %224, %220, %429
  %431 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %432 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %431, i64 0, i32 0, i32 9
  %433 = bitcast [20 x i8]* %432 to i160*
  %434 = load i160, i160* %433, align 8
  %435 = and i160 %434, 15211807202738752817960438464512
  %436 = icmp eq i160 %435, 0
  %437 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %431, i64 0, i32 0, i32 5, i32 0, i32 0
  %438 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %437, align 8
  %439 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %438, i64 0, i32 5
  %440 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %438, i64 0, i32 4
  %441 = select i1 %436, %"class.blink::Length"* %439, %"class.blink::Length"* %440
  %442 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %441, i64 0, i32 2
  %443 = load i8, i8* %442, align 1
  switch i8 %443, label %458 [
    i8 8, label %461
    i8 1, label %444
    i8 2, label %444
  ]

444:                                              ; preds = %430, %430
  %445 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %441, i64 0, i32 3
  %446 = load i8, i8* %445, align 2, !range !21
  %447 = icmp eq i8 %446, 0
  br i1 %447, label %451, label %448

448:                                              ; preds = %444
  %449 = bitcast %"class.blink::Length"* %441 to float*
  %450 = load float, float* %449, align 4
  br label %455

451:                                              ; preds = %444
  %452 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %441, i64 0, i32 0, i32 0
  %453 = load i32, i32* %452, align 4
  %454 = sitofp i32 %453 to float
  br label %455

455:                                              ; preds = %448, %451
  %456 = phi float [ %450, %448 ], [ %454, %451 ]
  %457 = fcmp olt float %456, 0.000000e+00
  br i1 %457, label %491, label %461

458:                                              ; preds = %430
  %459 = add i8 %443, -3
  %460 = icmp ult i8 %459, 5
  br i1 %460, label %461, label %491

461:                                              ; preds = %430, %455, %458
  %462 = call i32 @_ZNK5blink11LayoutTable39ConvertStyleLogicalWidthToComputedWidthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutTable"* %0, %"class.blink::Length"* dereferenceable(8) %441, i32 %157)
  %463 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %464 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %463, i64 0, i32 0, i32 9
  %465 = bitcast [20 x i8]* %464 to i160*
  %466 = load i160, i160* %465, align 8
  %467 = and i160 %466, 15211807202738752817960438464512
  %468 = icmp eq i160 %467, 0
  %469 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %470 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %471 = select i1 %468, i32* %469, i32* %470
  %472 = load i32, i32* %471, align 4
  %473 = icmp slt i32 %462, %472
  %474 = select i1 %473, i32 %462, i32 %472
  %475 = icmp slt i32 %474, -2147483584
  %476 = and i32 %474, -64
  %477 = select i1 %475, i32 -2147483648, i32 %476, !prof !20
  br i1 %468, label %478, label %482

478:                                              ; preds = %461
  %479 = load i32, i32* %469, align 4
  %480 = icmp eq i32 %479, %477
  br i1 %480, label %486, label %481

481:                                              ; preds = %478
  store i32 %477, i32* %469, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %486

482:                                              ; preds = %461
  %483 = load i32, i32* %470, align 4
  %484 = icmp eq i32 %483, %477
  br i1 %484, label %486, label %485

485:                                              ; preds = %482
  store i32 %477, i32* %470, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %486

486:                                              ; preds = %478, %481, %482, %485
  %487 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %488 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %487, i64 0, i32 0, i32 9
  %489 = bitcast [20 x i8]* %488 to i160*
  %490 = load i160, i160* %489, align 8
  br label %491

491:                                              ; preds = %455, %458, %486
  %492 = phi i160 [ %434, %458 ], [ %490, %486 ], [ %434, %455 ]
  %493 = and i160 %492, 15211807202738752817960438464512
  %494 = icmp eq i160 %493, 0
  %495 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %496 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %497 = select i1 %494, i32* %495, i32* %496
  %498 = load i32, i32* %497, align 4
  %499 = icmp slt i32 %498, %179
  %500 = select i1 %499, i32 %179, i32 %498
  %501 = icmp slt i32 %500, -2147483584
  %502 = and i32 %500, -64
  %503 = select i1 %501, i32 -2147483648, i32 %502, !prof !20
  br i1 %494, label %504, label %508

504:                                              ; preds = %491
  %505 = load i32, i32* %495, align 4
  %506 = icmp eq i32 %505, %503
  br i1 %506, label %512, label %507

507:                                              ; preds = %504
  store i32 %503, i32* %495, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %512

508:                                              ; preds = %491
  %509 = load i32, i32* %496, align 4
  %510 = icmp eq i32 %509, %503
  br i1 %510, label %512, label %511

511:                                              ; preds = %508
  store i32 %503, i32* %496, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %512

512:                                              ; preds = %504, %507, %508, %511
  %513 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %514 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %513, i64 0, i32 0, i32 9
  %515 = bitcast [20 x i8]* %514 to i160*
  %516 = load i160, i160* %515, align 8
  %517 = and i160 %516, 15211807202738752817960438464512
  %518 = icmp eq i160 %517, 0
  %519 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %513, i64 0, i32 0, i32 5, i32 0, i32 0
  %520 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %519, align 8
  %521 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %520, i64 0, i32 7
  %522 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %520, i64 0, i32 6
  %523 = select i1 %518, %"class.blink::Length"* %521, %"class.blink::Length"* %522
  %524 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %523, i64 0, i32 2
  %525 = load i8, i8* %524, align 1
  switch i8 %525, label %540 [
    i8 8, label %543
    i8 1, label %526
    i8 2, label %526
  ]

526:                                              ; preds = %512, %512
  %527 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %523, i64 0, i32 3
  %528 = load i8, i8* %527, align 2, !range !21
  %529 = icmp eq i8 %528, 0
  br i1 %529, label %533, label %530

530:                                              ; preds = %526
  %531 = bitcast %"class.blink::Length"* %523 to float*
  %532 = load float, float* %531, align 4
  br label %537

533:                                              ; preds = %526
  %534 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %523, i64 0, i32 0, i32 0
  %535 = load i32, i32* %534, align 4
  %536 = sitofp i32 %535 to float
  br label %537

537:                                              ; preds = %530, %533
  %538 = phi float [ %532, %530 ], [ %536, %533 ]
  %539 = fcmp olt float %538, 0.000000e+00
  br i1 %539, label %572, label %543

540:                                              ; preds = %512
  %541 = add i8 %525, -3
  %542 = icmp ult i8 %541, 5
  br i1 %542, label %543, label %572

543:                                              ; preds = %512, %537, %540
  %544 = call i32 @_ZNK5blink11LayoutTable39ConvertStyleLogicalWidthToComputedWidthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutTable"* %0, %"class.blink::Length"* dereferenceable(8) %523, i32 %157)
  %545 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %546 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %545, i64 0, i32 0, i32 9
  %547 = bitcast [20 x i8]* %546 to i160*
  %548 = load i160, i160* %547, align 8
  %549 = and i160 %548, 15211807202738752817960438464512
  %550 = icmp eq i160 %549, 0
  %551 = select i1 %550, i32* %495, i32* %496
  %552 = load i32, i32* %551, align 4
  %553 = icmp slt i32 %552, %544
  %554 = select i1 %553, i32 %544, i32 %552
  %555 = icmp slt i32 %554, -2147483584
  %556 = and i32 %554, -64
  %557 = select i1 %555, i32 -2147483648, i32 %556, !prof !20
  br i1 %550, label %558, label %562

558:                                              ; preds = %543
  %559 = load i32, i32* %495, align 4
  %560 = icmp eq i32 %559, %557
  br i1 %560, label %566, label %561

561:                                              ; preds = %558
  store i32 %557, i32* %495, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %566

562:                                              ; preds = %543
  %563 = load i32, i32* %496, align 4
  %564 = icmp eq i32 %563, %557
  br i1 %564, label %566, label %565

565:                                              ; preds = %562
  store i32 %557, i32* %496, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %566

566:                                              ; preds = %558, %561, %562, %565
  %567 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %568 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %567, i64 0, i32 0, i32 9
  %569 = bitcast [20 x i8]* %568 to i160*
  %570 = load i160, i160* %569, align 8
  %571 = and i160 %570, 15211807202738752817960438464512
  br label %572

572:                                              ; preds = %537, %566, %540
  %573 = phi i160 [ %571, %566 ], [ %517, %540 ], [ %517, %537 ]
  %574 = phi i160 [ %570, %566 ], [ %516, %540 ], [ %516, %537 ]
  %575 = phi %"class.blink::ComputedStyle"* [ %567, %566 ], [ %513, %540 ], [ %513, %537 ]
  %576 = bitcast %"struct.blink::LayoutBox::ComputedMarginValues"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %576) #14
  %577 = getelementptr inbounds %"struct.blink::LayoutBox::ComputedMarginValues", %"struct.blink::LayoutBox::ComputedMarginValues"* %22, i64 0, i32 2
  %578 = getelementptr inbounds %"struct.blink::LayoutBox::ComputedMarginValues", %"struct.blink::LayoutBox::ComputedMarginValues"* %22, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %576, i8 0, i64 16, i1 false) #14
  %579 = icmp eq i160 %573, 0
  %580 = select i1 %579, i32* %495, i32* %496
  %581 = load i32, i32* %580, align 4
  %582 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %582)
  %583 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %583)
  %584 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %584)
  %585 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %585)
  %586 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %575, i64 0, i32 0, i32 7, i32 0, i32 0
  %587 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %586, align 8, !noalias !34
  %588 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %587, i64 0, i32 12
  %589 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %587, i64 0, i32 11
  %590 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %587, i64 0, i32 9
  %591 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %587, i64 0, i32 10
  store %"class.blink::Length"* %588, %"class.blink::Length"** %6, align 8, !alias.scope !34
  store %"class.blink::Length"* %589, %"class.blink::Length"** %7, align 8, !alias.scope !34
  store %"class.blink::Length"* %590, %"class.blink::Length"** %8, align 8, !alias.scope !34
  store %"class.blink::Length"* %591, %"class.blink::Length"** %9, align 8, !alias.scope !34
  %592 = and i160 %574, 41538374868278621028243970633760768
  %593 = icmp eq i160 %592, 0
  %594 = select i1 %593, %"class.blink::Length"** %9, %"class.blink::Length"** %7
  %595 = select i1 %593, %"class.blink::Length"** %6, %"class.blink::Length"** %8
  %596 = select i1 %579, %"class.blink::Length"** %594, %"class.blink::Length"** %595
  %597 = bitcast %"class.blink::Length"** %596 to i64**
  %598 = load i64*, i64** %597, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %582)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %583)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %584)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %585)
  %599 = load i64, i64* %598, align 4
  store i64 %599, i64* %23, align 8
  %600 = and i64 %599, 280375465082880
  %601 = icmp eq i64 %600, 8796093022208
  br i1 %601, label %602, label %611

602:                                              ; preds = %572
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %24) #14
  %603 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %604 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %603, i64 0, i32 0, i32 9
  %605 = bitcast [20 x i8]* %604 to i160*
  %606 = load i160, i160* %605, align 8, !noalias !37
  %607 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %603, i64 0, i32 0, i32 7, i32 0, i32 0
  %608 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %607, align 8, !noalias !37
  %609 = and i160 %606, 15211807202738752817960438464512
  %610 = and i160 %606, 41538374868278621028243970633760768
  br label %611

611:                                              ; preds = %572, %602
  %612 = phi i160 [ %592, %572 ], [ %610, %602 ]
  %613 = phi i160 [ %573, %572 ], [ %609, %602 ]
  %614 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %587, %572 ], [ %608, %602 ]
  %615 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %615)
  %616 = bitcast %"class.blink::Length"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %616)
  %617 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %617)
  %618 = bitcast %"class.blink::Length"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %618)
  %619 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %614, i64 0, i32 12
  %620 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %614, i64 0, i32 11
  %621 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %614, i64 0, i32 9
  %622 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %614, i64 0, i32 10
  store %"class.blink::Length"* %619, %"class.blink::Length"** %14, align 8, !alias.scope !37
  store %"class.blink::Length"* %620, %"class.blink::Length"** %15, align 8, !alias.scope !37
  store %"class.blink::Length"* %621, %"class.blink::Length"** %16, align 8, !alias.scope !37
  store %"class.blink::Length"* %622, %"class.blink::Length"** %17, align 8, !alias.scope !37
  %623 = icmp eq i160 %613, 0
  %624 = icmp eq i160 %612, 0
  %625 = select i1 %624, %"class.blink::Length"** %15, %"class.blink::Length"** %17
  %626 = select i1 %624, %"class.blink::Length"** %16, %"class.blink::Length"** %14
  %627 = select i1 %623, %"class.blink::Length"** %625, %"class.blink::Length"** %626
  %628 = bitcast %"class.blink::Length"** %627 to i64**
  %629 = load i64*, i64** %628, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %615)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %616)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %617)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %618)
  %630 = load i64, i64* %629, align 4
  store i64 %630, i64* %25, align 8
  %631 = and i64 %630, 280375465082880
  %632 = icmp eq i64 %631, 8796093022208
  br i1 %632, label %633, label %634

633:                                              ; preds = %611
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %26) #14
  br label %634

634:                                              ; preds = %611, %633
  call void @_ZNK5blink9LayoutBox26ComputeMarginsForDirectionENS_15MarginDirectionEPKNS_11LayoutBlockENS_10LayoutUnitES5_RS5_S6_NS_6LengthES7_(%"class.blink::LayoutBox"* %34, i32 1, %"class.blink::LayoutBlock"* %156, i32 %157, i32 %581, %"class.blink::LayoutUnit"* dereferenceable(4) %577, %"class.blink::LayoutUnit"* dereferenceable(4) %578, %"class.blink::Length"* nonnull %24, %"class.blink::Length"* nonnull %26) #14
  %635 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %26, i64 0, i32 2
  %636 = load i8, i8* %635, align 1
  %637 = icmp eq i8 %636, 8
  br i1 %637, label %638, label %639

638:                                              ; preds = %634
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %26) #14
  br label %639

639:                                              ; preds = %634, %638
  %640 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 2
  %641 = load i8, i8* %640, align 1
  %642 = icmp eq i8 %641, 8
  br i1 %642, label %643, label %644

643:                                              ; preds = %639
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %24) #14
  br label %644

644:                                              ; preds = %639, %643
  %645 = getelementptr inbounds %"struct.blink::LayoutBox::ComputedMarginValues", %"struct.blink::LayoutBox::ComputedMarginValues"* %22, i64 0, i32 2, i32 0
  %646 = load i32, i32* %645, align 4
  %647 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %648 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %647, i64 0, i32 0, i32 9
  %649 = bitcast [20 x i8]* %648 to i160*
  %650 = load i160, i160* %649, align 8, !noalias !40
  %651 = bitcast %"class.blink::LayoutTable"* %0 to i8*
  %652 = and i160 %650, 15211807202738752817960438464512
  %653 = icmp eq i160 %652, 0
  %654 = and i160 %650, 41538374868278621028243970633760768
  %655 = icmp eq i160 %654, 0
  %656 = select i1 %655, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }
  %657 = select i1 %655, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }
  %658 = select i1 %653, { i64, i64 } %657, { i64, i64 } %656
  %659 = select i1 %653, { i64, i64 } %657, { i64, i64 } %656
  %660 = extractvalue { i64, i64 } %658, 0
  %661 = extractvalue { i64, i64 } %659, 1
  %662 = getelementptr inbounds i8, i8* %651, i64 %661
  %663 = bitcast i8* %662 to %"class.blink::LayoutBox"*
  %664 = and i64 %660, 1
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %673, label %666

666:                                              ; preds = %644
  %667 = bitcast i8* %662 to i8**
  %668 = load i8*, i8** %667, align 8
  %669 = add i64 %660, -1
  %670 = getelementptr i8, i8* %668, i64 %669
  %671 = bitcast i8* %670 to void (%"class.blink::LayoutBox"*, i32)**
  %672 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %671, align 8
  br label %675

673:                                              ; preds = %644
  %674 = inttoptr i64 %660 to void (%"class.blink::LayoutBox"*, i32)*
  br label %675

675:                                              ; preds = %666, %673
  %676 = phi void (%"class.blink::LayoutBox"*, i32)* [ %672, %666 ], [ %674, %673 ]
  call void %676(%"class.blink::LayoutBox"* %663, i32 %646) #14
  %677 = getelementptr inbounds %"struct.blink::LayoutBox::ComputedMarginValues", %"struct.blink::LayoutBox::ComputedMarginValues"* %22, i64 0, i32 3, i32 0
  %678 = load i32, i32* %677, align 4
  %679 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %680 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %679, i64 0, i32 0, i32 9
  %681 = bitcast [20 x i8]* %680 to i160*
  %682 = load i160, i160* %681, align 8, !noalias !43
  %683 = and i160 %682, 15211807202738752817960438464512
  %684 = icmp eq i160 %683, 0
  %685 = and i160 %682, 41538374868278621028243970633760768
  %686 = icmp eq i160 %685, 0
  %687 = select i1 %686, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }
  %688 = select i1 %686, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }
  %689 = select i1 %684, { i64, i64 } %688, { i64, i64 } %687
  %690 = select i1 %684, { i64, i64 } %688, { i64, i64 } %687
  %691 = extractvalue { i64, i64 } %689, 0
  %692 = extractvalue { i64, i64 } %690, 1
  %693 = getelementptr inbounds i8, i8* %651, i64 %692
  %694 = bitcast i8* %693 to %"class.blink::LayoutBox"*
  %695 = and i64 %691, 1
  %696 = icmp eq i64 %695, 0
  br i1 %696, label %704, label %697

697:                                              ; preds = %675
  %698 = bitcast i8* %693 to i8**
  %699 = load i8*, i8** %698, align 8
  %700 = add i64 %691, -1
  %701 = getelementptr i8, i8* %699, i64 %700
  %702 = bitcast i8* %701 to void (%"class.blink::LayoutBox"*, i32)**
  %703 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %702, align 8
  br label %706

704:                                              ; preds = %675
  %705 = inttoptr i64 %691 to void (%"class.blink::LayoutBox"*, i32)*
  br label %706

706:                                              ; preds = %697, %704
  %707 = phi void (%"class.blink::LayoutBox"*, i32)* [ %703, %697 ], [ %705, %704 ]
  call void %707(%"class.blink::LayoutBox"* %694, i32 %678) #14
  %708 = call zeroext i1 @_ZNK5blink9LayoutBox23HasOverrideLogicalWidthEv(%"class.blink::LayoutBox"* %34) #14
  br i1 %708, label %709, label %725

709:                                              ; preds = %706
  %710 = call i32 @_ZNK5blink9LayoutBox20OverrideLogicalWidthEv(%"class.blink::LayoutBox"* %34) #14
  %711 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %166, align 8
  %712 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %711, i64 0, i32 0, i32 9
  %713 = bitcast [20 x i8]* %712 to i160*
  %714 = load i160, i160* %713, align 8
  %715 = and i160 %714, 15211807202738752817960438464512
  %716 = icmp eq i160 %715, 0
  br i1 %716, label %717, label %721

717:                                              ; preds = %709
  %718 = load i32, i32* %495, align 4
  %719 = icmp eq i32 %718, %710
  br i1 %719, label %725, label %720

720:                                              ; preds = %717
  store i32 %710, i32* %495, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %725

721:                                              ; preds = %709
  %722 = load i32, i32* %496, align 4
  %723 = icmp eq i32 %722, %710
  br i1 %723, label %725, label %724

724:                                              ; preds = %721
  store i32 %710, i32* %496, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %34) #14
  br label %725

725:                                              ; preds = %724, %721, %720, %717, %706
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %576) #14
  br label %726

726:                                              ; preds = %725, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink11LayoutTable22RecalcSectionsIfNeededEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 8
  %4 = trunc i16 %3 to i8
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0)
  br label %7

7:                                                ; preds = %6, %1
  ret void
}

declare void @_ZN5blink9LayoutBox42UpdateCachedIntrinsicLogicalWidthsIfNeededEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox18UpdateLogicalWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox41PerpendicularContainingBlockLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink11LayoutTable22PreferredLogicalWidthsEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.blink::MinMaxSizes"*
  %6 = alloca i32, align 4
  %7 = bitcast i64* %4 to %"class.blink::LayoutUnit"*
  %8 = bitcast i64* %4 to i32*
  %9 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %5, i64 0, i32 1
  %10 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZNK5blink9LayoutBox22IntrinsicLogicalWidthsENS_15MinMaxSizesTypeE(%"class.blink::LayoutBox"* %11, i32 0) #14
  store i64 %12, i64* %4, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %14 = load %"class.blink::TableLayoutAlgorithm"*, %"class.blink::TableLayoutAlgorithm"** %13, align 8
  %15 = bitcast %"class.blink::TableLayoutAlgorithm"* %14 to void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)***
  %16 = load void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)**, void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)*, void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)** %16, i64 4
  %18 = load void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)*, void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)** %17, align 8
  call void %18(%"class.blink::TableLayoutAlgorithm"* %14, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %7, %"class.blink::LayoutUnit"* dereferenceable(4) %9) #14
  %19 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::LayoutTableCaption"**, %"class.blink::LayoutTableCaption"*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %20, i64 %23
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %1
  %27 = bitcast i32* %2 to i8*
  %28 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  br label %45

29:                                               ; preds = %45, %1
  %30 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 9
  %33 = bitcast [20 x i8]* %32 to i160*
  %34 = load i160, i160* %33, align 8
  %35 = and i160 %34, 15211807202738752817960438464512
  %36 = icmp eq i160 %35, 0
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 5, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %38, i64 0, i32 7
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %38, i64 0, i32 6
  %41 = select i1 %36, %"class.blink::Length"* %39, %"class.blink::Length"* %40
  %42 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %41, i64 0, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 2
  br i1 %44, label %67, label %104

45:                                               ; preds = %26, %45
  %46 = phi %"class.blink::LayoutTableCaption"** [ %20, %26 ], [ %65, %45 ]
  %47 = bitcast %"class.blink::LayoutTableCaption"** %46 to %"class.blink::LayoutBlock"**
  %48 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %47, align 8
  %49 = bitcast %"class.blink::LayoutBlock"* %48 to i64 (%"class.blink::LayoutBlock"*)***
  %50 = load i64 (%"class.blink::LayoutBlock"*)**, i64 (%"class.blink::LayoutBlock"*)*** %49, align 8
  %51 = getelementptr inbounds i64 (%"class.blink::LayoutBlock"*)*, i64 (%"class.blink::LayoutBlock"*)** %50, i64 69
  %52 = load i64 (%"class.blink::LayoutBlock"*)*, i64 (%"class.blink::LayoutBlock"*)** %51, align 8
  %53 = call i64 %52(%"class.blink::LayoutBlock"* %48) #14
  %54 = trunc i64 %53 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27)
  store i32 %54, i32* %2, align 4
  %55 = load i32, i32* %8, align 8
  %56 = icmp slt i32 %55, %54
  %57 = select i1 %56, %"class.blink::LayoutUnit"* %28, %"class.blink::LayoutUnit"* %7
  %58 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %8, align 8
  %60 = load i32, i32* %10, align 4
  %61 = icmp slt i32 %60, %54
  %62 = select i1 %61, %"class.blink::LayoutUnit"* %28, %"class.blink::LayoutUnit"* %9
  %63 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %62, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27)
  %65 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %46, i64 1
  %66 = icmp eq %"class.blink::LayoutTableCaption"** %65, %24
  br i1 %66, label %29, label %45

67:                                               ; preds = %29
  %68 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %41, i64 0, i32 3
  %69 = load i8, i8* %68, align 2, !range !21
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.blink::Length"* %41 to float*
  %73 = load float, float* %72, align 4
  %74 = bitcast float %73 to i32
  br label %80

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %41, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = sitofp i32 %77 to float
  %79 = bitcast i32 %77 to float
  br label %80

80:                                               ; preds = %71, %75
  %81 = phi i32 [ %74, %71 ], [ %77, %75 ]
  %82 = phi float [ %73, %71 ], [ %79, %75 ]
  %83 = phi float [ %73, %71 ], [ %78, %75 ]
  %84 = fcmp ogt float %83, 0.000000e+00
  br i1 %84, label %85, label %104

85:                                               ; preds = %80
  %86 = sitofp i32 %81 to float
  %87 = select i1 %70, float %86, float %82
  %88 = call i32 @_ZNK5blink9LayoutBox39AdjustBorderBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"* %11, float %87) #14
  %89 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89)
  store i32 %88, i32* %3, align 4
  %90 = load i32, i32* %8, align 8
  %91 = icmp slt i32 %90, %88
  %92 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %93 = select i1 %91, %"class.blink::LayoutUnit"* %92, %"class.blink::LayoutUnit"* %7
  %94 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %93, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  store i32 %95, i32* %8, align 8
  %96 = load i32, i32* %10, align 4
  %97 = icmp slt i32 %96, %88
  %98 = select i1 %97, %"class.blink::LayoutUnit"* %92, %"class.blink::LayoutUnit"* %9
  %99 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %98, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  store i32 %100, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89)
  %101 = load i160, i160* %33, align 8
  %102 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %37, align 8
  %103 = and i160 %101, 15211807202738752817960438464512
  br label %104

104:                                              ; preds = %85, %80, %29
  %105 = phi i160 [ %103, %85 ], [ %35, %80 ], [ %35, %29 ]
  %106 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %102, %85 ], [ %38, %80 ], [ %38, %29 ]
  %107 = icmp eq i160 %105, 0
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %106, i64 0, i32 5
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %106, i64 0, i32 4
  %110 = select i1 %107, %"class.blink::Length"* %108, %"class.blink::Length"* %109
  %111 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %110, i64 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 2
  br i1 %113, label %116, label %114

114:                                              ; preds = %104
  %115 = load i32, i32* %10, align 4
  br label %137

116:                                              ; preds = %104
  %117 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117)
  %118 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %110, i64 0, i32 3
  %119 = load i8, i8* %118, align 2, !range !21
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %116
  %122 = bitcast %"class.blink::Length"* %110 to float*
  %123 = load float, float* %122, align 4
  br label %128

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %110, i64 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = sitofp i32 %126 to float
  br label %128

128:                                              ; preds = %121, %124
  %129 = phi float [ %123, %121 ], [ %127, %124 ]
  %130 = call i32 @_ZNK5blink9LayoutBox39AdjustBorderBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"* %11, float %129) #14
  store i32 %130, i32* %6, align 4
  %131 = load i32, i32* %10, align 4
  %132 = icmp slt i32 %130, %131
  %133 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %134 = select i1 %132, %"class.blink::LayoutUnit"* %133, %"class.blink::LayoutUnit"* %9
  %135 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %134, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  store i32 %136, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117)
  br label %137

137:                                              ; preds = %114, %128
  %138 = phi i32 [ %115, %114 ], [ %136, %128 ]
  %139 = load i32, i32* %8, align 8
  %140 = icmp slt i32 %139, %138
  %141 = select i1 %140, %"class.blink::LayoutUnit"* %9, %"class.blink::LayoutUnit"* %7
  %142 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %141, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  store i32 %143, i32* %10, align 4
  %144 = load i64, i64* %4, align 8
  ret i64 %144
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable39ConvertStyleLogicalWidthToComputedWidthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutTable"*, %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = add i8 %5, -3
  %7 = icmp ult i8 %6, 5
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %10 = tail call i32 @_ZNK5blink9LayoutBox33ComputeIntrinsicLogicalWidthUsingERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %9, %"class.blink::Length"* dereferenceable(8) %1, i32 %2) #14
  br label %246

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %13 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %12 to i96*
  %14 = load i96, i96* %13, align 4
  %15 = and i96 %14, 16777216
  %16 = icmp eq i96 %15, 0
  br i1 %16, label %17, label %38

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 48
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 1, i32 2
  %31 = bitcast %"class.blink::Member.318"* %30 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br i1 %37, label %209, label %38

38:                                               ; preds = %11, %21, %17, %26
  switch i8 %5, label %234 [
    i8 8, label %53
    i8 1, label %39
    i8 2, label %39
  ]

39:                                               ; preds = %38, %38
  %40 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %41 = load i8, i8* %40, align 2, !range !21
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.blink::Length"* %1 to float*
  %45 = load float, float* %44, align 4
  br label %50

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = sitofp i32 %48 to float
  br label %50

50:                                               ; preds = %43, %46
  %51 = phi float [ %45, %43 ], [ %49, %46 ]
  %52 = fcmp ogt float %51, 0.000000e+00
  br i1 %52, label %53, label %209

53:                                               ; preds = %38, %50
  %54 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %55 = bitcast %"class.blink::ComputedStyle"** %54 to %"class.blink::ComputedStyleBase"**
  %56 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %56, i64 0, i32 5, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %58, i64 0, i32 11
  %60 = load i8, i8* %59, align 4
  %61 = and i8 %60, 2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %209, label %63

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %56, i64 0, i32 9
  %65 = bitcast [20 x i8]* %64 to i160*
  %66 = load i160, i160* %65, align 8, !noalias !46
  %67 = bitcast %"class.blink::LayoutTable"* %0 to i8*
  %68 = and i160 %66, 15211807202738752817960438464512
  %69 = icmp eq i160 %68, 0
  %70 = and i160 %66, 41538374868278621028243970633760768
  %71 = icmp eq i160 %70, 0
  %72 = select i1 %71, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %73 = select i1 %71, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %74 = select i1 %69, { i64, i64 } %73, { i64, i64 } %72
  %75 = select i1 %69, { i64, i64 } %73, { i64, i64 } %72
  %76 = extractvalue { i64, i64 } %74, 0
  %77 = extractvalue { i64, i64 } %75, 1
  %78 = getelementptr inbounds i8, i8* %67, i64 %77
  %79 = bitcast i8* %78 to %"class.blink::LayoutBoxModelObject"*
  %80 = and i64 %76, 1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %63
  %83 = bitcast i8* %78 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = add i64 %76, -1
  %86 = getelementptr i8, i8* %84, i64 %85
  %87 = bitcast i8* %86 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %88 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %87, align 8
  br label %91

89:                                               ; preds = %63
  %90 = inttoptr i64 %76 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %91

91:                                               ; preds = %82, %89
  %92 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %88, %82 ], [ %90, %89 ]
  %93 = tail call i32 %92(%"class.blink::LayoutBoxModelObject"* %79) #14
  %94 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %54, align 8, !noalias !49
  %95 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %94, i64 0, i32 0, i32 9
  %96 = bitcast [20 x i8]* %95 to i160*
  %97 = load i160, i160* %96, align 8, !noalias !49
  %98 = and i160 %97, 15211807202738752817960438464512
  %99 = icmp eq i160 %98, 0
  %100 = and i160 %97, 41538374868278621028243970633760768
  %101 = icmp eq i160 %100, 0
  %102 = select i1 %101, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %103 = select i1 %101, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %104 = select i1 %99, { i64, i64 } %103, { i64, i64 } %102
  %105 = select i1 %99, { i64, i64 } %103, { i64, i64 } %102
  %106 = extractvalue { i64, i64 } %104, 0
  %107 = extractvalue { i64, i64 } %105, 1
  %108 = getelementptr inbounds i8, i8* %67, i64 %107
  %109 = bitcast i8* %108 to %"class.blink::LayoutBoxModelObject"*
  %110 = and i64 %106, 1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %119, label %112

112:                                              ; preds = %91
  %113 = bitcast i8* %108 to i8**
  %114 = load i8*, i8** %113, align 8
  %115 = add i64 %106, -1
  %116 = getelementptr i8, i8* %114, i64 %115
  %117 = bitcast i8* %116 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %118 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %117, align 8
  br label %121

119:                                              ; preds = %91
  %120 = inttoptr i64 %106 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %121

121:                                              ; preds = %112, %119
  %122 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %118, %112 ], [ %120, %119 ]
  %123 = tail call i32 %122(%"class.blink::LayoutBoxModelObject"* %109) #14
  %124 = icmp slt i32 %123, 0
  %125 = select i1 %124, i32 -2147483648, i32 2147483647
  %126 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %93, i32 %123) #14
  %127 = extractvalue { i32, i1 } %126, 1
  %128 = extractvalue { i32, i1 } %126, 0
  %129 = select i1 %127, i32 %125, i32 %128, !prof !20
  %130 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %55, align 8
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %130, i64 0, i32 9
  %132 = bitcast [20 x i8]* %131 to i160*
  %133 = load i160, i160* %132, align 8
  %134 = and i160 %133, 81129638414606681695789005144064
  %135 = icmp eq i160 %134, 0
  br i1 %135, label %201, label %136

136:                                              ; preds = %121
  %137 = and i160 %133, 15211807202738752817960438464512
  %138 = icmp eq i160 %137, 0
  %139 = and i160 %133, 41538374868278621028243970633760768
  %140 = icmp eq i160 %139, 0
  %141 = select i1 %140, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %142 = select i1 %140, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %143 = select i1 %138, { i64, i64 } %142, { i64, i64 } %141
  %144 = select i1 %138, { i64, i64 } %142, { i64, i64 } %141
  %145 = extractvalue { i64, i64 } %143, 0
  %146 = extractvalue { i64, i64 } %144, 1
  %147 = getelementptr inbounds i8, i8* %67, i64 %146
  %148 = bitcast i8* %147 to %"class.blink::LayoutBoxModelObject"*
  %149 = and i64 %145, 1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %158, label %151

151:                                              ; preds = %136
  %152 = bitcast i8* %147 to i8**
  %153 = load i8*, i8** %152, align 8
  %154 = add i64 %145, -1
  %155 = getelementptr i8, i8* %153, i64 %154
  %156 = bitcast i8* %155 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %157 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %156, align 8
  br label %160

158:                                              ; preds = %136
  %159 = inttoptr i64 %145 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %160

160:                                              ; preds = %151, %158
  %161 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %157, %151 ], [ %159, %158 ]
  %162 = tail call i32 %161(%"class.blink::LayoutBoxModelObject"* %148) #14
  %163 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %54, align 8, !noalias !52
  %164 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %163, i64 0, i32 0, i32 9
  %165 = bitcast [20 x i8]* %164 to i160*
  %166 = load i160, i160* %165, align 8, !noalias !52
  %167 = and i160 %166, 15211807202738752817960438464512
  %168 = icmp eq i160 %167, 0
  %169 = and i160 %166, 41538374868278621028243970633760768
  %170 = icmp eq i160 %169, 0
  %171 = select i1 %170, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %172 = select i1 %170, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %173 = select i1 %168, { i64, i64 } %172, { i64, i64 } %171
  %174 = select i1 %168, { i64, i64 } %172, { i64, i64 } %171
  %175 = extractvalue { i64, i64 } %173, 0
  %176 = extractvalue { i64, i64 } %174, 1
  %177 = getelementptr inbounds i8, i8* %67, i64 %176
  %178 = bitcast i8* %177 to %"class.blink::LayoutBoxModelObject"*
  %179 = and i64 %175, 1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %188, label %181

181:                                              ; preds = %160
  %182 = bitcast i8* %177 to i8**
  %183 = load i8*, i8** %182, align 8
  %184 = add i64 %175, -1
  %185 = getelementptr i8, i8* %183, i64 %184
  %186 = bitcast i8* %185 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %187 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %186, align 8
  br label %190

188:                                              ; preds = %160
  %189 = inttoptr i64 %175 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %187, %181 ], [ %189, %188 ]
  %192 = tail call i32 %191(%"class.blink::LayoutBoxModelObject"* %178) #14
  %193 = icmp slt i32 %192, 0
  %194 = select i1 %193, i32 -2147483648, i32 2147483647
  %195 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %162, i32 %192) #14
  %196 = extractvalue { i32, i1 } %195, 1
  %197 = extractvalue { i32, i1 } %195, 0
  %198 = select i1 %196, i32 %194, i32 %197, !prof !20
  %199 = icmp slt i32 %198, 0
  %200 = select i1 %199, i32 -2147483648, i32 2147483647
  br label %201

201:                                              ; preds = %190, %121
  %202 = phi i32 [ 0, %121 ], [ %198, %190 ]
  %203 = phi i32 [ 2147483647, %121 ], [ %200, %190 ]
  %204 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %129, i32 %202) #14
  %205 = extractvalue { i32, i1 } %204, 1
  %206 = extractvalue { i32, i1 } %204, 0
  %207 = select i1 %205, i32 %203, i32 %206, !prof !20
  %208 = load i8, i8* %4, align 1
  br label %209

209:                                              ; preds = %53, %26, %201, %50
  %210 = phi i8 [ %5, %26 ], [ %208, %201 ], [ %5, %53 ], [ %5, %50 ]
  %211 = phi i32 [ 0, %26 ], [ %207, %201 ], [ 0, %53 ], [ 0, %50 ]
  %212 = icmp eq i8 %210, 2
  br i1 %212, label %213, label %234, !prof !2

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %215 = load i8, i8* %214, align 2, !range !21
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %220, label %217

217:                                              ; preds = %213
  %218 = bitcast %"class.blink::Length"* %1 to float*
  %219 = load float, float* %218, align 4
  br label %224

220:                                              ; preds = %213
  %221 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %222 = load i32, i32* %221, align 4
  %223 = sitofp i32 %222 to float
  br label %224

224:                                              ; preds = %220, %217
  %225 = phi float [ %219, %217 ], [ %223, %220 ]
  %226 = fmul float %225, 6.400000e+01
  %227 = fcmp ult float %226, 0xC1E0000000000000
  %228 = fcmp ugt float %226, 0x41DFFFFFE0000000
  %229 = fcmp ogt float %226, 0xC1E0000000000000
  %230 = select i1 %229, float %226, float 0xC1E0000000000000
  %231 = fptosi float %230 to i32
  %232 = select i1 %227, i32 0, i32 2147483647
  %233 = select i1 %228, i32 %232, i32 %231
  br label %237

234:                                              ; preds = %38, %209
  %235 = phi i32 [ %211, %209 ], [ 0, %38 ]
  %236 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %1, i32 %2) #14
  br label %237

237:                                              ; preds = %224, %234
  %238 = phi i32 [ %211, %224 ], [ %235, %234 ]
  %239 = phi i32 [ %233, %224 ], [ %236, %234 ]
  %240 = icmp slt i32 %238, 0
  %241 = select i1 %240, i32 -2147483648, i32 2147483647
  %242 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %239, i32 %238) #14
  %243 = extractvalue { i32, i1 } %242, 1
  %244 = extractvalue { i32, i1 } %242, 0
  %245 = select i1 %243, i32 %241, i32 %244, !prof !20
  br label %246

246:                                              ; preds = %237, %8
  %247 = phi i32 [ %10, %8 ], [ %245, %237 ]
  ret i32 %247
}

declare i32 @_ZNK5blink9LayoutBox27OverrideAvailableInlineSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox19ShrinkToAvoidFloatsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox31ShrinkLogicalWidthToAvoidFloatsENS_10LayoutUnitES1_PKNS_15LayoutBlockFlowE(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBlockFlow"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutTable38BordersPaddingAndSpacingInRowDirectionEv(%"class.blink::LayoutTable"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !55
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !55
  %7 = bitcast %"class.blink::LayoutTable"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #14
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !58
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8, !noalias !58
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  %40 = and i160 %37, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = select i1 %41, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %43 = select i1 %41, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %44 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %45 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %46 = extractvalue { i64, i64 } %44, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  %49 = bitcast i8* %48 to %"class.blink::LayoutBoxModelObject"*
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %31
  %53 = bitcast i8* %48 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = add i64 %46, -1
  %56 = getelementptr i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  br label %61

59:                                               ; preds = %31
  %60 = inttoptr i64 %46 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %61

61:                                               ; preds = %52, %59
  %62 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %58, %52 ], [ %60, %59 ]
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %49) #14
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %63) #14
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !20
  %70 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %71 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %71, i64 0, i32 9
  %73 = bitcast [20 x i8]* %72 to i160*
  %74 = load i160, i160* %73, align 8
  %75 = and i160 %74, 81129638414606681695789005144064
  %76 = icmp eq i160 %75, 0
  br i1 %76, label %178, label %77

77:                                               ; preds = %61
  %78 = and i160 %74, 15211807202738752817960438464512
  %79 = icmp eq i160 %78, 0
  %80 = and i160 %74, 41538374868278621028243970633760768
  %81 = icmp eq i160 %80, 0
  %82 = select i1 %81, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %83 = select i1 %81, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %84 = select i1 %79, { i64, i64 } %83, { i64, i64 } %82
  %85 = select i1 %79, { i64, i64 } %83, { i64, i64 } %82
  %86 = extractvalue { i64, i64 } %84, 0
  %87 = extractvalue { i64, i64 } %85, 1
  %88 = getelementptr inbounds i8, i8* %7, i64 %87
  %89 = bitcast i8* %88 to %"class.blink::LayoutBoxModelObject"*
  %90 = and i64 %86, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %99, label %92

92:                                               ; preds = %77
  %93 = bitcast i8* %88 to i8**
  %94 = load i8*, i8** %93, align 8
  %95 = add i64 %86, -1
  %96 = getelementptr i8, i8* %94, i64 %95
  %97 = bitcast i8* %96 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %98 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %97, align 8
  br label %101

99:                                               ; preds = %77
  %100 = inttoptr i64 %86 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %101

101:                                              ; preds = %92, %99
  %102 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %98, %92 ], [ %100, %99 ]
  %103 = tail call i32 %102(%"class.blink::LayoutBoxModelObject"* %89) #14
  %104 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !61
  %105 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %104, i64 0, i32 0, i32 9
  %106 = bitcast [20 x i8]* %105 to i160*
  %107 = load i160, i160* %106, align 8, !noalias !61
  %108 = and i160 %107, 15211807202738752817960438464512
  %109 = icmp eq i160 %108, 0
  %110 = and i160 %107, 41538374868278621028243970633760768
  %111 = icmp eq i160 %110, 0
  %112 = select i1 %111, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %113 = select i1 %111, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %114 = select i1 %109, { i64, i64 } %113, { i64, i64 } %112
  %115 = select i1 %109, { i64, i64 } %113, { i64, i64 } %112
  %116 = extractvalue { i64, i64 } %114, 0
  %117 = extractvalue { i64, i64 } %115, 1
  %118 = getelementptr inbounds i8, i8* %7, i64 %117
  %119 = bitcast i8* %118 to %"class.blink::LayoutBoxModelObject"*
  %120 = and i64 %116, 1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %129, label %122

122:                                              ; preds = %101
  %123 = bitcast i8* %118 to i8**
  %124 = load i8*, i8** %123, align 8
  %125 = add i64 %116, -1
  %126 = getelementptr i8, i8* %124, i64 %125
  %127 = bitcast i8* %126 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %128 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %127, align 8
  br label %131

129:                                              ; preds = %101
  %130 = inttoptr i64 %116 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %131

131:                                              ; preds = %122, %129
  %132 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %128, %122 ], [ %130, %129 ]
  %133 = tail call i32 %132(%"class.blink::LayoutBoxModelObject"* %119) #14
  %134 = icmp slt i32 %133, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 %133) #14
  %137 = extractvalue { i32, i1 } %136, 1
  %138 = extractvalue { i32, i1 } %136, 0
  %139 = select i1 %137, i32 %135, i32 %138, !prof !20
  %140 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %169, label %143

143:                                              ; preds = %131
  %144 = add i32 %141, 1
  %145 = icmp ugt i32 %144, 33554430
  %146 = shl i32 %144, 6
  %147 = select i1 %145, i32 2147483647, i32 %146
  %148 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 12
  %149 = load i16, i16* %148, align 8
  %150 = sext i16 %149 to i32
  %151 = shl nsw i32 %150, 6
  %152 = sext i32 %147 to i64
  %153 = sext i32 %151 to i64
  %154 = mul nsw i64 %153, %152
  %155 = sdiv i64 %154, 64
  %156 = ashr i64 %155, 32
  %157 = trunc i64 %156 to i32
  %158 = trunc i64 %155 to i32
  %159 = ashr i32 %158, 31
  %160 = icmp eq i32 %159, %157
  br i1 %160, label %165, label %161

161:                                              ; preds = %143
  %162 = xor i32 %151, %147
  %163 = lshr i32 %162, 31
  %164 = add nuw i32 %163, 2147483647
  br label %165

165:                                              ; preds = %143, %161
  %166 = phi i32 [ %158, %143 ], [ %164, %161 ]
  %167 = icmp slt i32 %166, 0
  %168 = select i1 %167, i32 -2147483648, i32 2147483647
  br label %169

169:                                              ; preds = %165, %131
  %170 = phi i32 [ 0, %131 ], [ %166, %165 ]
  %171 = phi i32 [ 2147483647, %131 ], [ %168, %165 ]
  %172 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %139, i32 %170) #14
  %173 = extractvalue { i32, i1 } %172, 1
  %174 = extractvalue { i32, i1 } %172, 0
  %175 = select i1 %173, i32 %171, i32 %174, !prof !20
  %176 = icmp slt i32 %175, 0
  %177 = select i1 %176, i32 -2147483648, i32 2147483647
  br label %178

178:                                              ; preds = %169, %61
  %179 = phi i32 [ 0, %61 ], [ %175, %169 ]
  %180 = phi i32 [ 2147483647, %61 ], [ %177, %169 ]
  %181 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %179) #14
  %182 = extractvalue { i32, i1 } %181, 1
  %183 = extractvalue { i32, i1 } %181, 0
  %184 = select i1 %182, i32 %180, i32 %183, !prof !20
  ret i32 %184
}

declare void @_ZNK5blink9LayoutBox26ComputeMarginsForDirectionENS_15MarginDirectionEPKNS_11LayoutBlockENS_10LayoutUnitES5_RS5_S6_NS_6LengthES7_(%"class.blink::LayoutBox"*, i32, %"class.blink::LayoutBlock"*, i32, i32, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::Length"*, %"class.blink::Length"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox23HasOverrideLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox20OverrideLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox33ComputeIntrinsicLogicalWidthUsingERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable41ConvertStyleLogicalHeightToComputedHeightERKNS_6LengthE(%"class.blink::LayoutTable"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8, !noalias !64
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8, !noalias !64
  %9 = lshr i160 %8, 102
  %10 = trunc i160 %9 to i8
  %11 = and i8 %10, 3
  %12 = bitcast %"class.blink::LayoutTable"* %0 to i8*
  switch i8 %11, label %13 [
    i8 0, label %22
    i8 1, label %14
  ]

13:                                               ; preds = %2
  br label %14

14:                                               ; preds = %13, %2
  %15 = phi { i64, i64 } [ { i64 993, i64 0 }, %13 ], [ { i64 1001, i64 0 }, %2 ]
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %12, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %14, %2
  %23 = phi %"class.blink::LayoutBoxModelObject"* [ %19, %14 ], [ %3, %2 ]
  %24 = phi i8* [ %18, %14 ], [ %12, %2 ]
  %25 = phi i64 [ %16, %14 ], [ 977, %2 ]
  %26 = bitcast i8* %24 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = add i64 %25, -1
  %29 = getelementptr i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %31 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %30, align 8
  br label %34

32:                                               ; preds = %14
  %33 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %34

34:                                               ; preds = %22, %32
  %35 = phi %"class.blink::LayoutBoxModelObject"* [ %23, %22 ], [ %19, %32 ]
  %36 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %31, %22 ], [ %33, %32 ]
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %35) #14
  %38 = bitcast %"class.blink::ComputedStyle"** %4 to %"class.blink::ComputedStyleBase"**
  %39 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %39, i64 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = and i160 %42, 81129638414606681695789005144064
  %44 = icmp eq i160 %43, 0
  %45 = lshr i160 %42, 102
  %46 = trunc i160 %45 to i8
  br i1 %44, label %82, label %47

47:                                               ; preds = %34
  %48 = and i8 %46, 3
  switch i8 %48, label %49 [
    i8 0, label %58
    i8 1, label %50
  ]

49:                                               ; preds = %47
  br label %50

50:                                               ; preds = %49, %47
  %51 = phi { i64, i64 } [ { i64 961, i64 0 }, %49 ], [ { i64 969, i64 0 }, %47 ]
  %52 = extractvalue { i64, i64 } %51, 0
  %53 = extractvalue { i64, i64 } %51, 1
  %54 = getelementptr inbounds i8, i8* %12, i64 %53
  %55 = bitcast i8* %54 to %"class.blink::LayoutBoxModelObject"*
  %56 = and i64 %52, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %68, label %58

58:                                               ; preds = %50, %47
  %59 = phi %"class.blink::LayoutBoxModelObject"* [ %55, %50 ], [ %3, %47 ]
  %60 = phi i8* [ %54, %50 ], [ %12, %47 ]
  %61 = phi i64 [ %52, %50 ], [ 945, %47 ]
  %62 = bitcast i8* %60 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = add i64 %61, -1
  %65 = getelementptr i8, i8* %63, i64 %64
  %66 = bitcast i8* %65 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %67 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %66, align 8
  br label %70

68:                                               ; preds = %50
  %69 = inttoptr i64 %52 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %70

70:                                               ; preds = %68, %58
  %71 = phi %"class.blink::LayoutBoxModelObject"* [ %59, %58 ], [ %55, %68 ]
  %72 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %67, %58 ], [ %69, %68 ]
  %73 = tail call i32 %72(%"class.blink::LayoutBoxModelObject"* %71) #14
  %74 = icmp slt i32 %73, 0
  %75 = select i1 %74, i32 -2147483648, i32 2147483647
  %76 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8, !noalias !67
  %77 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %76, i64 0, i32 0, i32 9
  %78 = bitcast [20 x i8]* %77 to i160*
  %79 = load i160, i160* %78, align 8, !noalias !67
  %80 = lshr i160 %79, 102
  %81 = trunc i160 %80 to i8
  br label %82

82:                                               ; preds = %34, %70
  %83 = phi i8 [ %81, %70 ], [ %46, %34 ]
  %84 = phi i32 [ %73, %70 ], [ 0, %34 ]
  %85 = phi i32 [ %75, %70 ], [ 2147483647, %34 ]
  %86 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %84) #14
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 %85, i32 %88, !prof !20
  %90 = and i8 %83, 3
  switch i8 %90, label %91 [
    i8 0, label %100
    i8 1, label %92
  ]

91:                                               ; preds = %82
  br label %92

92:                                               ; preds = %91, %82
  %93 = phi { i64, i64 } [ { i64 1001, i64 0 }, %91 ], [ { i64 993, i64 0 }, %82 ]
  %94 = extractvalue { i64, i64 } %93, 0
  %95 = extractvalue { i64, i64 } %93, 1
  %96 = getelementptr inbounds i8, i8* %12, i64 %95
  %97 = bitcast i8* %96 to %"class.blink::LayoutBoxModelObject"*
  %98 = and i64 %94, 1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %110, label %100

100:                                              ; preds = %92, %82
  %101 = phi %"class.blink::LayoutBoxModelObject"* [ %97, %92 ], [ %3, %82 ]
  %102 = phi i8* [ %96, %92 ], [ %12, %82 ]
  %103 = phi i64 [ %94, %92 ], [ 985, %82 ]
  %104 = bitcast i8* %102 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = add i64 %103, -1
  %107 = getelementptr i8, i8* %105, i64 %106
  %108 = bitcast i8* %107 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %109 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %108, align 8
  br label %112

110:                                              ; preds = %92
  %111 = inttoptr i64 %94 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %112

112:                                              ; preds = %100, %110
  %113 = phi %"class.blink::LayoutBoxModelObject"* [ %101, %100 ], [ %97, %110 ]
  %114 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %109, %100 ], [ %111, %110 ]
  %115 = tail call i32 %114(%"class.blink::LayoutBoxModelObject"* %113) #14
  %116 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %38, align 8
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %116, i64 0, i32 9
  %118 = bitcast [20 x i8]* %117 to i160*
  %119 = load i160, i160* %118, align 8
  %120 = and i160 %119, 81129638414606681695789005144064
  %121 = icmp eq i160 %120, 0
  br i1 %121, label %153, label %122

122:                                              ; preds = %112
  %123 = lshr i160 %119, 102
  %124 = trunc i160 %123 to i8
  %125 = and i8 %124, 3
  switch i8 %125, label %126 [
    i8 0, label %135
    i8 1, label %127
  ]

126:                                              ; preds = %122
  br label %127

127:                                              ; preds = %126, %122
  %128 = phi { i64, i64 } [ { i64 969, i64 0 }, %126 ], [ { i64 961, i64 0 }, %122 ]
  %129 = extractvalue { i64, i64 } %128, 0
  %130 = extractvalue { i64, i64 } %128, 1
  %131 = getelementptr inbounds i8, i8* %12, i64 %130
  %132 = bitcast i8* %131 to %"class.blink::LayoutBoxModelObject"*
  %133 = and i64 %129, 1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %145, label %135

135:                                              ; preds = %127, %122
  %136 = phi %"class.blink::LayoutBoxModelObject"* [ %132, %127 ], [ %3, %122 ]
  %137 = phi i8* [ %131, %127 ], [ %12, %122 ]
  %138 = phi i64 [ %129, %127 ], [ 953, %122 ]
  %139 = bitcast i8* %137 to i8**
  %140 = load i8*, i8** %139, align 8
  %141 = add i64 %138, -1
  %142 = getelementptr i8, i8* %140, i64 %141
  %143 = bitcast i8* %142 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %144 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %143, align 8
  br label %147

145:                                              ; preds = %127
  %146 = inttoptr i64 %129 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %147

147:                                              ; preds = %145, %135
  %148 = phi %"class.blink::LayoutBoxModelObject"* [ %136, %135 ], [ %132, %145 ]
  %149 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %144, %135 ], [ %146, %145 ]
  %150 = tail call i32 %149(%"class.blink::LayoutBoxModelObject"* %148) #14
  %151 = icmp slt i32 %150, 0
  %152 = select i1 %151, i32 -2147483648, i32 2147483647
  br label %153

153:                                              ; preds = %147, %112
  %154 = phi i32 [ 0, %112 ], [ %150, %147 ]
  %155 = phi i32 [ 2147483647, %112 ], [ %152, %147 ]
  %156 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %115, i32 %154) #14
  %157 = extractvalue { i32, i1 } %156, 1
  %158 = extractvalue { i32, i1 } %156, 0
  %159 = select i1 %157, i32 %155, i32 %158, !prof !20
  %160 = icmp slt i32 %159, 0
  %161 = select i1 %160, i32 -2147483648, i32 2147483647
  %162 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %89, i32 %159) #14
  %163 = extractvalue { i32, i1 } %162, 1
  %164 = extractvalue { i32, i1 } %162, 0
  %165 = select i1 %163, i32 %161, i32 %164, !prof !20
  %166 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %167 = load i8, i8* %166, align 1
  switch i8 %167, label %232 [
    i8 2, label %168
    i8 8, label %229
    i8 1, label %229
  ]

168:                                              ; preds = %153
  %169 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %170 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %169 to i96*
  %171 = load i96, i96* %170, align 4
  %172 = and i96 %171, 16777216
  %173 = icmp eq i96 %172, 0
  br i1 %173, label %174, label %195

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %176 = load %"class.blink::Node"*, %"class.blink::Node"** %175, align 8
  %177 = icmp eq %"class.blink::Node"* %176, null
  br i1 %177, label %195, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %176, i64 0, i32 1
  %180 = load i32, i32* %179, align 8
  %181 = and i32 %180, 48
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %195

183:                                              ; preds = %178
  %184 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %185 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %184, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %176, i64 1, i32 2
  %188 = bitcast %"class.blink::Member.318"* %187 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %189 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %189, i64 0, i32 3, i32 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %186, i64 0, i32 3, i32 0, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %191, %193
  br i1 %194, label %203, label %195

195:                                              ; preds = %168, %178, %174, %183
  %196 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %38, align 8
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %196, i64 0, i32 5, i32 0, i32 0
  %198 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %198, i64 0, i32 11
  %200 = load i8, i8* %199, align 4
  %201 = and i8 %200, 2
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %195, %183
  %204 = sitofp i32 %165 to float
  %205 = fmul float %204, 1.562500e-02
  br label %206

206:                                              ; preds = %203, %195
  %207 = phi float [ %205, %203 ], [ 0.000000e+00, %195 ]
  %208 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %209 = load i8, i8* %208, align 2, !range !21
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %214, label %211

211:                                              ; preds = %206
  %212 = bitcast %"class.blink::Length"* %1 to float*
  %213 = load float, float* %212, align 4
  br label %218

214:                                              ; preds = %206
  %215 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = sitofp i32 %216 to float
  br label %218

218:                                              ; preds = %211, %214
  %219 = phi float [ %213, %211 ], [ %217, %214 ]
  %220 = fsub float %219, %207
  %221 = fmul float %220, 6.400000e+01
  %222 = fcmp ult float %221, 0xC1E0000000000000
  %223 = fcmp ugt float %221, 0x41DFFFFFE0000000
  %224 = fcmp ogt float %221, 0xC1E0000000000000
  %225 = select i1 %224, float %221, float 0xC1E0000000000000
  %226 = fptosi float %225 to i32
  %227 = select i1 %222, i32 0, i32 2147483647
  %228 = select i1 %223, i32 %227, i32 %226
  br label %254

229:                                              ; preds = %153, %153
  %230 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %231 = tail call i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"* %230, %"class.blink::Length"* dereferenceable(8) %1) #14
  br label %254

232:                                              ; preds = %153
  %233 = add i8 %167, -3
  %234 = icmp ult i8 %233, 5
  br i1 %234, label %235, label %258

235:                                              ; preds = %232
  %236 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %237 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %238 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %237, i64 0, i32 0, i32 9
  %239 = bitcast [20 x i8]* %238 to i160*
  %240 = load i160, i160* %239, align 8
  %241 = and i160 %240, 15211807202738752817960438464512
  %242 = icmp eq i160 %241, 0
  %243 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %244 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %245 = select i1 %242, i32* %243, i32* %244
  %246 = load i32, i32* %245, align 4
  %247 = icmp sgt i32 %165, -1
  %248 = select i1 %247, i32 -2147483648, i32 2147483647
  %249 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %246, i32 %165) #14
  %250 = extractvalue { i32, i1 } %249, 1
  %251 = extractvalue { i32, i1 } %249, 0
  %252 = select i1 %250, i32 %248, i32 %251, !prof !20
  %253 = tail call i32 @_ZNK5blink9LayoutBox41ComputeIntrinsicLogicalContentHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitES5_(%"class.blink::LayoutBox"* %236, i32 0, %"class.blink::Length"* dereferenceable(8) %1, i32 %252, i32 %165) #14
  br label %254

254:                                              ; preds = %229, %235, %218
  %255 = phi i32 [ %228, %218 ], [ %231, %229 ], [ %253, %235 ]
  %256 = icmp sgt i32 %255, 0
  %257 = select i1 %256, i32 %255, i32 0
  ret i32 %257

258:                                              ; preds = %232
  ret i32 0
}

declare i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox41ComputeIntrinsicLogicalContentHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitES5_(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"* dereferenceable(8), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable13LayoutCaptionERNS_18LayoutTableCaptionERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableCaption"* dereferenceable(280), %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 63
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox38MarkChildForPaginationRelayoutIfNeededERS0_RNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBox"* %12, %"class.blink::LayoutBox"* dereferenceable(216) %13, %"class.blink::SubtreeLayoutScope"* dereferenceable(8) %2) #14
  %14 = load i96, i96* %7, align 4
  %15 = and i96 %14, 63
  %16 = icmp eq i96 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::LayoutTable"* %0 to %"class.blink::LayoutBlock"*
  %19 = bitcast %"class.blink::LayoutTableCaption"* %1 to i8*
  br label %118

20:                                               ; preds = %3, %11
  %21 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %1, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8, !noalias !70
  %27 = bitcast %"class.blink::LayoutTableCaption"* %1 to i8*
  %28 = and i160 %26, 15211807202738752817960438464512
  %29 = icmp eq i160 %28, 0
  %30 = and i160 %26, 41538374868278621028243970633760768
  %31 = icmp eq i160 %30, 0
  %32 = select i1 %31, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %33 = select i1 %31, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %34 = select i1 %29, { i64, i64 } %33, { i64, i64 } %32
  %35 = select i1 %29, { i64, i64 } %33, { i64, i64 } %32
  %36 = extractvalue { i64, i64 } %34, 0
  %37 = extractvalue { i64, i64 } %35, 1
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = bitcast i8* %38 to %"class.blink::LayoutBoxModelObject"*
  %40 = and i64 %36, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %20
  %43 = bitcast i8* %38 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = add i64 %36, -1
  %46 = getelementptr i8, i8* %44, i64 %45
  %47 = bitcast i8* %46 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %48 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %47, align 8
  br label %51

49:                                               ; preds = %20
  %50 = inttoptr i64 %36 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %51

51:                                               ; preds = %42, %49
  %52 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %48, %42 ], [ %50, %49 ]
  %53 = tail call i32 %52(%"class.blink::LayoutBoxModelObject"* %39) #14
  %54 = bitcast %"class.blink::LayoutTable"* %0 to %"class.blink::LayoutBlock"*
  %55 = tail call i32 @_ZNK5blink11LayoutBlock29CollapsedMarginBeforeForChildERKNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %54, %"class.blink::LayoutBox"* dereferenceable(216) %21) #14
  %56 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 9
  %59 = bitcast [20 x i8]* %58 to i160*
  %60 = load i160, i160* %59, align 8
  %61 = and i160 %60, 15211807202738752817960438464512
  %62 = icmp eq i160 %61, 0
  %63 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %64 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %65 = select i1 %62, i32* %63, i32* %64
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %66, 0
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  %69 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %55, i32 %66) #14
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 %68, i32 %71, !prof !20
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 15211807202738752817960438464512
  %78 = icmp eq i160 %77, 0
  br i1 %78, label %79, label %94

79:                                               ; preds = %51
  %80 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %81 = bitcast %"class.blink::LayoutRect"* %80 to i64*
  %82 = load i64, i64* %81, align 4
  %83 = trunc i64 %82 to i32
  %84 = icmp eq i32 %53, %83
  br i1 %84, label %85, label %89

85:                                               ; preds = %79
  %86 = lshr i64 %82, 32
  %87 = trunc i64 %86 to i32
  %88 = icmp eq i32 %72, %87
  br i1 %88, label %109, label %89

89:                                               ; preds = %85, %79
  %90 = zext i32 %72 to i64
  %91 = shl nuw i64 %90, 32
  %92 = zext i32 %53 to i64
  %93 = or i64 %91, %92
  store i64 %93, i64* %81, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %21) #14
  br label %109

94:                                               ; preds = %51
  %95 = zext i32 %53 to i64
  %96 = shl nuw i64 %95, 32
  %97 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %98 = bitcast %"class.blink::LayoutRect"* %97 to i64*
  %99 = load i64, i64* %98, align 4
  %100 = trunc i64 %99 to i32
  %101 = icmp eq i32 %72, %100
  br i1 %101, label %102, label %106

102:                                              ; preds = %94
  %103 = lshr i64 %99, 32
  %104 = trunc i64 %103 to i32
  %105 = icmp eq i32 %53, %104
  br i1 %105, label %109, label %106

106:                                              ; preds = %102, %94
  %107 = zext i32 %72 to i64
  %108 = or i64 %96, %107
  store i64 %108, i64* %98, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %21) #14
  br label %109

109:                                              ; preds = %85, %89, %102, %106
  %110 = load i96, i96* %7, align 4
  %111 = and i96 %110, 63
  %112 = icmp eq i96 %111, 0
  br i1 %112, label %118, label %113

113:                                              ; preds = %109
  %114 = bitcast %"class.blink::LayoutTableCaption"* %1 to void (%"class.blink::LayoutObject"*)***
  %115 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %115, i64 54
  %117 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %116, align 8
  tail call void %117(%"class.blink::LayoutObject"* %5) #14
  br label %118

118:                                              ; preds = %17, %113, %109
  %119 = phi i8* [ %19, %17 ], [ %27, %113 ], [ %27, %109 ]
  %120 = phi %"class.blink::LayoutBlock"* [ %18, %17 ], [ %54, %113 ], [ %54, %109 ]
  %121 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %1, i64 0, i32 0, i32 0, i32 0
  %122 = tail call i32 @_ZNK5blink11LayoutBlock29CollapsedMarginBeforeForChildERKNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %120, %"class.blink::LayoutBox"* dereferenceable(216) %121) #14
  %123 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %125 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %125, i64 0, i32 0, i32 9
  %127 = bitcast [20 x i8]* %126 to i160*
  %128 = load i160, i160* %127, align 8
  %129 = and i160 %128, 15211807202738752817960438464512
  %130 = icmp eq i160 %129, 0
  %131 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %132 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %133 = select i1 %130, i32* %131, i32* %132
  %134 = load i32, i32* %133, align 4
  %135 = icmp slt i32 %134, 0
  %136 = select i1 %135, i32 -2147483648, i32 2147483647
  %137 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %122, i32 %134) #14
  %138 = extractvalue { i32, i1 } %137, 1
  %139 = extractvalue { i32, i1 } %137, 0
  %140 = select i1 %138, i32 %136, i32 %139, !prof !20
  %141 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %142 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %142, i64 0, i32 0, i32 9
  %144 = bitcast [20 x i8]* %143 to i160*
  %145 = load i160, i160* %144, align 8, !noalias !73
  %146 = and i160 %145, 15211807202738752817960438464512
  %147 = icmp eq i160 %146, 0
  %148 = and i160 %145, 41538374868278621028243970633760768
  %149 = icmp eq i160 %148, 0
  %150 = select i1 %149, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %151 = select i1 %149, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %152 = select i1 %147, { i64, i64 } %151, { i64, i64 } %150
  %153 = select i1 %147, { i64, i64 } %151, { i64, i64 } %150
  %154 = extractvalue { i64, i64 } %152, 0
  %155 = extractvalue { i64, i64 } %153, 1
  %156 = getelementptr inbounds i8, i8* %119, i64 %155
  %157 = bitcast i8* %156 to %"class.blink::LayoutBoxModelObject"*
  %158 = and i64 %154, 1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %167, label %160

160:                                              ; preds = %118
  %161 = bitcast i8* %156 to i8**
  %162 = load i8*, i8** %161, align 8
  %163 = add i64 %154, -1
  %164 = getelementptr i8, i8* %162, i64 %163
  %165 = bitcast i8* %164 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %166 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %165, align 8
  br label %169

167:                                              ; preds = %118
  %168 = inttoptr i64 %154 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %169

169:                                              ; preds = %160, %167
  %170 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %166, %160 ], [ %168, %167 ]
  %171 = tail call i32 %170(%"class.blink::LayoutBoxModelObject"* %157) #14
  %172 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %141, align 8
  %173 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %172, i64 0, i32 0, i32 9
  %174 = bitcast [20 x i8]* %173 to i160*
  %175 = load i160, i160* %174, align 8
  %176 = and i160 %175, 15211807202738752817960438464512
  %177 = icmp eq i160 %176, 0
  br i1 %177, label %178, label %193

178:                                              ; preds = %169
  %179 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %180 = bitcast %"class.blink::LayoutRect"* %179 to i64*
  %181 = load i64, i64* %180, align 4
  %182 = trunc i64 %181 to i32
  %183 = icmp eq i32 %171, %182
  br i1 %183, label %184, label %188

184:                                              ; preds = %178
  %185 = lshr i64 %181, 32
  %186 = trunc i64 %185 to i32
  %187 = icmp eq i32 %140, %186
  br i1 %187, label %208, label %188

188:                                              ; preds = %184, %178
  %189 = zext i32 %140 to i64
  %190 = shl nuw i64 %189, 32
  %191 = zext i32 %171 to i64
  %192 = or i64 %190, %191
  store i64 %192, i64* %180, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %121) #14
  br label %208

193:                                              ; preds = %169
  %194 = zext i32 %171 to i64
  %195 = shl nuw i64 %194, 32
  %196 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %197 = bitcast %"class.blink::LayoutRect"* %196 to i64*
  %198 = load i64, i64* %197, align 4
  %199 = trunc i64 %198 to i32
  %200 = icmp eq i32 %140, %199
  br i1 %200, label %201, label %205

201:                                              ; preds = %193
  %202 = lshr i64 %198, 32
  %203 = trunc i64 %202 to i32
  %204 = icmp eq i32 %171, %203
  br i1 %204, label %208, label %205

205:                                              ; preds = %201, %193
  %206 = zext i32 %140 to i64
  %207 = or i64 %195, %206
  store i64 %207, i64* %197, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %121) #14
  br label %208

208:                                              ; preds = %184, %188, %201, %205
  %209 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %210 = load %"class.blink::Node"*, %"class.blink::Node"** %209, align 8
  %211 = icmp eq %"class.blink::Node"* %210, null
  br i1 %211, label %212, label %219

212:                                              ; preds = %208, %212
  %213 = phi %"class.blink::LayoutObject"* [ %215, %212 ], [ %4, %208 ]
  %214 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %213, i64 0, i32 7
  %215 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %215, i64 0, i32 6, i32 0, i32 0
  %217 = load %"class.blink::Node"*, %"class.blink::Node"** %216, align 8
  %218 = icmp eq %"class.blink::Node"* %217, null
  br i1 %218, label %212, label %219

219:                                              ; preds = %212, %208
  %220 = phi %"class.blink::Node"* [ %210, %208 ], [ %217, %212 ]
  %221 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %220, i64 0, i32 3, i32 0, i32 0
  %222 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %221, align 8
  %223 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %222, i64 0, i32 2, i32 0, i32 0
  %224 = load %"class.blink::Document"*, %"class.blink::Document"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %224, i64 0, i32 113
  %226 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %226, i64 0, i32 3
  %228 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %228, i64 0, i32 0
  %230 = load i8, i8* %229, align 8
  %231 = and i8 %230, 1
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %234, label %233

233:                                              ; preds = %219
  tail call void @_ZN5blink9LayoutBox31UpdateFragmentationInfoForChildERS0_(%"class.blink::LayoutBox"* %123, %"class.blink::LayoutBox"* dereferenceable(216) %121) #14
  br label %234

234:                                              ; preds = %219, %233
  %235 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %236 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %235 to i96*
  %237 = load i96, i96* %236, align 4
  %238 = and i96 %237, 3
  %239 = icmp eq i96 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %234
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %5) #14
  br label %241

241:                                              ; preds = %234, %240
  %242 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %124, align 8
  %243 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %242, i64 0, i32 0, i32 9
  %244 = bitcast [20 x i8]* %243 to i160*
  %245 = load i160, i160* %244, align 8
  %246 = and i160 %245, 15211807202738752817960438464512
  %247 = icmp eq i160 %246, 0
  %248 = select i1 %247, i32* %131, i32* %132
  %249 = load i32, i32* %248, align 4
  %250 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %141, align 8
  %251 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %250, i64 0, i32 0, i32 9
  %252 = bitcast [20 x i8]* %251 to i160*
  %253 = load i160, i160* %252, align 8
  %254 = and i160 %253, 15211807202738752817960438464512
  %255 = icmp eq i160 %254, 0
  %256 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %257 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %258 = load i32, i32* %256, align 4
  %259 = load i32, i32* %257, align 4
  %260 = select i1 %255, i32 %258, i32 %259
  %261 = icmp slt i32 %260, 0
  %262 = select i1 %261, i32 -2147483648, i32 2147483647
  %263 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %249, i32 %260) #14
  %264 = extractvalue { i32, i1 } %263, 1
  %265 = extractvalue { i32, i1 } %263, 0
  %266 = select i1 %264, i32 %262, i32 %265, !prof !20
  %267 = tail call i32 @_ZNK5blink11LayoutBlock29CollapsedMarginBeforeForChildERKNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %120, %"class.blink::LayoutBox"* dereferenceable(216) %121) #14
  %268 = icmp slt i32 %267, 0
  %269 = select i1 %268, i32 -2147483648, i32 2147483647
  %270 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %266, i32 %267) #14
  %271 = extractvalue { i32, i1 } %270, 1
  %272 = extractvalue { i32, i1 } %270, 0
  %273 = select i1 %271, i32 %269, i32 %272, !prof !20
  %274 = tail call i32 @_ZNK5blink11LayoutBlock28CollapsedMarginAfterForChildERKNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %120, %"class.blink::LayoutBox"* dereferenceable(216) %121) #14
  %275 = icmp slt i32 %274, 0
  %276 = select i1 %275, i32 -2147483648, i32 2147483647
  %277 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %273, i32 %274) #14
  %278 = extractvalue { i32, i1 } %277, 1
  %279 = extractvalue { i32, i1 } %277, 0
  %280 = select i1 %278, i32 %276, i32 %279, !prof !20
  %281 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %124, align 8
  %282 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %281, i64 0, i32 0, i32 9
  %283 = bitcast [20 x i8]* %282 to i160*
  %284 = load i160, i160* %283, align 8
  %285 = and i160 %284, 15211807202738752817960438464512
  %286 = icmp eq i160 %285, 0
  br i1 %286, label %287, label %291

287:                                              ; preds = %241
  %288 = load i32, i32* %131, align 4
  %289 = icmp eq i32 %288, %280
  br i1 %289, label %295, label %290

290:                                              ; preds = %287
  store i32 %280, i32* %131, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %123) #14
  br label %295

291:                                              ; preds = %241
  %292 = load i32, i32* %132, align 4
  %293 = icmp eq i32 %292, %280
  br i1 %293, label %295, label %294

294:                                              ; preds = %291
  store i32 %280, i32* %132, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %123) #14
  br label %295

295:                                              ; preds = %287, %290, %291, %294
  ret void
}

declare void @_ZN5blink9LayoutBox38MarkChildForPaginationRelayoutIfNeededERS0_RNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock29CollapsedMarginBeforeForChildERKNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox31UpdateFragmentationInfoForChildERS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock28CollapsedMarginAfterForChildERKNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable13LayoutSectionERNS_18LayoutTableSectionERNS_18SubtreeLayoutScopeENS_10LayoutUnitENS_24TableHeightChangingValueE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableSection"* dereferenceable(360), %"class.blink::SubtreeLayoutScope"* dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 15211807202738752817960438464512
  %15 = icmp eq i160 %14, 0
  %16 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %17 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %18 = select i1 %15, i32* %16, i32* %17
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = and i160 %24, 15211807202738752817960438464512
  %26 = icmp eq i160 %25, 0
  br i1 %26, label %27, label %42

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 0, i32 0, i32 2
  %29 = bitcast %"class.blink::LayoutRect"* %28 to i64*
  %30 = load i64, i64* %29, align 4
  %31 = trunc i64 %30 to i32
  %32 = icmp eq i32 %31, %3
  br i1 %32, label %33, label %37

33:                                               ; preds = %27
  %34 = lshr i64 %30, 32
  %35 = trunc i64 %34 to i32
  %36 = icmp eq i32 %19, %35
  br i1 %36, label %57, label %37

37:                                               ; preds = %33, %27
  %38 = zext i32 %19 to i64
  %39 = shl nuw i64 %38, 32
  %40 = zext i32 %3 to i64
  %41 = or i64 %39, %40
  store i64 %41, i64* %29, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %7) #14
  br label %57

42:                                               ; preds = %5
  %43 = zext i32 %3 to i64
  %44 = shl nuw i64 %43, 32
  %45 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 0, i32 0, i32 2
  %46 = bitcast %"class.blink::LayoutRect"* %45 to i64*
  %47 = load i64, i64* %46, align 4
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i32 %19, %48
  br i1 %49, label %50, label %54

50:                                               ; preds = %42
  %51 = lshr i64 %47, 32
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, %3
  br i1 %53, label %57, label %54

54:                                               ; preds = %50, %42
  %55 = zext i32 %19 to i64
  %56 = or i64 %44, %55
  store i64 %56, i64* %46, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %7) #14
  br label %57

57:                                               ; preds = %33, %37, %50, %54
  %58 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %59 = load i16, i16* %58, align 8
  %60 = and i16 %59, 256
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* %2, %"class.blink::LayoutObject"* %63) #14
  br label %64

64:                                               ; preds = %57, %62
  %65 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %66 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %65 to i96*
  %67 = load i96, i96* %66, align 4
  %68 = and i96 %67, 63
  %69 = icmp eq i96 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %64
  tail call void @_ZN5blink9LayoutBox38MarkChildForPaginationRelayoutIfNeededERS0_RNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBox"* %8, %"class.blink::LayoutBox"* dereferenceable(216) %7, %"class.blink::SubtreeLayoutScope"* dereferenceable(8) %2) #14
  %71 = load i96, i96* %66, align 4
  br label %72

72:                                               ; preds = %64, %70
  %73 = phi i96 [ %67, %64 ], [ %71, %70 ]
  %74 = and i96 %73, 63
  %75 = icmp eq i96 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %72
  tail call void @_ZN5blink18LayoutTableSection12UpdateLayoutEv(%"class.blink::LayoutTableSection"* %1) #14
  br label %79

77:                                               ; preds = %72
  %78 = icmp eq i32 %4, 1
  br i1 %78, label %79, label %117

79:                                               ; preds = %76, %77
  %80 = tail call i32 @_ZN5blink18LayoutTableSection20CalcRowLogicalHeightEv(%"class.blink::LayoutTableSection"* %1) #14
  %81 = icmp sgt i32 %80, 33554431
  br i1 %81, label %86, label %82

82:                                               ; preds = %79
  %83 = icmp slt i32 %80, -33554432
  %84 = shl i32 %80, 6
  %85 = select i1 %83, i32 -2147483648, i32 %84
  br label %86

86:                                               ; preds = %82, %79
  %87 = phi i32 [ 2147483647, %79 ], [ %85, %82 ]
  %88 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %89 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %88, i64 0, i32 0, i32 9
  %90 = bitcast [20 x i8]* %89 to i160*
  %91 = load i160, i160* %90, align 8
  %92 = and i160 %91, 15211807202738752817960438464512
  %93 = icmp eq i160 %92, 0
  br i1 %93, label %94, label %99

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, %87
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  store i32 %87, i32* %95, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %7) #14
  br label %104

99:                                               ; preds = %86
  %100 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, %87
  br i1 %102, label %104, label %103

103:                                              ; preds = %99
  store i32 %87, i32* %100, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %7) #14
  br label %104

104:                                              ; preds = %94, %98, %99, %103
  %105 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %106 = bitcast %"class.blink::LayoutObject"** %105 to %"class.blink::LayoutTable"**
  %107 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %107, i64 0, i32 6
  %109 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %108, align 8
  %110 = icmp eq %"class.blink::LayoutTableSection"* %109, %1
  br i1 %110, label %111, label %114

111:                                              ; preds = %104
  %112 = tail call zeroext i1 @_ZNK5blink18LayoutTableSection17GroupShouldRepeatEv(%"class.blink::LayoutTableSection"* %1) #14
  %113 = zext i1 %112 to i8
  br label %114

114:                                              ; preds = %104, %111
  %115 = phi i8 [ 0, %104 ], [ %113, %111 ]
  %116 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 16
  store i8 %115, i8* %116, align 1
  br label %117

117:                                              ; preds = %77, %114
  %118 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %119 = load %"class.blink::Node"*, %"class.blink::Node"** %118, align 8
  %120 = icmp eq %"class.blink::Node"* %119, null
  br i1 %120, label %121, label %128

121:                                              ; preds = %117, %121
  %122 = phi %"class.blink::LayoutObject"* [ %124, %121 ], [ %6, %117 ]
  %123 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %122, i64 0, i32 7
  %124 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %124, i64 0, i32 6, i32 0, i32 0
  %126 = load %"class.blink::Node"*, %"class.blink::Node"** %125, align 8
  %127 = icmp eq %"class.blink::Node"* %126, null
  br i1 %127, label %121, label %128

128:                                              ; preds = %121, %117
  %129 = phi %"class.blink::Node"* [ %119, %117 ], [ %126, %121 ]
  %130 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %129, i64 0, i32 3, i32 0, i32 0
  %131 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %131, i64 0, i32 2, i32 0, i32 0
  %133 = load %"class.blink::Document"*, %"class.blink::Document"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %133, i64 0, i32 113
  %135 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %135, i64 0, i32 3
  %137 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %137, i64 0, i32 0
  %139 = load i8, i8* %138, align 8
  %140 = and i8 %139, 1
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %143, label %142

142:                                              ; preds = %128
  tail call void @_ZN5blink9LayoutBox31UpdateFragmentationInfoForChildERS0_(%"class.blink::LayoutBox"* %8, %"class.blink::LayoutBox"* dereferenceable(216) %7) #14
  br label %143

143:                                              ; preds = %128, %142
  %144 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %145 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %144, i64 0, i32 0, i32 9
  %146 = bitcast [20 x i8]* %145 to i160*
  %147 = load i160, i160* %146, align 8
  %148 = and i160 %147, 15211807202738752817960438464512
  %149 = icmp eq i160 %148, 0
  %150 = select i1 %149, i32* %16, i32* %17
  %151 = load i32, i32* %150, align 4
  %152 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %152, i64 0, i32 0, i32 9
  %154 = bitcast [20 x i8]* %153 to i160*
  %155 = load i160, i160* %154, align 8
  %156 = and i160 %155, 15211807202738752817960438464512
  %157 = icmp eq i160 %156, 0
  %158 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %159 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %160 = select i1 %157, i32* %158, i32* %159
  %161 = load i32, i32* %160, align 4
  %162 = icmp slt i32 %161, 0
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %161) #14
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !20
  br i1 %149, label %168, label %172

168:                                              ; preds = %143
  %169 = load i32, i32* %16, align 4
  %170 = icmp eq i32 %169, %167
  br i1 %170, label %176, label %171

171:                                              ; preds = %168
  store i32 %167, i32* %16, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %8) #14
  br label %176

172:                                              ; preds = %143
  %173 = load i32, i32* %17, align 4
  %174 = icmp eq i32 %173, %167
  br i1 %174, label %176, label %175

175:                                              ; preds = %172
  store i32 %167, i32* %17, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %8) #14
  br label %176

176:                                              ; preds = %168, %171, %172, %175
  ret void
}

declare void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink18LayoutTableSection12UpdateLayoutEv(%"class.blink::LayoutTableSection"*) unnamed_addr #1

declare i32 @_ZN5blink18LayoutTableSection20CalcRowLogicalHeightEv(%"class.blink::LayoutTableSection"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable22LogicalHeightFromStyleEv(%"class.blink::LayoutTable"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"class.blink::Length"*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 15211807202738752817960438464512
  %12 = icmp eq i160 %11, 0
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 5, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %14, i64 0, i32 3
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %14, i64 0, i32 8
  %17 = select i1 %12, %"class.blink::Length"* %15, %"class.blink::Length"* %16
  %18 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %17, i64 0, i32 2
  %19 = load i8, i8* %18, align 1
  %20 = add i8 %19, -3
  %21 = icmp ult i8 %20, 5
  br i1 %21, label %37, label %22

22:                                               ; preds = %1
  switch i8 %19, label %46 [
    i8 8, label %37
    i8 1, label %23
    i8 2, label %23
  ]

23:                                               ; preds = %22, %22
  %24 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %17, i64 0, i32 3
  %25 = load i8, i8* %24, align 2, !range !21
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::Length"* %17 to float*
  %29 = load float, float* %28, align 4
  br label %34

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %17, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sitofp i32 %32 to float
  br label %34

34:                                               ; preds = %27, %30
  %35 = phi float [ %29, %27 ], [ %33, %30 ]
  %36 = fcmp ogt float %35, 0.000000e+00
  br i1 %36, label %37, label %46

37:                                               ; preds = %22, %34, %1
  %38 = tail call i32 @_ZNK5blink11LayoutTable41ConvertStyleLogicalHeightToComputedHeightERKNS_6LengthE(%"class.blink::LayoutTable"* %0, %"class.blink::Length"* dereferenceable(8) %17)
  %39 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %39, i64 0, i32 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %39, i64 0, i32 0, i32 5, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %43, align 8
  %45 = and i160 %42, 15211807202738752817960438464512
  br label %46

46:                                               ; preds = %22, %37, %34
  %47 = phi i160 [ %11, %22 ], [ %45, %37 ], [ %11, %34 ]
  %48 = phi i32 [ 0, %22 ], [ %38, %37 ], [ 0, %34 ]
  %49 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %14, %22 ], [ %44, %37 ], [ %14, %34 ]
  %50 = icmp eq i160 %47, 0
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %49, i64 0, i32 4
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %49, i64 0, i32 5
  %53 = select i1 %50, %"class.blink::Length"* %51, %"class.blink::Length"* %52
  %54 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %53, i64 0, i32 2
  %55 = load i8, i8* %54, align 1
  switch i8 %55, label %81 [
    i8 6, label %70
    i8 8, label %70
    i8 1, label %56
    i8 2, label %56
  ]

56:                                               ; preds = %46, %46
  %57 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %53, i64 0, i32 3
  %58 = load i8, i8* %57, align 2, !range !21
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.blink::Length"* %53 to float*
  %62 = load float, float* %61, align 4
  br label %67

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %53, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = sitofp i32 %65 to float
  br label %67

67:                                               ; preds = %60, %63
  %68 = phi float [ %62, %60 ], [ %66, %63 ]
  %69 = fcmp olt float %68, 0.000000e+00
  br i1 %69, label %81, label %70

70:                                               ; preds = %67, %46, %46
  %71 = tail call i32 @_ZNK5blink11LayoutTable41ConvertStyleLogicalHeightToComputedHeightERKNS_6LengthE(%"class.blink::LayoutTable"* %0, %"class.blink::Length"* dereferenceable(8) %53)
  %72 = icmp slt i32 %71, %48
  %73 = select i1 %72, i32 %71, i32 %48
  %74 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %75 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %74, i64 0, i32 0, i32 9
  %76 = bitcast [20 x i8]* %75 to i160*
  %77 = load i160, i160* %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %74, i64 0, i32 0, i32 5, i32 0, i32 0
  %79 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %78, align 8
  %80 = and i160 %77, 15211807202738752817960438464512
  br label %81

81:                                               ; preds = %67, %46, %70
  %82 = phi i160 [ %47, %67 ], [ %47, %46 ], [ %80, %70 ]
  %83 = phi i32 [ %48, %67 ], [ %48, %46 ], [ %73, %70 ]
  %84 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %49, %67 ], [ %49, %46 ], [ %79, %70 ]
  %85 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #14
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  %87 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 3
  %88 = icmp eq i160 %82, 0
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %84, i64 0, i32 6
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %84, i64 0, i32 7
  %91 = select i1 %88, %"class.blink::Length"* %89, %"class.blink::Length"* %90
  %92 = bitcast %"class.blink::Length"* %91 to i64*
  %93 = load i64, i64* %92, align 4
  store i64 %93, i64* %2, align 8
  %94 = and i64 %93, 280375465082880
  %95 = icmp eq i64 %94, 8796093022208
  %96 = lshr i64 %93, 40
  %97 = trunc i64 %96 to i8
  br i1 %95, label %98, label %100

98:                                               ; preds = %81
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #14
  %99 = load i8, i8* %86, align 1
  br label %100

100:                                              ; preds = %81, %98
  %101 = phi i8 [ %97, %81 ], [ %99, %98 ]
  switch i8 %101, label %120 [
    i8 3, label %102
    i8 4, label %102
    i8 5, label %102
    i8 7, label %102
  ]

102:                                              ; preds = %100, %100, %100, %100
  %103 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 0, i64 7, i1 false) #14, !alias.scope !76
  %104 = icmp eq i8 %101, 8
  br i1 %104, label %109, label %105

105:                                              ; preds = %102
  %106 = load i64, i64* %4, align 8
  store i64 %106, i64* %2, align 8
  %107 = lshr i64 %106, 40
  %108 = trunc i64 %107 to i8
  br label %118

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #14
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  %113 = load i64, i64* %4, align 8
  store i64 %113, i64* %2, align 8
  %114 = lshr i64 %113, 40
  %115 = trunc i64 %114 to i8
  br i1 %112, label %116, label %118

116:                                              ; preds = %109
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #14
  %117 = load i8, i8* %86, align 1
  br label %118

118:                                              ; preds = %105, %109, %116
  %119 = phi i8 [ %115, %109 ], [ %117, %116 ], [ %108, %105 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #14
  br label %120

120:                                              ; preds = %100, %118
  %121 = phi i8 [ %101, %100 ], [ %119, %118 ]
  %122 = add i8 %121, -3
  %123 = icmp ult i8 %122, 5
  br i1 %123, label %134, label %124

124:                                              ; preds = %120
  switch i8 %121, label %139 [
    i8 8, label %134
    i8 1, label %125
    i8 2, label %125
  ]

125:                                              ; preds = %124, %124
  %126 = load i8, i8* %87, align 2, !range !21
  %127 = icmp eq i8 %126, 0
  %128 = bitcast i64* %2 to float*
  %129 = load float, float* %128, align 8
  %130 = bitcast float %129 to i32
  %131 = sitofp i32 %130 to float
  %132 = select i1 %127, float %131, float %129
  %133 = fcmp olt float %132, 0.000000e+00
  br i1 %133, label %139, label %134

134:                                              ; preds = %124, %125, %120
  %135 = call i32 @_ZNK5blink11LayoutTable41ConvertStyleLogicalHeightToComputedHeightERKNS_6LengthE(%"class.blink::LayoutTable"* %0, %"class.blink::Length"* nonnull dereferenceable(8) %3)
  %136 = icmp slt i32 %83, %135
  %137 = select i1 %136, i32 %135, i32 %83
  %138 = load i8, i8* %86, align 1
  br label %139

139:                                              ; preds = %134, %125, %124
  %140 = phi i32 [ %83, %124 ], [ %83, %125 ], [ %137, %134 ]
  %141 = phi i8 [ %121, %124 ], [ %121, %125 ], [ %138, %134 ]
  %142 = icmp eq i8 %141, 8
  br i1 %142, label %143, label %144

143:                                              ; preds = %139
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #14
  br label %144

144:                                              ; preds = %139, %143
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #14
  ret i32 %140
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable28DistributeExtraLogicalHeightEi(%"class.blink::LayoutTable"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %6 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutTableSection"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = tail call i32 @_ZN5blink18LayoutTableSection34DistributeExtraLogicalHeightToRowsEi(%"class.blink::LayoutTableSection"* nonnull %6, i32 %1) #14
  br label %10

10:                                               ; preds = %8, %4, %2
  ret void
}

declare i32 @_ZN5blink18LayoutTableSection34DistributeExtraLogicalHeightToRowsEi(%"class.blink::LayoutTableSection"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable26SimplifiedNormalFlowLayoutEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.blink::LayoutTableCaption"**, %"class.blink::LayoutTableCaption"*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %28

9:                                                ; preds = %42, %1
  %10 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %11 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %10, align 8
  %12 = icmp eq %"class.blink::LayoutTableSection"* %11, null
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %15 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %14, align 8
  %16 = icmp eq %"class.blink::LayoutTableSection"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %19 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutTableSection"* %19, null
  br i1 %20, label %45, label %21

21:                                               ; preds = %13, %9, %17
  %22 = phi %"class.blink::LayoutTableSection"* [ %19, %17 ], [ %15, %13 ], [ %11, %9 ]
  %23 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %24 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %25 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %26 = bitcast %"class.blink::LayoutTableSection"** %10 to %"class.blink::LayoutObject"**
  %27 = bitcast %"class.blink::LayoutTableSection"** %24 to %"class.blink::LayoutObject"**
  br label %46

28:                                               ; preds = %1, %42
  %29 = phi %"class.blink::LayoutTableCaption"** [ %43, %42 ], [ %3, %1 ]
  %30 = bitcast %"class.blink::LayoutTableCaption"** %29 to %"class.blink::LayoutObject"**
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 4
  %33 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %32 to i96*
  %34 = load i96, i96* %33, align 4
  %35 = and i96 %34, 63
  %36 = icmp eq i96 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %28
  %38 = bitcast %"class.blink::LayoutObject"* %31 to void (%"class.blink::LayoutObject"*)***
  %39 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %39, i64 54
  %41 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %40, align 8
  tail call void %41(%"class.blink::LayoutObject"* %31) #14
  br label %42

42:                                               ; preds = %28, %37
  %43 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %29, i64 1
  %44 = icmp eq %"class.blink::LayoutTableCaption"** %43, %7
  br i1 %44, label %9, label %28

45:                                               ; preds = %65, %97, %17
  ret void

46:                                               ; preds = %21, %97
  %47 = phi %"class.blink::LayoutTableSection"* [ %22, %21 ], [ %99, %97 ]
  %48 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %49 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %48 to i96*
  %50 = load i96, i96* %49, align 4
  %51 = and i96 %50, 63
  %52 = icmp eq i96 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.blink::LayoutTableSection"* %47 to void (%"class.blink::LayoutObject"*)***
  %56 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %56, i64 54
  %58 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %57, align 8
  tail call void %58(%"class.blink::LayoutObject"* %54) #14
  br label %59

59:                                               ; preds = %46, %53
  tail call void @_ZN5blink18LayoutTableSection10LayoutRowsEv(%"class.blink::LayoutTableSection"* nonnull %47) #14
  tail call void @_ZN5blink18LayoutTableSection36ComputeLayoutOverflowFromDescendantsEv(%"class.blink::LayoutTableSection"* nonnull %47) #14
  %60 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %47, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox17UpdateAfterLayoutEv(%"class.blink::LayoutBox"* %60) #14
  %61 = load i16, i16* %23, align 8
  %62 = trunc i16 %61 to i8
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %65

65:                                               ; preds = %64, %59
  %66 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %24, align 8
  %67 = icmp eq %"class.blink::LayoutTableSection"* %66, %47
  br i1 %67, label %45, label %68

68:                                               ; preds = %65
  %69 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %10, align 8
  %70 = icmp eq %"class.blink::LayoutTableSection"* %69, %47
  %71 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %72 = select i1 %70, %"class.blink::LayoutObject"** %25, %"class.blink::LayoutObject"** %71
  %73 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %74 = icmp eq %"class.blink::LayoutObject"* %73, null
  br i1 %74, label %94, label %75

75:                                               ; preds = %68, %88
  %76 = phi %"class.blink::LayoutObject"* [ %90, %88 ], [ %73, %68 ]
  %77 = bitcast %"class.blink::LayoutObject"* %76 to i1 (%"class.blink::LayoutObject"*, i32)***
  %78 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %77, align 8
  %79 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %78, i64 92
  %80 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %79, align 8
  %81 = tail call zeroext i1 %80(%"class.blink::LayoutObject"* nonnull %76, i32 50) #14
  br i1 %81, label %82, label %88

82:                                               ; preds = %75
  %83 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %84 = icmp eq %"class.blink::LayoutObject"* %76, %83
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %87 = icmp eq %"class.blink::LayoutObject"* %76, %86
  br i1 %87, label %88, label %97

88:                                               ; preds = %85, %82, %75
  %89 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %76, i64 0, i32 9
  %90 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %89, align 8
  %91 = icmp eq %"class.blink::LayoutObject"* %90, null
  br i1 %91, label %92, label %75

92:                                               ; preds = %88
  %93 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %24, align 8
  br label %94

94:                                               ; preds = %92, %68
  %95 = phi %"class.blink::LayoutTableSection"* [ %93, %92 ], [ %66, %68 ]
  %96 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %97

97:                                               ; preds = %85, %94
  %98 = phi %"class.blink::LayoutObject"* [ %96, %94 ], [ %76, %85 ]
  %99 = bitcast %"class.blink::LayoutObject"* %98 to %"class.blink::LayoutTableSection"*
  %100 = icmp eq %"class.blink::LayoutObject"* %98, null
  br i1 %100, label %45, label %46
}

declare void @_ZN5blink18LayoutTableSection10LayoutRowsEv(%"class.blink::LayoutTableSection"*) local_unnamed_addr #1

declare void @_ZN5blink18LayoutTableSection36ComputeLayoutOverflowFromDescendantsEv(%"class.blink::LayoutTableSection"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox17UpdateAfterLayoutEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink11LayoutTable20RecalcLayoutOverflowEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutTable"* %0 to %"class.blink::LayoutBlock"*
  %3 = tail call zeroext i1 @_ZN5blink11LayoutBlock24RecalcSelfLayoutOverflowEv(%"class.blink::LayoutBlock"* %2) #14
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = trunc i96 %6 to i8
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %88

9:                                                ; preds = %1
  %10 = and i96 %6, -129
  store i96 %10, i96* %5, align 4
  %11 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %12 = load i16, i16* %11, align 8
  %13 = trunc i16 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %88, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %17 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutTableSection"* %17, null
  br i1 %18, label %19, label %27

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %21 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %20, align 8
  %22 = icmp eq %"class.blink::LayoutTableSection"* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %25 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutTableSection"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %19, %15, %23
  %28 = phi %"class.blink::LayoutTableSection"* [ %25, %23 ], [ %21, %19 ], [ %17, %15 ]
  %29 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %30 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %31 = bitcast %"class.blink::LayoutTableSection"** %16 to %"class.blink::LayoutObject"**
  %32 = bitcast %"class.blink::LayoutTableSection"** %29 to %"class.blink::LayoutObject"**
  br label %41

33:                                               ; preds = %52, %84, %23
  %34 = phi i32 [ 0, %23 ], [ %47, %84 ], [ %47, %52 ]
  %35 = tail call i16 @_ZN5blink11LayoutBlock41RecalcPositionedDescendantsLayoutOverflowEv(%"class.blink::LayoutBlock"* %2) #14
  %36 = and i16 %35, 1
  %37 = zext i16 %36 to i32
  %38 = or i32 %34, %37
  %39 = icmp ne i32 %38, 0
  %40 = zext i1 %39 to i16
  br label %88

41:                                               ; preds = %27, %84
  %42 = phi i32 [ 0, %27 ], [ %47, %84 ]
  %43 = phi %"class.blink::LayoutTableSection"* [ %28, %27 ], [ %86, %84 ]
  %44 = tail call i16 @_ZN5blink18LayoutTableSection20RecalcLayoutOverflowEv(%"class.blink::LayoutTableSection"* nonnull %43) #14
  %45 = and i16 %44, 1
  %46 = zext i16 %45 to i32
  %47 = or i32 %42, %46
  %48 = load i16, i16* %11, align 8
  %49 = trunc i16 %48 to i8
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %41
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %52

52:                                               ; preds = %51, %41
  %53 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %29, align 8
  %54 = icmp eq %"class.blink::LayoutTableSection"* %53, %43
  br i1 %54, label %33, label %55

55:                                               ; preds = %52
  %56 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %16, align 8
  %57 = icmp eq %"class.blink::LayoutTableSection"* %56, %43
  %58 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %59 = select i1 %57, %"class.blink::LayoutObject"** %30, %"class.blink::LayoutObject"** %58
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8
  %61 = icmp eq %"class.blink::LayoutObject"* %60, null
  br i1 %61, label %81, label %62

62:                                               ; preds = %55, %75
  %63 = phi %"class.blink::LayoutObject"* [ %77, %75 ], [ %60, %55 ]
  %64 = bitcast %"class.blink::LayoutObject"* %63 to i1 (%"class.blink::LayoutObject"*, i32)***
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, i64 92
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.blink::LayoutObject"* nonnull %63, i32 50) #14
  br i1 %68, label %69, label %75

69:                                               ; preds = %62
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  %71 = icmp eq %"class.blink::LayoutObject"* %63, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  %73 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %74 = icmp eq %"class.blink::LayoutObject"* %63, %73
  br i1 %74, label %75, label %84

75:                                               ; preds = %72, %69, %62
  %76 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %63, i64 0, i32 9
  %77 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %78 = icmp eq %"class.blink::LayoutObject"* %77, null
  br i1 %78, label %79, label %62

79:                                               ; preds = %75
  %80 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %29, align 8
  br label %81

81:                                               ; preds = %79, %55
  %82 = phi %"class.blink::LayoutTableSection"* [ %80, %79 ], [ %53, %55 ]
  %83 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %82, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %84

84:                                               ; preds = %72, %81
  %85 = phi %"class.blink::LayoutObject"* [ %83, %81 ], [ %63, %72 ]
  %86 = bitcast %"class.blink::LayoutObject"* %85 to %"class.blink::LayoutTableSection"*
  %87 = icmp eq %"class.blink::LayoutObject"* %85, null
  br i1 %87, label %33, label %41

88:                                               ; preds = %9, %1, %33
  %89 = phi i16 [ %40, %33 ], [ 0, %1 ], [ 0, %9 ]
  ret i16 %89
}

declare zeroext i1 @_ZN5blink11LayoutBlock24RecalcSelfLayoutOverflowEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i16 @_ZN5blink18LayoutTableSection20RecalcLayoutOverflowEv(%"class.blink::LayoutTableSection"*) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock41RecalcPositionedDescendantsLayoutOverflowEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable20RecalcVisualOverflowEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.blink::LayoutTableCaption"**, %"class.blink::LayoutTableCaption"*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %28

9:                                                ; preds = %39, %1
  %10 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %11 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %10, align 8
  %12 = icmp eq %"class.blink::LayoutTableSection"* %11, null
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %15 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %14, align 8
  %16 = icmp eq %"class.blink::LayoutTableSection"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %19 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutTableSection"* %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %13, %9, %17
  %22 = phi %"class.blink::LayoutTableSection"* [ %19, %17 ], [ %15, %13 ], [ %11, %9 ]
  %23 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %24 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %25 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %26 = bitcast %"class.blink::LayoutTableSection"** %10 to %"class.blink::LayoutObject"**
  %27 = bitcast %"class.blink::LayoutTableSection"** %24 to %"class.blink::LayoutObject"**
  br label %44

28:                                               ; preds = %1, %39
  %29 = phi %"class.blink::LayoutTableCaption"** [ %40, %39 ], [ %3, %1 ]
  %30 = load %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutTableCaption", %"class.blink::LayoutTableCaption"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %31) #14
  br i1 %32, label %39, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.blink::LayoutTableCaption"* %30 to %"class.blink::LayoutBlock"*
  %35 = bitcast %"class.blink::LayoutTableCaption"* %30 to void (%"class.blink::LayoutBlock"*)***
  %36 = load void (%"class.blink::LayoutBlock"*)**, void (%"class.blink::LayoutBlock"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %36, i64 53
  %38 = load void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %37, align 8
  tail call void %38(%"class.blink::LayoutBlock"* %34) #14
  br label %39

39:                                               ; preds = %33, %28
  %40 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %29, i64 1
  %41 = icmp eq %"class.blink::LayoutTableCaption"** %40, %7
  br i1 %41, label %9, label %28

42:                                               ; preds = %54, %86, %17
  %43 = bitcast %"class.blink::LayoutTable"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock24RecalcSelfVisualOverflowEv(%"class.blink::LayoutBlock"* %43) #14
  ret void

44:                                               ; preds = %21, %86
  %45 = phi %"class.blink::LayoutTableSection"* [ %22, %21 ], [ %88, %86 ]
  %46 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %46) #14
  br i1 %47, label %49, label %48

48:                                               ; preds = %44
  tail call void @_ZN5blink18LayoutTableSection20RecalcVisualOverflowEv(%"class.blink::LayoutTableSection"* nonnull %45) #14
  br label %49

49:                                               ; preds = %44, %48
  %50 = load i16, i16* %23, align 8
  %51 = trunc i16 %50 to i8
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %54

54:                                               ; preds = %53, %49
  %55 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %24, align 8
  %56 = icmp eq %"class.blink::LayoutTableSection"* %55, %45
  br i1 %56, label %42, label %57

57:                                               ; preds = %54
  %58 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %10, align 8
  %59 = icmp eq %"class.blink::LayoutTableSection"* %58, %45
  %60 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %61 = select i1 %59, %"class.blink::LayoutObject"** %25, %"class.blink::LayoutObject"** %60
  %62 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %61, align 8
  %63 = icmp eq %"class.blink::LayoutObject"* %62, null
  br i1 %63, label %83, label %64

64:                                               ; preds = %57, %77
  %65 = phi %"class.blink::LayoutObject"* [ %79, %77 ], [ %62, %57 ]
  %66 = bitcast %"class.blink::LayoutObject"* %65 to i1 (%"class.blink::LayoutObject"*, i32)***
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %66, align 8
  %68 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %67, i64 92
  %69 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.blink::LayoutObject"* nonnull %65, i32 50) #14
  br i1 %70, label %71, label %77

71:                                               ; preds = %64
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %73 = icmp eq %"class.blink::LayoutObject"* %65, %72
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  %75 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %76 = icmp eq %"class.blink::LayoutObject"* %65, %75
  br i1 %76, label %77, label %86

77:                                               ; preds = %74, %71, %64
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %65, i64 0, i32 9
  %79 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %80 = icmp eq %"class.blink::LayoutObject"* %79, null
  br i1 %80, label %81, label %64

81:                                               ; preds = %77
  %82 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %24, align 8
  br label %83

83:                                               ; preds = %81, %57
  %84 = phi %"class.blink::LayoutTableSection"* [ %82, %81 ], [ %55, %57 ]
  %85 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %84, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %86

86:                                               ; preds = %74, %83
  %87 = phi %"class.blink::LayoutObject"* [ %85, %83 ], [ %65, %74 ]
  %88 = bitcast %"class.blink::LayoutObject"* %87 to %"class.blink::LayoutTableSection"*
  %89 = icmp eq %"class.blink::LayoutObject"* %87, null
  br i1 %89, label %42, label %44
}

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare void @_ZN5blink18LayoutTableSection20RecalcVisualOverflowEv(%"class.blink::LayoutTableSection"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock24RecalcSelfVisualOverflowEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable12UpdateLayoutEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutAnalyzer::Scope", align 8
  %3 = alloca %"class.blink::TextAutosizer::LayoutScope", align 8
  %4 = alloca %"class.blink::SubtreeLayoutScope", align 8
  %5 = alloca %"class.blink::LayoutState", align 8
  %6 = alloca %"class.WTF::Vector.2106", align 8
  %7 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #14
  %9 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %7) #14
  %10 = bitcast %"class.blink::LayoutTable"* %0 to %"class.blink::LayoutBlock"*
  %11 = call zeroext i1 @_ZN5blink11LayoutBlock16SimplifiedLayoutEv(%"class.blink::LayoutBlock"* %10) #14
  br i1 %11, label %1006, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::TextAutosizer::LayoutScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  %14 = bitcast %"class.blink::TextAutosizer::LayoutScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  call void @_ZN5blink13TextAutosizer11LayoutScopeC1EPNS_11LayoutBlockEPNS_18SubtreeLayoutScopeE(%"class.blink::TextAutosizer::LayoutScope"* nonnull %3, %"class.blink::LayoutBlock"* %10, %"class.blink::SubtreeLayoutScope"* null) #14
  %15 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %16 = load i16, i16* %15, align 8
  %17 = trunc i16 %16 to i8
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %12
  call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %20

20:                                               ; preds = %12, %19
  %21 = bitcast %"class.blink::SubtreeLayoutScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  %22 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %4, i64 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %22, align 8
  call void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* nonnull %4, %"class.blink::LayoutObject"* dereferenceable(88) %7) #14
  %23 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %23) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 56, i1 false)
  %24 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"* nonnull %5, %"class.blink::LayoutBox"* dereferenceable(216) %24, i1 zeroext false) #14
  %25 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %26 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %26, i64 0, i32 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  %29 = load i160, i160* %28, align 8
  %30 = and i160 %29, 15211807202738752817960438464512
  %31 = icmp eq i160 %30, 0
  %32 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %34 = select i1 %31, i32* %32, i32* %33
  %35 = load i32, i32* %34, align 4
  %36 = select i1 %31, i32* %33, i32* %32
  %37 = load i32, i32* %36, align 4
  br i1 %31, label %38, label %42

38:                                               ; preds = %20
  %39 = load i32, i32* %33, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  store i32 0, i32* %33, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %24) #14
  br label %46

42:                                               ; preds = %20
  %43 = load i32, i32* %32, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %42
  store i32 0, i32* %32, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %24) #14
  br label %46

46:                                               ; preds = %38, %41, %42, %45
  call void @_ZN5blink11LayoutTable18UpdateLogicalWidthEv(%"class.blink::LayoutTable"* %0)
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %47, i64 0, i32 0, i32 9
  %49 = bitcast [20 x i8]* %48 to i160*
  %50 = load i160, i160* %49, align 8
  %51 = and i160 %50, 15211807202738752817960438464512
  %52 = icmp eq i160 %51, 0
  %53 = select i1 %52, i32* %32, i32* %33
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %35
  br i1 %55, label %70, label %56

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4
  br label %62

62:                                               ; preds = %60, %62
  %63 = phi i32 [ 0, %60 ], [ %67, %62 ]
  %64 = call dereferenceable(8) %"class.blink::LayoutTableCaption"** @_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2110"* %61, i32 %63) #14
  %65 = bitcast %"class.blink::LayoutTableCaption"** %64 to %"class.blink::LayoutObject"**
  %66 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %65, align 8
  call void @_ZN5blink18SubtreeLayoutScope14SetNeedsLayoutEPNS_12LayoutObjectEPKc(%"class.blink::SubtreeLayoutScope"* nonnull %4, %"class.blink::LayoutObject"* %66, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason13kTableChangedE, i64 0, i64 0)) #14
  %67 = add nuw i32 %63, 1
  %68 = load i32, i32* %57, align 4
  %69 = icmp ult i32 %67, %68
  br i1 %69, label %62, label %70

70:                                               ; preds = %62, %56, %46
  %71 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %72 = load %"class.blink::TableLayoutAlgorithm"*, %"class.blink::TableLayoutAlgorithm"** %71, align 8
  %73 = bitcast %"class.blink::TableLayoutAlgorithm"* %72 to void (%"class.blink::TableLayoutAlgorithm"*)***
  %74 = load void (%"class.blink::TableLayoutAlgorithm"*)**, void (%"class.blink::TableLayoutAlgorithm"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::TableLayoutAlgorithm"*)*, void (%"class.blink::TableLayoutAlgorithm"*)** %74, i64 5
  %76 = load void (%"class.blink::TableLayoutAlgorithm"*)*, void (%"class.blink::TableLayoutAlgorithm"*)** %75, align 8
  call void %76(%"class.blink::TableLayoutAlgorithm"* %72) #14
  %77 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4
  %78 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %176

81:                                               ; preds = %192, %70
  %82 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %83 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %82, align 8
  %84 = icmp eq %"class.blink::LayoutTableSection"* %83, null
  br i1 %84, label %85, label %92

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %87 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %86, align 8
  %88 = icmp eq %"class.blink::LayoutTableSection"* %87, null
  br i1 %88, label %89, label %92

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %91 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %90, align 8
  br label %92

92:                                               ; preds = %81, %85, %89
  %93 = phi %"class.blink::LayoutTableSection"* [ %91, %89 ], [ %83, %81 ], [ %87, %85 ]
  %94 = load i16, i16* %15, align 8
  %95 = trunc i16 %94 to i8
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %92
  call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %98

98:                                               ; preds = %97, %92
  %99 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %100 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %99, align 8
  %101 = icmp eq %"class.blink::LayoutTableSection"* %100, null
  br i1 %101, label %102, label %134

102:                                              ; preds = %98
  %103 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %82, align 8
  %104 = icmp eq %"class.blink::LayoutTableSection"* %103, null
  %105 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %104, label %110, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %108 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %107, align 8
  %109 = icmp eq %"class.blink::LayoutTableSection"* %108, null
  br i1 %109, label %134, label %110

110:                                              ; preds = %106, %102
  %111 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 1
  %112 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %111, align 8
  %113 = icmp eq %"class.blink::LayoutObject"* %112, null
  br i1 %113, label %134, label %114

114:                                              ; preds = %110
  %115 = bitcast %"class.blink::LayoutTableSection"** %82 to %"class.blink::LayoutObject"**
  br label %116

116:                                              ; preds = %130, %114
  %117 = phi %"class.blink::LayoutObject"* [ %105, %114 ], [ %131, %130 ]
  %118 = phi %"class.blink::LayoutObject"* [ %112, %114 ], [ %128, %130 ]
  %119 = icmp eq %"class.blink::LayoutObject"* %118, %117
  br i1 %119, label %126, label %120

120:                                              ; preds = %116
  %121 = bitcast %"class.blink::LayoutObject"* %118 to i1 (%"class.blink::LayoutObject"*, i32)***
  %122 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %121, align 8
  %123 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %122, i64 92
  %124 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %123, align 8
  %125 = call zeroext i1 %124(%"class.blink::LayoutObject"* nonnull %118, i32 50) #14
  br i1 %125, label %132, label %126

126:                                              ; preds = %120, %116
  %127 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %118, i64 0, i32 8
  %128 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %127, align 8
  %129 = icmp eq %"class.blink::LayoutObject"* %128, null
  br i1 %129, label %134, label %130

130:                                              ; preds = %126
  %131 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %115, align 8
  br label %116

132:                                              ; preds = %120
  %133 = bitcast %"class.blink::LayoutObject"* %118 to %"class.blink::LayoutTableSection"*
  br label %134

134:                                              ; preds = %126, %98, %106, %110, %132
  %135 = phi %"class.blink::LayoutTableSection"* [ %133, %132 ], [ %100, %98 ], [ %103, %106 ], [ null, %110 ], [ null, %126 ]
  %136 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %137 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %136, i64 0, i32 0, i32 9
  %138 = bitcast [20 x i8]* %137 to i160*
  %139 = load i160, i160* %138, align 8
  %140 = and i160 %139, 15211807202738752817960438464512
  %141 = icmp eq i160 %140, 0
  %142 = select i1 %141, i32* %33, i32* %32
  %143 = load i32, i32* %142, align 4
  %144 = and i160 %139, 81129638414606681695789005144064
  %145 = icmp eq i160 %144, 0
  %146 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0
  %147 = lshr i160 %139, 102
  %148 = trunc i160 %147 to i8
  %149 = and i8 %148, 3
  %150 = bitcast %"class.blink::LayoutTable"* %0 to i8*
  switch i8 %149, label %151 [
    i8 0, label %160
    i8 1, label %152
  ]

151:                                              ; preds = %134
  br label %152

152:                                              ; preds = %151, %134
  %153 = phi { i64, i64 } [ { i64 993, i64 0 }, %151 ], [ { i64 1001, i64 0 }, %134 ]
  %154 = extractvalue { i64, i64 } %153, 0
  %155 = extractvalue { i64, i64 } %153, 1
  %156 = getelementptr inbounds i8, i8* %150, i64 %155
  %157 = bitcast i8* %156 to %"class.blink::LayoutBoxModelObject"*
  %158 = and i64 %154, 1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %170, label %160

160:                                              ; preds = %152, %134
  %161 = phi %"class.blink::LayoutBoxModelObject"* [ %157, %152 ], [ %146, %134 ]
  %162 = phi i8* [ %156, %152 ], [ %150, %134 ]
  %163 = phi i64 [ %154, %152 ], [ 977, %134 ]
  %164 = bitcast i8* %162 to i8**
  %165 = load i8*, i8** %164, align 8
  %166 = add i64 %163, -1
  %167 = getelementptr i8, i8* %165, i64 %166
  %168 = bitcast i8* %167 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %169 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %168, align 8
  br label %172

170:                                              ; preds = %152
  %171 = inttoptr i64 %154 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %172

172:                                              ; preds = %160, %170
  %173 = phi %"class.blink::LayoutBoxModelObject"* [ %161, %160 ], [ %157, %170 ]
  %174 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %169, %160 ], [ %171, %170 ]
  %175 = call i32 %174(%"class.blink::LayoutBoxModelObject"* %173) #14
  br i1 %145, label %231, label %196

176:                                              ; preds = %70, %192
  %177 = phi i32 [ %193, %192 ], [ 0, %70 ]
  %178 = call dereferenceable(8) %"class.blink::LayoutTableCaption"** @_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2110"* %77, i32 %177) #14
  %179 = bitcast %"class.blink::LayoutTableCaption"** %178 to %"class.blink::LayoutObject"**
  %180 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %180, i64 0, i32 5, i32 0
  %182 = bitcast %"class.blink::ComputedStyle"** %181 to %"class.blink::ComputedStyleBase"**
  %183 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %183, i64 0, i32 9
  %185 = bitcast [20 x i8]* %184 to i160*
  %186 = load i160, i160* %185, align 8
  %187 = and i160 %186, 1298074214633706907132624082305024
  %188 = icmp eq i160 %187, 0
  br i1 %188, label %189, label %192

189:                                              ; preds = %176
  %190 = call dereferenceable(8) %"class.blink::LayoutTableCaption"** @_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2110"* %77, i32 %177) #14
  %191 = load %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %190, align 8
  call void @_ZN5blink11LayoutTable13LayoutCaptionERNS_18LayoutTableCaptionERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutTable"* %0, %"class.blink::LayoutTableCaption"* dereferenceable(280) %191, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %4)
  br label %192

192:                                              ; preds = %176, %189
  %193 = add nuw i32 %177, 1
  %194 = load i32, i32* %78, align 4
  %195 = icmp ult i32 %193, %194
  br i1 %195, label %176, label %81

196:                                              ; preds = %172
  %197 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8, !noalias !79
  %198 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %197, i64 0, i32 0, i32 9
  %199 = bitcast [20 x i8]* %198 to i160*
  %200 = load i160, i160* %199, align 8, !noalias !79
  %201 = lshr i160 %200, 102
  %202 = trunc i160 %201 to i8
  %203 = and i8 %202, 3
  switch i8 %203, label %204 [
    i8 0, label %213
    i8 1, label %205
  ]

204:                                              ; preds = %196
  br label %205

205:                                              ; preds = %204, %196
  %206 = phi { i64, i64 } [ { i64 961, i64 0 }, %204 ], [ { i64 969, i64 0 }, %196 ]
  %207 = extractvalue { i64, i64 } %206, 0
  %208 = extractvalue { i64, i64 } %206, 1
  %209 = getelementptr inbounds i8, i8* %150, i64 %208
  %210 = bitcast i8* %209 to %"class.blink::LayoutBoxModelObject"*
  %211 = and i64 %207, 1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %223, label %213

213:                                              ; preds = %205, %196
  %214 = phi %"class.blink::LayoutBoxModelObject"* [ %210, %205 ], [ %146, %196 ]
  %215 = phi i8* [ %209, %205 ], [ %150, %196 ]
  %216 = phi i64 [ %207, %205 ], [ 945, %196 ]
  %217 = bitcast i8* %215 to i8**
  %218 = load i8*, i8** %217, align 8
  %219 = add i64 %216, -1
  %220 = getelementptr i8, i8* %218, i64 %219
  %221 = bitcast i8* %220 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %222 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %221, align 8
  br label %225

223:                                              ; preds = %205
  %224 = inttoptr i64 %207 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %225

225:                                              ; preds = %223, %213
  %226 = phi %"class.blink::LayoutBoxModelObject"* [ %214, %213 ], [ %210, %223 ]
  %227 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %222, %213 ], [ %224, %223 ]
  %228 = call i32 %227(%"class.blink::LayoutBoxModelObject"* %226) #14
  %229 = icmp slt i32 %228, 0
  %230 = select i1 %229, i32 -2147483648, i32 2147483647
  br label %231

231:                                              ; preds = %225, %172
  %232 = phi i32 [ 0, %172 ], [ %228, %225 ]
  %233 = phi i32 [ 2147483647, %172 ], [ %230, %225 ]
  %234 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %175, i32 %232) #14
  %235 = extractvalue { i32, i1 } %234, 1
  %236 = extractvalue { i32, i1 } %234, 0
  %237 = select i1 %235, i32 %233, i32 %236, !prof !20
  %238 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8, !noalias !82
  %239 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %238, i64 0, i32 0, i32 9
  %240 = bitcast [20 x i8]* %239 to i160*
  %241 = load i160, i160* %240, align 8, !noalias !82
  %242 = lshr i160 %241, 102
  %243 = trunc i160 %242 to i8
  %244 = and i8 %243, 3
  switch i8 %244, label %245 [
    i8 0, label %254
    i8 1, label %246
  ]

245:                                              ; preds = %231
  br label %246

246:                                              ; preds = %245, %231
  %247 = phi { i64, i64 } [ { i64 1001, i64 0 }, %245 ], [ { i64 993, i64 0 }, %231 ]
  %248 = extractvalue { i64, i64 } %247, 0
  %249 = extractvalue { i64, i64 } %247, 1
  %250 = getelementptr inbounds i8, i8* %150, i64 %249
  %251 = bitcast i8* %250 to %"class.blink::LayoutBoxModelObject"*
  %252 = and i64 %248, 1
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %264, label %254

254:                                              ; preds = %246, %231
  %255 = phi %"class.blink::LayoutBoxModelObject"* [ %251, %246 ], [ %146, %231 ]
  %256 = phi i8* [ %250, %246 ], [ %150, %231 ]
  %257 = phi i64 [ %248, %246 ], [ 985, %231 ]
  %258 = bitcast i8* %256 to i8**
  %259 = load i8*, i8** %258, align 8
  %260 = add i64 %257, -1
  %261 = getelementptr i8, i8* %259, i64 %260
  %262 = bitcast i8* %261 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %263 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %262, align 8
  br label %266

264:                                              ; preds = %246
  %265 = inttoptr i64 %248 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %266

266:                                              ; preds = %254, %264
  %267 = phi %"class.blink::LayoutBoxModelObject"* [ %255, %254 ], [ %251, %264 ]
  %268 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %263, %254 ], [ %265, %264 ]
  %269 = call i32 %268(%"class.blink::LayoutBoxModelObject"* %267) #14
  br i1 %145, label %305, label %270

270:                                              ; preds = %266
  %271 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8, !noalias !85
  %272 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %271, i64 0, i32 0, i32 9
  %273 = bitcast [20 x i8]* %272 to i160*
  %274 = load i160, i160* %273, align 8, !noalias !85
  %275 = lshr i160 %274, 102
  %276 = trunc i160 %275 to i8
  %277 = and i8 %276, 3
  switch i8 %277, label %278 [
    i8 0, label %287
    i8 1, label %279
  ]

278:                                              ; preds = %270
  br label %279

279:                                              ; preds = %278, %270
  %280 = phi { i64, i64 } [ { i64 969, i64 0 }, %278 ], [ { i64 961, i64 0 }, %270 ]
  %281 = extractvalue { i64, i64 } %280, 0
  %282 = extractvalue { i64, i64 } %280, 1
  %283 = getelementptr inbounds i8, i8* %150, i64 %282
  %284 = bitcast i8* %283 to %"class.blink::LayoutBoxModelObject"*
  %285 = and i64 %281, 1
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %297, label %287

287:                                              ; preds = %279, %270
  %288 = phi %"class.blink::LayoutBoxModelObject"* [ %284, %279 ], [ %146, %270 ]
  %289 = phi i8* [ %283, %279 ], [ %150, %270 ]
  %290 = phi i64 [ %281, %279 ], [ 953, %270 ]
  %291 = bitcast i8* %289 to i8**
  %292 = load i8*, i8** %291, align 8
  %293 = add i64 %290, -1
  %294 = getelementptr i8, i8* %292, i64 %293
  %295 = bitcast i8* %294 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %296 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %295, align 8
  br label %299

297:                                              ; preds = %279
  %298 = inttoptr i64 %281 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %299

299:                                              ; preds = %297, %287
  %300 = phi %"class.blink::LayoutBoxModelObject"* [ %288, %287 ], [ %284, %297 ]
  %301 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %296, %287 ], [ %298, %297 ]
  %302 = call i32 %301(%"class.blink::LayoutBoxModelObject"* %300) #14
  %303 = icmp slt i32 %302, 0
  %304 = select i1 %303, i32 -2147483648, i32 2147483647
  br label %305

305:                                              ; preds = %299, %266
  %306 = phi i32 [ 0, %266 ], [ %302, %299 ]
  %307 = phi i32 [ 2147483647, %266 ], [ %304, %299 ]
  %308 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %269, i32 %306) #14
  %309 = extractvalue { i32, i1 } %308, 1
  %310 = extractvalue { i32, i1 } %308, 0
  %311 = select i1 %309, i32 %307, i32 %310, !prof !20
  %312 = icmp slt i32 %237, 0
  %313 = select i1 %312, i32 -2147483648, i32 2147483647
  %314 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %143, i32 %237) #14
  %315 = extractvalue { i32, i1 } %314, 1
  %316 = extractvalue { i32, i1 } %314, 0
  %317 = select i1 %315, i32 %313, i32 %316, !prof !20
  %318 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %319 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %318, i64 0, i32 0, i32 9
  %320 = bitcast [20 x i8]* %319 to i160*
  %321 = load i160, i160* %320, align 8
  %322 = and i160 %321, 15211807202738752817960438464512
  %323 = icmp eq i160 %322, 0
  br i1 %323, label %324, label %328

324:                                              ; preds = %305
  %325 = load i32, i32* %33, align 4
  %326 = icmp eq i32 %325, %317
  br i1 %326, label %332, label %327

327:                                              ; preds = %324
  store i32 %317, i32* %33, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %24) #14
  br label %332

328:                                              ; preds = %305
  %329 = load i32, i32* %32, align 4
  %330 = icmp eq i32 %329, %317
  br i1 %330, label %332, label %331

331:                                              ; preds = %328
  store i32 %317, i32* %32, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %24) #14
  br label %332

332:                                              ; preds = %324, %327, %328, %331
  %333 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %334 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %333, i64 0, i32 0, i32 9
  %335 = bitcast [20 x i8]* %334 to i160*
  %336 = load i160, i160* %335, align 8
  %337 = and i160 %336, 15211807202738752817960438464512
  %338 = icmp eq i160 %337, 0
  %339 = select i1 %338, i64 992, i64 976
  %340 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0
  %341 = bitcast %"class.blink::LayoutTable"* %0 to i8**
  %342 = load i8*, i8** %341, align 8
  %343 = getelementptr i8, i8* %342, i64 %339
  %344 = bitcast i8* %343 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %345 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %344, align 8
  %346 = call i32 %345(%"class.blink::LayoutBoxModelObject"* %340) #14
  br i1 %145, label %368, label %347

347:                                              ; preds = %332
  %348 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %349 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %348, i64 0, i32 0, i32 9
  %350 = bitcast [20 x i8]* %349 to i160*
  %351 = load i160, i160* %350, align 8
  %352 = and i160 %351, 15211807202738752817960438464512
  %353 = icmp eq i160 %352, 0
  %354 = select i1 %353, i64 960, i64 944
  %355 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0
  %356 = bitcast %"class.blink::LayoutTable"* %0 to i8**
  %357 = load i8*, i8** %356, align 8
  %358 = getelementptr i8, i8* %357, i64 %354
  %359 = bitcast i8* %358 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %360 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %359, align 8
  %361 = call i32 %360(%"class.blink::LayoutBoxModelObject"* %355) #14
  %362 = icmp slt i32 %361, 0
  %363 = select i1 %362, i32 -2147483648, i32 2147483647
  %364 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %346, i32 %361) #14
  %365 = extractvalue { i32, i1 } %364, 1
  %366 = extractvalue { i32, i1 } %364, 0
  %367 = select i1 %365, i32 %363, i32 %366, !prof !20
  br label %368

368:                                              ; preds = %347, %332
  %369 = phi i32 [ %346, %332 ], [ %367, %347 ]
  %370 = call i32 @_ZNK5blink9LayoutBox22AvailableLogicalHeightENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %24, i32 1) #14
  %371 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 22, i32 0
  %372 = load i32, i32* %371, align 4
  %373 = icmp ne i32 %372, 0
  %374 = icmp ne i32 %372, %370
  %375 = and i1 %374, %373
  %376 = zext i1 %375 to i32
  store i32 %370, i32* %371, align 4
  %377 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %99, align 8
  %378 = icmp ne %"class.blink::LayoutTableSection"* %377, null
  br i1 %378, label %379, label %438

379:                                              ; preds = %368
  %380 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %377, i64 0, i32 0, i32 0
  %381 = bitcast %"class.blink::LayoutTableSection"* %377 to i32 (%"class.blink::LayoutBox"*, i32)***
  %382 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %381, align 8
  %383 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %382, i64 176
  %384 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %383, align 8
  %385 = call i32 %384(%"class.blink::LayoutBox"* %380, i32 0) #14
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %425, label %387

387:                                              ; preds = %379
  %388 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %377, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %389 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %388 to i96*
  %390 = load i96, i96* %389, align 4
  %391 = and i96 %390, 63
  %392 = icmp eq i96 %391, 0
  br i1 %392, label %399, label %393

393:                                              ; preds = %387
  %394 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %377, i64 0, i32 0, i32 0, i32 0, i32 0
  %395 = bitcast %"class.blink::LayoutTableSection"* %377 to void (%"class.blink::LayoutObject"*)***
  %396 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %395, align 8
  %397 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %396, i64 54
  %398 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %397, align 8
  call void %398(%"class.blink::LayoutObject"* %394) #14
  br label %399

399:                                              ; preds = %387, %393
  %400 = call i32 @_ZN5blink18LayoutTableSection20CalcRowLogicalHeightEv(%"class.blink::LayoutTableSection"* nonnull %377) #14
  %401 = icmp sgt i32 %400, 33554431
  br i1 %401, label %406, label %402

402:                                              ; preds = %399
  %403 = icmp slt i32 %400, -33554432
  %404 = shl i32 %400, 6
  %405 = select i1 %403, i32 -2147483648, i32 %404
  br label %406

406:                                              ; preds = %402, %399
  %407 = phi i32 [ 2147483647, %399 ], [ %405, %402 ]
  %408 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %377, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %409 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %408, align 8
  %410 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %409, i64 0, i32 0, i32 9
  %411 = bitcast [20 x i8]* %410 to i160*
  %412 = load i160, i160* %411, align 8
  %413 = and i160 %412, 15211807202738752817960438464512
  %414 = icmp eq i160 %413, 0
  br i1 %414, label %415, label %420

415:                                              ; preds = %406
  %416 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %377, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %417 = load i32, i32* %416, align 4
  %418 = icmp eq i32 %417, %407
  br i1 %418, label %425, label %419

419:                                              ; preds = %415
  store i32 %407, i32* %416, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %380) #14
  br label %425

420:                                              ; preds = %406
  %421 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %377, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %422 = load i32, i32* %421, align 4
  %423 = icmp eq i32 %422, %407
  br i1 %423, label %425, label %424

424:                                              ; preds = %420
  store i32 %407, i32* %421, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %380) #14
  br label %425

425:                                              ; preds = %424, %420, %419, %415, %379
  %426 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %377, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %427 = bitcast %"class.blink::LayoutObject"** %426 to %"class.blink::LayoutTable"**
  %428 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %427, align 8
  %429 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %428, i64 0, i32 7
  %430 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %429, align 8
  %431 = icmp eq %"class.blink::LayoutTableSection"* %430, %377
  br i1 %431, label %432, label %435

432:                                              ; preds = %425
  %433 = call zeroext i1 @_ZNK5blink18LayoutTableSection17GroupShouldRepeatEv(%"class.blink::LayoutTableSection"* nonnull %377) #14
  %434 = zext i1 %433 to i8
  br label %435

435:                                              ; preds = %425, %432
  %436 = phi i8 [ 0, %425 ], [ %434, %432 ]
  %437 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %377, i64 0, i32 17
  store i8 %436, i8* %437, align 4
  br label %438

438:                                              ; preds = %435, %368
  %439 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %82, align 8
  %440 = icmp ne %"class.blink::LayoutTableSection"* %439, null
  br i1 %440, label %441, label %442

441:                                              ; preds = %438
  call void @_ZN5blink11LayoutTable13LayoutSectionERNS_18LayoutTableSectionERNS_18SubtreeLayoutScopeENS_10LayoutUnitENS_24TableHeightChangingValueE(%"class.blink::LayoutTable"* %0, %"class.blink::LayoutTableSection"* nonnull dereferenceable(360) %439, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %4, i32 %369, i32 %376)
  br label %442

442:                                              ; preds = %441, %438
  %443 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %5, i64 0, i32 4, i32 0
  %444 = load i32, i32* %443, align 8
  %445 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %5, i64 0, i32 5, i32 0
  %446 = load i32, i32* %445, align 4
  %447 = load i8, i8* %23, align 8
  %448 = and i8 %447, 1
  %449 = icmp eq i8 %448, 0
  br i1 %449, label %524, label %450

450:                                              ; preds = %442
  %451 = call zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"* %24) #14
  br i1 %451, label %452, label %524

452:                                              ; preds = %450
  br i1 %440, label %453, label %499

453:                                              ; preds = %452
  %454 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %439, i64 0, i32 16
  %455 = load i8, i8* %454, align 1, !range !21
  %456 = icmp eq i8 %455, 0
  br i1 %456, label %499, label %457

457:                                              ; preds = %453
  %458 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %439, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %459 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %458, align 8
  %460 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %459, i64 0, i32 0, i32 9
  %461 = bitcast [20 x i8]* %460 to i160*
  %462 = load i160, i160* %461, align 8
  %463 = and i160 %462, 15211807202738752817960438464512
  %464 = icmp eq i160 %463, 0
  %465 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %439, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %466 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %439, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %467 = select i1 %464, i32* %465, i32* %466
  %468 = load i32, i32* %467, align 4
  %469 = icmp slt i32 %468, 0
  %470 = select i1 %469, i32 -2147483648, i32 2147483647
  %471 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %444, i32 %468) #14
  %472 = extractvalue { i32, i1 } %471, 1
  %473 = extractvalue { i32, i1 } %471, 0
  %474 = select i1 %472, i32 %470, i32 %473, !prof !20
  %475 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %439, i64 0, i32 0, i32 1, i32 0
  %476 = bitcast %"class.blink::LayoutObject"** %475 to %"class.blink::LayoutTableRow"**
  %477 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %476, align 8
  %478 = icmp eq %"class.blink::LayoutTableRow"* %477, null
  br i1 %478, label %496, label %479

479:                                              ; preds = %457
  %480 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %477, i64 0, i32 0, i32 0, i32 12, i32 0, i32 0
  %481 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %480, align 8
  %482 = icmp eq %"struct.blink::LayoutBoxRareData"* %481, null
  br i1 %482, label %487, label %483

483:                                              ; preds = %479
  %484 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %481, i64 0, i32 8, i32 0
  %485 = load i32, i32* %484, align 4
  %486 = icmp sgt i32 %485, -1
  br i1 %486, label %487, label %489

487:                                              ; preds = %479, %483
  %488 = phi i32 [ %485, %483 ], [ 0, %479 ]
  br label %489

489:                                              ; preds = %483, %487
  %490 = phi i32 [ %488, %487 ], [ %485, %483 ]
  %491 = phi i32 [ -2147483648, %487 ], [ 2147483647, %483 ]
  %492 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %474, i32 %490) #14
  %493 = extractvalue { i32, i1 } %492, 1
  %494 = extractvalue { i32, i1 } %492, 0
  %495 = select i1 %493, i32 %491, i32 %494, !prof !20
  br label %496

496:                                              ; preds = %457, %489
  %497 = phi i32 [ %474, %457 ], [ %495, %489 ]
  %498 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 20, i32 0
  store i32 %497, i32* %498, align 4
  br label %499

499:                                              ; preds = %453, %496, %452
  %500 = phi i32 [ %497, %496 ], [ %444, %453 ], [ %444, %452 ]
  br i1 %378, label %501, label %524

501:                                              ; preds = %499
  %502 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %377, i64 0, i32 17
  %503 = load i8, i8* %502, align 4, !range !21
  %504 = icmp eq i8 %503, 0
  br i1 %504, label %524, label %505

505:                                              ; preds = %501
  %506 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %377, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %507 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %506, align 8
  %508 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %507, i64 0, i32 0, i32 9
  %509 = bitcast [20 x i8]* %508 to i160*
  %510 = load i160, i160* %509, align 8
  %511 = and i160 %510, 15211807202738752817960438464512
  %512 = icmp eq i160 %511, 0
  %513 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %377, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %514 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %377, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %515 = select i1 %512, i32* %513, i32* %514
  %516 = load i32, i32* %515, align 4
  %517 = icmp slt i32 %516, 0
  %518 = select i1 %517, i32 -2147483648, i32 2147483647
  %519 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %446, i32 %516) #14
  %520 = extractvalue { i32, i1 } %519, 1
  %521 = extractvalue { i32, i1 } %519, 0
  %522 = select i1 %520, i32 %518, i32 %521, !prof !20
  %523 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 21, i32 0
  store i32 %522, i32* %523, align 8
  br label %524

524:                                              ; preds = %501, %442, %499, %505, %450
  %525 = phi i32 [ %522, %505 ], [ %446, %501 ], [ %446, %499 ], [ %446, %450 ], [ %446, %442 ]
  %526 = phi i32 [ %500, %505 ], [ %500, %501 ], [ %500, %499 ], [ %444, %450 ], [ %444, %442 ]
  store i32 %526, i32* %443, align 8
  store i32 %525, i32* %445, align 4
  %527 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %528 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %527, align 8
  %529 = icmp eq %"class.blink::LayoutObject"* %528, null
  br i1 %529, label %530, label %536

530:                                              ; preds = %569, %524
  store i32 %444, i32* %443, align 8
  store i32 %446, i32* %445, align 4
  %531 = bitcast %"class.WTF::Vector.2106"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %531) #14
  %532 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %6, i64 0, i32 0, i32 0, i32 0
  %533 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %531, i8 0, i64 16, i1 false) #14
  call void @_ZN5blink11LayoutTable31AdjustWidthsForCollapsedColumnsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutTable"* %0, %"class.WTF::Vector.2106"* nonnull dereferenceable(16) %6)
  %534 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %99, align 8
  %535 = icmp eq %"class.blink::LayoutTableSection"* %534, null
  br i1 %535, label %574, label %573

536:                                              ; preds = %524, %569
  %537 = phi %"class.blink::LayoutObject"* [ %571, %569 ], [ %528, %524 ]
  %538 = bitcast %"class.blink::LayoutObject"* %537 to i1 (%"class.blink::LayoutObject"*, i32)***
  %539 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %538, align 8
  %540 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %539, i64 92
  %541 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %540, align 8
  %542 = call zeroext i1 %541(%"class.blink::LayoutObject"* nonnull %537, i32 50) #14
  br i1 %542, label %543, label %553

543:                                              ; preds = %536
  %544 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %82, align 8
  %545 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %544, i64 0, i32 0, i32 0, i32 0, i32 0
  %546 = icmp eq %"class.blink::LayoutObject"* %537, %545
  br i1 %546, label %569, label %547

547:                                              ; preds = %543
  %548 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %99, align 8
  %549 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %548, i64 0, i32 0, i32 0, i32 0, i32 0
  %550 = icmp eq %"class.blink::LayoutObject"* %537, %549
  br i1 %550, label %569, label %551

551:                                              ; preds = %547
  %552 = bitcast %"class.blink::LayoutObject"* %537 to %"class.blink::LayoutTableSection"*
  call void @_ZN5blink11LayoutTable13LayoutSectionERNS_18LayoutTableSectionERNS_18SubtreeLayoutScopeENS_10LayoutUnitENS_24TableHeightChangingValueE(%"class.blink::LayoutTable"* %0, %"class.blink::LayoutTableSection"* nonnull dereferenceable(360) %552, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %4, i32 %369, i32 %376)
  br label %569

553:                                              ; preds = %536
  %554 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %538, align 8
  %555 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %554, i64 92
  %556 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %555, align 8
  %557 = call zeroext i1 %556(%"class.blink::LayoutObject"* nonnull %537, i32 48) #14
  br i1 %557, label %558, label %569

558:                                              ; preds = %553
  %559 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %537, i64 0, i32 4
  %560 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %559 to i96*
  %561 = load i96, i96* %560, align 4
  %562 = and i96 %561, 63
  %563 = icmp eq i96 %562, 0
  br i1 %563, label %569, label %564

564:                                              ; preds = %558
  %565 = bitcast %"class.blink::LayoutObject"* %537 to void (%"class.blink::LayoutObject"*)***
  %566 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %565, align 8
  %567 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %566, i64 54
  %568 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %567, align 8
  call void %568(%"class.blink::LayoutObject"* nonnull %537) #14
  br label %569

569:                                              ; preds = %564, %558, %547, %543, %551, %553
  %570 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %537, i64 0, i32 9
  %571 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %570, align 8
  %572 = icmp eq %"class.blink::LayoutObject"* %571, null
  br i1 %572, label %530, label %536

573:                                              ; preds = %530
  call void @_ZN5blink11LayoutTable13LayoutSectionERNS_18LayoutTableSectionERNS_18SubtreeLayoutScopeENS_10LayoutUnitENS_24TableHeightChangingValueE(%"class.blink::LayoutTable"* %0, %"class.blink::LayoutTableSection"* nonnull dereferenceable(360) %534, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %4, i32 %369, i32 %376)
  br label %574

574:                                              ; preds = %530, %573
  %575 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %576 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %575, i64 0, i32 0, i32 9
  %577 = bitcast [20 x i8]* %576 to i160*
  %578 = load i160, i160* %577, align 8
  %579 = and i160 %578, 15211807202738752817960438464512
  %580 = icmp eq i160 %579, 0
  br i1 %580, label %581, label %585

581:                                              ; preds = %574
  %582 = load i32, i32* %33, align 4
  %583 = icmp eq i32 %582, %317
  br i1 %583, label %589, label %584

584:                                              ; preds = %581
  store i32 %317, i32* %33, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %24) #14
  br label %589

585:                                              ; preds = %574
  %586 = load i32, i32* %32, align 4
  %587 = icmp eq i32 %586, %317
  br i1 %587, label %589, label %588

588:                                              ; preds = %585
  store i32 %317, i32* %32, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %24) #14
  br label %589

589:                                              ; preds = %581, %584, %585, %588
  %590 = call i32 @_ZNK5blink11LayoutTable22LogicalHeightFromStyleEv(%"class.blink::LayoutTable"* %0)
  %591 = icmp ne %"class.blink::LayoutTableSection"* %93, null
  br i1 %591, label %592, label %631

592:                                              ; preds = %589
  %593 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %594 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %593, align 8
  %595 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %594, i64 0, i32 0, i32 9
  %596 = bitcast [20 x i8]* %595 to i160*
  %597 = load i160, i160* %596, align 8
  %598 = and i160 %597, 15211807202738752817960438464512
  %599 = icmp eq i160 %598, 0
  %600 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %135, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %601 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %135, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %602 = select i1 %599, i32* %600, i32* %601
  %603 = load i32, i32* %602, align 4
  %604 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %135, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %605 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %135, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %606 = select i1 %599, i32* %604, i32* %605
  %607 = load i32, i32* %606, align 4
  %608 = icmp slt i32 %607, 0
  %609 = select i1 %608, i32 -2147483648, i32 2147483647
  %610 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %603, i32 %607) #14
  %611 = extractvalue { i32, i1 } %610, 1
  %612 = extractvalue { i32, i1 } %610, 0
  %613 = select i1 %611, i32 %609, i32 %612, !prof !20
  %614 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %615 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %614, align 8
  %616 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %615, i64 0, i32 0, i32 9
  %617 = bitcast [20 x i8]* %616 to i160*
  %618 = load i160, i160* %617, align 8
  %619 = and i160 %618, 15211807202738752817960438464512
  %620 = icmp eq i160 %619, 0
  %621 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %93, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %622 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %93, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %623 = select i1 %620, i32* %621, i32* %622
  %624 = load i32, i32* %623, align 4
  %625 = icmp sgt i32 %624, -1
  %626 = select i1 %625, i32 -2147483648, i32 2147483647
  %627 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %613, i32 %624) #14
  %628 = extractvalue { i32, i1 } %627, 1
  %629 = extractvalue { i32, i1 } %627, 0
  %630 = select i1 %628, i32 %626, i32 %629, !prof !20
  br label %631

631:                                              ; preds = %592, %589
  %632 = phi i32 [ %630, %592 ], [ 0, %589 ]
  %633 = load i8, i8* %23, align 8
  %634 = and i8 %633, 1
  %635 = icmp eq i8 %634, 0
  br i1 %635, label %638, label %636

636:                                              ; preds = %631
  %637 = call zeroext i1 @_ZNK5blink9LayoutBox19CrossesPageBoundaryENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %24, i32 %143, i32 %590) #14
  br i1 %637, label %655, label %638

638:                                              ; preds = %631, %636
  %639 = icmp sgt i32 %632, -1
  %640 = select i1 %639, i32 -2147483648, i32 2147483647
  %641 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %590, i32 %632) #14
  %642 = extractvalue { i32, i1 } %641, 1
  %643 = extractvalue { i32, i1 } %641, 0
  %644 = select i1 %642, i32 %640, i32 %643, !prof !20
  %645 = icmp slt i32 %644, -2147483584
  %646 = ashr i32 %644, 6
  %647 = select i1 %645, i32 -33554432, i32 %646, !prof !20
  %648 = icmp slt i32 %647, 1
  br i1 %648, label %655, label %649

649:                                              ; preds = %638
  %650 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %651 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %650, align 8
  %652 = icmp eq %"class.blink::LayoutTableSection"* %651, null
  br i1 %652, label %655, label %653

653:                                              ; preds = %649
  %654 = call i32 @_ZN5blink18LayoutTableSection34DistributeExtraLogicalHeightToRowsEi(%"class.blink::LayoutTableSection"* nonnull %651, i32 %647) #14
  br label %655

655:                                              ; preds = %653, %649, %638, %636
  br i1 %591, label %656, label %670

656:                                              ; preds = %655
  %657 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %658 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %657, align 8
  %659 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %658, i64 0, i32 0, i32 9
  %660 = bitcast [20 x i8]* %659 to i160*
  %661 = load i160, i160* %660, align 8
  %662 = and i160 %661, 15211807202738752817960438464512
  %663 = icmp eq i160 %662, 0
  %664 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %93, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %665 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %93, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %666 = select i1 %663, i32* %664, i32* %665
  %667 = load i32, i32* %666, align 4
  %668 = bitcast %"class.blink::LayoutTableSection"** %82 to %"class.blink::LayoutObject"**
  %669 = bitcast %"class.blink::LayoutTableSection"** %99 to %"class.blink::LayoutObject"**
  br label %675

670:                                              ; preds = %730, %762, %655
  %671 = phi i1 [ true, %655 ], [ false, %762 ], [ false, %730 ]
  %672 = xor i1 %591, true
  %673 = icmp sgt i32 %590, %632
  %674 = and i1 %673, %672
  br i1 %674, label %766, label %809

675:                                              ; preds = %656, %762
  %676 = phi %"class.blink::LayoutTableSection"* [ %93, %656 ], [ %764, %762 ]
  %677 = phi i32 [ %667, %656 ], [ %726, %762 ]
  %678 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %676, i64 0, i32 0, i32 0
  %679 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %676, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %680 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %679, align 8
  %681 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %680, i64 0, i32 0, i32 9
  %682 = bitcast [20 x i8]* %681 to i160*
  %683 = load i160, i160* %682, align 8
  %684 = and i160 %683, 15211807202738752817960438464512
  %685 = icmp eq i160 %684, 0
  br i1 %685, label %686, label %691

686:                                              ; preds = %675
  %687 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %676, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %688 = load i32, i32* %687, align 4
  %689 = icmp eq i32 %688, %677
  br i1 %689, label %696, label %690

690:                                              ; preds = %686
  store i32 %677, i32* %687, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %678) #14
  br label %696

691:                                              ; preds = %675
  %692 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %676, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %693 = load i32, i32* %692, align 4
  %694 = icmp eq i32 %693, %677
  br i1 %694, label %696, label %695

695:                                              ; preds = %691
  store i32 %677, i32* %692, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %678) #14
  br label %696

696:                                              ; preds = %686, %690, %691, %695
  call void @_ZN5blink18LayoutTableSection10LayoutRowsEv(%"class.blink::LayoutTableSection"* nonnull %676) #14
  %697 = load i16, i16* %15, align 8
  %698 = and i16 %697, 32
  %699 = icmp ne i16 %698, 0
  %700 = load i32, i32* %533, align 4
  %701 = icmp eq i32 %700, 0
  %702 = or i1 %699, %701
  br i1 %702, label %705, label %703

703:                                              ; preds = %696
  %704 = or i16 %697, 32
  store i16 %704, i16* %15, align 8
  br label %707

705:                                              ; preds = %696
  %706 = icmp eq i16 %698, 0
  br i1 %706, label %709, label %707

707:                                              ; preds = %703, %705
  call void @_ZN5blink18LayoutTableSection35UpdateLogicalWidthForCollapsedCellsERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"* nonnull %676, %"class.WTF::Vector.2106"* nonnull dereferenceable(16) %6) #14
  %708 = load i16, i16* %15, align 8
  br label %709

709:                                              ; preds = %705, %707
  %710 = phi i16 [ %697, %705 ], [ %708, %707 ]
  %711 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %679, align 8
  %712 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %711, i64 0, i32 0, i32 9
  %713 = bitcast [20 x i8]* %712 to i160*
  %714 = load i160, i160* %713, align 8
  %715 = and i160 %714, 15211807202738752817960438464512
  %716 = icmp eq i160 %715, 0
  %717 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %676, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %718 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %676, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %719 = select i1 %716, i32* %717, i32* %718
  %720 = load i32, i32* %719, align 4
  %721 = icmp slt i32 %720, 0
  %722 = select i1 %721, i32 -2147483648, i32 2147483647
  %723 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %677, i32 %720) #14
  %724 = extractvalue { i32, i1 } %723, 1
  %725 = extractvalue { i32, i1 } %723, 0
  %726 = select i1 %724, i32 %722, i32 %725, !prof !20
  %727 = trunc i16 %710 to i8
  %728 = icmp slt i8 %727, 0
  br i1 %728, label %729, label %730

729:                                              ; preds = %709
  call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %730

730:                                              ; preds = %729, %709
  %731 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %99, align 8
  %732 = icmp eq %"class.blink::LayoutTableSection"* %731, %676
  br i1 %732, label %670, label %733

733:                                              ; preds = %730
  %734 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %82, align 8
  %735 = icmp eq %"class.blink::LayoutTableSection"* %734, %676
  %736 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %676, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %737 = select i1 %735, %"class.blink::LayoutObject"** %527, %"class.blink::LayoutObject"** %736
  %738 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %737, align 8
  %739 = icmp eq %"class.blink::LayoutObject"* %738, null
  br i1 %739, label %759, label %740

740:                                              ; preds = %733, %753
  %741 = phi %"class.blink::LayoutObject"* [ %755, %753 ], [ %738, %733 ]
  %742 = bitcast %"class.blink::LayoutObject"* %741 to i1 (%"class.blink::LayoutObject"*, i32)***
  %743 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %742, align 8
  %744 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %743, i64 92
  %745 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %744, align 8
  %746 = call zeroext i1 %745(%"class.blink::LayoutObject"* nonnull %741, i32 50) #14
  br i1 %746, label %747, label %753

747:                                              ; preds = %740
  %748 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %668, align 8
  %749 = icmp eq %"class.blink::LayoutObject"* %741, %748
  br i1 %749, label %753, label %750

750:                                              ; preds = %747
  %751 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %669, align 8
  %752 = icmp eq %"class.blink::LayoutObject"* %741, %751
  br i1 %752, label %753, label %762

753:                                              ; preds = %750, %747, %740
  %754 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %741, i64 0, i32 9
  %755 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %754, align 8
  %756 = icmp eq %"class.blink::LayoutObject"* %755, null
  br i1 %756, label %757, label %740

757:                                              ; preds = %753
  %758 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %99, align 8
  br label %759

759:                                              ; preds = %757, %733
  %760 = phi %"class.blink::LayoutTableSection"* [ %758, %757 ], [ %731, %733 ]
  %761 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %760, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %762

762:                                              ; preds = %750, %759
  %763 = phi %"class.blink::LayoutObject"* [ %761, %759 ], [ %741, %750 ]
  %764 = bitcast %"class.blink::LayoutObject"* %763 to %"class.blink::LayoutTableSection"*
  %765 = icmp eq %"class.blink::LayoutObject"* %763, null
  br i1 %765, label %670, label %675

766:                                              ; preds = %670
  %767 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %768 = load %"class.blink::Node"*, %"class.blink::Node"** %767, align 8
  %769 = icmp eq %"class.blink::Node"* %768, null
  br i1 %769, label %770, label %777

770:                                              ; preds = %766, %770
  %771 = phi %"class.blink::LayoutObject"* [ %773, %770 ], [ %7, %766 ]
  %772 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %771, i64 0, i32 7
  %773 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %772, align 8
  %774 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %773, i64 0, i32 6, i32 0, i32 0
  %775 = load %"class.blink::Node"*, %"class.blink::Node"** %774, align 8
  %776 = icmp eq %"class.blink::Node"* %775, null
  br i1 %776, label %770, label %777

777:                                              ; preds = %770, %766
  %778 = phi %"class.blink::Node"* [ %768, %766 ], [ %775, %770 ]
  %779 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %778, i64 0, i32 3, i32 0, i32 0
  %780 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %779, align 8
  %781 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %780, i64 0, i32 2, i32 0, i32 0
  %782 = load %"class.blink::Document"*, %"class.blink::Document"** %781, align 8
  %783 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %782, i64 0, i32 33
  %784 = load i32, i32* %783, align 8
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %809, label %786

786:                                              ; preds = %777
  %787 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %788 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %787, i64 0, i32 0, i32 9
  %789 = bitcast [20 x i8]* %788 to i160*
  %790 = load i160, i160* %789, align 8
  %791 = and i160 %790, 15211807202738752817960438464512
  %792 = icmp eq i160 %791, 0
  %793 = select i1 %792, i32* %33, i32* %32
  %794 = load i32, i32* %793, align 4
  %795 = icmp slt i32 %590, 0
  %796 = select i1 %795, i32 -2147483648, i32 2147483647
  %797 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %794, i32 %590) #14
  %798 = extractvalue { i32, i1 } %797, 1
  %799 = extractvalue { i32, i1 } %797, 0
  %800 = select i1 %798, i32 %796, i32 %799, !prof !20
  br i1 %792, label %801, label %805

801:                                              ; preds = %786
  %802 = load i32, i32* %33, align 4
  %803 = icmp eq i32 %802, %800
  br i1 %803, label %809, label %804

804:                                              ; preds = %801
  store i32 %800, i32* %33, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %24) #14
  br label %809

805:                                              ; preds = %786
  %806 = load i32, i32* %32, align 4
  %807 = icmp eq i32 %806, %800
  br i1 %807, label %809, label %808

808:                                              ; preds = %805
  store i32 %800, i32* %32, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %24) #14
  br label %809

809:                                              ; preds = %670, %808, %805, %804, %801, %777
  br i1 %671, label %930, label %810

810:                                              ; preds = %809
  %811 = zext i32 %369 to i64
  %812 = shl nuw i64 %811, 32
  %813 = bitcast %"class.blink::LayoutTableSection"** %82 to %"class.blink::LayoutObject"**
  %814 = bitcast %"class.blink::LayoutTableSection"** %99 to %"class.blink::LayoutObject"**
  br label %815

815:                                              ; preds = %810, %926
  %816 = phi %"class.blink::LayoutTableSection"* [ %93, %810 ], [ %928, %926 ]
  %817 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %816, i64 0, i32 0, i32 0
  %818 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %819 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %818, i64 0, i32 0, i32 9
  %820 = bitcast [20 x i8]* %819 to i160*
  %821 = load i160, i160* %820, align 8
  %822 = and i160 %821, 15211807202738752817960438464512
  %823 = icmp eq i160 %822, 0
  %824 = select i1 %823, i32* %33, i32* %32
  %825 = load i32, i32* %824, align 4
  %826 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %816, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %827 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %826, align 8
  %828 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %827, i64 0, i32 0, i32 9
  %829 = bitcast [20 x i8]* %828 to i160*
  %830 = load i160, i160* %829, align 8
  %831 = and i160 %830, 15211807202738752817960438464512
  %832 = icmp eq i160 %831, 0
  %833 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %816, i64 0, i32 0, i32 0, i32 2
  %834 = bitcast %"class.blink::LayoutRect"* %833 to i64*
  %835 = load i64, i64* %834, align 4
  %836 = trunc i64 %835 to i32
  br i1 %832, label %837, label %847

837:                                              ; preds = %815
  %838 = icmp eq i32 %369, %836
  br i1 %838, label %839, label %843

839:                                              ; preds = %837
  %840 = lshr i64 %835, 32
  %841 = trunc i64 %840 to i32
  %842 = icmp eq i32 %825, %841
  br i1 %842, label %856, label %843

843:                                              ; preds = %839, %837
  %844 = zext i32 %825 to i64
  %845 = shl nuw i64 %844, 32
  %846 = or i64 %845, %811
  store i64 %846, i64* %834, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %817) #14
  br label %856

847:                                              ; preds = %815
  %848 = icmp eq i32 %825, %836
  br i1 %848, label %849, label %853

849:                                              ; preds = %847
  %850 = lshr i64 %835, 32
  %851 = trunc i64 %850 to i32
  %852 = icmp eq i32 %369, %851
  br i1 %852, label %856, label %853

853:                                              ; preds = %849, %847
  %854 = zext i32 %825 to i64
  %855 = or i64 %812, %854
  store i64 %855, i64* %834, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %817) #14
  br label %856

856:                                              ; preds = %839, %843, %849, %853
  %857 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %858 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %857, i64 0, i32 0, i32 9
  %859 = bitcast [20 x i8]* %858 to i160*
  %860 = load i160, i160* %859, align 8
  %861 = and i160 %860, 15211807202738752817960438464512
  %862 = icmp eq i160 %861, 0
  %863 = select i1 %862, i32* %33, i32* %32
  %864 = load i32, i32* %863, align 4
  %865 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %826, align 8
  %866 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %865, i64 0, i32 0, i32 9
  %867 = bitcast [20 x i8]* %866 to i160*
  %868 = load i160, i160* %867, align 8
  %869 = and i160 %868, 15211807202738752817960438464512
  %870 = icmp eq i160 %869, 0
  %871 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %816, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %872 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %816, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %873 = select i1 %870, i32* %871, i32* %872
  %874 = load i32, i32* %873, align 4
  %875 = icmp slt i32 %874, 0
  %876 = select i1 %875, i32 -2147483648, i32 2147483647
  %877 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %864, i32 %874) #14
  %878 = extractvalue { i32, i1 } %877, 1
  %879 = extractvalue { i32, i1 } %877, 0
  %880 = select i1 %878, i32 %876, i32 %879, !prof !20
  br i1 %862, label %881, label %885

881:                                              ; preds = %856
  %882 = load i32, i32* %33, align 4
  %883 = icmp eq i32 %882, %880
  br i1 %883, label %889, label %884

884:                                              ; preds = %881
  store i32 %880, i32* %33, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %24) #14
  br label %889

885:                                              ; preds = %856
  %886 = load i32, i32* %32, align 4
  %887 = icmp eq i32 %886, %880
  br i1 %887, label %889, label %888

888:                                              ; preds = %885
  store i32 %880, i32* %32, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %24) #14
  br label %889

889:                                              ; preds = %881, %884, %885, %888
  call void @_ZN5blink9LayoutBox17UpdateAfterLayoutEv(%"class.blink::LayoutBox"* %817) #14
  %890 = load i16, i16* %15, align 8
  %891 = trunc i16 %890 to i8
  %892 = icmp slt i8 %891, 0
  br i1 %892, label %893, label %894

893:                                              ; preds = %889
  call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %894

894:                                              ; preds = %893, %889
  %895 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %99, align 8
  %896 = icmp eq %"class.blink::LayoutTableSection"* %895, %816
  br i1 %896, label %930, label %897

897:                                              ; preds = %894
  %898 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %82, align 8
  %899 = icmp eq %"class.blink::LayoutTableSection"* %898, %816
  %900 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %816, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %901 = select i1 %899, %"class.blink::LayoutObject"** %527, %"class.blink::LayoutObject"** %900
  %902 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %901, align 8
  %903 = icmp eq %"class.blink::LayoutObject"* %902, null
  br i1 %903, label %923, label %904

904:                                              ; preds = %897, %917
  %905 = phi %"class.blink::LayoutObject"* [ %919, %917 ], [ %902, %897 ]
  %906 = bitcast %"class.blink::LayoutObject"* %905 to i1 (%"class.blink::LayoutObject"*, i32)***
  %907 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %906, align 8
  %908 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %907, i64 92
  %909 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %908, align 8
  %910 = call zeroext i1 %909(%"class.blink::LayoutObject"* nonnull %905, i32 50) #14
  br i1 %910, label %911, label %917

911:                                              ; preds = %904
  %912 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %813, align 8
  %913 = icmp eq %"class.blink::LayoutObject"* %905, %912
  br i1 %913, label %917, label %914

914:                                              ; preds = %911
  %915 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %814, align 8
  %916 = icmp eq %"class.blink::LayoutObject"* %905, %915
  br i1 %916, label %917, label %926

917:                                              ; preds = %914, %911, %904
  %918 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %905, i64 0, i32 9
  %919 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %918, align 8
  %920 = icmp eq %"class.blink::LayoutObject"* %919, null
  br i1 %920, label %921, label %904

921:                                              ; preds = %917
  %922 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %99, align 8
  br label %923

923:                                              ; preds = %921, %897
  %924 = phi %"class.blink::LayoutTableSection"* [ %922, %921 ], [ %895, %897 ]
  %925 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %924, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %926

926:                                              ; preds = %914, %923
  %927 = phi %"class.blink::LayoutObject"* [ %925, %923 ], [ %905, %914 ]
  %928 = bitcast %"class.blink::LayoutObject"* %927 to %"class.blink::LayoutTableSection"*
  %929 = icmp eq %"class.blink::LayoutObject"* %927, null
  br i1 %929, label %930, label %815

930:                                              ; preds = %894, %926, %809
  %931 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %932 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %931, i64 0, i32 0, i32 9
  %933 = bitcast [20 x i8]* %932 to i160*
  %934 = load i160, i160* %933, align 8
  %935 = and i160 %934, 15211807202738752817960438464512
  %936 = icmp eq i160 %935, 0
  %937 = select i1 %936, i32* %33, i32* %32
  %938 = load i32, i32* %937, align 4
  %939 = icmp slt i32 %311, 0
  %940 = select i1 %939, i32 -2147483648, i32 2147483647
  %941 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %938, i32 %311) #14
  %942 = extractvalue { i32, i1 } %941, 1
  %943 = extractvalue { i32, i1 } %941, 0
  %944 = select i1 %942, i32 %940, i32 %943, !prof !20
  br i1 %936, label %945, label %949

945:                                              ; preds = %930
  %946 = load i32, i32* %33, align 4
  %947 = icmp eq i32 %946, %944
  br i1 %947, label %953, label %948

948:                                              ; preds = %945
  store i32 %944, i32* %33, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %24) #14
  br label %953

949:                                              ; preds = %930
  %950 = load i32, i32* %32, align 4
  %951 = icmp eq i32 %950, %944
  br i1 %951, label %953, label %952

952:                                              ; preds = %949
  store i32 %944, i32* %32, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %24) #14
  br label %953

953:                                              ; preds = %945, %948, %949, %952
  %954 = load i32, i32* %78, align 4
  %955 = icmp eq i32 %954, 0
  br i1 %955, label %956, label %966

956:                                              ; preds = %982, %953
  call void @_ZN5blink9LayoutBox19UpdateLogicalHeightEv(%"class.blink::LayoutBox"* %24) #14
  %957 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %958 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %957, i64 0, i32 0, i32 9
  %959 = bitcast [20 x i8]* %958 to i160*
  %960 = load i160, i160* %959, align 8
  %961 = and i160 %960, 15211807202738752817960438464512
  %962 = icmp eq i160 %961, 0
  %963 = select i1 %962, i32* %32, i32* %33
  %964 = load i32, i32* %963, align 4
  %965 = icmp eq i32 %35, %964
  br i1 %965, label %986, label %990

966:                                              ; preds = %953, %982
  %967 = phi i32 [ %983, %982 ], [ 0, %953 ]
  %968 = call dereferenceable(8) %"class.blink::LayoutTableCaption"** @_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2110"* %77, i32 %967) #14
  %969 = bitcast %"class.blink::LayoutTableCaption"** %968 to %"class.blink::LayoutObject"**
  %970 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %969, align 8
  %971 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %970, i64 0, i32 5, i32 0
  %972 = bitcast %"class.blink::ComputedStyle"** %971 to %"class.blink::ComputedStyleBase"**
  %973 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %972, align 8
  %974 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %973, i64 0, i32 9
  %975 = bitcast [20 x i8]* %974 to i160*
  %976 = load i160, i160* %975, align 8
  %977 = and i160 %976, 1298074214633706907132624082305024
  %978 = icmp eq i160 %977, 0
  br i1 %978, label %982, label %979

979:                                              ; preds = %966
  %980 = call dereferenceable(8) %"class.blink::LayoutTableCaption"** @_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2110"* %77, i32 %967) #14
  %981 = load %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %980, align 8
  call void @_ZN5blink11LayoutTable13LayoutCaptionERNS_18LayoutTableCaptionERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutTable"* %0, %"class.blink::LayoutTableCaption"* dereferenceable(280) %981, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %4)
  br label %982

982:                                              ; preds = %966, %979
  %983 = add nuw i32 %967, 1
  %984 = load i32, i32* %78, align 4
  %985 = icmp ult i32 %983, %984
  br i1 %985, label %966, label %956

986:                                              ; preds = %956
  %987 = select i1 %962, i32* %33, i32* %32
  %988 = load i32, i32* %987, align 4
  %989 = icmp ne i32 %37, %988
  br label %990

990:                                              ; preds = %956, %986
  %991 = phi i1 [ true, %956 ], [ %989, %986 ]
  call void @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE(%"class.blink::LayoutBlock"* %10, i1 zeroext %991, i32 0) #14
  %992 = call i32 @_ZNK5blink9LayoutBox19ClientLogicalBottomEv(%"class.blink::LayoutBox"* %24)
  call void @_ZN5blink11LayoutBlock21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlock"* %10, i32 %992, i1 zeroext false) #14
  call void @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv(%"class.blink::LayoutBlock"* %10) #14
  %993 = load i32*, i32** %532, align 8
  %994 = icmp eq i32* %993, null
  %995 = bitcast i32* %993 to i8*
  br i1 %994, label %1001, label %996, !prof !2

996:                                              ; preds = %990
  %997 = load i32, i32* %533, align 4
  %998 = icmp eq i32 %997, 0
  br i1 %998, label %1000, label %999, !prof !20

999:                                              ; preds = %996
  store i32 0, i32* %533, align 4
  br label %1000

1000:                                             ; preds = %999, %996
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %995) #14
  store i32* null, i32** %532, align 8
  br label %1001

1001:                                             ; preds = %990, %1000
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %531) #14
  call void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %23) #14
  %1002 = call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %24)
  %1003 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  store i32 %1002, i32* %1003, align 8
  %1004 = load i16, i16* %15, align 8
  %1005 = and i16 %1004, -257
  store i16 %1005, i16* %15, align 8
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %7)
  call void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN5blink13TextAutosizer11LayoutScopeD1Ev(%"class.blink::TextAutosizer::LayoutScope"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  br label %1006

1006:                                             ; preds = %1, %1001
  call void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #14
  ret void
}

declare void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #1

declare zeroext i1 @_ZN5blink11LayoutBlock16SimplifiedLayoutEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

declare void @_ZN5blink13TextAutosizer11LayoutScopeC1EPNS_11LayoutBlockEPNS_18SubtreeLayoutScopeE(%"class.blink::TextAutosizer::LayoutScope"*, %"class.blink::LayoutBlock"*, %"class.blink::SubtreeLayoutScope"*) unnamed_addr #1

declare void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #1

declare void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"*, %"class.blink::LayoutBox"* dereferenceable(216), i1 zeroext) unnamed_addr #1

declare void @_ZN5blink18SubtreeLayoutScope14SetNeedsLayoutEPNS_12LayoutObjectEPKc(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox22AvailableLogicalHeightENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable31AdjustWidthsForCollapsedColumnsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutTable"*, %"class.WTF::Vector.2106"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::LayoutTable::ColAndColGroup", align 8
  %4 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_visibility_collapse_column_enabled_E, align 1, !range !21
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %197, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 11
  %12 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2
  %13 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %15 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %3, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %3, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %1, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %1, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.WTF::Vector.2106"* %1 to i8**
  %21 = bitcast %"class.WTF::Vector.2106"* %1 to i64*
  %22 = zext i32 %8 to i64
  %23 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3
  br label %32

24:                                               ; preds = %138, %6
  %25 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %197, label %28

28:                                               ; preds = %24
  br i1 %9, label %141, label %29

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  br label %178

32:                                               ; preds = %138, %10
  %33 = phi i32 [ 0, %10 ], [ %139, %138 ]
  %34 = load i32, i32* %11, align 4
  %35 = icmp ugt i32 %34, %33
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  %37 = icmp ult i32 %34, %33
  br i1 %37, label %38, label %47

38:                                               ; preds = %36, %38
  %39 = phi i32 [ %45, %38 ], [ %34, %36 ]
  %40 = phi i32 [ %44, %38 ], [ %34, %36 ]
  %41 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %12, i32 %39) #14
  %42 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %41, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, %40
  %45 = add i32 %39, 1
  %46 = icmp eq i32 %45, %33
  br i1 %46, label %47, label %38

47:                                               ; preds = %38, %32, %36
  %48 = phi i32 [ %33, %32 ], [ %34, %36 ], [ %44, %38 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false) #14
  %49 = load i16, i16* %14, align 8, !noalias !88
  %50 = and i16 %49, 64
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #14, !alias.scope !88
  br label %69

53:                                               ; preds = %47
  call void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* nonnull sret %3, %"class.blink::LayoutTable"* %0, i32 %48) #14
  %54 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %15, align 8
  %55 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %16, align 8
  %56 = icmp eq %"class.blink::LayoutTableCol"* %54, null
  br i1 %56, label %67, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %59 = bitcast %"class.blink::ComputedStyle"** %58 to %"class.blink::ComputedStyleBase"**
  %60 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %60, i64 0, i32 9
  %62 = bitcast [20 x i8]* %61 to i160*
  %63 = load i160, i160* %62, align 8
  %64 = and i160 %63, 3802951800684688204490109616128
  %65 = icmp eq i160 %64, 2535301200456458802993406410752
  br i1 %65, label %66, label %67

66:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  br label %79

67:                                               ; preds = %57, %53
  %68 = icmp eq %"class.blink::LayoutTableCol"* %55, null
  br i1 %68, label %69, label %70

69:                                               ; preds = %67, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  br label %138

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %72 = bitcast %"class.blink::ComputedStyle"** %71 to %"class.blink::ComputedStyleBase"**
  %73 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %73, i64 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 3802951800684688204490109616128
  %78 = icmp eq i160 %77, 2535301200456458802993406410752
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  br i1 %78, label %79, label %138

79:                                               ; preds = %66, %70
  %80 = load i32, i32* %17, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %130

82:                                               ; preds = %79
  %83 = load i32, i32* %18, align 8
  %84 = icmp ult i32 %83, %8
  br i1 %84, label %85, label %120

85:                                               ; preds = %82
  %86 = lshr i32 %83, 2
  %87 = add nuw i32 %83, 1
  %88 = add i32 %87, %86
  %89 = icmp ugt i32 %88, 4
  %90 = select i1 %89, i32 %88, i32 4
  %91 = icmp ugt i32 %90, %8
  %92 = select i1 %91, i32 %90, i32 %8
  %93 = icmp ult i32 %83, %92
  br i1 %93, label %94, label %120, !prof !2

94:                                               ; preds = %85
  %95 = load i32*, i32** %19, align 8
  %96 = icmp eq i32* %95, null
  %97 = zext i32 %92 to i64
  %98 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %97) #14
  %99 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %98, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #14
  br i1 %96, label %100, label %104

100:                                              ; preds = %94
  %101 = ptrtoint i8* %99 to i64
  store atomic i64 %101, i64* %21 monotonic, align 8
  %102 = lshr i64 %98, 2
  %103 = trunc i64 %102 to i32
  store i32 %103, i32* %18, align 8
  br label %120

104:                                              ; preds = %94
  %105 = lshr i64 %98, 2
  %106 = ptrtoint i8* %99 to i64
  %107 = load i32*, i32** %19, align 8
  %108 = icmp ne i8* %99, null
  %109 = icmp ne i32* %107, null
  %110 = and i1 %108, %109
  %111 = bitcast i32* %107 to i8*
  br i1 %110, label %112, label %117, !prof !2

112:                                              ; preds = %104
  %113 = load i32, i32* %17, align 4
  %114 = zext i32 %113 to i64
  %115 = shl nuw nsw i64 %114, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %99, i8* nonnull align 4 %111, i64 %115, i1 false) #14
  %116 = load i8*, i8** %20, align 8
  br label %117

117:                                              ; preds = %112, %104
  %118 = phi i8* [ %116, %112 ], [ %111, %104 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %118) #14
  store atomic i64 %106, i64* %21 monotonic, align 8
  %119 = trunc i64 %105 to i32
  store i32 %119, i32* %18, align 8
  br label %120

120:                                              ; preds = %117, %100, %85, %82
  %121 = load i32*, i32** %19, align 8
  %122 = load i32, i32* %17, align 4
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds i32, i32* %121, i64 %123
  %125 = getelementptr inbounds i32, i32* %121, i64 %22
  %126 = bitcast i32* %124 to i8*
  %127 = ptrtoint i32* %125 to i64
  %128 = ptrtoint i32* %124 to i64
  %129 = sub i64 %127, %128
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %126, i8 0, i64 %129, i1 false) #14
  store i32 %8, i32* %17, align 4
  br label %130

130:                                              ; preds = %79, %120
  %131 = add nuw i32 %33, 1
  %132 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2106"* %23, i32 %131) #14
  %133 = load i32, i32* %132, align 4
  %134 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2106"* %23, i32 %33) #14
  %135 = load i32, i32* %134, align 4
  %136 = sub nsw i32 %133, %135
  %137 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2106"* %1, i32 %33) #14
  store i32 %136, i32* %137, align 4
  br label %138

138:                                              ; preds = %69, %70, %130
  %139 = add nuw i32 %33, 1
  %140 = icmp eq i32 %139, %8
  br i1 %140, label %24, label %32

141:                                              ; preds = %178, %28
  %142 = phi i32 [ 0, %28 ], [ %183, %178 ]
  %143 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %145 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %145, i64 0, i32 0, i32 9
  %147 = bitcast [20 x i8]* %146 to i160*
  %148 = load i160, i160* %147, align 8
  %149 = and i160 %148, 15211807202738752817960438464512
  %150 = icmp eq i160 %149, 0
  %151 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %152 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %153 = select i1 %150, i32* %151, i32* %152
  %154 = load i32, i32* %153, align 4
  %155 = icmp sgt i32 %142, 33554431
  br i1 %155, label %161, label %156

156:                                              ; preds = %141
  %157 = icmp slt i32 %142, -33554432
  br i1 %157, label %163, label %158

158:                                              ; preds = %156
  %159 = shl i32 %142, 6
  %160 = icmp sgt i32 %159, -1
  br i1 %160, label %161, label %163

161:                                              ; preds = %141, %158
  %162 = phi i32 [ %159, %158 ], [ 2147483647, %141 ]
  br label %163

163:                                              ; preds = %156, %158, %161
  %164 = phi i32 [ %162, %161 ], [ %159, %158 ], [ -2147483648, %156 ]
  %165 = phi i32 [ -2147483648, %161 ], [ 2147483647, %158 ], [ 2147483647, %156 ]
  %166 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %154, i32 %164) #14
  %167 = extractvalue { i32, i1 } %166, 1
  %168 = extractvalue { i32, i1 } %166, 0
  %169 = select i1 %167, i32 %165, i32 %168, !prof !20
  br i1 %150, label %170, label %174

170:                                              ; preds = %163
  %171 = load i32, i32* %151, align 4
  %172 = icmp eq i32 %171, %169
  br i1 %172, label %197, label %173

173:                                              ; preds = %170
  store i32 %169, i32* %151, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %143) #14
  br label %197

174:                                              ; preds = %163
  %175 = load i32, i32* %152, align 4
  %176 = icmp eq i32 %175, %169
  br i1 %176, label %197, label %177

177:                                              ; preds = %174
  store i32 %169, i32* %152, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %143) #14
  br label %197

178:                                              ; preds = %178, %29
  %179 = phi i32 [ 0, %29 ], [ %184, %178 ]
  %180 = phi i32 [ 0, %29 ], [ %183, %178 ]
  %181 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2106"* %1, i32 %179) #14
  %182 = load i32, i32* %181, align 4
  %183 = add nsw i32 %182, %180
  %184 = add nuw i32 %179, 1
  %185 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2106"* %30, i32 %184) #14
  %186 = load i32, i32* %185, align 4
  %187 = sub nsw i32 %186, %183
  %188 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2106"* %30, i32 %184) #14
  %189 = load i32, i32* %188, align 4
  %190 = icmp ne i32 %189, %187
  %191 = zext i1 %190 to i16
  %192 = load i16, i16* %31, align 8
  %193 = shl nuw nsw i16 %191, 8
  %194 = or i16 %193, %192
  store i16 %194, i16* %31, align 8
  %195 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2106"* %30, i32 %184) #14
  store i32 %187, i32* %195, align 4
  %196 = icmp eq i32 %184, %8
  br i1 %196, label %141, label %178

197:                                              ; preds = %2, %177, %174, %173, %170, %24
  ret void
}

declare zeroext i1 @_ZNK5blink9LayoutBox19CrossesPageBoundaryENS_10LayoutUnitES1_(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink18LayoutTableSection35UpdateLogicalWidthForCollapsedCellsERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"*, %"class.WTF::Vector.2106"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox19UpdateLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE(%"class.blink::LayoutBlock"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlock"*, i32, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ClientLogicalBottomEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8, !noalias !91
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !91
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 993, i64 0 }, %12 ], [ { i64 1001, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 977, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #14
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = and i160 %40, 1190036353683150593851392
  %42 = icmp eq i160 %41, 340010386766614455386112
  br i1 %42, label %72, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = and i96 %46, 8589934592
  %48 = icmp eq i96 %47, 0
  br i1 %48, label %72, label %49

49:                                               ; preds = %43
  %50 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #14
  %51 = icmp eq %"class.blink::PaintLayerScrollableArea"* %50, null
  br i1 %51, label %79, label %52

52:                                               ; preds = %49
  %53 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #14
  %54 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %53, i64 0, i32 6, i32 3
  %55 = load i8, i8* %54, align 8
  %56 = and i8 %55, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %53, i64 0, i32 6, i32 1, i32 0, i32 0
  %60 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %59, align 8
  %61 = icmp eq %"class.blink::Scrollbar"* %60, null
  br i1 %61, label %62, label %79

62:                                               ; preds = %58, %52
  %63 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #14
  %64 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %63, i64 0, i32 6, i32 3
  %65 = load i8, i8* %64, align 8
  %66 = and i8 %65, 2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %63, i64 0, i32 6, i32 2, i32 0, i32 0
  %70 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %69, align 8
  %71 = icmp eq %"class.blink::Scrollbar"* %70, null
  br i1 %71, label %72, label %79

72:                                               ; preds = %33, %43, %62, %68
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 270215977642229760
  %78 = icmp eq i160 %77, 0
  br i1 %78, label %93, label %79

79:                                               ; preds = %49, %58, %68, %72
  %80 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %80, i64 0, i32 0, i32 9
  %82 = bitcast [20 x i8]* %81 to i160*
  %83 = load i160, i160* %82, align 8
  %84 = and i160 %83, 15211807202738752817960438464512
  %85 = icmp eq i160 %84, 5070602400912917605986812821504
  %86 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #14
  %87 = extractvalue { i64, i64 } %86, 0
  %88 = lshr i64 %87, 32
  %89 = select i1 %85, i64 %88, i64 %87
  %90 = trunc i64 %89 to i32
  %91 = icmp slt i32 %90, 0
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  br label %93

93:                                               ; preds = %79, %72
  %94 = phi i32 [ 0, %72 ], [ %90, %79 ]
  %95 = phi i32 [ 2147483647, %72 ], [ %92, %79 ]
  %96 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %94) #14
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !20
  %100 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %101 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %100 to i96*
  %102 = load i96, i96* %101, align 4
  %103 = trunc i96 %102 to i32
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %93
  %106 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #14
  br label %109

107:                                              ; preds = %93
  %108 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #14
  br label %109

109:                                              ; preds = %105, %107
  %110 = phi i32 [ %106, %105 ], [ %108, %107 ]
  %111 = icmp slt i32 %110, 0
  %112 = select i1 %111, i32 -2147483648, i32 2147483647
  %113 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %110) #14
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %112, i32 %115, !prof !20
  ret i32 %116
}

declare void @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #14
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 118
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #14
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #14
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !20
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 119
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #14
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #14
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #14
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 120
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #14
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #14
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !20
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 121
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #14
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #14
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -824633720840
  %6 = or i96 %5, 274877906944
  store i96 %6, i96* %3, align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !21
  %8 = icmp ne i8 %7, 0
  %9 = and i96 %4, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %27

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !94

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #14
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #14
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %21, %16, %12, %1
  %28 = load i96, i96* %3, align 4
  %29 = and i96 %28, -57
  store i96 %29, i96* %3, align 4
  br label %55

30:                                               ; preds = %25
  %31 = load i96, i96* %3, align 4
  %32 = and i96 %31, 56
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !21
  %36 = icmp ne i8 %35, 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  %39 = and i1 %38, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 67108876
  %47 = icmp eq i32 %46, 67108864
  br i1 %47, label %48, label %51, !prof !94

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %49) #14
  br label %51

51:                                               ; preds = %48, %43, %40, %34
  %52 = phi %"class.blink::DisplayLockContext"* [ null, %34 ], [ %50, %48 ], [ null, %43 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %52, i64 0, i32 14
  store i8 1, i8* %53, align 2
  %54 = load i96, i96* %3, align 4
  br label %55

55:                                               ; preds = %27, %30, %51
  %56 = phi i96 [ %31, %30 ], [ %54, %51 ], [ %29, %27 ]
  %57 = and i96 %56, -1125899906842625
  store i96 %57, i96* %3, align 4
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %0) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink13TextAutosizer11LayoutScopeD1Ev(%"class.blink::TextAutosizer::LayoutScope"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11LayoutTable25IsAbsoluteColumnCollapsedEj(%"class.blink::LayoutTable"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::LayoutTable::ColAndColGroup", align 8
  %4 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %6 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  %7 = load i16, i16* %5, align 8, !noalias !95
  %8 = and i16 %7, 64
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #14, !alias.scope !95
  br label %37

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %3, i64 0, i32 1
  call void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* nonnull sret %3, %"class.blink::LayoutTable"* %0, i32 %1) #14
  %14 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %12, align 8
  %15 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %13, align 8
  %16 = icmp eq %"class.blink::LayoutTableCol"* %14, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %19 = bitcast %"class.blink::ComputedStyle"** %18 to %"class.blink::ComputedStyleBase"**
  %20 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %20, i64 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = and i160 %23, 3802951800684688204490109616128
  %25 = icmp eq i160 %24, 2535301200456458802993406410752
  br i1 %25, label %37, label %26

26:                                               ; preds = %11, %17
  %27 = icmp eq %"class.blink::LayoutTableCol"* %15, null
  br i1 %27, label %37, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %30 = bitcast %"class.blink::ComputedStyle"** %29 to %"class.blink::ComputedStyleBase"**
  %31 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %31, i64 0, i32 9
  %33 = bitcast [20 x i8]* %32 to i160*
  %34 = load i160, i160* %33, align 8
  %35 = and i160 %34, 3802951800684688204490109616128
  %36 = icmp eq i160 %35, 2535301200456458802993406410752
  br label %37

37:                                               ; preds = %10, %26, %28, %17
  %38 = phi i1 [ true, %17 ], [ false, %26 ], [ %36, %28 ], [ false, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable45InvalidateCollapsedBordersForAllCellsIfNeededEv(%"class.blink::LayoutTable"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 8
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %118, label %6

6:                                                ; preds = %1
  %7 = and i16 %3, -9
  store i16 %7, i16* %2, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = icmp eq %"class.blink::LayoutObject"* %9, null
  br i1 %10, label %118, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %13 = bitcast %"class.blink::ComputedStyle"** %12 to %"class.blink::ComputedStyleBase"**
  br label %14

14:                                               ; preds = %11, %114
  %15 = phi %"class.blink::LayoutObject"* [ %9, %11 ], [ %116, %114 ]
  %16 = bitcast %"class.blink::LayoutObject"* %15 to i1 (%"class.blink::LayoutObject"*, i32)***
  %17 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %17, i64 92
  %19 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::LayoutObject"* nonnull %15, i32 50) #14
  br i1 %20, label %21, label %114

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 2, i32 6
  %23 = bitcast %"class.blink::UntracedMember"* %22 to %"class.blink::LayoutTableRow"**
  %24 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutTableRow"* %24, null
  br i1 %25, label %114, label %26

26:                                               ; preds = %21, %32
  %27 = phi %"class.blink::LayoutTableRow"* [ %35, %32 ], [ %24, %21 ]
  %28 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %27, i64 0, i32 0, i32 1, i32 0
  %29 = bitcast %"class.blink::LayoutObject"** %28 to %"class.blink::LayoutTableCell"**
  %30 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %29, align 8
  %31 = icmp eq %"class.blink::LayoutTableCell"* %30, null
  br i1 %31, label %32, label %37

32:                                               ; preds = %101, %26
  %33 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %34 = bitcast %"class.blink::LayoutObject"** %33 to %"class.blink::LayoutTableRow"**
  %35 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutTableRow"* %35, null
  br i1 %36, label %114, label %26

37:                                               ; preds = %26, %101
  %38 = phi %"class.blink::LayoutTableCell"* [ %112, %101 ], [ %30, %26 ]
  %39 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %38, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -1073741825
  store i32 %41, i32* %39, align 8
  %42 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %13, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %42, i64 0, i32 9
  %44 = bitcast [20 x i8]* %43 to i160*
  %45 = load i160, i160* %44, align 8
  %46 = and i160 %45, 81129638414606681695789005144064
  %47 = icmp eq i160 %46, 0
  br i1 %47, label %101, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 7, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %52, i64 0, i32 27
  %54 = load i16, i16* %53, align 8
  %55 = and i16 %54, 224
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %64, label %57

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %52, i64 0, i32 24, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp ne i32 %59, 0
  %61 = and i16 %54, 240
  %62 = icmp ne i16 %61, 0
  %63 = and i1 %62, %60
  br i1 %63, label %101, label %64

64:                                               ; preds = %57, %48
  %65 = and i16 %54, 3584
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %52, i64 0, i32 25, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp ne i32 %69, 0
  %71 = and i16 %54, 3840
  %72 = icmp ne i16 %71, 0
  %73 = and i1 %72, %70
  br i1 %73, label %101, label %74

74:                                               ; preds = %67, %64
  %75 = icmp ult i16 %54, 8192
  br i1 %75, label %80, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %52, i64 0, i32 26, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %101

80:                                               ; preds = %76, %74
  %81 = and i16 %54, 14
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %90, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %52, i64 0, i32 23, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp ne i32 %85, 0
  %87 = and i16 %54, 15
  %88 = icmp ne i16 %87, 0
  %89 = and i1 %88, %86
  br i1 %89, label %101, label %90

90:                                               ; preds = %83, %80
  %91 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %52, i64 0, i32 2, i32 0, i32 0, i32 0
  %92 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %92, i64 0, i32 2, i32 0, i32 0
  %94 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %93, align 8
  %95 = icmp eq %"class.blink::StyleImage"* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %92, i64 0, i32 1
  %98 = load i8, i8* %97, align 4
  %99 = and i8 %98, 1
  %100 = icmp ne i8 %99, 0
  br label %101

101:                                              ; preds = %96, %90, %83, %76, %67, %57, %37
  %102 = phi i1 [ false, %37 ], [ false, %90 ], [ %100, %96 ], [ true, %76 ], [ true, %57 ], [ true, %67 ], [ true, %83 ]
  %103 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %104 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %103 to i96*
  %105 = zext i1 %102 to i96
  %106 = load i96, i96* %104, align 4
  %107 = shl nuw nsw i96 %105, 67
  %108 = and i96 %106, -147573952589676412929
  %109 = or i96 %108, %107
  store i96 %109, i96* %104, align 4
  %110 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %111 = bitcast %"class.blink::LayoutObject"** %110 to %"class.blink::LayoutTableCell"**
  %112 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %111, align 8
  %113 = icmp eq %"class.blink::LayoutTableCell"* %112, null
  br i1 %113, label %32, label %37

114:                                              ; preds = %32, %21, %14
  %115 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 9
  %116 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %115, align 8
  %117 = icmp eq %"class.blink::LayoutObject"* %116, null
  br i1 %117, label %118, label %14

118:                                              ; preds = %114, %6, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable21ComputeVisualOverflowEb(%"class.blink::LayoutTable"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %5 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %4) #14
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = extractvalue { i64, i64 } %5, 1
  tail call void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"* %4) #14
  tail call void @_ZN5blink11LayoutTable29AddVisualOverflowFromChildrenEv(%"class.blink::LayoutTable"* %0)
  tail call void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"* %4) #14
  %8 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %4) #14
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  %11 = trunc i64 %9 to i32
  %12 = lshr i64 %9, 32
  %13 = trunc i64 %12 to i32
  %14 = trunc i64 %6 to i32
  %15 = lshr i64 %6, 32
  %16 = trunc i64 %15 to i32
  %17 = icmp eq i32 %11, %14
  %18 = icmp eq i32 %13, %16
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %30

20:                                               ; preds = %2
  %21 = trunc i64 %10 to i32
  %22 = trunc i64 %7 to i32
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = lshr i64 %7, 32
  %26 = trunc i64 %25 to i32
  %27 = lshr i64 %10, 32
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %28, %26
  br i1 %29, label %48, label %30

30:                                               ; preds = %24, %2, %20
  tail call void @_ZN5blink12LayoutObject41InvalidateIntersectionObserverCachedRectsEv(%"class.blink::LayoutObject"* %3) #14
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #14
  %31 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %34, label %41

34:                                               ; preds = %30, %34
  %35 = phi %"class.blink::LayoutObject"* [ %37, %34 ], [ %3, %30 ]
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 7
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 6, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %34, label %41

41:                                               ; preds = %34, %30
  %42 = phi %"class.blink::Node"* [ %32, %30 ], [ %39, %34 ]
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %44, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  %47 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %46) #14
  tail call void @_ZN5blink14LocalFrameView31SetIntersectionObservationStateENS0_28IntersectionObservationStateE(%"class.blink::LocalFrameView"* %47, i32 1) #14
  br label %48

48:                                               ; preds = %24, %41
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable29AddVisualOverflowFromChildrenEv(%"class.blink::LayoutTable"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.blink::LayoutRect", align 4
  tail call void @_ZNK5blink11LayoutTable27UpdateCollapsedOuterBordersEv(%"class.blink::LayoutTable"* %0)
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = bitcast %"class.blink::ComputedStyle"** %9 to %"class.blink::ComputedStyleBase"**
  %11 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %11, i64 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 81129638414606681695789005144064
  %16 = icmp eq i160 %15, 0
  br i1 %16, label %17, label %186

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 18
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 19
  %21 = load i32, i32* %20, align 8
  %22 = or i32 %19, %21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %186, label %24

24:                                               ; preds = %17
  %25 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25)
  %26 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26)
  %27 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27)
  %28 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28)
  %29 = lshr i160 %14, 102
  %30 = trunc i160 %29 to i8
  %31 = and i8 %30, 3
  %32 = icmp ugt i32 %19, 33554430
  %33 = shl i32 %19, 6
  %34 = select i1 %32, i32 2147483647, i32 %33
  %35 = icmp ugt i32 %21, 33554430
  %36 = shl i32 %21, 6
  %37 = select i1 %35, i32 2147483647, i32 %36
  store i32 %34, i32* %4, align 4
  store i32 %37, i32* %5, align 4
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  %38 = bitcast %"class.blink::LayoutRect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #14
  %39 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 1, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 1, i32 1, i32 0
  %43 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2
  %45 = bitcast %"class.blink::LayoutRect"* %44 to i64*
  %46 = bitcast %"class.blink::LayoutRect"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %46, i8 -86, i64 16, i1 false)
  %47 = load i64, i64* %45, align 4
  %48 = trunc i64 %47 to i32
  %49 = lshr i64 %47, 32
  %50 = trunc i64 %49 to i32
  %51 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %52 = bitcast %"class.blink::LayoutSize"* %51 to i64*
  %53 = load i64, i64* %52, align 4
  %54 = trunc i64 %53 to i32
  %55 = lshr i64 %53, 32
  %56 = trunc i64 %55 to i32
  %57 = srem i32 %48, 64
  %58 = icmp slt i32 %54, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %54) #14
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !20
  %64 = sdiv i32 %63, 64
  %65 = srem i32 %63, 64
  %66 = add nsw i32 %65, 32
  %67 = ashr i32 %66, 6
  %68 = add nsw i32 %57, 32
  %69 = ashr i32 %68, 6
  %70 = sub nsw i32 %64, %69
  %71 = add nsw i32 %67, %70
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %79

73:                                               ; preds = %24
  %74 = add i32 %54, 4
  %75 = icmp ugt i32 %74, 8
  br i1 %75, label %76, label %79, !prof !98

76:                                               ; preds = %73
  %77 = icmp sgt i32 %54, 0
  %78 = select i1 %77, i32 1, i32 -1
  br label %79

79:                                               ; preds = %76, %73, %24
  %80 = phi i32 [ %78, %76 ], [ %71, %24 ], [ 0, %73 ]
  %81 = srem i32 %50, 64
  %82 = icmp slt i32 %56, 0
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %56) #14
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !20
  %88 = sdiv i32 %87, 64
  %89 = srem i32 %87, 64
  %90 = add nsw i32 %89, 32
  %91 = ashr i32 %90, 6
  %92 = add nsw i32 %81, 32
  %93 = ashr i32 %92, 6
  %94 = sub nsw i32 %88, %93
  %95 = add nsw i32 %91, %94
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %103

97:                                               ; preds = %79
  %98 = add i32 %56, 4
  %99 = icmp ugt i32 %98, 8
  br i1 %99, label %100, label %103, !prof !98

100:                                              ; preds = %97
  %101 = icmp sgt i32 %56, 0
  %102 = select i1 %101, i32 1, i32 -1
  br label %103

103:                                              ; preds = %79, %97, %100
  %104 = phi i32 [ %102, %100 ], [ %95, %79 ], [ 0, %97 ]
  store i32 0, i32* %39, align 4
  store i32 0, i32* %40, align 4
  %105 = icmp sgt i32 %80, 33554431
  br i1 %105, label %110, label %106

106:                                              ; preds = %103
  %107 = icmp slt i32 %80, -33554432
  %108 = shl i32 %80, 6
  %109 = select i1 %107, i32 -2147483648, i32 %108
  br label %110

110:                                              ; preds = %106, %103
  %111 = phi i32 [ 2147483647, %103 ], [ %109, %106 ]
  %112 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 1, i32 0, i32 0
  store i32 %111, i32* %112, align 4
  %113 = icmp sgt i32 %104, 33554431
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = icmp slt i32 %104, -33554432
  %116 = shl i32 %104, 6
  %117 = select i1 %115, i32 -2147483648, i32 %116
  br label %118

118:                                              ; preds = %114, %110
  %119 = phi i32 [ 2147483647, %110 ], [ %117, %114 ]
  %120 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 1, i32 1, i32 0
  store i32 %119, i32* %120, align 4
  %121 = icmp eq i8 %31, 0
  %122 = and i160 %14, 41538374868278621028243970633760768
  %123 = icmp eq i160 %122, 0
  br i1 %121, label %124, label %127

124:                                              ; preds = %118
  %125 = select i1 %123, i32 %37, i32 %34
  %126 = select i1 %123, i32* %4, i32* %5
  br label %132

127:                                              ; preds = %118
  %128 = select i1 %123, i32 %34, i32 %37
  %129 = icmp eq i8 %31, 1
  %130 = select i1 %123, i32 %37, i32 %34
  %131 = select i1 %129, i32* %7, i32* %6
  br label %132

132:                                              ; preds = %124, %127
  %133 = phi i32 [ 0, %124 ], [ %130, %127 ]
  %134 = phi i32 [ 0, %124 ], [ %128, %127 ]
  %135 = phi i32 [ %125, %124 ], [ 0, %127 ]
  %136 = phi i32* [ %126, %124 ], [ %131, %127 ]
  %137 = load i32, i32* %136, align 4
  %138 = tail call i1 @llvm.is.constant.i32(i32 %137) #14
  br i1 %138, label %139, label %143

139:                                              ; preds = %132
  %140 = sub i32 0, %137
  %141 = icmp eq i32 %140, -2147483648
  %142 = select i1 %141, i32 2147483647, i32 %140
  br label %148

143:                                              ; preds = %132
  %144 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %137) #14
  %145 = extractvalue { i32, i1 } %144, 1
  %146 = extractvalue { i32, i1 } %144, 0
  %147 = select i1 %145, i32 2147483647, i32 %146
  br label %148

148:                                              ; preds = %143, %139
  %149 = phi i32 [ %142, %139 ], [ %147, %143 ]
  %150 = tail call i1 @llvm.is.constant.i32(i32 %134) #14
  br i1 %150, label %151, label %155

151:                                              ; preds = %148
  %152 = sub i32 0, %134
  %153 = icmp eq i32 %152, -2147483648
  %154 = select i1 %153, i32 2147483647, i32 %152
  br label %160

155:                                              ; preds = %148
  %156 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %134) #14
  %157 = extractvalue { i32, i1 } %156, 1
  %158 = extractvalue { i32, i1 } %156, 0
  %159 = select i1 %157, i32 2147483647, i32 %158
  br label %160

160:                                              ; preds = %151, %155
  %161 = phi i32 [ %154, %151 ], [ %159, %155 ]
  store i32 %149, i32* %39, align 4
  store i32 %161, i32* %40, align 4
  %162 = icmp slt i32 %135, 0
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %137, i32 %135) #14
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !20
  %168 = icmp slt i32 %133, 0
  %169 = select i1 %168, i32 -2147483648, i32 2147483647
  %170 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %134, i32 %133) #14
  %171 = extractvalue { i32, i1 } %170, 1
  %172 = extractvalue { i32, i1 } %170, 0
  %173 = select i1 %171, i32 %169, i32 %172, !prof !20
  %174 = icmp slt i32 %167, 0
  %175 = select i1 %174, i32 -2147483648, i32 2147483647
  %176 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %111, i32 %167) #14
  %177 = extractvalue { i32, i1 } %176, 1
  %178 = extractvalue { i32, i1 } %176, 0
  %179 = select i1 %177, i32 %175, i32 %178, !prof !20
  store i32 %179, i32* %41, align 4
  %180 = icmp slt i32 %173, 0
  %181 = select i1 %180, i32 -2147483648, i32 2147483647
  %182 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %173) #14
  %183 = extractvalue { i32, i1 } %182, 1
  %184 = extractvalue { i32, i1 } %182, 0
  %185 = select i1 %183, i32 %181, i32 %184, !prof !20
  store i32 %185, i32* %42, align 4
  call void @_ZN5blink9LayoutBox21AddSelfVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %43, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28)
  br label %186

186:                                              ; preds = %17, %160, %1
  %187 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %188 = load %"class.blink::LayoutTableCaption"**, %"class.blink::LayoutTableCaption"*** %187, align 8
  %189 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %188, i64 %191
  %193 = icmp eq i32 %190, 0
  br i1 %193, label %198, label %194

194:                                              ; preds = %186
  %195 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %196 = bitcast i64* %2 to %"class.blink::LayoutSize"*
  %197 = bitcast i64* %2 to i8*
  br label %220

198:                                              ; preds = %220, %186
  %199 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %200 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %199, align 8
  %201 = icmp eq %"class.blink::LayoutTableSection"* %200, null
  br i1 %201, label %202, label %210

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %204 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %203, align 8
  %205 = icmp eq %"class.blink::LayoutTableSection"* %204, null
  br i1 %205, label %206, label %210

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %208 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %207, align 8
  %209 = icmp eq %"class.blink::LayoutTableSection"* %208, null
  br i1 %209, label %234, label %210

210:                                              ; preds = %202, %198, %206
  %211 = phi %"class.blink::LayoutTableSection"* [ %208, %206 ], [ %204, %202 ], [ %200, %198 ]
  %212 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %213 = bitcast i64* %3 to %"class.blink::LayoutSize"*
  %214 = bitcast i64* %3 to i8*
  %215 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %216 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %217 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %218 = bitcast %"class.blink::LayoutTableSection"** %199 to %"class.blink::LayoutObject"**
  %219 = bitcast %"class.blink::LayoutTableSection"** %216 to %"class.blink::LayoutObject"**
  br label %235

220:                                              ; preds = %194, %220
  %221 = phi %"class.blink::LayoutTableCaption"** [ %188, %194 ], [ %232, %220 ]
  %222 = bitcast %"class.blink::LayoutTableCaption"** %221 to %"class.blink::LayoutBox"**
  %223 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %222, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #14
  %224 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %223, i64 0, i32 2, i32 0, i32 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %223, i64 0, i32 2, i32 0, i32 1, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = zext i32 %227 to i64
  %229 = shl nuw i64 %228, 32
  %230 = zext i32 %225 to i64
  %231 = or i64 %229, %230
  store i64 %231, i64* %2, align 8
  call void @_ZN5blink9LayoutBox26AddVisualOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %195, %"class.blink::LayoutBox"* dereferenceable(216) %223, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %196) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #14
  %232 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %221, i64 1
  %233 = icmp eq %"class.blink::LayoutTableCaption"** %232, %192
  br i1 %233, label %198, label %220

234:                                              ; preds = %250, %282, %206
  ret void

235:                                              ; preds = %210, %282
  %236 = phi %"class.blink::LayoutTableSection"* [ %211, %210 ], [ %284, %282 ]
  %237 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %236, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #14
  %238 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %236, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %239 = load i32, i32* %238, align 4
  %240 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %236, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %241 = load i32, i32* %240, align 4
  %242 = zext i32 %241 to i64
  %243 = shl nuw i64 %242, 32
  %244 = zext i32 %239 to i64
  %245 = or i64 %243, %244
  store i64 %245, i64* %3, align 8
  call void @_ZN5blink9LayoutBox26AddVisualOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %212, %"class.blink::LayoutBox"* dereferenceable(216) %237, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %213) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #14
  %246 = load i16, i16* %215, align 8
  %247 = trunc i16 %246 to i8
  %248 = icmp slt i8 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %235
  call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %250

250:                                              ; preds = %249, %235
  %251 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %216, align 8
  %252 = icmp eq %"class.blink::LayoutTableSection"* %251, %236
  br i1 %252, label %234, label %253

253:                                              ; preds = %250
  %254 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %199, align 8
  %255 = icmp eq %"class.blink::LayoutTableSection"* %254, %236
  %256 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %236, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %257 = select i1 %255, %"class.blink::LayoutObject"** %217, %"class.blink::LayoutObject"** %256
  %258 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %257, align 8
  %259 = icmp eq %"class.blink::LayoutObject"* %258, null
  br i1 %259, label %279, label %260

260:                                              ; preds = %253, %273
  %261 = phi %"class.blink::LayoutObject"* [ %275, %273 ], [ %258, %253 ]
  %262 = bitcast %"class.blink::LayoutObject"* %261 to i1 (%"class.blink::LayoutObject"*, i32)***
  %263 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %262, align 8
  %264 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %263, i64 92
  %265 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %264, align 8
  %266 = call zeroext i1 %265(%"class.blink::LayoutObject"* nonnull %261, i32 50) #14
  br i1 %266, label %267, label %273

267:                                              ; preds = %260
  %268 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %218, align 8
  %269 = icmp eq %"class.blink::LayoutObject"* %261, %268
  br i1 %269, label %273, label %270

270:                                              ; preds = %267
  %271 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %219, align 8
  %272 = icmp eq %"class.blink::LayoutObject"* %261, %271
  br i1 %272, label %273, label %282

273:                                              ; preds = %270, %267, %260
  %274 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %261, i64 0, i32 9
  %275 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %274, align 8
  %276 = icmp eq %"class.blink::LayoutObject"* %275, null
  br i1 %276, label %277, label %260

277:                                              ; preds = %273
  %278 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %216, align 8
  br label %279

279:                                              ; preds = %277, %253
  %280 = phi %"class.blink::LayoutTableSection"* [ %278, %277 ], [ %251, %253 ]
  %281 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %280, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %282

282:                                              ; preds = %270, %279
  %283 = phi %"class.blink::LayoutObject"* [ %281, %279 ], [ %261, %270 ]
  %284 = bitcast %"class.blink::LayoutObject"* %283 to %"class.blink::LayoutTableSection"*
  %285 = icmp eq %"class.blink::LayoutObject"* %283, null
  br i1 %285, label %234, label %235
}

declare void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject41InvalidateIntersectionObserverCachedRectsEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink14LocalFrameView31SetIntersectionObservationStateENS0_28IntersectionObservationStateE(%"class.blink::LocalFrameView"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutTable27UpdateCollapsedOuterBordersEv(%"class.blink::LayoutTable"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca i8, align 4
  %4 = alloca i8, align 1
  %5 = alloca i8, align 2
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 2
  %9 = alloca i8, align 1
  %10 = alloca i8, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8, align 2
  %13 = alloca i8, align 1
  %14 = alloca i8, align 4
  %15 = alloca i8, align 1
  %16 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %17 = load i16, i16* %16, align 8
  %18 = and i16 %17, 144
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %20, label %348

20:                                               ; preds = %1
  %21 = or i16 %17, 16
  store i16 %21, i16* %16, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %23 = bitcast %"class.blink::ComputedStyle"** %22 to %"class.blink::ComputedStyleBase"**
  %24 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %24, i64 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = and i160 %27, 81129638414606681695789005144064
  %29 = icmp eq i160 %28, 0
  br i1 %29, label %30, label %348

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 14
  %32 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 15
  %33 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 16
  %34 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 17
  %35 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 18
  %36 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 19
  %37 = bitcast i32* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 24, i1 false)
  %38 = tail call %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable18TopNonEmptySectionEv(%"class.blink::LayoutTable"* %0)
  %39 = icmp eq %"class.blink::LayoutTableSection"* %38, null
  br i1 %39, label %348, label %40

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %38, i64 0, i32 3
  %42 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2120"* %41, i32 0) #14
  %43 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %42, i64 0, i32 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %56

46:                                               ; preds = %111, %40
  %47 = tail call %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable21BottomNonEmptySectionEv(%"class.blink::LayoutTable"* %0)
  %48 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %47, i64 0, i32 3, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = add i32 %49, -1
  %51 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %47, i64 0, i32 3
  %52 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2120"* %51, i32 %50) #14
  %53 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %52, i64 0, i32 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %114, label %120

56:                                               ; preds = %40, %111
  %57 = phi i32 [ %112, %111 ], [ 0, %40 ]
  %58 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2120"* %41, i32 0) #14
  %59 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %58, i64 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp ugt i32 %60, %57
  br i1 %61, label %62, label %111

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %58, i64 0, i32 0
  %64 = tail call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2123"* %63, i32 %57) #14
  %65 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %64, i64 0, i32 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %111, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %64, i64 0, i32 0
  %70 = add i32 %66, -1
  %71 = tail call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2126"* %69, i32 %70) #14
  %72 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutTableCell"* %72, null
  br i1 %73, label %111, label %74

74:                                               ; preds = %68
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7)
  %75 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %76 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %76, i64 0, i32 7
  %78 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %78, i64 0, i32 7
  %80 = bitcast %"class.blink::LayoutObject"** %79 to %"class.blink::LayoutTable"**
  %81 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %83 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 9
  %85 = bitcast [20 x i8]* %84 to i160*
  %86 = load i160, i160* %85, align 8
  %87 = lshr i160 %86, 102
  %88 = trunc i160 %87 to i8
  %89 = and i8 %88, 3
  store i8 1, i8* %5, align 2
  store i8 0, i8* %6, align 1
  store i8 1, i8* %7, align 1
  %90 = icmp eq i8 %89, 0
  %91 = icmp eq i8 %89, 1
  %92 = select i1 %91, i8* %6, i8* %7
  %93 = select i1 %90, i8* %5, i8* %92
  %94 = load i8, i8* %93, align 1, !range !21
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %72) #14
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %72) #14
  %95 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %95, align 8
  %97 = icmp eq %"class.blink::CollapsedBorderValues"* %96, null
  br i1 %97, label %106, label %98

98:                                               ; preds = %74
  %99 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %96, i64 0, i32 0, i64 2, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = and i32 %100, 33554431
  %102 = xor i8 %94, 1
  %103 = zext i8 %102 to i32
  %104 = add nuw nsw i32 %101, %103
  %105 = lshr i32 %104, 1
  br label %106

106:                                              ; preds = %74, %98
  %107 = phi i32 [ %105, %98 ], [ 0, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7)
  %108 = load i32, i32* %33, align 4
  %109 = icmp ult i32 %108, %107
  %110 = select i1 %109, i32 %107, i32 %108
  store i32 %110, i32* %33, align 4
  br label %111

111:                                              ; preds = %62, %56, %68, %106
  %112 = add nuw i32 %57, 1
  %113 = icmp eq i32 %112, %44
  br i1 %113, label %46, label %56

114:                                              ; preds = %175, %46
  %115 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %116 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %117 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %118 = bitcast %"class.blink::LayoutTableSection"** %116 to %"class.blink::LayoutObject"**
  %119 = bitcast %"class.blink::LayoutTableSection"** %115 to %"class.blink::LayoutObject"**
  br label %183

120:                                              ; preds = %46, %175
  %121 = phi i32 [ %176, %175 ], [ 0, %46 ]
  %122 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2120"* %51, i32 %50) #14
  %123 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %122, i64 0, i32 0, i32 0, i32 0, i32 2
  %124 = load i32, i32* %123, align 4
  %125 = icmp ugt i32 %124, %121
  br i1 %125, label %126, label %175

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %122, i64 0, i32 0
  %128 = tail call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2123"* %127, i32 %121) #14
  %129 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %128, i64 0, i32 0, i32 0, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %175, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %128, i64 0, i32 0
  %134 = add i32 %130, -1
  %135 = tail call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2126"* %133, i32 %134) #14
  %136 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %135, align 8
  %137 = icmp eq %"class.blink::LayoutTableCell"* %136, null
  br i1 %137, label %175, label %138

138:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  %139 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %140 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %140, i64 0, i32 7
  %142 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %142, i64 0, i32 7
  %144 = bitcast %"class.blink::LayoutObject"** %143 to %"class.blink::LayoutTable"**
  %145 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %147 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %147, i64 0, i32 0, i32 9
  %149 = bitcast [20 x i8]* %148 to i160*
  %150 = load i160, i160* %149, align 8
  %151 = lshr i160 %150, 102
  %152 = trunc i160 %151 to i8
  %153 = and i8 %152, 3
  store i8 0, i8* %2, align 1
  store i8 0, i8* %3, align 4
  store i8 1, i8* %4, align 1
  %154 = icmp eq i8 %153, 0
  %155 = icmp eq i8 %153, 1
  %156 = select i1 %155, i8* %4, i8* %2
  %157 = select i1 %154, i8* %3, i8* %156
  %158 = load i8, i8* %157, align 1, !range !21
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %136) #14
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %136) #14
  %159 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %136, i64 0, i32 3, i32 0, i32 0, i32 0
  %160 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %159, align 8
  %161 = icmp eq %"class.blink::CollapsedBorderValues"* %160, null
  br i1 %161, label %170, label %162

162:                                              ; preds = %138
  %163 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %160, i64 0, i32 0, i64 3, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = and i32 %164, 33554431
  %166 = xor i8 %158, 1
  %167 = zext i8 %166 to i32
  %168 = add nuw nsw i32 %165, %167
  %169 = lshr i32 %168, 1
  br label %170

170:                                              ; preds = %138, %162
  %171 = phi i32 [ %169, %162 ], [ 0, %138 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4)
  %172 = load i32, i32* %34, align 4
  %173 = icmp ult i32 %172, %171
  %174 = select i1 %173, i32 %171, i32 %172
  store i32 %174, i32* %34, align 8
  br label %175

175:                                              ; preds = %126, %120, %132, %170
  %176 = add nuw i32 %121, 1
  %177 = icmp eq i32 %176, %54
  br i1 %177, label %114, label %120

178:                                              ; preds = %200, %243
  %179 = load i32, i32* %31, align 4
  %180 = sub i32 %193, %179
  store i32 %180, i32* %35, align 4
  %181 = load i32, i32* %32, align 8
  %182 = sub i32 %194, %181
  store i32 %182, i32* %36, align 8
  br label %348

183:                                              ; preds = %114, %243
  %184 = phi %"class.blink::LayoutTableSection"* [ %38, %114 ], [ %245, %243 ]
  %185 = phi i8 [ 1, %114 ], [ %195, %243 ]
  %186 = phi i32 [ 0, %114 ], [ %194, %243 ]
  %187 = phi i32 [ 0, %114 ], [ %193, %243 ]
  %188 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %184, i64 0, i32 0, i32 1, i32 0
  %189 = bitcast %"class.blink::LayoutObject"** %188 to %"class.blink::LayoutTableRow"**
  %190 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %189, align 8
  %191 = icmp eq %"class.blink::LayoutTableRow"* %190, null
  br i1 %191, label %192, label %247

192:                                              ; preds = %342, %183
  %193 = phi i32 [ %187, %183 ], [ %297, %342 ]
  %194 = phi i32 [ %186, %183 ], [ %343, %342 ]
  %195 = phi i8 [ %185, %183 ], [ 0, %342 ]
  %196 = load i16, i16* %16, align 8
  %197 = trunc i16 %196 to i8
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %192
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %200

200:                                              ; preds = %199, %192
  %201 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %115, align 8
  %202 = icmp eq %"class.blink::LayoutTableSection"* %201, %184
  br i1 %202, label %178, label %203

203:                                              ; preds = %200
  %204 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %116, align 8
  %205 = icmp eq %"class.blink::LayoutTableSection"* %204, %184
  %206 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %184, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %207 = select i1 %205, %"class.blink::LayoutObject"** %117, %"class.blink::LayoutObject"** %206
  %208 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %207, align 8
  %209 = icmp eq %"class.blink::LayoutObject"* %208, null
  br i1 %209, label %234, label %210

210:                                              ; preds = %203, %228
  %211 = phi %"class.blink::LayoutObject"* [ %230, %228 ], [ %208, %203 ]
  %212 = bitcast %"class.blink::LayoutObject"* %211 to i1 (%"class.blink::LayoutObject"*, i32)***
  %213 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %212, align 8
  %214 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %213, i64 92
  %215 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %214, align 8
  %216 = tail call zeroext i1 %215(%"class.blink::LayoutObject"* nonnull %211, i32 50) #14
  br i1 %216, label %217, label %228

217:                                              ; preds = %210
  %218 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %118, align 8
  %219 = icmp eq %"class.blink::LayoutObject"* %211, %218
  br i1 %219, label %228, label %220

220:                                              ; preds = %217
  %221 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %119, align 8
  %222 = icmp eq %"class.blink::LayoutObject"* %211, %221
  br i1 %222, label %228, label %223

223:                                              ; preds = %220
  %224 = bitcast %"class.blink::LayoutObject"* %211 to %"class.blink::LayoutTableSection"*
  %225 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %224, i64 0, i32 3, i32 0, i32 0, i32 2
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %243

228:                                              ; preds = %223, %220, %217, %210
  %229 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %211, i64 0, i32 9
  %230 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %229, align 8
  %231 = icmp eq %"class.blink::LayoutObject"* %230, null
  br i1 %231, label %232, label %210

232:                                              ; preds = %228
  %233 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %115, align 8
  br label %234

234:                                              ; preds = %232, %203
  %235 = phi %"class.blink::LayoutTableSection"* [ %233, %232 ], [ %201, %203 ]
  %236 = icmp eq %"class.blink::LayoutTableSection"* %235, null
  br i1 %236, label %243, label %237

237:                                              ; preds = %234
  %238 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %235, i64 0, i32 0, i32 0, i32 0, i32 0
  %239 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %235, i64 0, i32 3, i32 0, i32 0, i32 2
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  %242 = select i1 %241, %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"* %238
  br label %243

243:                                              ; preds = %223, %234, %237
  %244 = phi %"class.blink::LayoutObject"* [ null, %234 ], [ %242, %237 ], [ %211, %223 ]
  %245 = bitcast %"class.blink::LayoutObject"* %244 to %"class.blink::LayoutTableSection"*
  %246 = icmp eq %"class.blink::LayoutObject"* %244, null
  br i1 %246, label %178, label %183

247:                                              ; preds = %183, %342
  %248 = phi %"class.blink::LayoutTableRow"* [ %346, %342 ], [ %190, %183 ]
  %249 = phi i8 [ 0, %342 ], [ %185, %183 ]
  %250 = phi i32 [ %343, %342 ], [ %186, %183 ]
  %251 = phi i32 [ %297, %342 ], [ %187, %183 ]
  %252 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %248, i64 0, i32 0, i32 1, i32 0
  %253 = bitcast %"class.blink::LayoutObject"** %252 to %"class.blink::LayoutTableCell"**
  %254 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %253, align 8
  %255 = icmp eq %"class.blink::LayoutTableCell"* %254, null
  br i1 %255, label %296, label %256

256:                                              ; preds = %247
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11)
  %257 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %254, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %258 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %257, align 8
  %259 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %258, i64 0, i32 7
  %260 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %260, i64 0, i32 7
  %262 = bitcast %"class.blink::LayoutObject"** %261 to %"class.blink::LayoutTable"**
  %263 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %263, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %265 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %264, align 8
  %266 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %265, i64 0, i32 0, i32 9
  %267 = bitcast [20 x i8]* %266 to i160*
  %268 = load i160, i160* %267, align 8
  store i8 1, i8* %8, align 2
  store i8 0, i8* %9, align 1
  store i8 0, i8* %10, align 4
  store i8 1, i8* %11, align 1
  %269 = and i160 %268, 15211807202738752817960438464512
  %270 = icmp eq i160 %269, 0
  %271 = and i160 %268, 41538374868278621028243970633760768
  %272 = icmp eq i160 %271, 0
  %273 = select i1 %272, i8* %11, i8* %9
  %274 = select i1 %272, i8* %8, i8* %10
  %275 = select i1 %270, i8* %273, i8* %274
  %276 = load i8, i8* %275, align 1, !range !21
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %254) #14
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %254) #14
  %277 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %254, i64 0, i32 3, i32 0, i32 0, i32 0
  %278 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %277, align 8
  %279 = icmp eq %"class.blink::CollapsedBorderValues"* %278, null
  br i1 %279, label %288, label %280

280:                                              ; preds = %256
  %281 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %278, i64 0, i32 0, i64 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = and i32 %282, 33554431
  %284 = xor i8 %276, 1
  %285 = zext i8 %284 to i32
  %286 = add nuw nsw i32 %283, %285
  %287 = lshr i32 %286, 1
  br label %288

288:                                              ; preds = %256, %280
  %289 = phi i32 [ %287, %280 ], [ 0, %256 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11)
  %290 = and i8 %249, 1
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %293, label %292

292:                                              ; preds = %288
  store i32 %289, i32* %31, align 4
  br label %293

293:                                              ; preds = %288, %292
  %294 = icmp ult i32 %251, %289
  %295 = select i1 %294, i32 %289, i32 %251
  br label %296

296:                                              ; preds = %247, %293
  %297 = phi i32 [ %251, %247 ], [ %295, %293 ]
  %298 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %248, i64 0, i32 0, i32 1, i32 1
  %299 = bitcast %"class.blink::LayoutObject"** %298 to %"class.blink::LayoutTableCell"**
  %300 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %299, align 8
  %301 = icmp eq %"class.blink::LayoutTableCell"* %300, null
  br i1 %301, label %342, label %302

302:                                              ; preds = %296
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15)
  %303 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %300, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %304 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %303, align 8
  %305 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %304, i64 0, i32 7
  %306 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %305, align 8
  %307 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %306, i64 0, i32 7
  %308 = bitcast %"class.blink::LayoutObject"** %307 to %"class.blink::LayoutTable"**
  %309 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %308, align 8
  %310 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %309, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %311 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %310, align 8
  %312 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %311, i64 0, i32 0, i32 9
  %313 = bitcast [20 x i8]* %312 to i160*
  %314 = load i160, i160* %313, align 8
  store i8 1, i8* %12, align 2
  store i8 0, i8* %13, align 1
  store i8 0, i8* %14, align 4
  store i8 1, i8* %15, align 1
  %315 = and i160 %314, 15211807202738752817960438464512
  %316 = icmp eq i160 %315, 0
  %317 = and i160 %314, 41538374868278621028243970633760768
  %318 = icmp eq i160 %317, 0
  %319 = select i1 %318, i8* %13, i8* %15
  %320 = select i1 %318, i8* %14, i8* %12
  %321 = select i1 %316, i8* %319, i8* %320
  %322 = load i8, i8* %321, align 1, !range !21
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %300) #14
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %300) #14
  %323 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %300, i64 0, i32 3, i32 0, i32 0, i32 0
  %324 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %323, align 8
  %325 = icmp eq %"class.blink::CollapsedBorderValues"* %324, null
  br i1 %325, label %334, label %326

326:                                              ; preds = %302
  %327 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %324, i64 0, i32 0, i64 1, i32 1
  %328 = load i32, i32* %327, align 4
  %329 = and i32 %328, 33554431
  %330 = xor i8 %322, 1
  %331 = zext i8 %330 to i32
  %332 = add nuw nsw i32 %329, %331
  %333 = lshr i32 %332, 1
  br label %334

334:                                              ; preds = %302, %326
  %335 = phi i32 [ %333, %326 ], [ 0, %302 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15)
  %336 = and i8 %249, 1
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %339, label %338

338:                                              ; preds = %334
  store i32 %335, i32* %32, align 8
  br label %339

339:                                              ; preds = %334, %338
  %340 = icmp ult i32 %250, %335
  %341 = select i1 %340, i32 %335, i32 %250
  br label %342

342:                                              ; preds = %296, %339
  %343 = phi i32 [ %250, %296 ], [ %341, %339 ]
  %344 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %248, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %345 = bitcast %"class.blink::LayoutObject"** %344 to %"class.blink::LayoutTableRow"**
  %346 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %345, align 8
  %347 = icmp eq %"class.blink::LayoutTableRow"* %346, null
  br i1 %347, label %192, label %247

348:                                              ; preds = %1, %178, %30, %20
  ret void
}

declare void @_ZN5blink9LayoutBox21AddSelfVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable29AddLayoutOverflowFromChildrenEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.blink::LayoutRect", align 4
  tail call void @_ZNK5blink11LayoutTable27UpdateCollapsedOuterBordersEv(%"class.blink::LayoutTable"* %0)
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = bitcast %"class.blink::ComputedStyle"** %9 to %"class.blink::ComputedStyleBase"**
  %11 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %11, i64 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 81129638414606681695789005144064
  %16 = icmp eq i160 %15, 0
  br i1 %16, label %17, label %186

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 18
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 19
  %21 = load i32, i32* %20, align 8
  %22 = or i32 %19, %21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %186, label %24

24:                                               ; preds = %17
  %25 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25)
  %26 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26)
  %27 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27)
  %28 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28)
  %29 = lshr i160 %14, 102
  %30 = trunc i160 %29 to i8
  %31 = and i8 %30, 3
  %32 = icmp ugt i32 %19, 33554430
  %33 = shl i32 %19, 6
  %34 = select i1 %32, i32 2147483647, i32 %33
  %35 = icmp ugt i32 %21, 33554430
  %36 = shl i32 %21, 6
  %37 = select i1 %35, i32 2147483647, i32 %36
  store i32 %34, i32* %4, align 4
  store i32 %37, i32* %5, align 4
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  %38 = bitcast %"class.blink::LayoutRect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #14
  %39 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 1, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 1, i32 1, i32 0
  %43 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2
  %45 = bitcast %"class.blink::LayoutRect"* %44 to i64*
  %46 = bitcast %"class.blink::LayoutRect"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %46, i8 -86, i64 16, i1 false)
  %47 = load i64, i64* %45, align 4
  %48 = trunc i64 %47 to i32
  %49 = lshr i64 %47, 32
  %50 = trunc i64 %49 to i32
  %51 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %52 = bitcast %"class.blink::LayoutSize"* %51 to i64*
  %53 = load i64, i64* %52, align 4
  %54 = trunc i64 %53 to i32
  %55 = lshr i64 %53, 32
  %56 = trunc i64 %55 to i32
  %57 = srem i32 %48, 64
  %58 = icmp slt i32 %54, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %54) #14
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !20
  %64 = sdiv i32 %63, 64
  %65 = srem i32 %63, 64
  %66 = add nsw i32 %65, 32
  %67 = ashr i32 %66, 6
  %68 = add nsw i32 %57, 32
  %69 = ashr i32 %68, 6
  %70 = sub nsw i32 %64, %69
  %71 = add nsw i32 %67, %70
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %79

73:                                               ; preds = %24
  %74 = add i32 %54, 4
  %75 = icmp ugt i32 %74, 8
  br i1 %75, label %76, label %79, !prof !98

76:                                               ; preds = %73
  %77 = icmp sgt i32 %54, 0
  %78 = select i1 %77, i32 1, i32 -1
  br label %79

79:                                               ; preds = %76, %73, %24
  %80 = phi i32 [ %78, %76 ], [ %71, %24 ], [ 0, %73 ]
  %81 = srem i32 %50, 64
  %82 = icmp slt i32 %56, 0
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %56) #14
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !20
  %88 = sdiv i32 %87, 64
  %89 = srem i32 %87, 64
  %90 = add nsw i32 %89, 32
  %91 = ashr i32 %90, 6
  %92 = add nsw i32 %81, 32
  %93 = ashr i32 %92, 6
  %94 = sub nsw i32 %88, %93
  %95 = add nsw i32 %91, %94
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %103

97:                                               ; preds = %79
  %98 = add i32 %56, 4
  %99 = icmp ugt i32 %98, 8
  br i1 %99, label %100, label %103, !prof !98

100:                                              ; preds = %97
  %101 = icmp sgt i32 %56, 0
  %102 = select i1 %101, i32 1, i32 -1
  br label %103

103:                                              ; preds = %79, %97, %100
  %104 = phi i32 [ %102, %100 ], [ %95, %79 ], [ 0, %97 ]
  store i32 0, i32* %39, align 4
  store i32 0, i32* %40, align 4
  %105 = icmp sgt i32 %80, 33554431
  br i1 %105, label %110, label %106

106:                                              ; preds = %103
  %107 = icmp slt i32 %80, -33554432
  %108 = shl i32 %80, 6
  %109 = select i1 %107, i32 -2147483648, i32 %108
  br label %110

110:                                              ; preds = %106, %103
  %111 = phi i32 [ 2147483647, %103 ], [ %109, %106 ]
  %112 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 1, i32 0, i32 0
  store i32 %111, i32* %112, align 4
  %113 = icmp sgt i32 %104, 33554431
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = icmp slt i32 %104, -33554432
  %116 = shl i32 %104, 6
  %117 = select i1 %115, i32 -2147483648, i32 %116
  br label %118

118:                                              ; preds = %114, %110
  %119 = phi i32 [ 2147483647, %110 ], [ %117, %114 ]
  %120 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 1, i32 1, i32 0
  store i32 %119, i32* %120, align 4
  %121 = icmp eq i8 %31, 0
  %122 = and i160 %14, 41538374868278621028243970633760768
  %123 = icmp eq i160 %122, 0
  br i1 %121, label %124, label %127

124:                                              ; preds = %118
  %125 = select i1 %123, i32 %37, i32 %34
  %126 = select i1 %123, i32* %4, i32* %5
  br label %132

127:                                              ; preds = %118
  %128 = select i1 %123, i32 %34, i32 %37
  %129 = icmp eq i8 %31, 1
  %130 = select i1 %123, i32 %37, i32 %34
  %131 = select i1 %129, i32* %7, i32* %6
  br label %132

132:                                              ; preds = %124, %127
  %133 = phi i32 [ 0, %124 ], [ %130, %127 ]
  %134 = phi i32 [ 0, %124 ], [ %128, %127 ]
  %135 = phi i32 [ %125, %124 ], [ 0, %127 ]
  %136 = phi i32* [ %126, %124 ], [ %131, %127 ]
  %137 = load i32, i32* %136, align 4
  %138 = tail call i1 @llvm.is.constant.i32(i32 %137) #14
  br i1 %138, label %139, label %143

139:                                              ; preds = %132
  %140 = sub i32 0, %137
  %141 = icmp eq i32 %140, -2147483648
  %142 = select i1 %141, i32 2147483647, i32 %140
  br label %148

143:                                              ; preds = %132
  %144 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %137) #14
  %145 = extractvalue { i32, i1 } %144, 1
  %146 = extractvalue { i32, i1 } %144, 0
  %147 = select i1 %145, i32 2147483647, i32 %146
  br label %148

148:                                              ; preds = %143, %139
  %149 = phi i32 [ %142, %139 ], [ %147, %143 ]
  %150 = tail call i1 @llvm.is.constant.i32(i32 %134) #14
  br i1 %150, label %151, label %155

151:                                              ; preds = %148
  %152 = sub i32 0, %134
  %153 = icmp eq i32 %152, -2147483648
  %154 = select i1 %153, i32 2147483647, i32 %152
  br label %160

155:                                              ; preds = %148
  %156 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %134) #14
  %157 = extractvalue { i32, i1 } %156, 1
  %158 = extractvalue { i32, i1 } %156, 0
  %159 = select i1 %157, i32 2147483647, i32 %158
  br label %160

160:                                              ; preds = %151, %155
  %161 = phi i32 [ %154, %151 ], [ %159, %155 ]
  store i32 %149, i32* %39, align 4
  store i32 %161, i32* %40, align 4
  %162 = icmp slt i32 %135, 0
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %137, i32 %135) #14
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !20
  %168 = icmp slt i32 %133, 0
  %169 = select i1 %168, i32 -2147483648, i32 2147483647
  %170 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %134, i32 %133) #14
  %171 = extractvalue { i32, i1 } %170, 1
  %172 = extractvalue { i32, i1 } %170, 0
  %173 = select i1 %171, i32 %169, i32 %172, !prof !20
  %174 = icmp slt i32 %167, 0
  %175 = select i1 %174, i32 -2147483648, i32 2147483647
  %176 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %111, i32 %167) #14
  %177 = extractvalue { i32, i1 } %176, 1
  %178 = extractvalue { i32, i1 } %176, 0
  %179 = select i1 %177, i32 %175, i32 %178, !prof !20
  store i32 %179, i32* %41, align 4
  %180 = icmp slt i32 %173, 0
  %181 = select i1 %180, i32 -2147483648, i32 2147483647
  %182 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %173) #14
  %183 = extractvalue { i32, i1 } %182, 1
  %184 = extractvalue { i32, i1 } %182, 0
  %185 = select i1 %183, i32 %181, i32 %184, !prof !20
  store i32 %185, i32* %42, align 4
  call void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %43, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28)
  br label %186

186:                                              ; preds = %17, %160, %1
  %187 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %188 = load i32, i32* %187, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %195, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4
  %192 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %193 = bitcast i64* %2 to %"class.blink::LayoutSize"*
  %194 = bitcast i64* %2 to i8*
  br label %217

195:                                              ; preds = %217, %186
  %196 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %197 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %196, align 8
  %198 = icmp eq %"class.blink::LayoutTableSection"* %197, null
  br i1 %198, label %199, label %207

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %201 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %200, align 8
  %202 = icmp eq %"class.blink::LayoutTableSection"* %201, null
  br i1 %202, label %203, label %207

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %205 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %204, align 8
  %206 = icmp eq %"class.blink::LayoutTableSection"* %205, null
  br i1 %206, label %233, label %207

207:                                              ; preds = %199, %195, %203
  %208 = phi %"class.blink::LayoutTableSection"* [ %205, %203 ], [ %201, %199 ], [ %197, %195 ]
  %209 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %210 = bitcast i64* %3 to %"class.blink::LayoutSize"*
  %211 = bitcast i64* %3 to i8*
  %212 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %213 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %214 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %215 = bitcast %"class.blink::LayoutTableSection"** %196 to %"class.blink::LayoutObject"**
  %216 = bitcast %"class.blink::LayoutTableSection"** %213 to %"class.blink::LayoutObject"**
  br label %234

217:                                              ; preds = %190, %217
  %218 = phi i32 [ 0, %190 ], [ %230, %217 ]
  %219 = call dereferenceable(8) %"class.blink::LayoutTableCaption"** @_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2110"* %191, i32 %218) #14
  %220 = bitcast %"class.blink::LayoutTableCaption"** %219 to %"class.blink::LayoutBox"**
  %221 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %220, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #14
  %222 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %221, i64 0, i32 2, i32 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %221, i64 0, i32 2, i32 0, i32 1, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i64
  %227 = shl nuw i64 %226, 32
  %228 = zext i32 %223 to i64
  %229 = or i64 %227, %228
  store i64 %229, i64* %2, align 8
  call void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %192, %"class.blink::LayoutBox"* dereferenceable(216) %221, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %193) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #14
  %230 = add nuw i32 %218, 1
  %231 = load i32, i32* %187, align 4
  %232 = icmp ult i32 %230, %231
  br i1 %232, label %217, label %195

233:                                              ; preds = %249, %281, %203
  ret void

234:                                              ; preds = %207, %281
  %235 = phi %"class.blink::LayoutTableSection"* [ %208, %207 ], [ %283, %281 ]
  %236 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %235, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211) #14
  %237 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %235, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %235, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = zext i32 %240 to i64
  %242 = shl nuw i64 %241, 32
  %243 = zext i32 %238 to i64
  %244 = or i64 %242, %243
  store i64 %244, i64* %3, align 8
  call void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %209, %"class.blink::LayoutBox"* dereferenceable(216) %236, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %210) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #14
  %245 = load i16, i16* %212, align 8
  %246 = trunc i16 %245 to i8
  %247 = icmp slt i8 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %234
  call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %249

249:                                              ; preds = %248, %234
  %250 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %213, align 8
  %251 = icmp eq %"class.blink::LayoutTableSection"* %250, %235
  br i1 %251, label %233, label %252

252:                                              ; preds = %249
  %253 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %196, align 8
  %254 = icmp eq %"class.blink::LayoutTableSection"* %253, %235
  %255 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %256 = select i1 %254, %"class.blink::LayoutObject"** %214, %"class.blink::LayoutObject"** %255
  %257 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %256, align 8
  %258 = icmp eq %"class.blink::LayoutObject"* %257, null
  br i1 %258, label %278, label %259

259:                                              ; preds = %252, %272
  %260 = phi %"class.blink::LayoutObject"* [ %274, %272 ], [ %257, %252 ]
  %261 = bitcast %"class.blink::LayoutObject"* %260 to i1 (%"class.blink::LayoutObject"*, i32)***
  %262 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %261, align 8
  %263 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %262, i64 92
  %264 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %263, align 8
  %265 = call zeroext i1 %264(%"class.blink::LayoutObject"* nonnull %260, i32 50) #14
  br i1 %265, label %266, label %272

266:                                              ; preds = %259
  %267 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %215, align 8
  %268 = icmp eq %"class.blink::LayoutObject"* %260, %267
  br i1 %268, label %272, label %269

269:                                              ; preds = %266
  %270 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %216, align 8
  %271 = icmp eq %"class.blink::LayoutObject"* %260, %270
  br i1 %271, label %272, label %281

272:                                              ; preds = %269, %266, %259
  %273 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %260, i64 0, i32 9
  %274 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %273, align 8
  %275 = icmp eq %"class.blink::LayoutObject"* %274, null
  br i1 %275, label %276, label %259

276:                                              ; preds = %272
  %277 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %213, align 8
  br label %278

278:                                              ; preds = %276, %252
  %279 = phi %"class.blink::LayoutTableSection"* [ %277, %276 ], [ %250, %252 ]
  %280 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %279, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %281

281:                                              ; preds = %269, %278
  %282 = phi %"class.blink::LayoutObject"* [ %280, %278 ], [ %260, %269 ]
  %283 = bitcast %"class.blink::LayoutObject"* %282 to %"class.blink::LayoutTableSection"*
  %284 = icmp eq %"class.blink::LayoutObject"* %282, null
  br i1 %284, label %233, label %234
}

declare void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutTable11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutTable"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TablePainter", align 8
  %5 = bitcast %"class.blink::TablePainter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.blink::TablePainter", %"class.blink::TablePainter"* %4, i64 0, i32 0
  store %"class.blink::LayoutTable"* %0, %"class.blink::LayoutTable"** %6, align 8
  call void @_ZN5blink12TablePainter11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::TablePainter"* nonnull %4, %"struct.blink::PaintInfo"* %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  ret void
}

declare void @_ZN5blink12TablePainter11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::TablePainter"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutTable19SubtractCaptionRectERNS_12PhysicalRectE(%"class.blink::LayoutTable"*, %"struct.blink::PhysicalRect"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  br label %14

13:                                               ; preds = %167, %2
  ret void

14:                                               ; preds = %7, %167
  %15 = phi i32 [ 0, %7 ], [ %168, %167 ]
  %16 = tail call dereferenceable(8) %"class.blink::LayoutTableCaption"** @_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2110"* %3, i32 %15) #14
  %17 = bitcast %"class.blink::LayoutTableCaption"** %16 to %"class.blink::LayoutBox"**
  %18 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %18, i64 0, i32 0, i32 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = and i160 %23, 15211807202738752817960438464512
  %25 = icmp eq i160 %24, 0
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %18, i64 0, i32 2, i32 1, i32 1, i32 0
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %18, i64 0, i32 2, i32 1, i32 0, i32 0
  %28 = select i1 %25, i32* %26, i32* %27
  %29 = load i32, i32* %28, align 4
  %30 = tail call dereferenceable(8) %"class.blink::LayoutTableCaption"** @_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2110"* %3, i32 %15) #14
  %31 = bitcast %"class.blink::LayoutTableCaption"** %30 to %"class.blink::LayoutBoxModelObject"**
  %32 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %32, i64 0, i32 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8, !noalias !99
  %38 = lshr i160 %37, 102
  %39 = trunc i160 %38 to i8
  %40 = and i8 %39, 3
  %41 = bitcast %"class.blink::LayoutBoxModelObject"* %32 to i8*
  switch i8 %40, label %42 [
    i8 0, label %51
    i8 1, label %43
  ]

42:                                               ; preds = %14
  br label %43

43:                                               ; preds = %42, %14
  %44 = phi { i64, i64 } [ { i64 1033, i64 0 }, %42 ], [ { i64 1041, i64 0 }, %14 ]
  %45 = extractvalue { i64, i64 } %44, 0
  %46 = extractvalue { i64, i64 } %44, 1
  %47 = getelementptr inbounds i8, i8* %41, i64 %46
  %48 = bitcast i8* %47 to %"class.blink::LayoutBoxModelObject"*
  %49 = and i64 %45, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %61, label %51

51:                                               ; preds = %43, %14
  %52 = phi %"class.blink::LayoutBoxModelObject"* [ %48, %43 ], [ %32, %14 ]
  %53 = phi i8* [ %47, %43 ], [ %41, %14 ]
  %54 = phi i64 [ %45, %43 ], [ 1017, %14 ]
  %55 = bitcast i8* %53 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = add i64 %54, -1
  %58 = getelementptr i8, i8* %56, i64 %57
  %59 = bitcast i8* %58 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %60 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %59, align 8
  br label %63

61:                                               ; preds = %43
  %62 = inttoptr i64 %45 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %63

63:                                               ; preds = %51, %61
  %64 = phi %"class.blink::LayoutBoxModelObject"* [ %52, %51 ], [ %48, %61 ]
  %65 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %60, %51 ], [ %62, %61 ]
  %66 = tail call i32 %65(%"class.blink::LayoutBoxModelObject"* %64) #14
  %67 = icmp slt i32 %66, 0
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  %69 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 %66) #14
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 %68, i32 %71, !prof !20
  %73 = tail call dereferenceable(8) %"class.blink::LayoutTableCaption"** @_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2110"* %3, i32 %15) #14
  %74 = bitcast %"class.blink::LayoutTableCaption"** %73 to %"class.blink::LayoutBoxModelObject"**
  %75 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %75, i64 0, i32 0, i32 5, i32 0
  %77 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %77, i64 0, i32 0, i32 9
  %79 = bitcast [20 x i8]* %78 to i160*
  %80 = load i160, i160* %79, align 8, !noalias !102
  %81 = lshr i160 %80, 102
  %82 = trunc i160 %81 to i8
  %83 = and i8 %82, 3
  %84 = bitcast %"class.blink::LayoutBoxModelObject"* %75 to i8*
  switch i8 %83, label %85 [
    i8 0, label %94
    i8 1, label %86
  ]

85:                                               ; preds = %63
  br label %86

86:                                               ; preds = %85, %63
  %87 = phi { i64, i64 } [ { i64 1041, i64 0 }, %85 ], [ { i64 1033, i64 0 }, %63 ]
  %88 = extractvalue { i64, i64 } %87, 0
  %89 = extractvalue { i64, i64 } %87, 1
  %90 = getelementptr inbounds i8, i8* %84, i64 %89
  %91 = bitcast i8* %90 to %"class.blink::LayoutBoxModelObject"*
  %92 = and i64 %88, 1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %86, %63
  %95 = phi %"class.blink::LayoutBoxModelObject"* [ %91, %86 ], [ %75, %63 ]
  %96 = phi i8* [ %90, %86 ], [ %84, %63 ]
  %97 = phi i64 [ %88, %86 ], [ 1025, %63 ]
  %98 = bitcast i8* %96 to i8**
  %99 = load i8*, i8** %98, align 8
  %100 = add i64 %97, -1
  %101 = getelementptr i8, i8* %99, i64 %100
  %102 = bitcast i8* %101 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %103 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %102, align 8
  br label %106

104:                                              ; preds = %86
  %105 = inttoptr i64 %88 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %106

106:                                              ; preds = %94, %104
  %107 = phi %"class.blink::LayoutBoxModelObject"* [ %95, %94 ], [ %91, %104 ]
  %108 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %103, %94 ], [ %105, %104 ]
  %109 = tail call i32 %108(%"class.blink::LayoutBoxModelObject"* %107) #14
  %110 = icmp slt i32 %109, 0
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %72, i32 %109) #14
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 %111, i32 %114, !prof !20
  %116 = tail call dereferenceable(8) %"class.blink::LayoutTableCaption"** @_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2110"* %3, i32 %15) #14
  %117 = bitcast %"class.blink::LayoutTableCaption"** %116 to %"class.blink::LayoutObject"**
  %118 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %118, i64 0, i32 5, i32 0
  %120 = bitcast %"class.blink::ComputedStyle"** %119 to %"class.blink::ComputedStyleBase"**
  %121 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %121, i64 0, i32 9
  %123 = bitcast [20 x i8]* %122 to i160*
  %124 = load i160, i160* %123, align 8
  %125 = and i160 %124, 1298074214633706907132624082305024
  %126 = icmp eq i160 %125, 0
  %127 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %128 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %127, i64 0, i32 0, i32 9
  %129 = bitcast [20 x i8]* %128 to i160*
  %130 = load i160, i160* %129, align 8
  %131 = and i160 %130, 15211807202738752817960438464512
  %132 = icmp eq i160 %131, 5070602400912917605986812821504
  %133 = xor i1 %126, %132
  %134 = icmp eq i160 %131, 0
  br i1 %134, label %135, label %151

135:                                              ; preds = %106
  %136 = load i32, i32* %11, align 4
  %137 = icmp sgt i32 %115, -1
  %138 = select i1 %137, i32 -2147483648, i32 2147483647
  %139 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %136, i32 %115) #14
  %140 = extractvalue { i32, i1 } %139, 1
  %141 = extractvalue { i32, i1 } %139, 0
  %142 = select i1 %140, i32 %138, i32 %141, !prof !20
  store i32 %142, i32* %11, align 4
  br i1 %133, label %143, label %167

143:                                              ; preds = %135
  %144 = load i32, i32* %12, align 4
  %145 = icmp slt i32 %115, 0
  %146 = select i1 %145, i32 -2147483648, i32 2147483647
  %147 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %144, i32 %115) #14
  %148 = extractvalue { i32, i1 } %147, 1
  %149 = extractvalue { i32, i1 } %147, 0
  %150 = select i1 %148, i32 %146, i32 %149, !prof !20
  store i32 %150, i32* %12, align 4
  br label %167

151:                                              ; preds = %106
  %152 = load i32, i32* %9, align 4
  %153 = icmp sgt i32 %115, -1
  %154 = select i1 %153, i32 -2147483648, i32 2147483647
  %155 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %152, i32 %115) #14
  %156 = extractvalue { i32, i1 } %155, 1
  %157 = extractvalue { i32, i1 } %155, 0
  %158 = select i1 %156, i32 %154, i32 %157, !prof !20
  store i32 %158, i32* %9, align 4
  br i1 %133, label %159, label %167

159:                                              ; preds = %151
  %160 = load i32, i32* %10, align 4
  %161 = icmp slt i32 %115, 0
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %160, i32 %115) #14
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %162, i32 %165, !prof !20
  store i32 %166, i32* %10, align 4
  br label %167

167:                                              ; preds = %151, %159, %135, %143
  %168 = add nuw i32 %15, 1
  %169 = load i32, i32* %4, align 4
  %170 = icmp ult i32 %168, %169
  br i1 %170, label %14, label %13
}

declare void @_ZN5blink18LayoutTableSection39MarkAllCellsWidthsDirtyAndOrNeedsLayoutENS_11LayoutTable18WhatToMarkAllCellsE(%"class.blink::LayoutTableSection"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutTable28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutTable"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TablePainter", align 8
  %5 = bitcast %"class.blink::TablePainter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.blink::TablePainter", %"class.blink::TablePainter"* %4, i64 0, i32 0
  store %"class.blink::LayoutTable"* %0, %"class.blink::LayoutTable"** %6, align 8
  call void @_ZN5blink12TablePainter28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::TablePainter"* nonnull %4, %"struct.blink::PaintInfo"* %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  ret void
}

declare void @_ZN5blink12TablePainter28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::TablePainter"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutTable9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutTable"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TablePainter", align 8
  %5 = bitcast %"class.blink::TablePainter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.blink::TablePainter", %"class.blink::TablePainter"* %4, i64 0, i32 0
  store %"class.blink::LayoutTable"* %0, %"class.blink::LayoutTable"** %6, align 8
  call void @_ZN5blink12TablePainter9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::TablePainter"* nonnull %4, %"struct.blink::PaintInfo"* %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  ret void
}

declare void @_ZN5blink12TablePainter9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::TablePainter"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink11LayoutTable29ComputeIntrinsicLogicalWidthsEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"struct.blink::MinMaxSizes"*
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %5 = load i16, i16* %4, align 8
  %6 = trunc i16 %5 to i8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %9

9:                                                ; preds = %8, %1
  %10 = bitcast i64* %2 to %"class.blink::LayoutUnit"*
  %11 = bitcast i64* %2 to i32*
  %12 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %3, i64 0, i32 1
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %3, i64 0, i32 1, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %15 = load %"class.blink::TableLayoutAlgorithm"*, %"class.blink::TableLayoutAlgorithm"** %14, align 8
  %16 = bitcast %"class.blink::TableLayoutAlgorithm"* %15 to void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)***
  %17 = load void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)**, void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)*, void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)** %17, i64 2
  %19 = load void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)*, void (%"class.blink::TableLayoutAlgorithm"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)** %18, align 8
  call void %19(%"class.blink::TableLayoutAlgorithm"* %15, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %10, %"class.blink::LayoutUnit"* dereferenceable(4) %12) #14
  %20 = call i32 @_ZNK5blink11LayoutTable38BordersPaddingAndSpacingInRowDirectionEv(%"class.blink::LayoutTable"* %0)
  %21 = sdiv i32 %20, 64
  %22 = shl nsw i32 %21, 6
  %23 = load i32, i32* %11, align 8
  %24 = icmp slt i32 %20, -63
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 %22) #14
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !20
  store i32 %29, i32* %11, align 8
  %30 = load i32, i32* %13, align 4
  %31 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 %22) #14
  %32 = extractvalue { i32, i1 } %31, 1
  %33 = extractvalue { i32, i1 } %31, 0
  %34 = select i1 %32, i32 %25, i32 %33, !prof !20
  store i32 %34, i32* %13, align 4
  %35 = load i64, i64* %2, align 8
  ret i64 %35
}

declare i64 @_ZNK5blink9LayoutBox22IntrinsicLogicalWidthsENS_15MinMaxSizesTypeE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox39AdjustBorderBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable12SectionAboveEPKNS_18LayoutTableSectionENS_22SkipEmptySectionsValueE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableSection"* readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %5 = load i16, i16* %4, align 8
  %6 = trunc i16 %5 to i8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %9

9:                                                ; preds = %3, %8
  %10 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %11 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %10, align 8
  %12 = icmp eq %"class.blink::LayoutTableSection"* %11, %1
  br i1 %12, label %65, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %15 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %14, align 8
  %16 = icmp eq %"class.blink::LayoutTableSection"* %15, %1
  %17 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 1
  %18 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %19 = select i1 %16, %"class.blink::LayoutObject"** %17, %"class.blink::LayoutObject"** %18
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %21, label %51, label %22

22:                                               ; preds = %13
  %23 = bitcast %"class.blink::LayoutTableSection"** %10 to %"class.blink::LayoutObject"**
  %24 = bitcast %"class.blink::LayoutTableSection"** %14 to %"class.blink::LayoutObject"**
  %25 = icmp eq i32 %2, 0
  br label %26

26:                                               ; preds = %22, %45
  %27 = phi %"class.blink::LayoutObject"* [ %20, %22 ], [ %47, %45 ]
  %28 = bitcast %"class.blink::LayoutObject"* %27 to i1 (%"class.blink::LayoutObject"*, i32)***
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, i64 92
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* nonnull %27, i32 50) #14
  br i1 %32, label %33, label %45

33:                                               ; preds = %26
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %35 = icmp eq %"class.blink::LayoutObject"* %27, %34
  br i1 %35, label %45, label %36

36:                                               ; preds = %33
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %38 = icmp eq %"class.blink::LayoutObject"* %27, %37
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  br i1 %25, label %62, label %40

40:                                               ; preds = %39
  %41 = bitcast %"class.blink::LayoutObject"* %27 to %"class.blink::LayoutTableSection"*
  %42 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %41, i64 0, i32 3, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %62

45:                                               ; preds = %40, %36, %33, %26
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 8
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  %48 = icmp eq %"class.blink::LayoutObject"* %47, null
  br i1 %48, label %49, label %26

49:                                               ; preds = %45
  %50 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %10, align 8
  br label %51

51:                                               ; preds = %49, %13
  %52 = phi %"class.blink::LayoutTableSection"* [ %50, %49 ], [ %11, %13 ]
  %53 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = icmp eq %"class.blink::LayoutTableSection"* %52, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %51
  %56 = icmp eq i32 %2, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %52, i64 0, i32 3, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %57, %55
  br label %62

62:                                               ; preds = %39, %40, %57, %51, %61
  %63 = phi %"class.blink::LayoutObject"* [ %53, %61 ], [ null, %57 ], [ null, %51 ], [ %27, %40 ], [ %27, %39 ]
  %64 = bitcast %"class.blink::LayoutObject"* %63 to %"class.blink::LayoutTableSection"*
  br label %65

65:                                               ; preds = %9, %62
  %66 = phi %"class.blink::LayoutTableSection"* [ %64, %62 ], [ null, %9 ]
  ret %"class.blink::LayoutTableSection"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable20SplitEffectiveColumnEjj(%"class.blink::LayoutTable"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  store i32 %2, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2
  call void @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE6insertIRjEEvjOT_(%"class.WTF::Vector.2101"* %5, i32 %1, i32* nonnull dereferenceable(4) %4)
  %6 = load i32, i32* %4, align 4
  %7 = add i32 %1, 1
  %8 = call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %5, i32 %7) #14
  %9 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sub i32 %10, %6
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = icmp eq %"class.blink::LayoutObject"* %13, null
  br i1 %14, label %15, label %76

15:                                               ; preds = %90, %3
  %16 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, 1
  %20 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %21, %19
  br i1 %22, label %23, label %63

23:                                               ; preds = %15
  %24 = lshr i32 %21, 2
  %25 = add nuw i32 %21, 1
  %26 = add i32 %25, %24
  %27 = icmp ugt i32 %26, 4
  %28 = select i1 %27, i32 %26, i32 4
  %29 = icmp ugt i32 %28, %19
  %30 = select i1 %29, i32 %28, i32 %19
  %31 = icmp ult i32 %21, %30
  br i1 %31, label %32, label %63, !prof !2

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %16, i64 0, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = icmp eq i32* %34, null
  %36 = zext i32 %30 to i64
  %37 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %36) #14
  %38 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %37, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #14
  br i1 %35, label %39, label %44

39:                                               ; preds = %32
  %40 = ptrtoint i8* %38 to i64
  %41 = bitcast %"class.WTF::Vector.2106"* %16 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %37, 2
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %20, align 8
  br label %63

44:                                               ; preds = %32
  %45 = lshr i64 %37, 2
  %46 = ptrtoint i8* %38 to i64
  %47 = load i32*, i32** %33, align 8
  %48 = icmp ne i8* %38, null
  %49 = icmp ne i32* %47, null
  %50 = and i1 %48, %49
  %51 = bitcast i32* %47 to i8*
  br i1 %50, label %52, label %59, !prof !2

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = shl nuw nsw i64 %55, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %38, i8* nonnull align 4 %51, i64 %56, i1 false) #14
  %57 = bitcast %"class.WTF::Vector.2106"* %16 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %52, %44
  %60 = phi i8* [ %58, %52 ], [ %51, %44 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #14
  %61 = bitcast %"class.WTF::Vector.2106"* %16 to i64*
  store atomic i64 %46, i64* %61 monotonic, align 8
  %62 = trunc i64 %45 to i32
  store i32 %62, i32* %20, align 8
  br label %63

63:                                               ; preds = %59, %39, %23, %15
  %64 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %16, i64 0, i32 0, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %65, i64 %68
  %70 = zext i32 %19 to i64
  %71 = getelementptr inbounds i32, i32* %65, i64 %70
  %72 = bitcast i32* %69 to i8*
  %73 = ptrtoint i32* %71 to i64
  %74 = ptrtoint i32* %69 to i64
  %75 = sub i64 %73, %74
  call void @llvm.memset.p0i8.i64(i8* align 4 %72, i8 0, i64 %75, i1 false) #14
  store i32 %19, i32* %66, align 4
  ret void

76:                                               ; preds = %3, %90
  %77 = phi %"class.blink::LayoutObject"* [ %92, %90 ], [ %13, %3 ]
  %78 = bitcast %"class.blink::LayoutObject"* %77 to i1 (%"class.blink::LayoutObject"*, i32)***
  %79 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %78, align 8
  %80 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %79, i64 92
  %81 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %80, align 8
  %82 = call zeroext i1 %81(%"class.blink::LayoutObject"* nonnull %77, i32 50) #14
  br i1 %82, label %83, label %90

83:                                               ; preds = %76
  %84 = bitcast %"class.blink::LayoutObject"* %77 to %"class.blink::LayoutTableSection"*
  %85 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %84, i64 0, i32 10
  %86 = load i8, i8* %85, align 4, !range !21
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  %89 = load i32, i32* %4, align 4
  call void @_ZN5blink18LayoutTableSection20SplitEffectiveColumnEjj(%"class.blink::LayoutTableSection"* nonnull %84, i32 %1, i32 %89) #14
  br label %90

90:                                               ; preds = %83, %88, %76
  %91 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %77, i64 0, i32 9
  %92 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %91, align 8
  %93 = icmp eq %"class.blink::LayoutObject"* %92, null
  br i1 %93, label %15, label %76
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE6insertIRjEEvjOT_(%"class.WTF::Vector.2101"*, i32, i32* dereferenceable(4)) local_unnamed_addr #6 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.2101", %"class.WTF::Vector.2101"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i8* %15, i8* %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.2101", %"class.WTF::Vector.2101"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %67

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = lshr i32 %24, 2
  %31 = add i32 %29, %30
  %32 = icmp ugt i32 %31, 4
  %33 = select i1 %32, i32 %31, i32 4
  %34 = icmp ugt i32 %33, %29
  %35 = select i1 %34, i32 %33, i32 %29
  %36 = icmp ult i32 %24, %35
  br i1 %36, label %37, label %67, !prof !2

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::Vector.2101", %"class.WTF::Vector.2101"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %38, align 8
  %40 = icmp eq %"struct.blink::LayoutTable::ColumnStruct"* %39, null
  %41 = zext i32 %35 to i64
  %42 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11LayoutTable12ColumnStructEEEmm(i64 %41) #14
  %43 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %42, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11LayoutTable12ColumnStructEEEPKcv, i64 0, i64 0)) #14
  br i1 %40, label %44, label %49

44:                                               ; preds = %37
  %45 = ptrtoint i8* %43 to i64
  %46 = bitcast %"class.WTF::Vector.2101"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = lshr i64 %42, 2
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %25, align 8
  br label %67

49:                                               ; preds = %37
  %50 = lshr i64 %42, 2
  %51 = ptrtoint i8* %43 to i64
  %52 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %38, align 8
  %53 = icmp ne i8* %43, null
  %54 = icmp ne %"struct.blink::LayoutTable::ColumnStruct"* %52, null
  %55 = and i1 %53, %54
  %56 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %52 to i8*
  br i1 %55, label %57, label %63, !prof !2

57:                                               ; preds = %49
  %58 = load i32, i32* %9, align 4
  %59 = zext i32 %58 to i64
  %60 = shl nuw nsw i64 %59, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %43, i8* nonnull align 4 %56, i64 %60, i1 false) #14
  %61 = bitcast %"class.WTF::Vector.2101"* %0 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %57, %49
  %64 = phi i8* [ %62, %57 ], [ %56, %49 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #14
  %65 = bitcast %"class.WTF::Vector.2101"* %0 to i64*
  store atomic i64 %51, i64* %65 monotonic, align 8
  %66 = trunc i64 %50 to i32
  store i32 %66, i32* %25, align 8
  br label %67

67:                                               ; preds = %63, %44, %28, %23
  %68 = getelementptr inbounds %"class.WTF::Vector.2101", %"class.WTF::Vector.2101"* %0, i64 0, i32 0, i32 0, i32 0
  %69 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %68, align 8
  %70 = zext i32 %1 to i64
  %71 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %69, i64 %70
  %72 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %71, i64 1
  %73 = icmp ne %"struct.blink::LayoutTable::ColumnStruct"* %72, null
  %74 = icmp ne %"struct.blink::LayoutTable::ColumnStruct"* %71, null
  %75 = and i1 %74, %73
  br i1 %75, label %76, label %85, !prof !2

76:                                               ; preds = %67
  %77 = load i32, i32* %9, align 4
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %69, i64 %78
  %80 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %72 to i8*
  %81 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %71 to i8*
  %82 = ptrtoint %"struct.blink::LayoutTable::ColumnStruct"* %79 to i64
  %83 = ptrtoint %"struct.blink::LayoutTable::ColumnStruct"* %71 to i64
  %84 = sub i64 %82, %83
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %80, i8* nonnull align 4 %81, i64 %84, i1 false) #14
  br label %85

85:                                               ; preds = %67, %76
  %86 = load i32, i32* %2, align 4
  %87 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %71, i64 0, i32 0
  store i32 %86, i32* %87, align 4
  %88 = load i32, i32* %9, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %9, align 4
  ret void
}

declare void @_ZN5blink18LayoutTableSection20SplitEffectiveColumnEjj(%"class.blink::LayoutTableSection"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable21AppendEffectiveColumnEj(%"class.blink::LayoutTable"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %17, label %10, !prof !20

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::Vector.2101", %"class.WTF::Vector.2101"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %12, i64 %13, i32 0
  store i32 %1, i32* %14, align 4
  %15 = load i32, i32* %5, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %5, align 4
  br label %18

17:                                               ; preds = %2
  call void @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.2101"* %4, i32* nonnull dereferenceable(4) %3) #14
  br label %18

18:                                               ; preds = %10, %17
  %19 = load i32, i32* %3, align 4
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %28

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 11
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, 1
  %25 = load i32, i32* %5, align 4
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %21
  store i32 %24, i32* %22, align 4
  br label %28

28:                                               ; preds = %27, %21, %18
  %29 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %31 = icmp eq %"class.blink::LayoutObject"* %30, null
  br i1 %31, label %32, label %92

32:                                               ; preds = %105, %28
  %33 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3
  %34 = load i32, i32* %5, align 4
  %35 = add i32 %34, 1
  %36 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp ult i32 %37, %35
  br i1 %38, label %39, label %79

39:                                               ; preds = %32
  %40 = lshr i32 %37, 2
  %41 = add nuw i32 %37, 1
  %42 = add i32 %41, %40
  %43 = icmp ugt i32 %42, 4
  %44 = select i1 %43, i32 %42, i32 4
  %45 = icmp ugt i32 %44, %35
  %46 = select i1 %45, i32 %44, i32 %35
  %47 = icmp ult i32 %37, %46
  br i1 %47, label %48, label %79, !prof !2

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %33, i64 0, i32 0, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = icmp eq i32* %50, null
  %52 = zext i32 %46 to i64
  %53 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %52) #14
  %54 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %53, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #14
  br i1 %51, label %55, label %60

55:                                               ; preds = %48
  %56 = ptrtoint i8* %54 to i64
  %57 = bitcast %"class.WTF::Vector.2106"* %33 to i64*
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = lshr i64 %53, 2
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %36, align 8
  br label %79

60:                                               ; preds = %48
  %61 = lshr i64 %53, 2
  %62 = ptrtoint i8* %54 to i64
  %63 = load i32*, i32** %49, align 8
  %64 = icmp ne i8* %54, null
  %65 = icmp ne i32* %63, null
  %66 = and i1 %64, %65
  %67 = bitcast i32* %63 to i8*
  br i1 %66, label %68, label %75, !prof !2

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = shl nuw nsw i64 %71, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %54, i8* nonnull align 4 %67, i64 %72, i1 false) #14
  %73 = bitcast %"class.WTF::Vector.2106"* %33 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %68, %60
  %76 = phi i8* [ %74, %68 ], [ %67, %60 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #14
  %77 = bitcast %"class.WTF::Vector.2106"* %33 to i64*
  store atomic i64 %62, i64* %77 monotonic, align 8
  %78 = trunc i64 %61 to i32
  store i32 %78, i32* %36, align 8
  br label %79

79:                                               ; preds = %75, %55, %39, %32
  %80 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %33, i64 0, i32 0, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32* %81, i64 %84
  %86 = zext i32 %35 to i64
  %87 = getelementptr inbounds i32, i32* %81, i64 %86
  %88 = bitcast i32* %85 to i8*
  %89 = ptrtoint i32* %87 to i64
  %90 = ptrtoint i32* %85 to i64
  %91 = sub i64 %89, %90
  call void @llvm.memset.p0i8.i64(i8* align 4 %88, i8 0, i64 %91, i1 false) #14
  store i32 %35, i32* %82, align 4
  ret void

92:                                               ; preds = %28, %105
  %93 = phi %"class.blink::LayoutObject"* [ %107, %105 ], [ %30, %28 ]
  %94 = bitcast %"class.blink::LayoutObject"* %93 to i1 (%"class.blink::LayoutObject"*, i32)***
  %95 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %94, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %95, i64 92
  %97 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %96, align 8
  %98 = call zeroext i1 %97(%"class.blink::LayoutObject"* nonnull %93, i32 50) #14
  br i1 %98, label %99, label %105

99:                                               ; preds = %92
  %100 = bitcast %"class.blink::LayoutObject"* %93 to %"class.blink::LayoutTableSection"*
  %101 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %100, i64 0, i32 10
  %102 = load i8, i8* %101, align 4, !range !21
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %99
  call void @_ZN5blink18LayoutTableSection21AppendEffectiveColumnEj(%"class.blink::LayoutTableSection"* nonnull %100, i32 %6) #14
  br label %105

105:                                              ; preds = %99, %104, %92
  %106 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %93, i64 0, i32 9
  %107 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %106, align 8
  %108 = icmp eq %"class.blink::LayoutObject"* %107, null
  br i1 %108, label %32, label %92
}

declare void @_ZN5blink18LayoutTableSection21AppendEffectiveColumnEj(%"class.blink::LayoutTableSection"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTableCol"* @_ZNK5blink11LayoutTable11FirstColumnEv(%"class.blink::LayoutTable"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1, %12
  %6 = phi %"class.blink::LayoutObject"* [ %14, %12 ], [ %3, %1 ]
  %7 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, i64 92
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %6, i32 48) #14
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 9
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %18, label %5

16:                                               ; preds = %5
  %17 = bitcast %"class.blink::LayoutObject"* %6 to %"class.blink::LayoutTableCol"*
  br label %18

18:                                               ; preds = %12, %1, %16
  %19 = phi %"class.blink::LayoutTableCol"* [ %17, %16 ], [ null, %1 ], [ null, %12 ]
  ret %"class.blink::LayoutTableCol"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutTable17UpdateColumnCacheEv(%"class.blink::LayoutTable"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutTableCol"*, align 8
  %3 = bitcast %"class.blink::LayoutTableCol"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #14
  store %"class.blink::LayoutTableCol"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutTableCol"*), %"class.blink::LayoutTableCol"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutObject"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %1, %14
  %8 = phi %"class.blink::LayoutObject"* [ %16, %14 ], [ %5, %1 ]
  %9 = bitcast %"class.blink::LayoutObject"* %8 to i1 (%"class.blink::LayoutObject"*, i32)***
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, i64 92
  %12 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* nonnull %8, i32 48) #14
  br i1 %13, label %19, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 9
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = icmp eq %"class.blink::LayoutObject"* %16, null
  br i1 %17, label %18, label %7

18:                                               ; preds = %14, %1
  store %"class.blink::LayoutTableCol"* null, %"class.blink::LayoutTableCol"** %2, align 8
  br label %28

19:                                               ; preds = %7
  %20 = bitcast %"class.blink::LayoutTableCol"** %2 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %8, %"class.blink::LayoutObject"** %20, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %8, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.blink::LayoutObject"* %8 to %"class.blink::LayoutTableCol"*
  %24 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 5
  %25 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %26 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::Vector.2115", %"class.WTF::Vector.2115"* %24, i64 0, i32 0, i32 0, i32 0
  br label %32

28:                                               ; preds = %50, %18, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #14
  %29 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %30 = load i16, i16* %29, align 8
  %31 = or i16 %30, 1024
  store i16 %31, i16* %29, align 8
  ret void

32:                                               ; preds = %22, %50
  %33 = phi %"class.blink::LayoutTableCol"* [ %23, %22 ], [ %52, %50 ]
  %34 = ptrtoint %"class.blink::LayoutTableCol"* %33 to i64
  %35 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %33, i64 0, i32 0, i32 1, i32 0
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = icmp eq %"class.blink::LayoutObject"* %36, null
  br i1 %37, label %38, label %50

38:                                               ; preds = %32
  %39 = load i32, i32* %25, align 4
  %40 = load i32, i32* %26, align 8
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %49, label %42, !prof !20

42:                                               ; preds = %38
  %43 = load %"class.blink::LayoutTableCol"**, %"class.blink::LayoutTableCol"*** %27, align 8
  %44 = zext i32 %39 to i64
  %45 = getelementptr inbounds %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %43, i64 %44
  %46 = bitcast %"class.blink::LayoutTableCol"** %45 to i64*
  store i64 %34, i64* %46, align 8
  %47 = load i32, i32* %25, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %25, align 4
  br label %50

49:                                               ; preds = %38
  call void @_ZN3WTF6VectorIPN5blink14LayoutTableColELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2115"* %24, %"class.blink::LayoutTableCol"** nonnull dereferenceable(8) %2) #14
  br label %50

50:                                               ; preds = %32, %49, %42
  %51 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %2, align 8
  %52 = call %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol10NextColumnEv(%"class.blink::LayoutTableCol"* %51) #14
  store %"class.blink::LayoutTableCol"* %52, %"class.blink::LayoutTableCol"** %2, align 8
  %53 = icmp eq %"class.blink::LayoutTableCol"* %52, null
  br i1 %53, label %28, label %32
}

declare %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol10NextColumnEv(%"class.blink::LayoutTableCol"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* noalias nocapture sret, %"class.blink::LayoutTable"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %1, i64 0, i32 10
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, 1024
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZNK5blink11LayoutTable17UpdateColumnCacheEv(%"class.blink::LayoutTable"* %1)
  br label %9

9:                                                ; preds = %3, %8
  %10 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %67, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %1, i64 0, i32 5
  br label %18

15:                                               ; preds = %18
  %16 = load i32, i32* %10, align 4
  %17 = icmp ult i32 %27, %16
  br i1 %17, label %18, label %67

18:                                               ; preds = %13, %15
  %19 = phi i32 [ 0, %13 ], [ %25, %15 ]
  %20 = phi i32 [ 0, %13 ], [ %27, %15 ]
  %21 = tail call dereferenceable(8) %"class.blink::LayoutTableCol"** @_ZN3WTF6VectorIPN5blink14LayoutTableColELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2115"* %14, i32 %20) #14
  %22 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = add i32 %24, %19
  %26 = icmp ugt i32 %25, %2
  %27 = add nuw i32 %20, 1
  br i1 %26, label %28, label %15

28:                                               ; preds = %18
  %29 = add i32 %25, -1
  %30 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %0, i64 0, i32 2
  %32 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %0, i64 0, i32 3
  %33 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %0 to i8*
  %34 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 18, i1 false) #14
  %35 = icmp eq i32 %19, %2
  %36 = icmp eq i32 %29, %2
  %37 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %38 = bitcast %"class.blink::ComputedStyle"** %37 to %"class.blink::ComputedStyleBase"**
  %39 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %39, i64 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = and i160 %42, 133143986176
  %44 = icmp eq i160 %43, 42949672960
  br i1 %44, label %45, label %48

45:                                               ; preds = %28
  %46 = zext i1 %36 to i8
  %47 = zext i1 %35 to i8
  store %"class.blink::LayoutTableCol"* %22, %"class.blink::LayoutTableCol"** %30, align 8
  store i8 %47, i8* %31, align 8
  store i8 %46, i8* %32, align 1
  br label %69

48:                                               ; preds = %28
  %49 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %0, i64 0, i32 0
  store %"class.blink::LayoutTableCol"* %22, %"class.blink::LayoutTableCol"** %49, align 8
  %50 = tail call %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol20EnclosingColumnGroupEv(%"class.blink::LayoutTableCol"* %22) #14
  store %"class.blink::LayoutTableCol"* %50, %"class.blink::LayoutTableCol"** %30, align 8
  %51 = icmp eq %"class.blink::LayoutTableCol"* %50, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %48
  br i1 %35, label %53, label %58

53:                                               ; preds = %52
  %54 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = icmp eq %"class.blink::LayoutObject"* %55, null
  %57 = zext i1 %56 to i8
  br label %58

58:                                               ; preds = %53, %52
  %59 = phi i8 [ 0, %52 ], [ %57, %53 ]
  store i8 %59, i8* %31, align 8
  br i1 %36, label %60, label %65

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %62 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %61, align 8
  %63 = icmp eq %"class.blink::LayoutObject"* %62, null
  %64 = zext i1 %63 to i8
  br label %65

65:                                               ; preds = %60, %58
  %66 = phi i8 [ 0, %58 ], [ %64, %60 ]
  store i8 %66, i8* %32, align 1
  br label %69

67:                                               ; preds = %15, %9
  %68 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false)
  br label %69

69:                                               ; preds = %45, %65, %48, %67
  ret void
}

declare %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol20EnclosingColumnGroupEv(%"class.blink::LayoutTableCol"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %6 = bitcast %"class.blink::LayoutTableSection"** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false)
  %7 = load i16, i16* %5, align 8
  %8 = and i16 %7, -65
  store i16 %8, i16* %5, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutObject"* %10, null
  br i1 %11, label %91, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::LayoutTableSection"** %4 to %"class.blink::LayoutObject"**
  %14 = bitcast %"class.blink::LayoutTableSection"** %3 to %"class.blink::LayoutObject"**
  %15 = bitcast %"class.blink::LayoutTableSection"** %2 to %"class.blink::LayoutObject"**
  br label %19

16:                                               ; preds = %89
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %91, label %316

19:                                               ; preds = %12, %89
  %20 = phi %"class.blink::LayoutObject"* [ %10, %12 ], [ %23, %89 ]
  %21 = bitcast %"class.blink::LayoutObject"* %20 to i1 (%"class.blink::LayoutObject"*, i32)***
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 9
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 5, i32 0
  %25 = bitcast %"class.blink::ComputedStyle"** %24 to %"class.blink::ComputedStyleBase"**
  %26 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %26, i64 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  %29 = load i160, i160* %28, align 8
  %30 = lshr i160 %29, 32
  %31 = trunc i160 %30 to i32
  %32 = and i32 %31, 31
  switch i32 %32, label %89 [
    i32 11, label %33
    i32 10, label %33
    i32 7, label %36
    i32 8, label %55
    i32 6, label %74
  ]

33:                                               ; preds = %19, %19
  %34 = load i16, i16* %5, align 8
  %35 = or i16 %34, 64
  store i16 %35, i16* %5, align 8
  br label %89

36:                                               ; preds = %19
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %21, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* nonnull %20, i32 50) #14
  br i1 %40, label %41, label %89

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::LayoutObject"* %20 to %"class.blink::LayoutTableSection"*
  %43 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %2, align 8
  %44 = icmp eq %"class.blink::LayoutTableSection"* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %4, align 8
  %47 = icmp eq %"class.blink::LayoutTableSection"* %46, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %45, %41
  %49 = phi %"class.blink::LayoutObject"** [ %15, %41 ], [ %13, %45 ]
  store %"class.blink::LayoutObject"* %20, %"class.blink::LayoutObject"** %49, align 8
  br label %50

50:                                               ; preds = %48, %45
  %51 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %42, i64 0, i32 10
  %52 = load i8, i8* %51, align 4, !range !21
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %89, label %54

54:                                               ; preds = %50
  tail call void @_ZN5blink18LayoutTableSection11RecalcCellsEv(%"class.blink::LayoutTableSection"* nonnull %42) #14
  br label %89

55:                                               ; preds = %19
  %56 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %21, align 8
  %57 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, i64 92
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.blink::LayoutObject"* nonnull %20, i32 50) #14
  br i1 %59, label %60, label %89

60:                                               ; preds = %55
  %61 = bitcast %"class.blink::LayoutObject"* %20 to %"class.blink::LayoutTableSection"*
  %62 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %3, align 8
  %63 = icmp eq %"class.blink::LayoutTableSection"* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %4, align 8
  %66 = icmp eq %"class.blink::LayoutTableSection"* %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %64, %60
  %68 = phi %"class.blink::LayoutObject"** [ %14, %60 ], [ %13, %64 ]
  store %"class.blink::LayoutObject"* %20, %"class.blink::LayoutObject"** %68, align 8
  br label %69

69:                                               ; preds = %67, %64
  %70 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %61, i64 0, i32 10
  %71 = load i8, i8* %70, align 4, !range !21
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %89, label %73

73:                                               ; preds = %69
  tail call void @_ZN5blink18LayoutTableSection11RecalcCellsEv(%"class.blink::LayoutTableSection"* nonnull %61) #14
  br label %89

74:                                               ; preds = %19
  %75 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %21, align 8
  %76 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %75, i64 92
  %77 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %76, align 8
  %78 = tail call zeroext i1 %77(%"class.blink::LayoutObject"* nonnull %20, i32 50) #14
  br i1 %78, label %79, label %89

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::LayoutObject"* %20 to %"class.blink::LayoutTableSection"*
  %81 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %4, align 8
  %82 = icmp eq %"class.blink::LayoutTableSection"* %81, null
  br i1 %82, label %83, label %84

83:                                               ; preds = %79
  store %"class.blink::LayoutObject"* %20, %"class.blink::LayoutObject"** %13, align 8
  br label %84

84:                                               ; preds = %79, %83
  %85 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %80, i64 0, i32 10
  %86 = load i8, i8* %85, align 4, !range !21
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN5blink18LayoutTableSection11RecalcCellsEv(%"class.blink::LayoutTableSection"* nonnull %80) #14
  br label %89

89:                                               ; preds = %88, %84, %73, %69, %54, %50, %33, %36, %55, %74, %19
  %90 = icmp eq %"class.blink::LayoutObject"* %23, null
  br i1 %90, label %16, label %19

91:                                               ; preds = %334, %1, %16
  %92 = phi i32 [ 0, %16 ], [ 0, %1 ], [ %335, %334 ]
  %93 = load i16, i16* %5, align 8
  %94 = and i16 %93, -513
  store i16 %94, i16* %5, align 8
  %95 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2
  %96 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = icmp ult i32 %97, %92
  br i1 %98, label %99, label %236

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = icmp ult i32 %101, %92
  br i1 %102, label %103, label %142

103:                                              ; preds = %99
  %104 = lshr i32 %101, 2
  %105 = add nuw i32 %101, 1
  %106 = add i32 %105, %104
  %107 = icmp ugt i32 %106, 4
  %108 = select i1 %107, i32 %106, i32 4
  %109 = icmp ugt i32 %108, %92
  %110 = select i1 %109, i32 %108, i32 %92
  %111 = icmp ult i32 %101, %110
  br i1 %111, label %112, label %142, !prof !2

112:                                              ; preds = %103
  %113 = getelementptr inbounds %"class.WTF::Vector.2101", %"class.WTF::Vector.2101"* %95, i64 0, i32 0, i32 0, i32 0
  %114 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %113, align 8
  %115 = icmp eq %"struct.blink::LayoutTable::ColumnStruct"* %114, null
  %116 = zext i32 %110 to i64
  %117 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11LayoutTable12ColumnStructEEEmm(i64 %116) #14
  %118 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %117, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11LayoutTable12ColumnStructEEEPKcv, i64 0, i64 0)) #14
  br i1 %115, label %119, label %124

119:                                              ; preds = %112
  %120 = ptrtoint i8* %118 to i64
  %121 = bitcast %"class.WTF::Vector.2101"* %95 to i64*
  store atomic i64 %120, i64* %121 monotonic, align 8
  %122 = lshr i64 %117, 2
  %123 = trunc i64 %122 to i32
  store i32 %123, i32* %100, align 8
  br label %142

124:                                              ; preds = %112
  %125 = lshr i64 %117, 2
  %126 = ptrtoint i8* %118 to i64
  %127 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %113, align 8
  %128 = icmp ne i8* %118, null
  %129 = icmp ne %"struct.blink::LayoutTable::ColumnStruct"* %127, null
  %130 = and i1 %128, %129
  %131 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %127 to i8*
  br i1 %130, label %132, label %138, !prof !2

132:                                              ; preds = %124
  %133 = load i32, i32* %96, align 4
  %134 = zext i32 %133 to i64
  %135 = shl nuw nsw i64 %134, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %118, i8* nonnull align 4 %131, i64 %135, i1 false) #14
  %136 = bitcast %"class.WTF::Vector.2101"* %95 to i8**
  %137 = load i8*, i8** %136, align 8
  br label %138

138:                                              ; preds = %132, %124
  %139 = phi i8* [ %137, %132 ], [ %131, %124 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %139) #14
  %140 = bitcast %"class.WTF::Vector.2101"* %95 to i64*
  store atomic i64 %126, i64* %140 monotonic, align 8
  %141 = trunc i64 %125 to i32
  store i32 %141, i32* %100, align 8
  br label %142

142:                                              ; preds = %138, %119, %103, %99
  %143 = getelementptr inbounds %"class.WTF::Vector.2101", %"class.WTF::Vector.2101"* %95, i64 0, i32 0, i32 0, i32 0
  %144 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %143, align 8
  %145 = load i32, i32* %96, align 4
  %146 = zext i32 %92 to i64
  %147 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %144, i64 %146
  %148 = icmp eq i32 %145, %92
  br i1 %148, label %236, label %149

149:                                              ; preds = %142
  %150 = zext i32 %145 to i64
  %151 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %144, i64 %150
  %152 = shl nuw nsw i64 %146, 2
  %153 = add nsw i64 %152, -4
  %154 = shl nuw nsw i64 %150, 2
  %155 = sub nsw i64 %153, %154
  %156 = lshr exact i64 %155, 2
  %157 = add nuw nsw i64 %156, 1
  %158 = icmp ult i64 %157, 8
  br i1 %158, label %229, label %159

159:                                              ; preds = %149
  %160 = and i64 %157, 9223372036854775800
  %161 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %151, i64 %160
  %162 = add nsw i64 %160, -8
  %163 = lshr exact i64 %162, 3
  %164 = add nuw nsw i64 %163, 1
  %165 = and i64 %164, 7
  %166 = icmp ult i64 %162, 56
  br i1 %166, label %214, label %167

167:                                              ; preds = %159
  %168 = sub nsw i64 %164, %165
  br label %169

169:                                              ; preds = %169, %167
  %170 = phi i64 [ 0, %167 ], [ %211, %169 ]
  %171 = phi i64 [ %168, %167 ], [ %212, %169 ]
  %172 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %151, i64 %170
  %173 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %172 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %173, align 4
  %174 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %172, i64 4
  %175 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 4
  %176 = or i64 %170, 8
  %177 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %151, i64 %176
  %178 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %177 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %178, align 4
  %179 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %177, i64 4
  %180 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %179 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %180, align 4
  %181 = or i64 %170, 16
  %182 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %151, i64 %181
  %183 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %182 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %183, align 4
  %184 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %182, i64 4
  %185 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %184 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %185, align 4
  %186 = or i64 %170, 24
  %187 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %151, i64 %186
  %188 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %187 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %188, align 4
  %189 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %187, i64 4
  %190 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %189 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %190, align 4
  %191 = or i64 %170, 32
  %192 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %151, i64 %191
  %193 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %192 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %193, align 4
  %194 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %192, i64 4
  %195 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %194 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %195, align 4
  %196 = or i64 %170, 40
  %197 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %151, i64 %196
  %198 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %197 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %198, align 4
  %199 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %197, i64 4
  %200 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %199 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %200, align 4
  %201 = or i64 %170, 48
  %202 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %151, i64 %201
  %203 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %202 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %203, align 4
  %204 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %202, i64 4
  %205 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %204 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %205, align 4
  %206 = or i64 %170, 56
  %207 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %151, i64 %206
  %208 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %207 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %208, align 4
  %209 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %207, i64 4
  %210 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %209 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %210, align 4
  %211 = add i64 %170, 64
  %212 = add i64 %171, -8
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %169, !llvm.loop !105

214:                                              ; preds = %169, %159
  %215 = phi i64 [ 0, %159 ], [ %211, %169 ]
  %216 = icmp eq i64 %165, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %214, %217
  %218 = phi i64 [ %224, %217 ], [ %215, %214 ]
  %219 = phi i64 [ %225, %217 ], [ %165, %214 ]
  %220 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %151, i64 %218
  %221 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %220 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %221, align 4
  %222 = getelementptr %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %220, i64 4
  %223 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %222 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %223, align 4
  %224 = add i64 %218, 8
  %225 = add i64 %219, -1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %217, !llvm.loop !106

227:                                              ; preds = %217, %214
  %228 = icmp eq i64 %157, %160
  br i1 %228, label %236, label %229

229:                                              ; preds = %227, %149
  %230 = phi %"struct.blink::LayoutTable::ColumnStruct"* [ %151, %149 ], [ %161, %227 ]
  br label %231

231:                                              ; preds = %229, %231
  %232 = phi %"struct.blink::LayoutTable::ColumnStruct"* [ %234, %231 ], [ %230, %229 ]
  %233 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %232, i64 0, i32 0
  store i32 1, i32* %233, align 4
  %234 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %232, i64 1
  %235 = icmp eq %"struct.blink::LayoutTable::ColumnStruct"* %234, %147
  br i1 %235, label %236, label %231, !llvm.loop !107

236:                                              ; preds = %231, %227, %91, %142
  store i32 %92, i32* %96, align 4
  %237 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3
  %238 = add i32 %92, 1
  %239 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %240 = load i32, i32* %239, align 4
  %241 = icmp ult i32 %240, %238
  br i1 %241, label %242, label %298

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %244 = load i32, i32* %243, align 8
  %245 = icmp ult i32 %244, %238
  br i1 %245, label %246, label %285

246:                                              ; preds = %242
  %247 = lshr i32 %244, 2
  %248 = add nuw i32 %244, 1
  %249 = add i32 %248, %247
  %250 = icmp ugt i32 %249, 4
  %251 = select i1 %250, i32 %249, i32 4
  %252 = icmp ugt i32 %251, %238
  %253 = select i1 %252, i32 %251, i32 %238
  %254 = icmp ult i32 %244, %253
  br i1 %254, label %255, label %285, !prof !2

255:                                              ; preds = %246
  %256 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %237, i64 0, i32 0, i32 0, i32 0
  %257 = load i32*, i32** %256, align 8
  %258 = icmp eq i32* %257, null
  %259 = zext i32 %253 to i64
  %260 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %259) #14
  %261 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %260, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #14
  br i1 %258, label %262, label %267

262:                                              ; preds = %255
  %263 = ptrtoint i8* %261 to i64
  %264 = bitcast %"class.WTF::Vector.2106"* %237 to i64*
  store atomic i64 %263, i64* %264 monotonic, align 8
  %265 = lshr i64 %260, 2
  %266 = trunc i64 %265 to i32
  store i32 %266, i32* %243, align 8
  br label %285

267:                                              ; preds = %255
  %268 = lshr i64 %260, 2
  %269 = ptrtoint i8* %261 to i64
  %270 = load i32*, i32** %256, align 8
  %271 = icmp ne i8* %261, null
  %272 = icmp ne i32* %270, null
  %273 = and i1 %271, %272
  %274 = bitcast i32* %270 to i8*
  br i1 %273, label %275, label %281, !prof !2

275:                                              ; preds = %267
  %276 = load i32, i32* %239, align 4
  %277 = zext i32 %276 to i64
  %278 = shl nuw nsw i64 %277, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %261, i8* nonnull align 4 %274, i64 %278, i1 false) #14
  %279 = bitcast %"class.WTF::Vector.2106"* %237 to i8**
  %280 = load i8*, i8** %279, align 8
  br label %281

281:                                              ; preds = %275, %267
  %282 = phi i8* [ %280, %275 ], [ %274, %267 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %282) #14
  %283 = bitcast %"class.WTF::Vector.2106"* %237 to i64*
  store atomic i64 %269, i64* %283 monotonic, align 8
  %284 = trunc i64 %268 to i32
  store i32 %284, i32* %243, align 8
  br label %285

285:                                              ; preds = %281, %262, %246, %242
  %286 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %237, i64 0, i32 0, i32 0, i32 0
  %287 = load i32*, i32** %286, align 8
  %288 = load i32, i32* %239, align 4
  %289 = zext i32 %288 to i64
  %290 = getelementptr inbounds i32, i32* %287, i64 %289
  %291 = zext i32 %238 to i64
  %292 = getelementptr inbounds i32, i32* %287, i64 %291
  %293 = bitcast i32* %290 to i8*
  %294 = ptrtoint i32* %292 to i64
  %295 = ptrtoint i32* %290 to i64
  %296 = sub i64 %294, %295
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %293, i8 0, i64 %296, i1 false) #14
  %297 = load i32, i32* %96, align 4
  br label %298

298:                                              ; preds = %236, %285
  %299 = phi i32 [ %92, %236 ], [ %297, %285 ]
  store i32 %238, i32* %239, align 4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %311, label %301

301:                                              ; preds = %298, %307
  %302 = phi i32 [ %308, %307 ], [ 0, %298 ]
  %303 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %95, i32 %302) #14
  %304 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %303, i64 0, i32 0
  %305 = load i32, i32* %304, align 4
  %306 = icmp ugt i32 %305, 1
  br i1 %306, label %311, label %307

307:                                              ; preds = %301
  %308 = add nuw i32 %302, 1
  %309 = load i32, i32* %96, align 4
  %310 = icmp ult i32 %308, %309
  br i1 %310, label %301, label %311

311:                                              ; preds = %301, %307, %298
  %312 = phi i32 [ 0, %298 ], [ %302, %301 ], [ %309, %307 ]
  %313 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 11
  store i32 %312, i32* %313, align 4
  %314 = load i16, i16* %5, align 8
  %315 = and i16 %314, -129
  store i16 %315, i16* %5, align 8
  ret void

316:                                              ; preds = %16, %334
  %317 = phi %"class.blink::LayoutObject"* [ %337, %334 ], [ %17, %16 ]
  %318 = phi i32 [ %335, %334 ], [ 0, %16 ]
  %319 = bitcast %"class.blink::LayoutObject"* %317 to i1 (%"class.blink::LayoutObject"*, i32)***
  %320 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %319, align 8
  %321 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %320, i64 92
  %322 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %321, align 8
  %323 = tail call zeroext i1 %322(%"class.blink::LayoutObject"* nonnull %317, i32 50) #14
  br i1 %323, label %324, label %334

324:                                              ; preds = %316
  %325 = bitcast %"class.blink::LayoutObject"* %317 to %"class.blink::LayoutTableSection"*
  %326 = load i16, i16* %5, align 8
  %327 = and i16 %326, 512
  %328 = icmp eq i16 %327, 0
  br i1 %328, label %330, label %329

329:                                              ; preds = %324
  tail call void @_ZN5blink18LayoutTableSection39MarkAllCellsWidthsDirtyAndOrNeedsLayoutENS_11LayoutTable18WhatToMarkAllCellsE(%"class.blink::LayoutTableSection"* nonnull %325, i32 1) #14
  br label %330

330:                                              ; preds = %324, %329
  %331 = tail call i32 @_ZNK5blink18LayoutTableSection19NumEffectiveColumnsEv(%"class.blink::LayoutTableSection"* nonnull %325) #14
  %332 = icmp ugt i32 %331, %318
  %333 = select i1 %332, i32 %331, i32 %318
  br label %334

334:                                              ; preds = %316, %330
  %335 = phi i32 [ %333, %330 ], [ %318, %316 ]
  %336 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %317, i64 0, i32 9
  %337 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %336, align 8
  %338 = icmp eq %"class.blink::LayoutObject"* %337, null
  br i1 %338, label %91, label %316
}

declare i32 @_ZNK5blink18LayoutTableSection19NumEffectiveColumnsEv(%"class.blink::LayoutTableSection"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable10BorderLeftEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = bitcast %"class.blink::ComputedStyle"** %6 to %"class.blink::ComputedStyleBase"**
  %8 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %8, i64 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 81129638414606681695789005144064
  %13 = icmp eq i160 %12, 0
  br i1 %13, label %14, label %45

14:                                               ; preds = %1
  tail call void @_ZNK5blink11LayoutTable27UpdateCollapsedOuterBordersEv(%"class.blink::LayoutTable"* %0)
  %15 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15)
  %16 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  %18 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18)
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8, !noalias !109
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8, !noalias !109
  %23 = lshr i160 %22, 102
  %24 = trunc i160 %23 to i8
  %25 = and i8 %24, 3
  %26 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 14
  %27 = load i32, i32* %26, align 4, !noalias !109
  %28 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 15
  %29 = load i32, i32* %28, align 8, !noalias !109
  %30 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 16
  %31 = load i32, i32* %30, align 4, !noalias !109
  %32 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 17
  %33 = load i32, i32* %32, align 8, !noalias !109
  store i32 %27, i32* %2, align 4, !alias.scope !109
  store i32 %29, i32* %3, align 4, !alias.scope !109
  store i32 %31, i32* %4, align 4, !alias.scope !109
  store i32 %33, i32* %5, align 4, !alias.scope !109
  %34 = icmp eq i8 %25, 0
  %35 = and i160 %22, 41538374868278621028243970633760768
  %36 = icmp eq i160 %35, 0
  %37 = select i1 %36, i32* %2, i32* %3
  %38 = icmp eq i8 %25, 1
  %39 = select i1 %38, i32* %5, i32* %4
  %40 = select i1 %34, i32* %37, i32* %39
  %41 = load i32, i32* %40, align 4
  %42 = icmp ugt i32 %41, 33554430
  %43 = shl i32 %41, 6
  %44 = select i1 %42, i32 2147483647, i32 %43
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18)
  br label %57

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %8, i64 0, i32 7, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %47, i64 0, i32 27
  %49 = load i16, i16* %48, align 8
  %50 = and i16 %49, 224
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %47, i64 0, i32 24, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = sdiv i32 %54, 64
  %56 = shl nsw i32 %55, 6
  br label %57

57:                                               ; preds = %45, %52, %14
  %58 = phi i32 [ %44, %14 ], [ %56, %52 ], [ 0, %45 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable11BorderRightEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = bitcast %"class.blink::ComputedStyle"** %6 to %"class.blink::ComputedStyleBase"**
  %8 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %8, i64 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 81129638414606681695789005144064
  %13 = icmp eq i160 %12, 0
  br i1 %13, label %14, label %45

14:                                               ; preds = %1
  tail call void @_ZNK5blink11LayoutTable27UpdateCollapsedOuterBordersEv(%"class.blink::LayoutTable"* %0)
  %15 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15)
  %16 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  %18 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18)
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8, !noalias !112
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8, !noalias !112
  %23 = lshr i160 %22, 102
  %24 = trunc i160 %23 to i8
  %25 = and i8 %24, 3
  %26 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 14
  %27 = load i32, i32* %26, align 4, !noalias !112
  %28 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 15
  %29 = load i32, i32* %28, align 8, !noalias !112
  %30 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 16
  %31 = load i32, i32* %30, align 4, !noalias !112
  %32 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 17
  %33 = load i32, i32* %32, align 8, !noalias !112
  store i32 %27, i32* %2, align 4, !alias.scope !112
  store i32 %29, i32* %3, align 4, !alias.scope !112
  store i32 %31, i32* %4, align 4, !alias.scope !112
  store i32 %33, i32* %5, align 4, !alias.scope !112
  %34 = icmp eq i8 %25, 0
  %35 = and i160 %22, 41538374868278621028243970633760768
  %36 = icmp eq i160 %35, 0
  %37 = select i1 %36, i32* %3, i32* %2
  %38 = icmp eq i8 %25, 1
  %39 = select i1 %38, i32* %4, i32* %5
  %40 = select i1 %34, i32* %37, i32* %39
  %41 = load i32, i32* %40, align 4
  %42 = icmp ugt i32 %41, 33554430
  %43 = shl i32 %41, 6
  %44 = select i1 %42, i32 2147483647, i32 %43
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18)
  br label %57

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %8, i64 0, i32 7, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %47, i64 0, i32 27
  %49 = load i16, i16* %48, align 8
  %50 = and i16 %49, 3584
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %47, i64 0, i32 25, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = sdiv i32 %54, 64
  %56 = shl nsw i32 %55, 6
  br label %57

57:                                               ; preds = %45, %52, %14
  %58 = phi i32 [ %44, %14 ], [ %56, %52 ], [ 0, %45 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable9BorderTopEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 81129638414606681695789005144064
  %9 = icmp eq i160 %8, 0
  br i1 %9, label %10, label %30

10:                                               ; preds = %1
  tail call void @_ZNK5blink11LayoutTable27UpdateCollapsedOuterBordersEv(%"class.blink::LayoutTable"* %0)
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !115
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !115
  %15 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 14
  %16 = load i32, i32* %15, align 4, !noalias !115
  %17 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 15
  %18 = load i32, i32* %17, align 8, !noalias !115
  %19 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 16
  %20 = load i32, i32* %19, align 4, !noalias !115
  %21 = and i160 %14, 15211807202738752817960438464512
  %22 = icmp eq i160 %21, 0
  %23 = and i160 %14, 41538374868278621028243970633760768
  %24 = icmp eq i160 %23, 0
  %25 = select i1 %24, i32 %16, i32 %18
  %26 = select i1 %22, i32 %20, i32 %25
  %27 = icmp ugt i32 %26, 33554430
  %28 = shl i32 %26, 6
  %29 = select i1 %27, i32 2147483647, i32 %28
  br label %41

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 27
  %34 = load i16, i16* %33, align 8
  %35 = icmp ult i16 %34, 8192
  br i1 %35, label %41, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 26, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = sdiv i32 %38, 64
  %40 = shl nsw i32 %39, 6
  br label %41

41:                                               ; preds = %30, %36, %10
  %42 = phi i32 [ %29, %10 ], [ %40, %36 ], [ 0, %30 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable12BorderBottomEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 81129638414606681695789005144064
  %9 = icmp eq i160 %8, 0
  br i1 %9, label %10, label %30

10:                                               ; preds = %1
  tail call void @_ZNK5blink11LayoutTable27UpdateCollapsedOuterBordersEv(%"class.blink::LayoutTable"* %0)
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !118
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !118
  %15 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 14
  %16 = load i32, i32* %15, align 4, !noalias !118
  %17 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 15
  %18 = load i32, i32* %17, align 8, !noalias !118
  %19 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 17
  %20 = load i32, i32* %19, align 8, !noalias !118
  %21 = and i160 %14, 15211807202738752817960438464512
  %22 = icmp eq i160 %21, 0
  %23 = and i160 %14, 41538374868278621028243970633760768
  %24 = icmp eq i160 %23, 0
  %25 = select i1 %24, i32 %18, i32 %16
  %26 = select i1 %22, i32 %20, i32 %25
  %27 = icmp ugt i32 %26, 33554430
  %28 = shl i32 %26, 6
  %29 = select i1 %27, i32 2147483647, i32 %28
  br label %42

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 27
  %34 = load i16, i16* %33, align 8
  %35 = and i16 %34, 14
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 23, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = sdiv i32 %39, 64
  %41 = shl nsw i32 %40, 6
  br label %42

42:                                               ; preds = %30, %37, %10
  %43 = phi i32 [ %29, %10 ], [ %41, %37 ], [ 0, %30 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable9CellAboveERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableCell"* nocapture readonly dereferenceable(312)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %4 = load i16, i16* %3, align 8
  %5 = trunc i16 %4 to i8
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %8

8:                                                ; preds = %2, %7
  %9 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %10 = bitcast %"class.blink::LayoutObject"** %9 to %"class.blink::LayoutTableRow"**
  %11 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 2147483647
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %17 = bitcast %"class.blink::LayoutObject"** %16 to %"class.blink::LayoutTableSection"**
  %18 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %17, align 8
  br i1 %15, label %19, label %77

19:                                               ; preds = %8
  %20 = load i16, i16* %3, align 8
  %21 = trunc i16 %20 to i8
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %24

24:                                               ; preds = %23, %19
  %25 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %26 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutTableSection"* %26, %18
  br i1 %27, label %128, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %30 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %29, align 8
  %31 = icmp eq %"class.blink::LayoutTableSection"* %30, %18
  %32 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 1
  %33 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %34 = select i1 %31, %"class.blink::LayoutObject"** %32, %"class.blink::LayoutObject"** %33
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutObject"* %35, null
  br i1 %36, label %66, label %37

37:                                               ; preds = %28
  %38 = bitcast %"class.blink::LayoutTableSection"** %25 to %"class.blink::LayoutObject"**
  %39 = bitcast %"class.blink::LayoutTableSection"** %29 to %"class.blink::LayoutObject"**
  br label %40

40:                                               ; preds = %60, %37
  %41 = phi %"class.blink::LayoutObject"* [ %35, %37 ], [ %62, %60 ]
  %42 = bitcast %"class.blink::LayoutObject"* %41 to i1 (%"class.blink::LayoutObject"*, i32)***
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, i64 92
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* nonnull %41, i32 50) #14
  br i1 %46, label %47, label %60

47:                                               ; preds = %40
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %49 = icmp eq %"class.blink::LayoutObject"* %41, %48
  br i1 %49, label %60, label %50

50:                                               ; preds = %47
  %51 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %52 = icmp eq %"class.blink::LayoutObject"* %41, %51
  br i1 %52, label %60, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.blink::LayoutObject"* %41 to %"class.blink::LayoutTableSection"*
  %55 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %54, i64 0, i32 3, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.blink::LayoutObject"* %41 to %"class.blink::LayoutTableSection"*
  br label %73

60:                                               ; preds = %53, %50, %47, %40
  %61 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 0, i32 8
  %62 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %61, align 8
  %63 = icmp eq %"class.blink::LayoutObject"* %62, null
  br i1 %63, label %64, label %40

64:                                               ; preds = %60
  %65 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %25, align 8
  br label %66

66:                                               ; preds = %64, %28
  %67 = phi %"class.blink::LayoutTableSection"* [ %65, %64 ], [ %26, %28 ]
  %68 = icmp eq %"class.blink::LayoutTableSection"* %67, null
  br i1 %68, label %128, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %67, i64 0, i32 3, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %128, label %73

73:                                               ; preds = %69, %58
  %74 = phi %"class.blink::LayoutTableSection"* [ %59, %58 ], [ %67, %69 ]
  %75 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %74, i64 0, i32 3, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  br label %79

77:                                               ; preds = %8
  %78 = icmp eq %"class.blink::LayoutTableSection"* %18, null
  br i1 %78, label %128, label %79

79:                                               ; preds = %73, %77
  %80 = phi i32 [ %76, %73 ], [ %14, %77 ]
  %81 = phi %"class.blink::LayoutTableSection"* [ %74, %73 ], [ %18, %77 ]
  %82 = add i32 %80, -1
  %83 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 33554431
  %86 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 11
  %87 = load i32, i32* %86, align 4
  %88 = icmp ugt i32 %87, %85
  br i1 %88, label %110, label %89

89:                                               ; preds = %79
  %90 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2
  %93 = icmp ult i32 %87, %91
  br i1 %93, label %94, label %110

94:                                               ; preds = %89, %103
  %95 = phi i32 [ %107, %103 ], [ %87, %89 ]
  %96 = phi i32 [ %108, %103 ], [ %87, %89 ]
  %97 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %92, i32 %96) #14
  %98 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %97, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = add i32 %95, -1
  %101 = add i32 %100, %99
  %102 = icmp ult i32 %101, %85
  br i1 %102, label %103, label %110

103:                                              ; preds = %94
  %104 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %92, i32 %96) #14
  %105 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %104, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, %95
  %108 = add i32 %96, 1
  %109 = icmp eq i32 %108, %91
  br i1 %109, label %110, label %94

110:                                              ; preds = %94, %103, %79, %89
  %111 = phi i32 [ %85, %79 ], [ %87, %89 ], [ %96, %94 ], [ %91, %103 ]
  %112 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %81, i64 0, i32 3
  %113 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2120"* %112, i32 %82) #14
  %114 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %113, i64 0, i32 0, i32 0, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = icmp ugt i32 %115, %111
  br i1 %116, label %117, label %128

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %113, i64 0, i32 0
  %119 = tail call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2123"* %118, i32 %111) #14
  %120 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %119, i64 0, i32 0, i32 0, i32 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %128, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %119, i64 0, i32 0
  %125 = add i32 %121, -1
  %126 = tail call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2126"* %124, i32 %125) #14
  %127 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %126, align 8
  br label %128

128:                                              ; preds = %69, %66, %24, %123, %117, %110, %77
  %129 = phi %"class.blink::LayoutTableCell"* [ null, %77 ], [ null, %110 ], [ %127, %123 ], [ null, %117 ], [ null, %24 ], [ null, %66 ], [ null, %69 ]
  ret %"class.blink::LayoutTableCell"* %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutTable31AbsoluteColumnToEffectiveColumnEj(%"class.blink::LayoutTable"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 11
  %4 = load i32, i32* %3, align 4
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2
  %10 = icmp ult i32 %4, %8
  br i1 %10, label %11, label %27

11:                                               ; preds = %6, %20
  %12 = phi i32 [ %24, %20 ], [ %4, %6 ]
  %13 = phi i32 [ %25, %20 ], [ %4, %6 ]
  %14 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %9, i32 %13) #14
  %15 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %12, -1
  %18 = add i32 %17, %16
  %19 = icmp ult i32 %18, %1
  br i1 %19, label %20, label %27

20:                                               ; preds = %11
  %21 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %9, i32 %13) #14
  %22 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, %12
  %25 = add i32 %13, 1
  %26 = icmp eq i32 %25, %8
  br i1 %26, label %27, label %11

27:                                               ; preds = %11, %20, %6, %2
  %28 = phi i32 [ %1, %2 ], [ %4, %6 ], [ %8, %20 ], [ %13, %11 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable9CellBelowERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableCell"* dereferenceable(312)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %4 = load i16, i16* %3, align 8
  %5 = trunc i16 %4 to i8
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %8

8:                                                ; preds = %2, %7
  %9 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %10 = bitcast %"class.blink::LayoutObject"** %9 to %"class.blink::LayoutTableRow"**
  %11 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 2147483647
  %15 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 134217728
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %18, label %39, label %20

20:                                               ; preds = %8
  %21 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #14
  %22 = icmp eq i32 %21, 0
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  br i1 %22, label %24, label %35

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 7
  %26 = bitcast %"class.blink::LayoutObject"** %25 to %"class.blink::LayoutTableSection"**
  %27 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %27, i64 0, i32 3, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 3
  %31 = bitcast %"class.blink::LayoutObject"* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 2147483647
  %34 = sub i32 %29, %33
  br label %35

35:                                               ; preds = %20, %24
  %36 = phi i32 [ %34, %24 ], [ %21, %20 ]
  %37 = icmp ult i32 %36, 2147483646
  %38 = select i1 %37, i32 %36, i32 2147483646
  br label %39

39:                                               ; preds = %8, %35
  %40 = phi %"class.blink::LayoutObject"* [ %23, %35 ], [ %19, %8 ]
  %41 = phi i32 [ %38, %35 ], [ 1, %8 ]
  %42 = add nuw i32 %41, %14
  %43 = add i32 %42, -1
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 7
  %45 = bitcast %"class.blink::LayoutObject"** %44 to %"class.blink::LayoutTableSection"**
  %46 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %46, i64 0, i32 3, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = add i32 %48, -1
  %50 = icmp ult i32 %43, %49
  br i1 %50, label %108, label %51

51:                                               ; preds = %39
  %52 = load i16, i16* %3, align 8
  %53 = trunc i16 %52 to i8
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %51
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %56

56:                                               ; preds = %55, %51
  %57 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %58 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %57, align 8
  %59 = icmp eq %"class.blink::LayoutTableSection"* %58, %46
  br i1 %59, label %157, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %62 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %61, align 8
  %63 = icmp eq %"class.blink::LayoutTableSection"* %62, %46
  %64 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %66 = select i1 %63, %"class.blink::LayoutObject"** %64, %"class.blink::LayoutObject"** %65
  %67 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %66, align 8
  %68 = icmp eq %"class.blink::LayoutObject"* %67, null
  br i1 %68, label %96, label %69

69:                                               ; preds = %60
  %70 = bitcast %"class.blink::LayoutTableSection"** %61 to %"class.blink::LayoutObject"**
  %71 = bitcast %"class.blink::LayoutTableSection"** %57 to %"class.blink::LayoutObject"**
  br label %72

72:                                               ; preds = %90, %69
  %73 = phi %"class.blink::LayoutObject"* [ %67, %69 ], [ %92, %90 ]
  %74 = bitcast %"class.blink::LayoutObject"* %73 to i1 (%"class.blink::LayoutObject"*, i32)***
  %75 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %75, i64 92
  %77 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %76, align 8
  %78 = tail call zeroext i1 %77(%"class.blink::LayoutObject"* nonnull %73, i32 50) #14
  br i1 %78, label %79, label %90

79:                                               ; preds = %72
  %80 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %70, align 8
  %81 = icmp eq %"class.blink::LayoutObject"* %73, %80
  br i1 %81, label %90, label %82

82:                                               ; preds = %79
  %83 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %84 = icmp eq %"class.blink::LayoutObject"* %73, %83
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.blink::LayoutObject"* %73 to %"class.blink::LayoutTableSection"*
  %87 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %86, i64 0, i32 3, i32 0, i32 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %105

90:                                               ; preds = %85, %82, %79, %72
  %91 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 9
  %92 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %91, align 8
  %93 = icmp eq %"class.blink::LayoutObject"* %92, null
  br i1 %93, label %94, label %72

94:                                               ; preds = %90
  %95 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %57, align 8
  br label %96

96:                                               ; preds = %94, %60
  %97 = phi %"class.blink::LayoutTableSection"* [ %95, %94 ], [ %58, %60 ]
  %98 = icmp eq %"class.blink::LayoutTableSection"* %97, null
  br i1 %98, label %105, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %97, i64 0, i32 3, i32 0, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  %104 = select i1 %103, %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"* %100
  br label %105

105:                                              ; preds = %85, %99, %96
  %106 = phi %"class.blink::LayoutObject"* [ null, %96 ], [ %104, %99 ], [ %73, %85 ]
  %107 = bitcast %"class.blink::LayoutObject"* %106 to %"class.blink::LayoutTableSection"*
  br label %108

108:                                              ; preds = %105, %39
  %109 = phi %"class.blink::LayoutTableSection"* [ %46, %39 ], [ %107, %105 ]
  %110 = phi i32 [ %42, %39 ], [ 0, %105 ]
  %111 = icmp eq %"class.blink::LayoutTableSection"* %109, null
  br i1 %111, label %157, label %112

112:                                              ; preds = %108
  %113 = load i32, i32* %15, align 8
  %114 = and i32 %113, 33554431
  %115 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 11
  %116 = load i32, i32* %115, align 4
  %117 = icmp ugt i32 %116, %114
  br i1 %117, label %139, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2
  %122 = icmp ult i32 %116, %120
  br i1 %122, label %123, label %139

123:                                              ; preds = %118, %132
  %124 = phi i32 [ %136, %132 ], [ %116, %118 ]
  %125 = phi i32 [ %137, %132 ], [ %116, %118 ]
  %126 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %121, i32 %125) #14
  %127 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %126, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = add i32 %124, -1
  %130 = add i32 %129, %128
  %131 = icmp ult i32 %130, %114
  br i1 %131, label %132, label %139

132:                                              ; preds = %123
  %133 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %121, i32 %125) #14
  %134 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %133, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = add i32 %135, %124
  %137 = add i32 %125, 1
  %138 = icmp eq i32 %137, %120
  br i1 %138, label %139, label %123

139:                                              ; preds = %123, %132, %112, %118
  %140 = phi i32 [ %114, %112 ], [ %116, %118 ], [ %125, %123 ], [ %120, %132 ]
  %141 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %109, i64 0, i32 3
  %142 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2120"* %141, i32 %110) #14
  %143 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %142, i64 0, i32 0, i32 0, i32 0, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = icmp ugt i32 %144, %140
  br i1 %145, label %146, label %157

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %142, i64 0, i32 0
  %148 = tail call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2123"* %147, i32 %140) #14
  %149 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %148, i64 0, i32 0, i32 0, i32 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %157, label %152

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %148, i64 0, i32 0
  %154 = add i32 %150, -1
  %155 = tail call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2126"* %153, i32 %154) #14
  %156 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %155, align 8
  br label %157

157:                                              ; preds = %56, %152, %146, %139, %108
  %158 = phi %"class.blink::LayoutTableCell"* [ null, %108 ], [ null, %139 ], [ %156, %152 ], [ null, %146 ], [ null, %56 ]
  ret %"class.blink::LayoutTableCell"* %158
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable13CellPrecedingERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableCell"* nocapture readonly dereferenceable(312)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %4 = load i16, i16* %3, align 8
  %5 = trunc i16 %4 to i8
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %8

8:                                                ; preds = %2, %7
  %9 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 7
  %12 = bitcast %"class.blink::LayoutObject"** %11 to %"class.blink::LayoutTableSection"**
  %13 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 33554431
  %17 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 11
  %18 = load i32, i32* %17, align 4
  %19 = icmp ugt i32 %18, %16
  br i1 %19, label %41, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2
  %24 = icmp ult i32 %18, %22
  br i1 %24, label %25, label %41

25:                                               ; preds = %20, %34
  %26 = phi i32 [ %38, %34 ], [ %18, %20 ]
  %27 = phi i32 [ %39, %34 ], [ %18, %20 ]
  %28 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %23, i32 %27) #14
  %29 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %26, -1
  %32 = add i32 %31, %30
  %33 = icmp ult i32 %32, %16
  br i1 %33, label %34, label %41

34:                                               ; preds = %25
  %35 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %23, i32 %27) #14
  %36 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = add i32 %37, %26
  %39 = add i32 %27, 1
  %40 = icmp eq i32 %39, %22
  br i1 %40, label %41, label %25

41:                                               ; preds = %25, %34, %8, %20
  %42 = phi i32 [ %16, %8 ], [ %18, %20 ], [ %27, %25 ], [ %22, %34 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %67, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::LayoutObject"** %9 to %"class.blink::LayoutTableRow"**
  %46 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %46, i64 0, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 2147483647
  %50 = add i32 %42, -1
  %51 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %13, i64 0, i32 3
  %52 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2120"* %51, i32 %49) #14
  %53 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %52, i64 0, i32 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp ugt i32 %54, %50
  br i1 %55, label %56, label %67

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %52, i64 0, i32 0
  %58 = tail call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2123"* %57, i32 %50) #14
  %59 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %58, i64 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %58, i64 0, i32 0
  %64 = add i32 %60, -1
  %65 = tail call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2126"* %63, i32 %64) #14
  %66 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %65, align 8
  br label %67

67:                                               ; preds = %62, %56, %44, %41
  %68 = phi %"class.blink::LayoutTableCell"* [ null, %41 ], [ null, %44 ], [ %66, %62 ], [ null, %56 ]
  ret %"class.blink::LayoutTableCell"* %68
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable13CellFollowingERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"*, %"class.blink::LayoutTableCell"* dereferenceable(312)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %4 = load i16, i16* %3, align 8
  %5 = trunc i16 %4 to i8
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %8

8:                                                ; preds = %2, %7
  %9 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 33554431
  %12 = and i32 %10, 67108864
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %8
  %15 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseColSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #14
  br label %16

16:                                               ; preds = %8, %14
  %17 = phi i32 [ %15, %14 ], [ 1, %8 ]
  %18 = add i32 %17, %11
  %19 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 11
  %20 = load i32, i32* %19, align 4
  %21 = icmp ugt i32 %20, %18
  br i1 %21, label %43, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2
  %26 = icmp ult i32 %20, %24
  br i1 %26, label %27, label %43

27:                                               ; preds = %22, %36
  %28 = phi i32 [ %40, %36 ], [ %20, %22 ]
  %29 = phi i32 [ %41, %36 ], [ %20, %22 ]
  %30 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %25, i32 %29) #14
  %31 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = add i32 %28, -1
  %34 = add i32 %33, %32
  %35 = icmp ult i32 %34, %18
  br i1 %35, label %36, label %43

36:                                               ; preds = %27
  %37 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %25, i32 %29) #14
  %38 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, %28
  %41 = add i32 %29, 1
  %42 = icmp eq i32 %41, %24
  br i1 %42, label %43, label %27

43:                                               ; preds = %27, %36, %16, %22
  %44 = phi i32 [ %18, %16 ], [ %20, %22 ], [ %29, %27 ], [ %24, %36 ]
  %45 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 7
  %48 = bitcast %"class.blink::LayoutObject"** %47 to %"class.blink::LayoutTableSection"**
  %49 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 3
  %51 = bitcast %"class.blink::LayoutObject"* %50 to i32*
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 2147483647
  %54 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %49, i64 0, i32 3
  %55 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2120"* %54, i32 %53) #14
  %56 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %55, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp ugt i32 %57, %44
  br i1 %58, label %59, label %70

59:                                               ; preds = %43
  %60 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %55, i64 0, i32 0
  %61 = tail call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2123"* %60, i32 %44) #14
  %62 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %61, i64 0, i32 0, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %61, i64 0, i32 0
  %67 = add i32 %63, -1
  %68 = tail call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2126"* %66, i32 %67) #14
  %69 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %68, align 8
  br label %70

70:                                               ; preds = %43, %59, %65
  %71 = phi %"class.blink::LayoutTableCell"* [ null, %43 ], [ %69, %65 ], [ null, %59 ]
  ret %"class.blink::LayoutTableCell"* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutTable"*, i32, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %6 = tail call i32 @_ZNK5blink11LayoutTable20FirstLineBoxBaselineEv(%"class.blink::LayoutTable"* %0)
  %7 = icmp eq i32 %6, -64
  br i1 %7, label %23, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 134217728
  %13 = icmp eq i96 %12, 0
  br i1 %13, label %26, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::LayoutTable"* %0 to %"class.blink::LayoutBlock"*
  %16 = tail call i32 @_ZNK5blink11LayoutBlock27BeforeMarginInLineDirectionENS_17LineDirectionModeE(%"class.blink::LayoutBlock"* %15, i32 %3) #14
  %17 = icmp slt i32 %6, 0
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 %6) #14
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !20
  br label %26

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %25 = tail call i32 @_ZNK5blink9LayoutBox16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBox"* %24, i32 %1, i1 zeroext %2, i32 %3, i32 %4) #14
  br label %26

26:                                               ; preds = %8, %23, %14
  %27 = phi i32 [ %22, %14 ], [ %25, %23 ], [ %6, %8 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable20FirstLineBoxBaselineEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %126, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 5, i32 0
  %8 = bitcast %"class.blink::ComputedStyle"** %7 to %"class.blink::ComputedStyleBase"**
  %9 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %9, i64 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %14 = bitcast %"class.blink::ComputedStyle"** %13 to %"class.blink::ComputedStyleBase"**
  %15 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = xor i160 %18, %12
  %20 = and i160 %19, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  br i1 %21, label %22, label %126

22:                                               ; preds = %6
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %28, i64 0, i32 45
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %76, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %35 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %34 to i96*
  %36 = load i96, i96* %35, align 4
  %37 = and i96 %36, 1207959552
  %38 = icmp eq i96 %37, 134217728
  br i1 %38, label %76, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.blink::LayoutTable"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, i64 92
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.blink::LayoutObject"* %2, i32 43) #14
  br i1 %44, label %76, label %45

45:                                               ; preds = %39
  %46 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %40, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, i64 92
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::LayoutObject"* %2, i32 46) #14
  br i1 %49, label %70, label %50

50:                                               ; preds = %45
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %40, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, i64 92
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::LayoutObject"* %2, i32 48) #14
  br i1 %54, label %70, label %55

55:                                               ; preds = %50
  %56 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %40, align 8
  %57 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, i64 92
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.blink::LayoutObject"* %2, i32 45) #14
  br i1 %59, label %70, label %60

60:                                               ; preds = %55
  %61 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %40, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %61, i64 92
  %63 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.blink::LayoutObject"* %2, i32 49) #14
  br i1 %64, label %70, label %65

65:                                               ; preds = %60
  %66 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %40, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, i64 92
  %68 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.blink::LayoutObject"* %2, i32 50) #14
  br i1 %69, label %70, label %126

70:                                               ; preds = %45, %50, %55, %60, %65
  %71 = bitcast %"class.blink::LayoutTable"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %72 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %71, align 8
  %73 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %72, i64 24
  %74 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %73, align 8
  %75 = tail call zeroext i1 %74(%"class.blink::LayoutObject"* %2) #14
  br i1 %75, label %126, label %76

76:                                               ; preds = %33, %39, %22, %70
  %77 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %78 = load i16, i16* %77, align 8
  %79 = trunc i16 %78 to i8
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %76
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %82

82:                                               ; preds = %76, %81
  %83 = tail call %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable18TopNonEmptySectionEv(%"class.blink::LayoutTable"* %0)
  %84 = icmp eq %"class.blink::LayoutTableSection"* %83, null
  br i1 %84, label %126, label %85

85:                                               ; preds = %82
  %86 = tail call i32 @_ZNK5blink18LayoutTableSection20FirstLineBoxBaselineEv(%"class.blink::LayoutTableSection"* nonnull %83) #14
  %87 = icmp sgt i32 %86, -1
  br i1 %87, label %88, label %104

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %90 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %90, i64 0, i32 0, i32 9
  %92 = bitcast [20 x i8]* %91 to i160*
  %93 = load i160, i160* %92, align 8
  %94 = and i160 %93, 15211807202738752817960438464512
  %95 = icmp eq i160 %94, 0
  %96 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %83, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %97 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %83, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %98 = select i1 %95, i32* %96, i32* %97
  %99 = load i32, i32* %98, align 4
  %100 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %86) #14
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 2147483647, i32 %102, !prof !20
  br label %126

104:                                              ; preds = %85
  %105 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %83, i64 0, i32 0, i32 1, i32 0
  %106 = bitcast %"class.blink::LayoutObject"** %105 to %"class.blink::LayoutTableRow"**
  %107 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %106, align 8
  %108 = icmp eq %"class.blink::LayoutTableRow"* %107, null
  br i1 %108, label %126, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %107, i64 0, i32 0, i32 1, i32 0
  %111 = bitcast %"class.blink::LayoutObject"** %110 to %"class.blink::LayoutTableCell"**
  %112 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %111, align 8
  %113 = icmp eq %"class.blink::LayoutTableCell"* %112, null
  br i1 %113, label %114, label %126

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %116 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %116, i64 0, i32 0, i32 9
  %118 = bitcast [20 x i8]* %117 to i160*
  %119 = load i160, i160* %118, align 8
  %120 = and i160 %119, 15211807202738752817960438464512
  %121 = icmp eq i160 %120, 0
  %122 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %83, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %123 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %83, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %124 = select i1 %121, i32* %122, i32* %123
  %125 = load i32, i32* %124, align 4
  br label %126

126:                                              ; preds = %6, %65, %1, %88, %114, %109, %104, %82, %70
  %127 = phi i32 [ -64, %70 ], [ -64, %6 ], [ -64, %82 ], [ %103, %88 ], [ %125, %114 ], [ -64, %109 ], [ -64, %104 ], [ -64, %1 ], [ -64, %65 ]
  ret i32 %127
}

declare i32 @_ZNK5blink11LayoutBlock27BeforeMarginInLineDirectionENS_17LineDirectionModeE(%"class.blink::LayoutBlock"*, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBox"*, i32, i1 zeroext, i32, i32) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutTable"* nocapture readnone, i32) unnamed_addr #7 align 2 {
  ret i32 -64
}

declare i32 @_ZNK5blink18LayoutTableSection20FirstLineBoxBaselineEv(%"class.blink::LayoutTableSection"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink11LayoutTable16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutTable"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = bitcast %"class.blink::ComputedStyle"** %4 to %"class.blink::ComputedStyleBase"**
  %6 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %6, i64 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 81129638414606681695789005144064
  %11 = icmp eq i160 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %14 = bitcast %"class.blink::LayoutSize"* %13 to i64*
  %15 = load i64, i64* %14, align 4
  %16 = bitcast %"struct.blink::PhysicalOffset"* %1 to i64*
  %17 = load i64, i64* %16, align 4
  br label %59

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %20 = tail call { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"* %19, %"struct.blink::PhysicalOffset"* dereferenceable(8) %1, i32 %2) #14
  %21 = extractvalue { i64, i64 } %20, 0
  %22 = trunc i64 %21 to i32
  %23 = lshr i64 %21, 32
  %24 = trunc i64 %23 to i32
  %25 = extractvalue { i64, i64 } %20, 1
  %26 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %51, label %29

29:                                               ; preds = %18
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 9
  %32 = bitcast [20 x i8]* %31 to i160*
  %33 = load i160, i160* %32, align 8
  %34 = and i160 %33, 15211807202738752817960438464512
  %35 = icmp eq i160 %34, 0
  %36 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %37 = bitcast %"class.blink::LayoutSize"* %36 to i64*
  %38 = load i64, i64* %37, align 4
  br i1 %35, label %39, label %45

39:                                               ; preds = %29
  %40 = and i64 %38, -4294967296
  %41 = and i64 %25, 4294967295
  %42 = or i64 %40, %41
  %43 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  br label %51

45:                                               ; preds = %29
  %46 = and i64 %38, 4294967295
  %47 = and i64 %25, -4294967296
  %48 = or i64 %46, %47
  %49 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  br label %51

51:                                               ; preds = %39, %45, %18
  %52 = phi i64 [ %25, %18 ], [ %42, %39 ], [ %48, %45 ]
  %53 = phi i32 [ %22, %18 ], [ %22, %39 ], [ %50, %45 ]
  %54 = phi i32 [ %24, %18 ], [ %44, %39 ], [ %24, %45 ]
  %55 = zext i32 %54 to i64
  %56 = shl nuw i64 %55, 32
  %57 = zext i32 %53 to i64
  %58 = or i64 %56, %57
  br label %59

59:                                               ; preds = %51, %12
  %60 = phi i64 [ %17, %12 ], [ %58, %51 ]
  %61 = phi i64 [ %15, %12 ], [ %52, %51 ]
  %62 = insertvalue { i64, i64 } undef, i64 %60, 0
  %63 = insertvalue { i64, i64 } %62, i64 %61, 1
  ret { i64, i64 } %63
}

declare { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11LayoutTable11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutTable"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.blink::PhysicalOffset"*
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"struct.blink::PhysicalOffset"*
  %12 = alloca %"struct.blink::PhysicalRect", align 8
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"struct.blink::PhysicalOffset"*
  %15 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 0, i32 1
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, %15
  %19 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #14
  br i1 %18, label %227, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %22 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %21 to i96*
  %23 = load i96, i96* %22, align 4
  %24 = and i96 %23, 8589934592
  %25 = icmp eq i96 %24, 0
  br i1 %25, label %88, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %28 = bitcast %"class.blink::ComputedStyle"** %27 to %"class.blink::ComputedStyleBase"**
  %29 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %29, i64 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 81129638414606681695789005144064
  %34 = icmp eq i160 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %37 = bitcast %"class.blink::LayoutSize"* %36 to i64*
  %38 = load i64, i64* %37, align 4
  %39 = bitcast %"struct.blink::PhysicalOffset"* %3 to i64*
  %40 = load i64, i64* %39, align 4
  br label %82

41:                                               ; preds = %26
  %42 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %43 = tail call { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"* %42, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, i32 0) #14
  %44 = extractvalue { i64, i64 } %43, 0
  %45 = trunc i64 %44 to i32
  %46 = lshr i64 %44, 32
  %47 = trunc i64 %46 to i32
  %48 = extractvalue { i64, i64 } %43, 1
  %49 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %41
  %53 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %53, i64 0, i32 0, i32 9
  %55 = bitcast [20 x i8]* %54 to i160*
  %56 = load i160, i160* %55, align 8
  %57 = and i160 %56, 15211807202738752817960438464512
  %58 = icmp eq i160 %57, 0
  %59 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %60 = bitcast %"class.blink::LayoutSize"* %59 to i64*
  %61 = load i64, i64* %60, align 4
  br i1 %58, label %62, label %68

62:                                               ; preds = %52
  %63 = and i64 %61, -4294967296
  %64 = and i64 %48, 4294967295
  %65 = or i64 %63, %64
  %66 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %67 = load i32, i32* %66, align 4
  br label %74

68:                                               ; preds = %52
  %69 = and i64 %61, 4294967295
  %70 = and i64 %48, -4294967296
  %71 = or i64 %69, %70
  %72 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  br label %74

74:                                               ; preds = %68, %62, %41
  %75 = phi i64 [ %48, %41 ], [ %65, %62 ], [ %71, %68 ]
  %76 = phi i32 [ %45, %41 ], [ %45, %62 ], [ %73, %68 ]
  %77 = phi i32 [ %47, %41 ], [ %67, %62 ], [ %47, %68 ]
  %78 = zext i32 %77 to i64
  %79 = shl nuw i64 %78, 32
  %80 = zext i32 %76 to i64
  %81 = or i64 %79, %80
  br label %82

82:                                               ; preds = %35, %74
  %83 = phi i64 [ %40, %35 ], [ %81, %74 ]
  %84 = phi i64 [ %38, %35 ], [ %75, %74 ]
  %85 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %83, i64* %85, align 8
  %86 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %84, i64* %86, align 8
  %87 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #14
  br i1 %87, label %89, label %228

88:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #14
  br label %89

89:                                               ; preds = %88, %82
  %90 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 1
  %91 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %90, align 8
  %92 = icmp eq %"class.blink::LayoutObject"* %91, null
  br i1 %92, label %228, label %93

93:                                               ; preds = %89
  %94 = bitcast i64* %8 to i8*
  %95 = bitcast i64* %8 to i32*
  %96 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %9, i64 0, i32 1, i32 0
  %97 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  %98 = icmp eq %"class.blink::LayoutTable"* %0, null
  %99 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  br label %101

101:                                              ; preds = %93, %199
  %102 = phi %"class.blink::LayoutObject"* [ %91, %93 ], [ %201, %199 ]
  %103 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %102, i64 0, i32 4
  %104 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %103 to i96*
  %105 = load i96, i96* %104, align 4
  %106 = and i96 %105, 67108864
  %107 = icmp eq i96 %106, 0
  br i1 %107, label %199, label %108

108:                                              ; preds = %101
  %109 = bitcast %"class.blink::LayoutObject"* %102 to %"class.blink::LayoutBox"*
  %110 = bitcast %"class.blink::LayoutObject"* %102 to %"class.blink::LayoutBoxModelObject"*
  %111 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* nonnull %110) #14
  br i1 %111, label %199, label %112

112:                                              ; preds = %108
  %113 = bitcast %"class.blink::LayoutObject"* %102 to i1 (%"class.blink::LayoutObject"*, i32)***
  %114 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %113, align 8
  %115 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %114, i64 92
  %116 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %115, align 8
  %117 = call zeroext i1 %116(%"class.blink::LayoutObject"* nonnull %102, i32 50) #14
  br i1 %117, label %123, label %118

118:                                              ; preds = %112
  %119 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %113, align 8
  %120 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %119, i64 92
  %121 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %120, align 8
  %122 = call zeroext i1 %121(%"class.blink::LayoutObject"* nonnull %102, i32 45) #14
  br i1 %122, label %123, label %199

123:                                              ; preds = %118, %112
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #14
  store i32 -1431655766, i32* %95, align 8
  store i32 -1431655766, i32* %96, align 4
  br i1 %98, label %124, label %131

124:                                              ; preds = %123
  %125 = bitcast %"class.blink::LayoutObject"* %102 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %126 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %125, align 8
  %127 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %126, i64 147
  %128 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %127, align 8
  %129 = call %"class.blink::LayoutBox"* %128(%"class.blink::LayoutBox"* nonnull %109) #14
  %130 = icmp eq %"class.blink::LayoutBox"* %129, null
  br i1 %130, label %140, label %131

131:                                              ; preds = %124, %123
  %132 = phi %"class.blink::LayoutBox"* [ %129, %124 ], [ %97, %123 ]
  %133 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %132, i64 0, i32 0, i32 0, i32 5, i32 0
  %134 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %134, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8
  %138 = and i160 %137, 15211807202738752817960438464512
  %139 = icmp eq i160 %138, 5070602400912917605986812821504
  br i1 %139, label %145, label %140, !prof !20

140:                                              ; preds = %131, %124
  %141 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %102, i64 1, i32 1, i32 1
  %142 = bitcast i8* %141 to i64*
  %143 = load i64, i64* %142, align 4
  %144 = trunc i64 %143 to i32
  br label %170

145:                                              ; preds = %131
  %146 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %132, i64 0, i32 2, i32 1
  %147 = bitcast %"class.blink::LayoutSize"* %146 to i64*
  %148 = load i64, i64* %147, align 4
  %149 = trunc i64 %148 to i32
  %150 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %102, i64 1, i32 4, i32 0, i64 4
  %151 = bitcast i8* %150 to i64*
  %152 = load i64, i64* %151, align 4
  %153 = trunc i64 %152 to i32
  %154 = icmp sgt i32 %153, -1
  %155 = select i1 %154, i32 -2147483648, i32 2147483647
  %156 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %149, i32 %153) #14
  %157 = extractvalue { i32, i1 } %156, 1
  %158 = extractvalue { i32, i1 } %156, 0
  %159 = select i1 %157, i32 %155, i32 %158, !prof !20
  %160 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %102, i64 1, i32 1, i32 1
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 4
  %163 = trunc i64 %162 to i32
  %164 = icmp sgt i32 %163, -1
  %165 = select i1 %164, i32 -2147483648, i32 2147483647
  %166 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %159, i32 %163) #14
  %167 = extractvalue { i32, i1 } %166, 1
  %168 = extractvalue { i32, i1 } %166, 0
  %169 = select i1 %167, i32 %165, i32 %168, !prof !20
  br label %170

170:                                              ; preds = %140, %145
  %171 = phi i32 [ %144, %140 ], [ %169, %145 ]
  %172 = phi i64 [ %143, %140 ], [ %162, %145 ]
  %173 = lshr i64 %172, 32
  %174 = trunc i64 %173 to i32
  %175 = load i32, i32* %99, align 4
  %176 = icmp slt i32 %171, 0
  %177 = select i1 %176, i32 -2147483648, i32 2147483647
  %178 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %175, i32 %171) #14
  %179 = extractvalue { i32, i1 } %178, 1
  %180 = extractvalue { i32, i1 } %178, 0
  %181 = select i1 %179, i32 %177, i32 %180, !prof !20
  %182 = load i32, i32* %100, align 4
  %183 = icmp slt i32 %174, 0
  %184 = select i1 %183, i32 -2147483648, i32 2147483647
  %185 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %182, i32 %174) #14
  %186 = extractvalue { i32, i1 } %185, 1
  %187 = extractvalue { i32, i1 } %185, 0
  %188 = select i1 %186, i32 %184, i32 %187, !prof !20
  %189 = zext i32 %188 to i64
  %190 = shl nuw i64 %189, 32
  %191 = zext i32 %181 to i64
  %192 = or i64 %190, %191
  store i64 %192, i64* %8, align 8
  %193 = bitcast %"class.blink::LayoutObject"* %102 to i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)***
  %194 = load i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)**, i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*** %193, align 8
  %195 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*, i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)** %194, i64 63
  %196 = load i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*, i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)** %195, align 8
  %197 = call zeroext i1 %196(%"class.blink::LayoutObject"* nonnull %102, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %9, i32 %4) #14
  br i1 %197, label %203, label %198

198:                                              ; preds = %170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #14
  br label %199

199:                                              ; preds = %101, %198, %108, %118
  %200 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %102, i64 0, i32 8
  %201 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %200, align 8
  %202 = icmp eq %"class.blink::LayoutObject"* %201, null
  br i1 %202, label %228, label %101

203:                                              ; preds = %170
  %204 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #14
  %205 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = load i32, i32* %99, align 4
  %208 = icmp sgt i32 %207, -1
  %209 = select i1 %208, i32 -2147483648, i32 2147483647
  %210 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %206, i32 %207) #14
  %211 = extractvalue { i32, i1 } %210, 1
  %212 = extractvalue { i32, i1 } %210, 0
  %213 = select i1 %211, i32 %209, i32 %212, !prof !20
  %214 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 1, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = load i32, i32* %100, align 4
  %217 = icmp sgt i32 %216, -1
  %218 = select i1 %217, i32 -2147483648, i32 2147483647
  %219 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %215, i32 %216) #14
  %220 = extractvalue { i32, i1 } %219, 1
  %221 = extractvalue { i32, i1 } %219, 0
  %222 = select i1 %220, i32 %218, i32 %221, !prof !20
  %223 = zext i32 %222 to i64
  %224 = shl nuw i64 %223, 32
  %225 = zext i32 %213 to i64
  %226 = or i64 %224, %225
  store i64 %226, i64* %10, align 8
  call void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"* %15, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %11) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #14
  br label %302

227:                                              ; preds = %5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #14
  br label %228

228:                                              ; preds = %199, %89, %227, %82
  %229 = bitcast %"struct.blink::PhysicalRect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %229) #14
  %230 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %12, i64 0, i32 1, i32 0, i32 0
  %231 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %12, i64 0, i32 1, i32 1, i32 0
  %232 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %233 = bitcast %"class.blink::LayoutSize"* %232 to i64*
  %234 = load i64, i64* %233, align 4
  %235 = trunc i64 %234 to i32
  %236 = lshr i64 %234, 32
  %237 = trunc i64 %236 to i32
  %238 = bitcast %"struct.blink::PhysicalOffset"* %3 to i64*
  %239 = bitcast %"struct.blink::PhysicalRect"* %12 to i64*
  %240 = load i64, i64* %238, align 4
  store i64 %240, i64* %239, align 8
  store i32 %235, i32* %230, align 8
  store i32 %237, i32* %231, align 4
  %241 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %242 = bitcast %"class.blink::ComputedStyle"** %241 to %"class.blink::ComputedStyleBase"**
  %243 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %242, align 8
  %244 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %243, i64 0, i32 9
  %245 = bitcast [20 x i8]* %244 to i160*
  %246 = load i160, i160* %245, align 8
  %247 = and i160 %246, 3802951800684688204490109616128
  %248 = icmp eq i160 %247, 1267650600228229401496703205376
  br i1 %248, label %249, label %299

249:                                              ; preds = %228
  %250 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 0, i32 0
  %251 = load i32, i32* %250, align 8
  %252 = and i32 %251, 1024
  %253 = icmp ne i32 %252, 0
  %254 = and i160 %246, 16888498602639360
  %255 = icmp ne i160 %254, 0
  %256 = or i1 %255, %253
  %257 = icmp ult i32 %4, 2
  %258 = and i1 %257, %256
  br i1 %258, label %259, label %299

259:                                              ; preds = %249
  %260 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %12) #14
  br i1 %260, label %261, label %299

261:                                              ; preds = %259
  %262 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %262) #14
  %263 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %266 = load i32, i32* %265, align 4
  %267 = icmp sgt i32 %266, -1
  %268 = select i1 %267, i32 -2147483648, i32 2147483647
  %269 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %264, i32 %266) #14
  %270 = extractvalue { i32, i1 } %269, 1
  %271 = extractvalue { i32, i1 } %269, 0
  %272 = select i1 %270, i32 %268, i32 %271, !prof !20
  %273 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 1, i32 0
  %274 = load i32, i32* %273, align 4
  %275 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %276 = load i32, i32* %275, align 4
  %277 = icmp sgt i32 %276, -1
  %278 = select i1 %277, i32 -2147483648, i32 2147483647
  %279 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %274, i32 %276) #14
  %280 = extractvalue { i32, i1 } %279, 1
  %281 = extractvalue { i32, i1 } %279, 0
  %282 = select i1 %280, i32 %278, i32 %281, !prof !20
  %283 = zext i32 %282 to i64
  %284 = shl nuw i64 %283, 32
  %285 = zext i32 %272 to i64
  %286 = or i64 %284, %285
  store i64 %286, i64* %13, align 8
  call void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"* %15, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %14) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %262) #14
  %287 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %288 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %287 to i96*
  %289 = load i96, i96* %288, align 4
  %290 = and i96 %289, 16777216
  %291 = icmp eq i96 %290, 0
  br i1 %291, label %292, label %295

292:                                              ; preds = %261
  %293 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %294 = load %"class.blink::Node"*, %"class.blink::Node"** %293, align 8
  br label %295

295:                                              ; preds = %261, %292
  %296 = phi %"class.blink::Node"* [ %294, %292 ], [ null, %261 ]
  %297 = call i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_12PhysicalRectE(%"class.blink::HitTestResult"* %1, %"class.blink::Node"* %296, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %12) #14
  %298 = icmp eq i32 %297, 1
  br i1 %298, label %300, label %299

299:                                              ; preds = %228, %295, %259, %249
  br label %300

300:                                              ; preds = %295, %299
  %301 = phi i1 [ false, %299 ], [ true, %295 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %229) #14
  br label %302

302:                                              ; preds = %203, %300
  %303 = phi i1 [ %301, %300 ], [ true, %203 ]
  ret i1 %303
}

declare zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_12PhysicalRectE(%"class.blink::HitTestResult"*, %"class.blink::Node"*, %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBox"* @_ZNK5blink11LayoutTable32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE(%"class.blink::LayoutTable"* nocapture readnone, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::LayoutBox"* @_ZN5blink19LayoutObjectFactory30CreateAnonymousTableWithParentERKNS_12LayoutObjectEb(%"class.blink::LayoutObject"* dereferenceable(88) %1, i1 zeroext false) #14
  ret %"class.blink::LayoutBox"* %3
}

declare %"class.blink::LayoutBox"* @_ZN5blink19LayoutObjectFactory30CreateAnonymousTableWithParentERKNS_12LayoutObjectEb(%"class.blink::LayoutObject"* dereferenceable(88), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutTable33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutBox"* %2) #14
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %4 = load i16, i16* %3, align 8
  %5 = and i16 %4, 1
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %130

7:                                                ; preds = %1
  %8 = and i16 %4, -8
  %9 = or i16 %8, 1
  store i16 %9, i16* %3, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = bitcast %"class.blink::ComputedStyle"** %10 to %"class.blink::ComputedStyleBase"**
  %12 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %12, i64 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = and i160 %15, 81129638414606681695789005144064
  %17 = icmp eq i160 %16, 0
  br i1 %17, label %18, label %130

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %20 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutTableSection"* %20, null
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 8
  %24 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutTableSection"* %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %28 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %27, align 8
  %29 = icmp eq %"class.blink::LayoutTableSection"* %28, null
  br i1 %29, label %130, label %30

30:                                               ; preds = %22, %18, %26
  %31 = phi %"class.blink::LayoutTableSection"* [ %28, %26 ], [ %24, %22 ], [ %20, %18 ]
  %32 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 7
  %33 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 1, i32 0
  %34 = bitcast %"class.blink::LayoutTableSection"** %19 to %"class.blink::LayoutObject"**
  %35 = bitcast %"class.blink::LayoutTableSection"** %32 to %"class.blink::LayoutObject"**
  br label %36

36:                                               ; preds = %30, %81
  %37 = phi %"class.blink::LayoutTableSection"* [ %31, %30 ], [ %83, %81 ]
  %38 = phi i32 [ 0, %30 ], [ %44, %81 ]
  %39 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %37, i64 0, i32 0, i32 1, i32 0
  %40 = bitcast %"class.blink::LayoutObject"** %39 to %"class.blink::LayoutTableRow"**
  %41 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutTableRow"* %41, null
  br i1 %42, label %43, label %85

43:                                               ; preds = %92, %36
  %44 = phi i32 [ %38, %36 ], [ %93, %92 ]
  %45 = load i16, i16* %3, align 8
  %46 = trunc i16 %45 to i8
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0) #14
  br label %49

49:                                               ; preds = %48, %43
  %50 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %32, align 8
  %51 = icmp eq %"class.blink::LayoutTableSection"* %50, %37
  br i1 %51, label %130, label %52

52:                                               ; preds = %49
  %53 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %19, align 8
  %54 = icmp eq %"class.blink::LayoutTableSection"* %53, %37
  %55 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %56 = select i1 %54, %"class.blink::LayoutObject"** %33, %"class.blink::LayoutObject"** %55
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %56, align 8
  %58 = icmp eq %"class.blink::LayoutObject"* %57, null
  br i1 %58, label %78, label %59

59:                                               ; preds = %52, %72
  %60 = phi %"class.blink::LayoutObject"* [ %74, %72 ], [ %57, %52 ]
  %61 = bitcast %"class.blink::LayoutObject"* %60 to i1 (%"class.blink::LayoutObject"*, i32)***
  %62 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %62, i64 92
  %64 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.blink::LayoutObject"* nonnull %60, i32 50) #14
  br i1 %65, label %66, label %72

66:                                               ; preds = %59
  %67 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %68 = icmp eq %"class.blink::LayoutObject"* %60, %67
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %71 = icmp eq %"class.blink::LayoutObject"* %60, %70
  br i1 %71, label %72, label %81

72:                                               ; preds = %69, %66, %59
  %73 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 9
  %74 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutObject"* %74, null
  br i1 %75, label %76, label %59

76:                                               ; preds = %72
  %77 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %32, align 8
  br label %78

78:                                               ; preds = %76, %52
  %79 = phi %"class.blink::LayoutTableSection"* [ %77, %76 ], [ %50, %52 ]
  %80 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %69, %78
  %82 = phi %"class.blink::LayoutObject"* [ %80, %78 ], [ %60, %69 ]
  %83 = bitcast %"class.blink::LayoutObject"* %82 to %"class.blink::LayoutTableSection"*
  %84 = icmp eq %"class.blink::LayoutObject"* %82, null
  br i1 %84, label %130, label %36

85:                                               ; preds = %36, %92
  %86 = phi %"class.blink::LayoutTableRow"* [ %96, %92 ], [ %41, %36 ]
  %87 = phi i32 [ %93, %92 ], [ %38, %36 ]
  %88 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %86, i64 0, i32 0, i32 1, i32 0
  %89 = bitcast %"class.blink::LayoutObject"** %88 to %"class.blink::LayoutTableCell"**
  %90 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %89, align 8
  %91 = icmp eq %"class.blink::LayoutTableCell"* %90, null
  br i1 %91, label %92, label %98

92:                                               ; preds = %124, %85
  %93 = phi i32 [ %87, %85 ], [ %125, %124 ]
  %94 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %95 = bitcast %"class.blink::LayoutObject"** %94 to %"class.blink::LayoutTableRow"**
  %96 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %95, align 8
  %97 = icmp eq %"class.blink::LayoutTableRow"* %96, null
  br i1 %97, label %43, label %85

98:                                               ; preds = %85, %124
  %99 = phi %"class.blink::LayoutTableCell"* [ %128, %124 ], [ %90, %85 ]
  %100 = phi i32 [ %125, %124 ], [ %87, %85 ]
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %99) #14
  %101 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %99, i64 0, i32 3, i32 0, i32 0, i32 0
  %102 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %101, align 8
  %103 = icmp eq %"class.blink::CollapsedBorderValues"* %102, null
  br i1 %103, label %124, label %104

104:                                              ; preds = %98
  %105 = load i16, i16* %3, align 8
  %106 = or i16 %105, 2
  store i16 %106, i16* %3, align 8
  %107 = and i16 %105, 4
  %108 = icmp eq i16 %107, 0
  br i1 %108, label %109, label %124

109:                                              ; preds = %104
  %110 = icmp ugt i32 %100, 536870911
  br i1 %110, label %111, label %118

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %102, i64 0, i32 0, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, %100
  br i1 %114, label %131, label %115

115:                                              ; preds = %161, %143, %131, %111
  %116 = phi i32 [ %100, %111 ], [ %132, %131 ], [ %144, %143 ], [ %162, %161 ]
  %117 = or i16 %105, 6
  store i16 %117, i16* %3, align 8
  br label %124

118:                                              ; preds = %109
  %119 = bitcast %"class.blink::CollapsedBorderValues"* %102 to i64*
  %120 = load i64, i64* %119, align 4
  %121 = lshr i64 %120, 32
  %122 = trunc i64 %121 to i32
  %123 = icmp ugt i32 %122, 536870911
  br i1 %123, label %131, label %136

124:                                              ; preds = %155, %161, %115, %104, %98
  %125 = phi i32 [ %100, %98 ], [ %116, %115 ], [ %100, %104 ], [ %160, %155 ], [ %162, %161 ]
  %126 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %127 = bitcast %"class.blink::LayoutObject"** %126 to %"class.blink::LayoutTableCell"**
  %128 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %127, align 8
  %129 = icmp eq %"class.blink::LayoutTableCell"* %128, null
  br i1 %129, label %92, label %98

130:                                              ; preds = %49, %81, %26, %1, %7
  ret void

131:                                              ; preds = %111, %118
  %132 = phi i32 [ %122, %118 ], [ %100, %111 ]
  %133 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %102, i64 0, i32 0, i64 1, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, %132
  br i1 %135, label %143, label %115

136:                                              ; preds = %118
  %137 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %102, i64 0, i32 0, i64 1
  %138 = bitcast %"class.blink::CollapsedBorderValue"* %137 to i64*
  %139 = load i64, i64* %138, align 4
  %140 = lshr i64 %139, 32
  %141 = trunc i64 %140 to i32
  %142 = icmp ugt i32 %141, 536870911
  br i1 %142, label %143, label %148

143:                                              ; preds = %131, %136
  %144 = phi i32 [ %141, %136 ], [ %132, %131 ]
  %145 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %102, i64 0, i32 0, i64 2, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, %144
  br i1 %147, label %161, label %115

148:                                              ; preds = %136
  %149 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %102, i64 0, i32 0, i64 2
  %150 = bitcast %"class.blink::CollapsedBorderValue"* %149 to i64*
  %151 = load i64, i64* %150, align 4
  %152 = lshr i64 %151, 32
  %153 = trunc i64 %152 to i32
  %154 = icmp ugt i32 %153, 536870911
  br i1 %154, label %161, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %102, i64 0, i32 0, i64 3
  %157 = bitcast %"class.blink::CollapsedBorderValue"* %156 to i64*
  %158 = load i64, i64* %157, align 4
  %159 = lshr i64 %158, 32
  %160 = trunc i64 %159 to i32
  br label %124

161:                                              ; preds = %143, %148
  %162 = phi i32 [ %153, %148 ], [ %144, %143 ]
  %163 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %102, i64 0, i32 0, i64 3, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, %162
  br i1 %165, label %124, label %115
}

declare void @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutTable15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutTable"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::TablePaintInvalidator", align 8
  %4 = bitcast %"class.blink::TablePaintInvalidator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.blink::TablePaintInvalidator", %"class.blink::TablePaintInvalidator"* %3, i64 0, i32 0
  store %"class.blink::LayoutTable"* %0, %"class.blink::LayoutTable"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::TablePaintInvalidator", %"class.blink::TablePaintInvalidator"* %3, i64 0, i32 1
  store %"struct.blink::PaintInvalidatorContext"* %1, %"struct.blink::PaintInvalidatorContext"** %6, align 8
  call void @_ZN5blink21TablePaintInvalidator15InvalidatePaintEv(%"class.blink::TablePaintInvalidator"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #14
  ret void
}

declare void @_ZN5blink21TablePaintInvalidator15InvalidatePaintEv(%"class.blink::TablePaintInvalidator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable10PaddingTopEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 81129638414606681695789005144064
  %9 = icmp eq i160 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 16
  %15 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %11, %"class.blink::Length"* dereferenceable(8) %14) #14
  %16 = sdiv i32 %15, 64
  %17 = shl nsw i32 %16, 6
  br label %18

18:                                               ; preds = %1, %10
  %19 = phi i32 [ %17, %10 ], [ 0, %1 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable13PaddingBottomEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 81129638414606681695789005144064
  %9 = icmp eq i160 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 13
  %15 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %11, %"class.blink::Length"* dereferenceable(8) %14) #14
  %16 = sdiv i32 %15, 64
  %17 = shl nsw i32 %16, 6
  br label %18

18:                                               ; preds = %1, %10
  %19 = phi i32 [ %17, %10 ], [ 0, %1 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable11PaddingLeftEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 81129638414606681695789005144064
  %9 = icmp eq i160 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 14
  %15 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %11, %"class.blink::Length"* dereferenceable(8) %14) #14
  %16 = sdiv i32 %15, 64
  %17 = shl nsw i32 %16, 6
  br label %18

18:                                               ; preds = %1, %10
  %19 = phi i32 [ %17, %10 ], [ 0, %1 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutTable12PaddingRightEv(%"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 81129638414606681695789005144064
  %9 = icmp eq i160 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 15
  %15 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %11, %"class.blink::Length"* dereferenceable(8) %14) #14
  %16 = sdiv i32 %15, 64
  %17 = shl nsw i32 %16, 6
  br label %18

18:                                               ; preds = %1, %10
  %19 = phi i32 [ %17, %10 ], [ 0, %1 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11LayoutTable11IsFirstCellERKNS_26LayoutNGTableCellInterfaceE(%"class.blink::LayoutTable"*, %"class.blink::LayoutNGTableCellInterface"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::LayoutNGTableCellInterface"* %1 to %"class.blink::LayoutTableCell"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %4 = load %"class.blink::LayoutTableCell"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutTableCell"* (%"class.blink::LayoutNGTableCellInterface"*)*** %3, align 8
  %5 = load %"class.blink::LayoutTableCell"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutTableCell"* (%"class.blink::LayoutNGTableCellInterface"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutTableCell"* %5(%"class.blink::LayoutNGTableCellInterface"* %1) #14
  %7 = tail call %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable13CellPrecedingERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"* %0, %"class.blink::LayoutTableCell"* dereferenceable(312) %6)
  %8 = icmp eq %"class.blink::LayoutTableCell"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = tail call %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable9CellAboveERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"* %0, %"class.blink::LayoutTableCell"* dereferenceable(312) %6)
  %11 = icmp eq %"class.blink::LayoutTableCell"* %10, null
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i1 [ false, %2 ], [ %11, %9 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn240_NK5blink11LayoutTable11IsFirstCellERKNS_26LayoutNGTableCellInterfaceE(%"class.blink::LayoutTable"*, %"class.blink::LayoutNGTableCellInterface"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %4 = bitcast %"class.WTF::Vector.1624"* %3 to %"class.blink::LayoutTable"*
  %5 = bitcast %"class.blink::LayoutNGTableCellInterface"* %1 to %"class.blink::LayoutTableCell"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %6 = load %"class.blink::LayoutTableCell"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutTableCell"* (%"class.blink::LayoutNGTableCellInterface"*)*** %5, align 8
  %7 = load %"class.blink::LayoutTableCell"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutTableCell"* (%"class.blink::LayoutNGTableCellInterface"*)** %6, align 8
  %8 = tail call %"class.blink::LayoutTableCell"* %7(%"class.blink::LayoutNGTableCellInterface"* %1) #14
  %9 = tail call %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable13CellPrecedingERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"* %4, %"class.blink::LayoutTableCell"* dereferenceable(312) %8) #14
  %10 = icmp eq %"class.blink::LayoutTableCell"* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = tail call %"class.blink::LayoutTableCell"* @_ZNK5blink11LayoutTable9CellAboveERKNS_15LayoutTableCellE(%"class.blink::LayoutTable"* %4, %"class.blink::LayoutTableCell"* dereferenceable(312) %8) #14
  %13 = icmp eq %"class.blink::LayoutTableCell"* %12, null
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i1 [ false, %2 ], [ %13, %11 ]
  ret i1 %15
}

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBlock"*, i8*, i32) unnamed_addr #1

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

declare i64 @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink11LayoutTable7GetNameEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #14
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #14
  ret void
}

declare void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1207959552
  %6 = icmp eq i96 %5, 1207959552
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock13IsLayoutBlockEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink11LayoutTable24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 1
  ret %"class.blink::LayoutNGTableInterface"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink12LayoutObject19VirtualContinuationEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutBoxModelObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 0
  %7 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13HoverAncestorEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  ret %"class.blink::LayoutObject"* %3
}

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox18HasInlineFragmentsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %9 = bitcast %union.anon.1650* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBox"*, %"class.WTF::Vector.2173"*, i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret { i64, i64 } zeroinitializer
}

declare { i64, i64 } @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBlock"*, %"class.WTF::Vector.2174"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox9DebugRectEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTable8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE(%"class.blink::LayoutTable"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 44
  ret i1 %3
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutBox"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15WillBeDestroyedEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox15ClearPaintFlagsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i64 @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %27, !prof !20

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %2, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #14
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !20
  %21 = icmp sgt i32 %20, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %20) #14
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !20
  br label %27

27:                                               ; preds = %4, %12
  %28 = phi i32 [ %26, %12 ], [ %1, %4 ]
  ret i32 %28
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11OffsetWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12OffsetHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox17LayerTypeRequiredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15UpdateFromStyleEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox17BorderBoundingBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = srem i32 %5, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #14
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !20
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %1
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %36, !prof !98

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %36

36:                                               ; preds = %33, %30, %1
  %37 = phi i32 [ %35, %33 ], [ %28, %1 ], [ 0, %30 ]
  %38 = srem i32 %7, 64
  %39 = icmp slt i32 %13, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %13) #14
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !20
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %38, 32
  %50 = ashr i32 %49, 6
  %51 = sub nsw i32 %45, %50
  %52 = add nsw i32 %48, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %36
  %55 = add i32 %13, 4
  %56 = icmp ugt i32 %55, 8
  br i1 %56, label %57, label %60, !prof !98

57:                                               ; preds = %54
  %58 = icmp sgt i32 %13, 0
  %59 = select i1 %58, i32 1, i32 -1
  br label %60

60:                                               ; preds = %36, %54, %57
  %61 = phi i32 [ %59, %57 ], [ %52, %36 ], [ 0, %54 ]
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %37 to i64
  %65 = or i64 %63, %64
  %66 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %65, 1
  ret { i64, i64 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #14
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = and i64 %3, -4294967296
  %6 = extractvalue { i64, i64 } %2, 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  br i1 %13, label %14, label %22, !prof !20

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %16 = trunc i64 %6 to i32
  %17 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %18 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %18, i64 106
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::LayoutObject"* %15, i32 %4, i32 %16, %"class.blink::LayoutBox"* null) #14
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ %4, %1 ]
  %24 = zext i32 %23 to i64
  %25 = or i64 %5, %24
  %26 = insertvalue { i64, i64 } undef, i64 %25, 0
  %27 = insertvalue { i64, i64 } %26, i64 %6, 1
  ret { i64, i64 } %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %3 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %3, i64 122
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBoxModelObject"* %0) #14
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %7, i64 125
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBoxModelObject"* %0) #14
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 123
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %0) #14
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 124
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %0) #14
  %19 = zext i32 %10 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %6 to i64
  %22 = or i64 %20, %21
  %23 = insertvalue { i64, i64 } undef, i64 %22, 0
  %24 = zext i32 %18 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %14 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } %23, i64 %27, 1
  ret { i64, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9MarginTopEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12MarginBottomEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10MarginLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11MarginRightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i1 zeroext, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2173"*, i32) unnamed_addr #1

declare void @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2173"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare void @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox17LocationContainerEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox14HasTopOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox15HasLeftOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ScrollWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ScrollHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !121
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1033, i64 0 }, %12 ], [ { i64 1041, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1017, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #14
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !124
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1041, i64 0 }, %12 ], [ { i64 1033, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1025, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #14
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE(%"class.blink::LayoutBlock"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  ret i1 %3
}

declare %"class.blink::InlineBox"* @_ZN5blink9LayoutBox15CreateInlineBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox10BreakAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11BreakBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox13StartPageNameEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox11EndPageNameEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink9LayoutBox13IntrinsicSizeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #14
  br i1 %10, label %13, label %24

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #14
  br i1 %12, label %13, label %24

13:                                               ; preds = %9, %11
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #14
  br label %27

22:                                               ; preds = %13
  %23 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #14
  br label %27

24:                                               ; preds = %9, %11
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %22, %20, %24
  %28 = phi i32 [ %26, %24 ], [ %21, %20 ], [ %23, %22 ]
  ret i32 %28
}

declare i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1073741824
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 22
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #14
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i1 [ false, %1 ], [ %14, %7 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41553586675481359781061931072225280
  %8 = icmp eq i160 %7, 41538374868278621028243970633760768
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowXEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 132226261520350065983488
  %14 = icmp eq i160 %13, 75557863725914323419136
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 74
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowYEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1057810092162800527867904
  %14 = icmp eq i160 %13, 604462909807314587353088
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 77
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i8 @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTable33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj(%"class.blink::LayoutTable"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink11LayoutBlock15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare zeroext i8 @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink11LayoutBlock15CurrentFragmentEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::NGPhysicalBoxFragment"* null
}

declare void @_ZN5blink11LayoutBlock17UpdateBlockLayoutEb(%"class.blink::LayoutBlock"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE(%"class.blink::LayoutBlock"*, i1 zeroext, i1 zeroext, i32) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_(%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink11LayoutBlock32UpdateLogicalWidthAndColumnWidthEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i16 @_ZNK5blink11LayoutTable14HBorderSpacingEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 12
  %3 = load i16, i16* %2, align 8
  ret i16 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i16 @_ZNK5blink11LayoutTable14VBorderSpacingEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 13
  %3 = load i16, i16* %2, align 2
  ret i16 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11LayoutTable19ForceSectionsRecalcEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %1, %6
  %7 = phi %"class.blink::LayoutObject"* [ %9, %6 ], [ %2, %1 ]
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %6, label %13

13:                                               ; preds = %6, %1
  %14 = phi %"class.blink::Node"* [ %4, %1 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 5, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 19
  br i1 %21, label %31, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 6
  %24 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %25 = bitcast %"class.blink::LayoutTableSection"** %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #14
  %26 = load i16, i16* %24, align 8
  %27 = or i16 %26, 128
  store i16 %27, i16* %24, align 8
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason13kTableChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #14
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %2, i8 zeroext 3) #14
  %28 = load i16, i16* %24, align 8
  %29 = and i16 %28, -26
  %30 = or i16 %29, 8
  store i16 %30, i16* %24, align 8
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %2) #14
  br label %31

31:                                               ; preds = %13, %22
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutTable28RowOffsetFromRepeatingHeaderEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 20, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutTable28RowOffsetFromRepeatingFooterEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 21, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTable14HasColElementsEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 64
  %5 = icmp ne i16 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTable19HasCollapsedBordersEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 2
  %5 = icmp ne i16 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink11LayoutTable14ToLayoutObjectEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  ret %"class.blink::LayoutObject"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZN5blink11LayoutTable21ToMutableLayoutObjectEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  ret %"class.blink::LayoutObject"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTable18IsFixedTableLayoutEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 45671926166590716193865151022383844364247891968
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %1
  %10 = and i160 %6, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %13, i64 0, i32 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %13, i64 0, i32 3
  %16 = select i1 %11, %"class.blink::Length"* %14, %"class.blink::Length"* %15
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = add i8 %18, -1
  %20 = icmp ult i8 %19, 8
  br i1 %20, label %21, label %25

21:                                               ; preds = %9
  %22 = lshr i8 -57, %19
  %23 = and i8 %22, 1
  %24 = icmp ne i8 %23, 0
  ret i1 %24

25:                                               ; preds = %9, %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZThn240_NK5blink11LayoutTable14ToLayoutObjectEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = bitcast %"class.WTF::Vector.1624"* %2 to %"class.blink::LayoutObject"*
  ret %"class.blink::LayoutObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZThn240_N5blink11LayoutTable21ToMutableLayoutObjectEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = bitcast %"class.WTF::Vector.1624"* %2 to %"class.blink::LayoutObject"*
  ret %"class.blink::LayoutObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn240_NK5blink11LayoutTable21ShouldCollapseBordersEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 1, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to %"class.blink::ComputedStyleBase"**
  %5 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %5, i64 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 81129638414606681695789005144064
  %10 = icmp eq i160 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn240_NK5blink11LayoutTable19HasCollapsedBordersEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 14, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to i16*
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, 2
  %7 = icmp ne i16 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn240_NK5blink11LayoutTable18IsFixedTableLayoutEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 1, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to %"class.blink::ComputedStyle"**
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 45671926166590716193865151022383844364247891968
  %10 = icmp eq i160 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %1
  %12 = and i160 %8, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 0
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 3
  %18 = select i1 %13, %"class.blink::Length"* %16, %"class.blink::Length"* %17
  %19 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %18, i64 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = add i8 %20, -1
  %22 = icmp ult i8 %21, 8
  br i1 %22, label %23, label %27

23:                                               ; preds = %11
  %24 = lshr i8 -57, %21
  %25 = and i8 %24, 1
  %26 = icmp ne i8 %25, 0
  ret i1 %26

27:                                               ; preds = %11, %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i16 @_ZThn240_NK5blink11LayoutTable14HBorderSpacingEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 14, i32 0, i32 1
  %4 = bitcast [8 x i8]* %3 to i16*
  %5 = load i16, i16* %4, align 8
  ret i16 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i16 @_ZThn240_NK5blink11LayoutTable14VBorderSpacingEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 14, i32 0, i32 1, i64 2
  %4 = bitcast i8* %3 to i16*
  %5 = load i16, i16* %4, align 2
  ret i16 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn240_NK5blink11LayoutTable14HasColElementsEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 14, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to i16*
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, 64
  %7 = icmp ne i16 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn240_NK5blink11LayoutTable31AbsoluteColumnToEffectiveColumnEj(%"class.blink::LayoutTable"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %3, i64 14, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %5, %1
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %3, i64 10, i32 0, i32 1, i64 4
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %3, i64 10, i32 0, i32 0, i32 1
  %12 = bitcast i32* %11 to %"class.WTF::Vector.2101"*
  %13 = icmp ult i32 %5, %10
  br i1 %13, label %14, label %30

14:                                               ; preds = %7, %23
  %15 = phi i32 [ %27, %23 ], [ %5, %7 ]
  %16 = phi i32 [ %28, %23 ], [ %5, %7 ]
  %17 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %12, i32 %16) #14
  %18 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %15, -1
  %21 = add i32 %20, %19
  %22 = icmp ult i32 %21, %1
  br i1 %22, label %23, label %30

23:                                               ; preds = %14
  %24 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"* %12, i32 %16) #14
  %25 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, %15
  %28 = add i32 %16, 1
  %29 = icmp eq i32 %28, %10
  br i1 %29, label %30, label %14

30:                                               ; preds = %14, %23, %2, %7
  %31 = phi i32 [ %1, %2 ], [ %5, %7 ], [ %16, %14 ], [ %10, %23 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn240_NK5blink11LayoutTable22RecalcSectionsIfNeededEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 14, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to i16*
  %5 = load i16, i16* %4, align 8
  %6 = trunc i16 %5 to i8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::Vector.1624"* %2 to %"class.blink::LayoutTable"*
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %9) #14
  br label %10

10:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn240_N5blink11LayoutTable19ForceSectionsRecalcEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = bitcast %"class.WTF::Vector.1624"* %2 to %"class.blink::LayoutTable"*
  tail call void @_ZN5blink11LayoutTable19ForceSectionsRecalcEv(%"class.blink::LayoutTable"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn240_NK5blink11LayoutTable28RowOffsetFromRepeatingFooterEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 16
  %4 = bitcast %"class.WTF::Vector.1624"* %3 to i32*
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn240_NK5blink11LayoutTable28RowOffsetFromRepeatingHeaderEv(%"class.blink::LayoutTable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 -1, i32 0, i32 0, i32 8
  %3 = getelementptr inbounds %"class.WTF::Vector.1624", %"class.WTF::Vector.1624"* %2, i64 15, i32 0, i32 1, i64 4
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #6 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #14
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !2

23:                                               ; preds = %19
  %24 = bitcast %class.anon* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #14
  %25 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #14
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), %class.anon* nonnull dereferenceable(16) %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #14
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #14
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #14
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #14
  %20 = tail call i8* @_Znwm(i64 192) #15
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #14
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #14
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #14
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #14
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #14
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #14
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #14
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #14
  %38 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #14
  %40 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #14
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #14
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #14
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #14
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #14
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #14
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #15
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #14
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !127

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !128

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !129

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #15
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #15, !noalias !130
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !130
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #15
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #10

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #11

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #10

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink18LayoutTableSection17GroupShouldRepeatEv(%"class.blink::LayoutTableSection"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #1

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #1

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox26AddVisualOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutSize"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutSize"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink18LayoutTableSection11RecalcCellsEv(%"class.blink::LayoutTableSection"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2120"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2120", %"class.WTF::Vector.2120"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.2120", %"class.WTF::Vector.2120"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %24, i64 %25
  ret %"struct.blink::LayoutTableSection::TableGridRow"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2123"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2123", %"class.WTF::Vector.2123"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.2123", %"class.WTF::Vector.2123"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %24, i64 %25
  ret %"class.blink::TableGridCell"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2126"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2126", %"class.WTF::Vector.2126"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.2126", %"class.WTF::Vector.2126"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %24, i64 %25
  ret %"class.blink::LayoutTableCell"** %26
}

declare i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #1

declare i32 @_ZNK5blink15LayoutTableCell19ParseColSpanFromDOMEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #1

declare void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #1

declare i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2120"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2120", %"class.WTF::Vector.2120"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.2120", %"class.WTF::Vector.2120"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %24, i64 %25
  ret %"struct.blink::LayoutTableSection::TableGridRow"* %26
}

declare zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2106"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2101"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2101", %"class.WTF::Vector.2101"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.2101", %"class.WTF::Vector.2101"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %24, i64 %25
  ret %"struct.blink::LayoutTable::ColumnStruct"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN5blink25TableLayoutAlgorithmFixedC1EPNS_11LayoutTableE(%"class.blink::TableLayoutAlgorithmFixed"*, %"class.blink::LayoutTable"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

declare void @_ZN5blink24TableLayoutAlgorithmAutoC1EPNS_11LayoutTableE(%"class.blink::TableLayoutAlgorithmAuto"*, %"class.blink::LayoutTable"*) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2110"*, %"class.blink::LayoutTableCaption"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2110", %"class.WTF::Vector.2110"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2110", %"class.WTF::Vector.2110"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutTableCaption"**, %"class.blink::LayoutTableCaption"*** %6, align 8
  %8 = icmp ugt %"class.blink::LayoutTableCaption"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %7, i64 %10
  %12 = icmp ugt %"class.blink::LayoutTableCaption"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2110", %"class.WTF::Vector.2110"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::LayoutTableCaption"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink18LayoutTableCaptionEEEmm(i64 %26) #14
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink18LayoutTableCaptionEEEPKcv, i64 0, i64 0)) #14
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2110"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::LayoutTableCaption"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::LayoutTableCaption"**, %"class.blink::LayoutTableCaption"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::LayoutTableCaption"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::LayoutTableCaption"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #14
  %47 = bitcast %"class.WTF::Vector.2110"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #14
  %51 = bitcast %"class.WTF::Vector.2110"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::LayoutTableCaption"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::LayoutTableCaption"** %1 to i64
  %56 = ptrtoint %"class.blink::LayoutTableCaption"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.2110", %"class.WTF::Vector.2110"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::LayoutTableCaption"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink18LayoutTableCaptionEEEmm(i64 %71) #14
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink18LayoutTableCaptionEEEPKcv, i64 0, i64 0)) #14
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2110"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::LayoutTableCaption"**, %"class.blink::LayoutTableCaption"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::LayoutTableCaption"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::LayoutTableCaption"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #14
  %87 = bitcast %"class.WTF::Vector.2110"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #14
  %91 = bitcast %"class.WTF::Vector.2110"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::LayoutTableCaption"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::LayoutTableCaption"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::LayoutTableCaption"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::LayoutTableCaption"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %100, i64 %103
  %105 = bitcast %"class.blink::LayoutTableCaption"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::LayoutTableCaption"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink18LayoutTableCaptionEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink14LayoutTableColEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::LayoutTableCaption"** @_ZN3WTF6VectorIPN5blink18LayoutTableCaptionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2110"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2110", %"class.WTF::Vector.2110"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.2110", %"class.WTF::Vector.2110"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutTableCaption"**, %"class.blink::LayoutTableCaption"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutTableCaption"*, %"class.blink::LayoutTableCaption"** %24, i64 %25
  ret %"class.blink::LayoutTableCaption"** %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2106"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.2106", %"class.WTF::Vector.2106"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11LayoutTable12ColumnStructEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.2101"*, i32* dereferenceable(4)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2101", %"class.WTF::Vector.2101"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2101", %"class.WTF::Vector.2101"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.2101", %"class.WTF::Vector.2101"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %16, align 8
  br i1 %15, label %18, label %45, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq %"struct.blink::LayoutTable::ColumnStruct"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11LayoutTable12ColumnStructEEEmm(i64 %20) #14
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11LayoutTable12ColumnStructEEEPKcv, i64 0, i64 0)) #14
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.2101"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"struct.blink::LayoutTable::ColumnStruct"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"struct.blink::LayoutTable::ColumnStruct"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !2

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* nonnull align 4 %31, i64 %35, i1 false) #14
  %36 = bitcast %"class.WTF::Vector.2101"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #14
  %40 = bitcast %"class.WTF::Vector.2101"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 2
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"struct.blink::LayoutTable::ColumnStruct"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"struct.blink::LayoutTable::ColumnStruct"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = load i32, i32* %1, align 4
  %50 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %46, i64 %48, i32 0
  store i32 %49, i32* %50, align 4
  %51 = load i32, i32* %3, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink14LayoutTableColELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2115"*, %"class.blink::LayoutTableCol"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2115", %"class.WTF::Vector.2115"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2115", %"class.WTF::Vector.2115"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutTableCol"**, %"class.blink::LayoutTableCol"*** %6, align 8
  %8 = icmp ugt %"class.blink::LayoutTableCol"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %7, i64 %10
  %12 = icmp ugt %"class.blink::LayoutTableCol"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2115", %"class.WTF::Vector.2115"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::LayoutTableCol"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink14LayoutTableColEEEmm(i64 %26) #14
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14LayoutTableColEEEPKcv, i64 0, i64 0)) #14
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2115"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::LayoutTableCol"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::LayoutTableCol"**, %"class.blink::LayoutTableCol"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::LayoutTableCol"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::LayoutTableCol"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #14
  %47 = bitcast %"class.WTF::Vector.2115"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #14
  %51 = bitcast %"class.WTF::Vector.2115"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::LayoutTableCol"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::LayoutTableCol"** %1 to i64
  %56 = ptrtoint %"class.blink::LayoutTableCol"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.2115", %"class.WTF::Vector.2115"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::LayoutTableCol"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink14LayoutTableColEEEmm(i64 %71) #14
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14LayoutTableColEEEPKcv, i64 0, i64 0)) #14
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2115"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::LayoutTableCol"**, %"class.blink::LayoutTableCol"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::LayoutTableCol"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::LayoutTableCol"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #14
  %87 = bitcast %"class.WTF::Vector.2115"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #14
  %91 = bitcast %"class.WTF::Vector.2115"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::LayoutTableCol"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::LayoutTableCol"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::LayoutTableCol"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::LayoutTableCol"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %100, i64 %103
  %105 = bitcast %"class.blink::LayoutTableCol"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::LayoutTableCol"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::LayoutTableCol"** @_ZN3WTF6VectorIPN5blink14LayoutTableColELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2115"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2115", %"class.WTF::Vector.2115"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.2115", %"class.WTF::Vector.2115"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutTableCol"**, %"class.blink::LayoutTableCol"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %24, i64 %25
  ret %"class.blink::LayoutTableCol"** %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind readnone }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !9}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = distinct !{!19, !9}
!20 = !{!"branch_weights", i32 1, i32 2000}
!21 = !{i8 0, i8 2}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!24 = distinct !{!24, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!27 = distinct !{!27, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!30 = distinct !{!30, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!33 = distinct !{!33, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!36 = distinct !{!36, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!39 = distinct !{!39, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!42 = distinct !{!42, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!45 = distinct !{!45, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!48 = distinct !{!48, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!51 = distinct !{!51, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!54 = distinct !{!54, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!57 = distinct !{!57, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!60 = distinct !{!60, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!63 = distinct !{!63, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!66 = distinct !{!66, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!69 = distinct !{!69, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!72 = distinct !{!72, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!75 = distinct !{!75, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZN5blink6Length4AutoEv: argument 0"}
!78 = distinct !{!78, !"_ZN5blink6Length4AutoEv"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!81 = distinct !{!81, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!84 = distinct !{!84, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!87 = distinct !{!87, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj: argument 0"}
!90 = distinct !{!90, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj"}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!93 = distinct !{!93, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!94 = !{!"branch_weights", i32 1, i32 4001}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj: argument 0"}
!97 = distinct !{!97, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj"}
!98 = !{!"branch_weights", i32 4001, i32 4000000}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!101 = distinct !{!101, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!104 = distinct !{!104, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!105 = distinct !{!105, !9}
!106 = distinct !{!106, !18}
!107 = distinct !{!107, !108, !9}
!108 = !{!"llvm.loop.unroll.runtime.disable"}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZNK5blink11LayoutTable37LogicalCollapsedOuterBorderToPhysicalEv: argument 0"}
!111 = distinct !{!111, !"_ZNK5blink11LayoutTable37LogicalCollapsedOuterBorderToPhysicalEv"}
!112 = !{!113}
!113 = distinct !{!113, !114, !"_ZNK5blink11LayoutTable37LogicalCollapsedOuterBorderToPhysicalEv: argument 0"}
!114 = distinct !{!114, !"_ZNK5blink11LayoutTable37LogicalCollapsedOuterBorderToPhysicalEv"}
!115 = !{!116}
!116 = distinct !{!116, !117, !"_ZNK5blink11LayoutTable37LogicalCollapsedOuterBorderToPhysicalEv: argument 0"}
!117 = distinct !{!117, !"_ZNK5blink11LayoutTable37LogicalCollapsedOuterBorderToPhysicalEv"}
!118 = !{!119}
!119 = distinct !{!119, !120, !"_ZNK5blink11LayoutTable37LogicalCollapsedOuterBorderToPhysicalEv: argument 0"}
!120 = distinct !{!120, !"_ZNK5blink11LayoutTable37LogicalCollapsedOuterBorderToPhysicalEv"}
!121 = !{!122}
!122 = distinct !{!122, !123, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!123 = distinct !{!123, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!124 = !{!125}
!125 = distinct !{!125, !126, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!126 = distinct !{!126, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!127 = distinct !{!127, !18}
!128 = distinct !{!128, !18}
!129 = distinct !{!129, !18}
!130 = !{!131}
!131 = distinct !{!131, !132, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!132 = distinct !{!132, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
