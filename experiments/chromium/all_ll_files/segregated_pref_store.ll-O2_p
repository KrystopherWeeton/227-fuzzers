; ModuleID = '../../components/prefs/segregated_pref_store.cc'
source_filename = "../../components/prefs/segregated_pref_store.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SegregatedPrefStore::UnderlyingPrefStoreObserver" = type <{ %"class.PrefStore::Observer", %class.SegregatedPrefStore*, i8, [7 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.SegregatedPrefStore = type { %class.PersistentPrefStore.base, %class.scoped_refptr, %class.scoped_refptr, %"class.std::__1::set", %"class.std::__1::unique_ptr", %"class.base::ObserverList", %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver", %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver" }
%class.PersistentPrefStore.base = type { %class.WriteablePrefStore.base }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.PersistentPrefStore::ReadErrorDelegate"* }
%"class.PersistentPrefStore::ReadErrorDelegate" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.17" }
%"union.absl::variant_internal::DestructibleUnionImpl.17" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"union.absl::variant_internal::DestructibleUnionImpl.19" }
%"union.absl::variant_internal::DestructibleUnionImpl.19" = type { %"union.absl::variant_internal::DestructibleUnionImpl.20" }
%"union.absl::variant_internal::DestructibleUnionImpl.20" = type { %"class.std::__1::basic_string" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.base::Value"* }
%class.WriteablePrefStore = type { %class.PrefStore.base, [4 x i8] }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.57 }
%class.scoped_refptr.57 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>

$_ZN9PrefStore8ObserverD2Ev = comdat any

$_ZN19SegregatedPrefStore27UnderlyingPrefStoreObserverD0Ev = comdat any

$_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

@_ZTVN19SegregatedPrefStore27UnderlyingPrefStoreObserverE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"*, %"class.std::__1::basic_string"*)* @_ZN19SegregatedPrefStore27UnderlyingPrefStoreObserver18OnPrefValueChangedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"*, i1)* @_ZN19SegregatedPrefStore27UnderlyingPrefStoreObserver25OnInitializationCompletedEb to i8*), i8* bitcast (void (%"class.PrefStore::Observer"*)* @_ZN9PrefStore8ObserverD2Ev to i8*), i8* bitcast (void (%"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"*)* @_ZN19SegregatedPrefStore27UnderlyingPrefStoreObserverD0Ev to i8*)] }, align 8
@_ZTV19SegregatedPrefStore = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SegregatedPrefStore*, %"class.PrefStore::Observer"*)* @_ZN19SegregatedPrefStore11AddObserverEPN9PrefStore8ObserverE to i8*), i8* bitcast (void (%class.SegregatedPrefStore*, %"class.PrefStore::Observer"*)* @_ZN19SegregatedPrefStore14RemoveObserverEPN9PrefStore8ObserverE to i8*), i8* bitcast (i1 (%class.SegregatedPrefStore*)* @_ZNK19SegregatedPrefStore12HasObserversEv to i8*), i8* bitcast (i1 (%class.SegregatedPrefStore*)* @_ZNK19SegregatedPrefStore24IsInitializationCompleteEv to i8*), i8* bitcast (i1 (%class.SegregatedPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)* @_ZNK19SegregatedPrefStore8GetValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPPKN4base5ValueE to i8*), i8* bitcast (%"class.base::DictionaryValue"* (%class.SegregatedPrefStore*)* @_ZNK19SegregatedPrefStore9GetValuesEv to i8*), i8* bitcast (void (%class.SegregatedPrefStore*)* @_ZN19SegregatedPrefStoreD2Ev to i8*), i8* bitcast (void (%class.SegregatedPrefStore*)* @_ZN19SegregatedPrefStoreD0Ev to i8*), i8* bitcast (void (%class.SegregatedPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)* @_ZN19SegregatedPrefStore8SetValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10unique_ptrIN4base5ValueENS0_14default_deleteISB_EEEEj to i8*), i8* bitcast (void (%class.SegregatedPrefStore*, %"class.std::__1::basic_string"*, i32)* @_ZN19SegregatedPrefStore11RemoveValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj to i8*), i8* bitcast (i1 (%class.SegregatedPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)* @_ZN19SegregatedPrefStore15GetMutableValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPPN4base5ValueE to i8*), i8* bitcast (void (%class.SegregatedPrefStore*, %"class.std::__1::basic_string"*, i32)* @_ZN19SegregatedPrefStore18ReportValueChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj to i8*), i8* bitcast (void ()* @_ZN18WriteablePrefStore22ReportSubValuesChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_3setINS0_6vectorIS6_NS4_IS6_EEEENS0_4lessISC_EENS4_ISC_EEEEj to i8*), i8* bitcast (void (%class.SegregatedPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)* @_ZN19SegregatedPrefStore16SetValueSilentlyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10unique_ptrIN4base5ValueENS0_14default_deleteISB_EEEEj to i8*), i8* bitcast (void (%class.SegregatedPrefStore*, %"class.std::__1::basic_string"*)* @_ZN19SegregatedPrefStore28RemoveValuesByPrefixSilentlyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%class.SegregatedPrefStore*)* @_ZNK19SegregatedPrefStore8ReadOnlyEv to i8*), i8* bitcast (i32 (%class.SegregatedPrefStore*)* @_ZNK19SegregatedPrefStore12GetReadErrorEv to i8*), i8* bitcast (i32 (%class.SegregatedPrefStore*)* @_ZN19SegregatedPrefStore9ReadPrefsEv to i8*), i8* bitcast (void (%class.SegregatedPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)* @_ZN19SegregatedPrefStore14ReadPrefsAsyncEPN19PersistentPrefStore17ReadErrorDelegateE to i8*), i8* bitcast (void (%class.SegregatedPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)* @_ZN19SegregatedPrefStore18CommitPendingWriteEN4base12OnceCallbackIFvvEEES3_ to i8*), i8* bitcast (void (%class.SegregatedPrefStore*)* @_ZN19SegregatedPrefStore26SchedulePendingLossyWritesEv to i8*), i8* bitcast (void (%class.SegregatedPrefStore*)* @_ZN19SegregatedPrefStore18ClearMutableValuesEv to i8*), i8* bitcast (void (%class.SegregatedPrefStore*)* @_ZN19SegregatedPrefStore23OnStoreDeletionFromDiskEv to i8*), i8* bitcast (i1 (%class.PersistentPrefStore*)* @_ZNK19PersistentPrefStore19IsInMemoryPrefStoreEv to i8*)] }, align 8

@_ZN19SegregatedPrefStore27UnderlyingPrefStoreObserverC1EPS_ = hidden unnamed_addr alias void (%"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"*, %class.SegregatedPrefStore*), void (%"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"*, %class.SegregatedPrefStore*)* @_ZN19SegregatedPrefStore27UnderlyingPrefStoreObserverC2EPS_
@_ZN19SegregatedPrefStoreC1E13scoped_refptrI19PersistentPrefStoreES2_NSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEE = hidden unnamed_addr alias void (%class.SegregatedPrefStore*, %class.PersistentPrefStore*, %class.PersistentPrefStore*, %"class.std::__1::set"*), void (%class.SegregatedPrefStore*, %class.PersistentPrefStore*, %class.PersistentPrefStore*, %"class.std::__1::set"*)* @_ZN19SegregatedPrefStoreC2E13scoped_refptrI19PersistentPrefStoreES2_NSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEE
@_ZN19SegregatedPrefStoreD1Ev = hidden unnamed_addr alias void (%class.SegregatedPrefStore*), void (%class.SegregatedPrefStore*)* @_ZN19SegregatedPrefStoreD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN19SegregatedPrefStore27UnderlyingPrefStoreObserverC2EPS_(%"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* nocapture, %class.SegregatedPrefStore*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver", %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN19SegregatedPrefStore27UnderlyingPrefStoreObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver", %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* %0, i64 0, i32 1
  store %class.SegregatedPrefStore* %1, %class.SegregatedPrefStore** %4, align 8
  %5 = getelementptr inbounds %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver", %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStore27UnderlyingPrefStoreObserver18OnPrefValueChangedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver", %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* %0, i64 0, i32 1
  %6 = load %class.SegregatedPrefStore*, %class.SegregatedPrefStore** %5, align 8
  %7 = bitcast %class.SegregatedPrefStore* %6 to i1 (%class.SegregatedPrefStore*)***
  %8 = load i1 (%class.SegregatedPrefStore*)**, i1 (%class.SegregatedPrefStore*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.SegregatedPrefStore*)*, i1 (%class.SegregatedPrefStore*)** %8, i64 3
  %10 = load i1 (%class.SegregatedPrefStore*)*, i1 (%class.SegregatedPrefStore*)** %9, align 8
  %11 = tail call zeroext i1 %10(%class.SegregatedPrefStore* %6) #13
  br i1 %11, label %12, label %346

12:                                               ; preds = %2
  %13 = load %class.SegregatedPrefStore*, %class.SegregatedPrefStore** %5, align 8
  %14 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %13, i64 0, i32 5
  %15 = bitcast %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %19 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %14, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 40, i1 false)
  %21 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %19, align 8, !noalias !2
  %22 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %13, i64 0, i32 5, i32 0, i32 0, i32 1
  %23 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %22, align 8, !noalias !2
  %24 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %23
  %25 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %25) #13
  br i1 %24, label %26, label %28

26:                                               ; preds = %12
  %27 = bitcast %"class.base::ObserverList"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #13, !alias.scope !2
  br label %68

28:                                               ; preds = %12
  store %"class.base::ObserverList"* %14, %"class.base::ObserverList"** %16, align 8
  %29 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %13, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %25, %"class.base::internal::LinkNodeBase"* %29) #13
  store i64 0, i64* %17, align 8
  %30 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %13, i64 0, i32 5, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %22 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.base::ObserverList"* %14 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  br label %40

40:                                               ; preds = %33, %28
  %41 = phi i64 [ %39, %33 ], [ -1, %28 ]
  store i64 %41, i64* %18, align 8
  %42 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %16, align 8
  %43 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %42, i64 0, i32 0, i32 0, i32 1
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.base::ObserverList"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = ashr exact i64 %48, 3
  %50 = icmp ult i64 %49, %41
  %51 = select i1 %50, i64 %49, i64 %41
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %68, label %53

53:                                               ; preds = %40
  %54 = inttoptr i64 %47 to %"class.base::internal::UncheckedObserverAdapter"*
  %55 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %42, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %54, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %59, label %68

59:                                               ; preds = %53, %63
  %60 = phi i64 [ %61, %63 ], [ 0, %53 ]
  %61 = add nuw i64 %60, 1
  store i64 %61, i64* %17, align 8
  %62 = icmp ult i64 %61, %51
  br i1 %62, label %63, label %68

63:                                               ; preds = %59
  %64 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %55, align 8
  %65 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %64, i64 %61, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %59, label %68

68:                                               ; preds = %63, %59, %53, %40, %26
  %69 = bitcast %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %69) #13
  %70 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %72 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %73 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %73) #13
  %75 = bitcast %"class.base::ObserverList"** %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #13, !alias.scope !5
  %76 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %16, align 8
  br label %77

77:                                               ; preds = %316, %68
  %78 = phi %"class.base::ObserverList"* [ %76, %68 ], [ %314, %316 ]
  %79 = icmp eq %"class.base::ObserverList"* %78, null
  br i1 %79, label %95, label %80

80:                                               ; preds = %77
  %81 = load i64, i64* %17, align 8
  %82 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %78, i64 0, i32 0, i32 0, i32 1
  %83 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.base::ObserverList"* %78 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %84, %86
  %88 = ashr exact i64 %87, 3
  %89 = load i64, i64* %18, align 8
  %90 = icmp ult i64 %88, %89
  %91 = select i1 %90, i64 %88, i64 %89
  %92 = icmp eq i64 %81, %91
  br i1 %92, label %95, label %93

93:                                               ; preds = %80
  %94 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %70, align 8
  br label %111

95:                                               ; preds = %80, %77
  %96 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %70, align 8
  %97 = icmp eq %"class.base::ObserverList"* %96, null
  br i1 %97, label %211, label %98

98:                                               ; preds = %95
  %99 = load i64, i64* %71, align 8
  %100 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %96, i64 0, i32 0, i32 0, i32 1
  %101 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.base::ObserverList"* %96 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = sub i64 %102, %104
  %106 = ashr exact i64 %105, 3
  %107 = load i64, i64* %72, align 8
  %108 = icmp ult i64 %106, %107
  %109 = select i1 %108, i64 %106, i64 %107
  %110 = icmp eq i64 %99, %109
  br i1 %110, label %120, label %111

111:                                              ; preds = %98, %93
  %112 = phi %"class.base::ObserverList"* [ %94, %93 ], [ %96, %98 ]
  %113 = icmp eq %"class.base::ObserverList"* %78, %112
  %114 = load i64, i64* %17, align 8
  %115 = load i64, i64* %71, align 8
  %116 = icmp eq i64 %114, %115
  %117 = and i1 %113, %116
  br i1 %117, label %118, label %305

118:                                              ; preds = %111
  %119 = icmp eq %"class.base::ObserverList"* %78, null
  br i1 %119, label %211, label %120

120:                                              ; preds = %98, %118
  %121 = phi %"class.base::ObserverList"* [ %78, %118 ], [ %96, %98 ]
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %121, i64 0, i32 1
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %121, i64 0, i32 1, i32 0, i32 0, i32 1
  %124 = bitcast %"class.base::internal::LinkNodeBase"** %123 to %"class.base::LinkNode"**
  %125 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %124, align 8
  %126 = bitcast %"class.base::LinkedList"* %122 to %"class.base::LinkNode"**
  %127 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %126, align 8
  %128 = icmp eq %"class.base::LinkNode"* %125, %127
  br i1 %128, label %129, label %207

129:                                              ; preds = %120
  %130 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %121, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %130, align 8
  %132 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %121, i64 0, i32 0, i32 0, i32 1
  %133 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %132, align 8
  %134 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %131, %133
  br i1 %134, label %143, label %135

135:                                              ; preds = %129, %140
  %136 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %141, %140 ], [ %131, %129 ]
  %137 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %136, i64 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = icmp eq i8* %138, null
  br i1 %139, label %143, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %136, i64 1
  %142 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %141, %133
  br i1 %142, label %207, label %135

143:                                              ; preds = %135, %129
  %144 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %131, %129 ], [ %136, %135 ]
  %145 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %144 to i64
  %146 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %144, %133
  br i1 %146, label %207, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %144, i64 1
  %149 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %148, %133
  br i1 %149, label %202, label %150

150:                                              ; preds = %147
  %151 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %133, i64 -2, i32 0
  %152 = ptrtoint i8** %151 to i64
  %153 = sub i64 %152, %145
  %154 = lshr i64 %153, 3
  %155 = add nuw nsw i64 %154, 1
  %156 = and i64 %155, 3
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %176, label %158

158:                                              ; preds = %150, %171
  %159 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %173, %171 ], [ %148, %150 ]
  %160 = phi i64 [ %172, %171 ], [ %145, %150 ]
  %161 = phi i64 [ %174, %171 ], [ %156, %150 ]
  %162 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %159, i64 0, i32 0
  %163 = load i8*, i8** %162, align 8
  %164 = icmp eq i8* %163, null
  br i1 %164, label %171, label %165

165:                                              ; preds = %158
  %166 = ptrtoint i8* %163 to i64
  %167 = inttoptr i64 %160 to %"class.base::internal::UncheckedObserverAdapter"*
  %168 = inttoptr i64 %160 to i64*
  store i64 %166, i64* %168, align 8
  %169 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %167, i64 1
  %170 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %169 to i64
  br label %171

171:                                              ; preds = %165, %158
  %172 = phi i64 [ %160, %158 ], [ %170, %165 ]
  %173 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %159, i64 1
  %174 = add i64 %161, -1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %158, !llvm.loop !8

176:                                              ; preds = %171, %150
  %177 = phi i64 [ undef, %150 ], [ %172, %171 ]
  %178 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %148, %150 ], [ %173, %171 ]
  %179 = phi i64 [ %145, %150 ], [ %172, %171 ]
  %180 = icmp ult i64 %153, 24
  br i1 %180, label %198, label %181

181:                                              ; preds = %176, %407
  %182 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %409, %407 ], [ %178, %176 ]
  %183 = phi i64 [ %408, %407 ], [ %179, %176 ]
  %184 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %182, i64 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = icmp eq i8* %185, null
  br i1 %186, label %193, label %187

187:                                              ; preds = %181
  %188 = ptrtoint i8* %185 to i64
  %189 = inttoptr i64 %183 to %"class.base::internal::UncheckedObserverAdapter"*
  %190 = inttoptr i64 %183 to i64*
  store i64 %188, i64* %190, align 8
  %191 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %189, i64 1
  %192 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %191 to i64
  br label %193

193:                                              ; preds = %187, %181
  %194 = phi i64 [ %183, %181 ], [ %192, %187 ]
  %195 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %182, i64 1, i32 0
  %196 = load i8*, i8** %195, align 8
  %197 = icmp eq i8* %196, null
  br i1 %197, label %385, label %379

198:                                              ; preds = %407, %176
  %199 = phi i64 [ %177, %176 ], [ %408, %407 ]
  %200 = inttoptr i64 %199 to %"class.base::internal::UncheckedObserverAdapter"*
  %201 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %132, align 8
  br label %202

202:                                              ; preds = %198, %147
  %203 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %133, %147 ], [ %201, %198 ]
  %204 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %144, %147 ], [ %200, %198 ]
  %205 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %204, %203
  br i1 %205, label %207, label %206

206:                                              ; preds = %202
  store %"class.base::internal::UncheckedObserverAdapter"* %204, %"class.base::internal::UncheckedObserverAdapter"** %132, align 8
  br label %207

207:                                              ; preds = %140, %206, %202, %143, %120
  %208 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %70, align 8
  %209 = icmp eq %"class.base::ObserverList"* %208, null
  br i1 %209, label %211, label %210

210:                                              ; preds = %207
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %70, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %73) #13
  br label %211

211:                                              ; preds = %95, %118, %207, %210
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %69) #13
  %212 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %16, align 8
  %213 = icmp eq %"class.base::ObserverList"* %212, null
  br i1 %213, label %304, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %212, i64 0, i32 1
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %212, i64 0, i32 1, i32 0, i32 0, i32 1
  %217 = bitcast %"class.base::internal::LinkNodeBase"** %216 to %"class.base::LinkNode"**
  %218 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %217, align 8
  %219 = bitcast %"class.base::LinkedList"* %215 to %"class.base::LinkNode"**
  %220 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %219, align 8
  %221 = icmp eq %"class.base::LinkNode"* %218, %220
  br i1 %221, label %222, label %300

222:                                              ; preds = %214
  %223 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %212, i64 0, i32 0, i32 0, i32 0
  %224 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %223, align 8
  %225 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %212, i64 0, i32 0, i32 0, i32 1
  %226 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %225, align 8
  %227 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %224, %226
  br i1 %227, label %236, label %228

228:                                              ; preds = %222, %233
  %229 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %234, %233 ], [ %224, %222 ]
  %230 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %229, i64 0, i32 0
  %231 = load i8*, i8** %230, align 8
  %232 = icmp eq i8* %231, null
  br i1 %232, label %236, label %233

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %229, i64 1
  %235 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %234, %226
  br i1 %235, label %300, label %228

236:                                              ; preds = %228, %222
  %237 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %224, %222 ], [ %229, %228 ]
  %238 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %237 to i64
  %239 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %237, %226
  br i1 %239, label %300, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %237, i64 1
  %242 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %241, %226
  br i1 %242, label %295, label %243

243:                                              ; preds = %240
  %244 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %226, i64 -2, i32 0
  %245 = ptrtoint i8** %244 to i64
  %246 = sub i64 %245, %238
  %247 = lshr i64 %246, 3
  %248 = add nuw nsw i64 %247, 1
  %249 = and i64 %248, 3
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %269, label %251

251:                                              ; preds = %243, %264
  %252 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %266, %264 ], [ %241, %243 ]
  %253 = phi i64 [ %265, %264 ], [ %238, %243 ]
  %254 = phi i64 [ %267, %264 ], [ %249, %243 ]
  %255 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %252, i64 0, i32 0
  %256 = load i8*, i8** %255, align 8
  %257 = icmp eq i8* %256, null
  br i1 %257, label %264, label %258

258:                                              ; preds = %251
  %259 = ptrtoint i8* %256 to i64
  %260 = inttoptr i64 %253 to %"class.base::internal::UncheckedObserverAdapter"*
  %261 = inttoptr i64 %253 to i64*
  store i64 %259, i64* %261, align 8
  %262 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %260, i64 1
  %263 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %262 to i64
  br label %264

264:                                              ; preds = %258, %251
  %265 = phi i64 [ %253, %251 ], [ %263, %258 ]
  %266 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %252, i64 1
  %267 = add i64 %254, -1
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %251, !llvm.loop !10

269:                                              ; preds = %264, %243
  %270 = phi i64 [ undef, %243 ], [ %265, %264 ]
  %271 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %241, %243 ], [ %266, %264 ]
  %272 = phi i64 [ %238, %243 ], [ %265, %264 ]
  %273 = icmp ult i64 %246, 24
  br i1 %273, label %291, label %274

274:                                              ; preds = %269, %375
  %275 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %377, %375 ], [ %271, %269 ]
  %276 = phi i64 [ %376, %375 ], [ %272, %269 ]
  %277 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %275, i64 0, i32 0
  %278 = load i8*, i8** %277, align 8
  %279 = icmp eq i8* %278, null
  br i1 %279, label %286, label %280

280:                                              ; preds = %274
  %281 = ptrtoint i8* %278 to i64
  %282 = inttoptr i64 %276 to %"class.base::internal::UncheckedObserverAdapter"*
  %283 = inttoptr i64 %276 to i64*
  store i64 %281, i64* %283, align 8
  %284 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %282, i64 1
  %285 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %284 to i64
  br label %286

286:                                              ; preds = %280, %274
  %287 = phi i64 [ %276, %274 ], [ %285, %280 ]
  %288 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %275, i64 1, i32 0
  %289 = load i8*, i8** %288, align 8
  %290 = icmp eq i8* %289, null
  br i1 %290, label %353, label %347

291:                                              ; preds = %375, %269
  %292 = phi i64 [ %270, %269 ], [ %376, %375 ]
  %293 = inttoptr i64 %292 to %"class.base::internal::UncheckedObserverAdapter"*
  %294 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %225, align 8
  br label %295

295:                                              ; preds = %291, %240
  %296 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %226, %240 ], [ %294, %291 ]
  %297 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %237, %240 ], [ %293, %291 ]
  %298 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %297, %296
  br i1 %298, label %300, label %299

299:                                              ; preds = %295
  store %"class.base::internal::UncheckedObserverAdapter"* %297, %"class.base::internal::UncheckedObserverAdapter"** %225, align 8
  br label %300

300:                                              ; preds = %233, %299, %295, %236, %214
  %301 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %16, align 8
  %302 = icmp eq %"class.base::ObserverList"* %301, null
  br i1 %302, label %304, label %303

303:                                              ; preds = %300
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %16, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %25) #13
  br label %304

304:                                              ; preds = %211, %300, %303
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #13
  br label %346

305:                                              ; preds = %111
  %306 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %78, i64 0, i32 0, i32 0, i32 0
  %307 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %306, align 8
  %308 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %307, i64 %114
  %309 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %308 to %"class.PrefStore::Observer"**
  %310 = load %"class.PrefStore::Observer"*, %"class.PrefStore::Observer"** %309, align 8
  %311 = bitcast %"class.PrefStore::Observer"* %310 to void (%"class.PrefStore::Observer"*, %"class.std::__1::basic_string"*)***
  %312 = load void (%"class.PrefStore::Observer"*, %"class.std::__1::basic_string"*)**, void (%"class.PrefStore::Observer"*, %"class.std::__1::basic_string"*)*** %311, align 8
  %313 = load void (%"class.PrefStore::Observer"*, %"class.std::__1::basic_string"*)*, void (%"class.PrefStore::Observer"*, %"class.std::__1::basic_string"*)** %312, align 8
  call void %313(%"class.PrefStore::Observer"* %310, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %314 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %16, align 8
  %315 = icmp eq %"class.base::ObserverList"* %314, null
  br i1 %315, label %316, label %317

316:                                              ; preds = %341, %337, %305, %317, %331
  br label %77

317:                                              ; preds = %305
  %318 = load i64, i64* %17, align 8
  %319 = add i64 %318, 1
  store i64 %319, i64* %17, align 8
  %320 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %314, i64 0, i32 0, i32 0, i32 1
  %321 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %320 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = bitcast %"class.base::ObserverList"* %314 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = sub i64 %322, %324
  %326 = ashr exact i64 %325, 3
  %327 = load i64, i64* %18, align 8
  %328 = icmp ult i64 %326, %327
  %329 = select i1 %328, i64 %326, i64 %327
  %330 = icmp ult i64 %319, %329
  br i1 %330, label %331, label %316

331:                                              ; preds = %317
  %332 = inttoptr i64 %324 to %"class.base::internal::UncheckedObserverAdapter"*
  %333 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %314, i64 0, i32 0, i32 0, i32 0
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %332, i64 %319, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %337, label %316

337:                                              ; preds = %331, %341
  %338 = phi i64 [ %339, %341 ], [ %319, %331 ]
  %339 = add nuw i64 %338, 1
  store i64 %339, i64* %17, align 8
  %340 = icmp ult i64 %339, %329
  br i1 %340, label %341, label %316

341:                                              ; preds = %337
  %342 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %333, align 8
  %343 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %342, i64 %339, i32 0
  %344 = load i8*, i8** %343, align 8
  %345 = icmp eq i8* %344, null
  br i1 %345, label %337, label %316

346:                                              ; preds = %2, %304
  ret void

347:                                              ; preds = %286
  %348 = ptrtoint i8* %289 to i64
  %349 = inttoptr i64 %287 to %"class.base::internal::UncheckedObserverAdapter"*
  %350 = inttoptr i64 %287 to i64*
  store i64 %348, i64* %350, align 8
  %351 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 1
  %352 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %351 to i64
  br label %353

353:                                              ; preds = %347, %286
  %354 = phi i64 [ %287, %286 ], [ %352, %347 ]
  %355 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %275, i64 2, i32 0
  %356 = load i8*, i8** %355, align 8
  %357 = icmp eq i8* %356, null
  br i1 %357, label %364, label %358

358:                                              ; preds = %353
  %359 = ptrtoint i8* %356 to i64
  %360 = inttoptr i64 %354 to %"class.base::internal::UncheckedObserverAdapter"*
  %361 = inttoptr i64 %354 to i64*
  store i64 %359, i64* %361, align 8
  %362 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %360, i64 1
  %363 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %362 to i64
  br label %364

364:                                              ; preds = %358, %353
  %365 = phi i64 [ %354, %353 ], [ %363, %358 ]
  %366 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %275, i64 3, i32 0
  %367 = load i8*, i8** %366, align 8
  %368 = icmp eq i8* %367, null
  br i1 %368, label %375, label %369

369:                                              ; preds = %364
  %370 = ptrtoint i8* %367 to i64
  %371 = inttoptr i64 %365 to %"class.base::internal::UncheckedObserverAdapter"*
  %372 = inttoptr i64 %365 to i64*
  store i64 %370, i64* %372, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %371, i64 1
  %374 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %373 to i64
  br label %375

375:                                              ; preds = %369, %364
  %376 = phi i64 [ %365, %364 ], [ %374, %369 ]
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %275, i64 4
  %378 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %377, %226
  br i1 %378, label %291, label %274

379:                                              ; preds = %193
  %380 = ptrtoint i8* %196 to i64
  %381 = inttoptr i64 %194 to %"class.base::internal::UncheckedObserverAdapter"*
  %382 = inttoptr i64 %194 to i64*
  store i64 %380, i64* %382, align 8
  %383 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %381, i64 1
  %384 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %383 to i64
  br label %385

385:                                              ; preds = %379, %193
  %386 = phi i64 [ %194, %193 ], [ %384, %379 ]
  %387 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %182, i64 2, i32 0
  %388 = load i8*, i8** %387, align 8
  %389 = icmp eq i8* %388, null
  br i1 %389, label %396, label %390

390:                                              ; preds = %385
  %391 = ptrtoint i8* %388 to i64
  %392 = inttoptr i64 %386 to %"class.base::internal::UncheckedObserverAdapter"*
  %393 = inttoptr i64 %386 to i64*
  store i64 %391, i64* %393, align 8
  %394 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %392, i64 1
  %395 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %394 to i64
  br label %396

396:                                              ; preds = %390, %385
  %397 = phi i64 [ %386, %385 ], [ %395, %390 ]
  %398 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %182, i64 3, i32 0
  %399 = load i8*, i8** %398, align 8
  %400 = icmp eq i8* %399, null
  br i1 %400, label %407, label %401

401:                                              ; preds = %396
  %402 = ptrtoint i8* %399 to i64
  %403 = inttoptr i64 %397 to %"class.base::internal::UncheckedObserverAdapter"*
  %404 = inttoptr i64 %397 to i64*
  store i64 %402, i64* %404, align 8
  %405 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %403, i64 1
  %406 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %405 to i64
  br label %407

407:                                              ; preds = %401, %396
  %408 = phi i64 [ %397, %396 ], [ %406, %401 ]
  %409 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %182, i64 4
  %410 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %409, %133
  br i1 %410, label %198, label %181
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStore27UnderlyingPrefStoreObserver25OnInitializationCompletedEb(%"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* nocapture, i1 zeroext) unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = zext i1 %1 to i8
  %6 = getelementptr inbounds %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver", %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* %0, i64 0, i32 2
  store i8 %5, i8* %6, align 8
  %7 = getelementptr inbounds %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver", %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* %0, i64 0, i32 1
  %8 = load %class.SegregatedPrefStore*, %class.SegregatedPrefStore** %7, align 8
  %9 = bitcast %class.SegregatedPrefStore* %8 to i1 (%class.SegregatedPrefStore*)***
  %10 = load i1 (%class.SegregatedPrefStore*)**, i1 (%class.SegregatedPrefStore*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%class.SegregatedPrefStore*)*, i1 (%class.SegregatedPrefStore*)** %10, i64 3
  %12 = load i1 (%class.SegregatedPrefStore*)*, i1 (%class.SegregatedPrefStore*)** %11, align 8
  %13 = tail call zeroext i1 %12(%class.SegregatedPrefStore* %8) #13
  br i1 %13, label %14, label %379

14:                                               ; preds = %2
  %15 = load %class.SegregatedPrefStore*, %class.SegregatedPrefStore** %7, align 8
  %16 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.PersistentPrefStore::ReadErrorDelegate"*, %"class.PersistentPrefStore::ReadErrorDelegate"** %16, align 8
  %18 = icmp eq %"class.PersistentPrefStore::ReadErrorDelegate"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  %20 = bitcast %class.SegregatedPrefStore* %15 to i32 (%class.SegregatedPrefStore*)***
  %21 = load i32 (%class.SegregatedPrefStore*)**, i32 (%class.SegregatedPrefStore*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%class.SegregatedPrefStore*)*, i32 (%class.SegregatedPrefStore*)** %21, i64 16
  %23 = load i32 (%class.SegregatedPrefStore*)*, i32 (%class.SegregatedPrefStore*)** %22, align 8
  %24 = tail call i32 %23(%class.SegregatedPrefStore* %15) #13
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %19
  %27 = load %class.SegregatedPrefStore*, %class.SegregatedPrefStore** %7, align 8
  %28 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %27, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"class.PersistentPrefStore::ReadErrorDelegate"*, %"class.PersistentPrefStore::ReadErrorDelegate"** %28, align 8
  %30 = bitcast %"class.PersistentPrefStore::ReadErrorDelegate"* %29 to void (%"class.PersistentPrefStore::ReadErrorDelegate"*, i32)***
  %31 = load void (%"class.PersistentPrefStore::ReadErrorDelegate"*, i32)**, void (%"class.PersistentPrefStore::ReadErrorDelegate"*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.PersistentPrefStore::ReadErrorDelegate"*, i32)*, void (%"class.PersistentPrefStore::ReadErrorDelegate"*, i32)** %31, i64 2
  %33 = load void (%"class.PersistentPrefStore::ReadErrorDelegate"*, i32)*, void (%"class.PersistentPrefStore::ReadErrorDelegate"*, i32)** %32, align 8
  tail call void %33(%"class.PersistentPrefStore::ReadErrorDelegate"* %29, i32 %24) #13
  br label %34

34:                                               ; preds = %14, %26, %19
  %35 = load %class.SegregatedPrefStore*, %class.SegregatedPrefStore** %7, align 8
  %36 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %35, i64 0, i32 5
  %37 = bitcast %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %37) #13
  %38 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %40 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %41 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %36, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 40, i1 false)
  %43 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %41, align 8, !noalias !11
  %44 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %35, i64 0, i32 5, i32 0, i32 0, i32 1
  %45 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %44, align 8, !noalias !11
  %46 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %43, %45
  %47 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %47) #13
  br i1 %46, label %48, label %50

48:                                               ; preds = %34
  %49 = bitcast %"class.base::ObserverList"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #13, !alias.scope !11
  br label %90

50:                                               ; preds = %34
  store %"class.base::ObserverList"* %36, %"class.base::ObserverList"** %38, align 8
  %51 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %35, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %47, %"class.base::internal::LinkNodeBase"* %51) #13
  store i64 0, i64* %39, align 8
  %52 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %35, i64 0, i32 5, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %50
  %56 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %44 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.base::ObserverList"* %36 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = ashr exact i64 %60, 3
  br label %62

62:                                               ; preds = %55, %50
  %63 = phi i64 [ %61, %55 ], [ -1, %50 ]
  store i64 %63, i64* %40, align 8
  %64 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %38, align 8
  %65 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %64, i64 0, i32 0, i32 0, i32 1
  %66 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.base::ObserverList"* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = ashr exact i64 %70, 3
  %72 = icmp ult i64 %71, %63
  %73 = select i1 %72, i64 %71, i64 %63
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %90, label %75

75:                                               ; preds = %62
  %76 = inttoptr i64 %69 to %"class.base::internal::UncheckedObserverAdapter"*
  %77 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %64, i64 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %76, i64 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %81, label %90

81:                                               ; preds = %75, %85
  %82 = phi i64 [ %83, %85 ], [ 0, %75 ]
  %83 = add nuw i64 %82, 1
  store i64 %83, i64* %39, align 8
  %84 = icmp ult i64 %83, %73
  br i1 %84, label %85, label %90

85:                                               ; preds = %81
  %86 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %77, align 8
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %86, i64 %83, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = icmp eq i8* %88, null
  br i1 %89, label %81, label %90

90:                                               ; preds = %85, %81, %75, %62, %48
  %91 = bitcast %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %91) #13
  %92 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %94 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %95 = getelementptr inbounds %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.base::ObserverList<PrefStore::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %95) #13
  %97 = bitcast %"class.base::ObserverList"** %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #13, !alias.scope !14
  %98 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %38, align 8
  br label %99

99:                                               ; preds = %349, %90
  %100 = phi %"class.base::ObserverList"* [ %98, %90 ], [ %347, %349 ]
  %101 = icmp eq %"class.base::ObserverList"* %100, null
  br i1 %101, label %117, label %102

102:                                              ; preds = %99
  %103 = load i64, i64* %39, align 8
  %104 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %100, i64 0, i32 0, i32 0, i32 1
  %105 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.base::ObserverList"* %100 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %106, %108
  %110 = ashr exact i64 %109, 3
  %111 = load i64, i64* %40, align 8
  %112 = icmp ult i64 %110, %111
  %113 = select i1 %112, i64 %110, i64 %111
  %114 = icmp eq i64 %103, %113
  br i1 %114, label %117, label %115

115:                                              ; preds = %102
  %116 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %92, align 8
  br label %133

117:                                              ; preds = %102, %99
  %118 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %92, align 8
  %119 = icmp eq %"class.base::ObserverList"* %118, null
  br i1 %119, label %233, label %120

120:                                              ; preds = %117
  %121 = load i64, i64* %93, align 8
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %118, i64 0, i32 0, i32 0, i32 1
  %123 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.base::ObserverList"* %118 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %124, %126
  %128 = ashr exact i64 %127, 3
  %129 = load i64, i64* %94, align 8
  %130 = icmp ult i64 %128, %129
  %131 = select i1 %130, i64 %128, i64 %129
  %132 = icmp eq i64 %121, %131
  br i1 %132, label %142, label %133

133:                                              ; preds = %120, %115
  %134 = phi %"class.base::ObserverList"* [ %116, %115 ], [ %118, %120 ]
  %135 = icmp eq %"class.base::ObserverList"* %100, %134
  %136 = load i64, i64* %39, align 8
  %137 = load i64, i64* %93, align 8
  %138 = icmp eq i64 %136, %137
  %139 = and i1 %135, %138
  br i1 %139, label %140, label %327

140:                                              ; preds = %133
  %141 = icmp eq %"class.base::ObserverList"* %100, null
  br i1 %141, label %233, label %142

142:                                              ; preds = %120, %140
  %143 = phi %"class.base::ObserverList"* [ %100, %140 ], [ %118, %120 ]
  %144 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %143, i64 0, i32 1
  %145 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %143, i64 0, i32 1, i32 0, i32 0, i32 1
  %146 = bitcast %"class.base::internal::LinkNodeBase"** %145 to %"class.base::LinkNode"**
  %147 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %146, align 8
  %148 = bitcast %"class.base::LinkedList"* %144 to %"class.base::LinkNode"**
  %149 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %148, align 8
  %150 = icmp eq %"class.base::LinkNode"* %147, %149
  br i1 %150, label %151, label %229

151:                                              ; preds = %142
  %152 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %143, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %152, align 8
  %154 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %143, i64 0, i32 0, i32 0, i32 1
  %155 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %154, align 8
  %156 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %153, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %151, %162
  %158 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %163, %162 ], [ %153, %151 ]
  %159 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 0, i32 0
  %160 = load i8*, i8** %159, align 8
  %161 = icmp eq i8* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %164 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %163, %155
  br i1 %164, label %229, label %157

165:                                              ; preds = %157, %151
  %166 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %153, %151 ], [ %158, %157 ]
  %167 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %166 to i64
  %168 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %166, %155
  br i1 %168, label %229, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %166, i64 1
  %171 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %170, %155
  br i1 %171, label %224, label %172

172:                                              ; preds = %169
  %173 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %155, i64 -2, i32 0
  %174 = ptrtoint i8** %173 to i64
  %175 = sub i64 %174, %167
  %176 = lshr i64 %175, 3
  %177 = add nuw nsw i64 %176, 1
  %178 = and i64 %177, 3
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %198, label %180

180:                                              ; preds = %172, %193
  %181 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %195, %193 ], [ %170, %172 ]
  %182 = phi i64 [ %194, %193 ], [ %167, %172 ]
  %183 = phi i64 [ %196, %193 ], [ %178, %172 ]
  %184 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = icmp eq i8* %185, null
  br i1 %186, label %193, label %187

187:                                              ; preds = %180
  %188 = ptrtoint i8* %185 to i64
  %189 = inttoptr i64 %182 to %"class.base::internal::UncheckedObserverAdapter"*
  %190 = inttoptr i64 %182 to i64*
  store i64 %188, i64* %190, align 8
  %191 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %189, i64 1
  %192 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %191 to i64
  br label %193

193:                                              ; preds = %187, %180
  %194 = phi i64 [ %182, %180 ], [ %192, %187 ]
  %195 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 1
  %196 = add i64 %183, -1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %180, !llvm.loop !17

198:                                              ; preds = %193, %172
  %199 = phi i64 [ undef, %172 ], [ %194, %193 ]
  %200 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %170, %172 ], [ %195, %193 ]
  %201 = phi i64 [ %167, %172 ], [ %194, %193 ]
  %202 = icmp ult i64 %175, 24
  br i1 %202, label %220, label %203

203:                                              ; preds = %198, %440
  %204 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %442, %440 ], [ %200, %198 ]
  %205 = phi i64 [ %441, %440 ], [ %201, %198 ]
  %206 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 0, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = icmp eq i8* %207, null
  br i1 %208, label %215, label %209

209:                                              ; preds = %203
  %210 = ptrtoint i8* %207 to i64
  %211 = inttoptr i64 %205 to %"class.base::internal::UncheckedObserverAdapter"*
  %212 = inttoptr i64 %205 to i64*
  store i64 %210, i64* %212, align 8
  %213 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %211, i64 1
  %214 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %213 to i64
  br label %215

215:                                              ; preds = %209, %203
  %216 = phi i64 [ %205, %203 ], [ %214, %209 ]
  %217 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 1, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = icmp eq i8* %218, null
  br i1 %219, label %418, label %412

220:                                              ; preds = %440, %198
  %221 = phi i64 [ %199, %198 ], [ %441, %440 ]
  %222 = inttoptr i64 %221 to %"class.base::internal::UncheckedObserverAdapter"*
  %223 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %154, align 8
  br label %224

224:                                              ; preds = %220, %169
  %225 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %155, %169 ], [ %223, %220 ]
  %226 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %166, %169 ], [ %222, %220 ]
  %227 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %226, %225
  br i1 %227, label %229, label %228

228:                                              ; preds = %224
  store %"class.base::internal::UncheckedObserverAdapter"* %226, %"class.base::internal::UncheckedObserverAdapter"** %154, align 8
  br label %229

229:                                              ; preds = %162, %228, %224, %165, %142
  %230 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %92, align 8
  %231 = icmp eq %"class.base::ObserverList"* %230, null
  br i1 %231, label %233, label %232

232:                                              ; preds = %229
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %92, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %95) #13
  br label %233

233:                                              ; preds = %117, %140, %229, %232
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %91) #13
  %234 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %38, align 8
  %235 = icmp eq %"class.base::ObserverList"* %234, null
  br i1 %235, label %326, label %236

236:                                              ; preds = %233
  %237 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %234, i64 0, i32 1
  %238 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %234, i64 0, i32 1, i32 0, i32 0, i32 1
  %239 = bitcast %"class.base::internal::LinkNodeBase"** %238 to %"class.base::LinkNode"**
  %240 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %239, align 8
  %241 = bitcast %"class.base::LinkedList"* %237 to %"class.base::LinkNode"**
  %242 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %241, align 8
  %243 = icmp eq %"class.base::LinkNode"* %240, %242
  br i1 %243, label %244, label %322

244:                                              ; preds = %236
  %245 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %234, i64 0, i32 0, i32 0, i32 0
  %246 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %245, align 8
  %247 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %234, i64 0, i32 0, i32 0, i32 1
  %248 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %247, align 8
  %249 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %246, %248
  br i1 %249, label %258, label %250

250:                                              ; preds = %244, %255
  %251 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %256, %255 ], [ %246, %244 ]
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 0, i32 0
  %253 = load i8*, i8** %252, align 8
  %254 = icmp eq i8* %253, null
  br i1 %254, label %258, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %257 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %256, %248
  br i1 %257, label %322, label %250

258:                                              ; preds = %250, %244
  %259 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %246, %244 ], [ %251, %250 ]
  %260 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %259 to i64
  %261 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %259, %248
  br i1 %261, label %322, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %259, i64 1
  %264 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %263, %248
  br i1 %264, label %317, label %265

265:                                              ; preds = %262
  %266 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %248, i64 -2, i32 0
  %267 = ptrtoint i8** %266 to i64
  %268 = sub i64 %267, %260
  %269 = lshr i64 %268, 3
  %270 = add nuw nsw i64 %269, 1
  %271 = and i64 %270, 3
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %291, label %273

273:                                              ; preds = %265, %286
  %274 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %288, %286 ], [ %263, %265 ]
  %275 = phi i64 [ %287, %286 ], [ %260, %265 ]
  %276 = phi i64 [ %289, %286 ], [ %271, %265 ]
  %277 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 0, i32 0
  %278 = load i8*, i8** %277, align 8
  %279 = icmp eq i8* %278, null
  br i1 %279, label %286, label %280

280:                                              ; preds = %273
  %281 = ptrtoint i8* %278 to i64
  %282 = inttoptr i64 %275 to %"class.base::internal::UncheckedObserverAdapter"*
  %283 = inttoptr i64 %275 to i64*
  store i64 %281, i64* %283, align 8
  %284 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %282, i64 1
  %285 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %284 to i64
  br label %286

286:                                              ; preds = %280, %273
  %287 = phi i64 [ %275, %273 ], [ %285, %280 ]
  %288 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 1
  %289 = add i64 %276, -1
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %291, label %273, !llvm.loop !18

291:                                              ; preds = %286, %265
  %292 = phi i64 [ undef, %265 ], [ %287, %286 ]
  %293 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %263, %265 ], [ %288, %286 ]
  %294 = phi i64 [ %260, %265 ], [ %287, %286 ]
  %295 = icmp ult i64 %268, 24
  br i1 %295, label %313, label %296

296:                                              ; preds = %291, %408
  %297 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %410, %408 ], [ %293, %291 ]
  %298 = phi i64 [ %409, %408 ], [ %294, %291 ]
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 0, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = icmp eq i8* %300, null
  br i1 %301, label %308, label %302

302:                                              ; preds = %296
  %303 = ptrtoint i8* %300 to i64
  %304 = inttoptr i64 %298 to %"class.base::internal::UncheckedObserverAdapter"*
  %305 = inttoptr i64 %298 to i64*
  store i64 %303, i64* %305, align 8
  %306 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %304, i64 1
  %307 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %306 to i64
  br label %308

308:                                              ; preds = %302, %296
  %309 = phi i64 [ %298, %296 ], [ %307, %302 ]
  %310 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 1, i32 0
  %311 = load i8*, i8** %310, align 8
  %312 = icmp eq i8* %311, null
  br i1 %312, label %386, label %380

313:                                              ; preds = %408, %291
  %314 = phi i64 [ %292, %291 ], [ %409, %408 ]
  %315 = inttoptr i64 %314 to %"class.base::internal::UncheckedObserverAdapter"*
  %316 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %247, align 8
  br label %317

317:                                              ; preds = %313, %262
  %318 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %248, %262 ], [ %316, %313 ]
  %319 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %259, %262 ], [ %315, %313 ]
  %320 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %319, %318
  br i1 %320, label %322, label %321

321:                                              ; preds = %317
  store %"class.base::internal::UncheckedObserverAdapter"* %319, %"class.base::internal::UncheckedObserverAdapter"** %247, align 8
  br label %322

322:                                              ; preds = %255, %321, %317, %258, %236
  %323 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %38, align 8
  %324 = icmp eq %"class.base::ObserverList"* %323, null
  br i1 %324, label %326, label %325

325:                                              ; preds = %322
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %38, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %47) #13
  br label %326

326:                                              ; preds = %233, %322, %325
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %37) #13
  br label %379

327:                                              ; preds = %133
  %328 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %100, i64 0, i32 0, i32 0, i32 0
  %329 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %328, align 8
  %330 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %329, i64 %136
  %331 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %330 to %"class.PrefStore::Observer"**
  %332 = load %"class.PrefStore::Observer"*, %"class.PrefStore::Observer"** %331, align 8
  %333 = load %class.SegregatedPrefStore*, %class.SegregatedPrefStore** %7, align 8
  %334 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %333, i64 0, i32 6, i32 2
  %335 = load i8, i8* %334, align 8, !range !19
  %336 = icmp eq i8 %335, 0
  br i1 %336, label %341, label %337

337:                                              ; preds = %327
  %338 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %333, i64 0, i32 7, i32 2
  %339 = load i8, i8* %338, align 8, !range !19
  %340 = icmp ne i8 %339, 0
  br label %341

341:                                              ; preds = %327, %337
  %342 = phi i1 [ false, %327 ], [ %340, %337 ]
  %343 = bitcast %"class.PrefStore::Observer"* %332 to void (%"class.PrefStore::Observer"*, i1)***
  %344 = load void (%"class.PrefStore::Observer"*, i1)**, void (%"class.PrefStore::Observer"*, i1)*** %343, align 8
  %345 = getelementptr inbounds void (%"class.PrefStore::Observer"*, i1)*, void (%"class.PrefStore::Observer"*, i1)** %344, i64 1
  %346 = load void (%"class.PrefStore::Observer"*, i1)*, void (%"class.PrefStore::Observer"*, i1)** %345, align 8
  call void %346(%"class.PrefStore::Observer"* %332, i1 zeroext %342) #13
  %347 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %38, align 8
  %348 = icmp eq %"class.base::ObserverList"* %347, null
  br i1 %348, label %349, label %350

349:                                              ; preds = %374, %370, %341, %350, %364
  br label %99

350:                                              ; preds = %341
  %351 = load i64, i64* %39, align 8
  %352 = add i64 %351, 1
  store i64 %352, i64* %39, align 8
  %353 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %347, i64 0, i32 0, i32 0, i32 1
  %354 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %353 to i64*
  %355 = load i64, i64* %354, align 8
  %356 = bitcast %"class.base::ObserverList"* %347 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = sub i64 %355, %357
  %359 = ashr exact i64 %358, 3
  %360 = load i64, i64* %40, align 8
  %361 = icmp ult i64 %359, %360
  %362 = select i1 %361, i64 %359, i64 %360
  %363 = icmp ult i64 %352, %362
  br i1 %363, label %364, label %349

364:                                              ; preds = %350
  %365 = inttoptr i64 %357 to %"class.base::internal::UncheckedObserverAdapter"*
  %366 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %347, i64 0, i32 0, i32 0, i32 0
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %365, i64 %352, i32 0
  %368 = load i8*, i8** %367, align 8
  %369 = icmp eq i8* %368, null
  br i1 %369, label %370, label %349

370:                                              ; preds = %364, %374
  %371 = phi i64 [ %372, %374 ], [ %352, %364 ]
  %372 = add nuw i64 %371, 1
  store i64 %372, i64* %39, align 8
  %373 = icmp ult i64 %372, %362
  br i1 %373, label %374, label %349

374:                                              ; preds = %370
  %375 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %366, align 8
  %376 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %375, i64 %372, i32 0
  %377 = load i8*, i8** %376, align 8
  %378 = icmp eq i8* %377, null
  br i1 %378, label %370, label %349

379:                                              ; preds = %2, %326
  ret void

380:                                              ; preds = %308
  %381 = ptrtoint i8* %311 to i64
  %382 = inttoptr i64 %309 to %"class.base::internal::UncheckedObserverAdapter"*
  %383 = inttoptr i64 %309 to i64*
  store i64 %381, i64* %383, align 8
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %382, i64 1
  %385 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %384 to i64
  br label %386

386:                                              ; preds = %380, %308
  %387 = phi i64 [ %309, %308 ], [ %385, %380 ]
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 2, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %397, label %391

391:                                              ; preds = %386
  %392 = ptrtoint i8* %389 to i64
  %393 = inttoptr i64 %387 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %387 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %386
  %398 = phi i64 [ %387, %386 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 3, i32 0
  %400 = load i8*, i8** %399, align 8
  %401 = icmp eq i8* %400, null
  br i1 %401, label %408, label %402

402:                                              ; preds = %397
  %403 = ptrtoint i8* %400 to i64
  %404 = inttoptr i64 %398 to %"class.base::internal::UncheckedObserverAdapter"*
  %405 = inttoptr i64 %398 to i64*
  store i64 %403, i64* %405, align 8
  %406 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %404, i64 1
  %407 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %406 to i64
  br label %408

408:                                              ; preds = %402, %397
  %409 = phi i64 [ %398, %397 ], [ %407, %402 ]
  %410 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 4
  %411 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %410, %248
  br i1 %411, label %313, label %296

412:                                              ; preds = %215
  %413 = ptrtoint i8* %218 to i64
  %414 = inttoptr i64 %216 to %"class.base::internal::UncheckedObserverAdapter"*
  %415 = inttoptr i64 %216 to i64*
  store i64 %413, i64* %415, align 8
  %416 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %414, i64 1
  %417 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %416 to i64
  br label %418

418:                                              ; preds = %412, %215
  %419 = phi i64 [ %216, %215 ], [ %417, %412 ]
  %420 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 2, i32 0
  %421 = load i8*, i8** %420, align 8
  %422 = icmp eq i8* %421, null
  br i1 %422, label %429, label %423

423:                                              ; preds = %418
  %424 = ptrtoint i8* %421 to i64
  %425 = inttoptr i64 %419 to %"class.base::internal::UncheckedObserverAdapter"*
  %426 = inttoptr i64 %419 to i64*
  store i64 %424, i64* %426, align 8
  %427 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %425, i64 1
  %428 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %427 to i64
  br label %429

429:                                              ; preds = %423, %418
  %430 = phi i64 [ %419, %418 ], [ %428, %423 ]
  %431 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 3, i32 0
  %432 = load i8*, i8** %431, align 8
  %433 = icmp eq i8* %432, null
  br i1 %433, label %440, label %434

434:                                              ; preds = %429
  %435 = ptrtoint i8* %432 to i64
  %436 = inttoptr i64 %430 to %"class.base::internal::UncheckedObserverAdapter"*
  %437 = inttoptr i64 %430 to i64*
  store i64 %435, i64* %437, align 8
  %438 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %436, i64 1
  %439 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %438 to i64
  br label %440

440:                                              ; preds = %434, %429
  %441 = phi i64 [ %430, %429 ], [ %439, %434 ]
  %442 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 4
  %443 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %442, %155
  br i1 %443, label %220, label %203
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK19SegregatedPrefStore26IsInitializationSuccessfulEv(%class.SegregatedPrefStore* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 6, i32 2
  %3 = load i8, i8* %2, align 8, !range !19
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 7, i32 2
  %7 = load i8, i8* %6, align 8, !range !19
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStoreC2E13scoped_refptrI19PersistentPrefStoreES2_NSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEE(%class.SegregatedPrefStore*, %class.PersistentPrefStore*, %class.PersistentPrefStore*, %"class.std::__1::set"*) unnamed_addr #1 align 2 {
  %5 = ptrtoint %class.PersistentPrefStore* %1 to i64
  %6 = ptrtoint %class.PersistentPrefStore* %2 to i64
  %7 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV19SegregatedPrefStore, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1
  %10 = bitcast %class.scoped_refptr* %9 to i64*
  store i64 %5, i64* %10, align 8
  %11 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2
  %12 = bitcast %class.scoped_refptr* %11 to i64*
  store i64 %6, i64* %12, align 8
  %13 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3
  %14 = bitcast %"class.std::__1::set"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::set"* %13 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::__compressed_pair"* %18 to i64*
  %20 = bitcast %"class.std::__1::__compressed_pair"* %17 to i64*
  %21 = load i64, i64* %19, align 8
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %24 = load i64, i64* %22, align 8
  store i64 %24, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  %26 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  br i1 %25, label %27, label %29

27:                                               ; preds = %4
  %28 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %13, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %26, %"class.std::__1::__tree_end_node"** %28, align 8
  br label %35

29:                                               ; preds = %4
  %30 = inttoptr i64 %21 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %30, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %26, %"class.std::__1::__tree_end_node"** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"** %31, align 8
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #13
  br label %35

35:                                               ; preds = %27, %29
  %36 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 4
  %37 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false)
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %37, %"class.base::internal::LinkNodeBase"* %37, %"class.base::internal::LinkNodeBase"* %37) #13
  %39 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 2
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 3
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 6
  %42 = getelementptr inbounds %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver", %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* %41, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN19SegregatedPrefStore27UnderlyingPrefStoreObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 6, i32 1
  store %class.SegregatedPrefStore* %0, %class.SegregatedPrefStore** %43, align 8
  %44 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 6, i32 2
  store i8 0, i8* %44, align 8
  %45 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 7
  %46 = getelementptr inbounds %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver", %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* %45, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN19SegregatedPrefStore27UnderlyingPrefStoreObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 7, i32 1
  store %class.SegregatedPrefStore* %0, %class.SegregatedPrefStore** %47, align 8
  %48 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 7, i32 2
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 0, i32 0
  %50 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %49, align 8
  %51 = bitcast %class.PersistentPrefStore* %50 to %class.PrefStore*
  %52 = getelementptr inbounds %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver", %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* %41, i64 0, i32 0
  %53 = bitcast %class.PersistentPrefStore* %50 to void (%class.PrefStore*, %"class.PrefStore::Observer"*)***
  %54 = load void (%class.PrefStore*, %"class.PrefStore::Observer"*)**, void (%class.PrefStore*, %"class.PrefStore::Observer"*)*** %53, align 8
  %55 = load void (%class.PrefStore*, %"class.PrefStore::Observer"*)*, void (%class.PrefStore*, %"class.PrefStore::Observer"*)** %54, align 8
  tail call void %55(%class.PrefStore* %51, %"class.PrefStore::Observer"* %52) #13
  %56 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 0, i32 0
  %57 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %56, align 8
  %58 = bitcast %class.PersistentPrefStore* %57 to %class.PrefStore*
  %59 = getelementptr inbounds %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver", %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* %45, i64 0, i32 0
  %60 = bitcast %class.PersistentPrefStore* %57 to void (%class.PrefStore*, %"class.PrefStore::Observer"*)***
  %61 = load void (%class.PrefStore*, %"class.PrefStore::Observer"*)**, void (%class.PrefStore*, %"class.PrefStore::Observer"*)*** %60, align 8
  %62 = load void (%class.PrefStore*, %"class.PrefStore::Observer"*)*, void (%class.PrefStore*, %"class.PrefStore::Observer"*)** %61, align 8
  tail call void %62(%class.PrefStore* %58, %"class.PrefStore::Observer"* %59) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStore11AddObserverEPN9PrefStore8ObserverE(%class.SegregatedPrefStore*, %"class.PrefStore::Observer"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5
  %4 = icmp eq %"class.PrefStore::Observer"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.PrefStore::Observer"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.PrefStore::Observer"* %1 to i64
  %32 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #14
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #14
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #15
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #13
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #15
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStore14RemoveObserverEPN9PrefStore8ObserverE(%class.SegregatedPrefStore*, %"class.PrefStore::Observer"* readnone) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.PrefStore::Observer"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #13
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK19SegregatedPrefStore12HasObserversEv(%class.SegregatedPrefStore* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK19SegregatedPrefStore24IsInitializationCompleteEv(%class.SegregatedPrefStore* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1, i32 0
  %3 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %2, align 8
  %4 = bitcast %class.PersistentPrefStore* %3 to %class.PrefStore*
  %5 = bitcast %class.PersistentPrefStore* %3 to i1 (%class.PrefStore*)***
  %6 = load i1 (%class.PrefStore*)**, i1 (%class.PrefStore*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.PrefStore*)*, i1 (%class.PrefStore*)** %6, i64 3
  %8 = load i1 (%class.PrefStore*)*, i1 (%class.PrefStore*)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.PrefStore* %4) #13
  br i1 %9, label %10, label %19

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2, i32 0
  %12 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %11, align 8
  %13 = bitcast %class.PersistentPrefStore* %12 to %class.PrefStore*
  %14 = bitcast %class.PersistentPrefStore* %12 to i1 (%class.PrefStore*)***
  %15 = load i1 (%class.PrefStore*)**, i1 (%class.PrefStore*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.PrefStore*)*, i1 (%class.PrefStore*)** %15, i64 3
  %17 = load i1 (%class.PrefStore*)*, i1 (%class.PrefStore*)** %16, align 8
  %18 = tail call zeroext i1 %17(%class.PrefStore* %13) #13
  br label %19

19:                                               ; preds = %10, %1
  %20 = phi i1 [ false, %1 ], [ %18, %10 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK19SegregatedPrefStore8GetValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPPKN4base5ValueE(%class.SegregatedPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"**) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0
  %5 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %6 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  %8 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1
  %10 = select i1 %7, %class.scoped_refptr* %9, %class.scoped_refptr* %8
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %10, i64 0, i32 0
  %12 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %11, align 8
  %13 = bitcast %class.PersistentPrefStore* %12 to %class.PrefStore*
  %14 = bitcast %class.PersistentPrefStore* %12 to i1 (%class.PrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)***
  %15 = load i1 (%class.PrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)**, i1 (%class.PrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.PrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)*, i1 (%class.PrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)** %15, i64 4
  %17 = load i1 (%class.PrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)*, i1 (%class.PrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)** %16, align 8
  %18 = tail call zeroext i1 %17(%class.PrefStore* %13, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.base::Value"** %2) #13
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.PersistentPrefStore* @_ZNK19SegregatedPrefStore11StoreForKeyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.SegregatedPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0
  %4 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %5 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  %7 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1
  %9 = select i1 %6, %class.scoped_refptr* %8, %class.scoped_refptr* %7
  %10 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 0, i32 0
  %11 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %10, align 8
  ret %class.PersistentPrefStore* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::DictionaryValue"* @_ZNK19SegregatedPrefStore9GetValuesEv(%class.SegregatedPrefStore*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::Value"*, align 8
  %3 = alloca %"class.base::Value", align 8
  %4 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1, i32 0
  %5 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %4, align 8
  %6 = bitcast %class.PersistentPrefStore* %5 to %class.PrefStore*
  %7 = bitcast %class.PersistentPrefStore* %5 to %"class.base::DictionaryValue"* (%class.PrefStore*)***
  %8 = load %"class.base::DictionaryValue"* (%class.PrefStore*)**, %"class.base::DictionaryValue"* (%class.PrefStore*)*** %7, align 8
  %9 = getelementptr inbounds %"class.base::DictionaryValue"* (%class.PrefStore*)*, %"class.base::DictionaryValue"* (%class.PrefStore*)** %8, i64 5
  %10 = load %"class.base::DictionaryValue"* (%class.PrefStore*)*, %"class.base::DictionaryValue"* (%class.PrefStore*)** %9, align 8
  %11 = tail call %"class.base::DictionaryValue"* %10(%class.PrefStore* %6) #13
  %12 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2, i32 0
  %13 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %12, align 8
  %14 = bitcast %class.PersistentPrefStore* %13 to %class.PrefStore*
  %15 = bitcast %class.PersistentPrefStore* %13 to %"class.base::DictionaryValue"* (%class.PrefStore*)***
  %16 = load %"class.base::DictionaryValue"* (%class.PrefStore*)**, %"class.base::DictionaryValue"* (%class.PrefStore*)*** %15, align 8
  %17 = getelementptr inbounds %"class.base::DictionaryValue"* (%class.PrefStore*)*, %"class.base::DictionaryValue"* (%class.PrefStore*)** %16, i64 5
  %18 = load %"class.base::DictionaryValue"* (%class.PrefStore*)*, %"class.base::DictionaryValue"* (%class.PrefStore*)** %17, align 8
  %19 = tail call %"class.base::DictionaryValue"* %18(%class.PrefStore* %14) #13
  %20 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %22 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %21, %22
  br i1 %23, label %26, label %24

24:                                               ; preds = %1
  %25 = bitcast %"class.base::Value"** %2 to i8*
  br label %32

26:                                               ; preds = %90, %1
  %27 = icmp eq %"class.base::DictionaryValue"* %19, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %19, i64 0, i32 0
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %29) #13
  %30 = bitcast %"class.base::DictionaryValue"* %19 to i8*
  call void @_ZdlPv(i8* %30) #15
  br label %31

31:                                               ; preds = %26, %28
  ret %"class.base::DictionaryValue"* %11

32:                                               ; preds = %24, %90
  %33 = phi %"class.std::__1::__tree_end_node"* [ %21, %24 ], [ %91, %90 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  store %"class.base::Value"* null, %"class.base::Value"** %2, align 8
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = bitcast %"class.std::__1::__tree_end_node"* %34 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::__tree_end_node"* %34 to i8*
  %42 = select i1 %38, i8* %40, i8* %41
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 5
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %37 to i64
  %47 = select i1 %38, i64 %45, i64 %46
  %48 = call zeroext i1 @_ZNK4base15DictionaryValue3GetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %19, i8* %42, i64 %47, %"class.base::Value"** nonnull %2) #13
  %49 = load i8, i8* %36, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i8*, i8** %39, align 8
  %52 = select i1 %50, i8* %51, i8* %41
  %53 = load i64, i64* %44, align 8
  %54 = zext i8 %49 to i64
  %55 = select i1 %50, i64 %53, i64 %54
  br i1 %48, label %56, label %60

56:                                               ; preds = %32
  %57 = load %"class.base::Value"*, %"class.base::Value"** %2, align 8
  call void @_ZNK4base5Value5CloneEv(%"class.base::Value"* nonnull sret %3, %"class.base::Value"* %57) #13
  %58 = call %"class.base::Value"* @_ZN4base5Value16ToUniquePtrValueES0_(%"class.base::Value"* nonnull %3) #13
  %59 = call %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* %11, i8* %52, i64 %55, %"class.base::Value"* %58) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #13
  br label %62

60:                                               ; preds = %32
  %61 = call zeroext i1 @_ZN4base15DictionaryValue6RemoveENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* %11, i8* %52, i64 %55, %"class.std::__1::unique_ptr.52"* null) #13
  br label %62

62:                                               ; preds = %60, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 1, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %66, label %74

66:                                               ; preds = %62
  %67 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 2
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"class.std::__1::__tree_end_node"**
  %70 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, %67
  br i1 %73, label %90, label %81

74:                                               ; preds = %62, %74
  %75 = phi %"class.std::__1::__tree_node_base"* [ %77, %74 ], [ %64, %62 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %79, label %74

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %75, i64 0, i32 0
  br label %90

81:                                               ; preds = %66, %81
  %82 = phi %"class.std::__1::__tree_end_node"** [ %85, %81 ], [ %69, %66 ]
  %83 = bitcast %"class.std::__1::__tree_end_node"** %82 to %"class.std::__1::__tree_node_base"**
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %84, i64 0, i32 2
  %86 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, %84
  br i1 %89, label %90, label %81

90:                                               ; preds = %81, %66, %79
  %91 = phi %"class.std::__1::__tree_end_node"* [ %80, %79 ], [ %70, %66 ], [ %86, %81 ]
  %92 = icmp eq %"class.std::__1::__tree_end_node"* %91, %22
  br i1 %92, label %26, label %32
}

declare zeroext i1 @_ZNK4base15DictionaryValue3GetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"**) local_unnamed_addr #4

declare %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"*) local_unnamed_addr #4

declare %"class.base::Value"* @_ZN4base5Value16ToUniquePtrValueES0_(%"class.base::Value"*) local_unnamed_addr #4

declare void @_ZNK4base5Value5CloneEv(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #5

declare zeroext i1 @_ZN4base15DictionaryValue6RemoveENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.std::__1::unique_ptr.52"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStore8SetValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10unique_ptrIN4base5ValueENS0_14default_deleteISB_EEEEj(%class.SegregatedPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"*, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0
  %6 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %7 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  %9 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2
  %10 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1
  %11 = select i1 %8, %class.scoped_refptr* %10, %class.scoped_refptr* %9
  %12 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 0, i32 0
  %13 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %12, align 8
  %14 = bitcast %class.PersistentPrefStore* %13 to %class.WriteablePrefStore*
  %15 = bitcast %class.PersistentPrefStore* %13 to void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)***
  %16 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)**, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)** %16, i64 8
  %18 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)** %17, align 8
  tail call void %18(%class.WriteablePrefStore* %14, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.base::Value"* %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.PersistentPrefStore* @_ZN19SegregatedPrefStore11StoreForKeyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.SegregatedPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0
  %4 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %5 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  %7 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1
  %9 = select i1 %6, %class.scoped_refptr* %8, %class.scoped_refptr* %7
  %10 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 0, i32 0
  %11 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %10, align 8
  ret %class.PersistentPrefStore* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStore11RemoveValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%class.SegregatedPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0
  %5 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %6 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  %8 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1
  %10 = select i1 %7, %class.scoped_refptr* %9, %class.scoped_refptr* %8
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %10, i64 0, i32 0
  %12 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %11, align 8
  %13 = bitcast %class.PersistentPrefStore* %12 to %class.WriteablePrefStore*
  %14 = bitcast %class.PersistentPrefStore* %12 to void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)***
  %15 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)**, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)** %15, i64 9
  %17 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)** %16, align 8
  tail call void %17(%class.WriteablePrefStore* %13, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStore28RemoveValuesByPrefixSilentlyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.SegregatedPrefStore* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1, i32 0
  %4 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %3, align 8
  %5 = bitcast %class.PersistentPrefStore* %4 to %class.WriteablePrefStore*
  %6 = bitcast %class.PersistentPrefStore* %4 to void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)***
  %7 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)**, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)** %7, i64 14
  %9 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)** %8, align 8
  tail call void %9(%class.WriteablePrefStore* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %10 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2, i32 0
  %11 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %10, align 8
  %12 = bitcast %class.PersistentPrefStore* %11 to %class.WriteablePrefStore*
  %13 = bitcast %class.PersistentPrefStore* %11 to void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)***
  %14 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)**, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)** %14, i64 14
  %16 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*)** %15, align 8
  tail call void %16(%class.WriteablePrefStore* %12, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19SegregatedPrefStore15GetMutableValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPPN4base5ValueE(%class.SegregatedPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"**) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0
  %5 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %6 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  %8 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1
  %10 = select i1 %7, %class.scoped_refptr* %9, %class.scoped_refptr* %8
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %10, i64 0, i32 0
  %12 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %11, align 8
  %13 = bitcast %class.PersistentPrefStore* %12 to %class.WriteablePrefStore*
  %14 = bitcast %class.PersistentPrefStore* %12 to i1 (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)***
  %15 = load i1 (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)**, i1 (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)*, i1 (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)** %15, i64 10
  %17 = load i1 (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)*, i1 (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)** %16, align 8
  %18 = tail call zeroext i1 %17(%class.WriteablePrefStore* %13, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.base::Value"** %2) #13
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStore18ReportValueChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%class.SegregatedPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0
  %5 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %6 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  %8 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1
  %10 = select i1 %7, %class.scoped_refptr* %9, %class.scoped_refptr* %8
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %10, i64 0, i32 0
  %12 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %11, align 8
  %13 = bitcast %class.PersistentPrefStore* %12 to %class.WriteablePrefStore*
  %14 = bitcast %class.PersistentPrefStore* %12 to void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)***
  %15 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)**, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)** %15, i64 11
  %17 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, i32)** %16, align 8
  tail call void %17(%class.WriteablePrefStore* %13, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStore16SetValueSilentlyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10unique_ptrIN4base5ValueENS0_14default_deleteISB_EEEEj(%class.SegregatedPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"*, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0
  %6 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %7 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  %9 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2
  %10 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1
  %11 = select i1 %8, %class.scoped_refptr* %10, %class.scoped_refptr* %9
  %12 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 0, i32 0
  %13 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %12, align 8
  %14 = bitcast %class.PersistentPrefStore* %13 to %class.WriteablePrefStore*
  %15 = bitcast %class.PersistentPrefStore* %13 to void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)***
  %16 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)**, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)** %16, i64 13
  %18 = load void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)*, void (%class.WriteablePrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)** %17, align 8
  tail call void %18(%class.WriteablePrefStore* %14, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.base::Value"* %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK19SegregatedPrefStore8ReadOnlyEv(%class.SegregatedPrefStore* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2, i32 0
  %3 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %2, align 8
  %4 = bitcast %class.PersistentPrefStore* %3 to i1 (%class.PersistentPrefStore*)***
  %5 = load i1 (%class.PersistentPrefStore*)**, i1 (%class.PersistentPrefStore*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.PersistentPrefStore*)*, i1 (%class.PersistentPrefStore*)** %5, i64 15
  %7 = load i1 (%class.PersistentPrefStore*)*, i1 (%class.PersistentPrefStore*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.PersistentPrefStore* %3) #13
  br i1 %8, label %17, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1, i32 0
  %11 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %10, align 8
  %12 = bitcast %class.PersistentPrefStore* %11 to i1 (%class.PersistentPrefStore*)***
  %13 = load i1 (%class.PersistentPrefStore*)**, i1 (%class.PersistentPrefStore*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%class.PersistentPrefStore*)*, i1 (%class.PersistentPrefStore*)** %13, i64 15
  %15 = load i1 (%class.PersistentPrefStore*)*, i1 (%class.PersistentPrefStore*)** %14, align 8
  %16 = tail call zeroext i1 %15(%class.PersistentPrefStore* %11) #13
  br label %17

17:                                               ; preds = %9, %1
  %18 = phi i1 [ true, %1 ], [ %16, %9 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK19SegregatedPrefStore12GetReadErrorEv(%class.SegregatedPrefStore* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1, i32 0
  %3 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %2, align 8
  %4 = bitcast %class.PersistentPrefStore* %3 to i32 (%class.PersistentPrefStore*)***
  %5 = load i32 (%class.PersistentPrefStore*)**, i32 (%class.PersistentPrefStore*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.PersistentPrefStore*)*, i32 (%class.PersistentPrefStore*)** %5, i64 16
  %7 = load i32 (%class.PersistentPrefStore*)*, i32 (%class.PersistentPrefStore*)** %6, align 8
  %8 = tail call i32 %7(%class.PersistentPrefStore* %3) #13
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2, i32 0
  %12 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %11, align 8
  %13 = bitcast %class.PersistentPrefStore* %12 to i32 (%class.PersistentPrefStore*)***
  %14 = load i32 (%class.PersistentPrefStore*)**, i32 (%class.PersistentPrefStore*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%class.PersistentPrefStore*)*, i32 (%class.PersistentPrefStore*)** %14, i64 16
  %16 = load i32 (%class.PersistentPrefStore*)*, i32 (%class.PersistentPrefStore*)** %15, align 8
  %17 = tail call i32 %16(%class.PersistentPrefStore* %12) #13
  %18 = icmp eq i32 %17, 6
  %19 = select i1 %18, i32 0, i32 %17
  br label %20

20:                                               ; preds = %10, %1
  %21 = phi i32 [ %19, %10 ], [ %8, %1 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN19SegregatedPrefStore9ReadPrefsEv(%class.SegregatedPrefStore*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1, i32 0
  %3 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %2, align 8
  %4 = bitcast %class.PersistentPrefStore* %3 to i32 (%class.PersistentPrefStore*)***
  %5 = load i32 (%class.PersistentPrefStore*)**, i32 (%class.PersistentPrefStore*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.PersistentPrefStore*)*, i32 (%class.PersistentPrefStore*)** %5, i64 17
  %7 = load i32 (%class.PersistentPrefStore*)*, i32 (%class.PersistentPrefStore*)** %6, align 8
  %8 = tail call i32 %7(%class.PersistentPrefStore* %3) #13
  %9 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2, i32 0
  %10 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %9, align 8
  %11 = bitcast %class.PersistentPrefStore* %10 to i32 (%class.PersistentPrefStore*)***
  %12 = load i32 (%class.PersistentPrefStore*)**, i32 (%class.PersistentPrefStore*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%class.PersistentPrefStore*)*, i32 (%class.PersistentPrefStore*)** %12, i64 17
  %14 = load i32 (%class.PersistentPrefStore*)*, i32 (%class.PersistentPrefStore*)** %13, align 8
  %15 = tail call i32 %14(%class.PersistentPrefStore* %10) #13
  %16 = bitcast %class.SegregatedPrefStore* %0 to i32 (%class.SegregatedPrefStore*)***
  %17 = load i32 (%class.SegregatedPrefStore*)**, i32 (%class.SegregatedPrefStore*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%class.SegregatedPrefStore*)*, i32 (%class.SegregatedPrefStore*)** %17, i64 16
  %19 = load i32 (%class.SegregatedPrefStore*)*, i32 (%class.SegregatedPrefStore*)** %18, align 8
  %20 = tail call i32 %19(%class.SegregatedPrefStore* %0) #13
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStore14ReadPrefsAsyncEPN19PersistentPrefStore17ReadErrorDelegateE(%class.SegregatedPrefStore* nocapture, %"class.PersistentPrefStore::ReadErrorDelegate"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.PersistentPrefStore::ReadErrorDelegate"*, %"class.PersistentPrefStore::ReadErrorDelegate"** %3, align 8
  store %"class.PersistentPrefStore::ReadErrorDelegate"* %1, %"class.PersistentPrefStore::ReadErrorDelegate"** %3, align 8
  %5 = icmp eq %"class.PersistentPrefStore::ReadErrorDelegate"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.PersistentPrefStore::ReadErrorDelegate"* %4 to void (%"class.PersistentPrefStore::ReadErrorDelegate"*)***
  %8 = load void (%"class.PersistentPrefStore::ReadErrorDelegate"*)**, void (%"class.PersistentPrefStore::ReadErrorDelegate"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.PersistentPrefStore::ReadErrorDelegate"*)*, void (%"class.PersistentPrefStore::ReadErrorDelegate"*)** %8, i64 1
  %10 = load void (%"class.PersistentPrefStore::ReadErrorDelegate"*)*, void (%"class.PersistentPrefStore::ReadErrorDelegate"*)** %9, align 8
  tail call void %10(%"class.PersistentPrefStore::ReadErrorDelegate"* nonnull %4) #13
  br label %11

11:                                               ; preds = %2, %6
  %12 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1, i32 0
  %13 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %12, align 8
  %14 = bitcast %class.PersistentPrefStore* %13 to void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)***
  %15 = load void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)**, void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)*, void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)** %15, i64 18
  %17 = load void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)*, void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)** %16, align 8
  tail call void %17(%class.PersistentPrefStore* %13, %"class.PersistentPrefStore::ReadErrorDelegate"* null) #13
  %18 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2, i32 0
  %19 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %18, align 8
  %20 = bitcast %class.PersistentPrefStore* %19 to void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)***
  %21 = load void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)**, void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)*, void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)** %21, i64 18
  %23 = load void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)*, void (%class.PersistentPrefStore*, %"class.PersistentPrefStore::ReadErrorDelegate"*)** %22, align 8
  tail call void %23(%class.PersistentPrefStore* %19, %"class.PersistentPrefStore::ReadErrorDelegate"* null) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStore18CommitPendingWriteEN4base12OnceCallbackIFvvEEES3_(%class.SegregatedPrefStore* nocapture readonly, %"class.base::OnceCallback"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::RepeatingCallback", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = alloca %"class.base::RepeatingCallback", align 8
  %12 = alloca %"class.base::OnceCallback", align 8
  %13 = alloca %"class.base::RepeatingCallback", align 8
  %14 = alloca %"class.base::OnceCallback", align 8
  %15 = alloca %"class.base::RepeatingCallback", align 8
  %16 = bitcast %"class.base::RepeatingCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %17, align 8
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %18, align 8
  %20 = icmp eq %"class.base::internal::BindStateBase"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %3
  %22 = ptrtoint %"class.base::internal::BindStateBase"* %19 to i64
  %23 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  call void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* nonnull sret %4, i32 2, %"class.base::OnceCallback"* nonnull %5) #13
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #13
  br label %26

25:                                               ; preds = %3
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  br label %26

26:                                               ; preds = %25, %21
  %27 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %28, align 8
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %29, align 8
  %31 = icmp eq %"class.base::internal::BindStateBase"* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %26
  %33 = ptrtoint %"class.base::internal::BindStateBase"* %30 to i64
  %34 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  call void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* nonnull sret %6, i32 2, %"class.base::OnceCallback"* nonnull %7) #13
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #13
  br label %37

36:                                               ; preds = %26
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8
  br label %37

37:                                               ; preds = %36, %32
  %38 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1, i32 0
  %39 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %38, align 8
  %40 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %9, i64 0, i32 0
  %41 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %40, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %41) #13
  %42 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %42, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %40) #13
  %43 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %43, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %44) #13
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %45, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %43) #13
  %46 = bitcast %class.PersistentPrefStore* %39 to void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)***
  %47 = load void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)**, void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)*, void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)** %47, i64 19
  %49 = load void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)*, void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)** %48, align 8
  call void %49(%class.PersistentPrefStore* %39, %"class.base::OnceCallback"* nonnull %8, %"class.base::OnceCallback"* nonnull %10) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #13
  %50 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #13
  %51 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #13
  %52 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2, i32 0
  %53 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %52, align 8
  %54 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %13, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %54, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %41) #13
  %55 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %55, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %54) #13
  %56 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %15, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %56, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %44) #13
  %57 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %14, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %57, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %56) #13
  %58 = bitcast %class.PersistentPrefStore* %53 to void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)***
  %59 = load void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)**, void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)*, void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)** %59, i64 19
  %61 = load void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)*, void (%class.PersistentPrefStore*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)** %60, align 8
  call void %61(%class.PersistentPrefStore* %53, %"class.base::OnceCallback"* nonnull %12, %"class.base::OnceCallback"* nonnull %14) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %57) #13
  %62 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %15, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %55) #13
  %63 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %13, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #13
  %64 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %64) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  %65 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %65) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  ret void
}

declare void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* sret, i32, %"class.base::OnceCallback"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStore26SchedulePendingLossyWritesEv(%class.SegregatedPrefStore* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1, i32 0
  %3 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %2, align 8
  %4 = bitcast %class.PersistentPrefStore* %3 to void (%class.PersistentPrefStore*)***
  %5 = load void (%class.PersistentPrefStore*)**, void (%class.PersistentPrefStore*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.PersistentPrefStore*)*, void (%class.PersistentPrefStore*)** %5, i64 20
  %7 = load void (%class.PersistentPrefStore*)*, void (%class.PersistentPrefStore*)** %6, align 8
  tail call void %7(%class.PersistentPrefStore* %3) #13
  %8 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2, i32 0
  %9 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %8, align 8
  %10 = bitcast %class.PersistentPrefStore* %9 to void (%class.PersistentPrefStore*)***
  %11 = load void (%class.PersistentPrefStore*)**, void (%class.PersistentPrefStore*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.PersistentPrefStore*)*, void (%class.PersistentPrefStore*)** %11, i64 20
  %13 = load void (%class.PersistentPrefStore*)*, void (%class.PersistentPrefStore*)** %12, align 8
  tail call void %13(%class.PersistentPrefStore* %9) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN19SegregatedPrefStore18ClearMutableValuesEv(%class.SegregatedPrefStore* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStore23OnStoreDeletionFromDiskEv(%class.SegregatedPrefStore* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1, i32 0
  %3 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %2, align 8
  %4 = bitcast %class.PersistentPrefStore* %3 to void (%class.PersistentPrefStore*)***
  %5 = load void (%class.PersistentPrefStore*)**, void (%class.PersistentPrefStore*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.PersistentPrefStore*)*, void (%class.PersistentPrefStore*)** %5, i64 22
  %7 = load void (%class.PersistentPrefStore*)*, void (%class.PersistentPrefStore*)** %6, align 8
  tail call void %7(%class.PersistentPrefStore* %3) #13
  %8 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2, i32 0
  %9 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %8, align 8
  %10 = bitcast %class.PersistentPrefStore* %9 to void (%class.PersistentPrefStore*)***
  %11 = load void (%class.PersistentPrefStore*)**, void (%class.PersistentPrefStore*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.PersistentPrefStore*)*, void (%class.PersistentPrefStore*)** %11, i64 22
  %13 = load void (%class.PersistentPrefStore*)*, void (%class.PersistentPrefStore*)** %12, align 8
  tail call void %13(%class.PersistentPrefStore* %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStoreD2Ev(%class.SegregatedPrefStore*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV19SegregatedPrefStore, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 1, i32 0
  %4 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %3, align 8
  %5 = bitcast %class.PersistentPrefStore* %4 to %class.PrefStore*
  %6 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 6, i32 0
  %7 = bitcast %class.PersistentPrefStore* %4 to void (%class.PrefStore*, %"class.PrefStore::Observer"*)***
  %8 = load void (%class.PrefStore*, %"class.PrefStore::Observer"*)**, void (%class.PrefStore*, %"class.PrefStore::Observer"*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.PrefStore*, %"class.PrefStore::Observer"*)*, void (%class.PrefStore*, %"class.PrefStore::Observer"*)** %8, i64 1
  %10 = load void (%class.PrefStore*, %"class.PrefStore::Observer"*)*, void (%class.PrefStore*, %"class.PrefStore::Observer"*)** %9, align 8
  tail call void %10(%class.PrefStore* %5, %"class.PrefStore::Observer"* %6) #13
  %11 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 2, i32 0
  %12 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %11, align 8
  %13 = bitcast %class.PersistentPrefStore* %12 to %class.PrefStore*
  %14 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 7, i32 0
  %15 = bitcast %class.PersistentPrefStore* %12 to void (%class.PrefStore*, %"class.PrefStore::Observer"*)***
  %16 = load void (%class.PrefStore*, %"class.PrefStore::Observer"*)**, void (%class.PrefStore*, %"class.PrefStore::Observer"*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.PrefStore*, %"class.PrefStore::Observer"*)*, void (%class.PrefStore*, %"class.PrefStore::Observer"*)** %16, i64 1
  %18 = load void (%class.PrefStore*, %"class.PrefStore::Observer"*)*, void (%class.PrefStore*, %"class.PrefStore::Observer"*)** %17, align 8
  tail call void %18(%class.PrefStore* %13, %"class.PrefStore::Observer"* %14) #13
  %19 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %20 = bitcast %"class.base::internal::LinkNodeBase"** %19 to %"class.base::LinkNode"**
  %21 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 1, i32 0
  %22 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %20, align 8
  %23 = icmp eq %"class.base::LinkNode"* %22, %21
  br i1 %23, label %36, label %24

24:                                               ; preds = %1, %33
  %25 = phi %"class.base::LinkNode"* [ %34, %33 ], [ %22, %1 ]
  %26 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %25, i64 1
  %27 = bitcast %"class.base::LinkNode"* %26 to %"class.base::ObserverList"**
  %28 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %27, align 8
  %29 = icmp eq %"class.base::ObserverList"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %27, align 8
  %31 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %25, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %31) #13
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %20, align 8
  br label %33

33:                                               ; preds = %30, %24
  %34 = phi %"class.base::LinkNode"* [ %25, %24 ], [ %32, %30 ]
  %35 = icmp eq %"class.base::LinkNode"* %34, %21
  br i1 %35, label %36, label %24

36:                                               ; preds = %33, %1
  %37 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %38 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %37, align 8
  %39 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %40 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %39, align 8
  %41 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %38, %40
  br i1 %41, label %50, label %42

42:                                               ; preds = %36, %47
  %43 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %48, %47 ], [ %38, %36 ]
  %44 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %43, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %43, i64 1
  %49 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %48, %40
  br i1 %49, label %114, label %42

50:                                               ; preds = %42, %36
  %51 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %38, %36 ], [ %43, %42 ]
  %52 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %51 to i64
  %53 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %51, %40
  br i1 %53, label %114, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %51, i64 1
  %56 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %55, %40
  br i1 %56, label %109, label %57

57:                                               ; preds = %54
  %58 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %40, i64 -2, i32 0
  %59 = ptrtoint i8** %58 to i64
  %60 = sub i64 %59, %52
  %61 = lshr i64 %60, 3
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %83, label %65

65:                                               ; preds = %57, %78
  %66 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %80, %78 ], [ %55, %57 ]
  %67 = phi i64 [ %79, %78 ], [ %52, %57 ]
  %68 = phi i64 [ %81, %78 ], [ %63, %57 ]
  %69 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %66, i64 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %65
  %73 = ptrtoint i8* %70 to i64
  %74 = inttoptr i64 %67 to %"class.base::internal::UncheckedObserverAdapter"*
  %75 = inttoptr i64 %67 to i64*
  store i64 %73, i64* %75, align 8
  %76 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %77 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %76 to i64
  br label %78

78:                                               ; preds = %72, %65
  %79 = phi i64 [ %67, %65 ], [ %77, %72 ]
  %80 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %66, i64 1
  %81 = add i64 %68, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %65, !llvm.loop !20

83:                                               ; preds = %78, %57
  %84 = phi i64 [ undef, %57 ], [ %79, %78 ]
  %85 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %55, %57 ], [ %80, %78 ]
  %86 = phi i64 [ %52, %57 ], [ %79, %78 ]
  %87 = icmp ult i64 %60, 24
  br i1 %87, label %105, label %88

88:                                               ; preds = %83, %195
  %89 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %197, %195 ], [ %85, %83 ]
  %90 = phi i64 [ %196, %195 ], [ %86, %83 ]
  %91 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %89, i64 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = icmp eq i8* %92, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %88
  %95 = ptrtoint i8* %92 to i64
  %96 = inttoptr i64 %90 to %"class.base::internal::UncheckedObserverAdapter"*
  %97 = inttoptr i64 %90 to i64*
  store i64 %95, i64* %97, align 8
  %98 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %96, i64 1
  %99 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %98 to i64
  br label %100

100:                                              ; preds = %94, %88
  %101 = phi i64 [ %90, %88 ], [ %99, %94 ]
  %102 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %89, i64 1, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = icmp eq i8* %103, null
  br i1 %104, label %173, label %167

105:                                              ; preds = %195, %83
  %106 = phi i64 [ %84, %83 ], [ %196, %195 ]
  %107 = inttoptr i64 %106 to %"class.base::internal::UncheckedObserverAdapter"*
  %108 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %39, align 8
  br label %109

109:                                              ; preds = %105, %54
  %110 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %40, %54 ], [ %108, %105 ]
  %111 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %51, %54 ], [ %107, %105 ]
  %112 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %111, %110
  br i1 %112, label %114, label %113

113:                                              ; preds = %109
  store %"class.base::internal::UncheckedObserverAdapter"* %111, %"class.base::internal::UncheckedObserverAdapter"** %39, align 8
  br label %114

114:                                              ; preds = %47, %113, %109, %50
  %115 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %37, align 8
  %116 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %115, null
  br i1 %116, label %121, label %117

117:                                              ; preds = %114
  %118 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %115 to i64
  %119 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %39 to i64*
  store i64 %118, i64* %119, align 8
  %120 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %115 to i8*
  tail call void @_ZdlPv(i8* %120) #15
  br label %121

121:                                              ; preds = %114, %117
  %122 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %123 = load %"class.PersistentPrefStore::ReadErrorDelegate"*, %"class.PersistentPrefStore::ReadErrorDelegate"** %122, align 8
  store %"class.PersistentPrefStore::ReadErrorDelegate"* null, %"class.PersistentPrefStore::ReadErrorDelegate"** %122, align 8
  %124 = icmp eq %"class.PersistentPrefStore::ReadErrorDelegate"* %123, null
  br i1 %124, label %130, label %125

125:                                              ; preds = %121
  %126 = bitcast %"class.PersistentPrefStore::ReadErrorDelegate"* %123 to void (%"class.PersistentPrefStore::ReadErrorDelegate"*)***
  %127 = load void (%"class.PersistentPrefStore::ReadErrorDelegate"*)**, void (%"class.PersistentPrefStore::ReadErrorDelegate"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.PersistentPrefStore::ReadErrorDelegate"*)*, void (%"class.PersistentPrefStore::ReadErrorDelegate"*)** %127, i64 1
  %129 = load void (%"class.PersistentPrefStore::ReadErrorDelegate"*)*, void (%"class.PersistentPrefStore::ReadErrorDelegate"*)** %128, align 8
  tail call void %129(%"class.PersistentPrefStore::ReadErrorDelegate"* nonnull %123) #13
  br label %130

130:                                              ; preds = %121, %125
  %131 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0
  %132 = getelementptr inbounds %class.SegregatedPrefStore, %class.SegregatedPrefStore* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %133 = bitcast %"class.std::__1::__tree_end_node"* %132 to %"class.std::__1::__tree_node"**
  %134 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %133, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %131, %"class.std::__1::__tree_node"* %134) #13
  %135 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %11, align 8
  %136 = icmp eq %class.PersistentPrefStore* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %class.PersistentPrefStore, %class.PersistentPrefStore* %135, i64 0, i32 0, i32 0, i32 1
  %139 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %138, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %139) #13
  %140 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %138, i64 0, i32 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %150

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %138, i64 -2
  %145 = bitcast %"class.base::RefCounted"* %144 to %class.PrefStore*
  %146 = bitcast %"class.base::RefCounted"* %144 to void (%class.PrefStore*)***
  %147 = load void (%class.PrefStore*)**, void (%class.PrefStore*)*** %146, align 8
  %148 = getelementptr inbounds void (%class.PrefStore*)*, void (%class.PrefStore*)** %147, i64 7
  %149 = load void (%class.PrefStore*)*, void (%class.PrefStore*)** %148, align 8
  tail call void %149(%class.PrefStore* nonnull %145) #13
  br label %150

150:                                              ; preds = %130, %137, %143
  %151 = load %class.PersistentPrefStore*, %class.PersistentPrefStore** %3, align 8
  %152 = icmp eq %class.PersistentPrefStore* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %class.PersistentPrefStore, %class.PersistentPrefStore* %151, i64 0, i32 0, i32 0, i32 1
  %155 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %154, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %155) #13
  %156 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %154, i64 0, i32 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %166

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %154, i64 -2
  %161 = bitcast %"class.base::RefCounted"* %160 to %class.PrefStore*
  %162 = bitcast %"class.base::RefCounted"* %160 to void (%class.PrefStore*)***
  %163 = load void (%class.PrefStore*)**, void (%class.PrefStore*)*** %162, align 8
  %164 = getelementptr inbounds void (%class.PrefStore*)*, void (%class.PrefStore*)** %163, i64 7
  %165 = load void (%class.PrefStore*)*, void (%class.PrefStore*)** %164, align 8
  tail call void %165(%class.PrefStore* nonnull %161) #13
  br label %166

166:                                              ; preds = %150, %153, %159
  ret void

167:                                              ; preds = %100
  %168 = ptrtoint i8* %103 to i64
  %169 = inttoptr i64 %101 to %"class.base::internal::UncheckedObserverAdapter"*
  %170 = inttoptr i64 %101 to i64*
  store i64 %168, i64* %170, align 8
  %171 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %169, i64 1
  %172 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %171 to i64
  br label %173

173:                                              ; preds = %167, %100
  %174 = phi i64 [ %101, %100 ], [ %172, %167 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %89, i64 2, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %173
  %179 = ptrtoint i8* %176 to i64
  %180 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %181 = inttoptr i64 %174 to i64*
  store i64 %179, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1
  %183 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %182 to i64
  br label %184

184:                                              ; preds = %178, %173
  %185 = phi i64 [ %174, %173 ], [ %183, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %89, i64 3, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %195, label %189

189:                                              ; preds = %184
  %190 = ptrtoint i8* %187 to i64
  %191 = inttoptr i64 %185 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = inttoptr i64 %185 to i64*
  store i64 %190, i64* %192, align 8
  %193 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 1
  %194 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %193 to i64
  br label %195

195:                                              ; preds = %189, %184
  %196 = phi i64 [ %185, %184 ], [ %194, %189 ]
  %197 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %89, i64 4
  %198 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %197, %40
  br i1 %198, label %105, label %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9PrefStore8ObserverD2Ev(%"class.PrefStore::Observer"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SegregatedPrefStoreD0Ev(%class.SegregatedPrefStore*) unnamed_addr #1 align 2 {
  tail call void @_ZN19SegregatedPrefStoreD2Ev(%class.SegregatedPrefStore* %0) #13
  %2 = bitcast %class.SegregatedPrefStore* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SegregatedPrefStore27UnderlyingPrefStoreObserverD0Ev(%"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.SegregatedPrefStore::UnderlyingPrefStoreObserver"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

declare void @_ZN18WriteablePrefStore22ReportSubValuesChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_3setINS0_6vectorIS6_NS4_IS6_EEEENS0_4lessISC_EENS4_ISC_EEEEj() unnamed_addr

declare zeroext i1 @_ZNK19PersistentPrefStore19IsInMemoryPrefStoreEv(%class.PersistentPrefStore*) unnamed_addr #4

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #13
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #13
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base12ObserverListIN9PrefStore8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base12ObserverListIN9PrefStore8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListIN9PrefStore8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListIN9PrefStore8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base12ObserverListIN9PrefStore8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base12ObserverListIN9PrefStore8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK4base12ObserverListIN9PrefStore8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4base12ObserverListIN9PrefStore8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!17 = distinct !{!17, !9}
!18 = distinct !{!18, !9}
!19 = !{i8 0, i8 2}
!20 = distinct !{!20, !9}
