; ModuleID = '../../third_party/blink/renderer/core/layout/counter_node.cc'
source_filename = "../../third_party/blink/renderer/core/layout/counter_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CounterNode" = type { %"class.WTF::RefCounted", i32, i32, i32, %"class.blink::LayoutObject"*, %"class.blink::LayoutCounter"*, %"class.blink::CounterNode"*, %"class.blink::CounterNode"*, %"class.blink::CounterNode"*, %"class.blink::CounterNode"*, %"class.blink::CounterNode"* }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::LayoutCounter" = type { %"class.blink::LayoutText", %"class.blink::Persistent.849", %"class.blink::CounterNode"*, %"class.blink::LayoutCounter"* }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.848 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.682", %"class.std::__1::unique_ptr.684" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.246", %"class.blink::DataRef.394", %"class.blink::DataRef.398", %"class.blink::DataRef.598", %"class.blink::DataRef.665", %"class.blink::DataRef.669", %"class.blink::DataRef.673", %"class.blink::DataRef.677", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.1", %"class.blink::DataRef.3", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.1" = type { %"class.base::RefCounted.2" }
%"class.base::RefCounted.2" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.3" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.5", %"class.blink::Font" }
%"class.WTF::RefCounted.5" = type { %"class.base::RefCounted.6" }
%"class.base::RefCounted.6" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.31 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.10, %class.scoped_refptr.13, %class.scoped_refptr.23, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.30 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.9 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.9 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1223", [4 x i8] }>
%"class.WTF::RefCounted.1223" = type { %"class.base::RefCounted.1224" }
%"class.base::RefCounted.1224" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.10 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.11", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.11" = type { %"class.base::RefCounted.12" }
%"class.base::RefCounted.12" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.13 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.14", %"class.WTF::RefCounted.21", [4 x i8] }>
%"class.blink::FontSettings.14" = type { %"class.WTF::Vector.15" }
%"class.WTF::Vector.15" = type { %"class.WTF::VectorBuffer.16" }
%"class.WTF::VectorBuffer.16" = type { %"class.WTF::VectorBufferBase.17" }
%"class.WTF::VectorBufferBase.17" = type { %"class.blink::FontTagValuePair.18"*, i32, i32 }
%"class.blink::FontTagValuePair.18" = type { i32, float }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.23 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.24", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.27, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.24" = type { %"class.base::RefCounted.25" }
%"class.base::RefCounted.25" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.27 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.28", [4 x i8] }>
%"class.WTF::RefCounted.28" = type { %"class.base::RefCounted.29" }
%"class.base::RefCounted.29" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.30 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.31 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.32", %"class.WTF::Vector.34", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.32" = type { %"class.base::RefCounted.33" }
%"class.base::RefCounted.33" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.34" = type { %"class.WTF::VectorBuffer.35" }
%"class.WTF::VectorBuffer.35" = type { %"class.WTF::VectorBufferBase.36", [8 x i8] }
%"class.WTF::VectorBufferBase.36" = type { %class.scoped_refptr.37*, i32, i32 }
%class.scoped_refptr.37 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.38", [4 x i8] }>
%"class.WTF::RefCounted.38" = type { %"class.base::RefCounted.39" }
%"class.base::RefCounted.39" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.58, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.38" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.42 }
%union.anon.42 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.53, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.43" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.43" }>
%"struct.std::__1::atomic.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl.46" }
%"struct.std::__1::__cxx_atomic_impl.46" = type { %"struct.std::__1::__cxx_atomic_base_impl.47" }
%"struct.std::__1::__cxx_atomic_base_impl.47" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.48" }
%"struct.std::__1::atomic.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl.51" }
%"struct.std::__1::__cxx_atomic_impl.51" = type { %"struct.std::__1::__cxx_atomic_base_impl.52" }
%"struct.std::__1::__cxx_atomic_base_impl.52" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.53 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.56, %class.scoped_refptr.56 }
%class.scoped_refptr.56 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.58 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.59", [4 x i8] }>
%"class.WTF::RefCounted.59" = type { %"class.base::RefCounted.60" }
%"class.base::RefCounted.60" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.61", i32, [4 x i8], %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.240", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.179", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__atomic_base.99" }
%"struct.std::__1::__atomic_base.99" = type { %"struct.std::__1::__cxx_atomic_impl.100" }
%"struct.std::__1::__cxx_atomic_impl.100" = type { %"struct.std::__1::__cxx_atomic_base_impl.101" }
%"struct.std::__1::__cxx_atomic_base_impl.101" = type { i64 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist.108"* }
%"class.blink::Worklist.108" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::Worklist.115"* }
%"class.blink::Worklist.115" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::Worklist.122"* }
%"class.blink::Worklist.122" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::Worklist.129"* }
%"class.blink::Worklist.129" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::Worklist.136"* }
%"class.blink::Worklist.136" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::Worklist.143"* }
%"class.blink::Worklist.143" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::Worklist.150"* }
%"class.blink::Worklist.150" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.157", %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.173", [4 x i8] }>
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159", %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { i64 }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { float }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.182", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.221" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.108"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.115"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.122"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.129"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.136"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1216", i64 }
%"class.std::__1::vector.1216" = type { %"class.std::__1::__vector_base.1217" }
%"class.std::__1::__vector_base.1217" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1218" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.1219" }
%"struct.std::__1::__compressed_pair_elem.1219" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.239 }
%class.scoped_refptr.239 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.240" = type { %"struct.std::__1::__atomic_base.241" }
%"struct.std::__1::__atomic_base.241" = type { %"struct.std::__1::__cxx_atomic_impl.242" }
%"struct.std::__1::__cxx_atomic_impl.242" = type { %"struct.std::__1::__cxx_atomic_base_impl.243" }
%"struct.std::__1::__cxx_atomic_base_impl.243" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.244 }
%class.scoped_refptr.244 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.43" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.48" }
%"class.blink::Length" = type <{ %union.anon.245, i8, i8, i8, i8 }>
%union.anon.245 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.246" = type { %class.scoped_refptr.247 }
%class.scoped_refptr.247 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.248", [4 x i8], %"class.blink::DataRef.250", %"class.blink::DataRef.282", %"class.WTF::Vector.286", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.291, %class.scoped_refptr.300, %"class.blink::Persistent.308", %"class.blink::Persistent.310", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.248" = type { %"class.base::RefCounted.249" }
%"class.base::RefCounted.249" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.250" = type { %class.scoped_refptr.251 }
%class.scoped_refptr.251 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.252", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.254, %class.scoped_refptr.261, %"class.blink::Persistent.272", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.252" = type { %"class.base::RefCounted.253" }
%"class.base::RefCounted.253" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.254 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.255", %"class.WTF::Vector.256" }
%"class.base::RefCountedThreadSafe.255" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.256" = type { %"class.WTF::VectorBuffer.257" }
%"class.WTF::VectorBuffer.257" = type { %"class.WTF::VectorBufferBase.258" }
%"class.WTF::VectorBufferBase.258" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.261 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.262", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.262" = type { %"class.base::RefCounted.263" }
%"class.base::RefCounted.263" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1245 }
%class.scoped_refptr.1245 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1246", %"class.WTF::Vector.581", %"class.WTF::Vector.1248", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1246" = type { %"class.base::RefCounted.1247" }
%"class.base::RefCounted.1247" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.581" = type { %"class.WTF::VectorBuffer.582" }
%"class.WTF::VectorBuffer.582" = type { %"class.WTF::VectorBufferBase.583" }
%"class.WTF::VectorBufferBase.583" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1248" = type { %"class.WTF::VectorBuffer.1249" }
%"class.WTF::VectorBuffer.1249" = type { %"class.WTF::VectorBufferBase.1250" }
%"class.WTF::VectorBufferBase.1250" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1251 }
%union.anon.1251 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.266" }
%"class.blink::PersistentBase.266" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.271" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.267" }
%"class.WTF::HashMap.267" = type { %"class.WTF::HashTable.268" }
%"class.WTF::HashTable.268" = type <{ %"struct.WTF::KeyValuePair.270"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.270" = type opaque
%"class.blink::PersistentNodePtr.271" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.272" = type { %"class.blink::PersistentBase.273" }
%"class.blink::PersistentBase.273" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.271" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.276" }
%"class.WTF::Vector.276" = type { %"class.WTF::VectorBuffer.277" }
%"class.WTF::VectorBuffer.277" = type { %"class.WTF::VectorBufferBase.278" }
%"class.WTF::VectorBufferBase.278" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.282" = type { %class.scoped_refptr.283 }
%class.scoped_refptr.283 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.284", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.284" = type { %"class.base::RefCounted.285" }
%"class.base::RefCounted.285" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.286" = type { %"class.WTF::VectorBuffer.287" }
%"class.WTF::VectorBuffer.287" = type { %"class.WTF::VectorBufferBase.288" }
%"class.WTF::VectorBufferBase.288" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.291 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.292", %"class.WTF::Vector.294" }
%"class.WTF::RefCounted.292" = type { %"class.base::RefCounted.293" }
%"class.base::RefCounted.293" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.294" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { %"struct.std::__1::pair.297"*, i32, i32 }
%"struct.std::__1::pair.297" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.300 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.301", [4 x i8], %"class.WTF::Vector.303" }
%"class.WTF::RefCounted.301" = type { %"class.base::RefCounted.302" }
%"class.base::RefCounted.302" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.303" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.305", [28 x i8] }>
%"class.WTF::VectorBufferBase.305" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.271" }
%"class.blink::Persistent.310" = type { %"class.blink::PersistentBase.311" }
%"class.blink::PersistentBase.311" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.271" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.314", %"class.blink::Member.392" }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.316", %"class.blink::Member.328", %"class.blink::Member.322", %"class.blink::Member.330", %"class.blink::Member.330", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.320", %"class.blink::Member.320" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.320", %"class.blink::Member.322", %"class.blink::Member.320", %"class.blink::Member.320", %"class.blink::Member.324" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::Node"* }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.860", %"class.WTF::Vector.860", i8, i32, %"class.blink::Member.867", %"class.blink::Member.869", %"class.blink::Member.871", %"class.blink::Member.873", %"class.blink::Member.875", %"class.blink::Member.877", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.885", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.891", %"class.blink::Member.893", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.896", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.345", %"class.blink::Member.920", %"class.blink::Member.345", %"class.blink::Member.345", %"class.blink::Member.345", %"class.blink::UserActionElementSet", %"class.blink::Member.929", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.936", i16, i8, %"class.blink::Member.943", %"class.blink::Member.945", %"class.blink::Member.947", %"class.blink::Member.949", %"class.blink::TextLinkColors", %"class.blink::Member.951", i8, [7 x i8], %"class.blink::HeapHashMap.953", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.345", %"class.WTF::Vector.960", %"class.blink::Member.965", %"class.blink::Member.967", i8, %"class.blink::Member.345", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.969", %"class.blink::HeapVector.971", %"class.std::__1::unique_ptr.979", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.985", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.998", %"class.WTF::Vector.1000", i8, i8, %"class.std::__1::unique_ptr.1005", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1011", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1019", i8, i32, %"class.blink::Member.1021", %"class.blink::Member.1023", %"class.blink::Member.1025", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1027", %"class.WTF::HashMap.1029", %"class.blink::Member.1034", %"class.blink::Member.1036", %"class.blink::Member.1038", %"class.blink::Member.1040", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1042", i8, i32, %"class.blink::Member.1049", %"class.blink::Member.1051", i32, %"class.blink::Member.1053", %"class.blink::Member.1055", %"class.blink::Member.1057", %"class.std::__1::unique_ptr.1059", i64, %"class.std::__1::unique_ptr.1065", i32, i32, %"class.blink::Member.1080", %"class.blink::Member.1082", %"class.blink::Member.1084", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1086", %"class.WTF::Vector.1088", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1093", %"class.blink::Member.1100", %"class.std::__1::unique_ptr.1102", %"class.blink::Member.1108", i8, i8, %"class.WTF::String", %"class.blink::Member.1110", i8, [7 x i8], %"class.blink::HeapHashMap.1112", %"class.blink::HeapObserverSet", %"class.blink::Member.1126", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1128", i32, i8, i8, %"class.blink::WeakMember.1130", %"class.blink::Member.1131" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.853" }
%"class.blink::HeapHashMap.853" = type { %"class.WTF::HashMap.856" }
%"class.WTF::HashMap.856" = type { %"class.WTF::HashTable.857" }
%"class.WTF::HashTable.857" = type <{ %"struct.WTF::KeyValuePair.859"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.859" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.860" = type { %"class.WTF::VectorBuffer.861" }
%"class.WTF::VectorBuffer.861" = type { %"class.WTF::VectorBufferBase.862" }
%"class.WTF::VectorBufferBase.862" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.863 }
%class.scoped_refptr.863 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.864", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.864" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1144", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1185", i32, i8, [3 x i8], %"class.blink::HeapVector.1187", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1195", %"class.blink::Member.1197", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1206", %"class.blink::Member.1212", %"class.blink::Member.1214", i8, [7 x i8] }>
%"class.blink::Supplementable.1144" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1145" }
%"class.blink::HeapHashMap.1145" = type { %"class.WTF::HashMap.1148" }
%"class.WTF::HashMap.1148" = type { %"class.WTF::HashTable.1149" }
%"class.WTF::HashTable.1149" = type <{ %"struct.WTF::KeyValuePair.1151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1151" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1160" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1152" }
%"class.blink::HeapObserverSet.1152" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1153" }
%"class.blink::HeapHashSet.1153" = type { %"class.WTF::HashSet.1156" }
%"class.WTF::HashSet.1156" = type { %"class.WTF::HashTable.1157" }
%"class.WTF::HashTable.1157" = type <{ %"class.blink::WeakMember.1159"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1159" = type opaque
%"class.blink::Supplementable.1160" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1161" }
%"class.blink::HeapHashMap.1161" = type { %"class.WTF::HashMap.1164" }
%"class.WTF::HashMap.1164" = type { %"class.WTF::HashTable.1165" }
%"class.WTF::HashTable.1165" = type <{ %"struct.WTF::KeyValuePair.1167"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1167" = type { i8*, %"class.blink::Member.1231" }
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1233" }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1168, %"class.std::__1::unique_ptr.1169", %"class.std::__1::unique_ptr.1169", %"class.std::__1::unique_ptr.1175", %"class.std::__1::unique_ptr.1175", %"class.blink::Member.869", i32, [4 x i8], %"class.WTF::HashSet.1181", i32, i32 }
%class.scoped_refptr.1168 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1169" = type { %"class.std::__1::__compressed_pair.1170" }
%"class.std::__1::__compressed_pair.1170" = type { %"struct.std::__1::__compressed_pair_elem.1171" }
%"struct.std::__1::__compressed_pair_elem.1171" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1175" = type { %"class.std::__1::__compressed_pair.1176" }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.1177" }
%"struct.std::__1::__compressed_pair_elem.1177" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1181" = type { %"class.WTF::HashTable.1182" }
%"class.WTF::HashTable.1182" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1185" = type { %"class.blink::MemberBase.1186" }
%"class.blink::MemberBase.1186" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1187" = type { %"class.WTF::Vector.1190" }
%"class.WTF::Vector.1190" = type { %"class.WTF::VectorBuffer.1191" }
%"class.WTF::VectorBuffer.1191" = type { %"class.WTF::VectorBufferBase.1192" }
%"class.WTF::VectorBufferBase.1192" = type { %"class.blink::Member.1193"*, i32, i32 }
%"class.blink::Member.1193" = type opaque
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1199", i32, i32 }
%"class.blink::HeapHashMap.1199" = type { %"class.WTF::HashMap.1202" }
%"class.WTF::HashMap.1202" = type { %"class.WTF::HashTable.1203" }
%"class.WTF::HashTable.1203" = type <{ %"struct.WTF::KeyValuePair.1205"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1205" = type opaque
%"class.std::__1::unique_ptr.1206" = type { %"class.std::__1::__compressed_pair.1207" }
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1214" = type { %"class.blink::MemberBase.1215" }
%"class.blink::MemberBase.1215" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.879" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.blink::KURL"* }
%"class.blink::Member.891" = type { %"class.blink::MemberBase.892" }
%"class.blink::MemberBase.892" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.893" = type { %"class.blink::MemberBase.894" }
%"class.blink::MemberBase.894" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.895 }
%class.scoped_refptr.895 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.896" = type { %"class.WTF::VectorBuffer.897" }
%"class.WTF::VectorBuffer.897" = type { %"class.WTF::VectorBufferBase.898" }
%"class.WTF::VectorBufferBase.898" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.899 }
%class.scoped_refptr.899 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.900", i32, i32, %"class.blink::Persistent.902" }
%"class.WTF::RefCounted.900" = type { %"class.base::RefCounted.901" }
%"class.base::RefCounted.901" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.902" = type { %"class.blink::PersistentBase.903" }
%"class.blink::PersistentBase.903" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.271" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.906" }
%"class.blink::HeapHashMap.906" = type { %"class.WTF::HashMap.909" }
%"class.WTF::HashMap.909" = type { %"class.WTF::HashTable.910" }
%"class.WTF::HashTable.910" = type <{ %"struct.WTF::KeyValuePair.912"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.912" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.913" }
%"class.blink::MemberBase.913" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.922" }
%"class.blink::HeapHashMap.922" = type { %"class.WTF::HashMap.925" }
%"class.WTF::HashMap.925" = type { %"class.WTF::HashTable.926" }
%"class.WTF::HashTable.926" = type <{ %"struct.WTF::KeyValuePair.928"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.928" = type opaque
%"class.blink::Member.929" = type { %"class.blink::MemberBase.930" }
%"class.blink::MemberBase.930" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.933" }
%"class.WTF::HashTable.933" = type <{ %"class.blink::WeakMember.935"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.935" = type opaque
%"class.blink::HeapHashSet.936" = type { %"class.WTF::HashSet.939" }
%"class.WTF::HashSet.939" = type { %"class.WTF::HashTable.940" }
%"class.WTF::HashTable.940" = type <{ %"class.blink::WeakMember.942"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.942" = type opaque
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.949" = type { %"class.blink::MemberBase.950" }
%"class.blink::MemberBase.950" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.953" = type { %"class.WTF::HashMap.956" }
%"class.WTF::HashMap.956" = type { %"class.WTF::HashTable.957" }
%"class.WTF::HashTable.957" = type <{ %"struct.WTF::KeyValuePair.959"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.959" = type opaque
%"class.WTF::Vector.960" = type { %"class.WTF::VectorBuffer.961" }
%"class.WTF::VectorBuffer.961" = type { %"class.WTF::VectorBufferBase.962" }
%"class.WTF::VectorBufferBase.962" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.350" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.347 }
%class.scoped_refptr.347 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.348", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.348" = type { %"class.base::RefCounted.349" }
%"class.base::RefCounted.349" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.354", %"class.blink::Member.356", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.354" = type { %"class.WTF::SingleThreadedBitField.355" }
%"class.WTF::SingleThreadedBitField.355" = type { i32 }
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.288", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.969" = type { %"class.blink::MemberBase.970" }
%"class.blink::MemberBase.970" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.971" = type { %"class.WTF::Vector.974" }
%"class.WTF::Vector.974" = type { %"class.WTF::VectorBuffer.975" }
%"class.WTF::VectorBuffer.975" = type { %"class.WTF::VectorBufferBase.976" }
%"class.WTF::VectorBufferBase.976" = type { %"class.blink::Member.977"*, i32, i32 }
%"class.blink::Member.977" = type opaque
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.992", i32, [4 x i8] }>
%"class.WTF::Vector.992" = type { %"class.WTF::VectorBuffer.993" }
%"class.WTF::VectorBuffer.993" = type { %"class.WTF::VectorBufferBase.994" }
%"class.WTF::VectorBufferBase.994" = type { %"struct.std::__1::pair.995"*, i32, i32 }
%"struct.std::__1::pair.995" = type opaque
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1000" = type { %"class.WTF::VectorBuffer.1001" }
%"class.WTF::VectorBuffer.1001" = type { %"class.WTF::VectorBufferBase.1002" }
%"class.WTF::VectorBufferBase.1002" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1005" = type { %"class.std::__1::__compressed_pair.1006" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.345"*, i32, i32 }
%"class.blink::HeapVector.1011" = type { %"class.WTF::Vector.1014" }
%"class.WTF::Vector.1014" = type { %"class.WTF::VectorBuffer.1015" }
%"class.WTF::VectorBuffer.1015" = type { %"class.WTF::VectorBufferBase.1016" }
%"class.WTF::VectorBufferBase.1016" = type { %"class.blink::Member.1017"*, i32, i32 }
%"class.blink::Member.1017" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.328" }
%"class.blink::Member.1019" = type { %"class.blink::MemberBase.1020" }
%"class.blink::MemberBase.1020" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1021" = type { %"class.blink::MemberBase.1022" }
%"class.blink::MemberBase.1022" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1029" = type { %"class.WTF::HashTable.1030" }
%"class.WTF::HashTable.1030" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1036" = type { %"class.blink::MemberBase.1037" }
%"class.blink::MemberBase.1037" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1038" = type { %"class.blink::MemberBase.1039" }
%"class.blink::MemberBase.1039" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.919", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.916, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.916 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.917" }>
%"class.base::RefCountedThreadSafe.917" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.918 }
%class.scoped_refptr.918 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.919" = type { %"class.blink::MemberBase.329" }
%"class.blink::HeapHashSet.1042" = type { %"class.WTF::HashSet.1045" }
%"class.WTF::HashSet.1045" = type { %"class.WTF::HashTable.1046" }
%"class.WTF::HashTable.1046" = type <{ %"class.blink::Member.1048"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1048" = type opaque
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1053" = type { %"class.blink::MemberBase.1054" }
%"class.blink::MemberBase.1054" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1055" = type { %"class.blink::MemberBase.1056" }
%"class.blink::MemberBase.1056" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.1058" }
%"class.blink::MemberBase.1058" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1059" = type { %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1068", %"class.WTF::HashSet.1068", %"class.WTF::HashSet.1068", %"class.WTF::HashSet.1068", %"class.WTF::HashSet.1068", %"class.WTF::HashSet.1068", i32, [4 x i8], %"class.WTF::HashMap.1072", %"class.WTF::HashMap.1072", %"class.WTF::HashMap.1072", %"class.WTF::HashMap.1072", %"class.WTF::HashMap.1072", %"class.WTF::HashMap.1072", %"class.WTF::HashMap.1072", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.1068" = type { %"class.WTF::HashTable.1069" }
%"class.WTF::HashTable.1069" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1072" = type { %"class.WTF::HashTable.1073" }
%"class.WTF::HashTable.1073" = type <{ %"struct.WTF::KeyValuePair.1076"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1076" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1080" = type { %"class.blink::MemberBase.1081" }
%"class.blink::MemberBase.1081" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1082" = type { %"class.blink::MemberBase.1083" }
%"class.blink::MemberBase.1083" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.1085" }
%"class.blink::MemberBase.1085" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1088" = type { %"class.WTF::VectorBuffer.1089" }
%"class.WTF::VectorBuffer.1089" = type { %"class.WTF::VectorBufferBase.1090" }
%"class.WTF::VectorBufferBase.1090" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1093" = type { %"class.WTF::HashMap.1096" }
%"class.WTF::HashMap.1096" = type { %"class.WTF::HashTable.1097" }
%"class.WTF::HashTable.1097" = type <{ %"struct.WTF::KeyValuePair.1099"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1099" = type opaque
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1110" = type { %"class.blink::MemberBase.1111" }
%"class.blink::MemberBase.1111" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1112" = type { %"class.WTF::HashMap.1115" }
%"class.WTF::HashMap.1115" = type { %"class.WTF::HashTable.1116" }
%"class.WTF::HashTable.1116" = type <{ %"struct.WTF::KeyValuePair.1118"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1118" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1119" }
%"class.blink::HeapHashSet.1119" = type { %"class.WTF::HashSet.1122" }
%"class.WTF::HashSet.1122" = type { %"class.WTF::HashTable.1123" }
%"class.WTF::HashTable.1123" = type <{ %"class.blink::WeakMember.1125"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1125" = type opaque
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.328", %"class.blink::HeapHashSet.1135", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1142", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1135" = type { %"class.WTF::HashSet.1138" }
%"class.WTF::HashSet.1138" = type { %"class.WTF::HashTable.1139" }
%"class.WTF::HashTable.1139" = type <{ %"class.blink::Member.1141"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1141" = type opaque
%"class.blink::HeapTaskRunnerTimer.1142" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1143", { i64, i64 } }
%"class.blink::WeakMember.1143" = type { %"class.blink::MemberBase.1129" }
%"class.blink::WeakMember.1130" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.334" }
%"class.blink::HeapHashMap.334" = type { %"class.WTF::HashMap.337" }
%"class.WTF::HashMap.337" = type { %"class.WTF::HashTable.338" }
%"class.WTF::HashTable.338" = type <{ %"struct.WTF::KeyValuePair.340"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.340" = type { %"class.WTF::AtomicString", %"class.blink::Member.341" }
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.345", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.394" = type { %class.scoped_refptr.395 }
%class.scoped_refptr.395 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.396", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.396" = type { %"class.base::RefCounted.397" }
%"class.base::RefCounted.397" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.398" = type { %class.scoped_refptr.399 }
%class.scoped_refptr.399 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.400", [4 x i8], %"class.blink::DataRef.402", %"class.blink::DataRef.468", %"class.blink::TransformOperations", %class.scoped_refptr.300, %"class.blink::Persistent.592", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.400" = type { %"class.base::RefCounted.401" }
%"class.base::RefCounted.401" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.402" = type { %class.scoped_refptr.403 }
%class.scoped_refptr.403 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.404", [4 x i8], %"class.blink::DataRef.406", %"class.blink::Persistent.444", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.404" = type { %"class.base::RefCounted.405" }
%"class.base::RefCounted.405" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.406" = type { %class.scoped_refptr.407 }
%class.scoped_refptr.407 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.408", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.426, %class.scoped_refptr.429, %class.scoped_refptr.432, %class.scoped_refptr.435, %class.scoped_refptr.436, %class.scoped_refptr.437, %"class.blink::Persistent.444", %"class.blink::Persistent.459", %"class.absl::optional.463", %"class.absl::optional.463", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.408" = type { %"class.base::RefCounted.409" }
%"class.base::RefCounted.409" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.410", %"class.std::__1::unique_ptr.415" }
%"class.WTF::Vector.410" = type { %"class.WTF::VectorBuffer.411" }
%"class.WTF::VectorBuffer.411" = type { %"class.WTF::VectorBufferBase.412" }
%"class.WTF::VectorBufferBase.412" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.418", %"class.WTF::Vector.410", i32, i32 }
%"class.WTF::Vector.418" = type { %"class.WTF::VectorBuffer.419" }
%"class.WTF::VectorBuffer.419" = type { %"class.WTF::VectorBufferBase.420" }
%"class.WTF::VectorBufferBase.420" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.426 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.427", [4 x i8] }>
%"class.WTF::RefCounted.427" = type { %"class.base::RefCounted.428" }
%"class.base::RefCounted.428" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.429 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.430", [4 x i8] }>
%"class.WTF::RefCounted.430" = type { %"class.base::RefCounted.431" }
%"class.base::RefCounted.431" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.432 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.433" }>
%"class.WTF::RefCounted.433" = type { %"class.base::RefCounted.434" }
%"class.base::RefCounted.434" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.435 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.436 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.437 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.438", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.438" = type { %"class.base::RefCounted.439" }
%"class.base::RefCounted.439" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.440" }
%"class.blink::DataRef.440" = type { %class.scoped_refptr.441 }
%class.scoped_refptr.441 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.308", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.442" }
%"class.WTF::RefCounted.442" = type { %"class.base::RefCounted.443" }
%"class.base::RefCounted.443" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.459" = type { %"class.blink::PersistentBase.460" }
%"class.blink::PersistentBase.460" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.271" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.429, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.463" = type { %"class.absl::optional_internal::optional_data.464" }
%"class.absl::optional_internal::optional_data.464" = type { %"class.absl::optional_internal::optional_data_base.465" }
%"class.absl::optional_internal::optional_data_base.465" = type { %"class.absl::optional_internal::optional_data_dtor_base.466" }
%"class.absl::optional_internal::optional_data_dtor_base.466" = type { i8, [3 x i8], %union.anon.467 }
%union.anon.467 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.444" = type { %"class.blink::PersistentBase.445" }
%"class.blink::PersistentBase.445" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.271" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.448" }
%"class.blink::HeapVector.448" = type { %"class.WTF::Vector.451" }
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"class.blink::Member.454"*, i32, i32 }
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.468" = type { %class.scoped_refptr.469 }
%class.scoped_refptr.469 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.470", %"class.blink::DataRef.472", %"class.blink::DataRef.476", %"class.blink::DataRef.485", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.504", %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.575", %"class.WTF::Vector.581", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.470" = type { %"class.base::RefCounted.471" }
%"class.base::RefCounted.471" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.472" = type { %class.scoped_refptr.473 }
%class.scoped_refptr.473 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.474", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.474" = type { %"class.base::RefCounted.475" }
%"class.base::RefCounted.475" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.476" = type { %class.scoped_refptr.477 }
%class.scoped_refptr.477 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.478", [4 x i8], %"class.WTF::Vector.480", i8, [7 x i8] }>
%"class.WTF::RefCounted.478" = type { %"class.base::RefCounted.479" }
%"class.base::RefCounted.479" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.480" = type { %"class.WTF::VectorBuffer.481" }
%"class.WTF::VectorBuffer.481" = type { %"class.WTF::VectorBufferBase.482" }
%"class.WTF::VectorBufferBase.482" = type { i32*, i32, i32 }
%"class.blink::DataRef.485" = type { %class.scoped_refptr.486 }
%class.scoped_refptr.486 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.487", [4 x i8], %"class.WTF::HashMap.489", %"class.WTF::HashMap.489", %"class.WTF::HashMap.489", %"class.WTF::HashMap.489", %"class.WTF::HashMap.489", %"class.WTF::HashMap.489", %"class.WTF::HashMap.494", %"class.WTF::HashMap.494", %"class.WTF::HashMap.494", %"class.WTF::HashMap.494", %"class.WTF::HashMap.499", %"class.WTF::Vector.410", %"class.WTF::Vector.410", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.489" = type { %"class.WTF::HashTable.490" }
%"class.WTF::HashTable.490" = type <{ %"struct.WTF::KeyValuePair.493"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.493" = type { %"class.WTF::String", %"class.WTF::Vector.1235" }
%"class.WTF::Vector.1235" = type { %"class.WTF::VectorBuffer.1236" }
%"class.WTF::VectorBuffer.1236" = type { %"class.WTF::VectorBufferBase.1237" }
%"class.WTF::VectorBufferBase.1237" = type { i64*, i32, i32 }
%"class.WTF::HashMap.494" = type { %"class.WTF::HashTable.495" }
%"class.WTF::HashTable.495" = type <{ %"struct.WTF::KeyValuePair.498"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.498" = type { i64, %"class.WTF::Vector.581" }
%"class.WTF::HashMap.499" = type { %"class.WTF::HashTable.500" }
%"class.WTF::HashTable.500" = type <{ %"struct.WTF::KeyValuePair.503"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.503" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.507" }
%"class.WTF::HashMap.507" = type { %"class.WTF::HashTable.508" }
%"class.WTF::HashTable.508" = type <{ %"struct.WTF::KeyValuePair.511"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.511" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1240", %"class.absl::optional.1240", %"class.absl::optional.1240" }
%"class.absl::optional.1240" = type { %"class.absl::optional_internal::optional_data.1241" }
%"class.absl::optional_internal::optional_data.1241" = type { %"class.absl::optional_internal::optional_data_base.1242" }
%"class.absl::optional_internal::optional_data_base.1242" = type { %"class.absl::optional_internal::optional_data_dtor_base.1243" }
%"class.absl::optional_internal::optional_data_dtor_base.1243" = type { i8, %union.anon.1244 }
%union.anon.1244 = type { i32 }
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.286", %"class.WTF::Vector.530", %"class.WTF::Vector.518", %"class.WTF::Vector.535", %"class.WTF::Vector.540", %"class.WTF::Vector.545" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.518", %"class.WTF::Vector.518", %"class.WTF::Vector.523" }
%"class.WTF::Vector.523" = type { %"class.WTF::VectorBuffer.524" }
%"class.WTF::VectorBuffer.524" = type { %"class.WTF::VectorBufferBase.525" }
%"class.WTF::VectorBufferBase.525" = type { %class.scoped_refptr.526*, i32, i32 }
%class.scoped_refptr.526 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.527" }
%"class.base::RefCountedThreadSafe.527" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.530" = type { %"class.WTF::VectorBuffer.531" }
%"class.WTF::VectorBuffer.531" = type { %"class.WTF::VectorBufferBase.532" }
%"class.WTF::VectorBufferBase.532" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.518" = type { %"class.WTF::VectorBuffer.519" }
%"class.WTF::VectorBuffer.519" = type { %"class.WTF::VectorBufferBase.520" }
%"class.WTF::VectorBufferBase.520" = type { double*, i32, i32 }
%"class.WTF::Vector.535" = type { %"class.WTF::VectorBuffer.536" }
%"class.WTF::VectorBuffer.536" = type { %"class.WTF::VectorBufferBase.537" }
%"class.WTF::VectorBufferBase.537" = type { i32*, i32, i32 }
%"class.WTF::Vector.540" = type { %"class.WTF::VectorBuffer.541" }
%"class.WTF::VectorBuffer.541" = type { %"class.WTF::VectorBufferBase.542" }
%"class.WTF::VectorBufferBase.542" = type { i32*, i32, i32 }
%"class.WTF::Vector.545" = type { %"class.WTF::VectorBuffer.546" }
%"class.WTF::VectorBuffer.546" = type { %"class.WTF::VectorBufferBase.547" }
%"class.WTF::VectorBufferBase.547" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.556" }
%"class.WTF::Vector.556" = type { %"class.WTF::VectorBuffer.557" }
%"class.WTF::VectorBuffer.557" = type { %"class.WTF::VectorBufferBase.558" }
%"class.WTF::VectorBufferBase.558" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.567" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { %"class.blink::Persistent.308"*, i32, i32 }
%"class.std::__1::unique_ptr.575" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.308", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.586" }
%"class.WTF::Vector.586" = type { %"class.WTF::VectorBuffer.587" }
%"class.WTF::VectorBuffer.587" = type { %"class.WTF::VectorBufferBase.588" }
%"class.WTF::VectorBufferBase.588" = type { %class.scoped_refptr.589*, i32, i32 }
%class.scoped_refptr.589 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.433", [4 x i8] }>
%"class.blink::Persistent.592" = type { %"class.blink::PersistentBase.593" }
%"class.blink::PersistentBase.593" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.271" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.596" }
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.598" = type { %class.scoped_refptr.599 }
%class.scoped_refptr.599 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.600", [4 x i8], %"class.blink::DataRef.602", %"class.blink::DataRef.606", %"class.blink::DataRef.627", %"class.blink::DataRef.645", %"class.blink::DataRef.657", %"class.blink::DataRef.661", %class.scoped_refptr.631, i32, [4 x i8] }>
%"class.WTF::RefCounted.600" = type { %"class.base::RefCounted.601" }
%"class.base::RefCounted.601" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.602" = type { %class.scoped_refptr.603 }
%class.scoped_refptr.603 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.604", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.604" = type { %"class.base::RefCounted.605" }
%"class.base::RefCounted.605" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.606" = type { %class.scoped_refptr.607 }
%class.scoped_refptr.607 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.608", %class.scoped_refptr.610, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.608" = type { %"class.base::RefCounted.609" }
%"class.base::RefCounted.609" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.610 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.611", %"class.std::__1::unique_ptr.617", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.430" }>
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.620, i32, %"struct.std::__1::atomic.48", %"struct.std::__1::atomic.48", i8, i8 }>
%class.sk_sp.620 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.621, %class.SkTDArray.622, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.43" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.621 = type { i8*, i32, i32 }
%class.SkTDArray.622 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.623 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.43", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.623 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.240", [3 x i8] }
%"class.blink::DataRef.627" = type { %class.scoped_refptr.628 }
%class.scoped_refptr.628 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.629", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.629" = type { %"class.base::RefCounted.630" }
%"class.base::RefCounted.630" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.631, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.645" = type { %class.scoped_refptr.646 }
%class.scoped_refptr.646 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.647", [4 x i8], %class.scoped_refptr.649, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.647" = type { %"class.base::RefCounted.648" }
%"class.base::RefCounted.648" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.649 = type { %"class.base::RefCountedData.650"* }
%"class.base::RefCountedData.650" = type { %"class.base::RefCountedThreadSafe.651", %"class.WTF::Vector.652" }
%"class.base::RefCountedThreadSafe.651" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.652" = type { %"class.WTF::VectorBuffer.653" }
%"class.WTF::VectorBuffer.653" = type { %"class.WTF::VectorBufferBase.654" }
%"class.WTF::VectorBufferBase.654" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.657" = type { %class.scoped_refptr.658 }
%class.scoped_refptr.658 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.659", %class.scoped_refptr.631, %class.scoped_refptr.631, %class.scoped_refptr.631 }
%"class.WTF::RefCounted.659" = type { %"class.base::RefCounted.660" }
%"class.base::RefCounted.660" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.661" = type { %class.scoped_refptr.662 }
%class.scoped_refptr.662 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.663", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.663" = type { %"class.base::RefCounted.664" }
%"class.base::RefCounted.664" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.631 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.632", %"class.blink::Persistent.634", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.632" = type { %"class.base::RefCounted.633" }
%"class.base::RefCounted.633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.634" = type { %"class.blink::PersistentBase.635" }
%"class.blink::PersistentBase.635" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.271" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.345", %"class.blink::HeapHashMap.638" }
%"class.blink::HeapHashMap.638" = type { %"class.WTF::HashMap.641" }
%"class.WTF::HashMap.641" = type { %"class.WTF::HashTable.642" }
%"class.WTF::HashTable.642" = type <{ %"struct.WTF::KeyValuePair.644"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.644" = type opaque
%"class.blink::DataRef.665" = type { %class.scoped_refptr.666 }
%class.scoped_refptr.666 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.667", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.667" = type { %"class.base::RefCounted.668" }
%"class.base::RefCounted.668" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.669" = type { %class.scoped_refptr.670 }
%class.scoped_refptr.670 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.671", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.671" = type { %"class.base::RefCounted.672" }
%"class.base::RefCounted.672" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.673" = type { %class.scoped_refptr.674 }
%class.scoped_refptr.674 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.675", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.675" = type { %"class.base::RefCounted.676" }
%"class.base::RefCounted.676" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.677" = type { %class.scoped_refptr.678 }
%class.scoped_refptr.678 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.679", %class.scoped_refptr.681 }
%"class.WTF::RefCounted.679" = type { %"class.base::RefCounted.680" }
%"class.base::RefCounted.680" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.681 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.851", %"class.blink::StyleVariables", %class.scoped_refptr.681 }
%"class.WTF::RefCounted.851" = type { %"class.base::RefCounted.852" }
%"class.base::RefCounted.852" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.682" = type { %"class.base::RefCounted.683" }
%"class.base::RefCounted.683" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.687" }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.WTF::Vector.690"* }
%"class.WTF::Vector.690" = type { %"class.WTF::VectorBuffer.1255" }
%"class.WTF::VectorBuffer.1255" = type { %"class.WTF::VectorBufferBase.1256", [32 x i8] }
%"class.WTF::VectorBufferBase.1256" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.697" }
%"class.blink::MemberBase.697" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.698" }
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.701", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.707", %"class.std::__1::unique_ptr.828", i8, %"class.absl::optional.834", %class.scoped_refptr.810, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.839" }
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.710, %class.scoped_refptr.710, %class.scoped_refptr.710, %class.scoped_refptr.710, %class.scoped_refptr.710, %class.scoped_refptr.710, %class.scoped_refptr.745, %class.scoped_refptr.759, %class.scoped_refptr.760, %class.scoped_refptr.760, %class.scoped_refptr.760, %class.scoped_refptr.760, %class.scoped_refptr.760, %class.scoped_refptr.760, %class.scoped_refptr.800, %class.scoped_refptr.801, %class.scoped_refptr.801, %class.scoped_refptr.801, %class.scoped_refptr.801, %class.scoped_refptr.801, %class.scoped_refptr.801, %class.scoped_refptr.801, %class.scoped_refptr.801, %class.scoped_refptr.824 }
%class.scoped_refptr.710 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.727" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.711", i8, i8, %class.scoped_refptr.713, i32, i32 }
%"class.WTF::RefCounted.711" = type { %"class.base::RefCounted.712" }
%"class.base::RefCounted.712" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.713 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.720, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.721", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.714" }
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.720 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.746", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.746" = type { %"class.WTF::RefCounted.747", i8, i8, %class.scoped_refptr.720, i32, i32 }
%"class.WTF::RefCounted.747" = type { %"class.base::RefCounted.748" }
%"class.base::RefCounted.748" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.749" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.749" = type { %"class.absl::optional_internal::optional_data.750" }
%"class.absl::optional_internal::optional_data.750" = type { %"class.absl::optional_internal::optional_data_base.751" }
%"class.absl::optional_internal::optional_data_base.751" = type { %"class.absl::optional_internal::optional_data_dtor_base.752" }
%"class.absl::optional_internal::optional_data_dtor_base.752" = type { i8, %union.anon.753 }
%union.anon.753 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.754" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.721" = type { %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.730", %"class.std::__1::unique_ptr.736", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.730" = type { %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.745 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.760 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.761" }
%"class.blink::PaintPropertyNode.761" = type { %"class.WTF::RefCounted.762", i8, i8, %class.scoped_refptr.764, i32, i32 }
%"class.WTF::RefCounted.762" = type { %"class.base::RefCounted.763" }
%"class.base::RefCounted.763" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.764 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.713, %class.scoped_refptr.765, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.787", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.765 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.802" }
%"class.blink::PaintPropertyNode.802" = type { %"class.WTF::RefCounted.803", i8, i8, %class.scoped_refptr.765, i32, i32 }
%"class.WTF::RefCounted.803" = type { %"class.base::RefCounted.804" }
%"class.base::RefCounted.804" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.766" }
%"class.std::__1::vector.766" = type { %"class.std::__1::__vector_base.767" }
%"class.std::__1::__vector_base.767" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.782" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.768, [20 x float], i32, [4 x i8], %"class.std::__1::vector.775", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.768 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.769, i32, %"class.absl::optional.770", i8, i32 }
%class.sk_sp.769 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.770" = type { %"class.absl::optional_internal::optional_data.771" }
%"class.absl::optional_internal::optional_data.771" = type { %"class.absl::optional_internal::optional_data_base.772" }
%"class.absl::optional_internal::optional_data_base.772" = type { %"class.absl::optional_internal::optional_data_dtor_base.773" }
%"class.absl::optional_internal::optional_data_dtor_base.773" = type { i8, %union.anon.774 }
%union.anon.774 = type { %struct.SkRect }
%"class.std::__1::vector.775" = type { %"class.std::__1::__vector_base.776" }
%"class.std::__1::__vector_base.776" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.777" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.793" }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { i32*, i32*, %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { i32* }
%class.scoped_refptr.800 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.801 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.813" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.713, %"class.absl::optional.805", %class.scoped_refptr.810, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.805" = type { %"class.absl::optional_internal::optional_data.806" }
%"class.absl::optional_internal::optional_data.806" = type { %"class.absl::optional_internal::optional_data_base.807" }
%"class.absl::optional_internal::optional_data_base.807" = type { %"class.absl::optional_internal::optional_data_dtor_base.808" }
%"class.absl::optional_internal::optional_data_dtor_base.808" = type { i8, [3 x i8], %union.anon.809 }
%union.anon.809 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.816", i32, [4 x i8] }>
%"class.WTF::Vector.816" = type { %"class.WTF::VectorBuffer.817" }
%"class.WTF::VectorBuffer.817" = type { %"class.WTF::VectorBufferBase.818" }
%"class.WTF::VectorBufferBase.818" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.824 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.828" = type { %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.713, %class.scoped_refptr.765, %class.scoped_refptr.764 }
%"class.absl::optional.834" = type { %"class.absl::optional_internal::optional_data.835" }
%"class.absl::optional_internal::optional_data.835" = type { %"class.absl::optional_internal::optional_data_base.836" }
%"class.absl::optional_internal::optional_data_base.836" = type { %"class.absl::optional_internal::optional_data_dtor_base.837" }
%"class.absl::optional_internal::optional_data_dtor_base.837" = type { i8, %union.anon.838 }
%union.anon.838 = type { %"class.blink::IntRect" }
%class.scoped_refptr.810 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.811", [4 x i8] }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.839" = type { %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.blink::FragmentData"* }
%"class.WTF::String" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.848 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type opaque
%"class.blink::Persistent.849" = type { %"class.blink::PersistentBase.850" }
%"class.blink::PersistentBase.850" = type { %"class.blink::CounterContentData"*, %"class.blink::PersistentNodePtr.271" }
%"class.blink::CounterContentData" = type { %"class.blink::ContentData", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.314" }
%"class.WTF::HashMap.1226" = type { %"class.WTF::HashTable.1227" }
%"class.WTF::HashTable.1227" = type <{ %"struct.WTF::KeyValuePair.1230"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1230" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1225 }
%class.scoped_refptr.1225 = type { %"class.blink::CounterNode"* }

@_ZN5blink11CounterNodeC1ERNS_12LayoutObjectEji = hidden unnamed_addr alias void (%"class.blink::CounterNode"*, %"class.blink::LayoutObject"*, i32, i32), void (%"class.blink::CounterNode"*, %"class.blink::LayoutObject"*, i32, i32)* @_ZN5blink11CounterNodeC2ERNS_12LayoutObjectEji
@_ZN5blink11CounterNodeD1Ev = hidden unnamed_addr alias void (%"class.blink::CounterNode"*), void (%"class.blink::CounterNode"*)* @_ZN5blink11CounterNodeD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink11CounterNodeC2ERNS_12LayoutObjectEji(%"class.blink::CounterNode"* nocapture, %"class.blink::LayoutObject"* dereferenceable(88), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 2
  store i32 %3, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 3
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 4
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 5
  %11 = bitcast %"class.blink::LayoutCounter"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CounterNodeD2Ev(%"class.blink::CounterNode"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 6
  %3 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %2, align 8
  %4 = icmp eq %"class.blink::CounterNode"* %3, null
  br i1 %4, label %5, label %21

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 7
  %7 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %6, align 8
  %8 = icmp eq %"class.blink::CounterNode"* %7, null
  br i1 %8, label %9, label %47

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 8
  %11 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %10, align 8
  %12 = icmp eq %"class.blink::CounterNode"* %11, null
  br i1 %12, label %13, label %61

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 9
  %15 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %14, align 8
  %16 = icmp eq %"class.blink::CounterNode"* %15, null
  br i1 %16, label %17, label %61

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 10
  %19 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %18, align 8
  %20 = icmp eq %"class.blink::CounterNode"* %19, null
  br i1 %20, label %92, label %61

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %3, i64 0, i32 9
  %23 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %22, align 8
  %24 = icmp eq %"class.blink::CounterNode"* %23, %0
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 8
  %27 = bitcast %"class.blink::CounterNode"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.blink::CounterNode"** %22 to i64*
  store i64 %28, i64* %29, align 8
  %30 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %2, align 8
  br label %31

31:                                               ; preds = %25, %21
  %32 = phi %"class.blink::CounterNode"* [ %30, %25 ], [ %3, %21 ]
  %33 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %32, i64 0, i32 10
  %34 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %33, align 8
  %35 = icmp eq %"class.blink::CounterNode"* %34, %0
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 7
  %38 = bitcast %"class.blink::CounterNode"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::CounterNode"** %33 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %2, align 8
  br label %42

42:                                               ; preds = %31, %36
  %43 = phi %"class.blink::CounterNode"* [ %41, %36 ], [ %32, %31 ]
  store %"class.blink::CounterNode"* null, %"class.blink::CounterNode"** %2, align 8
  %44 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 7
  %45 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %44, align 8
  %46 = icmp eq %"class.blink::CounterNode"* %45, null
  br i1 %46, label %61, label %47

47:                                               ; preds = %5, %42
  %48 = phi %"class.blink::CounterNode"* [ %43, %42 ], [ null, %5 ]
  %49 = phi %"class.blink::CounterNode"* [ %45, %42 ], [ %7, %5 ]
  %50 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 7
  %51 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %49, i64 0, i32 8
  %52 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %51, align 8
  %53 = icmp eq %"class.blink::CounterNode"* %52, %0
  br i1 %53, label %54, label %59

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 8
  %56 = bitcast %"class.blink::CounterNode"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.blink::CounterNode"** %51 to i64*
  store i64 %57, i64* %58, align 8
  br label %59

59:                                               ; preds = %54, %47
  %60 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %50, align 8
  store %"class.blink::CounterNode"* null, %"class.blink::CounterNode"** %50, align 8
  br label %61

61:                                               ; preds = %9, %13, %17, %42, %59
  %62 = phi %"class.blink::CounterNode"* [ %48, %59 ], [ %43, %42 ], [ null, %17 ], [ null, %13 ], [ null, %9 ]
  %63 = phi %"class.blink::CounterNode"* [ %60, %59 ], [ null, %42 ], [ null, %17 ], [ null, %13 ], [ null, %9 ]
  %64 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 8
  %65 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %64, align 8
  %66 = icmp eq %"class.blink::CounterNode"* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %65, i64 0, i32 7
  %69 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %68, align 8
  %70 = icmp eq %"class.blink::CounterNode"* %69, %0
  br i1 %70, label %71, label %72

71:                                               ; preds = %67
  store %"class.blink::CounterNode"* %63, %"class.blink::CounterNode"** %68, align 8
  br label %72

72:                                               ; preds = %71, %67
  store %"class.blink::CounterNode"* null, %"class.blink::CounterNode"** %64, align 8
  br label %73

73:                                               ; preds = %61, %72
  %74 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 9
  %75 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %74, align 8
  %76 = icmp eq %"class.blink::CounterNode"* %75, null
  br i1 %76, label %92, label %77

77:                                               ; preds = %73, %89
  %78 = phi %"class.blink::CounterNode"* [ %81, %89 ], [ %75, %73 ]
  %79 = phi %"class.blink::CounterNode"* [ %90, %89 ], [ %63, %73 ]
  %80 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %78, i64 0, i32 8
  %81 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %78, i64 0, i32 6
  store %"class.blink::CounterNode"* %62, %"class.blink::CounterNode"** %82, align 8
  %83 = icmp eq %"class.blink::CounterNode"* %79, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %79, i64 0, i32 8
  %86 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %78, i64 0, i32 7
  store %"class.blink::CounterNode"* %79, %"class.blink::CounterNode"** %87, align 8
  store %"class.blink::CounterNode"* %78, %"class.blink::CounterNode"** %85, align 8
  store %"class.blink::CounterNode"* %86, %"class.blink::CounterNode"** %80, align 8
  %88 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %86, i64 0, i32 7
  store %"class.blink::CounterNode"* %78, %"class.blink::CounterNode"** %88, align 8
  br label %89

89:                                               ; preds = %77, %84
  %90 = phi %"class.blink::CounterNode"* [ %78, %84 ], [ null, %77 ]
  %91 = icmp eq %"class.blink::CounterNode"* %81, null
  br i1 %91, label %92, label %77

92:                                               ; preds = %89, %73, %17
  %93 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 5
  %94 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %93, align 8
  %95 = icmp eq %"class.blink::LayoutCounter"* %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %92, %96
  %97 = phi %"class.blink::LayoutCounter"* [ %98, %96 ], [ %94, %92 ]
  tail call void @_ZN5blink13LayoutCounter10InvalidateEv(%"class.blink::LayoutCounter"* nonnull %97) #10
  %98 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %93, align 8
  %99 = icmp eq %"class.blink::LayoutCounter"* %98, null
  br i1 %99, label %100, label %96

100:                                              ; preds = %96, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CounterNode18ResetLayoutObjectsEv(%"class.blink::CounterNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 5
  %3 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutCounter"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"class.blink::LayoutCounter"* [ %7, %5 ], [ %3, %1 ]
  tail call void @_ZN5blink13LayoutCounter10InvalidateEv(%"class.blink::LayoutCounter"* nonnull %6) #10
  %7 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %2, align 8
  %8 = icmp eq %"class.blink::LayoutCounter"* %7, null
  br i1 %8, label %9, label %5

9:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::CounterNode"* @_ZN5blink11CounterNode6CreateERNS_12LayoutObjectEji(%"class.blink::LayoutObject"* dereferenceable(88), i32, i32) local_unnamed_addr #1 align 2 {
  %4 = tail call noalias i8* @malloc(i64 72) #10
  %5 = bitcast i8* %4 to %"class.blink::CounterNode"*
  %6 = bitcast i8* %4 to i32*
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds i8, i8* %4, i64 4
  %8 = bitcast i8* %7 to i32*
  store i32 %1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %4, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %4, i64 16
  %14 = bitcast i8* %13 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %4, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 48, i1 false) #10
  ret %"class.blink::CounterNode"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::CounterNode"* @_ZNK5blink11CounterNode27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::CounterNode"* readonly, %"class.blink::CounterNode"* readnone) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %"class.blink::CounterNode"* %0, %1
  br i1 %3, label %15, label %4

4:                                                ; preds = %2, %9
  %5 = phi %"class.blink::CounterNode"* [ %11, %9 ], [ %0, %2 ]
  %6 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %5, i64 0, i32 8
  %7 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %6, align 8
  %8 = icmp eq %"class.blink::CounterNode"* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %5, i64 0, i32 6
  %11 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %10, align 8
  %12 = icmp eq %"class.blink::CounterNode"* %11, null
  %13 = icmp eq %"class.blink::CounterNode"* %11, %1
  %14 = or i1 %12, %13
  br i1 %14, label %15, label %4

15:                                               ; preds = %9, %4, %2
  %16 = phi %"class.blink::CounterNode"* [ null, %2 ], [ %7, %4 ], [ null, %9 ]
  ret %"class.blink::CounterNode"* %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::CounterNode"* @_ZNK5blink11CounterNode14NextInPreOrderEPKS0_(%"class.blink::CounterNode"* readonly, %"class.blink::CounterNode"* readnone) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 9
  %4 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %3, align 8
  %5 = icmp eq %"class.blink::CounterNode"* %4, null
  br i1 %5, label %6, label %19

6:                                                ; preds = %2
  %7 = icmp eq %"class.blink::CounterNode"* %0, %1
  br i1 %7, label %19, label %8

8:                                                ; preds = %6, %13
  %9 = phi %"class.blink::CounterNode"* [ %15, %13 ], [ %0, %6 ]
  %10 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %9, i64 0, i32 8
  %11 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %10, align 8
  %12 = icmp eq %"class.blink::CounterNode"* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %9, i64 0, i32 6
  %15 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %14, align 8
  %16 = icmp eq %"class.blink::CounterNode"* %15, null
  %17 = icmp eq %"class.blink::CounterNode"* %15, %1
  %18 = or i1 %16, %17
  br i1 %18, label %19, label %8

19:                                               ; preds = %13, %8, %6, %2
  %20 = phi %"class.blink::CounterNode"* [ %4, %2 ], [ null, %6 ], [ null, %13 ], [ %11, %8 ]
  ret %"class.blink::CounterNode"* %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::CounterNode"* @_ZNK5blink11CounterNode14LastDescendantEv(%"class.blink::CounterNode"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 10
  %3 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %2, align 8
  %4 = icmp eq %"class.blink::CounterNode"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"class.blink::CounterNode"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %6, i64 0, i32 10
  %8 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %7, align 8
  %9 = icmp eq %"class.blink::CounterNode"* %8, null
  br i1 %9, label %10, label %5

10:                                               ; preds = %5, %1
  %11 = phi %"class.blink::CounterNode"* [ null, %1 ], [ %6, %5 ]
  ret %"class.blink::CounterNode"* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::CounterNode"* @_ZNK5blink11CounterNode18PreviousInPreOrderEv(%"class.blink::CounterNode"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 7
  %3 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %2, align 8
  %4 = icmp eq %"class.blink::CounterNode"* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 6
  %7 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %6, align 8
  br label %13

8:                                                ; preds = %1, %8
  %9 = phi %"class.blink::CounterNode"* [ %11, %8 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %9, i64 0, i32 10
  %11 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %10, align 8
  %12 = icmp eq %"class.blink::CounterNode"* %11, null
  br i1 %12, label %13, label %8

13:                                               ; preds = %8, %5
  %14 = phi %"class.blink::CounterNode"* [ %7, %5 ], [ %9, %8 ]
  ret %"class.blink::CounterNode"* %14
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink11CounterNode20ComputeCountInParentEv(%"class.blink::CounterNode"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  br label %40

9:                                                ; preds = %1
  %10 = and i32 %3, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 6
  %14 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %13, align 8
  %15 = icmp eq %"class.blink::CounterNode"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  br label %19

19:                                               ; preds = %9, %12, %16
  %20 = phi i32 [ %18, %16 ], [ 0, %12 ], [ 0, %9 ]
  %21 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 7
  %22 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %21, align 8
  %23 = icmp eq %"class.blink::CounterNode"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %22, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %26, i32 %20) #10
  %28 = extractvalue { i32, i1 } %27, 1
  %29 = extractvalue { i32, i1 } %27, 0
  %30 = select i1 %28, i32 %26, i32 %29, !prof !2
  ret i32 %30

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 6
  %33 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %33, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %35, i32 %20) #10
  %37 = extractvalue { i32, i1 } %36, 1
  %38 = extractvalue { i32, i1 } %36, 0
  %39 = select i1 %37, i32 %35, i32 %38, !prof !2
  br label %40

40:                                               ; preds = %31, %6
  %41 = phi i32 [ %8, %6 ], [ %39, %31 ]
  ret i32 %41
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink11CounterNode15AddLayoutObjectEPNS_13LayoutCounterE(%"class.blink::CounterNode"*, %"class.blink::LayoutCounter"*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.blink::LayoutCounter"* %1, null
  br i1 %3, label %30, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %1, i64 0, i32 2
  %6 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %5, align 8
  %7 = icmp eq %"class.blink::CounterNode"* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZN5blink11CounterNode18RemoveLayoutObjectEPNS_13LayoutCounterE(%"class.blink::CounterNode"* nonnull %6, %"class.blink::LayoutCounter"* nonnull %1)
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 5
  %11 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %10, align 8
  %12 = icmp eq %"class.blink::LayoutCounter"* %11, null
  %13 = ptrtoint %"class.blink::LayoutCounter"* %11 to i64
  br i1 %12, label %21, label %18

14:                                               ; preds = %18
  %15 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %19, i64 0, i32 3
  %16 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %15, align 8
  %17 = icmp eq %"class.blink::LayoutCounter"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %9, %14
  %19 = phi %"class.blink::LayoutCounter"* [ %16, %14 ], [ %11, %9 ]
  %20 = icmp eq %"class.blink::LayoutCounter"* %19, %1
  br i1 %20, label %30, label %14

21:                                               ; preds = %14, %9
  %22 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %1, i64 0, i32 3
  %23 = bitcast %"class.blink::LayoutCounter"** %22 to i64*
  store i64 %13, i64* %23, align 8
  store %"class.blink::LayoutCounter"* %1, %"class.blink::LayoutCounter"** %10, align 8
  %24 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %5, align 8
  %25 = icmp eq %"class.blink::CounterNode"* %24, %0
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  %27 = icmp eq %"class.blink::CounterNode"* %24, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %26
  tail call void @_ZN5blink11CounterNode18RemoveLayoutObjectEPNS_13LayoutCounterE(%"class.blink::CounterNode"* nonnull %24, %"class.blink::LayoutCounter"* nonnull %1)
  br label %29

29:                                               ; preds = %26, %28
  store %"class.blink::CounterNode"* %0, %"class.blink::CounterNode"** %5, align 8
  br label %30

30:                                               ; preds = %18, %21, %2, %29
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink11CounterNode18RemoveLayoutObjectEPNS_13LayoutCounterE(%"class.blink::CounterNode"*, %"class.blink::LayoutCounter"*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.blink::LayoutCounter"* %1, null
  br i1 %3, label %34, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %1, i64 0, i32 2
  %6 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %5, align 8
  %7 = icmp eq %"class.blink::CounterNode"* %6, null
  %8 = icmp eq %"class.blink::CounterNode"* %6, %0
  %9 = or i1 %7, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %4
  tail call void @_ZN5blink11CounterNode18RemoveLayoutObjectEPNS_13LayoutCounterE(%"class.blink::CounterNode"* nonnull %6, %"class.blink::LayoutCounter"* nonnull %1)
  br label %11

11:                                               ; preds = %4, %10
  %12 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 5
  %13 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %12, align 8
  %14 = icmp eq %"class.blink::LayoutCounter"* %13, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %11
  %16 = icmp eq %"class.blink::LayoutCounter"* %13, %1
  br i1 %16, label %24, label %17

17:                                               ; preds = %15, %22
  %18 = phi %"class.blink::LayoutCounter"* [ %20, %22 ], [ %13, %15 ]
  %19 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %18, i64 0, i32 3
  %20 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutCounter"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %17
  %23 = icmp eq %"class.blink::LayoutCounter"* %20, %1
  br i1 %23, label %24, label %17

24:                                               ; preds = %22, %15
  %25 = phi %"class.blink::LayoutCounter"* [ null, %15 ], [ %18, %22 ]
  %26 = icmp eq %"class.blink::LayoutCounter"* %25, null
  %27 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %1, i64 0, i32 3
  %28 = bitcast %"class.blink::LayoutCounter"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %25, i64 0, i32 3
  %31 = select i1 %26, %"class.blink::LayoutCounter"** %12, %"class.blink::LayoutCounter"** %30
  %32 = bitcast %"class.blink::LayoutCounter"** %31 to i64*
  store i64 %29, i64* %32, align 8
  %33 = bitcast %"class.blink::CounterNode"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false)
  br label %34

34:                                               ; preds = %17, %11, %24, %2
  ret void
}

declare void @_ZN5blink13LayoutCounter10InvalidateEv(%"class.blink::LayoutCounter"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CounterNode"* @_ZN5blink11CounterNode34AncestorNodeAcrossStyleContainmentERKNS_12LayoutObjectERKN3WTF12AtomicStringE(%"class.blink::LayoutObject"* nocapture readonly dereferenceable(88), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %89, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %6, %85
  %9 = phi %"class.blink::LayoutObject"* [ %4, %6 ], [ %87, %85 ]
  %10 = phi i1 [ false, %6 ], [ %23, %85 ]
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %18, i64 0, i32 45
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 2
  %22 = icmp ne i32 %21, 0
  %23 = or i1 %10, %22
  br i1 %23, label %24, label %85

24:                                               ; preds = %8
  %25 = tail call %"class.WTF::HashMap.1226"* @_ZN5blink13LayoutCounter13GetCounterMapEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull %9) #10
  %26 = icmp eq %"class.WTF::HashMap.1226"* %25, null
  br i1 %26, label %85, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.WTF::HashMap.1226", %"class.WTF::HashMap.1226"* %25, i64 0, i32 0, i32 0
  %29 = load %"struct.WTF::KeyValuePair.1230"*, %"struct.WTF::KeyValuePair.1230"** %28, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair.1230"* %29, null
  br i1 %30, label %85, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::HashMap.1226", %"class.WTF::HashMap.1226"* %25, i64 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, -1
  %35 = zext i32 %34 to i64
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = lshr i32 %38, 8
  %40 = and i32 %39, %34
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.1230", %"struct.WTF::KeyValuePair.1230"* %29, i64 %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1230", %"struct.WTF::KeyValuePair.1230"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %85, label %46

46:                                               ; preds = %31
  %47 = xor i32 %39, -1
  %48 = lshr i32 %38, 31
  %49 = add nsw i32 %48, %47
  %50 = shl i32 %49, 12
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 7
  %53 = xor i32 %52, %51
  %54 = shl i32 %53, 2
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 20
  %57 = xor i32 %56, %55
  %58 = or i32 %57, 1
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %70, %46
  %61 = phi %"struct.WTF::KeyValuePair.1230"* [ %42, %46 ], [ %75, %70 ]
  %62 = phi i64 [ %41, %46 ], [ %74, %70 ]
  %63 = phi i64 [ 0, %46 ], [ %72, %70 ]
  %64 = bitcast %"struct.WTF::KeyValuePair.1230"* %61 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = icmp ne i8* %65, inttoptr (i64 -1 to i8*)
  %67 = bitcast i8* %65 to %"class.WTF::StringImpl"*
  %68 = icmp eq %"class.WTF::StringImpl"* %36, %67
  %69 = and i1 %66, %68
  br i1 %69, label %79, label %70

70:                                               ; preds = %60
  %71 = icmp eq i64 %63, 0
  %72 = select i1 %71, i64 %59, i64 %63
  %73 = add i64 %72, %62
  %74 = and i64 %73, %35
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1230", %"struct.WTF::KeyValuePair.1230"* %29, i64 %74
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.1230", %"struct.WTF::KeyValuePair.1230"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %85, label %60

79:                                               ; preds = %60
  %80 = icmp eq %"struct.WTF::KeyValuePair.1230"* %61, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.1230", %"struct.WTF::KeyValuePair.1230"* %61, i64 0, i32 1, i32 0
  %83 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %82, align 8
  %84 = icmp eq %"class.blink::CounterNode"* %83, null
  br i1 %84, label %85, label %89

85:                                               ; preds = %70, %31, %27, %79, %24, %81, %8
  %86 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 7
  %87 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %86, align 8
  %88 = icmp eq %"class.blink::LayoutObject"* %87, null
  br i1 %88, label %89, label %8

89:                                               ; preds = %85, %81, %2
  %90 = phi %"class.blink::CounterNode"* [ null, %2 ], [ %83, %81 ], [ null, %85 ]
  ret %"class.blink::CounterNode"* %90
}

declare %"class.WTF::HashMap.1226"* @_ZN5blink13LayoutCounter13GetCounterMapEPNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CounterNode"* @_ZNK5blink11CounterNode30ParentCrossingStyleContainmentERKN3WTF12AtomicStringE(%"class.blink::CounterNode"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 6
  %4 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %3, align 8
  %5 = icmp eq %"class.blink::CounterNode"* %4, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 4
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = tail call %"class.blink::CounterNode"* @_ZN5blink11CounterNode34AncestorNodeAcrossStyleContainmentERKNS_12LayoutObjectERKN3WTF12AtomicStringE(%"class.blink::LayoutObject"* dereferenceable(88) %8, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi %"class.blink::CounterNode"* [ %9, %6 ], [ %4, %2 ]
  ret %"class.blink::CounterNode"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CounterNode36ResetThisAndDescendantsLayoutObjectsEv(%"class.blink::CounterNode"* readonly) local_unnamed_addr #1 align 2 {
  br label %2

2:                                                ; preds = %15, %1
  %3 = phi %"class.blink::CounterNode"* [ %0, %1 ], [ %16, %15 ]
  %4 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %3, i64 0, i32 5
  %5 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutCounter"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.blink::LayoutCounter"* [ %9, %7 ], [ %5, %2 ]
  tail call void @_ZN5blink13LayoutCounter10InvalidateEv(%"class.blink::LayoutCounter"* nonnull %8) #10
  %9 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %4, align 8
  %10 = icmp eq %"class.blink::LayoutCounter"* %9, null
  br i1 %10, label %11, label %7

11:                                               ; preds = %7, %2
  %12 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %3, i64 0, i32 9
  %13 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %12, align 8
  %14 = icmp eq %"class.blink::CounterNode"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %19, %11
  %16 = phi %"class.blink::CounterNode"* [ %13, %11 ], [ %22, %19 ]
  br label %2

17:                                               ; preds = %11
  %18 = icmp eq %"class.blink::CounterNode"* %3, %0
  br i1 %18, label %30, label %19

19:                                               ; preds = %17, %24
  %20 = phi %"class.blink::CounterNode"* [ %26, %24 ], [ %3, %17 ]
  %21 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %20, i64 0, i32 8
  %22 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %21, align 8
  %23 = icmp eq %"class.blink::CounterNode"* %22, null
  br i1 %23, label %24, label %15

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %20, i64 0, i32 6
  %26 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %25, align 8
  %27 = icmp eq %"class.blink::CounterNode"* %26, null
  %28 = icmp eq %"class.blink::CounterNode"* %26, %0
  %29 = or i1 %27, %28
  br i1 %29, label %30, label %19

30:                                               ; preds = %17, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CounterNode7RecountEv(%"class.blink::CounterNode"*) local_unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::CounterNode"* %0, null
  br i1 %2, label %81, label %3

3:                                                ; preds = %1, %77
  %4 = phi %"class.blink::CounterNode"* [ %79, %77 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %4, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  br label %45

14:                                               ; preds = %3
  %15 = and i32 %8, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %4, i64 0, i32 6
  %19 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %18, align 8
  %20 = icmp eq %"class.blink::CounterNode"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %4, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  br label %24

24:                                               ; preds = %21, %17, %14
  %25 = phi i32 [ %23, %21 ], [ 0, %17 ], [ 0, %14 ]
  %26 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %4, i64 0, i32 7
  %27 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %26, align 8
  %28 = icmp eq %"class.blink::CounterNode"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %27, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %31, i32 %25) #10
  %33 = extractvalue { i32, i1 } %32, 1
  %34 = extractvalue { i32, i1 } %32, 0
  %35 = select i1 %33, i32 %31, i32 %34, !prof !2
  br label %45

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %4, i64 0, i32 6
  %38 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %38, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %40, i32 %25) #10
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !2
  br label %45

45:                                               ; preds = %11, %36, %29
  %46 = phi i32 [ %35, %29 ], [ %13, %11 ], [ %44, %36 ]
  %47 = icmp eq i32 %6, %46
  br i1 %47, label %81, label %48

48:                                               ; preds = %45
  store i32 %46, i32* %5, align 4
  br label %49

49:                                               ; preds = %62, %48
  %50 = phi %"class.blink::CounterNode"* [ %4, %48 ], [ %63, %62 ]
  %51 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %50, i64 0, i32 5
  %52 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %51, align 8
  %53 = icmp eq %"class.blink::LayoutCounter"* %52, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"class.blink::LayoutCounter"* [ %56, %54 ], [ %52, %49 ]
  tail call void @_ZN5blink13LayoutCounter10InvalidateEv(%"class.blink::LayoutCounter"* nonnull %55) #10
  %56 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %51, align 8
  %57 = icmp eq %"class.blink::LayoutCounter"* %56, null
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %49
  %59 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %50, i64 0, i32 9
  %60 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %59, align 8
  %61 = icmp eq %"class.blink::CounterNode"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %66, %58
  %63 = phi %"class.blink::CounterNode"* [ %60, %58 ], [ %69, %66 ]
  br label %49

64:                                               ; preds = %58
  %65 = icmp eq %"class.blink::CounterNode"* %50, %4
  br i1 %65, label %77, label %66

66:                                               ; preds = %64, %71
  %67 = phi %"class.blink::CounterNode"* [ %73, %71 ], [ %50, %64 ]
  %68 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %67, i64 0, i32 8
  %69 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %68, align 8
  %70 = icmp eq %"class.blink::CounterNode"* %69, null
  br i1 %70, label %71, label %62

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %67, i64 0, i32 6
  %73 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %72, align 8
  %74 = icmp eq %"class.blink::CounterNode"* %73, null
  %75 = icmp eq %"class.blink::CounterNode"* %73, %4
  %76 = or i1 %74, %75
  br i1 %76, label %77, label %66

77:                                               ; preds = %64, %71
  %78 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %4, i64 0, i32 8
  %79 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %78, align 8
  %80 = icmp eq %"class.blink::CounterNode"* %79, null
  br i1 %80, label %81, label %3

81:                                               ; preds = %77, %45, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CounterNode11InsertAfterEPS0_S1_RKN3WTF12AtomicStringE(%"class.blink::CounterNode"*, %"class.blink::CounterNode"*, %"class.blink::CounterNode"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %5 = icmp ne %"class.blink::CounterNode"* %2, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %2, i64 0, i32 6
  %8 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %7, align 8
  %9 = icmp eq %"class.blink::CounterNode"* %8, %0
  br i1 %9, label %10, label %182

10:                                               ; preds = %6, %4
  %11 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 10
  %17 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %16, align 8
  %18 = icmp eq %"class.blink::CounterNode"* %17, %2
  br i1 %18, label %25, label %19

19:                                               ; preds = %15, %19
  %20 = phi %"class.blink::CounterNode"* [ %23, %19 ], [ %17, %15 ]
  %21 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %20, i64 0, i32 4
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  tail call void @_ZN5blink13LayoutCounter18DestroyCounterNodeERNS_12LayoutObjectERKN3WTF12AtomicStringE(%"class.blink::LayoutObject"* dereferenceable(88) %22, %"class.WTF::AtomicString"* dereferenceable(8) %3) #10
  %23 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %16, align 8
  %24 = icmp eq %"class.blink::CounterNode"* %23, %2
  br i1 %24, label %25, label %19

25:                                               ; preds = %19, %15, %10
  %26 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 9
  %27 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %2, i64 0, i32 8
  %28 = select i1 %5, %"class.blink::CounterNode"** %27, %"class.blink::CounterNode"** %26
  %29 = select i1 %5, %"class.blink::CounterNode"** %27, %"class.blink::CounterNode"** %26
  %30 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %28, align 8
  store %"class.blink::CounterNode"* %1, %"class.blink::CounterNode"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 6
  store %"class.blink::CounterNode"* %0, %"class.blink::CounterNode"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 7
  store %"class.blink::CounterNode"* %2, %"class.blink::CounterNode"** %32, align 8
  %33 = icmp ne %"class.blink::CounterNode"* %30, null
  br i1 %33, label %34, label %37

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %30, i64 0, i32 7
  store %"class.blink::CounterNode"* %1, %"class.blink::CounterNode"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 8
  store %"class.blink::CounterNode"* %30, %"class.blink::CounterNode"** %36, align 8
  br label %39

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 10
  store %"class.blink::CounterNode"* %1, %"class.blink::CounterNode"** %38, align 8
  br label %39

39:                                               ; preds = %37, %34
  %40 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 9
  %41 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %40, align 8
  %42 = icmp ne %"class.blink::CounterNode"* %41, null
  %43 = load i32, i32* %11, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = and i1 %42, %45
  br i1 %46, label %114, label %47

47:                                               ; preds = %39
  %48 = and i32 %43, 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 2
  %52 = load i32, i32* %51, align 8
  br label %81

53:                                               ; preds = %47
  %54 = and i32 %43, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %53
  %57 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %31, align 8
  %58 = icmp eq %"class.blink::CounterNode"* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 2
  %61 = load i32, i32* %60, align 8
  br label %62

62:                                               ; preds = %59, %56, %53
  %63 = phi i32 [ %61, %59 ], [ 0, %56 ], [ 0, %53 ]
  %64 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %32, align 8
  %65 = icmp eq %"class.blink::CounterNode"* %64, null
  br i1 %65, label %73, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %64, i64 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %68, i32 %63) #10
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 %68, i32 %71, !prof !2
  br label %81

73:                                               ; preds = %62
  %74 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %31, align 8
  %75 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %74, i64 0, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %76, i32 %63) #10
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !2
  br label %81

81:                                               ; preds = %50, %73, %66
  %82 = phi i32 [ %72, %66 ], [ %52, %50 ], [ %80, %73 ]
  %83 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 3
  store i32 %82, i32* %83, align 4
  br label %84

84:                                               ; preds = %97, %81
  %85 = phi %"class.blink::CounterNode"* [ %1, %81 ], [ %98, %97 ]
  %86 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %85, i64 0, i32 5
  %87 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %86, align 8
  %88 = icmp eq %"class.blink::LayoutCounter"* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.blink::LayoutCounter"* [ %91, %89 ], [ %87, %84 ]
  tail call void @_ZN5blink13LayoutCounter10InvalidateEv(%"class.blink::LayoutCounter"* nonnull %90) #10
  %91 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %86, align 8
  %92 = icmp eq %"class.blink::LayoutCounter"* %91, null
  br i1 %92, label %93, label %89

93:                                               ; preds = %89, %84
  %94 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %85, i64 0, i32 9
  %95 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %94, align 8
  %96 = icmp eq %"class.blink::CounterNode"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %101, %93
  %98 = phi %"class.blink::CounterNode"* [ %95, %93 ], [ %104, %101 ]
  br label %84

99:                                               ; preds = %93
  %100 = icmp eq %"class.blink::CounterNode"* %85, %1
  br i1 %100, label %112, label %101

101:                                              ; preds = %99, %106
  %102 = phi %"class.blink::CounterNode"* [ %108, %106 ], [ %85, %99 ]
  %103 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %102, i64 0, i32 8
  %104 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %103, align 8
  %105 = icmp eq %"class.blink::CounterNode"* %104, null
  br i1 %105, label %106, label %97

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %102, i64 0, i32 6
  %108 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %107, align 8
  %109 = icmp eq %"class.blink::CounterNode"* %108, null
  %110 = icmp eq %"class.blink::CounterNode"* %108, %1
  %111 = or i1 %109, %110
  br i1 %111, label %112, label %101

112:                                              ; preds = %99, %106
  br i1 %33, label %113, label %182

113:                                              ; preds = %112
  tail call void @_ZN5blink11CounterNode7RecountEv(%"class.blink::CounterNode"* nonnull %30)
  br label %182

114:                                              ; preds = %39
  %115 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 10
  %116 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 8
  store %"class.blink::CounterNode"* %41, %"class.blink::CounterNode"** %117, align 8
  %118 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 10
  %119 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %118, align 8
  %120 = icmp eq %"class.blink::CounterNode"* %119, %1
  br i1 %120, label %121, label %122

121:                                              ; preds = %114
  store %"class.blink::CounterNode"* %116, %"class.blink::CounterNode"** %118, align 8
  br label %122

122:                                              ; preds = %121, %114
  %123 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %41, i64 0, i32 7
  store %"class.blink::CounterNode"* %1, %"class.blink::CounterNode"** %123, align 8
  %124 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %116, i64 0, i32 8
  store %"class.blink::CounterNode"* %30, %"class.blink::CounterNode"** %124, align 8
  %125 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %30, i64 0, i32 7
  %126 = select i1 %33, %"class.blink::CounterNode"** %125, %"class.blink::CounterNode"** %118
  store %"class.blink::CounterNode"* %116, %"class.blink::CounterNode"** %126, align 8
  %127 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %41, i64 0, i32 6
  store %"class.blink::CounterNode"* %0, %"class.blink::CounterNode"** %127, align 8
  %128 = icmp eq %"class.blink::CounterNode"* %116, %41
  br i1 %128, label %135, label %129

129:                                              ; preds = %122, %129
  %130 = phi %"class.blink::CounterNode"* [ %132, %129 ], [ %41, %122 ]
  %131 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %130, i64 0, i32 8
  %132 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %132, i64 0, i32 6
  store %"class.blink::CounterNode"* %0, %"class.blink::CounterNode"** %133, align 8
  %134 = icmp eq %"class.blink::CounterNode"* %116, %132
  br i1 %134, label %135, label %129

135:                                              ; preds = %129, %122
  %136 = bitcast %"class.blink::CounterNode"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 16, i1 false)
  %137 = load i32, i32* %11, align 4
  %138 = and i32 %137, 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 2
  %142 = load i32, i32* %141, align 8
  br label %171

143:                                              ; preds = %135
  %144 = and i32 %137, 2
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %152

146:                                              ; preds = %143
  %147 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %31, align 8
  %148 = icmp eq %"class.blink::CounterNode"* %147, null
  br i1 %148, label %152, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 2
  %151 = load i32, i32* %150, align 8
  br label %152

152:                                              ; preds = %149, %146, %143
  %153 = phi i32 [ %151, %149 ], [ 0, %146 ], [ 0, %143 ]
  %154 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %32, align 8
  %155 = icmp eq %"class.blink::CounterNode"* %154, null
  br i1 %155, label %163, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %154, i64 0, i32 3
  %158 = load i32, i32* %157, align 4
  %159 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %158, i32 %153) #10
  %160 = extractvalue { i32, i1 } %159, 1
  %161 = extractvalue { i32, i1 } %159, 0
  %162 = select i1 %160, i32 %158, i32 %161, !prof !2
  br label %171

163:                                              ; preds = %152
  %164 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %31, align 8
  %165 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %164, i64 0, i32 2
  %166 = load i32, i32* %165, align 8
  %167 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %166, i32 %153) #10
  %168 = extractvalue { i32, i1 } %167, 1
  %169 = extractvalue { i32, i1 } %167, 0
  %170 = select i1 %168, i32 %166, i32 %169, !prof !2
  br label %171

171:                                              ; preds = %140, %163, %156
  %172 = phi i32 [ %162, %156 ], [ %142, %140 ], [ %170, %163 ]
  %173 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 3
  store i32 %172, i32* %173, align 4
  %174 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 5
  %175 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %174, align 8
  %176 = icmp eq %"class.blink::LayoutCounter"* %175, null
  br i1 %176, label %181, label %177

177:                                              ; preds = %171, %177
  %178 = phi %"class.blink::LayoutCounter"* [ %179, %177 ], [ %175, %171 ]
  tail call void @_ZN5blink13LayoutCounter10InvalidateEv(%"class.blink::LayoutCounter"* nonnull %178) #10
  %179 = load %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %174, align 8
  %180 = icmp eq %"class.blink::LayoutCounter"* %179, null
  br i1 %180, label %181, label %177

181:                                              ; preds = %177, %171
  tail call void @_ZN5blink11CounterNode7RecountEv(%"class.blink::CounterNode"* nonnull %41)
  br label %182

182:                                              ; preds = %181, %113, %112, %6
  ret void
}

declare void @_ZN5blink13LayoutCounter18DestroyCounterNodeERNS_12LayoutObjectERKN3WTF12AtomicStringE(%"class.blink::LayoutObject"* dereferenceable(88), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CounterNode11RemoveChildEPS0_(%"class.blink::CounterNode"* nocapture, %"class.blink::CounterNode"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 8
  %4 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 7
  %6 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 6
  %8 = icmp eq %"class.blink::CounterNode"* %6, null
  %9 = bitcast %"class.blink::CounterNode"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false)
  %10 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 9
  %11 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %6, i64 0, i32 8
  %12 = select i1 %8, %"class.blink::CounterNode"** %10, %"class.blink::CounterNode"** %11
  store %"class.blink::CounterNode"* %4, %"class.blink::CounterNode"** %12, align 8
  %13 = icmp eq %"class.blink::CounterNode"* %4, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 10
  store %"class.blink::CounterNode"* %6, %"class.blink::CounterNode"** %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %4, i64 0, i32 7
  store %"class.blink::CounterNode"* %6, %"class.blink::CounterNode"** %17, align 8
  tail call void @_ZN5blink11CounterNode7RecountEv(%"class.blink::CounterNode"* nonnull %4)
  br label %18

18:                                               ; preds = %14, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11CounterNode29MoveNonResetSiblingsToChildOfEPS0_RS0_RKN3WTF12AtomicStringE(%"class.blink::CounterNode"*, %"class.blink::CounterNode"* dereferenceable(72), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = icmp eq %"class.blink::CounterNode"* %0, null
  br i1 %4, label %73, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %0, i64 0, i32 6
  %8 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %7, align 8
  %9 = icmp eq %"class.blink::CounterNode"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %8, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %11) #10
  br label %12

12:                                               ; preds = %10, %5
  %13 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %8, i64 0, i32 9
  %14 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %8, i64 0, i32 10
  %15 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 10
  br label %16

16:                                               ; preds = %62, %12
  %17 = phi %"class.blink::CounterNode"* [ %0, %12 ], [ %19, %62 ]
  %18 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %17, i64 0, i32 8
  %19 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %18, align 8
  %20 = icmp eq %"class.blink::CounterNode"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #10
  br label %23

23:                                               ; preds = %16, %21
  %24 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %17, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %46

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %17, i64 0, i32 6
  %30 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %29, align 8
  %31 = icmp eq %"class.blink::CounterNode"* %30, null
  br i1 %31, label %46, label %32

32:                                               ; preds = %28
  %33 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %18, align 8
  %34 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %17, i64 0, i32 7
  %35 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %34, align 8
  %36 = icmp eq %"class.blink::CounterNode"* %35, null
  %37 = bitcast %"class.blink::CounterNode"** %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #10
  %38 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %35, i64 0, i32 8
  %39 = select i1 %36, %"class.blink::CounterNode"** %13, %"class.blink::CounterNode"** %38
  store %"class.blink::CounterNode"* %33, %"class.blink::CounterNode"** %39, align 8
  %40 = icmp eq %"class.blink::CounterNode"* %33, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %32
  store %"class.blink::CounterNode"* %35, %"class.blink::CounterNode"** %14, align 8
  br label %44

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %33, i64 0, i32 7
  store %"class.blink::CounterNode"* %35, %"class.blink::CounterNode"** %43, align 8
  tail call void @_ZN5blink11CounterNode7RecountEv(%"class.blink::CounterNode"* nonnull %33) #10
  br label %44

44:                                               ; preds = %41, %42
  %45 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %15, align 8
  tail call void @_ZN5blink11CounterNode11InsertAfterEPS0_S1_RKN3WTF12AtomicStringE(%"class.blink::CounterNode"* %1, %"class.blink::CounterNode"* nonnull %17, %"class.blink::CounterNode"* %45, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  br label %46

46:                                               ; preds = %23, %44, %28
  br i1 %20, label %49, label %47

47:                                               ; preds = %46
  %48 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #10
  br label %49

49:                                               ; preds = %47, %46
  %50 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %50) #10
  %51 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  tail call void @_ZN5blink11CounterNodeD2Ev(%"class.blink::CounterNode"* nonnull %17) #10
  %55 = bitcast %"class.blink::CounterNode"* %17 to i8*
  tail call void @free(i8* %55) #10
  br label %56

56:                                               ; preds = %49, %54
  br i1 %20, label %65, label %57

57:                                               ; preds = %56
  %58 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %58) #10
  %59 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %57, %63
  br label %16

63:                                               ; preds = %57
  tail call void @_ZN5blink11CounterNodeD2Ev(%"class.blink::CounterNode"* nonnull %19) #10
  %64 = bitcast %"class.blink::CounterNode"* %19 to i8*
  tail call void @free(i8* %64) #10
  br label %62

65:                                               ; preds = %56
  br i1 %9, label %73, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %8, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %67) #10
  %68 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  tail call void @_ZN5blink11CounterNodeD2Ev(%"class.blink::CounterNode"* nonnull %8) #10
  %72 = bitcast %"class.blink::CounterNode"* %8 to i8*
  tail call void @free(i8* %72) #10
  br label %73

73:                                               ; preds = %65, %66, %71, %3
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
