; ModuleID = '../../native_client/src/trusted/service_runtime/sel_mem.c'
source_filename = "../../native_client/src/trusted/service_runtime/sel_mem.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClDescVtbl = type { %struct.NaClRefCountVtbl, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i64, i32)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32, i32, i8*)*, i32 (%struct.NaClDesc*, i32*, i8*)*, void (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 }
%struct.NaClDescEffector = type opaque
%struct.nacl_abi_stat = type opaque
%struct.NaClDescXferState = type { i8*, i8*, i32*, i32* }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.NaClImcTypedMsgHdr = type opaque
%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }
%struct.NaClVmmapIter = type { %struct.NaClVmmap*, i64 }

@.str = private unnamed_addr constant [55 x i8] c"NaClVmmapEntryMake(0x%lx,0x%lx,0x%x,0x%x,0x%lx,0x%lx)\0A\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"entry: 0x%lx\0A\00", align 1
@.str.2 = private unnamed_addr constant [66 x i8] c"NaClVmmapEntryFree(0x%08lx): (0x%lx,0x%lx,0x%x,0x%x,0x%lx,0x%lx)\0A\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"page num 0x%06x\0A\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"num pages %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"prot bits %x\0A\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"flags %x\0A\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.7 = private unnamed_addr constant [63 x i8] c"NaClVmmapAdd(0x%08lx, 0x%lx, 0x%lx, 0x%x, 0x%x, 0x%lx, 0x%lx)\0A\00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"NaClVmmapAdd: could not allocate memory\0A\00", align 1
@.str.9 = private unnamed_addr constant [50 x i8] c"NaClVmmapChangeProt(0x%08lx, 0x%lx, 0x%lx, 0x%x)\0A\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c"Internal error: illegal O_ACCMODE\0A\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"No valid entries in VM map\0A\00", align 1
@.str.12 = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.13 = private unnamed_addr constant [58 x i8] c"../../native_client/src/trusted/service_runtime/sel_mem.c\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"last < self->nvalid\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"!self->vmentry[last]->removed\00", align 1
@.str.16 = private unnamed_addr constant [70 x i8] c"NaClVmmapUpdate(0x%08lx, 0x%lx, 0x%lx, 0x%x, 0x%x, %d, 0x%lx, 0x%lx)\0A\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"npages > 0\00", align 1
@.str.18 = private unnamed_addr constant [60 x i8] c"NaClVmmapCheckExistingMapping(0x%08lx, 0x%lx, 0x%lx, 0x%x)\0A\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"key->page_num   = 0x%05lx\0A\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"entry->page_num = 0x%05lx\0A\00", align 1
@.str.21 = private unnamed_addr constant [25 x i8] c"entry->npages   = 0x%lx\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.NaClVmmapEntry* @NaClVmmapEntryMake(i64, i64, i32, i32, %struct.NaClDesc*, i64, i64) local_unnamed_addr #0 {
  %8 = ptrtoint %struct.NaClDesc* %4 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i64 %0, i64 %1, i32 %2, i32 %3, i64 %8, i64 %5) #8
  %9 = tail call noalias i8* @malloc(i64 56) #8
  %10 = bitcast i8* %9 to %struct.NaClVmmapEntry*
  %11 = icmp eq i8* %9, null
  br i1 %11, label %33, label %12

12:                                               ; preds = %7
  %13 = ptrtoint i8* %9 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 %13) #8
  %14 = bitcast i8* %9 to i64*
  store i64 %0, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %1, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 %2, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %9, i64 20
  %20 = bitcast i8* %19 to i32*
  store i32 %3, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %9, i64 24
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %9, i64 32
  %24 = bitcast i8* %23 to %struct.NaClDesc**
  store %struct.NaClDesc* %4, %struct.NaClDesc** %24, align 8
  %25 = icmp eq %struct.NaClDesc* %4, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %12
  %27 = tail call %struct.NaClDesc* @NaClDescRef(%struct.NaClDesc* nonnull %4) #8
  br label %28

28:                                               ; preds = %12, %26
  %29 = getelementptr inbounds i8, i8* %9, i64 40
  %30 = bitcast i8* %29 to i64*
  store i64 %5, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %9, i64 48
  %32 = bitcast i8* %31 to i64*
  store i64 %6, i64* %32, align 8
  br label %33

33:                                               ; preds = %7, %28
  %34 = phi %struct.NaClVmmapEntry* [ %10, %28 ], [ null, %7 ]
  ret %struct.NaClVmmapEntry* %34
}

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

declare %struct.NaClDesc* @NaClDescRef(%struct.NaClDesc*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClVmmapEntryFree(%struct.NaClVmmapEntry*) local_unnamed_addr #0 {
  %2 = ptrtoint %struct.NaClVmmapEntry* %0 to i64
  %3 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %0, i64 0, i32 5
  %12 = bitcast %struct.NaClDesc** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %0, i64 0, i32 6
  %15 = load i64, i64* %14, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.2, i64 0, i64 0), i64 %2, i64 %4, i64 %6, i32 %8, i32 %10, i64 %13, i64 %15) #8
  %16 = load %struct.NaClDesc*, %struct.NaClDesc** %11, align 8
  %17 = icmp eq %struct.NaClDesc* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %1
  tail call void @NaClDescSafeUnref(%struct.NaClDesc* nonnull %16) #8
  br label %19

19:                                               ; preds = %1, %18
  %20 = bitcast %struct.NaClVmmapEntry* %0 to i8*
  tail call void @free(i8* %20) #8
  ret void
}

declare void @NaClDescSafeUnref(%struct.NaClDesc*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClVmentryPrint(i8* nocapture readnone, %struct.NaClVmmapEntry* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 %5) #8
  %7 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i32 %9) #8
  %11 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i32 %12) #8
  %14 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i32 %15) #8
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %18 = tail call i32 @fflush(%struct._IO_FILE* %17)
  ret void
}

declare i32 @__printf_chk(i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClVmmapDebug(%struct.NaClVmmap* nocapture, i8* nocapture readonly) local_unnamed_addr #0 {
  %3 = tail call i32 @puts(i8* %1)
  %4 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  tail call fastcc void @NaClVmmapRemoveMarked(%struct.NaClVmmap* %0) #8
  %8 = bitcast %struct.NaClVmmap* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  tail call void @qsort(i8* %9, i64 %11, i64 8, i32 (i8*, i8*)* nonnull @NaClVmmapCmpEntries) #8
  store i32 1, i32* %4, align 8
  br label %12

12:                                               ; preds = %7, %2
  %13 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %41, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 0
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi i64 [ 0, %16 ], [ %39, %18 ]
  %20 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %17, align 8
  %21 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %20, i64 %19
  %22 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %21, align 8
  %23 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %22, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 %25) #8
  %27 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %22, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i32
  %30 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i32 %29) #8
  %31 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %22, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i32 %32) #8
  %34 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %22, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i32 %35) #8
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %38 = tail call i32 @fflush(%struct._IO_FILE* %37) #8
  %39 = add nuw i64 %19, 1
  %40 = icmp eq i64 %39, %14
  br i1 %40, label %41, label %18

41:                                               ; preds = %18, %12
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %43 = tail call i32 @fflush(%struct._IO_FILE* %42)
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClVmmapVisit(%struct.NaClVmmap* nocapture, void (i8*, %struct.NaClVmmapEntry*)* nocapture, i8*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  tail call fastcc void @NaClVmmapRemoveMarked(%struct.NaClVmmap* %0) #8
  %8 = bitcast %struct.NaClVmmap* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  tail call void @qsort(i8* %9, i64 %11, i64 8, i32 (i8*, i8*)* nonnull @NaClVmmapCmpEntries) #8
  store i32 1, i32* %4, align 8
  br label %12

12:                                               ; preds = %3, %7
  %13 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 0
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi i64 [ 0, %16 ], [ %23, %18 ]
  %20 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %17, align 8
  %21 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %20, i64 %19
  %22 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %21, align 8
  tail call void %1(i8* %2, %struct.NaClVmmapEntry* %22) #8
  %23 = add nuw i64 %19, 1
  %24 = icmp eq i64 %23, %14
  br i1 %24, label %25, label %18

25:                                               ; preds = %18, %12
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @NaClVmmapCtor(%struct.NaClVmmap* nocapture) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 2
  store i64 5, i64* %2, align 8
  %3 = tail call noalias i8* @calloc(i64 5, i64 8) #8
  %4 = bitcast %struct.NaClVmmap* %0 to i8**
  store i8* %3, i8** %4, align 8
  %5 = icmp eq i8* %3, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 3
  store i32 1, i32* %8, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i32 [ 1, %6 ], [ 0, %1 ]
  ret i32 %10
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClVmmapDtor(%struct.NaClVmmap* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  %5 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 0
  %6 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %5, align 8
  br i1 %4, label %35, label %7

7:                                                ; preds = %1, %29
  %8 = phi %struct.NaClVmmapEntry** [ %34, %29 ], [ %6, %1 ]
  %9 = phi i64 [ %31, %29 ], [ 0, %1 ]
  %10 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %8, i64 %9
  %11 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %10, align 8
  %12 = ptrtoint %struct.NaClVmmapEntry* %11 to i64
  %13 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %11, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %11, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %11, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %11, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %11, i64 0, i32 5
  %22 = bitcast %struct.NaClDesc** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %11, i64 0, i32 6
  %25 = load i64, i64* %24, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.2, i64 0, i64 0), i64 %12, i64 %14, i64 %16, i32 %18, i32 %20, i64 %23, i64 %25) #8
  %26 = load %struct.NaClDesc*, %struct.NaClDesc** %21, align 8
  %27 = icmp eq %struct.NaClDesc* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %7
  tail call void @NaClDescSafeUnref(%struct.NaClDesc* nonnull %26) #8
  br label %29

29:                                               ; preds = %7, %28
  %30 = bitcast %struct.NaClVmmapEntry* %11 to i8*
  tail call void @free(i8* %30) #8
  %31 = add nuw i64 %9, 1
  %32 = load i64, i64* %2, align 8
  %33 = icmp ult i64 %31, %32
  %34 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %5, align 8
  br i1 %33, label %7, label %35

35:                                               ; preds = %29, %1
  %36 = phi %struct.NaClVmmapEntry** [ %6, %1 ], [ %34, %29 ]
  %37 = bitcast %struct.NaClVmmapEntry** %36 to i8*
  tail call void @free(i8* %37) #8
  store %struct.NaClVmmapEntry** null, %struct.NaClVmmapEntry*** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClVmmapMakeSorted(%struct.NaClVmmap* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  tail call fastcc void @NaClVmmapRemoveMarked(%struct.NaClVmmap* %0)
  %6 = bitcast %struct.NaClVmmap* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  tail call void @qsort(i8* %7, i64 %9, i64 8, i32 (i8*, i8*)* nonnull @NaClVmmapCmpEntries) #8
  store i32 1, i32* %2, align 8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @NaClVmmapRemoveMarked(%struct.NaClVmmap* nocapture) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %145, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 0
  br label %7

7:                                                ; preds = %5, %34
  %8 = phi i64 [ %3, %5 ], [ %10, %34 ]
  %9 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %6, align 8
  %10 = add i64 %8, -1
  %11 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %9, i64 %10
  %12 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %11, align 8
  %13 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %12, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %39, label %16

16:                                               ; preds = %7
  %17 = ptrtoint %struct.NaClVmmapEntry* %12 to i64
  %18 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %12, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %12, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %12, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %12, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %12, i64 0, i32 5
  %27 = bitcast %struct.NaClDesc** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %12, i64 0, i32 6
  %30 = load i64, i64* %29, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.2, i64 0, i64 0), i64 %17, i64 %19, i64 %21, i32 %23, i32 %25, i64 %28, i64 %30) #8
  %31 = load %struct.NaClDesc*, %struct.NaClDesc** %26, align 8
  %32 = icmp eq %struct.NaClDesc* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %16
  tail call void @NaClDescSafeUnref(%struct.NaClDesc* nonnull %31) #8
  br label %34

34:                                               ; preds = %16, %33
  %35 = bitcast %struct.NaClVmmapEntry* %12 to i8*
  tail call void @free(i8* %35) #8
  %36 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %6, align 8
  %37 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %36, i64 %10
  store %struct.NaClVmmapEntry* null, %struct.NaClVmmapEntry** %37, align 8
  %38 = icmp eq i64 %10, 0
  br i1 %38, label %41, label %7

39:                                               ; preds = %7
  %40 = icmp eq i64 %10, 0
  br i1 %40, label %43, label %50

41:                                               ; preds = %34
  %42 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %6, align 8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi %struct.NaClVmmapEntry** [ %42, %41 ], [ %9, %39 ]
  %45 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %44, align 8
  %46 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %45, i64 0, i32 4
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %43
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0)) #8
  br label %145

50:                                               ; preds = %43, %39
  %51 = phi %struct.NaClVmmapEntry** [ %44, %43 ], [ %9, %39 ]
  %52 = load i64, i64* %2, align 8
  %53 = icmp ult i64 %10, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.13, i64 0, i64 0), i32 195, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #8
  %55 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %6, align 8
  br label %56

56:                                               ; preds = %50, %54
  %57 = phi %struct.NaClVmmapEntry** [ %51, %50 ], [ %55, %54 ]
  %58 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %57, i64 %10
  %59 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %58, align 8
  %60 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %59, i64 0, i32 4
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %56
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.13, i64 0, i64 0), i32 196, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i64 0, i64 0)) #8
  br label %64

64:                                               ; preds = %56, %63
  %65 = icmp eq i64 %10, 0
  br i1 %65, label %141, label %66

66:                                               ; preds = %64, %137
  %67 = phi i64 [ %138, %137 ], [ %10, %64 ]
  %68 = phi i64 [ %139, %137 ], [ 0, %64 ]
  %69 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %6, align 8
  %70 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %69, i64 %68
  %71 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %70, align 8
  %72 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %71, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %137, label %75

75:                                               ; preds = %66
  %76 = ptrtoint %struct.NaClVmmapEntry* %71 to i64
  %77 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %71, i64 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %71, i64 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %71, i64 0, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %71, i64 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %71, i64 0, i32 5
  %86 = bitcast %struct.NaClDesc** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %71, i64 0, i32 6
  %89 = load i64, i64* %88, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.2, i64 0, i64 0), i64 %76, i64 %78, i64 %80, i32 %82, i32 %84, i64 %87, i64 %89) #8
  %90 = load %struct.NaClDesc*, %struct.NaClDesc** %85, align 8
  %91 = icmp eq %struct.NaClDesc* %90, null
  br i1 %91, label %93, label %92

92:                                               ; preds = %75
  tail call void @NaClDescSafeUnref(%struct.NaClDesc* nonnull %90) #8
  br label %93

93:                                               ; preds = %75, %92
  %94 = bitcast %struct.NaClVmmapEntry* %71 to i8*
  tail call void @free(i8* %94) #8
  %95 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %6, align 8
  %96 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %95, i64 %67
  %97 = bitcast %struct.NaClVmmapEntry** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %95, i64 %68
  %100 = bitcast %struct.NaClVmmapEntry** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %6, align 8
  %102 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %101, i64 %67
  store %struct.NaClVmmapEntry* null, %struct.NaClVmmapEntry** %102, align 8
  %103 = add i64 %67, -1
  %104 = icmp ugt i64 %103, %68
  br i1 %104, label %105, label %137

105:                                              ; preds = %93, %131
  %106 = phi i64 [ %135, %131 ], [ %103, %93 ]
  %107 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %6, align 8
  %108 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %107, i64 %106
  %109 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %108, align 8
  %110 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %109, i64 0, i32 4
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %137, label %113

113:                                              ; preds = %105
  %114 = ptrtoint %struct.NaClVmmapEntry* %109 to i64
  %115 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %109, i64 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %109, i64 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %109, i64 0, i32 2
  %120 = load i32, i32* %119, align 8
  %121 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %109, i64 0, i32 3
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %109, i64 0, i32 5
  %124 = bitcast %struct.NaClDesc** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %109, i64 0, i32 6
  %127 = load i64, i64* %126, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.2, i64 0, i64 0), i64 %114, i64 %116, i64 %118, i32 %120, i32 %122, i64 %125, i64 %127) #8
  %128 = load %struct.NaClDesc*, %struct.NaClDesc** %123, align 8
  %129 = icmp eq %struct.NaClDesc* %128, null
  br i1 %129, label %131, label %130

130:                                              ; preds = %113
  tail call void @NaClDescSafeUnref(%struct.NaClDesc* nonnull %128) #8
  br label %131

131:                                              ; preds = %113, %130
  %132 = bitcast %struct.NaClVmmapEntry* %109 to i8*
  tail call void @free(i8* %132) #8
  %133 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %6, align 8
  %134 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %133, i64 %106
  store %struct.NaClVmmapEntry* null, %struct.NaClVmmapEntry** %134, align 8
  %135 = add i64 %106, -1
  %136 = icmp ugt i64 %135, %68
  br i1 %136, label %105, label %137

137:                                              ; preds = %131, %105, %93, %66
  %138 = phi i64 [ %67, %66 ], [ %103, %93 ], [ %135, %131 ], [ %106, %105 ]
  %139 = add nuw i64 %68, 1
  %140 = icmp ult i64 %139, %138
  br i1 %140, label %66, label %141

141:                                              ; preds = %137, %64
  %142 = phi i64 [ 0, %64 ], [ %138, %137 ]
  %143 = add i64 %142, 1
  store i64 %143, i64* %2, align 8
  %144 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 3
  store i32 0, i32* %144, align 8
  br label %145

145:                                              ; preds = %1, %141, %49
  ret void
}

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @NaClVmmapCmpEntries(i8* nocapture readonly, i8* nocapture readonly) #6 {
  %3 = bitcast i8* %0 to %struct.NaClVmmapEntry**
  %4 = bitcast i8* %1 to %struct.NaClVmmapEntry**
  %5 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %3, align 8
  %6 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %4, align 8
  %9 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %8, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = trunc i64 %11 to i32
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClVmmapAdd(%struct.NaClVmmap*, i64, i64, i32, i32, %struct.NaClDesc*, i64, i64) local_unnamed_addr #0 {
  %9 = ptrtoint %struct.NaClVmmap* %0 to i64
  %10 = ptrtoint %struct.NaClDesc* %5 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.7, i64 0, i64 0), i64 %9, i64 %1, i64 %2, i32 %3, i32 %4, i64 %10, i64 %6) #8
  %11 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %12, %14
  br i1 %15, label %16, label %25

16:                                               ; preds = %8
  %17 = bitcast %struct.NaClVmmap* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = shl i64 %12, 4
  %20 = tail call i8* @realloc(i8* %18, i64 %19) #8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0)) #8
  br label %59

23:                                               ; preds = %16
  %24 = shl i64 %12, 1
  store i8* %20, i8** %17, align 8
  store i64 %24, i64* %13, align 8
  br label %25

25:                                               ; preds = %23, %8
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i64 %1, i64 %2, i32 %3, i32 %4, i64 %10, i64 %6) #8
  %26 = tail call noalias i8* @malloc(i64 56) #8
  %27 = bitcast i8* %26 to %struct.NaClVmmapEntry*
  %28 = icmp eq i8* %26, null
  br i1 %28, label %50, label %29

29:                                               ; preds = %25
  %30 = ptrtoint i8* %26 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 %30) #8
  %31 = bitcast i8* %26 to i64*
  store i64 %1, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %26, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 %2, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %26, i64 16
  %35 = bitcast i8* %34 to i32*
  store i32 %3, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %26, i64 20
  %37 = bitcast i8* %36 to i32*
  store i32 %4, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %26, i64 24
  %39 = bitcast i8* %38 to i32*
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %26, i64 32
  %41 = bitcast i8* %40 to %struct.NaClDesc**
  store %struct.NaClDesc* %5, %struct.NaClDesc** %41, align 8
  %42 = icmp eq %struct.NaClDesc* %5, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %29
  %44 = tail call %struct.NaClDesc* @NaClDescRef(%struct.NaClDesc* nonnull %5) #8
  br label %45

45:                                               ; preds = %43, %29
  %46 = getelementptr inbounds i8, i8* %26, i64 40
  %47 = bitcast i8* %46 to i64*
  store i64 %6, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %26, i64 48
  %49 = bitcast i8* %48 to i64*
  store i64 %7, i64* %49, align 8
  br label %50

50:                                               ; preds = %25, %45
  %51 = phi %struct.NaClVmmapEntry* [ %27, %45 ], [ null, %25 ]
  %52 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 0
  %53 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %52, align 8
  %54 = load i64, i64* %11, align 8
  %55 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %53, i64 %54
  store %struct.NaClVmmapEntry* %51, %struct.NaClVmmapEntry** %55, align 8
  %56 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 3
  store i32 0, i32* %56, align 8
  %57 = load i64, i64* %11, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %11, align 8
  br label %59

59:                                               ; preds = %22, %50
  ret void
}

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClVmmapAddWithOverwrite(%struct.NaClVmmap*, i64, i64, i32, i32, %struct.NaClDesc*, i64, i64) local_unnamed_addr #0 {
  tail call fastcc void @NaClVmmapUpdate(%struct.NaClVmmap* %0, i64 %1, i64 %2, i32 %3, i32 %4, i32 0, %struct.NaClDesc* %5, i64 %6, i64 %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @NaClVmmapUpdate(%struct.NaClVmmap*, i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64) unnamed_addr #0 {
  %10 = add i64 %2, %1
  %11 = ptrtoint %struct.NaClVmmap* %0 to i64
  %12 = ptrtoint %struct.NaClDesc* %6 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i64 %11, i64 %1, i64 %2, i32 %3, i32 %4, i32 %5, i64 %12, i64 %7) #8
  %13 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %9
  tail call fastcc void @NaClVmmapRemoveMarked(%struct.NaClVmmap* %0) #8
  %17 = bitcast %struct.NaClVmmap* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  tail call void @qsort(i8* %18, i64 %20, i64 8, i32 (i8*, i8*)* nonnull @NaClVmmapCmpEntries) #8
  store i32 1, i32* %13, align 8
  br label %21

21:                                               ; preds = %9, %16
  %22 = icmp eq i64 %2, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.13, i64 0, i64 0), i32 331, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0)) #8
  br label %24

24:                                               ; preds = %21, %23
  %25 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %85, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 0
  br label %30

30:                                               ; preds = %28, %81
  %31 = phi i64 [ 0, %28 ], [ %82, %81 ]
  %32 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %29, align 8
  %33 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %32, i64 %31
  %34 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %33, align 8
  %35 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %34, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %34, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, %36
  %40 = icmp ult i64 %36, %1
  %41 = icmp ugt i64 %39, %10
  %42 = and i1 %40, %41
  br i1 %42, label %43, label %61

43:                                               ; preds = %30
  %44 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %34, i64 0, i32 0
  %45 = sub i64 %10, %36
  %46 = shl i64 %45, 12
  %47 = sub i64 %39, %10
  %48 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %34, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %34, i64 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %34, i64 0, i32 5
  %53 = load %struct.NaClDesc*, %struct.NaClDesc** %52, align 8
  %54 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %34, i64 0, i32 6
  %55 = load i64, i64* %54, align 8
  %56 = add nsw i64 %55, %46
  %57 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %34, i64 0, i32 7
  %58 = load i64, i64* %57, align 8
  tail call void @NaClVmmapAdd(%struct.NaClVmmap* %0, i64 %10, i64 %47, i32 %49, i32 %51, %struct.NaClDesc* %53, i64 %56, i64 %58)
  %59 = load i64, i64* %44, align 8
  %60 = sub i64 %1, %59
  store i64 %60, i64* %37, align 8
  br label %85

61:                                               ; preds = %30
  %62 = icmp ugt i64 %39, %1
  %63 = and i1 %40, %62
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  %65 = sub i64 %1, %36
  store i64 %65, i64* %37, align 8
  br label %81

66:                                               ; preds = %61
  %67 = icmp ugt i64 %10, %36
  %68 = and i1 %67, %41
  br i1 %68, label %69, label %77

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %34, i64 0, i32 0
  %71 = sub i64 %10, %36
  %72 = shl i64 %71, 12
  store i64 %10, i64* %70, align 8
  %73 = sub i64 %39, %10
  store i64 %73, i64* %37, align 8
  %74 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %34, i64 0, i32 6
  %75 = load i64, i64* %74, align 8
  %76 = add nsw i64 %75, %72
  store i64 %76, i64* %74, align 8
  br label %85

77:                                               ; preds = %66
  %78 = or i1 %40, %41
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %34, i64 0, i32 4
  store i32 1, i32* %80, align 8
  br label %81

81:                                               ; preds = %77, %64, %79
  %82 = add nuw i64 %31, 1
  %83 = load i64, i64* %25, align 8
  %84 = icmp ult i64 %82, %83
  br i1 %84, label %30, label %85

85:                                               ; preds = %81, %24, %69, %43
  %86 = icmp eq i32 %5, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  tail call void @NaClVmmapAdd(%struct.NaClVmmap* %0, i64 %1, i64 %2, i32 %3, i32 %4, %struct.NaClDesc* %6, i64 %7, i64 %8)
  br label %88

88:                                               ; preds = %85, %87
  tail call fastcc void @NaClVmmapRemoveMarked(%struct.NaClVmmap* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClVmmapRemove(%struct.NaClVmmap*, i64, i64) local_unnamed_addr #0 {
  tail call fastcc void @NaClVmmapUpdate(%struct.NaClVmmap* %0, i64 %1, i64 %2, i32 0, i32 0, i32 1, %struct.NaClDesc* null, i64 0, i64 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClVmmapChangeProt(%struct.NaClVmmap*, i64, i64, i32) local_unnamed_addr #0 {
  %5 = add i64 %2, %1
  %6 = ptrtoint %struct.NaClVmmap* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.18, i64 0, i64 0), i64 %6, i64 %1, i64 %2, i32 %3) #8
  %7 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %170, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  tail call fastcc void @NaClVmmapRemoveMarked(%struct.NaClVmmap* %0) #8
  %15 = bitcast %struct.NaClVmmap* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = load i64, i64* %7, align 8
  tail call void @qsort(i8* %16, i64 %17, i64 8, i32 (i8*, i8*)* nonnull @NaClVmmapCmpEntries) #8
  store i32 1, i32* %11, align 8
  %18 = load i64, i64* %7, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %170, label %20

20:                                               ; preds = %14, %10
  %21 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 0
  br label %22

22:                                               ; preds = %66, %20
  %23 = phi i64 [ 0, %20 ], [ %68, %66 ]
  %24 = phi i64 [ %1, %20 ], [ %67, %66 ]
  %25 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %21, align 8
  %26 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %25, i64 %23
  %27 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %26, align 8
  %28 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %27, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %27, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, %29
  %33 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %27, i64 0, i32 5
  %34 = load %struct.NaClDesc*, %struct.NaClDesc** %33, align 8
  %35 = icmp eq %struct.NaClDesc* %34, null
  br i1 %35, label %52, label %36

36:                                               ; preds = %22
  %37 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %27, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %52

41:                                               ; preds = %36
  %42 = bitcast %struct.NaClDesc* %34 to %struct.NaClDescVtbl**
  %43 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %42, align 8
  %44 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %43, i64 0, i32 35
  %45 = load i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)** %44, align 8
  %46 = tail call i32 %45(%struct.NaClDesc* nonnull %34) #8
  %47 = and i32 %46, 3
  %48 = icmp eq i32 %47, 3
  br i1 %48, label %49, label %50

49:                                               ; preds = %41
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0)) #8
  br label %52

50:                                               ; preds = %41
  %51 = sub nuw nsw i32 -2, %47
  br label %52

52:                                               ; preds = %50, %49, %36, %22
  %53 = phi i32 [ -1, %49 ], [ -4, %22 ], [ -4, %36 ], [ %51, %50 ]
  %54 = load i64, i64* %28, align 8
  %55 = icmp ugt i64 %54, %24
  %56 = icmp ugt i64 %5, %32
  %57 = or i1 %56, %55
  br i1 %57, label %58, label %71

58:                                               ; preds = %52
  %59 = icmp ule i64 %54, %24
  %60 = icmp ult i64 %24, %32
  %61 = and i1 %60, %59
  br i1 %61, label %62, label %65

62:                                               ; preds = %58
  %63 = and i32 %53, %3
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %170

65:                                               ; preds = %58
  br i1 %55, label %170, label %66

66:                                               ; preds = %65, %62
  %67 = phi i64 [ %24, %65 ], [ %32, %62 ]
  %68 = add nuw i64 %23, 1
  %69 = load i64, i64* %7, align 8
  %70 = icmp ult i64 %68, %69
  br i1 %70, label %22, label %170

71:                                               ; preds = %52
  %72 = and i32 %53, %3
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %170

74:                                               ; preds = %71
  tail call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.9, i64 0, i64 0), i64 %6, i64 %1, i64 %2, i32 %3) #8
  %75 = load i32, i32* %11, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %74
  tail call fastcc void @NaClVmmapRemoveMarked(%struct.NaClVmmap* %0) #8
  %78 = bitcast %struct.NaClVmmap* %0 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = load i64, i64* %7, align 8
  tail call void @qsort(i8* %79, i64 %80, i64 8, i32 (i8*, i8*)* nonnull @NaClVmmapCmpEntries) #8
  store i32 1, i32* %11, align 8
  br label %81

81:                                               ; preds = %74, %77
  %82 = load i64, i64* %7, align 8
  %83 = icmp ne i64 %82, 0
  %84 = icmp ne i64 %2, 0
  %85 = and i1 %84, %83
  br i1 %85, label %86, label %170

86:                                               ; preds = %81, %163
  %87 = phi i64 [ %166, %163 ], [ 0, %81 ]
  %88 = phi i64 [ %165, %163 ], [ %2, %81 ]
  %89 = phi i64 [ %164, %163 ], [ %1, %81 ]
  %90 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %21, align 8
  %91 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %90, i64 %87
  %92 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %91, align 8
  %93 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, %94
  %98 = icmp ugt i64 %89, %94
  %99 = icmp ult i64 %5, %97
  %100 = and i1 %98, %99
  br i1 %100, label %101, label %124

101:                                              ; preds = %86
  %102 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 0
  %103 = sub i64 %5, %94
  %104 = shl i64 %103, 12
  %105 = sub i64 %97, %5
  %106 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 2
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 3
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 5
  %111 = load %struct.NaClDesc*, %struct.NaClDesc** %110, align 8
  %112 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 6
  %113 = load i64, i64* %112, align 8
  %114 = add nsw i64 %113, %104
  %115 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 7
  %116 = load i64, i64* %115, align 8
  tail call void @NaClVmmapAdd(%struct.NaClVmmap* %0, i64 %5, i64 %105, i32 %107, i32 %109, %struct.NaClDesc* %111, i64 %114, i64 %116)
  %117 = load i64, i64* %102, align 8
  %118 = sub i64 %89, %117
  store i64 %118, i64* %95, align 8
  %119 = load i32, i32* %108, align 4
  %120 = load %struct.NaClDesc*, %struct.NaClDesc** %110, align 8
  %121 = load i64, i64* %112, align 8
  %122 = add i64 %121, %118
  %123 = load i64, i64* %115, align 8
  tail call void @NaClVmmapAdd(%struct.NaClVmmap* %0, i64 %89, i64 %88, i32 %3, i32 %119, %struct.NaClDesc* %120, i64 %122, i64 %123)
  br label %170

124:                                              ; preds = %86
  %125 = icmp ugt i64 %97, %89
  %126 = and i1 %98, %125
  br i1 %126, label %127, label %140

127:                                              ; preds = %124
  %128 = sub i64 %89, %94
  store i64 %128, i64* %95, align 8
  %129 = sub i64 %97, %89
  %130 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 3
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 5
  %133 = load %struct.NaClDesc*, %struct.NaClDesc** %132, align 8
  %134 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 6
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, %128
  %137 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 7
  %138 = load i64, i64* %137, align 8
  tail call void @NaClVmmapAdd(%struct.NaClVmmap* %0, i64 %89, i64 %129, i32 %3, i32 %131, %struct.NaClDesc* %133, i64 %136, i64 %138)
  %139 = sub i64 %5, %97
  br label %163

140:                                              ; preds = %124
  %141 = icmp ugt i64 %5, %94
  %142 = and i1 %141, %99
  br i1 %142, label %143, label %158

143:                                              ; preds = %140
  %144 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 0
  %145 = sub i64 %5, %94
  %146 = shl i64 %145, 12
  %147 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 3
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 5
  %150 = load %struct.NaClDesc*, %struct.NaClDesc** %149, align 8
  %151 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 6
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 7
  %154 = load i64, i64* %153, align 8
  tail call void @NaClVmmapAdd(%struct.NaClVmmap* %0, i64 %89, i64 %88, i32 %3, i32 %148, %struct.NaClDesc* %150, i64 %152, i64 %154)
  store i64 %5, i64* %144, align 8
  %155 = sub i64 %97, %5
  store i64 %155, i64* %95, align 8
  %156 = load i64, i64* %151, align 8
  %157 = add nsw i64 %156, %146
  store i64 %157, i64* %151, align 8
  br label %170

158:                                              ; preds = %140
  %159 = or i1 %98, %99
  br i1 %159, label %163, label %160

160:                                              ; preds = %158
  %161 = sub i64 %5, %97
  %162 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %92, i64 0, i32 2
  store i32 %3, i32* %162, align 8
  br label %163

163:                                              ; preds = %158, %127, %160
  %164 = phi i64 [ %89, %158 ], [ %97, %160 ], [ %97, %127 ]
  %165 = phi i64 [ %88, %158 ], [ %161, %160 ], [ %139, %127 ]
  %166 = add nuw i64 %87, 1
  %167 = icmp ult i64 %166, %82
  %168 = icmp ne i64 %165, 0
  %169 = and i1 %168, %167
  br i1 %169, label %86, label %170

170:                                              ; preds = %66, %62, %65, %163, %81, %71, %14, %4, %101, %143
  %171 = phi i32 [ 0, %71 ], [ 1, %143 ], [ 1, %101 ], [ 0, %4 ], [ 0, %14 ], [ 1, %81 ], [ 1, %163 ], [ 0, %65 ], [ 0, %62 ], [ 0, %66 ]
  ret i32 %171
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClVmmapEntryMaxProt(%struct.NaClVmmapEntry* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %0, i64 0, i32 5
  %3 = load %struct.NaClDesc*, %struct.NaClDesc** %2, align 8
  %4 = icmp eq %struct.NaClDesc* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %5
  %11 = bitcast %struct.NaClDesc* %3 to %struct.NaClDescVtbl**
  %12 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %11, align 8
  %13 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %12, i64 0, i32 35
  %14 = load i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)** %13, align 8
  %15 = tail call i32 %14(%struct.NaClDesc* nonnull %3) #8
  %16 = and i32 %15, 3
  %17 = icmp eq i32 %16, 3
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0)) #8
  br label %21

19:                                               ; preds = %10
  %20 = add nuw nsw i32 %16, 1
  ret i32 %20

21:                                               ; preds = %5, %1, %18
  %22 = phi i32 [ 0, %18 ], [ 3, %1 ], [ 3, %5 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.NaClVmmapEntry* @NaClVmmapFindPage(%struct.NaClVmmap* nocapture, i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.NaClVmmap* %0 to i8**
  br label %13

8:                                                ; preds = %2
  tail call fastcc void @NaClVmmapRemoveMarked(%struct.NaClVmmap* %0) #8
  %9 = bitcast %struct.NaClVmmap* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  tail call void @qsort(i8* %10, i64 %12, i64 8, i32 (i8*, i8*)* nonnull @NaClVmmapCmpEntries) #8
  store i32 1, i32* %3, align 8
  br label %13

13:                                               ; preds = %6, %8
  %14 = phi i8** [ %7, %6 ], [ %9, %8 ]
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %51, label %19

19:                                               ; preds = %13, %44
  %20 = phi i64 [ %46, %44 ], [ %17, %13 ]
  %21 = phi i64 [ %45, %44 ], [ 0, %13 ]
  %22 = add i64 %21, %20
  %23 = lshr i64 %22, 1
  %24 = shl i64 %23, 3
  %25 = getelementptr inbounds i8, i8* %15, i64 %24
  %26 = bitcast i8* %25 to %struct.NaClVmmapEntry**
  tail call void (i32, i8*, ...) @NaClLog(i32 5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i64 %1) #8
  %27 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %26, align 8
  %28 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %27, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i64 %29) #8
  %30 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %26, align 8
  %31 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %30, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i64 0, i64 0), i64 %32) #8
  %33 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %26, align 8
  %34 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp ugt i64 %35, %1
  br i1 %36, label %44, label %37

37:                                               ; preds = %19
  %38 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %33, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %35
  %41 = icmp ugt i64 %40, %1
  br i1 %41, label %48, label %42

42:                                               ; preds = %37
  %43 = add nuw i64 %23, 1
  br label %44

44:                                               ; preds = %19, %42
  %45 = phi i64 [ %43, %42 ], [ %21, %19 ]
  %46 = phi i64 [ %20, %42 ], [ %23, %19 ]
  %47 = icmp ult i64 %45, %46
  br i1 %47, label %19, label %51

48:                                               ; preds = %37
  %49 = icmp eq i8* %25, null
  %50 = select i1 %49, %struct.NaClVmmapEntry* null, %struct.NaClVmmapEntry* %33
  ret %struct.NaClVmmapEntry* %50

51:                                               ; preds = %44, %13
  ret %struct.NaClVmmapEntry* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.NaClVmmapIter* @NaClVmmapFindPageIter(%struct.NaClVmmap*, i64, %struct.NaClVmmapIter* returned) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = bitcast %struct.NaClVmmap* %0 to i8**
  br label %14

9:                                                ; preds = %3
  tail call fastcc void @NaClVmmapRemoveMarked(%struct.NaClVmmap* %0) #8
  %10 = bitcast %struct.NaClVmmap* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  tail call void @qsort(i8* %11, i64 %13, i64 8, i32 (i8*, i8*)* nonnull @NaClVmmapCmpEntries) #8
  store i32 1, i32* %4, align 8
  br label %14

14:                                               ; preds = %7, %9
  %15 = phi i8** [ %8, %7 ], [ %10, %9 ]
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %49, label %20

20:                                               ; preds = %14, %45
  %21 = phi i64 [ %47, %45 ], [ %18, %14 ]
  %22 = phi i64 [ %46, %45 ], [ 0, %14 ]
  %23 = add i64 %22, %21
  %24 = lshr i64 %23, 1
  %25 = shl i64 %24, 3
  %26 = getelementptr inbounds i8, i8* %16, i64 %25
  %27 = bitcast i8* %26 to %struct.NaClVmmapEntry**
  tail call void (i32, i8*, ...) @NaClLog(i32 5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i64 %1) #8
  %28 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %27, align 8
  %29 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %28, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i64 %30) #8
  %31 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %27, align 8
  %32 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %31, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i64 0, i64 0), i64 %33) #8
  %34 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %27, align 8
  %35 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %34, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp ugt i64 %36, %1
  br i1 %37, label %45, label %38

38:                                               ; preds = %20
  %39 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %34, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %36
  %42 = icmp ugt i64 %41, %1
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = add nuw i64 %24, 1
  br label %45

45:                                               ; preds = %20, %43
  %46 = phi i64 [ %44, %43 ], [ %22, %20 ]
  %47 = phi i64 [ %21, %43 ], [ %24, %20 ]
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %20, label %49

49:                                               ; preds = %45, %14
  %50 = getelementptr inbounds %struct.NaClVmmapIter, %struct.NaClVmmapIter* %2, i64 0, i32 0
  store %struct.NaClVmmap* %0, %struct.NaClVmmap** %50, align 8
  br label %54

51:                                               ; preds = %38
  %52 = getelementptr inbounds %struct.NaClVmmapIter, %struct.NaClVmmapIter* %2, i64 0, i32 0
  store %struct.NaClVmmap* %0, %struct.NaClVmmap** %52, align 8
  %53 = icmp eq i8* %26, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %49, %51
  %55 = load i64, i64* %17, align 8
  br label %62

56:                                               ; preds = %51
  %57 = bitcast %struct.NaClVmmap* %0 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = ptrtoint i8* %26 to i64
  %60 = sub i64 %59, %58
  %61 = ashr exact i64 %60, 3
  br label %62

62:                                               ; preds = %56, %54
  %63 = phi i64 [ %61, %56 ], [ %55, %54 ]
  %64 = getelementptr inbounds %struct.NaClVmmapIter, %struct.NaClVmmapIter* %2, i64 0, i32 1
  store i64 %63, i64* %64, align 8
  ret %struct.NaClVmmapIter* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @NaClVmmapIterAtEnd(%struct.NaClVmmapIter* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.NaClVmmapIter, %struct.NaClVmmapIter* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %struct.NaClVmmapIter, %struct.NaClVmmapIter* %0, i64 0, i32 0
  %5 = load %struct.NaClVmmap*, %struct.NaClVmmap** %4, align 8
  %6 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp uge i64 %3, %7
  %9 = zext i1 %8 to i32
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.NaClVmmapEntry* @NaClVmmapIterStar(%struct.NaClVmmapIter* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.NaClVmmapIter, %struct.NaClVmmapIter* %0, i64 0, i32 0
  %3 = load %struct.NaClVmmap*, %struct.NaClVmmap** %2, align 8
  %4 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %3, i64 0, i32 0
  %5 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %4, align 8
  %6 = getelementptr inbounds %struct.NaClVmmapIter, %struct.NaClVmmapIter* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %5, i64 %7
  %9 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %8, align 8
  ret %struct.NaClVmmapEntry* %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @NaClVmmapIterIncr(%struct.NaClVmmapIter* nocapture) local_unnamed_addr #7 {
  %2 = getelementptr inbounds %struct.NaClVmmapIter, %struct.NaClVmmapIter* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClVmmapIterErase(%struct.NaClVmmapIter* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClVmmapIter, %struct.NaClVmmapIter* %0, i64 0, i32 0
  %3 = load %struct.NaClVmmap*, %struct.NaClVmmap** %2, align 8
  %4 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %3, i64 0, i32 0
  %5 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %4, align 8
  %6 = getelementptr inbounds %struct.NaClVmmapIter, %struct.NaClVmmapIter* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %5, i64 %7
  %9 = bitcast %struct.NaClVmmapEntry** %8 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @free(i8* %10) #8
  %11 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %4, align 8
  %12 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %3, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -1
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %11, i64 %14
  %16 = bitcast %struct.NaClVmmapEntry** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = load i64, i64* %6, align 8
  %19 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %11, i64 %18
  %20 = bitcast %struct.NaClVmmapEntry** %19 to i64*
  store i64 %17, i64* %20, align 8
  %21 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %3, i64 0, i32 3
  store i32 0, i32* %21, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClVmmapFindSpace(%struct.NaClVmmap* nocapture, i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %40, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  tail call fastcc void @NaClVmmapRemoveMarked(%struct.NaClVmmap* %0) #8
  %11 = bitcast %struct.NaClVmmap* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = load i64, i64* %3, align 8
  tail call void @qsort(i8* %12, i64 %13, i64 8, i32 (i8*, i8*)* nonnull @NaClVmmapCmpEntries) #8
  store i32 1, i32* %7, align 8
  %14 = load i64, i64* %3, align 8
  br label %15

15:                                               ; preds = %6, %10
  %16 = phi i64 [ %4, %6 ], [ %14, %10 ]
  %17 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 0
  br label %18

18:                                               ; preds = %22, %15
  %19 = phi i64 [ %16, %15 ], [ %20, %22 ]
  %20 = add i64 %19, -1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %18
  %23 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %17, align 8
  %24 = add i64 %19, -2
  %25 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %23, i64 %24
  %26 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %25, align 8
  %27 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %26, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %26, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %23, i64 %20
  %32 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %31, align 8
  %33 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %32, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %30, %28
  %36 = sub i64 %34, %35
  %37 = icmp ult i64 %36, %1
  br i1 %37, label %18, label %38

38:                                               ; preds = %22
  %39 = sub i64 %34, %1
  br label %40

40:                                               ; preds = %18, %2, %38
  %41 = phi i64 [ %39, %38 ], [ 0, %2 ], [ 0, %18 ]
  ret i64 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClVmmapFindMapSpace(%struct.NaClVmmap* nocapture, i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %47, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  tail call fastcc void @NaClVmmapRemoveMarked(%struct.NaClVmmap* %0) #8
  %11 = bitcast %struct.NaClVmmap* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = load i64, i64* %3, align 8
  tail call void @qsort(i8* %12, i64 %13, i64 8, i32 (i8*, i8*)* nonnull @NaClVmmapCmpEntries) #8
  store i32 1, i32* %7, align 8
  %14 = load i64, i64* %3, align 8
  br label %15

15:                                               ; preds = %6, %10
  %16 = phi i64 [ %4, %6 ], [ %14, %10 ]
  %17 = add i64 %1, 15
  %18 = and i64 %17, -16
  %19 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 0
  br label %20

20:                                               ; preds = %24, %15
  %21 = phi i64 [ %16, %15 ], [ %22, %24 ]
  %22 = add i64 %21, -1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %20
  %25 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %19, align 8
  %26 = add i64 %21, -2
  %27 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %25, i64 %26
  %28 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %27, align 8
  %29 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %28, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %28, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %30, 15
  %34 = add i64 %33, %32
  %35 = and i64 %34, -16
  %36 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %25, i64 %22
  %37 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %36, align 8
  %38 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %37, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, -16
  %41 = icmp ule i64 %40, %35
  %42 = sub i64 %40, %35
  %43 = icmp ult i64 %42, %18
  %44 = or i1 %41, %43
  br i1 %44, label %20, label %45

45:                                               ; preds = %24
  %46 = sub i64 %40, %18
  br label %47

47:                                               ; preds = %20, %2, %45
  %48 = phi i64 [ %46, %45 ], [ 0, %2 ], [ 0, %20 ]
  ret i64 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClVmmapFindMapSpaceAboveHint(%struct.NaClVmmap* nocapture, i64, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  tail call fastcc void @NaClVmmapRemoveMarked(%struct.NaClVmmap* %0) #8
  %8 = bitcast %struct.NaClVmmap* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  tail call void @qsort(i8* %9, i64 %11, i64 8, i32 (i8*, i8*)* nonnull @NaClVmmapCmpEntries) #8
  store i32 1, i32* %4, align 8
  br label %12

12:                                               ; preds = %3, %7
  %13 = lshr i64 %1, 12
  %14 = add i64 %2, 15
  %15 = and i64 %14, -16
  %16 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %17, 1
  br i1 %18, label %19, label %52

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.NaClVmmap, %struct.NaClVmmap* %0, i64 0, i32 0
  %21 = load %struct.NaClVmmapEntry**, %struct.NaClVmmapEntry*** %20, align 8
  %22 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %21, align 8
  %23 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %22, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  br label %25

25:                                               ; preds = %49, %19
  %26 = phi i64 [ %24, %19 ], [ %37, %49 ]
  %27 = phi %struct.NaClVmmapEntry* [ %22, %19 ], [ %35, %49 ]
  %28 = phi i64 [ 1, %19 ], [ %50, %49 ]
  %29 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %27, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %26, 15
  %32 = add i64 %31, %30
  %33 = and i64 %32, -16
  %34 = getelementptr inbounds %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %21, i64 %28
  %35 = load %struct.NaClVmmapEntry*, %struct.NaClVmmapEntry** %34, align 8
  %36 = getelementptr inbounds %struct.NaClVmmapEntry, %struct.NaClVmmapEntry* %35, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, -16
  %39 = icmp ugt i64 %38, %33
  br i1 %39, label %40, label %49

40:                                               ; preds = %25
  %41 = icmp ule i64 %33, %13
  %42 = icmp ult i64 %13, %38
  %43 = and i1 %41, %42
  %44 = select i1 %43, i64 %13, i64 %33
  %45 = icmp ugt i64 %13, %44
  %46 = sub i64 %38, %44
  %47 = icmp ult i64 %46, %15
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %52

49:                                               ; preds = %40, %25
  %50 = add nuw i64 %28, 1
  %51 = icmp eq i64 %50, %17
  br i1 %51, label %52, label %25

52:                                               ; preds = %40, %49, %12
  %53 = phi i64 [ 0, %12 ], [ 0, %49 ], [ %44, %40 ]
  ret i64 %53
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
