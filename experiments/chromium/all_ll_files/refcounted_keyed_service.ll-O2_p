; ModuleID = '../../components/keyed_service/core/refcounted_keyed_service.cc'
source_filename = "../../components/keyed_service/core/refcounted_keyed_service.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.RefcountedKeyedService = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %class.scoped_refptr }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1" }>
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1", [4 x i8] }>

$_ZN4base12DeleteHelperI22RefcountedKeyedServiceE8DoDeleteEPKv = comdat any

@.str = private unnamed_addr constant [9 x i8] c"Destruct\00", align 1
@.str.1 = private unnamed_addr constant [64 x i8] c"../../components/keyed_service/core/refcounted_keyed_service.cc\00", align 1
@_ZTV22RefcountedKeyedService = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.RefcountedKeyedService*)* @_ZN22RefcountedKeyedServiceD2Ev to i8*), i8* bitcast (void (%class.RefcountedKeyedService*)* @_ZN22RefcountedKeyedServiceD0Ev to i8*)] }, align 8

@_ZN22RefcountedKeyedServiceD1Ev = hidden unnamed_addr alias void (%class.RefcountedKeyedService*), void (%class.RefcountedKeyedService*)* @_ZN22RefcountedKeyedServiceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4impl28RefcountedKeyedServiceTraits8DestructEPK22RefcountedKeyedService(%class.RefcountedKeyedService*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = getelementptr inbounds %class.RefcountedKeyedService, %class.RefcountedKeyedService* %0, i64 0, i32 2, i32 0
  %4 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::SequencedTaskRunner"* %4 to i1 (%"class.base::SequencedTaskRunner"*)***
  %8 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %8, i64 5
  %10 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.base::SequencedTaskRunner"* nonnull %4) #6
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  %13 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %14 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 14) #6
  %15 = bitcast %class.RefcountedKeyedService* %0 to i8*
  %16 = call zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"* %13, %"class.base::Location"* nonnull dereferenceable(32) %2, void (i8*)* nonnull @_ZN4base12DeleteHelperI22RefcountedKeyedServiceE8DoDeleteEPKv, i8* %15) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #6
  br label %24

17:                                               ; preds = %1, %6
  %18 = icmp eq %class.RefcountedKeyedService* %0, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %17
  %20 = bitcast %class.RefcountedKeyedService* %0 to void (%class.RefcountedKeyedService*)***
  %21 = load void (%class.RefcountedKeyedService*)**, void (%class.RefcountedKeyedService*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.RefcountedKeyedService*)*, void (%class.RefcountedKeyedService*)** %21, i64 2
  %23 = load void (%class.RefcountedKeyedService*)*, void (%class.RefcountedKeyedService*)** %22, align 8
  tail call void %23(%class.RefcountedKeyedService* nonnull %0) #6
  br label %24

24:                                               ; preds = %17, %19, %12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN22RefcountedKeyedServiceC2Ev(%class.RefcountedKeyedService* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.RefcountedKeyedService, %class.RefcountedKeyedService* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %class.RefcountedKeyedService, %class.RefcountedKeyedService* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV22RefcountedKeyedService, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.RefcountedKeyedService, %class.RefcountedKeyedService* %0, i64 0, i32 2, i32 0
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22RefcountedKeyedServiceC2E13scoped_refptrIN4base19SequencedTaskRunnerEE(%class.RefcountedKeyedService* nocapture, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::SequencedTaskRunner"* %1 to i64
  %4 = getelementptr inbounds %class.RefcountedKeyedService, %class.RefcountedKeyedService* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %class.RefcountedKeyedService, %class.RefcountedKeyedService* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV22RefcountedKeyedService, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.RefcountedKeyedService, %class.RefcountedKeyedService* %0, i64 0, i32 2
  %7 = bitcast %class.scoped_refptr* %6 to i64*
  store i64 %3, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22RefcountedKeyedServiceD2Ev(%class.RefcountedKeyedService* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.RefcountedKeyedService, %class.RefcountedKeyedService* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV22RefcountedKeyedService, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.RefcountedKeyedService, %class.RefcountedKeyedService* %0, i64 0, i32 2, i32 0
  %4 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.1"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #6
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN22RefcountedKeyedServiceD0Ev(%class.RefcountedKeyedService* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12DeleteHelperI22RefcountedKeyedServiceE8DoDeleteEPKv(i8*) #0 comdat align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %class.RefcountedKeyedService*
  %5 = bitcast i8* %0 to void (%class.RefcountedKeyedService*)***
  %6 = load void (%class.RefcountedKeyedService*)**, void (%class.RefcountedKeyedService*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.RefcountedKeyedService*)*, void (%class.RefcountedKeyedService*)** %6, i64 2
  %8 = load void (%class.RefcountedKeyedService*)*, void (%class.RefcountedKeyedService*)** %7, align 8
  tail call void %8(%class.RefcountedKeyedService* nonnull %4) #6
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
