; ModuleID = '../../third_party/skia/src/sksl/dsl/DSLCase.cpp'
source_filename = "../../third_party/skia/src/sksl/dsl/DSLCase.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::dsl::DSLCase" = type { %"class.SkSL::dsl::DSLExpression", %class.SkSTArray }
%"class.SkSL::dsl::DSLExpression" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.1"*, i64 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.SkTArray.7 = type { %"class.SkSL::dsl::DSLStatement"*, i64 }
%"class.SkSL::dsl::DSLStatement" = type { %"class.std::__1::unique_ptr.1" }

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

@_ZN4SkSL3dsl7DSLCaseC1ENS0_13DSLExpressionE9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEELb0EE = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLExpression"*, %class.SkSTArray*), void (%"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLExpression"*, %class.SkSTArray*)* @_ZN4SkSL3dsl7DSLCaseC2ENS0_13DSLExpressionE9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEELb0EE
@_ZN4SkSL3dsl7DSLCaseC1ENS0_13DSLExpressionE8SkTArrayINS0_12DSLStatementELb0EE = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLExpression"*, %class.SkTArray.7*), void (%"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLExpression"*, %class.SkTArray.7*)* @_ZN4SkSL3dsl7DSLCaseC2ENS0_13DSLExpressionE8SkTArrayINS0_12DSLStatementELb0EE
@_ZN4SkSL3dsl7DSLCaseC1EOS1_ = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLCase"*), void (%"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLCase"*)* @_ZN4SkSL3dsl7DSLCaseC2EOS1_
@_ZN4SkSL3dsl7DSLCaseD1Ev = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLCase"*), void (%"class.SkSL::dsl::DSLCase"*)* @_ZN4SkSL3dsl7DSLCaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7DSLCaseC2ENS0_13DSLExpressionE9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEELb0EE(%"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLExpression"*, %class.SkSTArray*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 0
  tail call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %4, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #3
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 1, i32 0, i32 0, i64 0
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %8 = bitcast i8* %7 to i64*
  %9 = bitcast i8* %5 to i8**
  store i8* %6, i8** %9, align 8
  store i64 17179869184, i64* %8, align 8
  %10 = bitcast i8* %5 to %class.SkTArray*
  %11 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 16
  %12 = bitcast i8* %11 to %class.SkTArray*
  %13 = tail call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %10, %class.SkTArray* dereferenceable(16) %12) #3
  ret void
}

declare void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7DSLCaseC2ENS0_13DSLExpressionE8SkTArrayINS0_12DSLStatementELb0EE(%"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLExpression"*, %class.SkTArray.7* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 0
  tail call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %4, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #3
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 1, i32 0, i32 0, i64 0
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %8 = bitcast i8* %7 to i64*
  %9 = bitcast i8* %5 to i8**
  store i8* %6, i8** %9, align 8
  store i64 17179869184, i64* %8, align 8
  %10 = bitcast i8* %5 to %class.SkTArray*
  %11 = getelementptr inbounds %class.SkTArray.7, %class.SkTArray.7* %2, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %3
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %10, i32 %15, i32 0) #3
  %18 = load i64, i64* %8, align 8
  %19 = shl i64 %18, 32
  %20 = and i64 %19, 4294967296
  %21 = and i64 %18, -4294967297
  %22 = or i64 %20, %21
  br label %23

23:                                               ; preds = %3, %17
  %24 = phi i64 [ %22, %17 ], [ 17179869184, %3 ]
  store i64 %24, i64* %8, align 8
  %25 = getelementptr inbounds %class.SkTArray.7, %class.SkTArray.7* %2, i64 0, i32 0
  %26 = load %"class.SkSL::dsl::DSLStatement"*, %"class.SkSL::dsl::DSLStatement"** %25, align 8
  %27 = icmp eq %"class.SkSL::dsl::DSLStatement"* %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %23
  %29 = load i64, i64* %11, align 8
  %30 = lshr i64 %29, 1
  %31 = and i64 %30, 2147483647
  %32 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %26, i64 %31
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  %35 = bitcast i8* %5 to %"class.std::__1::unique_ptr.1"**
  br label %37

36:                                               ; preds = %37, %23, %28
  ret void

37:                                               ; preds = %34, %37
  %38 = phi %"class.SkSL::dsl::DSLStatement"* [ %26, %34 ], [ %52, %37 ]
  %39 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.SkSL::dsl::DSLStatement"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %39, align 8
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %10, i32 1, i32 1) #3
  %42 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %35, align 8
  %43 = load i64, i64* %8, align 8
  %44 = lshr i64 %43, 1
  %45 = and i64 %44, 2147483647
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %42, i64 %45
  %47 = add i64 %43, 2
  %48 = and i64 %47, 4294967294
  %49 = and i64 %43, -4294967295
  %50 = or i64 %48, %49
  store i64 %50, i64* %8, align 8
  %51 = bitcast %"class.std::__1::unique_ptr.1"* %46 to i64*
  store i64 %41, i64* %51, align 8
  %52 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %38, i64 1
  %53 = icmp eq %"class.SkSL::dsl::DSLStatement"* %52, %32
  br i1 %53, label %36, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7DSLCaseC2EOS1_(%"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLCase"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %1, i64 0, i32 0
  tail call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %3, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %4) #3
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 1, i32 0, i32 0, i64 0
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %8 = bitcast i8* %7 to i64*
  %9 = bitcast i8* %5 to i8**
  store i8* %6, i8** %9, align 8
  store i64 17179869184, i64* %8, align 8
  %10 = bitcast i8* %5 to %class.SkTArray*
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %1, i64 0, i32 1, i32 0, i32 0, i64 16
  %12 = bitcast i8* %11 to %class.SkTArray*
  %13 = tail call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %10, %class.SkTArray* dereferenceable(16) %12) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7DSLCaseD2Ev(%"class.SkSL::dsl::DSLCase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast i8* %2 to %"class.std::__1::unique_ptr.1"**
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %17, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %17, align 8
  %19 = icmp eq %"class.SkSL::Statement"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.SkSL::Statement"* %18 to void (%"class.SkSL::Statement"*)***
  %22 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %22, i64 1
  %24 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %23, align 8
  tail call void %24(%"class.SkSL::Statement"* nonnull %18) #3
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast i8* %2 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #3
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 0
  tail call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %35) #3
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7DSLCase6appendENS0_12DSLStatementE(%"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLStatement"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %class.SkTArray*
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.SkSL::dsl::DSLStatement"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %5, align 8
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %4, i32 1, i32 1) #3
  %8 = bitcast i8* %3 to %"class.std::__1::unique_ptr.1"**
  %9 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 1
  %14 = and i64 %13, 2147483647
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %9, i64 %14
  %16 = add i64 %12, 2
  %17 = and i64 %16, 4294967294
  %18 = and i64 %12, -4294967295
  %19 = or i64 %17, %18
  store i64 %19, i64* %11, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.1"* %15 to i64*
  store i64 %7, i64* %20, align 8
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.1"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %42, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %42, align 8
  %44 = icmp eq %"class.SkSL::Statement"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Statement"* %43 to void (%"class.SkSL::Statement"*)***
  %47 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %48, align 8
  tail call void %49(%"class.SkSL::Statement"* nonnull %43) #3
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %62, align 8
  %64 = icmp eq %"class.SkSL::Statement"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Statement"* %63 to void (%"class.SkSL::Statement"*)***
  %67 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %68, align 8
  tail call void %69(%"class.SkSL::Statement"* nonnull %63) #3
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #3
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.1"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %61, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %61, align 8
  %63 = icmp eq %"class.SkSL::Statement"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Statement"* %62 to void (%"class.SkSL::Statement"*)***
  %66 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, align 8
  tail call void %68(%"class.SkSL::Statement"* nonnull %62) #3
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #3
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
