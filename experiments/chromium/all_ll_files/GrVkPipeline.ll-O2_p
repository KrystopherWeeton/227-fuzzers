; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkPipeline.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkPipeline.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSampleLocationEXT = type { float, float }
%class.sk_sp.482 = type { %class.GrVkPipeline* }
%class.GrVkPipeline = type { %class.GrVkManagedResource, %struct.VkPipeline_T*, %struct.VkPipelineLayout_T* }
%class.GrVkManagedResource = type { %class.GrManagedResource.base, %class.GrVkGpu* }
%class.GrManagedResource.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.VkPipeline_T = type opaque
%class.GrVkGpu = type { %class.GrGpu, %class.sk_sp.193, %class.sk_sp.337, %class.sk_sp.338, i8, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %class.GrVkResourceProvider, %class.GrStagingBufferManager, %class.GrVkMSAALoadManager, %class.GrVkCommandPool*, %class.GrVkPrimaryCommandBuffer*, %class.SkSTArray.436, %class.SkSTArray.436, %class.SkTArray.439, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceMemoryProperties, i8, i8, %"class.std::__1::unique_ptr.446" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.1, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.1 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.41", %"class.std::__1::shared_ptr.41", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.43", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.49" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.13", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.15" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.40"* }
%"class.std::__1::vector.40" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.41" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.41", %"class.std::__1::vector.452", i8, %"class.std::__1::vector.460", %"class.std::__1::forward_list", %class.SkTHashMap.473, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.452" = type { %"class.std::__1::__vector_base.453" }
%"class.std::__1::__vector_base.453" = type { %"class.std::__1::unique_ptr.454"*, %"class.std::__1::unique_ptr.454"*, %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.std::__1::unique_ptr.454"* }
%"class.std::__1::vector.460" = type { %"class.std::__1::__vector_base.461" }
%"class.std::__1::__vector_base.461" = type { %"class.std::__1::unique_ptr.462"*, %"class.std::__1::unique_ptr.462"*, %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.std::__1::unique_ptr.462"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.473 = type { %class.SkTHashTable.474 }
%class.SkTHashTable.474 = type { i32, i32, %class.SkAutoTArray.475 }
%class.SkAutoTArray.475 = type { %"class.std::__1::unique_ptr.476" }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.548" }
%"struct.std::__1::pair.548" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.41", %"class.std::__1::shared_ptr.42" }
%"class.std::__1::shared_ptr.42" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.21", %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.37", [4 x i8] }>
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23", %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i64 }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { i64*, i64*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i64* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %class.sk_sp.123, %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.167", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.186" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.60", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.59 }
%class.sk_sp.59 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.70, %class.SkTArray.79, %class.SkTArray.81, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.63"*, i64 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.81, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.82 }
%class.sk_sp.82 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.70 = type { %class.SkTHashTable.71 }
%class.SkTHashTable.71 = type { i32, i32, %class.SkAutoTArray.72 }
%class.SkAutoTArray.72 = type { %"class.std::__1::unique_ptr.73" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.531" }
%"struct.std::__1::pair.531" = type { i32, %class.SkTArray.532* }
%class.SkTArray.532 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.79 = type { %"class.std::__1::unique_ptr.80"*, i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.532, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.81 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.95 }
%class.SkFibBlockSizes.95 = type { i32 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.123 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.137, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.155, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.127, [4 x i8] }>
%union.anon.127 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.128, i8* }
%class.sk_sp.128 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.129 }
%class.SkTHashTable.129 = type { i32, i32, %class.SkAutoTArray.130 }
%class.SkAutoTArray.130 = type { %"class.std::__1::unique_ptr.131" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.137 = type { %class.SkTHashTable.138 }
%class.SkTHashTable.138 = type { i32, i32, %class.SkAutoTArray.139 }
%class.SkAutoTArray.139 = type { %"class.std::__1::unique_ptr.140" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.146, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.146 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.147" }
%"struct.std::__1::atomic.147" = type { %"struct.std::__1::__atomic_base.148" }
%"struct.std::__1::__atomic_base.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__cxx_atomic_impl.150" }
%"struct.std::__1::__cxx_atomic_impl.150" = type { %"struct.std::__1::__cxx_atomic_base_impl.151" }
%"struct.std::__1::__cxx_atomic_base_impl.151" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.152, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.152 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.153 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.153 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.154, void (i8*)*, i8* }
%class.SkNVRefCnt.154 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.155 = type { %class.SkTHashTable.156 }
%class.SkTHashTable.156 = type { i32, i32, %class.SkAutoTArray.157 }
%class.SkAutoTArray.157 = type { %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp, %class.sk_sp.170, %class.sk_sp.170 }
%class.sk_sp.170 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.192 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.192 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%class.sk_sp.193 = type { %struct.GrVkInterface* }
%struct.GrVkInterface = type { %class.SkRefCnt.base, %"struct.GrVkInterface::Functions" }
%"struct.GrVkInterface::Functions" = type { %"class.GrVkInterface::VkPtr", %"class.GrVkInterface::VkPtr.194", %"class.GrVkInterface::VkPtr.195", %"class.GrVkInterface::VkPtr.196", %"class.GrVkInterface::VkPtr.197", %"class.GrVkInterface::VkPtr.198", %"class.GrVkInterface::VkPtr.199", %"class.GrVkInterface::VkPtr.200", %"class.GrVkInterface::VkPtr.201", %"class.GrVkInterface::VkPtr.202", %"class.GrVkInterface::VkPtr.203", %"class.GrVkInterface::VkPtr.204", %"class.GrVkInterface::VkPtr.205", %"class.GrVkInterface::VkPtr.206", %"class.GrVkInterface::VkPtr.207", %"class.GrVkInterface::VkPtr.208", %"class.GrVkInterface::VkPtr.209", %"class.GrVkInterface::VkPtr.210", %"class.GrVkInterface::VkPtr.211", %"class.GrVkInterface::VkPtr.212", %"class.GrVkInterface::VkPtr.213", %"class.GrVkInterface::VkPtr.214", %"class.GrVkInterface::VkPtr.215", %"class.GrVkInterface::VkPtr.216", %"class.GrVkInterface::VkPtr.216", %"class.GrVkInterface::VkPtr.217", %"class.GrVkInterface::VkPtr.218", %"class.GrVkInterface::VkPtr.219", %"class.GrVkInterface::VkPtr.220", %"class.GrVkInterface::VkPtr.221", %"class.GrVkInterface::VkPtr.222", %"class.GrVkInterface::VkPtr.223", %"class.GrVkInterface::VkPtr.224", %"class.GrVkInterface::VkPtr.225", %"class.GrVkInterface::VkPtr.226", %"class.GrVkInterface::VkPtr.227", %"class.GrVkInterface::VkPtr.228", %"class.GrVkInterface::VkPtr.229", %"class.GrVkInterface::VkPtr.230", %"class.GrVkInterface::VkPtr.231", %"class.GrVkInterface::VkPtr.232", %"class.GrVkInterface::VkPtr.233", %"class.GrVkInterface::VkPtr.234", %"class.GrVkInterface::VkPtr.234", %"class.GrVkInterface::VkPtr.234", %"class.GrVkInterface::VkPtr.235", %"class.GrVkInterface::VkPtr.236", %"class.GrVkInterface::VkPtr.237", %"class.GrVkInterface::VkPtr.238", %"class.GrVkInterface::VkPtr.239", %"class.GrVkInterface::VkPtr.240", %"class.GrVkInterface::VkPtr.241", %"class.GrVkInterface::VkPtr.242", %"class.GrVkInterface::VkPtr.243", %"class.GrVkInterface::VkPtr.244", %"class.GrVkInterface::VkPtr.245", %"class.GrVkInterface::VkPtr.246", %"class.GrVkInterface::VkPtr.247", %"class.GrVkInterface::VkPtr.248", %"class.GrVkInterface::VkPtr.249", %"class.GrVkInterface::VkPtr.250", %"class.GrVkInterface::VkPtr.251", %"class.GrVkInterface::VkPtr.252", %"class.GrVkInterface::VkPtr.253", %"class.GrVkInterface::VkPtr.254", %"class.GrVkInterface::VkPtr.255", %"class.GrVkInterface::VkPtr.256", %"class.GrVkInterface::VkPtr.257", %"class.GrVkInterface::VkPtr.258", %"class.GrVkInterface::VkPtr.259", %"class.GrVkInterface::VkPtr.260", %"class.GrVkInterface::VkPtr.261", %"class.GrVkInterface::VkPtr.262", %"class.GrVkInterface::VkPtr.263", %"class.GrVkInterface::VkPtr.264", %"class.GrVkInterface::VkPtr.265", %"class.GrVkInterface::VkPtr.266", %"class.GrVkInterface::VkPtr.267", %"class.GrVkInterface::VkPtr.268", %"class.GrVkInterface::VkPtr.269", %"class.GrVkInterface::VkPtr.270", %"class.GrVkInterface::VkPtr.271", %"class.GrVkInterface::VkPtr.272", %"class.GrVkInterface::VkPtr.273", %"class.GrVkInterface::VkPtr.274", %"class.GrVkInterface::VkPtr.275", %"class.GrVkInterface::VkPtr.276", %"class.GrVkInterface::VkPtr.277", %"class.GrVkInterface::VkPtr.278", %"class.GrVkInterface::VkPtr.279", %"class.GrVkInterface::VkPtr.280", %"class.GrVkInterface::VkPtr.281", %"class.GrVkInterface::VkPtr.282", %"class.GrVkInterface::VkPtr.283", %"class.GrVkInterface::VkPtr.284", %"class.GrVkInterface::VkPtr.285", %"class.GrVkInterface::VkPtr.286", %"class.GrVkInterface::VkPtr.287", %"class.GrVkInterface::VkPtr.288", %"class.GrVkInterface::VkPtr.288", %"class.GrVkInterface::VkPtr.288", %"class.GrVkInterface::VkPtr.289", %"class.GrVkInterface::VkPtr.290", %"class.GrVkInterface::VkPtr.291", %"class.GrVkInterface::VkPtr.292", %"class.GrVkInterface::VkPtr.293", %"class.GrVkInterface::VkPtr.294", %"class.GrVkInterface::VkPtr.294", %"class.GrVkInterface::VkPtr.295", %"class.GrVkInterface::VkPtr.296", %"class.GrVkInterface::VkPtr.297", %"class.GrVkInterface::VkPtr.298", %"class.GrVkInterface::VkPtr.299", %"class.GrVkInterface::VkPtr.300", %"class.GrVkInterface::VkPtr.301", %"class.GrVkInterface::VkPtr.302", %"class.GrVkInterface::VkPtr.303", %"class.GrVkInterface::VkPtr.304", %"class.GrVkInterface::VkPtr.305", %"class.GrVkInterface::VkPtr.306", %"class.GrVkInterface::VkPtr.307", %"class.GrVkInterface::VkPtr.308", %"class.GrVkInterface::VkPtr.308", %"class.GrVkInterface::VkPtr.309", %"class.GrVkInterface::VkPtr.310", %"class.GrVkInterface::VkPtr.311", %"class.GrVkInterface::VkPtr.312", %"class.GrVkInterface::VkPtr.311", %"class.GrVkInterface::VkPtr.313", %"class.GrVkInterface::VkPtr.314", %"class.GrVkInterface::VkPtr.315", %"class.GrVkInterface::VkPtr.316", %"class.GrVkInterface::VkPtr.317", %"class.GrVkInterface::VkPtr.318", %"class.GrVkInterface::VkPtr.319", %"class.GrVkInterface::VkPtr.320", %"class.GrVkInterface::VkPtr.321", %"class.GrVkInterface::VkPtr.322", %"class.GrVkInterface::VkPtr.323", %"class.GrVkInterface::VkPtr.324", %"class.GrVkInterface::VkPtr.325", %"class.GrVkInterface::VkPtr.326", %"class.GrVkInterface::VkPtr.327", %"class.GrVkInterface::VkPtr.328", %"class.GrVkInterface::VkPtr.329", %"class.GrVkInterface::VkPtr.330", %"class.GrVkInterface::VkPtr.331", %"class.GrVkInterface::VkPtr.332", %"class.GrVkInterface::VkPtr.333", %"class.GrVkInterface::VkPtr.334", %"class.GrVkInterface::VkPtr.335", %"class.GrVkInterface::VkPtr.336" }
%"class.GrVkInterface::VkPtr" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%"class.GrVkInterface::VkPtr.194" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.195" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.GrVkInterface::VkPtr.196" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.197" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.198" = type { i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.199" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.GrVkInterface::VkPtr.200" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.201" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.GrVkInterface::VkPtr.202" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.GrVkInterface::VkPtr.203" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.204" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.GrVkInterface::VkPtr.205" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.GrVkInterface::VkPtr.206" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.GrVkInterface::VkPtr.207" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.GrVkInterface::VkPtr.208" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.GrVkInterface::VkPtr.209" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkCommandBuffer_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%"class.GrVkInterface::VkPtr.210" = type { i32 (%struct.VkQueue_T*)* }
%"class.GrVkInterface::VkPtr.211" = type { i32 (%struct.VkDevice_T*)* }
%"class.GrVkInterface::VkPtr.212" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.GrVkInterface::VkPtr.213" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.214" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.GrVkInterface::VkPtr.215" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.GrVkInterface::VkPtr.216" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.GrVkInterface::VkPtr.217" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)* }
%"class.GrVkInterface::VkPtr.218" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.GrVkInterface::VkPtr.219" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkImage_T = type opaque
%"class.GrVkInterface::VkPtr.220" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.GrVkInterface::VkPtr.221" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.GrVkInterface::VkPtr.222" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)* }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%"class.GrVkInterface::VkPtr.223" = type { void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* }
%"class.GrVkInterface::VkPtr.224" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)* }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.225" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.226" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.227" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.GrVkInterface::VkPtr.228" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.GrVkInterface::VkPtr.229" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.GrVkInterface::VkPtr.230" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.231" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.232" = type { i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)* }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%"class.GrVkInterface::VkPtr.233" = type { void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.234" = type { i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)* }
%"class.GrVkInterface::VkPtr.235" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)* }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%"class.GrVkInterface::VkPtr.236" = type { void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.237" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)* }
%"class.GrVkInterface::VkPtr.238" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.239" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.240" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%"class.GrVkInterface::VkPtr.241" = type { void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.242" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.GrVkInterface::VkPtr.243" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.244" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.GrVkInterface::VkPtr.245" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.GrVkInterface::VkPtr.246" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.247" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkShaderModule_T = type opaque
%"class.GrVkInterface::VkPtr.248" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.249" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)* }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%"class.GrVkInterface::VkPtr.250" = type { void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.251" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)* }
%"class.GrVkInterface::VkPtr.252" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)* }
%"class.GrVkInterface::VkPtr.253" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.254" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%"class.GrVkInterface::VkPtr.255" = type { void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.256" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.257" = type { void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.258" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSampler_T = type opaque
%"class.GrVkInterface::VkPtr.259" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.260" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%"class.GrVkInterface::VkPtr.261" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.262" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorPool_T = type opaque
%"class.GrVkInterface::VkPtr.263" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.264" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.265" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorSet_T = type opaque
%"class.GrVkInterface::VkPtr.266" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.GrVkInterface::VkPtr.267" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.268" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkFramebuffer_T = type opaque
%"class.GrVkInterface::VkPtr.269" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.270" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.271" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.272" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)* }
%"class.GrVkInterface::VkPtr.273" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%"class.GrVkInterface::VkPtr.274" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.275" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.276" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%"class.GrVkInterface::VkPtr.277" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.278" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.279" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.280" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.281" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)* }
%"class.GrVkInterface::VkPtr.282" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)* }
%"class.GrVkInterface::VkPtr.283" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* }
%"class.GrVkInterface::VkPtr.284" = type { void (%struct.VkCommandBuffer_T*, float)* }
%"class.GrVkInterface::VkPtr.285" = type { void (%struct.VkCommandBuffer_T*, float, float, float)* }
%"class.GrVkInterface::VkPtr.286" = type { void (%struct.VkCommandBuffer_T*, float*)* }
%"class.GrVkInterface::VkPtr.287" = type { void (%struct.VkCommandBuffer_T*, float, float)* }
%"class.GrVkInterface::VkPtr.288" = type { void (%struct.VkCommandBuffer_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.289" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)* }
%"class.GrVkInterface::VkPtr.290" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)* }
%"class.GrVkInterface::VkPtr.291" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* }
%"class.GrVkInterface::VkPtr.292" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.293" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.294" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)* }
%"class.GrVkInterface::VkPtr.295" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.296" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)* }
%"class.GrVkInterface::VkPtr.297" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.GrVkInterface::VkPtr.298" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)* }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.299" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)* }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%"class.GrVkInterface::VkPtr.300" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.301" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)* }
%"class.GrVkInterface::VkPtr.302" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)* }
%"class.GrVkInterface::VkPtr.303" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.304" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)* }
%union.VkClearColorValue = type { [4 x float] }
%"class.GrVkInterface::VkPtr.305" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%"class.GrVkInterface::VkPtr.306" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)* }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%"class.GrVkInterface::VkPtr.307" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)* }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.308" = type { void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)* }
%"class.GrVkInterface::VkPtr.309" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%"class.GrVkInterface::VkPtr.310" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%"class.GrVkInterface::VkPtr.312" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.311" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.313" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.314" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.315" = type { void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)* }
%"class.GrVkInterface::VkPtr.316" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%"class.GrVkInterface::VkPtr.317" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.318" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.319" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.320" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.GrVkInterface::VkPtr.321" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.GrVkInterface::VkPtr.322" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.GrVkInterface::VkPtr.323" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%"class.GrVkInterface::VkPtr.324" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%"class.GrVkInterface::VkPtr.325" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.GrVkInterface::VkPtr.326" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%"class.GrVkInterface::VkPtr.327" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.GrVkInterface::VkPtr.328" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%"class.GrVkInterface::VkPtr.329" = type { void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%"class.GrVkInterface::VkPtr.330" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.331" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.332" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.333" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.334" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.335" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)* }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%struct.VkSamplerYcbcrConversion_T = type opaque
%"class.GrVkInterface::VkPtr.336" = type { void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)* }
%class.sk_sp.337 = type { %class.GrVkMemoryAllocator* }
%class.GrVkMemoryAllocator = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.338 = type { %class.GrVkCaps* }
%class.GrVkCaps = type <{ %class.GrCaps.base, i8, [22 x %"struct.GrVkCaps::FormatInfo"], [31 x i32], i32, %class.SkSTArray.346, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.1, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%"struct.GrVkCaps::FormatInfo" = type <{ i16, i16, [4 x i8], %class.SkTDArray.339, %"class.std::__1::unique_ptr.340", i32, [4 x i8] }>
%class.SkTDArray.339 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.GrVkCaps::ColorTypeInfo"* }
%"struct.GrVkCaps::ColorTypeInfo" = type { i32, i32, i32, %class.GrSwizzle, %class.GrSwizzle }
%class.GrSwizzle = type { i16 }
%class.SkSTArray.346 = type { %class.SkAlignedSTStorage.347, %class.SkTArray.348 }
%class.SkAlignedSTStorage.347 = type { [48 x i8] }
%class.SkTArray.348 = type { %struct.GrVkYcbcrConversionInfo*, i64 }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.GrVkResourceProvider = type { %class.GrVkGpu*, %struct.VkPipelineCache_T*, %class.SkTArray.349, %class.SkSTArray.351, %class.SkTArray.357, %class.SkSTArray.358, %class.SkMutex, %class.SkSTArray.358, %class.SkTDynamicHash.361, %class.SkTDynamicHash.370, %class.sk_sp.379, %class.SkSTArray.388, %class.GrResourceHandle, %class.GrResourceHandle }
%class.SkTArray.349 = type { %"struct.GrVkResourceProvider::MSAALoadPipeline"*, i64 }
%"struct.GrVkResourceProvider::MSAALoadPipeline" = type { %class.sk_sp.350, %class.GrVkRenderPass* }
%class.sk_sp.350 = type { %class.GrVkPipeline* }
%class.GrVkRenderPass = type <{ %class.GrVkManagedResource, %struct.VkRenderPass_T*, i32, %"struct.GrVkRenderPass::AttachmentsDescriptor", i32, i32, %struct.VkExtent2D, i32, i32, i32, [4 x i8] }>
%"struct.GrVkRenderPass::AttachmentsDescriptor" = type { %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", i32 }
%"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc" = type { i32, i32, %"struct.GrVkRenderPass::LoadStoreOps" }
%"struct.GrVkRenderPass::LoadStoreOps" = type { i32, i32 }
%class.SkSTArray.351 = type { %class.SkAlignedSTStorage.352, %class.SkTArray.353 }
%class.SkAlignedSTStorage.352 = type { [224 x i8] }
%class.SkTArray.353 = type { %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, i64 }
%"class.GrVkResourceProvider::CompatibleRenderPassSet" = type <{ %class.SkSTArray.354, i32, [4 x i8] }>
%class.SkSTArray.354 = type { %class.SkAlignedSTStorage.355, %class.SkTArray.356 }
%class.SkAlignedSTStorage.355 = type { [32 x i8] }
%class.SkTArray.356 = type { %class.GrVkRenderPass**, i64 }
%class.SkTArray.357 = type { %class.GrVkRenderPass**, i64 }
%class.SkSTArray.358 = type { %class.SkAlignedSTStorage.359, %class.SkTArray.360 }
%class.SkAlignedSTStorage.359 = type { [32 x i8] }
%class.SkTArray.360 = type { %class.GrVkCommandPool**, i64 }
%class.SkTDynamicHash.361 = type { %class.SkTHashTable.362 }
%class.SkTHashTable.362 = type { i32, i32, %class.SkAutoTArray.363 }
%class.SkAutoTArray.363 = type { %"class.std::__1::unique_ptr.364" }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.370 = type { %class.SkTHashTable.371 }
%class.SkTHashTable.371 = type { i32, i32, %class.SkAutoTArray.372 }
%class.SkAutoTArray.372 = type { %"class.std::__1::unique_ptr.373" }
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot" = type opaque
%class.sk_sp.379 = type { %"class.GrVkResourceProvider::PipelineStateCache"* }
%"class.GrVkResourceProvider::PipelineStateCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache, %class.GrVkGpu* }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.380, %class.SkTInternalLList }
%class.SkTHashTable.380 = type { i32, i32, %class.SkAutoTArray.381 }
%class.SkAutoTArray.381 = type { %"class.std::__1::unique_ptr.382" }
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"*, %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"* }
%"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry" = type opaque
%class.SkSTArray.388 = type { %class.SkAlignedSTStorage.389, %class.SkTArray.390 }
%class.SkAlignedSTStorage.389 = type { [32 x i8] }
%class.SkTArray.390 = type { %"class.std::__1::unique_ptr.391"*, i64 }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %class.GrVkDescriptorSetManager* }
%class.GrVkDescriptorSetManager = type { %"struct.GrVkDescriptorSetManager::DescriptorPoolManager", %class.SkTArray.394, %class.SkSTArray.395, %class.SkSTArray.398 }
%"struct.GrVkDescriptorSetManager::DescriptorPoolManager" = type { %struct.VkDescriptorSetLayout_T*, i32, i32, i32, i32, %class.GrVkDescriptorPool* }
%class.GrVkDescriptorPool = type { %class.GrVkManagedResource, i32, i32, %struct.VkDescriptorPool_T* }
%class.SkTArray.394 = type { %class.GrVkDescriptorSet**, i64 }
%class.GrVkDescriptorSet = type <{ %class.GrVkRecycledResource, %struct.VkDescriptorSet_T*, %class.GrVkDescriptorPool*, %class.GrResourceHandle, [4 x i8] }>
%class.GrVkRecycledResource = type { %class.GrRecycledResource.base, %class.GrVkGpu* }
%class.GrRecycledResource.base = type { %class.GrManagedResource.base }
%class.SkSTArray.395 = type { %class.SkAlignedSTStorage.396, %class.SkTArray.397 }
%class.SkAlignedSTStorage.396 = type { [16 x i8] }
%class.SkTArray.397 = type { i32*, i64 }
%class.SkSTArray.398 = type { %class.SkAlignedSTStorage.399, %class.SkTArray.400 }
%class.SkAlignedSTStorage.399 = type { [32 x i8] }
%class.SkTArray.400 = type { %class.GrVkSampler**, i64 }
%class.GrVkSampler = type <{ %class.GrVkManagedResource, %struct.VkSampler_T*, %class.GrVkSamplerYcbcrConversion*, %"struct.GrVkSampler::Key", i32, [4 x i8] }>
%class.GrVkSamplerYcbcrConversion = type { %class.GrVkManagedResource, %struct.VkSamplerYcbcrConversion_T*, %"struct.GrVkSamplerYcbcrConversion::Key" }
%"struct.GrVkSamplerYcbcrConversion::Key" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.GrVkSampler::Key" = type { i8, [7 x i8], %"struct.GrVkSamplerYcbcrConversion::Key" }
%class.GrResourceHandle = type { i32 }
%class.GrStagingBufferManager = type { %"class.std::__1::vector.404", %class.GrGpu* }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"*, %"class.std::__1::__compressed_pair.407" }
%"struct.GrStagingBufferManager::StagingBuffer" = type { %class.sk_sp.406, i8*, i64 }
%class.sk_sp.406 = type { %class.GrGpuBuffer* }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"struct.GrStagingBufferManager::StagingBuffer"* }
%class.GrVkMSAALoadManager = type { %struct.VkShaderModule_T*, %struct.VkShaderModule_T*, [2 x %struct.VkPipelineShaderStageCreateInfo], %struct.VkPipelineLayout_T* }
%class.GrVkCommandPool = type opaque
%class.GrVkPrimaryCommandBuffer = type { %class.GrVkCommandBuffer.base, %class.SkTArray.433, %struct.VkFence_T*, %class.SkTArray.435 }
%class.GrVkCommandBuffer.base = type <{ i32 (...)**, %class.SkSTArray.412, %class.SkSTArray.416, %class.SkSTArray.419, %class.SkSTArray.423, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.427, %class.SkSTArray.430, i8, [3 x i8], i32, i32, i8 }>
%class.SkSTArray.412 = type { %class.SkAlignedSTStorage.413, %class.SkTArray.414 }
%class.SkAlignedSTStorage.413 = type { [256 x i8] }
%class.SkTArray.414 = type { %class.sk_sp.415*, i64 }
%class.sk_sp.415 = type { %class.GrManagedResource* }
%class.GrManagedResource = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkSTArray.416 = type { %class.SkAlignedSTStorage.417, %class.SkTArray.418 }
%class.SkAlignedSTStorage.417 = type { [256 x i8] }
%class.SkTArray.418 = type { %class.gr_sp*, i64 }
%class.gr_sp = type { %class.GrRecycledResource* }
%class.GrRecycledResource = type { %class.GrManagedResource.base, [4 x i8] }
%class.SkSTArray.419 = type { %class.SkAlignedSTStorage.420, %class.SkTArray.421 }
%class.SkAlignedSTStorage.420 = type { [128 x i8] }
%class.SkTArray.421 = type { %class.sk_sp.422*, i64 }
%class.sk_sp.422 = type { %class.GrBuffer* }
%class.SkSTArray.423 = type { %class.SkAlignedSTStorage.424, %class.SkTArray.425 }
%class.SkAlignedSTStorage.424 = type { [128 x i8] }
%class.SkTArray.425 = type { %class.gr_sp.426*, i64 }
%class.gr_sp.426 = type { %class.GrSurface* }
%class.SkSTArray.427 = type { %class.SkAlignedSTStorage.428, %class.SkTArray.429 }
%class.SkAlignedSTStorage.428 = type { [56 x i8] }
%class.SkTArray.429 = type { %struct.VkBufferMemoryBarrier*, i64 }
%class.SkSTArray.430 = type { %class.SkAlignedSTStorage.431, %class.SkTArray.432 }
%class.SkAlignedSTStorage.431 = type { [144 x i8] }
%class.SkTArray.432 = type { %struct.VkImageMemoryBarrier*, i64 }
%class.SkTArray.433 = type { %"class.std::__1::unique_ptr.434"*, i64 }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %class.GrVkSecondaryCommandBuffer* }
%class.GrVkSecondaryCommandBuffer = type { %class.GrVkCommandBuffer.base, [3 x i8] }
%class.SkTArray.435 = type { %class.sk_sp.153*, i64 }
%class.SkSTArray.436 = type { %class.SkAlignedSTStorage.437, %class.SkTArray.438 }
%class.SkAlignedSTStorage.437 = type { [8 x i8] }
%class.SkTArray.438 = type { %"class.GrVkSemaphore::Resource"**, i64 }
%"class.GrVkSemaphore::Resource" = type <{ %class.GrVkManagedResource, %struct.VkSemaphore_T*, i8, i8, i8, [5 x i8] }>
%class.SkTArray.439 = type { %"class.std::__1::unique_ptr.440"*, i64 }
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.SkDrawable::GpuDrawHandler"* }
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %class.GrVkOpsRenderPass* }
%class.GrVkOpsRenderPass = type opaque
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.GrStencilSettings = type { i32, %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face" }
%"struct.GrStencilSettings::Face" = type { %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%"struct.GrXferProcessor::BlendInfo" = type <{ i32, i32, i32, %struct.SkRGBA4f, i8, [3 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%struct.VkRenderPass_T = type opaque
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipelineCache_T = type opaque
%class.SkSTArray.483 = type { %class.SkAlignedSTStorage.484, %class.SkTArray.485 }
%class.SkAlignedSTStorage.484 = type { [24 x i8] }
%class.SkTArray.485 = type { %struct.VkVertexInputBindingDescription*, i64 }
%class.SkSTArray.486 = type { %class.SkAlignedSTStorage.487, %class.SkTArray.488 }
%class.SkAlignedSTStorage.487 = type { [256 x i8] }
%class.SkTArray.488 = type { %struct.VkVertexInputAttributeDescription*, i64 }
%struct.VkPipelineSampleLocationsStateCreateInfoEXT = type { i32, i8*, i32, %struct.VkSampleLocationsInfoEXT }
%struct.VkSampleLocationsInfoEXT = type { i32, i8*, i32, %struct.VkExtent2D, i32, %struct.VkSampleLocationEXT* }
%struct.VkPipelineRasterizationConservativeStateCreateInfoEXT = type { i32, i8*, i32, i32, float }
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%class.SkEventTracer = type { i32 (...)** }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.494, i32, [4 x i8] }
%union.anon.494 = type { %struct.anon.495 }
%struct.anon.495 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.507, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.497, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.497 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.498, %class.sk_sp.499, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.501" }
%class.SkNVRefCnt.498 = type { %"struct.std::__1::atomic" }
%class.sk_sp.499 = type { %class.GrSurface* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.499, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.501" = type { %"struct.std::__1::__atomic_base.502" }
%"struct.std::__1::__atomic_base.502" = type { %"struct.std::__1::__atomic_base.503" }
%"struct.std::__1::__atomic_base.503" = type { %"struct.std::__1::__cxx_atomic_impl.504" }
%"struct.std::__1::__cxx_atomic_impl.504" = type { %"struct.std::__1::__cxx_atomic_base_impl.505" }
%"struct.std::__1::__cxx_atomic_base_impl.505" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.506 }
%union.anon.506 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.507 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.508, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.508 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.509"*, [24 x i8] }
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.512, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.512 = type { %class.SkAlignedSTStorage.513, %class.SkTArray.514 }
%class.SkAlignedSTStorage.513 = type { [8 x i8] }
%class.SkTArray.514 = type { %"class.std::__1::unique_ptr.515"*, i64 }
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings.524, [2 x i16], %struct.GrTStencilFaceSettings.524 }
%struct.GrTStencilFaceSettings.524 = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.525, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.525 = type { i32 }
%class.GrVkCommandBuffer = type <{ i32 (...)**, %class.SkSTArray.412, %class.SkSTArray.416, %class.SkSTArray.419, %class.SkSTArray.423, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.427, %class.SkSTArray.430, i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"struct.std::__1::array" = type { [4 x float] }

$_ZN12GrVkPipelineD0Ev = comdat any

$_ZNK17GrManagedResource24notifyQueuedForWorkOnGpuEv = comdat any

$_ZNK17GrManagedResource27notifyFinishedWithWorkOnGpuEv = comdat any

$_ZN8SkTArrayI31VkVertexInputBindingDescriptionLb1EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN17GrManagedResourceD2Ev = comdat any

$_ZNK9GrSwizzle7applyToENSt3__15arrayIfLm4EEE = comdat any

$_ZN8SkTArrayI33VkVertexInputAttributeDescriptionLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

@__const._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.colorBlendInfo = private unnamed_addr constant { i32, [4 x i8], i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %struct.VkPipelineColorBlendAttachmentState* inttoptr (i64 -6148914691236517206 to %struct.VkPipelineColorBlendAttachmentState*), [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, align 8
@__const._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.conservativeRasterInfo = private unnamed_addr constant { i32, [4 x i8], i8*, i32, i32, float, [4 x i8] } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }, align 8
@.str = private unnamed_addr constant [33 x i8] c"disabled-by-default-skia.shaders\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"CreateGraphicsPipeline\00", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"../../third_party/skia/src/gpu/vk/GrVkPipeline.cpp\00", align 1
@.str.3 = private unnamed_addr constant [123 x i8] c"Failed vulkan call. Error: %d,CreateGraphicsPipelines(gpu->device(), cache, 1, &pipelineCreateInfo, nullptr, &vkPipeline)\0A\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"Failed to create pipeline. Error: %d\0A\00", align 1
@_ZTV12GrVkPipeline = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrManagedResource*)* @_ZN17GrManagedResourceD2Ev to i8*), i8* bitcast (void (%class.GrVkPipeline*)* @_ZN12GrVkPipelineD0Ev to i8*), i8* bitcast (void (%class.GrManagedResource*)* @_ZNK17GrManagedResource24notifyQueuedForWorkOnGpuEv to i8*), i8* bitcast (void (%class.GrManagedResource*)* @_ZNK17GrManagedResource27notifyFinishedWithWorkOnGpuEv to i8*), i8* bitcast (void (%class.GrVkPipeline*)* @_ZNK12GrVkPipeline11freeGPUDataEv to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [27 x i8] c"Unknown vertex attrib type\00", align 1
@.str.6 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrGeometryProcessor.h\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"Unsupported type conversion\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"Unsupported primitive type\00", align 1
@_ZZL27stencil_op_to_vk_stencil_op11GrStencilOpE6gTable = internal unnamed_addr constant [8 x i32] [i32 0, i32 1, i32 2, i32 5, i32 6, i32 7, i32 3, i32 4], align 16
@_ZZL29stencil_func_to_vk_compare_op13GrStencilTestE6gTable = internal unnamed_addr constant [8 x i32] [i32 7, i32 0, i32 4, i32 6, i32 1, i32 3, i32 2, i32 5], align 16
@_ZZL42setup_all_sample_locations_at_pixel_centeriP43VkPipelineSampleLocationsStateCreateInfoEXTE24kCenteredSampleLocations = internal constant [16 x %struct.VkSampleLocationEXT] [%struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }, %struct.VkSampleLocationEXT { float 5.000000e-01, float 5.000000e-01 }], align 16
@_ZZL29blend_equation_to_vk_blend_op15GrBlendEquationE6gTable = internal unnamed_addr constant [19 x i32] [i32 0, i32 1, i32 2, i32 1000148013, i32 1000148014, i32 1000148015, i32 1000148016, i32 1000148017, i32 1000148018, i32 1000148019, i32 1000148020, i32 1000148021, i32 1000148022, i32 1000148012, i32 1000148031, i32 1000148032, i32 1000148033, i32 1000148034, i32 0], align 16
@_ZZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_TE28trace_event_unique_atomic587.0.0 = internal unnamed_addr global i64 0, align 8
@switch.table._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.9 = private unnamed_addr constant [26 x i32] [i32 100, i32 103, i32 106, i32 109, i32 76, i32 83, i32 97, i32 102, i32 105, i32 108, i32 14, i32 21, i32 42, i32 13, i32 20, i32 41, i32 9, i32 37, i32 82, i32 96, i32 81, i32 77, i32 99, i32 98, i32 70, i32 91], align 4
@switch.table._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.13 = private unnamed_addr constant [26 x i64] [i64 4, i64 8, i64 12, i64 16, i64 4, i64 4, i64 8, i64 8, i64 12, i64 16, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 8, i64 4, i64 4, i64 4, i64 4, i64 4, i64 8], align 8
@switch.table._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.15 = private unnamed_addr constant [17 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 15, i32 16, i32 17, i32 18, i32 0], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T(%class.sk_sp.482* noalias nocapture sret, %class.GrVkGpu*, %"class.GrGeometryProcessor::AttributeSet"* nocapture readonly dereferenceable(24), %"class.GrGeometryProcessor::AttributeSet"* nocapture readonly dereferenceable(24), i8 zeroext, i32, %class.GrStencilSettings* nocapture readonly dereferenceable(24), i32, i1 zeroext, %"struct.GrXferProcessor::BlendInfo"* nocapture readonly dereferenceable(32), i1 zeroext, i1 zeroext, i32, %struct.VkPipelineShaderStageCreateInfo*, i32, %struct.VkRenderPass_T*, %struct.VkPipelineLayout_T*, i1 zeroext, %struct.VkPipelineCache_T*) local_unnamed_addr #0 align 2 {
  %20 = alloca %struct.VkPipelineVertexInputStateCreateInfo, align 8
  %21 = alloca %class.SkSTArray.483, align 8
  %22 = alloca %class.SkSTArray.486, align 8
  %23 = alloca %struct.VkPipelineInputAssemblyStateCreateInfo, align 8
  %24 = alloca %struct.VkPipelineDepthStencilStateCreateInfo, align 8
  %25 = alloca %struct.VkPipelineViewportStateCreateInfo, align 8
  %26 = alloca %struct.VkPipelineMultisampleStateCreateInfo, align 8
  %27 = alloca %struct.VkPipelineSampleLocationsStateCreateInfoEXT, align 8
  %28 = alloca [1 x %struct.VkPipelineColorBlendAttachmentState], align 16
  %29 = alloca %struct.VkPipelineColorBlendStateCreateInfo, align 8
  %30 = alloca %struct.VkPipelineRasterizationStateCreateInfo, align 8
  %31 = alloca %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT, align 8
  %32 = alloca [3 x i32], align 4
  %33 = alloca %struct.VkPipelineDynamicStateCreateInfo, align 8
  %34 = alloca %struct.VkGraphicsPipelineCreateInfo, align 8
  %35 = alloca %struct.VkPipeline_T*, align 8
  %36 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %37 = bitcast %struct.VkPipelineVertexInputStateCreateInfo* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  %38 = getelementptr inbounds %class.SkSTArray.483, %class.SkSTArray.483* %21, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  %39 = getelementptr inbounds %class.SkSTArray.483, %class.SkSTArray.483* %21, i64 0, i32 0, i32 0, i64 24
  %40 = getelementptr inbounds %class.SkSTArray.483, %class.SkSTArray.483* %21, i64 0, i32 0, i32 0, i64 32
  %41 = bitcast i8* %40 to i64*
  %42 = bitcast i8* %39 to i8**
  store i8* %38, i8** %42, align 8
  store i64 17179869184, i64* %41, align 8
  %43 = getelementptr inbounds %class.SkSTArray.486, %class.SkSTArray.486* %22, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %43) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 256, i1 false)
  %44 = getelementptr inbounds %class.SkSTArray.486, %class.SkSTArray.486* %22, i64 0, i32 0, i32 0, i64 256
  %45 = getelementptr inbounds %class.SkSTArray.486, %class.SkSTArray.486* %22, i64 0, i32 0, i32 0, i64 264
  %46 = bitcast i8* %45 to i64*
  %47 = bitcast i8* %44 to i8**
  store i8* %43, i8** %47, align 8
  store i64 137438953472, i64* %46, align 8
  %48 = getelementptr inbounds %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet"* %2, i64 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet"* %3, i64 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = add nsw i32 %51, %49
  %53 = bitcast i8* %44 to %class.SkTArray.488*
  call void @_ZN8SkTArrayI33VkVertexInputAttributeDescriptionLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.488* %53, i32 %52, i32 1) #9
  %54 = bitcast i8* %44 to %struct.VkVertexInputAttributeDescription**
  %55 = load %struct.VkVertexInputAttributeDescription*, %struct.VkVertexInputAttributeDescription** %54, align 8
  %56 = load i64, i64* %46, align 8
  %57 = lshr i64 %56, 1
  %58 = trunc i64 %57 to i32
  %59 = and i64 %57, 2147483647
  %60 = add i32 %52, %58
  %61 = shl i32 %60, 1
  %62 = zext i32 %61 to i64
  %63 = and i64 %56, -4294967295
  %64 = or i64 %63, %62
  store i64 %64, i64* %46, align 8
  %65 = getelementptr inbounds %struct.VkVertexInputAttributeDescription, %struct.VkVertexInputAttributeDescription* %55, i64 %59
  %66 = load i32, i32* %48, align 4
  %67 = load i32, i32* %50, align 4
  %68 = bitcast i8* %39 to %class.SkTArray.485*
  %69 = load i64, i64* %41, align 8
  %70 = lshr i64 %69, 1
  %71 = trunc i64 %70 to i32
  %72 = and i32 %71, 2147483647
  %73 = icmp ne i32 %66, 0
  %74 = zext i1 %73 to i32
  %75 = add nuw nsw i32 %72, %74
  %76 = select i1 %73, i32 %72, i32 0
  %77 = icmp ne i32 %67, 0
  %78 = select i1 %77, i32 %75, i32 0
  %79 = getelementptr inbounds %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet"* %2, i64 0, i32 0
  %80 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %79, align 8, !noalias !2
  %81 = icmp eq i32 %66, 0
  br i1 %81, label %99, label %82

82:                                               ; preds = %19
  %83 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %80, i64 0, i32 2
  %84 = load i32, i32* %83, align 4, !noalias !2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %82, %86
  %87 = phi %"class.GrGeometryProcessor::Attribute"* [ %88, %86 ], [ %80, %82 ]
  %88 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %87, i64 1
  %89 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %87, i64 1, i32 2
  %90 = load i32, i32* %89, align 4, !noalias !2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %86, label %92

92:                                               ; preds = %86, %82
  %93 = phi %"class.GrGeometryProcessor::Attribute"* [ %80, %82 ], [ %88, %86 ]
  %94 = icmp eq %"class.GrGeometryProcessor::Attribute"* %93, null
  br i1 %94, label %99, label %119

95:                                               ; preds = %162, %148
  %96 = load i32, i32* %50, align 4, !noalias !5
  %97 = and i64 %124, 4294967295
  %98 = trunc i64 %146 to i32
  br label %99

99:                                               ; preds = %95, %92, %19
  %100 = phi i32 [ %67, %92 ], [ %96, %95 ], [ %67, %19 ]
  %101 = phi i32 [ 0, %92 ], [ %98, %95 ], [ 0, %19 ]
  %102 = phi i64 [ 0, %92 ], [ %97, %95 ], [ 0, %19 ]
  %103 = getelementptr inbounds %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet"* %3, i64 0, i32 0
  %104 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %103, align 8, !noalias !5
  %105 = icmp eq i32 %100, 0
  br i1 %105, label %168, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %104, i64 0, i32 2
  %108 = load i32, i32* %107, align 4, !noalias !5
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %116

110:                                              ; preds = %106, %110
  %111 = phi %"class.GrGeometryProcessor::Attribute"* [ %112, %110 ], [ %104, %106 ]
  %112 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %111, i64 1
  %113 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %111, i64 1, i32 2
  %114 = load i32, i32* %113, align 4, !noalias !5
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %110, label %116

116:                                              ; preds = %110, %106
  %117 = phi %"class.GrGeometryProcessor::Attribute"* [ %104, %106 ], [ %112, %110 ]
  %118 = icmp eq %"class.GrGeometryProcessor::Attribute"* %117, null
  br i1 %118, label %168, label %170

119:                                              ; preds = %92, %162
  %120 = phi i64 [ %124, %162 ], [ 0, %92 ]
  %121 = phi i64 [ %146, %162 ], [ 0, %92 ]
  %122 = phi i32 [ %164, %162 ], [ %66, %92 ]
  %123 = phi %"class.GrGeometryProcessor::Attribute"* [ %163, %162 ], [ %93, %92 ]
  %124 = add nuw i64 %120, 1
  %125 = getelementptr inbounds %struct.VkVertexInputAttributeDescription, %struct.VkVertexInputAttributeDescription* %65, i64 %120, i32 0
  %126 = trunc i64 %120 to i32
  store i32 %126, i32* %125, align 4
  %127 = getelementptr inbounds %struct.VkVertexInputAttributeDescription, %struct.VkVertexInputAttributeDescription* %65, i64 %120, i32 1
  store i32 %76, i32* %127, align 4
  %128 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %123, i64 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = icmp ult i32 %129, 26
  br i1 %130, label %132, label %131

131:                                              ; preds = %119
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 78, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #10
  unreachable

132:                                              ; preds = %119
  %133 = sext i32 %129 to i64
  %134 = getelementptr inbounds [26 x i32], [26 x i32]* @switch.table._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.9, i64 0, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %struct.VkVertexInputAttributeDescription, %struct.VkVertexInputAttributeDescription* %65, i64 %120, i32 2
  store i32 %135, i32* %136, align 4
  %137 = trunc i64 %121 to i32
  %138 = getelementptr inbounds %struct.VkVertexInputAttributeDescription, %struct.VkVertexInputAttributeDescription* %65, i64 %120, i32 3
  store i32 %137, i32* %138, align 4
  %139 = load i32, i32* %128, align 8
  %140 = icmp ult i32 %139, 26
  br i1 %140, label %142, label %141

141:                                              ; preds = %132
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 373, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0)) #10
  unreachable

142:                                              ; preds = %132
  %143 = sext i32 %139 to i64
  %144 = getelementptr inbounds [26 x i64], [26 x i64]* @switch.table._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.13, i64 0, i64 %143
  %145 = load i64, i64* %144, align 8
  %146 = add i64 %145, %121
  %147 = icmp eq i32 %122, 0
  br i1 %147, label %162, label %148

148:                                              ; preds = %142
  %149 = add nsw i32 %122, -1
  %150 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %123, i64 1
  %151 = icmp eq i32 %149, 0
  br i1 %151, label %95, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %123, i64 1, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %162

156:                                              ; preds = %152, %156
  %157 = phi %"class.GrGeometryProcessor::Attribute"* [ %158, %156 ], [ %150, %152 ]
  %158 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %157, i64 1
  %159 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %157, i64 1, i32 2
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %156, label %162

162:                                              ; preds = %156, %152, %142
  %163 = phi %"class.GrGeometryProcessor::Attribute"* [ %123, %142 ], [ %150, %152 ], [ %158, %156 ]
  %164 = phi i32 [ 0, %142 ], [ %149, %152 ], [ %149, %156 ]
  %165 = icmp eq %"class.GrGeometryProcessor::Attribute"* %163, null
  br i1 %165, label %95, label %119

166:                                              ; preds = %213, %199
  %167 = trunc i64 %197 to i32
  br label %168

168:                                              ; preds = %166, %116, %99
  %169 = phi i32 [ 0, %116 ], [ %167, %166 ], [ 0, %99 ]
  br i1 %73, label %217, label %230

170:                                              ; preds = %116, %213
  %171 = phi i64 [ %175, %213 ], [ %102, %116 ]
  %172 = phi i64 [ %197, %213 ], [ 0, %116 ]
  %173 = phi i32 [ %215, %213 ], [ %100, %116 ]
  %174 = phi %"class.GrGeometryProcessor::Attribute"* [ %214, %213 ], [ %117, %116 ]
  %175 = add nuw i64 %171, 1
  %176 = getelementptr inbounds %struct.VkVertexInputAttributeDescription, %struct.VkVertexInputAttributeDescription* %65, i64 %171, i32 0
  %177 = trunc i64 %171 to i32
  store i32 %177, i32* %176, align 4
  %178 = getelementptr inbounds %struct.VkVertexInputAttributeDescription, %struct.VkVertexInputAttributeDescription* %65, i64 %171, i32 1
  store i32 %78, i32* %178, align 4
  %179 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %174, i64 0, i32 1
  %180 = load i32, i32* %179, align 8
  %181 = icmp ult i32 %180, 26
  br i1 %181, label %183, label %182

182:                                              ; preds = %170
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 78, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #10
  unreachable

183:                                              ; preds = %170
  %184 = sext i32 %180 to i64
  %185 = getelementptr inbounds [26 x i32], [26 x i32]* @switch.table._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.9, i64 0, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = getelementptr inbounds %struct.VkVertexInputAttributeDescription, %struct.VkVertexInputAttributeDescription* %65, i64 %171, i32 2
  store i32 %186, i32* %187, align 4
  %188 = trunc i64 %172 to i32
  %189 = getelementptr inbounds %struct.VkVertexInputAttributeDescription, %struct.VkVertexInputAttributeDescription* %65, i64 %171, i32 3
  store i32 %188, i32* %189, align 4
  %190 = load i32, i32* %179, align 8
  %191 = icmp ult i32 %190, 26
  br i1 %191, label %193, label %192

192:                                              ; preds = %183
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 373, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0)) #10
  unreachable

193:                                              ; preds = %183
  %194 = sext i32 %190 to i64
  %195 = getelementptr inbounds [26 x i64], [26 x i64]* @switch.table._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.13, i64 0, i64 %194
  %196 = load i64, i64* %195, align 8
  %197 = add i64 %196, %172
  %198 = icmp eq i32 %173, 0
  br i1 %198, label %213, label %199

199:                                              ; preds = %193
  %200 = add nsw i32 %173, -1
  %201 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %174, i64 1
  %202 = icmp eq i32 %200, 0
  br i1 %202, label %166, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %174, i64 1, i32 2
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %213

207:                                              ; preds = %203, %207
  %208 = phi %"class.GrGeometryProcessor::Attribute"* [ %209, %207 ], [ %201, %203 ]
  %209 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %208, i64 1
  %210 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %208, i64 1, i32 2
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %207, label %213

213:                                              ; preds = %207, %203, %193
  %214 = phi %"class.GrGeometryProcessor::Attribute"* [ %174, %193 ], [ %201, %203 ], [ %209, %207 ]
  %215 = phi i32 [ 0, %193 ], [ %200, %203 ], [ %200, %207 ]
  %216 = icmp eq %"class.GrGeometryProcessor::Attribute"* %214, null
  br i1 %216, label %166, label %170

217:                                              ; preds = %168
  call void @_ZN8SkTArrayI31VkVertexInputBindingDescriptionLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.485* %68, i32 1, i32 1) #9
  %218 = bitcast i8* %39 to %struct.VkVertexInputBindingDescription**
  %219 = load %struct.VkVertexInputBindingDescription*, %struct.VkVertexInputBindingDescription** %218, align 8
  %220 = load i64, i64* %41, align 8
  %221 = lshr i64 %220, 1
  %222 = and i64 %221, 2147483647
  %223 = add i64 %220, 2
  %224 = and i64 %223, 4294967294
  %225 = and i64 %220, -4294967295
  %226 = or i64 %224, %225
  store i64 %226, i64* %41, align 8
  %227 = getelementptr inbounds %struct.VkVertexInputBindingDescription, %struct.VkVertexInputBindingDescription* %219, i64 %222, i32 0
  store i32 %76, i32* %227, align 4
  %228 = getelementptr inbounds %struct.VkVertexInputBindingDescription, %struct.VkVertexInputBindingDescription* %219, i64 %222, i32 1
  store i32 %101, i32* %228, align 4
  %229 = getelementptr inbounds %struct.VkVertexInputBindingDescription, %struct.VkVertexInputBindingDescription* %219, i64 %222, i32 2
  store i32 0, i32* %229, align 4
  br label %230

230:                                              ; preds = %217, %168
  br i1 %77, label %231, label %244

231:                                              ; preds = %230
  call void @_ZN8SkTArrayI31VkVertexInputBindingDescriptionLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.485* %68, i32 1, i32 1) #9
  %232 = bitcast i8* %39 to %struct.VkVertexInputBindingDescription**
  %233 = load %struct.VkVertexInputBindingDescription*, %struct.VkVertexInputBindingDescription** %232, align 8
  %234 = load i64, i64* %41, align 8
  %235 = lshr i64 %234, 1
  %236 = and i64 %235, 2147483647
  %237 = add i64 %234, 2
  %238 = and i64 %237, 4294967294
  %239 = and i64 %234, -4294967295
  %240 = or i64 %238, %239
  store i64 %240, i64* %41, align 8
  %241 = getelementptr inbounds %struct.VkVertexInputBindingDescription, %struct.VkVertexInputBindingDescription* %233, i64 %236, i32 0
  store i32 %78, i32* %241, align 4
  %242 = getelementptr inbounds %struct.VkVertexInputBindingDescription, %struct.VkVertexInputBindingDescription* %233, i64 %236, i32 1
  store i32 %169, i32* %242, align 4
  %243 = getelementptr inbounds %struct.VkVertexInputBindingDescription, %struct.VkVertexInputBindingDescription* %233, i64 %236, i32 2
  store i32 1, i32* %243, align 4
  br label %244

244:                                              ; preds = %230, %231
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 40, i1 false) #9
  %245 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %20, i64 0, i32 0
  store i32 19, i32* %245, align 8
  %246 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %20, i64 0, i32 1
  store i8* null, i8** %246, align 8
  %247 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %20, i64 0, i32 2
  store i32 0, i32* %247, align 8
  %248 = load i64, i64* %41, align 8
  %249 = lshr i64 %248, 1
  %250 = trunc i64 %249 to i32
  %251 = and i32 %250, 2147483647
  %252 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %20, i64 0, i32 3
  store i32 %251, i32* %252, align 4
  %253 = bitcast i8* %39 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %20, i64 0, i32 4
  %256 = bitcast %struct.VkVertexInputBindingDescription** %255 to i64*
  store i64 %254, i64* %256, align 8
  %257 = add nsw i32 %67, %66
  %258 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %20, i64 0, i32 5
  store i32 %257, i32* %258, align 8
  %259 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %20, i64 0, i32 6
  store %struct.VkVertexInputAttributeDescription* %65, %struct.VkVertexInputAttributeDescription** %259, align 8
  %260 = bitcast %struct.VkPipelineInputAssemblyStateCreateInfo* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %260) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %260, i8 0, i64 32, i1 false) #9
  %261 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %23, i64 0, i32 0
  store i32 20, i32* %261, align 8
  %262 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %23, i64 0, i32 1
  store i8* null, i8** %262, align 8
  %263 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %23, i64 0, i32 2
  store i32 0, i32* %263, align 8
  %264 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %23, i64 0, i32 4
  store i32 0, i32* %264, align 8
  switch i8 %4, label %270 [
    i8 0, label %271
    i8 1, label %265
    i8 2, label %266
    i8 3, label %267
    i8 4, label %268
    i8 5, label %269
    i8 6, label %269
  ]

265:                                              ; preds = %244
  br label %271

266:                                              ; preds = %244
  br label %271

267:                                              ; preds = %244
  br label %271

268:                                              ; preds = %244
  br label %271

269:                                              ; preds = %244, %244
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 164, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #10
  unreachable

270:                                              ; preds = %244
  call void @llvm.trap() #9
  unreachable

271:                                              ; preds = %244, %265, %266, %267, %268
  %272 = phi i32 [ 2, %268 ], [ 1, %267 ], [ 0, %266 ], [ 4, %265 ], [ 3, %244 ]
  %273 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %23, i64 0, i32 3
  store i32 %272, i32* %273, align 4
  %274 = bitcast %struct.VkPipelineDepthStencilStateCreateInfo* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %274) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %274, i8 0, i64 104, i1 false) #9
  %275 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 0
  store i32 25, i32* %275, align 8
  %276 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 1
  %277 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 5
  %278 = bitcast i8** %276 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %278, i8 0, i64 20, i1 false) #9
  store i32 7, i32* %277, align 4
  %279 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 6
  store i32 0, i32* %279, align 8
  %280 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %6, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = and i32 %281, 1
  %283 = xor i32 %282, 1
  %284 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 7
  store i32 %283, i32* %284, align 4
  %285 = icmp eq i32 %282, 0
  br i1 %285, label %286, label %393

286:                                              ; preds = %271
  %287 = and i32 %281, 16
  %288 = icmp eq i32 %287, 0
  %289 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 8
  br i1 %288, label %325, label %290

290:                                              ; preds = %286
  %291 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %6, i64 0, i32 1, i32 0, i32 4
  %292 = load i8, i8* %291, align 1
  %293 = zext i8 %292 to i64
  %294 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZL27stencil_op_to_vk_stencil_op11GrStencilOpE6gTable, i64 0, i64 %293
  %295 = load i32, i32* %294, align 4
  %296 = getelementptr inbounds %struct.VkStencilOpState, %struct.VkStencilOpState* %289, i64 0, i32 0
  store i32 %295, i32* %296, align 8
  %297 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %6, i64 0, i32 1, i32 0, i32 3
  %298 = load i8, i8* %297, align 2
  %299 = zext i8 %298 to i64
  %300 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZL27stencil_op_to_vk_stencil_op11GrStencilOpE6gTable, i64 0, i64 %299
  %301 = load i32, i32* %300, align 4
  %302 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 8, i32 1
  store i32 %301, i32* %302, align 4
  %303 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 8, i32 2
  store i32 %295, i32* %303, align 8
  %304 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %6, i64 0, i32 1, i32 0, i32 1
  %305 = load i16, i16* %304, align 2
  %306 = zext i16 %305 to i64
  %307 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZL29stencil_func_to_vk_compare_op13GrStencilTestE6gTable, i64 0, i64 %306
  %308 = load i32, i32* %307, align 4
  %309 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 8, i32 3
  store i32 %308, i32* %309, align 4
  %310 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %6, i64 0, i32 1, i32 0, i32 2
  %311 = load i16, i16* %310, align 2
  %312 = zext i16 %311 to i32
  %313 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 8, i32 4
  store i32 %312, i32* %313, align 8
  %314 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %6, i64 0, i32 1, i32 0, i32 5
  %315 = load i16, i16* %314, align 2
  %316 = zext i16 %315 to i32
  %317 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 8, i32 5
  store i32 %316, i32* %317, align 4
  %318 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %6, i64 0, i32 1, i32 0, i32 0
  %319 = load i16, i16* %318, align 2
  %320 = zext i16 %319 to i32
  %321 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 8, i32 6
  store i32 %320, i32* %321, align 8
  %322 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 9
  %323 = bitcast %struct.VkStencilOpState* %322 to i8*
  %324 = bitcast %struct.VkStencilOpState* %289 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %323, i8* align 8 %324, i64 28, i1 false) #9
  br label %393

325:                                              ; preds = %286
  %326 = icmp eq i32 %5, 0
  %327 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %6, i64 0, i32 2
  %328 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %6, i64 0, i32 1
  %329 = select i1 %326, %"struct.GrStencilSettings::Face"* %327, %"struct.GrStencilSettings::Face"* %328
  %330 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %329, i64 0, i32 0, i32 4
  %331 = load i8, i8* %330, align 1
  %332 = zext i8 %331 to i64
  %333 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZL27stencil_op_to_vk_stencil_op11GrStencilOpE6gTable, i64 0, i64 %332
  %334 = load i32, i32* %333, align 4
  %335 = getelementptr inbounds %struct.VkStencilOpState, %struct.VkStencilOpState* %289, i64 0, i32 0
  store i32 %334, i32* %335, align 8
  %336 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %329, i64 0, i32 0, i32 3
  %337 = load i8, i8* %336, align 2
  %338 = zext i8 %337 to i64
  %339 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZL27stencil_op_to_vk_stencil_op11GrStencilOpE6gTable, i64 0, i64 %338
  %340 = load i32, i32* %339, align 4
  %341 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 8, i32 1
  store i32 %340, i32* %341, align 4
  %342 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 8, i32 2
  store i32 %334, i32* %342, align 8
  %343 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %329, i64 0, i32 0, i32 1
  %344 = load i16, i16* %343, align 2
  %345 = zext i16 %344 to i64
  %346 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZL29stencil_func_to_vk_compare_op13GrStencilTestE6gTable, i64 0, i64 %345
  %347 = load i32, i32* %346, align 4
  %348 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 8, i32 3
  store i32 %347, i32* %348, align 4
  %349 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %329, i64 0, i32 0, i32 2
  %350 = load i16, i16* %349, align 2
  %351 = zext i16 %350 to i32
  %352 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 8, i32 4
  store i32 %351, i32* %352, align 8
  %353 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %329, i64 0, i32 0, i32 5
  %354 = load i16, i16* %353, align 2
  %355 = zext i16 %354 to i32
  %356 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 8, i32 5
  store i32 %355, i32* %356, align 4
  %357 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %329, i64 0, i32 0, i32 0
  %358 = load i16, i16* %357, align 2
  %359 = zext i16 %358 to i32
  %360 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 8, i32 6
  store i32 %359, i32* %360, align 8
  %361 = select i1 %326, %"struct.GrStencilSettings::Face"* %328, %"struct.GrStencilSettings::Face"* %327
  %362 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %361, i64 0, i32 0, i32 4
  %363 = load i8, i8* %362, align 1
  %364 = zext i8 %363 to i64
  %365 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZL27stencil_op_to_vk_stencil_op11GrStencilOpE6gTable, i64 0, i64 %364
  %366 = load i32, i32* %365, align 4
  %367 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 9, i32 0
  store i32 %366, i32* %367, align 4
  %368 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %361, i64 0, i32 0, i32 3
  %369 = load i8, i8* %368, align 2
  %370 = zext i8 %369 to i64
  %371 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZL27stencil_op_to_vk_stencil_op11GrStencilOpE6gTable, i64 0, i64 %370
  %372 = load i32, i32* %371, align 4
  %373 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 9, i32 1
  store i32 %372, i32* %373, align 4
  %374 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 9, i32 2
  store i32 %366, i32* %374, align 4
  %375 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %361, i64 0, i32 0, i32 1
  %376 = load i16, i16* %375, align 2
  %377 = zext i16 %376 to i64
  %378 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZL29stencil_func_to_vk_compare_op13GrStencilTestE6gTable, i64 0, i64 %377
  %379 = load i32, i32* %378, align 4
  %380 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 9, i32 3
  store i32 %379, i32* %380, align 4
  %381 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %361, i64 0, i32 0, i32 2
  %382 = load i16, i16* %381, align 2
  %383 = zext i16 %382 to i32
  %384 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 9, i32 4
  store i32 %383, i32* %384, align 4
  %385 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %361, i64 0, i32 0, i32 5
  %386 = load i16, i16* %385, align 2
  %387 = zext i16 %386 to i32
  %388 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 9, i32 5
  store i32 %387, i32* %388, align 4
  %389 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %361, i64 0, i32 0, i32 0
  %390 = load i16, i16* %389, align 2
  %391 = zext i16 %390 to i32
  %392 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 9, i32 6
  store i32 %391, i32* %392, align 4
  br label %393

393:                                              ; preds = %271, %290, %325
  %394 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 10
  store float 0.000000e+00, float* %394, align 8
  %395 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %24, i64 0, i32 11
  store float 1.000000e+00, float* %395, align 4
  %396 = bitcast %struct.VkPipelineViewportStateCreateInfo* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %396) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %396, i8 0, i64 40, i1 false) #9
  %397 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %25, i64 0, i32 0
  store i32 22, i32* %397, align 8
  %398 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %25, i64 0, i32 1
  store i8* null, i8** %398, align 8
  %399 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %25, i64 0, i32 2
  store i32 0, i32* %399, align 8
  %400 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %25, i64 0, i32 3
  store i32 1, i32* %400, align 4
  %401 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %25, i64 0, i32 4
  store %struct.VkViewport* null, %struct.VkViewport** %401, align 8
  %402 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %25, i64 0, i32 5
  store i32 1, i32* %402, align 8
  %403 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %25, i64 0, i32 6
  store %struct.VkRect2D* null, %struct.VkRect2D** %403, align 8
  %404 = bitcast %struct.VkPipelineMultisampleStateCreateInfo* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %404) #9
  %405 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %404, i8 0, i64 48, i1 false) #9
  %406 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %26, i64 0, i32 0
  store i32 24, i32* %406, align 8
  %407 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %26, i64 0, i32 1
  store i8* null, i8** %407, align 8
  %408 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %26, i64 0, i32 2
  store i32 0, i32* %408, align 8
  %409 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %26, i64 0, i32 3
  %410 = call zeroext i1 @_Z28GrSampleCountToVkSampleCountjP21VkSampleCountFlagBits(i32 %7, i32* %409) #9
  %411 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %26, i64 0, i32 4
  %412 = bitcast i32* %411 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %412, i8 0, i64 24, i1 false) #9
  %413 = bitcast %struct.VkPipelineSampleLocationsStateCreateInfoEXT* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %413) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %413, i8 -86, i64 64, i1 false)
  %414 = load %class.GrCaps*, %class.GrCaps** %405, align 8
  %415 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %414, i64 0, i32 3
  %416 = bitcast i48* %415 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = and i64 %417, 256
  %419 = icmp eq i64 %418, 0
  %420 = icmp slt i32 %7, 2
  %421 = or i1 %420, %419
  %422 = or i1 %421, %8
  br i1 %422, label %441, label %423

423:                                              ; preds = %393
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %413, i8 0, i64 64, i1 false) #9
  %424 = getelementptr inbounds %struct.VkPipelineSampleLocationsStateCreateInfoEXT, %struct.VkPipelineSampleLocationsStateCreateInfoEXT* %27, i64 0, i32 0
  store i32 1000143002, i32* %424, align 8
  %425 = getelementptr inbounds %struct.VkPipelineSampleLocationsStateCreateInfoEXT, %struct.VkPipelineSampleLocationsStateCreateInfoEXT* %27, i64 0, i32 1
  store i8* null, i8** %425, align 8
  %426 = getelementptr inbounds %struct.VkPipelineSampleLocationsStateCreateInfoEXT, %struct.VkPipelineSampleLocationsStateCreateInfoEXT* %27, i64 0, i32 2
  store i32 1, i32* %426, align 8
  %427 = getelementptr inbounds %struct.VkPipelineSampleLocationsStateCreateInfoEXT, %struct.VkPipelineSampleLocationsStateCreateInfoEXT* %27, i64 0, i32 3, i32 0
  store i32 1000143000, i32* %427, align 8
  %428 = getelementptr inbounds %struct.VkPipelineSampleLocationsStateCreateInfoEXT, %struct.VkPipelineSampleLocationsStateCreateInfoEXT* %27, i64 0, i32 3, i32 1
  store i8* null, i8** %428, align 8
  %429 = getelementptr inbounds %struct.VkPipelineSampleLocationsStateCreateInfoEXT, %struct.VkPipelineSampleLocationsStateCreateInfoEXT* %27, i64 0, i32 3, i32 2
  %430 = call zeroext i1 @_Z28GrSampleCountToVkSampleCountjP21VkSampleCountFlagBits(i32 %7, i32* %429) #9
  %431 = getelementptr inbounds %struct.VkPipelineSampleLocationsStateCreateInfoEXT, %struct.VkPipelineSampleLocationsStateCreateInfoEXT* %27, i64 0, i32 3, i32 3, i32 0
  store i32 1, i32* %431, align 4
  %432 = getelementptr inbounds %struct.VkPipelineSampleLocationsStateCreateInfoEXT, %struct.VkPipelineSampleLocationsStateCreateInfoEXT* %27, i64 0, i32 3, i32 3, i32 1
  store i32 1, i32* %432, align 4
  %433 = icmp slt i32 %7, 16
  %434 = select i1 %433, i32 %7, i32 16
  %435 = getelementptr inbounds %struct.VkPipelineSampleLocationsStateCreateInfoEXT, %struct.VkPipelineSampleLocationsStateCreateInfoEXT* %27, i64 0, i32 3, i32 4
  store i32 %434, i32* %435, align 4
  %436 = getelementptr inbounds %struct.VkPipelineSampleLocationsStateCreateInfoEXT, %struct.VkPipelineSampleLocationsStateCreateInfoEXT* %27, i64 0, i32 3, i32 5
  store %struct.VkSampleLocationEXT* getelementptr inbounds ([16 x %struct.VkSampleLocationEXT], [16 x %struct.VkSampleLocationEXT]* @_ZZL42setup_all_sample_locations_at_pixel_centeriP43VkPipelineSampleLocationsStateCreateInfoEXTE24kCenteredSampleLocations, i64 0, i64 0), %struct.VkSampleLocationEXT** %436, align 8
  %437 = bitcast i8** %407 to i64*
  %438 = load i64, i64* %437, align 8
  %439 = bitcast i8** %425 to i64*
  store i64 %438, i64* %439, align 8
  %440 = bitcast i8** %407 to %struct.VkPipelineSampleLocationsStateCreateInfoEXT**
  store %struct.VkPipelineSampleLocationsStateCreateInfoEXT* %27, %struct.VkPipelineSampleLocationsStateCreateInfoEXT** %440, align 8
  br label %441

441:                                              ; preds = %393, %423
  %442 = bitcast [1 x %struct.VkPipelineColorBlendAttachmentState]* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %442) #9
  %443 = getelementptr inbounds [1 x %struct.VkPipelineColorBlendAttachmentState], [1 x %struct.VkPipelineColorBlendAttachmentState]* %28, i64 0, i64 0
  %444 = getelementptr inbounds [1 x %struct.VkPipelineColorBlendAttachmentState], [1 x %struct.VkPipelineColorBlendAttachmentState]* %28, i64 0, i64 0, i32 0
  %445 = getelementptr inbounds [1 x %struct.VkPipelineColorBlendAttachmentState], [1 x %struct.VkPipelineColorBlendAttachmentState]* %28, i64 0, i64 0, i32 1
  %446 = getelementptr inbounds [1 x %struct.VkPipelineColorBlendAttachmentState], [1 x %struct.VkPipelineColorBlendAttachmentState]* %28, i64 0, i64 0, i32 2
  %447 = getelementptr inbounds [1 x %struct.VkPipelineColorBlendAttachmentState], [1 x %struct.VkPipelineColorBlendAttachmentState]* %28, i64 0, i64 0, i32 3
  %448 = getelementptr inbounds [1 x %struct.VkPipelineColorBlendAttachmentState], [1 x %struct.VkPipelineColorBlendAttachmentState]* %28, i64 0, i64 0, i32 4
  %449 = getelementptr inbounds [1 x %struct.VkPipelineColorBlendAttachmentState], [1 x %struct.VkPipelineColorBlendAttachmentState]* %28, i64 0, i64 0, i32 5
  %450 = getelementptr inbounds [1 x %struct.VkPipelineColorBlendAttachmentState], [1 x %struct.VkPipelineColorBlendAttachmentState]* %28, i64 0, i64 0, i32 6
  %451 = getelementptr inbounds [1 x %struct.VkPipelineColorBlendAttachmentState], [1 x %struct.VkPipelineColorBlendAttachmentState]* %28, i64 0, i64 0, i32 7
  %452 = bitcast %struct.VkPipelineColorBlendStateCreateInfo* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %452) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %452, i8* align 8 bitcast ({ i32, [4 x i8], i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }* @__const._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.colorBlendInfo to i8*), i64 56, i1 false)
  %453 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %9, i64 0, i32 0
  %454 = load i32, i32* %453, align 4
  %455 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %9, i64 0, i32 1
  %456 = load i32, i32* %455, align 4
  %457 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %9, i64 0, i32 2
  %458 = load i32, i32* %457, align 4
  %459 = icmp ult i32 %454, 2
  %460 = icmp eq i32 %456, 1
  %461 = and i1 %459, %460
  %462 = icmp eq i32 %458, 0
  %463 = and i1 %461, %462
  %464 = bitcast i32* %445 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %464, i8 0, i64 28, i1 false) #9
  %465 = xor i1 %463, true
  %466 = zext i1 %465 to i32
  store i32 %466, i32* %444, align 16
  br i1 %463, label %495, label %467

467:                                              ; preds = %441
  %468 = icmp ult i32 %456, 17
  br i1 %468, label %470, label %469

469:                                              ; preds = %467
  call void @llvm.trap() #9
  unreachable

470:                                              ; preds = %467
  %471 = sext i32 %456 to i64
  %472 = getelementptr inbounds [17 x i32], [17 x i32]* @switch.table._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.15, i64 0, i64 %471
  %473 = load i32, i32* %472, align 4
  store i32 %473, i32* %445, align 4
  %474 = icmp ult i32 %458, 17
  br i1 %474, label %476, label %475

475:                                              ; preds = %470
  call void @llvm.trap() #9
  unreachable

476:                                              ; preds = %470
  %477 = sext i32 %458 to i64
  %478 = getelementptr inbounds [17 x i32], [17 x i32]* @switch.table._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.15, i64 0, i64 %477
  %479 = load i32, i32* %478, align 4
  store i32 %479, i32* %446, align 8
  %480 = zext i32 %454 to i64
  %481 = getelementptr inbounds [19 x i32], [19 x i32]* @_ZZL29blend_equation_to_vk_blend_op15GrBlendEquationE6gTable, i64 0, i64 %480
  %482 = load i32, i32* %481, align 4
  store i32 %482, i32* %447, align 4
  %483 = icmp ult i32 %456, 17
  br i1 %483, label %485, label %484

484:                                              ; preds = %476
  call void @llvm.trap() #9
  unreachable

485:                                              ; preds = %476
  %486 = sext i32 %456 to i64
  %487 = getelementptr inbounds [17 x i32], [17 x i32]* @switch.table._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.15, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4
  store i32 %488, i32* %448, align 16
  %489 = icmp ult i32 %458, 17
  br i1 %489, label %491, label %490

490:                                              ; preds = %485
  call void @llvm.trap() #9
  unreachable

491:                                              ; preds = %485
  %492 = sext i32 %458 to i64
  %493 = getelementptr inbounds [17 x i32], [17 x i32]* @switch.table._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.15, i64 0, i64 %492
  %494 = load i32, i32* %493, align 4
  store i32 %494, i32* %449, align 4
  store i32 %482, i32* %450, align 8
  br label %495

495:                                              ; preds = %441, %491
  %496 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %9, i64 0, i32 4
  %497 = load i8, i8* %496, align 4, !range !8
  %498 = icmp eq i8 %497, 0
  %499 = select i1 %498, i32 0, i32 15
  store i32 %499, i32* %451, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %452, i8 0, i64 56, i1 false) #9
  %500 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %29, i64 0, i32 0
  store i32 26, i32* %500, align 8
  %501 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %29, i64 0, i32 1
  %502 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %29, i64 0, i32 5
  %503 = bitcast i8** %501 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %503, i8 0, i64 16, i1 false) #9
  store i32 1, i32* %502, align 4
  %504 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %29, i64 0, i32 6
  store %struct.VkPipelineColorBlendAttachmentState* %443, %struct.VkPipelineColorBlendAttachmentState** %504, align 8
  %505 = bitcast %struct.VkPipelineRasterizationStateCreateInfo* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %505) #9
  %506 = load %class.GrCaps*, %class.GrCaps** %405, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %505, i8 0, i64 64, i1 false) #9
  %507 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %30, i64 0, i32 0
  store i32 23, i32* %507, align 8
  %508 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %30, i64 0, i32 1
  %509 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %506, i64 0, i32 20
  %510 = bitcast i8** %508 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %510, i8 0, i64 20, i1 false) #9
  %511 = load i8, i8* %509, align 2
  %512 = and i8 %511, 2
  %513 = icmp ne i8 %512, 0
  %514 = or i1 %513, %10
  %515 = zext i1 %514 to i32
  %516 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %30, i64 0, i32 5
  store i32 %515, i32* %516, align 4
  %517 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %30, i64 0, i32 6
  %518 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %30, i64 0, i32 12
  %519 = bitcast i32* %517 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %519, i8 0, i64 24, i1 false) #9
  store float 1.000000e+00, float* %518, align 8
  %520 = bitcast %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %520) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %520, i8* align 8 bitcast ({ i32, [4 x i8], i8*, i32, i32, float, [4 x i8] }* @__const._ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T.conservativeRasterInfo to i8*), i64 32, i1 false)
  br i1 %11, label %521, label %529

521:                                              ; preds = %495
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %520, i8 0, i64 32, i1 false) #9
  %522 = getelementptr inbounds %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT, %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT* %31, i64 0, i32 0
  store i32 1000101001, i32* %522, align 8
  %523 = getelementptr inbounds %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT, %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT* %31, i64 0, i32 1
  %524 = getelementptr inbounds %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT, %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT* %31, i64 0, i32 2
  store i32 0, i32* %524, align 8
  %525 = getelementptr inbounds %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT, %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT* %31, i64 0, i32 3
  store i32 1, i32* %525, align 4
  %526 = getelementptr inbounds %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT, %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT* %31, i64 0, i32 4
  store float 0.000000e+00, float* %526, align 8
  %527 = bitcast i8** %523 to i64*
  store i64 0, i64* %527, align 8
  %528 = bitcast i8** %508 to %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT**
  store %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT* %31, %struct.VkPipelineRasterizationConservativeStateCreateInfoEXT** %528, align 8
  br label %529

529:                                              ; preds = %521, %495
  %530 = bitcast [3 x i32]* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %530) #9
  %531 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 0
  %532 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 1
  %533 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 2
  %534 = bitcast %struct.VkPipelineDynamicStateCreateInfo* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %534) #9
  %535 = bitcast %struct.VkPipelineDynamicStateCreateInfo* %33 to i64*
  store i64 27, i64* %535, align 8
  %536 = getelementptr inbounds %struct.VkPipelineDynamicStateCreateInfo, %struct.VkPipelineDynamicStateCreateInfo* %33, i64 0, i32 1
  store i8* null, i8** %536, align 8
  %537 = getelementptr inbounds %struct.VkPipelineDynamicStateCreateInfo, %struct.VkPipelineDynamicStateCreateInfo* %33, i64 0, i32 2
  store i32 0, i32* %537, align 8
  store i32 0, i32* %531, align 4
  store i32 1, i32* %532, align 4
  store i32 4, i32* %533, align 4
  %538 = getelementptr inbounds %struct.VkPipelineDynamicStateCreateInfo, %struct.VkPipelineDynamicStateCreateInfo* %33, i64 0, i32 3
  store i32 3, i32* %538, align 4
  %539 = getelementptr inbounds %struct.VkPipelineDynamicStateCreateInfo, %struct.VkPipelineDynamicStateCreateInfo* %33, i64 0, i32 4
  store i32* %531, i32** %539, align 8
  %540 = bitcast %struct.VkGraphicsPipelineCreateInfo* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %540) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %540, i8 0, i64 144, i1 false)
  %541 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 0
  store i32 28, i32* %541, align 8
  %542 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 1
  store i8* null, i8** %542, align 8
  %543 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 2
  store i32 0, i32* %543, align 8
  %544 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 3
  store i32 %14, i32* %544, align 4
  %545 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 4
  store %struct.VkPipelineShaderStageCreateInfo* %13, %struct.VkPipelineShaderStageCreateInfo** %545, align 8
  %546 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 5
  store %struct.VkPipelineVertexInputStateCreateInfo* %20, %struct.VkPipelineVertexInputStateCreateInfo** %546, align 8
  %547 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 6
  store %struct.VkPipelineInputAssemblyStateCreateInfo* %23, %struct.VkPipelineInputAssemblyStateCreateInfo** %547, align 8
  %548 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 7
  store %struct.VkPipelineTessellationStateCreateInfo* null, %struct.VkPipelineTessellationStateCreateInfo** %548, align 8
  %549 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 8
  store %struct.VkPipelineViewportStateCreateInfo* %25, %struct.VkPipelineViewportStateCreateInfo** %549, align 8
  %550 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 9
  store %struct.VkPipelineRasterizationStateCreateInfo* %30, %struct.VkPipelineRasterizationStateCreateInfo** %550, align 8
  %551 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 10
  store %struct.VkPipelineMultisampleStateCreateInfo* %26, %struct.VkPipelineMultisampleStateCreateInfo** %551, align 8
  %552 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 11
  store %struct.VkPipelineDepthStencilStateCreateInfo* %24, %struct.VkPipelineDepthStencilStateCreateInfo** %552, align 8
  %553 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 12
  store %struct.VkPipelineColorBlendStateCreateInfo* %29, %struct.VkPipelineColorBlendStateCreateInfo** %553, align 8
  %554 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 13
  store %struct.VkPipelineDynamicStateCreateInfo* %33, %struct.VkPipelineDynamicStateCreateInfo** %554, align 8
  %555 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 14
  store %struct.VkPipelineLayout_T* %16, %struct.VkPipelineLayout_T** %555, align 8
  %556 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 15
  store %struct.VkRenderPass_T* %15, %struct.VkRenderPass_T** %556, align 8
  %557 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 16
  store i32 %12, i32* %557, align 8
  %558 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 17
  store %struct.VkPipeline_T* null, %struct.VkPipeline_T** %558, align 8
  %559 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %34, i64 0, i32 18
  store i32 -1, i32* %559, align 8
  %560 = bitcast %struct.VkPipeline_T** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %560) #9
  store %struct.VkPipeline_T* inttoptr (i64 -6148914691236517206 to %struct.VkPipeline_T*), %struct.VkPipeline_T** %35, align 8
  %561 = load atomic i64, i64* @_ZZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_TE28trace_event_unique_atomic587.0.0 monotonic, align 8
  %562 = inttoptr i64 %561 to i8*
  %563 = icmp eq i64 %561, 0
  br i1 %563, label %564, label %572

564:                                              ; preds = %529
  %565 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %566 = bitcast %class.SkEventTracer* %565 to i8* (%class.SkEventTracer*, i8*)***
  %567 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %566, align 8
  %568 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %567, i64 2
  %569 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %568, align 8
  %570 = call i8* %569(%class.SkEventTracer* %565, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0)) #9
  %571 = ptrtoint i8* %570 to i64
  store atomic i64 %571, i64* @_ZZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_TE28trace_event_unique_atomic587.0.0 monotonic, align 8
  br label %572

572:                                              ; preds = %529, %564
  %573 = phi i8* [ %562, %529 ], [ %570, %564 ]
  %574 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %574) #9
  %575 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %36, i64 0, i32 0
  %576 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %36, i64 0, i32 1, i32 0
  %577 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %36, i64 0, i32 1, i32 1
  %578 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %36, i64 0, i32 1, i32 2
  %579 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %36, i64 0, i32 1
  %580 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %579 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %580, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %575, align 8
  %581 = load i8, i8* %573, align 1
  %582 = and i8 %581, 5
  %583 = icmp eq i8 %582, 0
  br i1 %583, label %593, label %584

584:                                              ; preds = %572
  %585 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %586 = bitcast %class.SkEventTracer* %585 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %587 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %586, align 8
  %588 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %587, i64 4
  %589 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %588, align 8
  %590 = call i64 %589(%class.SkEventTracer* %585, i8 signext 88, i8* %573, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #9
  %591 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %36, i64 0, i32 1
  %592 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %591, i64 0, i32 0
  store i8* %573, i8** %592, align 8
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8** %577, align 8
  store i64 %590, i64* %578, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %591, %"struct.skia::tracing_internals::ScopedTracer::Data"** %575, align 8
  br label %593

593:                                              ; preds = %572, %584
  %594 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 1, i32 0
  %595 = load %struct.GrVkInterface*, %struct.GrVkInterface** %594, align 8
  %596 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %595, i64 0, i32 1, i32 63, i32 0
  %597 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %596, align 8
  %598 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 6
  %599 = load %struct.VkDevice_T*, %struct.VkDevice_T** %598, align 8
  %600 = call i32 %597(%struct.VkDevice_T* %599, %struct.VkPipelineCache_T* %18, i32 1, %struct.VkGraphicsPipelineCreateInfo* nonnull %34, %struct.VkAllocationCallbacks* null, %struct.VkPipeline_T** nonnull %35) #9
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %628, label %602

602:                                              ; preds = %593
  %603 = bitcast %class.GrVkGpu* %1 to i1 (%class.GrVkGpu*)***
  %604 = load i1 (%class.GrVkGpu*)**, i1 (%class.GrVkGpu*)*** %603, align 8
  %605 = getelementptr inbounds i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %604, i64 8
  %606 = load i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %605, align 8
  %607 = call zeroext i1 %606(%class.GrVkGpu* %1) #9
  br i1 %607, label %609, label %608

608:                                              ; preds = %602
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 594, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str.3, i64 0, i64 0), i32 %600) #9
  br label %609

609:                                              ; preds = %608, %602
  %610 = call zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu* %1, i32 %600) #9
  %611 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %575, align 8
  %612 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %611, null
  br i1 %612, label %626, label %613

613:                                              ; preds = %609
  %614 = load i8*, i8** %576, align 8
  %615 = load i8, i8* %614, align 1
  %616 = icmp eq i8 %615, 0
  br i1 %616, label %626, label %617

617:                                              ; preds = %613
  %618 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %619 = load i8*, i8** %576, align 8
  %620 = load i8*, i8** %577, align 8
  %621 = load i64, i64* %578, align 8
  %622 = bitcast %class.SkEventTracer* %618 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %623 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %622, align 8
  %624 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %623, i64 5
  %625 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %624, align 8
  call void %625(%class.SkEventTracer* %618, i8* %619, i8* %620, i64 %621) #9
  br label %626

626:                                              ; preds = %617, %613, %609
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %574) #9
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 597, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 %600) #9
  %627 = getelementptr inbounds %class.sk_sp.482, %class.sk_sp.482* %0, i64 0, i32 0
  store %class.GrVkPipeline* null, %class.GrVkPipeline** %627, align 8
  br label %660

628:                                              ; preds = %593
  %629 = call zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu* %1, i32 0) #9
  %630 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %575, align 8
  %631 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %630, null
  br i1 %631, label %645, label %632

632:                                              ; preds = %628
  %633 = load i8*, i8** %576, align 8
  %634 = load i8, i8* %633, align 1
  %635 = icmp eq i8 %634, 0
  br i1 %635, label %645, label %636

636:                                              ; preds = %632
  %637 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %638 = load i8*, i8** %576, align 8
  %639 = load i8*, i8** %577, align 8
  %640 = load i64, i64* %578, align 8
  %641 = bitcast %class.SkEventTracer* %637 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %642 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %641, align 8
  %643 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %642, i64 5
  %644 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %643, align 8
  call void %644(%class.SkEventTracer* %637, i8* %638, i8* %639, i64 %640) #9
  br label %645

645:                                              ; preds = %636, %632, %628
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %574) #9
  %646 = select i1 %17, %struct.VkPipelineLayout_T* %16, %struct.VkPipelineLayout_T* null
  %647 = call i8* @_Znwm(i64 40) #11
  %648 = bitcast %struct.VkPipeline_T** %35 to i64*
  %649 = load i64, i64* %648, align 8
  %650 = bitcast i8* %647 to i32 (...)***
  %651 = getelementptr inbounds i8, i8* %647, i64 8
  %652 = bitcast i8* %651 to i32*
  store i32 1, i32* %652, align 4
  %653 = getelementptr inbounds i8, i8* %647, i64 16
  %654 = bitcast i8* %653 to %class.GrVkGpu**
  store %class.GrVkGpu* %1, %class.GrVkGpu** %654, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV12GrVkPipeline, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %650, align 8
  %655 = getelementptr inbounds i8, i8* %647, i64 24
  %656 = bitcast i8* %655 to i64*
  store i64 %649, i64* %656, align 8
  %657 = getelementptr inbounds i8, i8* %647, i64 32
  %658 = bitcast i8* %657 to %struct.VkPipelineLayout_T**
  store %struct.VkPipelineLayout_T* %646, %struct.VkPipelineLayout_T** %658, align 8
  %659 = bitcast %class.sk_sp.482* %0 to i8**
  store i8* %647, i8** %659, align 8
  br label %660

660:                                              ; preds = %645, %626
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %560) #9
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %540) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %534) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %530) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %520) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %505) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %452) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %442) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %413) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %404) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %396) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %274) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %260) #9
  %661 = load i64, i64* %46, align 8
  %662 = and i64 %661, 1
  %663 = icmp eq i64 %662, 0
  br i1 %663, label %666, label %664

664:                                              ; preds = %660
  %665 = load i8*, i8** %47, align 8
  call void @_Z7sk_freePv(i8* %665) #9
  br label %666

666:                                              ; preds = %660, %664
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %43) #9
  %667 = load i64, i64* %41, align 8
  %668 = and i64 %667, 1
  %669 = icmp eq i64 %668, 0
  br i1 %669, label %672, label %670

670:                                              ; preds = %666
  %671 = load i8*, i8** %42, align 8
  call void @_Z7sk_freePv(i8* %671) #9
  br label %672

672:                                              ; preds = %666, %670
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12GrVkPipeline4MakeEP7GrVkGpuRK13GrProgramInfoP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TP17VkPipelineCache_Tj(%class.sk_sp.482* noalias nocapture sret, %class.GrVkGpu*, %class.GrProgramInfo* dereferenceable(128), %struct.VkPipelineShaderStageCreateInfo*, i32, %struct.VkRenderPass_T*, %struct.VkPipelineLayout_T*, %struct.VkPipelineCache_T*, i32) local_unnamed_addr #0 align 2 {
  %10 = alloca %class.GrStencilSettings, align 4
  %11 = alloca %"struct.GrXferProcessor::BlendInfo", align 4
  %12 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %2, i64 0, i32 7
  %13 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %12, align 8
  %14 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %2, i64 0, i32 5
  %15 = load %class.GrPipeline*, %class.GrPipeline** %14, align 8
  %16 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %13, i64 0, i32 3
  %17 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %13, i64 0, i32 4
  %18 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %2, i64 0, i32 9
  %19 = load i8, i8* %18, align 4
  %20 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %2, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = bitcast %class.GrStencilSettings* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9
  call void @_ZNK13GrProgramInfo20nonGLStencilSettingsEv(%class.GrStencilSettings* nonnull sret %10, %class.GrProgramInfo* %2) #9
  %23 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %2, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %15, i64 0, i32 5
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 1
  %28 = icmp ne i8 %27, 0
  %29 = bitcast %"struct.GrXferProcessor::BlendInfo"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #9
  %30 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %15, i64 0, i32 7, i32 0
  %31 = load %class.GrXferProcessor*, %class.GrXferProcessor** %30, align 8
  %32 = icmp eq %class.GrXferProcessor* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %9
  %34 = call dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() #9
  br label %35

35:                                               ; preds = %9, %33
  %36 = phi %class.GrXferProcessor* [ %34, %33 ], [ %31, %9 ]
  %37 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %11, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %11, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %11, i64 0, i32 2
  %40 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %11, i64 0, i32 4
  %41 = bitcast i8* %40 to i32*
  store i32 -1431655935, i32* %41, align 4, !alias.scope !9
  store i32 0, i32* %37, align 4, !alias.scope !9
  store i32 1, i32* %38, align 4, !alias.scope !9
  %42 = bitcast i32* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 20, i1 false) #9, !alias.scope !9
  %43 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %36, i64 0, i32 2
  %44 = load i8, i8* %43, align 4, !range !8, !noalias !9
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %51

46:                                               ; preds = %35
  %47 = bitcast %class.GrXferProcessor* %36 to void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)***
  %48 = load void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)**, void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)*** %47, align 8, !noalias !9
  %49 = getelementptr inbounds void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)*, void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)** %48, i64 7
  %50 = load void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)*, void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)** %49, align 8, !noalias !9
  call void %50(%class.GrXferProcessor* %36, %"struct.GrXferProcessor::BlendInfo"* nonnull %11) #9
  br label %51

51:                                               ; preds = %35, %46
  %52 = load i8, i8* %25, align 8
  %53 = and i8 %52, 4
  %54 = icmp ne i8 %53, 0
  %55 = and i8 %52, 2
  %56 = icmp ne i8 %55, 0
  call void @_ZN12GrVkPipeline4MakeEP7GrVkGpuRKN19GrGeometryProcessor12AttributeSetES5_15GrPrimitiveType15GrSurfaceOriginRK17GrStencilSettingsibRKN15GrXferProcessor9BlendInfoEbbjP31VkPipelineShaderStageCreateInfoiP14VkRenderPass_TP18VkPipelineLayout_TbP17VkPipelineCache_T(%class.sk_sp.482* sret %0, %class.GrVkGpu* %1, %"class.GrGeometryProcessor::AttributeSet"* dereferenceable(24) %16, %"class.GrGeometryProcessor::AttributeSet"* dereferenceable(24) %17, i8 zeroext %19, i32 %21, %class.GrStencilSettings* nonnull dereferenceable(24) %10, i32 %24, i1 zeroext %28, %"struct.GrXferProcessor::BlendInfo"* nonnull dereferenceable(32) %11, i1 zeroext %54, i1 zeroext %56, i32 %8, %struct.VkPipelineShaderStageCreateInfo* %3, i32 %4, %struct.VkRenderPass_T* %5, %struct.VkPipelineLayout_T* %6, i1 zeroext true, %struct.VkPipelineCache_T* %7)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9
  ret void
}

declare void @_ZNK13GrProgramInfo20nonGLStencilSettingsEv(%class.GrStencilSettings* sret, %class.GrProgramInfo*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12GrVkPipeline11freeGPUDataEv(%class.GrVkPipeline* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %0, i64 0, i32 0, i32 1
  %3 = load %class.GrVkGpu*, %class.GrVkGpu** %2, align 8
  %4 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %3, i64 0, i32 1, i32 0
  %5 = load %struct.GrVkInterface*, %struct.GrVkInterface** %4, align 8
  %6 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %5, i64 0, i32 1, i32 65, i32 0
  %7 = load void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)** %6, align 8
  %8 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %3, i64 0, i32 6
  %9 = load %struct.VkDevice_T*, %struct.VkDevice_T** %8, align 8
  %10 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %0, i64 0, i32 1
  %11 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %10, align 8
  tail call void %7(%struct.VkDevice_T* %9, %struct.VkPipeline_T* %11, %struct.VkAllocationCallbacks* null) #9
  %12 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %0, i64 0, i32 2
  %13 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %12, align 8
  %14 = icmp eq %struct.VkPipelineLayout_T* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %1
  %16 = load %class.GrVkGpu*, %class.GrVkGpu** %2, align 8
  %17 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %16, i64 0, i32 1, i32 0
  %18 = load %struct.GrVkInterface*, %struct.GrVkInterface** %17, align 8
  %19 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %18, i64 0, i32 1, i32 67, i32 0
  %20 = load void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)** %19, align 8
  %21 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %16, i64 0, i32 6
  %22 = load %struct.VkDevice_T*, %struct.VkDevice_T** %21, align 8
  tail call void %20(%struct.VkDevice_T* %22, %struct.VkPipelineLayout_T* nonnull %13, %struct.VkAllocationCallbacks* null) #9
  br label %23

23:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12GrVkPipeline26SetDynamicScissorRectStateEP7GrVkGpuP17GrVkCommandBuffer7SkISize15GrSurfaceOriginRK7SkIRect(%class.GrVkGpu*, %class.GrVkCommandBuffer*, i64, i32, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.VkRect2D, align 4
  %7 = lshr i64 %2, 32
  %8 = trunc i64 %7 to i32
  %9 = bitcast %struct.VkRect2D* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %6, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %6, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %6, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %6, i64 0, i32 1, i32 1
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %10, align 4
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = sub i32 %17, %15
  store i32 %18, i32* %12, align 4
  %19 = icmp eq i32 %3, 0
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = sub nsw i32 %8, %21
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = select i1 %19, i32 %24, i32 %22
  store i32 %25, i32* %11, align 4
  %26 = sub i32 %21, %24
  store i32 %26, i32* %13, align 4
  call void @_ZN17GrVkCommandBuffer10setScissorEPK7GrVkGpujjPK8VkRect2D(%class.GrVkCommandBuffer* %1, %class.GrVkGpu* %0, i32 0, i32 1, %struct.VkRect2D* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

declare void @_ZN17GrVkCommandBuffer10setScissorEPK7GrVkGpujjPK8VkRect2D(%class.GrVkCommandBuffer*, %class.GrVkGpu*, i32, i32, %struct.VkRect2D*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12GrVkPipeline23SetDynamicViewportStateEP7GrVkGpuP17GrVkCommandBuffer7SkISize(%class.GrVkGpu*, %class.GrVkCommandBuffer*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkViewport, align 4
  %5 = trunc i64 %2 to i32
  %6 = lshr i64 %2, 32
  %7 = trunc i64 %6 to i32
  %8 = bitcast %struct.VkViewport* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %4, i64 0, i32 0
  %10 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %4, i64 0, i32 1
  %11 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %4, i64 0, i32 2
  %12 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %4, i64 0, i32 3
  %13 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %4, i64 0, i32 4
  %14 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %4, i64 0, i32 5
  store float 0.000000e+00, float* %9, align 4
  store float 0.000000e+00, float* %10, align 4
  %15 = sitofp i32 %5 to float
  store float %15, float* %11, align 4
  %16 = sitofp i32 %7 to float
  store float %16, float* %12, align 4
  store float 0.000000e+00, float* %13, align 4
  store float 1.000000e+00, float* %14, align 4
  call void @_ZN17GrVkCommandBuffer11setViewportEPK7GrVkGpujjPK10VkViewport(%class.GrVkCommandBuffer* %1, %class.GrVkGpu* %0, i32 0, i32 1, %struct.VkViewport* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void
}

declare void @_ZN17GrVkCommandBuffer11setViewportEPK7GrVkGpujjPK10VkViewport(%class.GrVkCommandBuffer*, %class.GrVkGpu*, i32, i32, %struct.VkViewport*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12GrVkPipeline28SetDynamicBlendConstantStateEP7GrVkGpuP17GrVkCommandBufferRK9GrSwizzleRK15GrXferProcessor(%class.GrVkGpu*, %class.GrVkCommandBuffer*, %class.GrSwizzle* dereferenceable(2), %class.GrXferProcessor* dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %5 = alloca %"struct.GrXferProcessor::BlendInfo", align 4
  %6 = alloca [4 x float], align 16
  %7 = bitcast %"struct.GrXferProcessor::BlendInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %5, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %5, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %5, i64 0, i32 2
  %11 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %5, i64 0, i32 4
  %12 = bitcast i8* %11 to i32*
  store i32 -1431655935, i32* %12, align 4, !alias.scope !12
  store i32 0, i32* %8, align 4, !alias.scope !12
  store i32 1, i32* %9, align 4, !alias.scope !12
  %13 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 20, i1 false) #9, !alias.scope !12
  %14 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %3, i64 0, i32 2
  %15 = load i8, i8* %14, align 4, !range !8, !noalias !12
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %4
  %18 = bitcast %class.GrXferProcessor* %3 to void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)***
  %19 = load void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)**, void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)*** %18, align 8, !noalias !12
  %20 = getelementptr inbounds void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)*, void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)** %19, i64 7
  %21 = load void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)*, void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)** %20, align 8, !noalias !12
  call void %21(%class.GrXferProcessor* %3, %"struct.GrXferProcessor::BlendInfo"* nonnull %5) #9
  %22 = load i32, i32* %9, align 4
  %23 = load i32, i32* %10, align 4
  %24 = or i32 %22, 1
  %25 = icmp eq i32 %24, 11
  %26 = or i32 %23, 1
  %27 = icmp eq i32 %26, 11
  br label %28

28:                                               ; preds = %4, %17
  %29 = phi i1 [ false, %4 ], [ %27, %17 ]
  %30 = phi i1 [ false, %4 ], [ %25, %17 ]
  %31 = bitcast [4 x float]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #9
  %32 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 0
  %33 = or i1 %30, %29
  %34 = bitcast [4 x float]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -1, i64 16, i1 false)
  br i1 %33, label %35, label %52

35:                                               ; preds = %28
  %36 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 3
  %37 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 2
  %38 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 1
  %39 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %5, i64 0, i32 3
  %40 = bitcast %struct.SkRGBA4f* %39 to <2 x float>*
  %41 = load <2 x float>, <2 x float>* %40, align 4
  %42 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %5, i64 0, i32 3, i32 2
  %43 = bitcast float* %42 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 4
  %45 = call { <2 x float>, <2 x float> } @_ZNK9GrSwizzle7applyToENSt3__15arrayIfLm4EEE(%class.GrSwizzle* %2, <2 x float> %41, <2 x float> %44) #9
  %46 = extractvalue { <2 x float>, <2 x float> } %45, 0
  %47 = extractvalue { <2 x float>, <2 x float> } %45, 1
  %48 = extractelement <2 x float> %46, i32 0
  store float %48, float* %32, align 16
  %49 = extractelement <2 x float> %46, i32 1
  store float %49, float* %38, align 4
  %50 = extractelement <2 x float> %47, i32 0
  store float %50, float* %37, align 8
  %51 = extractelement <2 x float> %47, i32 1
  store float %51, float* %36, align 4
  call void @_ZN17GrVkCommandBuffer17setBlendConstantsEPK7GrVkGpuPKf(%class.GrVkCommandBuffer* %1, %class.GrVkGpu* %0, float* nonnull %32) #9
  br label %52

52:                                               ; preds = %28, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

declare void @_ZN17GrVkCommandBuffer17setBlendConstantsEPK7GrVkGpuPKf(%class.GrVkCommandBuffer*, %class.GrVkGpu*, float*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrVkPipelineD0Ev(%class.GrVkPipeline*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.GrVkPipeline* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK17GrManagedResource24notifyQueuedForWorkOnGpuEv(%class.GrManagedResource*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK17GrManagedResource27notifyFinishedWithWorkOnGpuEv(%class.GrManagedResource*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI31VkVertexInputBindingDescriptionLb1EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.485*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.485, %class.SkTArray.485* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 12) #9
  %45 = load i64, i64* %4, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %35
  %50 = mul nuw nsw i64 %47, 12
  %51 = bitcast %class.SkTArray.485* %0 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %52, i64 %50, i1 false) #9
  %53 = load i64, i64* %4, align 8
  br label %54

54:                                               ; preds = %35, %49
  %55 = phi i64 [ %45, %35 ], [ %53, %49 ]
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  %58 = bitcast %class.SkTArray.485* %0 to i8**
  br i1 %57, label %62, label %59

59:                                               ; preds = %54
  %60 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %60) #9
  %61 = load i64, i64* %4, align 8
  br label %62

62:                                               ; preds = %54, %59
  %63 = phi i64 [ %61, %59 ], [ %55, %54 ]
  store i8* %44, i8** %58, align 8
  %64 = and i64 %63, -4294967298
  %65 = or i64 %64, 1
  store i64 %65, i64* %4, align 8
  br label %66

66:                                               ; preds = %62, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare zeroext i1 @_Z28GrSampleCountToVkSampleCountjP21VkSampleCountFlagBits(i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrManagedResourceD2Ev(%class.GrManagedResource*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK9GrSwizzle7applyToENSt3__15arrayIfLm4EEE(%class.GrSwizzle*, <2 x float>, <2 x float>) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %9 = load i16, i16* %8, align 2
  %10 = zext i16 %9 to i32
  %11 = and i32 %10, 15
  %12 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12)
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %1, <2 x float>* %13, align 8
  %14 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %2, <2 x float>* %14, align 8
  %15 = icmp ult i32 %11, 4
  br i1 %15, label %16, label %21

16:                                               ; preds = %3
  %17 = bitcast { <2 x float>, <2 x float> }* %7 to %"struct.std::__1::array"*
  %18 = zext i32 %11 to i64
  %19 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %17, i64 0, i32 0, i64 %18
  %20 = load float, float* %19, align 4
  br label %24

21:                                               ; preds = %3
  switch i32 %11, label %22 [
    i32 5, label %24
    i32 4, label %23
  ]

22:                                               ; preds = %21
  tail call void @llvm.trap() #9
  unreachable

23:                                               ; preds = %21
  br label %24

24:                                               ; preds = %16, %21, %23
  %25 = phi float [ %20, %16 ], [ 1.000000e+00, %21 ], [ 0.000000e+00, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12)
  %26 = lshr i32 %10, 4
  %27 = and i32 %26, 15
  %28 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28)
  %29 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %1, <2 x float>* %29, align 8
  %30 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %2, <2 x float>* %30, align 8
  %31 = icmp ult i32 %27, 4
  br i1 %31, label %32, label %37

32:                                               ; preds = %24
  %33 = bitcast { <2 x float>, <2 x float> }* %4 to %"struct.std::__1::array"*
  %34 = zext i32 %27 to i64
  %35 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %33, i64 0, i32 0, i64 %34
  %36 = load float, float* %35, align 4
  br label %40

37:                                               ; preds = %24
  switch i32 %27, label %38 [
    i32 5, label %40
    i32 4, label %39
  ]

38:                                               ; preds = %37
  tail call void @llvm.trap() #9
  unreachable

39:                                               ; preds = %37
  br label %40

40:                                               ; preds = %32, %37, %39
  %41 = phi float [ %36, %32 ], [ 1.000000e+00, %37 ], [ 0.000000e+00, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28)
  %42 = lshr i32 %10, 8
  %43 = and i32 %42, 15
  %44 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44)
  %45 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %1, <2 x float>* %45, align 8
  %46 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %2, <2 x float>* %46, align 8
  %47 = icmp ult i32 %43, 4
  br i1 %47, label %48, label %53

48:                                               ; preds = %40
  %49 = bitcast { <2 x float>, <2 x float> }* %5 to %"struct.std::__1::array"*
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %49, i64 0, i32 0, i64 %50
  %52 = load float, float* %51, align 4
  br label %56

53:                                               ; preds = %40
  switch i32 %43, label %54 [
    i32 5, label %56
    i32 4, label %55
  ]

54:                                               ; preds = %53
  tail call void @llvm.trap() #9
  unreachable

55:                                               ; preds = %53
  br label %56

56:                                               ; preds = %48, %53, %55
  %57 = phi float [ %52, %48 ], [ 1.000000e+00, %53 ], [ 0.000000e+00, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44)
  %58 = lshr i32 %10, 12
  %59 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59)
  %60 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %1, <2 x float>* %60, align 8
  %61 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %2, <2 x float>* %61, align 8
  %62 = icmp ult i16 %9, 16384
  br i1 %62, label %63, label %68

63:                                               ; preds = %56
  %64 = bitcast { <2 x float>, <2 x float> }* %6 to %"struct.std::__1::array"*
  %65 = zext i32 %58 to i64
  %66 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %64, i64 0, i32 0, i64 %65
  %67 = load float, float* %66, align 4
  br label %71

68:                                               ; preds = %56
  switch i32 %58, label %69 [
    i32 5, label %71
    i32 4, label %70
  ]

69:                                               ; preds = %68
  tail call void @llvm.trap() #9
  unreachable

70:                                               ; preds = %68
  br label %71

71:                                               ; preds = %63, %68, %70
  %72 = phi float [ %67, %63 ], [ 1.000000e+00, %68 ], [ 0.000000e+00, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59)
  %73 = insertelement <2 x float> undef, float %25, i32 0
  %74 = insertelement <2 x float> %73, float %41, i32 1
  %75 = insertelement <2 x float> undef, float %57, i32 0
  %76 = insertelement <2 x float> %75, float %72, i32 1
  %77 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %74, 0
  %78 = insertvalue { <2 x float>, <2 x float> } %77, <2 x float> %76, 1
  ret { <2 x float>, <2 x float> } %78
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI33VkVertexInputAttributeDescriptionLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.488*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.488, %class.SkTArray.488* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 16) #9
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.488, %class.SkTArray.488* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %57, %50 ]
  %52 = shl nuw nsw i64 %51, 4
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %struct.VkVertexInputAttributeDescription*, %struct.VkVertexInputAttributeDescription** %49, align 8
  %55 = getelementptr inbounds %struct.VkVertexInputAttributeDescription, %struct.VkVertexInputAttributeDescription* %54, i64 %51
  %56 = bitcast %struct.VkVertexInputAttributeDescription* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %56, i64 16, i1 false) #9
  %57 = add nuw nsw i64 %51, 1
  %58 = load i64, i64* %4, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = icmp ult i64 %57, %60
  br i1 %61, label %50, label %62

62:                                               ; preds = %50, %35
  %63 = phi i64 [ %45, %35 ], [ %58, %50 ]
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %64, 0
  %66 = bitcast %class.SkTArray.488* %0 to i8**
  br i1 %65, label %70, label %67

67:                                               ; preds = %62
  %68 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %68) #9
  %69 = load i64, i64* %4, align 8
  br label %70

70:                                               ; preds = %62, %67
  %71 = phi i64 [ %69, %67 ], [ %63, %62 ]
  store i8* %44, i8** %66, align 8
  %72 = and i64 %71, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %70, %32, %21
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK19GrGeometryProcessor12AttributeSet5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK19GrGeometryProcessor12AttributeSet5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK19GrGeometryProcessor12AttributeSet5beginEv: argument 0"}
!7 = distinct !{!7, !"_ZNK19GrGeometryProcessor12AttributeSet5beginEv"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK15GrXferProcessor12getBlendInfoEv: argument 0"}
!11 = distinct !{!11, !"_ZNK15GrXferProcessor12getBlendInfoEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK15GrXferProcessor12getBlendInfoEv: argument 0"}
!14 = distinct !{!14, !"_ZNK15GrXferProcessor12getBlendInfoEv"}
