; ModuleID = '../../third_party/blink/renderer/modules/webdatabase/sqlite/sqlite_statement.cc'
source_filename = "../../third_party/blink/renderer/modules/webdatabase/sqlite/sqlite_statement.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SQLiteStatement" = type { %"class.blink::SQLiteDatabase"*, %"class.WTF::String", %struct.sqlite3_stmt* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.sqlite3_stmt = type opaque
%"class.blink::SQLiteDatabase" = type <{ %struct.sqlite3*, i32, i8, [3 x i8], %"class.WTF::Mutex", %"class.blink::DatabaseAuthorizer"*, i32, [4 x i8], %"class.WTF::Mutex", i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%struct.sqlite3 = type opaque
%"class.blink::DatabaseAuthorizer" = type opaque
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::SQLValue" = type { i32, double, %"class.WTF::String" }

@_ZN5blink15SQLiteStatementC1ERNS_14SQLiteDatabaseERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::SQLiteStatement"*, %"class.blink::SQLiteDatabase"*, %"class.WTF::String"*), void (%"class.blink::SQLiteStatement"*, %"class.blink::SQLiteDatabase"*, %"class.WTF::String"*)* @_ZN5blink15SQLiteStatementC2ERNS_14SQLiteDatabaseERKN3WTF6StringE
@_ZN5blink15SQLiteStatementD1Ev = hidden unnamed_addr alias void (%"class.blink::SQLiteStatement"*), void (%"class.blink::SQLiteStatement"*)* @_ZN5blink15SQLiteStatementD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15SQLiteStatementC2ERNS_14SQLiteDatabaseERKN3WTF6StringE(%"class.blink::SQLiteStatement"* nocapture, %"class.blink::SQLiteDatabase"* dereferenceable(152), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 0
  store %"class.blink::SQLiteDatabase"* %1, %"class.blink::SQLiteDatabase"** %4, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #8
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #8
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %3, %9, %24
  %27 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  store %struct.sqlite3_stmt* null, %struct.sqlite3_stmt** %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15SQLiteStatementD2Ev(%"class.blink::SQLiteStatement"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %3 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %2, align 8
  %4 = icmp eq %struct.sqlite3_stmt* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @chrome_sqlite3_finalize(%struct.sqlite3_stmt* nonnull %3) #8
  store %struct.sqlite3_stmt* null, %struct.sqlite3_stmt** %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #8
  br label %24

24:                                               ; preds = %7, %20, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15SQLiteStatement8FinalizeEv(%"class.blink::SQLiteStatement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %3 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %2, align 8
  %4 = icmp eq %struct.sqlite3_stmt* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @chrome_sqlite3_finalize(%struct.sqlite3_stmt* nonnull %3) #8
  store %struct.sqlite3_stmt* null, %struct.sqlite3_stmt** %2, align 8
  %7 = tail call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %6)
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15SQLiteStatement7PrepareEv(%"class.blink::SQLiteStatement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %9 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 1
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %9) #8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.WTF::String"* nonnull %3, i32 0) #8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #8
  br label %27

27:                                               ; preds = %1, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  %28 = call i8* @_Znwm(i64 8) #9
  %29 = bitcast i8* %28 to i8**
  %30 = call i8* @_Znwm(i64 8) #9
  %31 = bitcast i8* %30 to %struct.sqlite3_stmt**
  store i8* null, i8** %29, align 8
  store %struct.sqlite3_stmt* null, %struct.sqlite3_stmt** %31, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = load i64, i64* %6, align 8
  %37 = trunc i64 %36 to i32
  %38 = load i8*, i8** %5, align 8
  %39 = zext i8 %34 to i32
  %40 = select i1 %35, i32 %37, i32 %39
  %41 = select i1 %35, i8* %38, i8* %4
  %42 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 0
  %43 = load %"class.blink::SQLiteDatabase"*, %"class.blink::SQLiteDatabase"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::SQLiteDatabase", %"class.blink::SQLiteDatabase"* %43, i64 0, i32 0
  %45 = add i32 %40, 1
  %46 = load %struct.sqlite3*, %struct.sqlite3** %44, align 8
  %47 = call i32 @chrome_sqlite3_prepare_v3(%struct.sqlite3* %46, i8* %41, i32 %45, i32 0, %struct.sqlite3_stmt** nonnull %31, i8** nonnull %29) #8
  %48 = bitcast i8* %30 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %51 = bitcast %struct.sqlite3_stmt** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = icmp eq i32 %47, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %27
  %54 = load i8*, i8** %29, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %53
  %57 = load i8, i8* %54, align 1
  %58 = icmp ne i8 %57, 0
  %59 = zext i1 %58 to i32
  br label %60

60:                                               ; preds = %56, %53, %27
  %61 = phi i32 [ %47, %27 ], [ 0, %53 ], [ %59, %56 ]
  %62 = call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %61)
  call void @_ZdlPv(i8* nonnull %30) #9
  call void @_ZdlPv(i8* nonnull %28) #9
  %63 = load i8, i8* %33, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %66) #9
  br label %67

67:                                               ; preds = %60, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret i32 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #2

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @chrome_sqlite3_prepare_v3(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt**, i8**) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32) unnamed_addr #3 {
  switch i32 %0, label %2 [
    i32 266, label %4
    i32 522, label %4
    i32 778, label %4
    i32 1034, label %4
    i32 1290, label %4
    i32 1546, label %4
    i32 1802, label %4
    i32 2058, label %4
    i32 2314, label %4
    i32 2570, label %4
    i32 2826, label %4
    i32 3082, label %4
    i32 3338, label %4
    i32 3594, label %4
    i32 3850, label %4
    i32 4106, label %4
    i32 4362, label %4
    i32 4618, label %4
    i32 4874, label %4
    i32 5130, label %4
    i32 262, label %4
    i32 261, label %4
    i32 270, label %4
  ]

2:                                                ; preds = %1
  %3 = and i32 %0, 255
  br label %4

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %5 = phi i32 [ %3, %2 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ]
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15SQLiteStatement4StepEv(%"class.blink::SQLiteStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %3 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %2, align 8
  %4 = icmp eq %struct.sqlite3_stmt* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 0
  %7 = load %"class.blink::SQLiteDatabase"*, %"class.blink::SQLiteDatabase"** %6, align 8
  tail call void @_ZN5blink14SQLiteDatabase22UpdateLastChangesCountEv(%"class.blink::SQLiteDatabase"* %7) #8
  %8 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %2, align 8
  %9 = tail call i32 @chrome_sqlite3_step(%struct.sqlite3_stmt* %8) #8
  %10 = tail call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %9)
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i32 [ %10, %5 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink14SQLiteDatabase22UpdateLastChangesCountEv(%"class.blink::SQLiteDatabase"*) local_unnamed_addr #2

declare i32 @chrome_sqlite3_step(%struct.sqlite3_stmt*) local_unnamed_addr #2

declare i32 @chrome_sqlite3_finalize(%struct.sqlite3_stmt*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15SQLiteStatement14ExecuteCommandEv(%"class.blink::SQLiteStatement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %3 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %2, align 8
  %4 = icmp eq %struct.sqlite3_stmt* %3, null
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = tail call i32 @_ZN5blink15SQLiteStatement7PrepareEv(%"class.blink::SQLiteStatement"* %0)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %5
  %9 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %2, align 8
  %10 = icmp eq %struct.sqlite3_stmt* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 0
  %13 = load %"class.blink::SQLiteDatabase"*, %"class.blink::SQLiteDatabase"** %12, align 8
  tail call void @_ZN5blink14SQLiteDatabase22UpdateLastChangesCountEv(%"class.blink::SQLiteDatabase"* %13) #8
  %14 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %2, align 8
  %15 = tail call i32 @chrome_sqlite3_step(%struct.sqlite3_stmt* %14) #8
  %16 = tail call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %15) #8
  %17 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %2, align 8
  %18 = icmp eq i32 %16, 101
  %19 = icmp eq %struct.sqlite3_stmt* %17, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %11
  %21 = tail call i32 @chrome_sqlite3_finalize(%struct.sqlite3_stmt* nonnull %17) #8
  store %struct.sqlite3_stmt* null, %struct.sqlite3_stmt** %2, align 8
  br i1 %18, label %23, label %24

22:                                               ; preds = %11
  br i1 %18, label %23, label %24

23:                                               ; preds = %20, %22
  br label %24

24:                                               ; preds = %8, %23, %22, %20, %5
  %25 = phi i1 [ false, %5 ], [ true, %23 ], [ false, %22 ], [ false, %20 ], [ false, %8 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15SQLiteStatement8BindTextEiRKN3WTF6StringE(%"class.blink::SQLiteStatement"* nocapture readonly, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %6, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #8
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #8
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %3, %10, %25
  call void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"* nonnull %4) #8
  %28 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %29 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %28, align 8
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  %33 = bitcast %"class.WTF::StringImpl"* %32 to i8*
  %34 = select i1 %31, i8* null, i8* %33
  br i1 %31, label %39, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = shl i32 %37, 1
  br label %39

39:                                               ; preds = %27, %35
  %40 = phi i32 [ %38, %35 ], [ 0, %27 ]
  %41 = call i32 @chrome_sqlite3_bind_text16(%struct.sqlite3_stmt* %29, i32 %1, i8* %34, i32 %40, void (i8*)* nonnull inttoptr (i64 -1 to void (i8*)*)) #8
  %42 = call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %41)
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #8
  br label %58

58:                                               ; preds = %39, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret i32 %42
}

declare void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"*) local_unnamed_addr #2

declare i32 @chrome_sqlite3_bind_text16(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15SQLiteStatement10BindDoubleEid(%"class.blink::SQLiteStatement"* nocapture readonly, i32, double) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %5 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %6 = tail call i32 @chrome_sqlite3_bind_double(%struct.sqlite3_stmt* %5, i32 %1, double %2) #8
  %7 = tail call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %6)
  ret i32 %7
}

declare i32 @chrome_sqlite3_bind_double(%struct.sqlite3_stmt*, i32, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15SQLiteStatement8BindNullEi(%"class.blink::SQLiteStatement"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %4 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %5 = tail call i32 @chrome_sqlite3_bind_null(%struct.sqlite3_stmt* %4, i32 %1) #8
  %6 = tail call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %5)
  ret i32 %6
}

declare i32 @chrome_sqlite3_bind_null(%struct.sqlite3_stmt*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15SQLiteStatement9BindValueEiRKNS_8SQLValueE(%"class.blink::SQLiteStatement"* nocapture readonly, i32, %"class.blink::SQLValue"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %2, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %38 [
    i32 2, label %7
    i32 1, label %27
    i32 0, label %33
  ]

7:                                                ; preds = %3
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8SQLValue9GetStringEv(%"class.blink::SQLValue"* %2) #8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = call i32 @_ZN5blink15SQLiteStatement8BindTextEiRKN3WTF6StringE(%"class.blink::SQLiteStatement"* %0, i32 %1, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %12 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #8
  br label %26

26:                                               ; preds = %7, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  br label %38

27:                                               ; preds = %3
  %28 = tail call double @_ZNK5blink8SQLValue6NumberEv(%"class.blink::SQLValue"* %2) #8
  %29 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %30 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %29, align 8
  %31 = tail call i32 @chrome_sqlite3_bind_double(%struct.sqlite3_stmt* %30, i32 %1, double %28) #8
  %32 = tail call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %31) #8
  br label %38

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %35 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %34, align 8
  %36 = tail call i32 @chrome_sqlite3_bind_null(%struct.sqlite3_stmt* %35, i32 %1) #8
  %37 = tail call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %36) #8
  br label %38

38:                                               ; preds = %3, %33, %27, %26
  %39 = phi i32 [ %37, %33 ], [ %32, %27 ], [ %11, %26 ], [ 1, %3 ]
  ret i32 %39
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8SQLValue9GetStringEv(%"class.blink::SQLValue"*) local_unnamed_addr #2

declare double @_ZNK5blink8SQLValue6NumberEv(%"class.blink::SQLValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15SQLiteStatement18BindParameterCountEv(%"class.blink::SQLiteStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %3 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %2, align 8
  %4 = icmp eq %struct.sqlite3_stmt* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @chrome_sqlite3_bind_parameter_count(%struct.sqlite3_stmt* nonnull %3) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ 0, %1 ]
  ret i32 %8
}

declare i32 @chrome_sqlite3_bind_parameter_count(%struct.sqlite3_stmt*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15SQLiteStatement11ColumnCountEv(%"class.blink::SQLiteStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %3 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %2, align 8
  %4 = icmp eq %struct.sqlite3_stmt* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @chrome_sqlite3_data_count(%struct.sqlite3_stmt* nonnull %3) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ 0, %1 ]
  ret i32 %8
}

declare i32 @chrome_sqlite3_data_count(%struct.sqlite3_stmt*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink15SQLiteStatement13GetColumnNameEi(%"class.blink::SQLiteStatement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %5 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %6 = icmp eq %struct.sqlite3_stmt* %5, null
  br i1 %6, label %7, label %27

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN5blink15SQLiteStatement7PrepareEv(%"class.blink::SQLiteStatement"* %0) #8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %7
  %11 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %12 = icmp eq %struct.sqlite3_stmt* %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 0
  %15 = load %"class.blink::SQLiteDatabase"*, %"class.blink::SQLiteDatabase"** %14, align 8
  tail call void @_ZN5blink14SQLiteDatabase22UpdateLastChangesCountEv(%"class.blink::SQLiteDatabase"* %15) #8
  %16 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %17 = tail call i32 @chrome_sqlite3_step(%struct.sqlite3_stmt* %16) #8
  %18 = tail call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %17) #8
  br label %19

19:                                               ; preds = %7, %13
  %20 = phi i32 [ %8, %7 ], [ %18, %13 ]
  %21 = icmp eq i32 %20, 100
  br i1 %21, label %24, label %22

22:                                               ; preds = %10, %19
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  br label %41

24:                                               ; preds = %19
  %25 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %26 = icmp eq %struct.sqlite3_stmt* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %2, %24
  %28 = phi %struct.sqlite3_stmt* [ %25, %24 ], [ %5, %2 ]
  %29 = tail call i32 @chrome_sqlite3_data_count(%struct.sqlite3_stmt* nonnull %28) #8
  br label %30

30:                                               ; preds = %24, %27
  %31 = phi i32 [ %29, %27 ], [ 0, %24 ]
  %32 = icmp sgt i32 %31, %1
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  br label %41

35:                                               ; preds = %30
  %36 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %37 = tail call i8* @chrome_sqlite3_column_name16(%struct.sqlite3_stmt* %36, i32 %1) #8
  %38 = bitcast i8* %37 to i16*
  call void @_ZN3WTF6StringC1EPKDs(%"class.WTF::String"* nonnull %3, i16* %38) #8
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  br label %41

41:                                               ; preds = %35, %33, %22
  %42 = phi %"class.WTF::StringImpl"* [ %40, %35 ], [ null, %33 ], [ null, %22 ]
  ret %"class.WTF::StringImpl"* %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i8* @chrome_sqlite3_column_name16(%struct.sqlite3_stmt*, i32) local_unnamed_addr #2

declare void @_ZN3WTF6StringC1EPKDs(%"class.WTF::String"*, i16*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15SQLiteStatement14GetColumnValueEi(%"class.blink::SQLValue"* noalias nocapture sret, %"class.blink::SQLiteStatement"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %1, i64 0, i32 2
  %5 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %6 = icmp eq %struct.sqlite3_stmt* %5, null
  br i1 %6, label %7, label %29

7:                                                ; preds = %3
  %8 = tail call i32 @_ZN5blink15SQLiteStatement7PrepareEv(%"class.blink::SQLiteStatement"* %1) #8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %7
  %11 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %12 = icmp eq %struct.sqlite3_stmt* %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %1, i64 0, i32 0
  %15 = load %"class.blink::SQLiteDatabase"*, %"class.blink::SQLiteDatabase"** %14, align 8
  tail call void @_ZN5blink14SQLiteDatabase22UpdateLastChangesCountEv(%"class.blink::SQLiteDatabase"* %15) #8
  %16 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %17 = tail call i32 @chrome_sqlite3_step(%struct.sqlite3_stmt* %16) #8
  %18 = tail call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %17) #8
  br label %19

19:                                               ; preds = %7, %13
  %20 = phi i32 [ %8, %7 ], [ %18, %13 ]
  %21 = icmp eq i32 %20, 100
  br i1 %21, label %26, label %22

22:                                               ; preds = %10, %19
  %23 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 0
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 1
  %25 = bitcast double* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #8
  br label %97

26:                                               ; preds = %19
  %27 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %28 = icmp eq %struct.sqlite3_stmt* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %3, %26
  %30 = phi %struct.sqlite3_stmt* [ %27, %26 ], [ %5, %3 ]
  %31 = tail call i32 @chrome_sqlite3_data_count(%struct.sqlite3_stmt* nonnull %30) #8
  br label %32

32:                                               ; preds = %26, %29
  %33 = phi i32 [ %31, %29 ], [ 0, %26 ]
  %34 = icmp sgt i32 %33, %2
  br i1 %34, label %39, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 0
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 1
  %38 = bitcast double* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #8
  br label %97

39:                                               ; preds = %32
  %40 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %41 = tail call i32 @chrome_sqlite3_column_type(%struct.sqlite3_stmt* %40, i32 %2) #8
  switch i32 %41, label %93 [
    i32 1, label %42
    i32 2, label %42
    i32 4, label %48
    i32 3, label %48
    i32 5, label %89
  ]

42:                                               ; preds = %39, %39
  %43 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %44 = tail call double @chrome_sqlite3_column_double(%struct.sqlite3_stmt* %43, i32 %2) #8
  %45 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 0
  store i32 1, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 1
  store double %44, double* %46, align 8
  %47 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %47, align 8
  br label %97

48:                                               ; preds = %39, %39
  %49 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %50 = tail call i8* @chrome_sqlite3_column_text16(%struct.sqlite3_stmt* %49, i32 %2) #8
  %51 = bitcast i8* %50 to i16*
  %52 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %4, align 8
  %53 = tail call i32 @chrome_sqlite3_column_bytes16(%struct.sqlite3_stmt* %52, i32 %2) #8
  %54 = ashr i32 %53, 1
  %55 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl20Create8BitIfPossibleEPKDsj(i16* %51, i32 %54) #8
  %56 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 0
  store i32 2, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 1
  store double 0.000000e+00, double* %57, align 8
  %58 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %58, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %59, label %97, label %60

60:                                               ; preds = %48
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %77

67:                                               ; preds = %60
  %68 = zext i32 %66 to i33
  %69 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #8
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %67
  tail call void @llvm.trap() #8
  unreachable

75:                                               ; preds = %67
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %65, align 4
  br label %77

77:                                               ; preds = %60, %75
  %78 = phi i32 [ %76, %75 ], [ %66, %60 ]
  %79 = load atomic i32, i32* %61 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %84 = add i32 %78, -1
  store i32 %84, i32* %83, align 4
  br label %85

85:                                               ; preds = %82, %77
  %86 = phi i32 [ %84, %82 ], [ %78, %77 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %97

88:                                               ; preds = %85
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #8
  br label %97

89:                                               ; preds = %39
  %90 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 0
  store i32 0, i32* %90, align 8
  %91 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 1
  %92 = bitcast double* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #8
  br label %97

93:                                               ; preds = %39
  %94 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 0
  store i32 0, i32* %94, align 8
  %95 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %0, i64 0, i32 1
  %96 = bitcast double* %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #8
  br label %97

97:                                               ; preds = %88, %85, %48, %93, %89, %42, %35, %22
  ret void
}

declare i32 @chrome_sqlite3_column_type(%struct.sqlite3_stmt*, i32) local_unnamed_addr #2

declare double @chrome_sqlite3_column_double(%struct.sqlite3_stmt*, i32) local_unnamed_addr #2

declare i8* @chrome_sqlite3_column_text16(%struct.sqlite3_stmt*, i32) local_unnamed_addr #2

declare i32 @chrome_sqlite3_column_bytes16(%struct.sqlite3_stmt*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl20Create8BitIfPossibleEPKDsj(i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink15SQLiteStatement13GetColumnTextEi(%"class.blink::SQLiteStatement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %4 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %5 = icmp eq %struct.sqlite3_stmt* %4, null
  br i1 %5, label %6, label %24

6:                                                ; preds = %2
  %7 = tail call i32 @_ZN5blink15SQLiteStatement7PrepareEv(%"class.blink::SQLiteStatement"* %0) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %6
  %10 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %11 = icmp eq %struct.sqlite3_stmt* %10, null
  br i1 %11, label %38, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 0
  %14 = load %"class.blink::SQLiteDatabase"*, %"class.blink::SQLiteDatabase"** %13, align 8
  tail call void @_ZN5blink14SQLiteDatabase22UpdateLastChangesCountEv(%"class.blink::SQLiteDatabase"* %14) #8
  %15 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %16 = tail call i32 @chrome_sqlite3_step(%struct.sqlite3_stmt* %15) #8
  %17 = tail call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %16) #8
  br label %18

18:                                               ; preds = %6, %12
  %19 = phi i32 [ %7, %6 ], [ %17, %12 ]
  %20 = icmp eq i32 %19, 100
  br i1 %20, label %21, label %38

21:                                               ; preds = %18
  %22 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %23 = icmp eq %struct.sqlite3_stmt* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %2, %21
  %25 = phi %struct.sqlite3_stmt* [ %22, %21 ], [ %4, %2 ]
  %26 = tail call i32 @chrome_sqlite3_data_count(%struct.sqlite3_stmt* nonnull %25) #8
  br label %27

27:                                               ; preds = %21, %24
  %28 = phi i32 [ %26, %24 ], [ 0, %21 ]
  %29 = icmp sgt i32 %28, %1
  br i1 %29, label %30, label %38

30:                                               ; preds = %27
  %31 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %32 = tail call i8* @chrome_sqlite3_column_text16(%struct.sqlite3_stmt* %31, i32 %1) #8
  %33 = bitcast i8* %32 to i16*
  %34 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %35 = tail call i32 @chrome_sqlite3_column_bytes16(%struct.sqlite3_stmt* %34, i32 %1) #8
  %36 = ashr i32 %35, 1
  %37 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl20Create8BitIfPossibleEPKDsj(i16* %33, i32 %36) #8
  br label %38

38:                                               ; preds = %9, %27, %18, %30
  %39 = phi %"class.WTF::StringImpl"* [ %37, %30 ], [ null, %18 ], [ null, %27 ], [ null, %9 ]
  ret %"class.WTF::StringImpl"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15SQLiteStatement12GetColumnIntEi(%"class.blink::SQLiteStatement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %4 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %5 = icmp eq %struct.sqlite3_stmt* %4, null
  br i1 %5, label %6, label %24

6:                                                ; preds = %2
  %7 = tail call i32 @_ZN5blink15SQLiteStatement7PrepareEv(%"class.blink::SQLiteStatement"* %0) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %6
  %10 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %11 = icmp eq %struct.sqlite3_stmt* %10, null
  br i1 %11, label %33, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 0
  %14 = load %"class.blink::SQLiteDatabase"*, %"class.blink::SQLiteDatabase"** %13, align 8
  tail call void @_ZN5blink14SQLiteDatabase22UpdateLastChangesCountEv(%"class.blink::SQLiteDatabase"* %14) #8
  %15 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %16 = tail call i32 @chrome_sqlite3_step(%struct.sqlite3_stmt* %15) #8
  %17 = tail call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %16) #8
  br label %18

18:                                               ; preds = %6, %12
  %19 = phi i32 [ %7, %6 ], [ %17, %12 ]
  %20 = icmp eq i32 %19, 100
  br i1 %20, label %21, label %33

21:                                               ; preds = %18
  %22 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %23 = icmp eq %struct.sqlite3_stmt* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %2, %21
  %25 = phi %struct.sqlite3_stmt* [ %22, %21 ], [ %4, %2 ]
  %26 = tail call i32 @chrome_sqlite3_data_count(%struct.sqlite3_stmt* nonnull %25) #8
  br label %27

27:                                               ; preds = %21, %24
  %28 = phi i32 [ %26, %24 ], [ 0, %21 ]
  %29 = icmp sgt i32 %28, %1
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %32 = tail call i32 @chrome_sqlite3_column_int(%struct.sqlite3_stmt* %31, i32 %1) #8
  br label %33

33:                                               ; preds = %9, %27, %18, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %18 ], [ 0, %27 ], [ 0, %9 ]
  ret i32 %34
}

declare i32 @chrome_sqlite3_column_int(%struct.sqlite3_stmt*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink15SQLiteStatement14GetColumnInt64Ei(%"class.blink::SQLiteStatement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 2
  %4 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %5 = icmp eq %struct.sqlite3_stmt* %4, null
  br i1 %5, label %6, label %24

6:                                                ; preds = %2
  %7 = tail call i32 @_ZN5blink15SQLiteStatement7PrepareEv(%"class.blink::SQLiteStatement"* %0) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %6
  %10 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %11 = icmp eq %struct.sqlite3_stmt* %10, null
  br i1 %11, label %33, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::SQLiteStatement", %"class.blink::SQLiteStatement"* %0, i64 0, i32 0
  %14 = load %"class.blink::SQLiteDatabase"*, %"class.blink::SQLiteDatabase"** %13, align 8
  tail call void @_ZN5blink14SQLiteDatabase22UpdateLastChangesCountEv(%"class.blink::SQLiteDatabase"* %14) #8
  %15 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %16 = tail call i32 @chrome_sqlite3_step(%struct.sqlite3_stmt* %15) #8
  %17 = tail call fastcc i32 @_ZN12_GLOBAL__N_113restrictErrorEi(i32 %16) #8
  br label %18

18:                                               ; preds = %6, %12
  %19 = phi i32 [ %7, %6 ], [ %17, %12 ]
  %20 = icmp eq i32 %19, 100
  br i1 %20, label %21, label %33

21:                                               ; preds = %18
  %22 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %23 = icmp eq %struct.sqlite3_stmt* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %2, %21
  %25 = phi %struct.sqlite3_stmt* [ %22, %21 ], [ %4, %2 ]
  %26 = tail call i32 @chrome_sqlite3_data_count(%struct.sqlite3_stmt* nonnull %25) #8
  br label %27

27:                                               ; preds = %21, %24
  %28 = phi i32 [ %26, %24 ], [ 0, %21 ]
  %29 = icmp sgt i32 %28, %1
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %3, align 8
  %32 = tail call i64 @chrome_sqlite3_column_int64(%struct.sqlite3_stmt* %31, i32 %1) #8
  br label %33

33:                                               ; preds = %9, %27, %18, %30
  %34 = phi i64 [ %32, %30 ], [ 0, %18 ], [ 0, %27 ], [ 0, %9 ]
  ret i64 %34
}

declare i64 @chrome_sqlite3_column_int64(%struct.sqlite3_stmt*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
