; ModuleID = '../../third_party/skia/src/image/SkSurface.cpp'
source_filename = "../../third_party/skia/src/image/SkSurface.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkSurfaceProps = type { i32, i32 }
%class.SkSurface_Base = type { %class.SkSurface, %"class.std::__1::unique_ptr", %class.sk_sp.15 }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkCanvas* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.1, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.2", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.6" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.sk_sp.15 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.16, i32, i32 }
%class.sk_sp.16 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.17" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.43", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.26 }
%class.sk_sp.26 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type <{ %class.SkNVRefCnt.27, i32, %struct.GrContextOptions, i32, [4 x i8], %class.sk_sp.28, %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %class.sk_sp.42, %"struct.std::__1::atomic.22", [7 x i8] }>
%class.SkNVRefCnt.27 = type { %"struct.std::__1::atomic" }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.28 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.29, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.29 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.GrTextBlobCache* }
%class.GrTextBlobCache = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.GrThreadSafeCache* }
%class.GrThreadSafeCache = type opaque
%class.sk_sp.42 = type { %class.GrThreadSafePipelineBuilder* }
%class.GrThreadSafePipelineBuilder = type opaque
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i8 }
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.58 }
%class.SkFibBlockSizes.58 = type { i32 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon, %class.sk_sp.75 }
%union.anon = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.74, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.74 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.75 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%class.GrBackendRenderTarget = type { i8, i8, i32, i32, i32, i32, i32, %union.anon.76, %class.sk_sp.75 }
%union.anon.76 = type { %struct.GrGLFramebufferInfo, [136 x i8] }
%struct.GrGLFramebufferInfo = type { i32, i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkPaint = type <{ %class.sk_sp.77, %class.sk_sp.78, %class.sk_sp.79, %class.sk_sp.80, %class.sk_sp.81, %struct.SkRGBA4f, float, float, %union.anon.82, [4 x i8] }>
%class.sk_sp.77 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.78 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.79 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.80 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.81 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.82 = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.SkImage::AsyncReadResult" = type { i32 (...)** }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.SkBitmap = type { %class.sk_sp.89, %class.SkPixmap, %class.sk_sp.90 }
%class.sk_sp.89 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.90 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp.16, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon.91, i8*, i64, i32, i32, i8, i8 }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%union.anon.91 = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%struct.SkSize = type { float, float }
%class.sk_sp.97 = type { %class.SkSurface* }
%struct.GrFlushInfo = type { i32, %class.GrBackendSemaphore*, void (i8*)*, i8*, void (i8*, i1)*, i8* }
%class.GrBackendSemaphore = type opaque
%class.GrBackendSurfaceMutableState = type <{ %union.anon.98, i32, i8, [3 x i8] }>
%union.anon.98 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.99", %"struct.std::__1::atomic.92" }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__cxx_atomic_impl.101" }
%"struct.std::__1::__cxx_atomic_impl.101" = type { %"struct.std::__1::__cxx_atomic_base_impl.102" }
%"struct.std::__1::__cxx_atomic_base_impl.102" = type { i32 }
%"struct.std::__1::atomic.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__cxx_atomic_impl.95" }
%"struct.std::__1::__cxx_atomic_impl.95" = type { %"struct.std::__1::__cxx_atomic_base_impl.96" }
%"struct.std::__1::__cxx_atomic_base_impl.96" = type { i32 }
%class.SkSurfaceCharacterization = type { %class.sk_sp.26, i64, %struct.SkImageInfo, %class.GrBackendFormat, i32, i32, i8, i8, i8, i8, i8, i8, %class.SkSurfaceProps }
%class.GrBackendFormat = type { i32, i8, %union.anon.103, i32, [4 x i8] }
%union.anon.103 = type { %struct.anon.104 }
%struct.anon.104 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.sk_sp.106 = type { %class.SkDeferredDisplayList* }
%class.SkDeferredDisplayList = type { %class.SkNVRefCnt.107, %class.SkSurfaceCharacterization, %"class.std::__1::map", %"class.GrRecordingContext::OwnedArenas", %class.SkTArray, %class.SkTArray.115, %class.sk_sp.123, %class.sk_sp.165 }
%class.SkNVRefCnt.107 = type { %"struct.std::__1::atomic" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { i64 }
%class.SkTArray = type { %class.sk_sp.114*, i64 }
%class.sk_sp.114 = type opaque
%class.SkTArray.115 = type { %"struct.GrRecordingContext::ProgramData"*, i64 }
%"struct.GrRecordingContext::ProgramData" = type { %"class.std::__1::unique_ptr.116", %class.GrProgramInfo* }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %class.GrProgramDesc* }
%class.GrProgramDesc = type <{ %class.SkSTArray, i32, [4 x i8] }>
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.119 }
%class.SkAlignedSTStorage = type { [132 x i8] }
%class.SkTArray.119 = type { i32*, i64 }
%class.GrProgramInfo = type opaque
%class.sk_sp.123 = type { %class.GrRenderTargetProxy* }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.124, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.sk_sp.124 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.125, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.125 = type { %"struct.std::__1::atomic" }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.126, %class.sk_sp.127, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.160" }
%class.SkNVRefCnt.126 = type { %"struct.std::__1::atomic" }
%class.sk_sp.127 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.131 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.128, [4 x i8] }>
%union.anon.128 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.129, i8* }
%class.sk_sp.129 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.130, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.130 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.131 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.132, void (i8*)*, i8* }
%class.SkNVRefCnt.132 = type { %"struct.std::__1::atomic" }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.127, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.28, %class.sk_sp.159, %class.sk_sp.159 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.140, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.134" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.140 = type { %class.SkTHashTable.141 }
%class.SkTHashTable.141 = type { i32, i32, %class.SkAutoTArray.142 }
%class.SkAutoTArray.142 = type { %"class.std::__1::unique_ptr.143" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.149, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.149 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.150, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.150 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.151 }
%class.SkTHashTable.151 = type { i32, i32, %class.SkAutoTArray.152 }
%class.SkAutoTArray.152 = type { %"class.std::__1::unique_ptr.153" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.159 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.160" = type { %"struct.std::__1::__atomic_base.161" }
%"struct.std::__1::__atomic_base.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i64 }
%class.sk_sp.165 = type { %"class.SkDeferredDisplayList::LazyProxyData"* }
%"class.SkDeferredDisplayList::LazyProxyData" = type { %class.SkRefCnt.base, %class.GrRenderTargetProxy* }
%class.SkImage_Base = type { %class.SkImage.base, %"struct.std::__1::atomic.22", [3 x i8] }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%class.SkNullSurface = type { %class.SkSurface_Base }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN14SkSurface_Base18onNewImageSnapshotEPK7SkIRect = comdat any

$_ZN14SkSurface_Base9onDiscardEv = comdat any

$_ZN14SkSurface_Base26onRestoreBackingMutabilityEv = comdat any

$_ZN14SkSurface_Base7onFlushEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState = comdat any

$_ZN14SkSurface_Base6onWaitEiPK18GrBackendSemaphoreb = comdat any

$_ZNK14SkSurface_Base14onCharacterizeEP25SkSurfaceCharacterization = comdat any

$_ZNK14SkSurface_Base14onIsCompatibleERK25SkSurfaceCharacterization = comdat any

$_ZN14SkSurface_Base6onDrawE5sk_spIK21SkDeferredDisplayListE8SkIPoint = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN9SkSurfaceD0Ev = comdat any

$_ZN13SkNullSurfaceD0Ev = comdat any

$_ZN13SkNullSurface11onNewCanvasEv = comdat any

$_ZN13SkNullSurface12onNewSurfaceERK11SkImageInfo = comdat any

$_ZN13SkNullSurface18onNewImageSnapshotEPK7SkIRect = comdat any

$_ZN13SkNullSurface13onWritePixelsERK8SkPixmapii = comdat any

$_ZN13SkNullSurface6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint = comdat any

$_ZN13SkNullSurface13onCopyOnWriteEN9SkSurface17ContentChangeModeE = comdat any

$_ZTV9SkSurface = comdat any

$_ZTV13SkNullSurface = comdat any

@_ZTV14SkSurface_Base = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkSurface_Base*)* @_ZN14SkSurface_BaseD2Ev to i8*), i8* bitcast (void (%class.SkSurface_Base*)* @_ZN14SkSurface_BaseD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkSurface_Base*)* @_ZN14SkSurface_Base21onGetRecordingContextEv to i8*), i8* bitcast (void (%class.GrBackendTexture*, %class.SkSurface_Base*, i32)* @_ZN14SkSurface_Base19onGetBackendTextureEN9SkSurface19BackendHandleAccessE to i8*), i8* bitcast (void (%class.GrBackendRenderTarget*, %class.SkSurface_Base*, i32)* @_ZN14SkSurface_Base24onGetBackendRenderTargetEN9SkSurface19BackendHandleAccessE to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, %class.GrBackendTexture*, i32, i32, void (i8*)*, i8*)* @_ZN14SkSurface_Base23onReplaceBackendTextureERK16GrBackendTexture15GrSurfaceOriginN9SkSurface17ContentChangeModeEPFvPvES6_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)* @_ZN14SkSurface_Base18onNewImageSnapshotEPK7SkIRect to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkSurface_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)* @_ZN14SkSurface_Base27onAsyncRescaleAndReadPixelsERK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_ to i8*), i8* bitcast (void (%class.SkSurface_Base*, i32, %class.sk_sp.16*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)* @_ZN14SkSurface_Base33onAsyncRescaleAndReadPixelsYUV420E15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRectRK7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_ to i8*), i8* bitcast (void (%class.SkSurface_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN14SkSurface_Base6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint to i8*), i8* bitcast (void (%class.SkSurface_Base*)* @_ZN14SkSurface_Base9onDiscardEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkSurface_Base*)* @_ZN14SkSurface_Base26onRestoreBackingMutabilityEv to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)* @_ZN14SkSurface_Base7onFlushEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, i32, %class.GrBackendSemaphore*, i1)* @_ZN14SkSurface_Base6onWaitEiPK18GrBackendSemaphoreb to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)* @_ZNK14SkSurface_Base14onCharacterizeEP25SkSurfaceCharacterization to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)* @_ZNK14SkSurface_Base14onIsCompatibleERK25SkSurfaceCharacterization to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, %class.sk_sp.106*, i64)* @_ZN14SkSurface_Base6onDrawE5sk_spIK21SkDeferredDisplayListE8SkIPoint to i8*)] }, align 8
@_ZZN14SkSurface_Base15newGenerationIDEvE6nextID = internal global { { i32 } } { { i32 } { i32 1 } }, align 4
@_ZTV9SkSurface = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkSurface*)* @_ZN9SkSurfaceD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, comdat, align 8
@_ZTV13SkNullSurface = linkonce_odr hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkSurface_Base*)* @_ZN14SkSurface_BaseD2Ev to i8*), i8* bitcast (void (%class.SkNullSurface*)* @_ZN13SkNullSurfaceD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkSurface_Base*)* @_ZN14SkSurface_Base21onGetRecordingContextEv to i8*), i8* bitcast (void (%class.GrBackendTexture*, %class.SkSurface_Base*, i32)* @_ZN14SkSurface_Base19onGetBackendTextureEN9SkSurface19BackendHandleAccessE to i8*), i8* bitcast (void (%class.GrBackendRenderTarget*, %class.SkSurface_Base*, i32)* @_ZN14SkSurface_Base24onGetBackendRenderTargetEN9SkSurface19BackendHandleAccessE to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, %class.GrBackendTexture*, i32, i32, void (i8*)*, i8*)* @_ZN14SkSurface_Base23onReplaceBackendTextureERK16GrBackendTexture15GrSurfaceOriginN9SkSurface17ContentChangeModeEPFvPvES6_ to i8*), i8* bitcast (%class.SkCanvas* (%class.SkNullSurface*)* @_ZN13SkNullSurface11onNewCanvasEv to i8*), i8* bitcast (void (%class.sk_sp.97*, %class.SkNullSurface*, %struct.SkImageInfo*)* @_ZN13SkNullSurface12onNewSurfaceERK11SkImageInfo to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkNullSurface*, %struct.SkIRect*)* @_ZN13SkNullSurface18onNewImageSnapshotEPK7SkIRect to i8*), i8* bitcast (void (%class.SkNullSurface*, %class.SkPixmap*, i32, i32)* @_ZN13SkNullSurface13onWritePixelsERK8SkPixmapii to i8*), i8* bitcast (void (%class.SkSurface_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)* @_ZN14SkSurface_Base27onAsyncRescaleAndReadPixelsERK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_ to i8*), i8* bitcast (void (%class.SkSurface_Base*, i32, %class.sk_sp.16*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)* @_ZN14SkSurface_Base33onAsyncRescaleAndReadPixelsYUV420E15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRectRK7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_ to i8*), i8* bitcast (void (%class.SkNullSurface*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN13SkNullSurface6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint to i8*), i8* bitcast (void (%class.SkSurface_Base*)* @_ZN14SkSurface_Base9onDiscardEv to i8*), i8* bitcast (void (%class.SkNullSurface*, i32)* @_ZN13SkNullSurface13onCopyOnWriteEN9SkSurface17ContentChangeModeE to i8*), i8* bitcast (void (%class.SkSurface_Base*)* @_ZN14SkSurface_Base26onRestoreBackingMutabilityEv to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)* @_ZN14SkSurface_Base7onFlushEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, i32, %class.GrBackendSemaphore*, i1)* @_ZN14SkSurface_Base6onWaitEiPK18GrBackendSemaphoreb to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)* @_ZNK14SkSurface_Base14onCharacterizeEP25SkSurfaceCharacterization to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)* @_ZNK14SkSurface_Base14onIsCompatibleERK25SkSurfaceCharacterization to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, %class.sk_sp.106*, i64)* @_ZN14SkSurface_Base6onDrawE5sk_spIK21SkDeferredDisplayListE8SkIPoint to i8*)] }, comdat, align 8

@_ZN14SkSurfacePropsC1Ev = hidden unnamed_addr alias void (%class.SkSurfaceProps*), void (%class.SkSurfaceProps*)* @_ZN14SkSurfacePropsC2Ev
@_ZN14SkSurfacePropsC1Ej15SkPixelGeometry = hidden unnamed_addr alias void (%class.SkSurfaceProps*, i32, i32), void (%class.SkSurfaceProps*, i32, i32)* @_ZN14SkSurfacePropsC2Ej15SkPixelGeometry
@_ZN14SkSurfacePropsC1ERKS_ = hidden unnamed_addr alias void (%class.SkSurfaceProps*, %class.SkSurfaceProps*), void (%class.SkSurfaceProps*, %class.SkSurfaceProps*)* @_ZN14SkSurfacePropsC2ERKS_
@_ZN14SkSurface_BaseD1Ev = hidden unnamed_addr alias void (%class.SkSurface_Base*), void (%class.SkSurface_Base*)* @_ZN14SkSurface_BaseD2Ev
@_ZN9SkSurfaceC1EiiPK14SkSurfaceProps = hidden unnamed_addr alias void (%class.SkSurface*, i32, i32, %class.SkSurfaceProps*), void (%class.SkSurface*, i32, i32, %class.SkSurfaceProps*)* @_ZN9SkSurfaceC2EiiPK14SkSurfaceProps
@_ZN9SkSurfaceC1ERK11SkImageInfoPK14SkSurfaceProps = hidden unnamed_addr alias void (%class.SkSurface*, %struct.SkImageInfo*, %class.SkSurfaceProps*), void (%class.SkSurface*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN9SkSurfaceC2ERK11SkImageInfoPK14SkSurfaceProps

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14SkSurfacePropsC2Ev(%class.SkSurfaceProps* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14SkSurfacePropsC2Ej15SkPixelGeometry(%class.SkSurfaceProps* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14SkSurfacePropsC2ERKS_(%class.SkSurfaceProps* nocapture, %class.SkSurfaceProps* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = bitcast %class.SkSurfaceProps* %1 to i64*
  %4 = bitcast %class.SkSurfaceProps* %0 to i64*
  %5 = load i64, i64* %3, align 4
  store i64 %5, i64* %4, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(8) %class.SkSurfaceProps* @_ZN14SkSurfacePropsaSERKS_(%class.SkSurfaceProps* returned, %class.SkSurfaceProps* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %class.SkSurfaceProps* %1 to i64*
  %4 = bitcast %class.SkSurfaceProps* %0 to i64*
  %5 = load i64, i64* %3, align 4
  store i64 %5, i64* %4, align 4
  ret %class.SkSurfaceProps* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14SkSurface_BaseC2EiiPK14SkSurfaceProps(%class.SkSurface_Base* nocapture, i32, i32, %class.SkSurfaceProps* readonly) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 1
  %8 = icmp eq %class.SkSurfaceProps* %3, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = bitcast %class.SkSurfaceProps* %3 to i64*
  %11 = bitcast %class.SkSurfaceProps* %7 to i64*
  %12 = load i64, i64* %10, align 4, !noalias !2
  store i64 %12, i64* %11, align 4, !alias.scope !2
  br label %16

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %7, i64 0, i32 0
  store i32 0, i32* %14, align 4, !alias.scope !2
  %15 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 1, i32 1
  store i32 0, i32* %15, align 4, !alias.scope !2
  br label %16

16:                                               ; preds = %9, %13
  %17 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 2
  store i32 %1, i32* %17, align 4
  %18 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 3
  store i32 %2, i32* %18, align 8
  %19 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 4
  store i32 0, i32* %19, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV14SkSurface_Base, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %20 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 1
  %21 = bitcast %"class.std::__1::unique_ptr"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9SkSurfaceC2EiiPK14SkSurfaceProps(%class.SkSurface* nocapture, i32, i32, %class.SkSurfaceProps* readonly) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 1
  %8 = icmp eq %class.SkSurfaceProps* %3, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = bitcast %class.SkSurfaceProps* %3 to i64*
  %11 = bitcast %class.SkSurfaceProps* %7 to i64*
  %12 = load i64, i64* %10, align 4, !noalias !5
  store i64 %12, i64* %11, align 4, !alias.scope !5
  br label %16

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %7, i64 0, i32 0
  store i32 0, i32* %14, align 4, !alias.scope !5
  %15 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 1, i32 1
  store i32 0, i32* %15, align 4, !alias.scope !5
  br label %16

16:                                               ; preds = %9, %13
  %17 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 2
  store i32 %1, i32* %17, align 4
  %18 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 3
  store i32 %2, i32* %18, align 8
  %19 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 4
  store i32 0, i32* %19, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14SkSurface_BaseC2ERK11SkImageInfoPK14SkSurfaceProps(%class.SkSurface_Base* nocapture, %struct.SkImageInfo* nocapture readonly dereferenceable(24), %class.SkSurfaceProps* readonly) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 1
  %7 = icmp eq %class.SkSurfaceProps* %2, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = bitcast %class.SkSurfaceProps* %2 to i64*
  %10 = bitcast %class.SkSurfaceProps* %6 to i64*
  %11 = load i64, i64* %9, align 4, !noalias !8
  store i64 %11, i64* %10, align 4, !alias.scope !8
  br label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %6, i64 0, i32 0
  store i32 0, i32* %13, align 4, !alias.scope !8
  %14 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 1, i32 1
  store i32 0, i32* %14, align 4, !alias.scope !8
  br label %15

15:                                               ; preds = %8, %12
  %16 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 2
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %16, align 4
  %19 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 3
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 4
  store i32 0, i32* %22, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV14SkSurface_Base, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %23 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 1
  %24 = bitcast %"class.std::__1::unique_ptr"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9SkSurfaceC2ERK11SkImageInfoPK14SkSurfaceProps(%class.SkSurface* nocapture, %struct.SkImageInfo* nocapture readonly dereferenceable(24), %class.SkSurfaceProps* readonly) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 1
  %7 = icmp eq %class.SkSurfaceProps* %2, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = bitcast %class.SkSurfaceProps* %2 to i64*
  %10 = bitcast %class.SkSurfaceProps* %6 to i64*
  %11 = load i64, i64* %9, align 4, !noalias !11
  store i64 %11, i64* %10, align 4, !alias.scope !11
  br label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %6, i64 0, i32 0
  store i32 0, i32* %13, align 4, !alias.scope !11
  %14 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 1, i32 1
  store i32 0, i32* %14, align 4, !alias.scope !11
  br label %15

15:                                               ; preds = %8, %12
  %16 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 2
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %16, align 4
  %19 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 3
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 4
  store i32 0, i32* %22, align 4
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN14SkSurface_BaseD0Ev(%class.SkSurface_Base* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.GrRecordingContext* @_ZN14SkSurface_Base21onGetRecordingContextEv(%class.SkSurface_Base* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.GrRecordingContext* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSurface_Base19onGetBackendTextureEN9SkSurface19BackendHandleAccessE(%class.GrBackendTexture* noalias sret, %class.SkSurface_Base* nocapture readnone, i32) unnamed_addr #6 align 2 {
  tail call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %0) #14
  ret void
}

declare void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSurface_Base24onGetBackendRenderTargetEN9SkSurface19BackendHandleAccessE(%class.GrBackendRenderTarget* noalias sret, %class.SkSurface_Base* nocapture readnone, i32) unnamed_addr #6 align 2 {
  tail call void @_ZN21GrBackendRenderTargetC1Ev(%class.GrBackendRenderTarget* %0) #14
  ret void
}

declare void @_ZN21GrBackendRenderTargetC1Ev(%class.GrBackendRenderTarget*) unnamed_addr #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN14SkSurface_Base23onReplaceBackendTextureERK16GrBackendTexture15GrSurfaceOriginN9SkSurface17ContentChangeModeEPFvPvES6_(%class.SkSurface_Base* nocapture readnone, %class.GrBackendTexture* nocapture readnone dereferenceable(176), i32, i32, void (i8*)* nocapture readnone, i8* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSurface_Base6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSurface_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) unnamed_addr #6 align 2 {
  %7 = alloca %class.sk_sp.15, align 8
  %8 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0
  %9 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %8, i64 1, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::atomic"* %9 to %class.SkImage**
  %11 = load %class.SkImage*, %class.SkImage** %10, align 8, !noalias !14
  %12 = icmp eq %class.SkImage* %11, null
  br i1 %12, label %13, label %55

13:                                               ; preds = %6
  %14 = bitcast %class.sk_sp.15* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14, !noalias !14
  %15 = bitcast %class.SkSurface_Base* %0 to void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)***
  %16 = load void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)**, void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)*** %15, align 8, !noalias !14
  %17 = getelementptr inbounds void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)*, void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)** %16, i64 9
  %18 = load void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)*, void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)** %17, align 8, !noalias !14
  call void %18(%class.sk_sp.15* nonnull sret %7, %class.SkSurface_Base* %0, %struct.SkIRect* null) #14, !noalias !14
  %19 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %7, i64 0, i32 0
  %20 = bitcast %class.sk_sp.15* %7 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !14
  store %class.SkImage* null, %class.SkImage** %19, align 8, !noalias !14
  %22 = load %class.SkImage*, %class.SkImage** %10, align 8, !noalias !14
  %23 = bitcast %"struct.std::__1::atomic"* %9 to i64*
  store i64 %21, i64* %23, align 8, !noalias !14
  %24 = icmp eq %class.SkImage* %22, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %13
  %26 = inttoptr i64 %21 to %class.SkImage*
  br label %52

27:                                               ; preds = %13
  %28 = getelementptr inbounds %class.SkImage, %class.SkImage* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel, !noalias !14
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = bitcast %class.SkImage* %22 to %class.SkRefCntBase*
  %33 = bitcast %class.SkImage* %22 to void (%class.SkRefCntBase*)***
  %34 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %33, align 8, !noalias !14
  %35 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, i64 2
  %36 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, align 8, !noalias !14
  call void %36(%class.SkRefCntBase* nonnull %32) #14, !noalias !14
  br label %37

37:                                               ; preds = %31, %27
  %38 = load %class.SkImage*, %class.SkImage** %19, align 8, !noalias !14
  %39 = icmp eq %class.SkImage* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %class.SkImage, %class.SkImage* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel, !noalias !14
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = bitcast %class.SkImage* %38 to %class.SkRefCntBase*
  %46 = bitcast %class.SkImage* %38 to void (%class.SkRefCntBase*)***
  %47 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %46, align 8, !noalias !14
  %48 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, i64 2
  %49 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, align 8, !noalias !14
  call void %49(%class.SkRefCntBase* nonnull %45) #14, !noalias !14
  br label %50

50:                                               ; preds = %44, %40, %37
  %51 = load %class.SkImage*, %class.SkImage** %10, align 8, !noalias !14
  br label %52

52:                                               ; preds = %50, %25
  %53 = phi %class.SkImage* [ %51, %50 ], [ %26, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14, !noalias !14
  %54 = icmp eq %class.SkImage* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %52, %6
  %56 = phi %class.SkImage* [ %11, %6 ], [ %53, %52 ]
  %57 = getelementptr inbounds %class.SkImage, %class.SkImage* %56, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 1 monotonic, !noalias !14
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %1, %class.SkImage* nonnull %56, float %2, float %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* %5) #14
  %59 = getelementptr inbounds %class.SkImage, %class.SkImage* %56, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %68

62:                                               ; preds = %55
  %63 = bitcast %class.SkImage* %56 to %class.SkRefCntBase*
  %64 = bitcast %class.SkImage* %56 to void (%class.SkRefCntBase*)***
  %65 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, i64 2
  %67 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, align 8
  call void %67(%class.SkRefCntBase* nonnull %63) #14
  br label %68

68:                                               ; preds = %52, %55, %62
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.15* noalias nocapture sret, %class.SkSurface*) local_unnamed_addr #6 align 2 {
  %3 = alloca %class.sk_sp.15, align 8
  %4 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %1, i64 1, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::atomic"* %4 to %class.SkImage**
  %6 = load %class.SkImage*, %class.SkImage** %5, align 8, !noalias !19
  %7 = icmp eq %class.SkImage* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  %10 = getelementptr inbounds %class.SkImage, %class.SkImage* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic, !noalias !19
  store %class.SkImage* %6, %class.SkImage** %9, align 8, !alias.scope !19
  br label %60

12:                                               ; preds = %2
  %13 = bitcast %class.SkSurface* %1 to %class.SkSurface_Base*
  %14 = bitcast %class.sk_sp.15* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14, !noalias !19
  %15 = bitcast %class.SkSurface* %1 to void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)***
  %16 = load void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)**, void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)*** %15, align 8, !noalias !19
  %17 = getelementptr inbounds void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)*, void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)** %16, i64 9
  %18 = load void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)*, void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)** %17, align 8, !noalias !19
  call void %18(%class.sk_sp.15* nonnull sret %3, %class.SkSurface_Base* %13, %struct.SkIRect* null) #14, !noalias !19
  %19 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %3, i64 0, i32 0
  %20 = bitcast %class.sk_sp.15* %3 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !19
  store %class.SkImage* null, %class.SkImage** %19, align 8, !noalias !19
  %22 = load %class.SkImage*, %class.SkImage** %5, align 8, !noalias !19
  %23 = bitcast %"struct.std::__1::atomic"* %4 to i64*
  store i64 %21, i64* %23, align 8, !noalias !19
  %24 = icmp eq %class.SkImage* %22, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %12
  %26 = inttoptr i64 %21 to %class.SkImage*
  br label %52

27:                                               ; preds = %12
  %28 = getelementptr inbounds %class.SkImage, %class.SkImage* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel, !noalias !19
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = bitcast %class.SkImage* %22 to %class.SkRefCntBase*
  %33 = bitcast %class.SkImage* %22 to void (%class.SkRefCntBase*)***
  %34 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %33, align 8, !noalias !19
  %35 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, i64 2
  %36 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, align 8, !noalias !19
  call void %36(%class.SkRefCntBase* nonnull %32) #14, !noalias !19
  br label %37

37:                                               ; preds = %31, %27
  %38 = load %class.SkImage*, %class.SkImage** %19, align 8, !noalias !19
  %39 = icmp eq %class.SkImage* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %class.SkImage, %class.SkImage* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel, !noalias !19
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = bitcast %class.SkImage* %38 to %class.SkRefCntBase*
  %46 = bitcast %class.SkImage* %38 to void (%class.SkRefCntBase*)***
  %47 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %46, align 8, !noalias !19
  %48 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, i64 2
  %49 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, align 8, !noalias !19
  call void %49(%class.SkRefCntBase* nonnull %45) #14, !noalias !19
  br label %50

50:                                               ; preds = %44, %40, %37
  %51 = load %class.SkImage*, %class.SkImage** %5, align 8, !noalias !19
  br label %52

52:                                               ; preds = %50, %25
  %53 = phi %class.SkImage* [ %51, %50 ], [ %26, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14, !noalias !19
  %54 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  %55 = icmp eq %class.SkImage* %53, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.SkImage, %class.SkImage* %53, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 1 monotonic, !noalias !19
  br label %59

59:                                               ; preds = %56, %52
  store %class.SkImage* %53, %class.SkImage** %54, align 8, !alias.scope !19
  br label %60

60:                                               ; preds = %8, %59
  ret void
}

declare void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSurface_Base27onAsyncRescaleAndReadPixelsERK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_(%class.SkSurface_Base*, %struct.SkImageInfo* dereferenceable(24), %struct.SkIRect* nocapture readonly dereferenceable(16), i1 zeroext, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*) unnamed_addr #6 align 2 {
  %8 = alloca %class.SkPixmap, align 8
  %9 = alloca %class.SkBitmap, align 8
  %10 = alloca %class.SkPixmap, align 8
  %11 = alloca %struct.SkIRect, align 8
  %12 = alloca %struct.SkImageInfo, align 8
  %13 = alloca %struct.SkImageInfo, align 8
  %14 = alloca %class.SkBitmap, align 8
  %15 = bitcast %class.SkBitmap* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %15) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %9) #14
  %16 = bitcast %class.SkPixmap* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 40, i1 false) #14
  %17 = bitcast %struct.SkIRect* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #14
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %11, i64 0, i32 2
  %19 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0
  %20 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %19, i64 1
  %21 = bitcast %class.SkSurface* %20 to %class.SkCanvas**
  %22 = bitcast %struct.SkIRect* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8
  %24 = icmp eq %class.SkCanvas* %23, null
  br i1 %24, label %25, label %48

25:                                               ; preds = %7
  %26 = bitcast %class.SkSurface_Base* %0 to %class.SkCanvas* (%class.SkSurface_Base*)***
  %27 = load %class.SkCanvas* (%class.SkSurface_Base*)**, %class.SkCanvas* (%class.SkSurface_Base*)*** %26, align 8
  %28 = getelementptr inbounds %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %27, i64 7
  %29 = load %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %28, align 8
  %30 = call %class.SkCanvas* %29(%class.SkSurface_Base* %0) #14
  %31 = ptrtoint %class.SkCanvas* %30 to i64
  %32 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8
  %33 = bitcast %class.SkSurface* %20 to i64*
  store i64 %31, i64* %33, align 8
  %34 = icmp eq %class.SkCanvas* %32, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %25
  %36 = bitcast %class.SkCanvas* %32 to void (%class.SkCanvas*)***
  %37 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %37, i64 1
  %39 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %38, align 8
  call void %39(%class.SkCanvas* nonnull %32) #14
  %40 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi %class.SkCanvas* [ %40, %35 ], [ %30, %25 ]
  %43 = icmp eq %class.SkCanvas* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %42, i64 0, i32 9
  %46 = bitcast %class.SkSurface_Base** %45 to %class.SkSurface**
  store %class.SkSurface* %19, %class.SkSurface** %46, align 8
  %47 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8
  br label %48

48:                                               ; preds = %7, %41, %44
  %49 = phi %class.SkCanvas* [ null, %41 ], [ %47, %44 ], [ %23, %7 ]
  %50 = call zeroext i1 @_ZN8SkCanvas10peekPixelsEP8SkPixmap(%class.SkCanvas* %49, %class.SkPixmap* nonnull %10) #14
  br i1 %50, label %51, label %54

51:                                               ; preds = %48
  %52 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK8SkPixmap(%class.SkBitmap* nonnull %9, %class.SkPixmap* nonnull dereferenceable(40) %10) #14
  %53 = bitcast %struct.SkIRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 4 %53, i64 16, i1 false)
  br label %184

54:                                               ; preds = %48
  %55 = bitcast %struct.SkImageInfo* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #14
  %56 = bitcast %struct.SkImageInfo* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #14
  %57 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8, !noalias !22
  %58 = icmp eq %class.SkCanvas* %57, null
  br i1 %58, label %59, label %82

59:                                               ; preds = %54
  %60 = bitcast %class.SkSurface_Base* %0 to %class.SkCanvas* (%class.SkSurface_Base*)***
  %61 = load %class.SkCanvas* (%class.SkSurface_Base*)**, %class.SkCanvas* (%class.SkSurface_Base*)*** %60, align 8, !noalias !22
  %62 = getelementptr inbounds %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %61, i64 7
  %63 = load %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %62, align 8
  %64 = call %class.SkCanvas* %63(%class.SkSurface_Base* %0) #14
  %65 = ptrtoint %class.SkCanvas* %64 to i64
  %66 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8, !noalias !22
  %67 = bitcast %class.SkSurface* %20 to i64*
  store i64 %65, i64* %67, align 8, !noalias !22
  %68 = icmp eq %class.SkCanvas* %66, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %59
  %70 = bitcast %class.SkCanvas* %66 to void (%class.SkCanvas*)***
  %71 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %71, i64 1
  %73 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %72, align 8
  call void %73(%class.SkCanvas* nonnull %66) #14
  %74 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8, !noalias !22
  br label %75

75:                                               ; preds = %69, %59
  %76 = phi %class.SkCanvas* [ %74, %69 ], [ %64, %59 ]
  %77 = icmp eq %class.SkCanvas* %76, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %76, i64 0, i32 9
  %80 = bitcast %class.SkSurface_Base** %79 to %class.SkSurface**
  store %class.SkSurface* %19, %class.SkSurface** %80, align 8
  %81 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8, !noalias !22
  br label %82

82:                                               ; preds = %54, %75, %78
  %83 = phi %class.SkCanvas* [ null, %75 ], [ %81, %78 ], [ %57, %54 ]
  call void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* nonnull sret %13, %class.SkCanvas* %83) #14
  %84 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = sub i32 %85, %87
  %89 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = sub i32 %90, %92
  %94 = zext i32 %93 to i64
  %95 = shl nuw i64 %94, 32
  %96 = zext i32 %88 to i64
  %97 = or i64 %95, %96
  %98 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %13, i64 0, i32 0, i32 0, i32 0
  %100 = load %class.SkColorSpace*, %class.SkColorSpace** %99, align 8, !noalias !25
  %101 = icmp eq %class.SkColorSpace* %100, null
  br i1 %101, label %105, label %102

102:                                              ; preds = %82
  %103 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw add i32* %103, i32 1 monotonic, !noalias !25
  br label %105

105:                                              ; preds = %82, %102
  store %class.SkColorSpace* %100, %class.SkColorSpace** %98, align 8, !alias.scope !25
  %106 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 0, i32 1
  %107 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %13, i64 0, i32 0, i32 1
  %108 = bitcast i32* %107 to i64*
  %109 = bitcast i32* %106 to i64*
  %110 = load i64, i64* %108, align 8, !noalias !25
  store i64 %110, i64* %109, align 8, !alias.scope !25
  %111 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 1
  %112 = bitcast %struct.SkISize* %111 to i64*
  store i64 %97, i64* %112, align 8, !alias.scope !25
  %113 = call zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap* nonnull %9, %struct.SkImageInfo* nonnull dereferenceable(24) %12, i64 0) #14
  %114 = load %class.SkColorSpace*, %class.SkColorSpace** %98, align 8
  %115 = icmp eq %class.SkColorSpace* %114, null
  br i1 %115, label %122, label %116

116:                                              ; preds = %105
  %117 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 -1 acq_rel
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  %121 = bitcast %class.SkColorSpace* %114 to i8*
  call void @_ZdlPv(i8* %121) #15
  br label %122

122:                                              ; preds = %105, %116, %120
  %123 = load %class.SkColorSpace*, %class.SkColorSpace** %99, align 8
  %124 = icmp eq %class.SkColorSpace* %123, null
  br i1 %124, label %131, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = atomicrmw add i32* %126, i32 -1 acq_rel
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %131

129:                                              ; preds = %125
  %130 = bitcast %class.SkColorSpace* %123 to i8*
  call void @_ZdlPv(i8* %130) #15
  br label %131

131:                                              ; preds = %122, %125, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #14
  call void @_ZN8SkBitmap11allocPixelsEv(%class.SkBitmap* nonnull %9) #14
  %132 = load i32, i32* %86, align 4
  %133 = load i32, i32* %91, align 4
  %134 = bitcast %class.SkPixmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %134) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 0, i64 40, i1 false) #14
  %135 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* nonnull %9, %class.SkPixmap* nonnull %8) #14
  br i1 %135, label %136, label %165

136:                                              ; preds = %131
  %137 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8
  %138 = icmp eq %class.SkCanvas* %137, null
  br i1 %138, label %139, label %162

139:                                              ; preds = %136
  %140 = bitcast %class.SkSurface_Base* %0 to %class.SkCanvas* (%class.SkSurface_Base*)***
  %141 = load %class.SkCanvas* (%class.SkSurface_Base*)**, %class.SkCanvas* (%class.SkSurface_Base*)*** %140, align 8
  %142 = getelementptr inbounds %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %141, i64 7
  %143 = load %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %142, align 8
  %144 = call %class.SkCanvas* %143(%class.SkSurface_Base* %0) #14
  %145 = ptrtoint %class.SkCanvas* %144 to i64
  %146 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8
  %147 = bitcast %class.SkSurface* %20 to i64*
  store i64 %145, i64* %147, align 8
  %148 = icmp eq %class.SkCanvas* %146, null
  br i1 %148, label %155, label %149

149:                                              ; preds = %139
  %150 = bitcast %class.SkCanvas* %146 to void (%class.SkCanvas*)***
  %151 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %150, align 8
  %152 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %151, i64 1
  %153 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %152, align 8
  call void %153(%class.SkCanvas* nonnull %146) #14
  %154 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8
  br label %155

155:                                              ; preds = %149, %139
  %156 = phi %class.SkCanvas* [ %154, %149 ], [ %144, %139 ]
  %157 = icmp eq %class.SkCanvas* %156, null
  br i1 %157, label %162, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %156, i64 0, i32 9
  %160 = bitcast %class.SkSurface_Base** %159 to %class.SkSurface**
  store %class.SkSurface* %19, %class.SkSurface** %160, align 8
  %161 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8
  br label %162

162:                                              ; preds = %158, %155, %136
  %163 = phi %class.SkCanvas* [ null, %155 ], [ %161, %158 ], [ %137, %136 ]
  %164 = call zeroext i1 @_ZN8SkCanvas10readPixelsERK8SkPixmapii(%class.SkCanvas* %163, %class.SkPixmap* nonnull dereferenceable(40) %8, i32 %132, i32 %133) #14
  br label %165

165:                                              ; preds = %162, %131
  %166 = phi i1 [ false, %131 ], [ %164, %162 ]
  %167 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %168 = load %class.SkColorSpace*, %class.SkColorSpace** %167, align 8
  %169 = icmp eq %class.SkColorSpace* %168, null
  br i1 %169, label %176, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = atomicrmw add i32* %171, i32 -1 acq_rel
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %176

174:                                              ; preds = %170
  %175 = bitcast %class.SkColorSpace* %168 to i8*
  call void @_ZdlPv(i8* %175) #15
  br label %176

176:                                              ; preds = %165, %170, %174
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %134) #14
  br i1 %166, label %178, label %177

177:                                              ; preds = %176
  call void %5(i8* %6, %"class.SkImage::AsyncReadResult"* null) #14
  br label %185

178:                                              ; preds = %176
  %179 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %9, i64 0, i32 1, i32 2, i32 1
  %180 = bitcast %struct.SkISize* %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %struct.SkIRect* %11 to i64*
  store i64 0, i64* %182, align 8
  %183 = bitcast i32* %18 to i64*
  store i64 %181, i64* %183, align 8
  br label %184

184:                                              ; preds = %178, %51
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %14, %class.SkBitmap* nonnull dereferenceable(56) %9) #14
  call void @_Z22SkRescaleAndReadPixels8SkBitmapRK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_(%class.SkBitmap* nonnull %14, %struct.SkImageInfo* dereferenceable(24) %1, %struct.SkIRect* nonnull dereferenceable(16) %11, i1 zeroext %3, i32 %4, void (i8*, %"class.SkImage::AsyncReadResult"*)* %5, i8* %6) #14
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %14) #14
  br label %185

185:                                              ; preds = %184, %177
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #14
  %186 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %10, i64 0, i32 2, i32 0, i32 0, i32 0
  %187 = load %class.SkColorSpace*, %class.SkColorSpace** %186, align 8
  %188 = icmp eq %class.SkColorSpace* %187, null
  br i1 %188, label %195, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = atomicrmw add i32* %190, i32 -1 acq_rel
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %195

193:                                              ; preds = %189
  %194 = bitcast %class.SkColorSpace* %187 to i8*
  call void @_ZdlPv(i8* %194) #15
  br label %195

195:                                              ; preds = %185, %189, %193
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #14
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %15) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkSurface10peekPixelsEP8SkPixmap(%class.SkSurface*, %class.SkPixmap*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 1
  %4 = bitcast %class.SkSurface* %3 to %class.SkCanvas**
  %5 = load %class.SkCanvas*, %class.SkCanvas** %4, align 8
  %6 = icmp eq %class.SkCanvas* %5, null
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %9 = bitcast %class.SkSurface* %0 to %class.SkCanvas* (%class.SkSurface_Base*)***
  %10 = load %class.SkCanvas* (%class.SkSurface_Base*)**, %class.SkCanvas* (%class.SkSurface_Base*)*** %9, align 8
  %11 = getelementptr inbounds %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %10, i64 7
  %12 = load %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %11, align 8
  %13 = tail call %class.SkCanvas* %12(%class.SkSurface_Base* %8) #14
  %14 = ptrtoint %class.SkCanvas* %13 to i64
  %15 = load %class.SkCanvas*, %class.SkCanvas** %4, align 8
  %16 = bitcast %class.SkSurface* %3 to i64*
  store i64 %14, i64* %16, align 8
  %17 = icmp eq %class.SkCanvas* %15, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %7
  %19 = bitcast %class.SkCanvas* %15 to void (%class.SkCanvas*)***
  %20 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %20, i64 1
  %22 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %21, align 8
  tail call void %22(%class.SkCanvas* nonnull %15) #14
  %23 = load %class.SkCanvas*, %class.SkCanvas** %4, align 8
  br label %24

24:                                               ; preds = %18, %7
  %25 = phi %class.SkCanvas* [ %23, %18 ], [ %13, %7 ]
  %26 = icmp eq %class.SkCanvas* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %25, i64 0, i32 9
  %29 = bitcast %class.SkSurface_Base** %28 to %class.SkSurface**
  store %class.SkSurface* %0, %class.SkSurface** %29, align 8
  %30 = load %class.SkCanvas*, %class.SkCanvas** %4, align 8
  br label %31

31:                                               ; preds = %2, %24, %27
  %32 = phi %class.SkCanvas* [ null, %24 ], [ %30, %27 ], [ %5, %2 ]
  %33 = tail call zeroext i1 @_ZN8SkCanvas10peekPixelsEP8SkPixmap(%class.SkCanvas* %32, %class.SkPixmap* %1) #14
  ret i1 %33
}

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK8SkPixmap(%class.SkBitmap*, %class.SkPixmap* dereferenceable(40)) local_unnamed_addr #7

declare zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface9imageInfoEv(%struct.SkImageInfo* noalias sret, %class.SkSurface*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %1, i64 1
  %4 = bitcast %class.SkSurface* %3 to %class.SkCanvas**
  %5 = load %class.SkCanvas*, %class.SkCanvas** %4, align 8
  %6 = icmp eq %class.SkCanvas* %5, null
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = bitcast %class.SkSurface* %1 to %class.SkSurface_Base*
  %9 = bitcast %class.SkSurface* %1 to %class.SkCanvas* (%class.SkSurface_Base*)***
  %10 = load %class.SkCanvas* (%class.SkSurface_Base*)**, %class.SkCanvas* (%class.SkSurface_Base*)*** %9, align 8
  %11 = getelementptr inbounds %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %10, i64 7
  %12 = load %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %11, align 8
  %13 = tail call %class.SkCanvas* %12(%class.SkSurface_Base* %8) #14
  %14 = ptrtoint %class.SkCanvas* %13 to i64
  %15 = load %class.SkCanvas*, %class.SkCanvas** %4, align 8
  %16 = bitcast %class.SkSurface* %3 to i64*
  store i64 %14, i64* %16, align 8
  %17 = icmp eq %class.SkCanvas* %15, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %7
  %19 = bitcast %class.SkCanvas* %15 to void (%class.SkCanvas*)***
  %20 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %20, i64 1
  %22 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %21, align 8
  tail call void %22(%class.SkCanvas* nonnull %15) #14
  %23 = load %class.SkCanvas*, %class.SkCanvas** %4, align 8
  br label %24

24:                                               ; preds = %18, %7
  %25 = phi %class.SkCanvas* [ %23, %18 ], [ %13, %7 ]
  %26 = icmp eq %class.SkCanvas* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %25, i64 0, i32 9
  %29 = bitcast %class.SkSurface_Base** %28 to %class.SkSurface**
  store %class.SkSurface* %1, %class.SkSurface** %29, align 8
  %30 = load %class.SkCanvas*, %class.SkCanvas** %4, align 8
  br label %31

31:                                               ; preds = %2, %24, %27
  %32 = phi %class.SkCanvas* [ null, %24 ], [ %30, %27 ], [ %5, %2 ]
  tail call void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* sret %0, %class.SkCanvas* %32) #14
  ret void
}

declare void @_ZN8SkBitmap11allocPixelsEv(%class.SkBitmap*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkSurface10readPixelsERK8SkBitmapii(%class.SkSurface*, %class.SkBitmap* dereferenceable(56), i32, i32) local_unnamed_addr #6 align 2 {
  %5 = alloca %class.SkPixmap, align 8
  %6 = bitcast %class.SkPixmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 40, i1 false) #14
  %7 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* %1, %class.SkPixmap* nonnull %5) #14
  br i1 %7, label %8, label %40

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 1
  %10 = bitcast %class.SkSurface* %9 to %class.SkCanvas**
  %11 = load %class.SkCanvas*, %class.SkCanvas** %10, align 8
  %12 = icmp eq %class.SkCanvas* %11, null
  br i1 %12, label %13, label %37

13:                                               ; preds = %8
  %14 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %15 = bitcast %class.SkSurface* %0 to %class.SkCanvas* (%class.SkSurface_Base*)***
  %16 = load %class.SkCanvas* (%class.SkSurface_Base*)**, %class.SkCanvas* (%class.SkSurface_Base*)*** %15, align 8
  %17 = getelementptr inbounds %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %16, i64 7
  %18 = load %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %17, align 8
  %19 = call %class.SkCanvas* %18(%class.SkSurface_Base* %14) #14
  %20 = ptrtoint %class.SkCanvas* %19 to i64
  %21 = load %class.SkCanvas*, %class.SkCanvas** %10, align 8
  %22 = bitcast %class.SkSurface* %9 to i64*
  store i64 %20, i64* %22, align 8
  %23 = icmp eq %class.SkCanvas* %21, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %13
  %25 = bitcast %class.SkCanvas* %21 to void (%class.SkCanvas*)***
  %26 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %26, i64 1
  %28 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %27, align 8
  call void %28(%class.SkCanvas* nonnull %21) #14
  %29 = load %class.SkCanvas*, %class.SkCanvas** %10, align 8
  br label %30

30:                                               ; preds = %24, %13
  %31 = phi %class.SkCanvas* [ %29, %24 ], [ %19, %13 ]
  %32 = icmp eq %class.SkCanvas* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %31, i64 0, i32 9
  %35 = bitcast %class.SkSurface_Base** %34 to %class.SkSurface**
  store %class.SkSurface* %0, %class.SkSurface** %35, align 8
  %36 = load %class.SkCanvas*, %class.SkCanvas** %10, align 8
  br label %37

37:                                               ; preds = %8, %30, %33
  %38 = phi %class.SkCanvas* [ null, %30 ], [ %36, %33 ], [ %11, %8 ]
  %39 = call zeroext i1 @_ZN8SkCanvas10readPixelsERK8SkPixmapii(%class.SkCanvas* %38, %class.SkPixmap* nonnull dereferenceable(40) %5, i32 %2, i32 %3) #14
  br label %40

40:                                               ; preds = %37, %4
  %41 = phi i1 [ false, %4 ], [ %39, %37 ]
  %42 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %43 = load %class.SkColorSpace*, %class.SkColorSpace** %42, align 8
  %44 = icmp eq %class.SkColorSpace* %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = bitcast %class.SkColorSpace* %43 to i8*
  call void @_ZdlPv(i8* %50) #15
  br label %51

51:                                               ; preds = %40, %45, %49
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #14
  ret i1 %41
}

declare void @_Z22SkRescaleAndReadPixels8SkBitmapRK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i1 zeroext, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*) local_unnamed_addr #7

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSurface_Base33onAsyncRescaleAndReadPixelsYUV420E15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRectRK7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_(%class.SkSurface_Base* nocapture readnone, i32, %class.sk_sp.16* nocapture readnone, %struct.SkIRect* nocapture readnone dereferenceable(16), %struct.SkISize* nocapture readnone dereferenceable(8), i1 zeroext, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)* nocapture, i8*) unnamed_addr #6 align 2 {
  tail call void %7(i8* %8, %"class.SkImage::AsyncReadResult"* null) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK14SkSurface_Base24outstandingImageSnapshotEv(%class.SkSurface_Base* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 2, i32 0
  %3 = load %class.SkImage*, %class.SkImage** %2, align 8
  %4 = icmp eq %class.SkImage* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkImage, %class.SkImage* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 acquire, align 4
  %8 = icmp ne i32 %7, 1
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base*, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 2, i32 0
  %5 = load %class.SkImage*, %class.SkImage** %4, align 8
  %6 = icmp eq %class.SkImage* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkImage, %class.SkImage* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 acquire, align 4
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %28, label %11

11:                                               ; preds = %7
  %12 = bitcast %class.SkSurface_Base* %0 to void (%class.SkSurface_Base*, i32)***
  %13 = load void (%class.SkSurface_Base*, i32)**, void (%class.SkSurface_Base*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkSurface_Base*, i32)*, void (%class.SkSurface_Base*, i32)** %13, i64 15
  %15 = load void (%class.SkSurface_Base*, i32)*, void (%class.SkSurface_Base*, i32)** %14, align 8
  tail call void %15(%class.SkSurface_Base* %0, i32 %1) #14
  %16 = load %class.SkImage*, %class.SkImage** %4, align 8
  store %class.SkImage* null, %class.SkImage** %4, align 8
  %17 = icmp eq %class.SkImage* %16, null
  br i1 %17, label %53, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %class.SkImage, %class.SkImage* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %53

22:                                               ; preds = %18
  %23 = bitcast %class.SkImage* %16 to %class.SkRefCntBase*
  %24 = bitcast %class.SkImage* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  tail call void %27(%class.SkRefCntBase* nonnull %23) #14
  br label %53

28:                                               ; preds = %7
  %29 = load %class.SkImage*, %class.SkImage** %4, align 8
  store %class.SkImage* null, %class.SkImage** %4, align 8
  %30 = icmp eq %class.SkImage* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.SkImage, %class.SkImage* %29, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkImage* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkImage* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  tail call void %40(%class.SkRefCntBase* nonnull %36) #14
  br label %41

41:                                               ; preds = %28, %31, %35
  %42 = bitcast %class.SkSurface_Base* %0 to void (%class.SkSurface_Base*)***
  %43 = load void (%class.SkSurface_Base*)**, void (%class.SkSurface_Base*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkSurface_Base*)*, void (%class.SkSurface_Base*)** %43, i64 16
  %45 = load void (%class.SkSurface_Base*)*, void (%class.SkSurface_Base*)** %44, align 8
  tail call void %45(%class.SkSurface_Base* %0) #14
  br label %53

46:                                               ; preds = %2
  %47 = icmp eq i32 %1, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %46
  %49 = bitcast %class.SkSurface_Base* %0 to void (%class.SkSurface_Base*)***
  %50 = load void (%class.SkSurface_Base*)**, void (%class.SkSurface_Base*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkSurface_Base*)*, void (%class.SkSurface_Base*)** %50, i64 14
  %52 = load void (%class.SkSurface_Base*)*, void (%class.SkSurface_Base*)** %51, align 8
  tail call void %52(%class.SkSurface_Base* %0) #14
  br label %53

53:                                               ; preds = %22, %18, %11, %41, %46, %48
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN14SkSurface_Base15newGenerationIDEv(%class.SkSurface_Base* nocapture readnone) local_unnamed_addr #1 align 2 {
  %2 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN14SkSurface_Base15newGenerationIDEvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 1
  %3 = bitcast %class.SkSurface* %2 to %class.SkCanvas**
  %4 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  %5 = icmp eq %class.SkCanvas* %4, null
  br i1 %5, label %6, label %30

6:                                                ; preds = %1
  %7 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %8 = bitcast %class.SkSurface* %0 to %class.SkCanvas* (%class.SkSurface_Base*)***
  %9 = load %class.SkCanvas* (%class.SkSurface_Base*)**, %class.SkCanvas* (%class.SkSurface_Base*)*** %8, align 8
  %10 = getelementptr inbounds %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %9, i64 7
  %11 = load %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %10, align 8
  %12 = tail call %class.SkCanvas* %11(%class.SkSurface_Base* %7) #14
  %13 = ptrtoint %class.SkCanvas* %12 to i64
  %14 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  %15 = bitcast %class.SkSurface* %2 to i64*
  store i64 %13, i64* %15, align 8
  %16 = icmp eq %class.SkCanvas* %14, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %6
  %18 = bitcast %class.SkCanvas* %14 to void (%class.SkCanvas*)***
  %19 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %19, i64 1
  %21 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %20, align 8
  tail call void %21(%class.SkCanvas* nonnull %14) #14
  %22 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi %class.SkCanvas* [ %22, %17 ], [ %12, %6 ]
  %25 = icmp eq %class.SkCanvas* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %24, i64 0, i32 9
  %28 = bitcast %class.SkSurface_Base** %27 to %class.SkSurface**
  store %class.SkSurface* %0, %class.SkSurface** %28, align 8
  %29 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  br label %30

30:                                               ; preds = %1, %23, %26
  %31 = phi %class.SkCanvas* [ null, %23 ], [ %29, %26 ], [ %4, %1 ]
  ret %class.SkCanvas* %31
}

declare void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* sret, %class.SkCanvas*) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN9SkSurface12generationIDEv(%class.SkSurface* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN14SkSurface_Base15newGenerationIDEvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  store i32 %6, i32* %2, align 4
  br label %7

7:                                                ; preds = %5, %1
  %8 = phi i32 [ %6, %5 ], [ %3, %1 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface23notifyContentWillChangeENS_17ContentChangeModeE(%class.SkSurface*, i32) local_unnamed_addr #6 align 2 {
  %3 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %4 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 4
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 1, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::atomic"* %5 to %class.SkImage**
  %7 = load %class.SkImage*, %class.SkImage** %6, align 8
  %8 = icmp eq %class.SkImage* %7, null
  br i1 %8, label %48, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkImage, %class.SkImage* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %30, label %13

13:                                               ; preds = %9
  %14 = bitcast %class.SkSurface* %0 to void (%class.SkSurface_Base*, i32)***
  %15 = load void (%class.SkSurface_Base*, i32)**, void (%class.SkSurface_Base*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkSurface_Base*, i32)*, void (%class.SkSurface_Base*, i32)** %15, i64 15
  %17 = load void (%class.SkSurface_Base*, i32)*, void (%class.SkSurface_Base*, i32)** %16, align 8
  tail call void %17(%class.SkSurface_Base* %3, i32 %1) #14
  %18 = load %class.SkImage*, %class.SkImage** %6, align 8
  store %class.SkImage* null, %class.SkImage** %6, align 8
  %19 = icmp eq %class.SkImage* %18, null
  br i1 %19, label %55, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %class.SkImage, %class.SkImage* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %55

24:                                               ; preds = %20
  %25 = bitcast %class.SkImage* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImage* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %55

30:                                               ; preds = %9
  %31 = load %class.SkImage*, %class.SkImage** %6, align 8
  store %class.SkImage* null, %class.SkImage** %6, align 8
  %32 = icmp eq %class.SkImage* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %class.SkImage, %class.SkImage* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %class.SkImage* %31 to %class.SkRefCntBase*
  %39 = bitcast %class.SkImage* %31 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8
  tail call void %42(%class.SkRefCntBase* nonnull %38) #14
  br label %43

43:                                               ; preds = %37, %33, %30
  %44 = bitcast %class.SkSurface* %0 to void (%class.SkSurface_Base*)***
  %45 = load void (%class.SkSurface_Base*)**, void (%class.SkSurface_Base*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkSurface_Base*)*, void (%class.SkSurface_Base*)** %45, i64 16
  %47 = load void (%class.SkSurface_Base*)*, void (%class.SkSurface_Base*)** %46, align 8
  tail call void %47(%class.SkSurface_Base* %3) #14
  br label %55

48:                                               ; preds = %2
  %49 = icmp eq i32 %1, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %48
  %51 = bitcast %class.SkSurface* %0 to void (%class.SkSurface_Base*)***
  %52 = load void (%class.SkSurface_Base*)**, void (%class.SkSurface_Base*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkSurface_Base*)*, void (%class.SkSurface_Base*)** %52, i64 14
  %54 = load void (%class.SkSurface_Base*)*, void (%class.SkSurface_Base*)** %53, align 8
  tail call void %54(%class.SkSurface_Base* %3) #14
  br label %55

55:                                               ; preds = %13, %20, %24, %43, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface17makeImageSnapshotERK7SkIRect(%class.sk_sp.15* noalias sret, %class.SkSurface*, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %4 = alloca %class.sk_sp.15, align 8
  %5 = alloca %struct.SkIRect, align 4
  %6 = alloca %struct.SkIRect, align 4
  %7 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 0
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 2
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %12 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  %14 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %11, align 4
  %16 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #14
  %17 = bitcast %struct.SkIRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %16, i8* align 4 %17, i64 16, i1 false)
  %18 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %6, %struct.SkIRect* nonnull dereferenceable(16) %6, %struct.SkIRect* nonnull dereferenceable(16) %5) #14
  br i1 %18, label %21, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %20, align 8
  br label %87

21:                                               ; preds = %3
  %22 = call i32 @bcmp(i8* nonnull %16, i8* nonnull %7, i64 16) #14
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %81

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %1, i64 1, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::atomic"* %25 to %class.SkImage**
  %27 = load %class.SkImage*, %class.SkImage** %26, align 8, !noalias !30
  %28 = icmp eq %class.SkImage* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  %31 = getelementptr inbounds %class.SkImage, %class.SkImage* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic, !noalias !30
  store %class.SkImage* %27, %class.SkImage** %30, align 8, !alias.scope !30
  br label %87

33:                                               ; preds = %24
  %34 = bitcast %class.SkSurface* %1 to %class.SkSurface_Base*
  %35 = bitcast %class.sk_sp.15* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #14, !noalias !30
  %36 = bitcast %class.SkSurface* %1 to void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)***
  %37 = load void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)**, void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)*** %36, align 8, !noalias !30
  %38 = getelementptr inbounds void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)*, void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)** %37, i64 9
  %39 = load void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)*, void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)** %38, align 8, !noalias !30
  call void %39(%class.sk_sp.15* nonnull sret %4, %class.SkSurface_Base* %34, %struct.SkIRect* null) #14, !noalias !30
  %40 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %4, i64 0, i32 0
  %41 = bitcast %class.sk_sp.15* %4 to i64*
  %42 = load i64, i64* %41, align 8, !noalias !30
  store %class.SkImage* null, %class.SkImage** %40, align 8, !noalias !30
  %43 = load %class.SkImage*, %class.SkImage** %26, align 8, !noalias !30
  %44 = bitcast %"struct.std::__1::atomic"* %25 to i64*
  store i64 %42, i64* %44, align 8, !noalias !30
  %45 = icmp eq %class.SkImage* %43, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %33
  %47 = inttoptr i64 %42 to %class.SkImage*
  br label %73

48:                                               ; preds = %33
  %49 = getelementptr inbounds %class.SkImage, %class.SkImage* %43, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel, !noalias !30
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %class.SkImage* %43 to %class.SkRefCntBase*
  %54 = bitcast %class.SkImage* %43 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8, !noalias !30
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8, !noalias !30
  call void %57(%class.SkRefCntBase* nonnull %53) #14, !noalias !30
  br label %58

58:                                               ; preds = %52, %48
  %59 = load %class.SkImage*, %class.SkImage** %40, align 8, !noalias !30
  %60 = icmp eq %class.SkImage* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %class.SkImage, %class.SkImage* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel, !noalias !30
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %class.SkImage* %59 to %class.SkRefCntBase*
  %67 = bitcast %class.SkImage* %59 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8, !noalias !30
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8, !noalias !30
  call void %70(%class.SkRefCntBase* nonnull %66) #14, !noalias !30
  br label %71

71:                                               ; preds = %65, %61, %58
  %72 = load %class.SkImage*, %class.SkImage** %26, align 8, !noalias !30
  br label %73

73:                                               ; preds = %71, %46
  %74 = phi %class.SkImage* [ %72, %71 ], [ %47, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #14, !noalias !30
  %75 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  %76 = icmp eq %class.SkImage* %74, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %class.SkImage, %class.SkImage* %74, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 1 monotonic, !noalias !30
  br label %80

80:                                               ; preds = %77, %73
  store %class.SkImage* %74, %class.SkImage** %75, align 8, !alias.scope !30
  br label %87

81:                                               ; preds = %21
  %82 = bitcast %class.SkSurface* %1 to %class.SkSurface_Base*
  %83 = bitcast %class.SkSurface* %1 to void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)***
  %84 = load void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)**, void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)*, void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)** %84, i64 9
  %86 = load void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)*, void (%class.sk_sp.15*, %class.SkSurface_Base*, %struct.SkIRect*)** %85, align 8
  call void %86(%class.sk_sp.15* sret %0, %class.SkSurface_Base* %82, %struct.SkIRect* nonnull %6) #14
  br label %87

87:                                               ; preds = %80, %29, %81, %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface11makeSurfaceERK11SkImageInfo(%class.sk_sp.97* noalias sret, %class.SkSurface*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %4 = bitcast %class.SkSurface* %1 to %class.SkSurface_Base*
  %5 = bitcast %class.SkSurface* %1 to void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)***
  %6 = load void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)**, void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)*, void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)** %6, i64 8
  %8 = load void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)*, void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)** %7, align 8
  tail call void %8(%class.sk_sp.97* sret %0, %class.SkSurface_Base* %4, %struct.SkImageInfo* dereferenceable(24) %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface11makeSurfaceEii(%class.sk_sp.97* noalias sret, %class.SkSurface*, i32, i32) local_unnamed_addr #6 align 2 {
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %1, i64 1
  %10 = bitcast %class.SkSurface* %9 to %class.SkCanvas**
  %11 = load %class.SkCanvas*, %class.SkCanvas** %10, align 8, !noalias !35
  %12 = icmp eq %class.SkCanvas* %11, null
  br i1 %12, label %13, label %37

13:                                               ; preds = %4
  %14 = bitcast %class.SkSurface* %1 to %class.SkSurface_Base*
  %15 = bitcast %class.SkSurface* %1 to %class.SkCanvas* (%class.SkSurface_Base*)***
  %16 = load %class.SkCanvas* (%class.SkSurface_Base*)**, %class.SkCanvas* (%class.SkSurface_Base*)*** %15, align 8, !noalias !35
  %17 = getelementptr inbounds %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %16, i64 7
  %18 = load %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %17, align 8
  %19 = tail call %class.SkCanvas* %18(%class.SkSurface_Base* %14) #14
  %20 = ptrtoint %class.SkCanvas* %19 to i64
  %21 = load %class.SkCanvas*, %class.SkCanvas** %10, align 8, !noalias !35
  %22 = bitcast %class.SkSurface* %9 to i64*
  store i64 %20, i64* %22, align 8, !noalias !35
  %23 = icmp eq %class.SkCanvas* %21, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %13
  %25 = bitcast %class.SkCanvas* %21 to void (%class.SkCanvas*)***
  %26 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %26, i64 1
  %28 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %27, align 8
  tail call void %28(%class.SkCanvas* nonnull %21) #14
  %29 = load %class.SkCanvas*, %class.SkCanvas** %10, align 8, !noalias !35
  br label %30

30:                                               ; preds = %24, %13
  %31 = phi %class.SkCanvas* [ %29, %24 ], [ %19, %13 ]
  %32 = icmp eq %class.SkCanvas* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %31, i64 0, i32 9
  %35 = bitcast %class.SkSurface_Base** %34 to %class.SkSurface**
  store %class.SkSurface* %1, %class.SkSurface** %35, align 8
  %36 = load %class.SkCanvas*, %class.SkCanvas** %10, align 8, !noalias !35
  br label %37

37:                                               ; preds = %4, %30, %33
  %38 = phi %class.SkCanvas* [ null, %30 ], [ %36, %33 ], [ %11, %4 ]
  call void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* nonnull sret %6, %class.SkCanvas* %38) #14
  %39 = zext i32 %3 to i64
  %40 = shl nuw i64 %39, 32
  %41 = zext i32 %2 to i64
  %42 = or i64 %40, %41
  %43 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.SkColorSpace*, %class.SkColorSpace** %44, align 8, !noalias !38
  %46 = icmp eq %class.SkColorSpace* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 1 monotonic, !noalias !38
  br label %50

50:                                               ; preds = %37, %47
  store %class.SkColorSpace* %45, %class.SkColorSpace** %43, align 8, !alias.scope !38
  %51 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %53 = bitcast i32* %52 to i64*
  %54 = bitcast i32* %51 to i64*
  %55 = load i64, i64* %53, align 8, !noalias !38
  store i64 %55, i64* %54, align 8, !alias.scope !38
  %56 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %57 = bitcast %struct.SkISize* %56 to i64*
  store i64 %42, i64* %57, align 8, !alias.scope !38
  %58 = bitcast %class.SkSurface* %1 to %class.SkSurface_Base*
  %59 = bitcast %class.SkSurface* %1 to void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)***
  %60 = load void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)**, void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)*** %59, align 8, !noalias !43
  %61 = getelementptr inbounds void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)*, void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)** %60, i64 8
  %62 = load void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)*, void (%class.sk_sp.97*, %class.SkSurface_Base*, %struct.SkImageInfo*)** %61, align 8, !noalias !43
  call void %62(%class.sk_sp.97* sret %0, %class.SkSurface_Base* %58, %struct.SkImageInfo* nonnull dereferenceable(24) %5) #14
  %63 = load %class.SkColorSpace*, %class.SkColorSpace** %43, align 8
  %64 = icmp eq %class.SkColorSpace* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %50
  %66 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = bitcast %class.SkColorSpace* %63 to i8*
  call void @_ZdlPv(i8* %70) #15
  br label %71

71:                                               ; preds = %50, %65, %69
  %72 = load %class.SkColorSpace*, %class.SkColorSpace** %44, align 8
  %73 = icmp eq %class.SkColorSpace* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = bitcast %class.SkColorSpace* %72 to i8*
  call void @_ZdlPv(i8* %79) #15
  br label %80

80:                                               ; preds = %71, %74, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSurface*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #6 align 2 {
  %7 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %8 = bitcast %class.SkSurface* %0 to void (%class.SkSurface_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)***
  %9 = load void (%class.SkSurface_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%class.SkSurface_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkSurface_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkSurface_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)** %9, i64 13
  %11 = load void (%class.SkSurface_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkSurface_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)** %10, align 8
  tail call void %11(%class.SkSurface_Base* %7, %class.SkCanvas* %1, float %2, float %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* %5) #14
  ret void
}

declare zeroext i1 @_ZN8SkCanvas10peekPixelsEP8SkPixmap(%class.SkCanvas*, %class.SkPixmap*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkSurface10readPixelsERK8SkPixmapii(%class.SkSurface*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 1
  %6 = bitcast %class.SkSurface* %5 to %class.SkCanvas**
  %7 = load %class.SkCanvas*, %class.SkCanvas** %6, align 8
  %8 = icmp eq %class.SkCanvas* %7, null
  br i1 %8, label %9, label %33

9:                                                ; preds = %4
  %10 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %11 = bitcast %class.SkSurface* %0 to %class.SkCanvas* (%class.SkSurface_Base*)***
  %12 = load %class.SkCanvas* (%class.SkSurface_Base*)**, %class.SkCanvas* (%class.SkSurface_Base*)*** %11, align 8
  %13 = getelementptr inbounds %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %12, i64 7
  %14 = load %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %13, align 8
  %15 = tail call %class.SkCanvas* %14(%class.SkSurface_Base* %10) #14
  %16 = ptrtoint %class.SkCanvas* %15 to i64
  %17 = load %class.SkCanvas*, %class.SkCanvas** %6, align 8
  %18 = bitcast %class.SkSurface* %5 to i64*
  store i64 %16, i64* %18, align 8
  %19 = icmp eq %class.SkCanvas* %17, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %9
  %21 = bitcast %class.SkCanvas* %17 to void (%class.SkCanvas*)***
  %22 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %22, i64 1
  %24 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %23, align 8
  tail call void %24(%class.SkCanvas* nonnull %17) #14
  %25 = load %class.SkCanvas*, %class.SkCanvas** %6, align 8
  br label %26

26:                                               ; preds = %20, %9
  %27 = phi %class.SkCanvas* [ %25, %20 ], [ %15, %9 ]
  %28 = icmp eq %class.SkCanvas* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %27, i64 0, i32 9
  %31 = bitcast %class.SkSurface_Base** %30 to %class.SkSurface**
  store %class.SkSurface* %0, %class.SkSurface** %31, align 8
  %32 = load %class.SkCanvas*, %class.SkCanvas** %6, align 8
  br label %33

33:                                               ; preds = %4, %26, %29
  %34 = phi %class.SkCanvas* [ null, %26 ], [ %32, %29 ], [ %7, %4 ]
  %35 = tail call zeroext i1 @_ZN8SkCanvas10readPixelsERK8SkPixmapii(%class.SkCanvas* %34, %class.SkPixmap* dereferenceable(40) %1, i32 %2, i32 %3) #14
  ret i1 %35
}

declare zeroext i1 @_ZN8SkCanvas10readPixelsERK8SkPixmapii(%class.SkCanvas*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkSurface10readPixelsERK11SkImageInfoPvmii(%class.SkSurface*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i8*, i64, i32, i32) local_unnamed_addr #6 align 2 {
  %7 = alloca %class.SkPixmap, align 8
  %8 = bitcast %class.SkPixmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #14
  %9 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 0
  store i8* %2, i8** %9, align 8
  %10 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 1
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %6, %15
  store %class.SkColorSpace* %13, %class.SkColorSpace** %11, align 8
  %19 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 2, i32 0, i32 1
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %21 = bitcast i32* %20 to <2 x i64>*
  %22 = load <2 x i64>, <2 x i64>* %21, align 8
  %23 = bitcast i32* %19 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %23, align 8
  %24 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 1
  %25 = bitcast %class.SkSurface* %24 to %class.SkCanvas**
  %26 = load %class.SkCanvas*, %class.SkCanvas** %25, align 8
  %27 = icmp eq %class.SkCanvas* %26, null
  br i1 %27, label %28, label %52

28:                                               ; preds = %18
  %29 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %30 = bitcast %class.SkSurface* %0 to %class.SkCanvas* (%class.SkSurface_Base*)***
  %31 = load %class.SkCanvas* (%class.SkSurface_Base*)**, %class.SkCanvas* (%class.SkSurface_Base*)*** %30, align 8
  %32 = getelementptr inbounds %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %31, i64 7
  %33 = load %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %32, align 8
  %34 = tail call %class.SkCanvas* %33(%class.SkSurface_Base* %29) #14
  %35 = ptrtoint %class.SkCanvas* %34 to i64
  %36 = load %class.SkCanvas*, %class.SkCanvas** %25, align 8
  %37 = bitcast %class.SkSurface* %24 to i64*
  store i64 %35, i64* %37, align 8
  %38 = icmp eq %class.SkCanvas* %36, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %28
  %40 = bitcast %class.SkCanvas* %36 to void (%class.SkCanvas*)***
  %41 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %41, i64 1
  %43 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %42, align 8
  tail call void %43(%class.SkCanvas* nonnull %36) #14
  %44 = load %class.SkCanvas*, %class.SkCanvas** %25, align 8
  br label %45

45:                                               ; preds = %39, %28
  %46 = phi %class.SkCanvas* [ %44, %39 ], [ %34, %28 ]
  %47 = icmp eq %class.SkCanvas* %46, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %46, i64 0, i32 9
  %50 = bitcast %class.SkSurface_Base** %49 to %class.SkSurface**
  store %class.SkSurface* %0, %class.SkSurface** %50, align 8
  %51 = load %class.SkCanvas*, %class.SkCanvas** %25, align 8
  br label %52

52:                                               ; preds = %18, %45, %48
  %53 = phi %class.SkCanvas* [ null, %45 ], [ %51, %48 ], [ %26, %18 ]
  %54 = call zeroext i1 @_ZN8SkCanvas10readPixelsERK8SkPixmapii(%class.SkCanvas* %53, %class.SkPixmap* nonnull dereferenceable(40) %7, i32 %4, i32 %5) #14
  %55 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8
  %56 = icmp eq %class.SkColorSpace* %55, null
  br i1 %56, label %63, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  %62 = bitcast %class.SkColorSpace* %55 to i8*
  call void @_ZdlPv(i8* %62) #15
  br label %63

63:                                               ; preds = %52, %57, %61
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #14
  ret i1 %54
}

declare zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap*, %class.SkPixmap*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface25asyncRescaleAndReadPixelsERK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_(%class.SkSurface*, %struct.SkImageInfo* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i1 zeroext, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*) local_unnamed_addr #6 align 2 {
  %8 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = sub nsw i64 %14, %17
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub nsw i64 %21, %24
  %26 = icmp slt i64 %18, 1
  %27 = icmp slt i64 %25, 1
  %28 = or i1 %26, %27
  br i1 %28, label %69, label %29

29:                                               ; preds = %7
  %30 = or i64 %25, %18
  %31 = add nsw i64 %30, 2147483648
  %32 = icmp ugt i64 %31, 4294967295
  br i1 %32, label %69, label %33

33:                                               ; preds = %29
  %34 = icmp slt i32 %9, 1
  %35 = icmp slt i32 %11, 1
  %36 = or i1 %34, %35
  br i1 %36, label %69, label %37

37:                                               ; preds = %33
  %38 = or i32 %11, %9
  %39 = sext i32 %38 to i64
  %40 = add nsw i64 %39, 2147483648
  %41 = icmp ugt i64 %40, 4294967295
  %42 = or i32 %23, %16
  %43 = icmp slt i32 %42, 0
  %44 = or i1 %41, %43
  %45 = icmp slt i32 %9, %13
  %46 = or i1 %45, %44
  %47 = icmp sge i32 %11, %20
  %48 = xor i1 %46, true
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %69

50:                                               ; preds = %37
  %51 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 1
  br i1 %53, label %69, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %52, 536870911
  %58 = add i32 %56, -1
  %59 = icmp ugt i32 %58, 536870910
  %60 = or i1 %57, %59
  br i1 %60, label %69, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = icmp ne i32 %63, 0
  %65 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp ne i32 %66, 0
  %68 = and i1 %64, %67
  br i1 %68, label %70, label %69

69:                                               ; preds = %50, %54, %7, %29, %33, %37, %61
  tail call void %5(i8* %6, %"class.SkImage::AsyncReadResult"* null) #14
  br label %76

70:                                               ; preds = %61
  %71 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %72 = bitcast %class.SkSurface* %0 to void (%class.SkSurface_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)***
  %73 = load void (%class.SkSurface_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)**, void (%class.SkSurface_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkSurface_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)*, void (%class.SkSurface_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)** %73, i64 11
  %75 = load void (%class.SkSurface_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)*, void (%class.SkSurface_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)** %74, align 8
  tail call void %75(%class.SkSurface_Base* %71, %struct.SkImageInfo* dereferenceable(24) %1, %struct.SkIRect* dereferenceable(16) %2, i1 zeroext %3, i32 %4, void (i8*, %"class.SkImage::AsyncReadResult"*)* %5, i8* %6) #14
  br label %76

76:                                               ; preds = %70, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface31asyncRescaleAndReadPixelsYUV420E15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRectRK7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_(%class.SkSurface*, i32, %class.sk_sp.16* nocapture, %struct.SkIRect* dereferenceable(16), %struct.SkISize* dereferenceable(8), i1 zeroext, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*) local_unnamed_addr #6 align 2 {
  %10 = alloca %class.sk_sp.16, align 8
  %11 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = sub nsw i64 %17, %20
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = sub nsw i64 %24, %27
  %29 = icmp slt i64 %21, 1
  %30 = icmp slt i64 %28, 1
  %31 = or i1 %29, %30
  br i1 %31, label %71, label %32

32:                                               ; preds = %9
  %33 = or i64 %28, %21
  %34 = add nsw i64 %33, 2147483648
  %35 = icmp ugt i64 %34, 4294967295
  br i1 %35, label %71, label %36

36:                                               ; preds = %32
  %37 = icmp slt i32 %12, 1
  %38 = icmp slt i32 %14, 1
  %39 = or i1 %37, %38
  br i1 %39, label %71, label %40

40:                                               ; preds = %36
  %41 = or i32 %14, %12
  %42 = sext i32 %41 to i64
  %43 = add nsw i64 %42, 2147483648
  %44 = icmp ugt i64 %43, 4294967295
  %45 = or i32 %26, %19
  %46 = icmp slt i32 %45, 0
  %47 = or i1 %44, %46
  %48 = icmp slt i32 %12, %16
  %49 = or i1 %48, %47
  %50 = icmp sge i32 %14, %23
  %51 = xor i1 %49, true
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %71

53:                                               ; preds = %40
  %54 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %71, label %67

61:                                               ; preds = %53
  %62 = and i32 %55, 1
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  br label %67

67:                                               ; preds = %64, %57
  %68 = phi i32 [ %66, %64 ], [ %59, %57 ]
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %9, %32, %36, %40, %57, %61, %67
  tail call void %7(i8* %8, %"class.SkImage::AsyncReadResult"* null) #14
  br label %91

72:                                               ; preds = %67
  %73 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %74 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %2, i64 0, i32 0
  %75 = bitcast %class.sk_sp.16* %2 to i64*
  %76 = load i64, i64* %75, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %74, align 8
  %77 = bitcast %class.sk_sp.16* %10 to i64*
  store i64 %76, i64* %77, align 8
  %78 = bitcast %class.SkSurface* %0 to void (%class.SkSurface_Base*, i32, %class.sk_sp.16*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)***
  %79 = load void (%class.SkSurface_Base*, i32, %class.sk_sp.16*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)**, void (%class.SkSurface_Base*, i32, %class.sk_sp.16*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.SkSurface_Base*, i32, %class.sk_sp.16*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)*, void (%class.SkSurface_Base*, i32, %class.sk_sp.16*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)** %79, i64 12
  %81 = load void (%class.SkSurface_Base*, i32, %class.sk_sp.16*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)*, void (%class.SkSurface_Base*, i32, %class.sk_sp.16*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)** %80, align 8
  call void %81(%class.SkSurface_Base* %73, i32 %1, %class.sk_sp.16* nonnull %10, %struct.SkIRect* dereferenceable(16) %3, %struct.SkISize* dereferenceable(8) %4, i1 zeroext %5, i32 %6, void (i8*, %"class.SkImage::AsyncReadResult"*)* %7, i8* %8) #14
  %82 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %10, i64 0, i32 0
  %83 = load %class.SkColorSpace*, %class.SkColorSpace** %82, align 8
  %84 = icmp eq %class.SkColorSpace* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %72
  %86 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = bitcast %class.SkColorSpace* %83 to i8*
  call void @_ZdlPv(i8* %90) #15
  br label %91

91:                                               ; preds = %89, %85, %72, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface11writePixelsERK8SkPixmapii(%class.SkSurface*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #6 align 2 {
  %5 = alloca %struct.SkIRect, align 4
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %struct.SkIRect*
  %10 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %175, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %175, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %175, label %21

21:                                               ; preds = %17
  %22 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #14
  %23 = bitcast { i64, i64 }* %6 to i32*
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 1
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %26 = bitcast i64* %25 to i32*
  %27 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 3
  %28 = sext i32 %2 to i64
  %29 = sext i32 %15 to i64
  %30 = add nsw i64 %29, %28
  %31 = icmp slt i64 %30, 2147483647
  %32 = select i1 %31, i64 %30, i64 2147483647
  %33 = icmp sgt i64 %32, -2147483647
  %34 = select i1 %33, i64 %32, i64 -2147483647
  %35 = sext i32 %3 to i64
  %36 = sext i32 %19 to i64
  %37 = add nsw i64 %36, %35
  %38 = icmp slt i64 %37, 2147483647
  %39 = select i1 %38, i64 %37, i64 2147483647
  %40 = icmp sgt i64 %39, -2147483647
  %41 = select i1 %40, i64 %39, i64 -2147483647
  %42 = zext i32 %3 to i64
  %43 = shl nuw i64 %42, 32
  %44 = zext i32 %2 to i64
  %45 = or i64 %43, %44
  %46 = shl nsw i64 %41, 32
  %47 = and i64 %34, 4294967295
  %48 = or i64 %46, %47
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %45, i64* %49, align 8
  store i64 %48, i64* %25, align 8
  %50 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #14
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %52 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = zext i32 %55 to i64
  %57 = shl nuw i64 %56, 32
  %58 = zext i32 %53 to i64
  %59 = or i64 %57, %58
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 0, i64* %60, align 8
  store i64 %59, i64* %51, align 8
  %61 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %61, i8 -86, i64 16, i1 false) #14
  %62 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %5, %struct.SkIRect* nonnull dereferenceable(16) %7, %struct.SkIRect* nonnull dereferenceable(16) %9) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #14
  br i1 %62, label %63, label %174

63:                                               ; preds = %21
  %64 = bitcast { i64, i64 }* %8 to i32*
  %65 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 3
  %66 = bitcast i64* %51 to i32*
  %67 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 1
  %68 = load i32, i32* %66, align 8
  %69 = sext i32 %68 to i64
  %70 = load i32, i32* %64, align 8
  %71 = sext i32 %70 to i64
  %72 = sub nsw i64 %69, %71
  %73 = load i32, i32* %65, align 4
  %74 = sext i32 %73 to i64
  %75 = load i32, i32* %67, align 4
  %76 = sext i32 %75 to i64
  %77 = sub nsw i64 %74, %76
  %78 = icmp slt i64 %72, 1
  %79 = icmp slt i64 %77, 1
  %80 = or i1 %78, %79
  br i1 %80, label %115, label %81

81:                                               ; preds = %63
  %82 = or i64 %77, %72
  %83 = add nsw i64 %82, 2147483648
  %84 = icmp ugt i64 %83, 4294967295
  br i1 %84, label %115, label %85

85:                                               ; preds = %81
  %86 = load i32, i32* %26, align 8
  %87 = sext i32 %86 to i64
  %88 = load i32, i32* %23, align 8
  %89 = sext i32 %88 to i64
  %90 = sub nsw i64 %87, %89
  %91 = load i32, i32* %27, align 4
  %92 = sext i32 %91 to i64
  %93 = load i32, i32* %24, align 4
  %94 = sext i32 %93 to i64
  %95 = sub nsw i64 %92, %94
  %96 = icmp slt i64 %90, 1
  %97 = icmp slt i64 %95, 1
  %98 = or i1 %96, %97
  br i1 %98, label %115, label %99

99:                                               ; preds = %85
  %100 = or i64 %95, %90
  %101 = add nsw i64 %100, 2147483648
  %102 = icmp ugt i64 %101, 4294967295
  %103 = icmp sgt i32 %88, %70
  %104 = or i1 %103, %102
  %105 = icmp sgt i32 %93, %75
  %106 = or i1 %105, %104
  %107 = icmp slt i32 %86, %68
  %108 = or i1 %107, %106
  %109 = icmp sge i32 %91, %73
  %110 = xor i1 %108, true
  %111 = and i1 %109, %110
  %112 = xor i1 %109, true
  %113 = or i1 %108, %112
  %114 = zext i1 %113 to i32
  br label %115

115:                                              ; preds = %99, %63, %81, %85
  %116 = phi i1 [ false, %85 ], [ false, %81 ], [ false, %63 ], [ %111, %99 ]
  %117 = phi i32 [ 1, %85 ], [ 1, %81 ], [ 1, %63 ], [ %114, %99 ]
  %118 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %119 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 0, i32 4
  store i32 0, i32* %119, align 4
  %120 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %0, i64 1, i32 0, i32 0, i32 1
  %121 = bitcast %"struct.std::__1::atomic"* %120 to %class.SkImage**
  %122 = load %class.SkImage*, %class.SkImage** %121, align 8
  %123 = icmp eq %class.SkImage* %122, null
  br i1 %123, label %163, label %124

124:                                              ; preds = %115
  %125 = getelementptr inbounds %class.SkImage, %class.SkImage* %122, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 acquire, align 4
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %145, label %128

128:                                              ; preds = %124
  %129 = bitcast %class.SkSurface* %0 to void (%class.SkSurface_Base*, i32)***
  %130 = load void (%class.SkSurface_Base*, i32)**, void (%class.SkSurface_Base*, i32)*** %129, align 8
  %131 = getelementptr inbounds void (%class.SkSurface_Base*, i32)*, void (%class.SkSurface_Base*, i32)** %130, i64 15
  %132 = load void (%class.SkSurface_Base*, i32)*, void (%class.SkSurface_Base*, i32)** %131, align 8
  call void %132(%class.SkSurface_Base* %118, i32 %117) #14
  %133 = load %class.SkImage*, %class.SkImage** %121, align 8
  store %class.SkImage* null, %class.SkImage** %121, align 8
  %134 = icmp eq %class.SkImage* %133, null
  br i1 %134, label %169, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %class.SkImage, %class.SkImage* %133, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw add i32* %136, i32 -1 acq_rel
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %169

139:                                              ; preds = %135
  %140 = bitcast %class.SkImage* %133 to %class.SkRefCntBase*
  %141 = bitcast %class.SkImage* %133 to void (%class.SkRefCntBase*)***
  %142 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %141, align 8
  %143 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %142, i64 2
  %144 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %143, align 8
  call void %144(%class.SkRefCntBase* nonnull %140) #14
  br label %169

145:                                              ; preds = %124
  %146 = load %class.SkImage*, %class.SkImage** %121, align 8
  store %class.SkImage* null, %class.SkImage** %121, align 8
  %147 = icmp eq %class.SkImage* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %class.SkImage, %class.SkImage* %146, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 -1 acq_rel
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %158

152:                                              ; preds = %148
  %153 = bitcast %class.SkImage* %146 to %class.SkRefCntBase*
  %154 = bitcast %class.SkImage* %146 to void (%class.SkRefCntBase*)***
  %155 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %154, align 8
  %156 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %155, i64 2
  %157 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %156, align 8
  call void %157(%class.SkRefCntBase* nonnull %153) #14
  br label %158

158:                                              ; preds = %152, %148, %145
  %159 = bitcast %class.SkSurface* %0 to void (%class.SkSurface_Base*)***
  %160 = load void (%class.SkSurface_Base*)**, void (%class.SkSurface_Base*)*** %159, align 8
  %161 = getelementptr inbounds void (%class.SkSurface_Base*)*, void (%class.SkSurface_Base*)** %160, i64 16
  %162 = load void (%class.SkSurface_Base*)*, void (%class.SkSurface_Base*)** %161, align 8
  call void %162(%class.SkSurface_Base* %118) #14
  br label %169

163:                                              ; preds = %115
  br i1 %116, label %164, label %169

164:                                              ; preds = %163
  %165 = bitcast %class.SkSurface* %0 to void (%class.SkSurface_Base*)***
  %166 = load void (%class.SkSurface_Base*)**, void (%class.SkSurface_Base*)*** %165, align 8
  %167 = getelementptr inbounds void (%class.SkSurface_Base*)*, void (%class.SkSurface_Base*)** %166, i64 14
  %168 = load void (%class.SkSurface_Base*)*, void (%class.SkSurface_Base*)** %167, align 8
  call void %168(%class.SkSurface_Base* %118) #14
  br label %169

169:                                              ; preds = %128, %135, %139, %158, %163, %164
  %170 = bitcast %class.SkSurface* %0 to void (%class.SkSurface_Base*, %class.SkPixmap*, i32, i32)***
  %171 = load void (%class.SkSurface_Base*, %class.SkPixmap*, i32, i32)**, void (%class.SkSurface_Base*, %class.SkPixmap*, i32, i32)*** %170, align 8
  %172 = getelementptr inbounds void (%class.SkSurface_Base*, %class.SkPixmap*, i32, i32)*, void (%class.SkSurface_Base*, %class.SkPixmap*, i32, i32)** %171, i64 10
  %173 = load void (%class.SkSurface_Base*, %class.SkPixmap*, i32, i32)*, void (%class.SkSurface_Base*, %class.SkPixmap*, i32, i32)** %172, align 8
  call void %173(%class.SkSurface_Base* %118, %class.SkPixmap* dereferenceable(40) %1, i32 %2, i32 %3) #14
  br label %174

174:                                              ; preds = %169, %21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #14
  br label %175

175:                                              ; preds = %4, %13, %17, %174
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface11writePixelsERK8SkBitmapii(%class.SkSurface*, %class.SkBitmap* dereferenceable(56), i32, i32) local_unnamed_addr #6 align 2 {
  %5 = alloca %class.SkPixmap, align 8
  %6 = bitcast %class.SkPixmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 40, i1 false) #14
  %7 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* %1, %class.SkPixmap* nonnull %5) #14
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  call void @_ZN9SkSurface11writePixelsERK8SkPixmapii(%class.SkSurface* %0, %class.SkPixmap* nonnull dereferenceable(40) %5, i32 %2, i32 %3)
  br label %9

9:                                                ; preds = %8, %4
  %10 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %class.SkColorSpace*, %class.SkColorSpace** %10, align 8
  %12 = icmp eq %class.SkColorSpace* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 -1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = bitcast %class.SkColorSpace* %11 to i8*
  call void @_ZdlPv(i8* %18) #15
  br label %19

19:                                               ; preds = %9, %13, %17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrRecordingContext* @_ZN9SkSurface16recordingContextEv(%class.SkSurface*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %3 = bitcast %class.SkSurface* %0 to %class.GrRecordingContext* (%class.SkSurface_Base*)***
  %4 = load %class.GrRecordingContext* (%class.SkSurface_Base*)**, %class.GrRecordingContext* (%class.SkSurface_Base*)*** %3, align 8
  %5 = getelementptr inbounds %class.GrRecordingContext* (%class.SkSurface_Base*)*, %class.GrRecordingContext* (%class.SkSurface_Base*)** %4, i64 3
  %6 = load %class.GrRecordingContext* (%class.SkSurface_Base*)*, %class.GrRecordingContext* (%class.SkSurface_Base*)** %5, align 8
  %7 = tail call %class.GrRecordingContext* %6(%class.SkSurface_Base* %2) #14
  ret %class.GrRecordingContext* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface17getBackendTextureENS_19BackendHandleAccessE(%class.GrBackendTexture* noalias sret, %class.SkSurface*, i32) local_unnamed_addr #6 align 2 {
  %4 = bitcast %class.SkSurface* %1 to %class.SkSurface_Base*
  %5 = bitcast %class.SkSurface* %1 to void (%class.GrBackendTexture*, %class.SkSurface_Base*, i32)***
  %6 = load void (%class.GrBackendTexture*, %class.SkSurface_Base*, i32)**, void (%class.GrBackendTexture*, %class.SkSurface_Base*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%class.GrBackendTexture*, %class.SkSurface_Base*, i32)*, void (%class.GrBackendTexture*, %class.SkSurface_Base*, i32)** %6, i64 4
  %8 = load void (%class.GrBackendTexture*, %class.SkSurface_Base*, i32)*, void (%class.GrBackendTexture*, %class.SkSurface_Base*, i32)** %7, align 8
  tail call void %8(%class.GrBackendTexture* sret %0, %class.SkSurface_Base* %4, i32 %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface22getBackendRenderTargetENS_19BackendHandleAccessE(%class.GrBackendRenderTarget* noalias sret, %class.SkSurface*, i32) local_unnamed_addr #6 align 2 {
  %4 = bitcast %class.SkSurface* %1 to %class.SkSurface_Base*
  %5 = bitcast %class.SkSurface* %1 to void (%class.GrBackendRenderTarget*, %class.SkSurface_Base*, i32)***
  %6 = load void (%class.GrBackendRenderTarget*, %class.SkSurface_Base*, i32)**, void (%class.GrBackendRenderTarget*, %class.SkSurface_Base*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%class.GrBackendRenderTarget*, %class.SkSurface_Base*, i32)*, void (%class.GrBackendRenderTarget*, %class.SkSurface_Base*, i32)** %6, i64 5
  %8 = load void (%class.GrBackendRenderTarget*, %class.SkSurface_Base*, i32)*, void (%class.GrBackendRenderTarget*, %class.SkSurface_Base*, i32)** %7, align 8
  tail call void %8(%class.GrBackendRenderTarget* sret %0, %class.SkSurface_Base* %4, i32 %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkSurface21replaceBackendTextureERK16GrBackendTexture15GrSurfaceOriginNS_17ContentChangeModeEPFvPvES5_(%class.SkSurface*, %class.GrBackendTexture* dereferenceable(176), i32, i32, void (i8*)*, i8*) local_unnamed_addr #6 align 2 {
  %7 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %8 = bitcast %class.SkSurface* %0 to i1 (%class.SkSurface_Base*, %class.GrBackendTexture*, i32, i32, void (i8*)*, i8*)***
  %9 = load i1 (%class.SkSurface_Base*, %class.GrBackendTexture*, i32, i32, void (i8*)*, i8*)**, i1 (%class.SkSurface_Base*, %class.GrBackendTexture*, i32, i32, void (i8*)*, i8*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%class.SkSurface_Base*, %class.GrBackendTexture*, i32, i32, void (i8*)*, i8*)*, i1 (%class.SkSurface_Base*, %class.GrBackendTexture*, i32, i32, void (i8*)*, i8*)** %9, i64 6
  %11 = load i1 (%class.SkSurface_Base*, %class.GrBackendTexture*, i32, i32, void (i8*)*, i8*)*, i1 (%class.SkSurface_Base*, %class.GrBackendTexture*, i32, i32, void (i8*)*, i8*)** %10, align 8
  %12 = tail call zeroext i1 %11(%class.SkSurface_Base* %7, %class.GrBackendTexture* dereferenceable(176) %1, i32 %2, i32 %3, void (i8*)* %4, i8* %5) #14
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkSurface5flushENS_20BackendSurfaceAccessERK11GrFlushInfo(%class.SkSurface*, i32, %struct.GrFlushInfo* dereferenceable(48)) local_unnamed_addr #6 align 2 {
  %4 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %5 = bitcast %class.SkSurface* %0 to i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)***
  %6 = load i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)**, i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)*, i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)** %6, i64 17
  %8 = load i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)*, i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkSurface_Base* %4, i32 %1, %struct.GrFlushInfo* dereferenceable(48) %2, %class.GrBackendSurfaceMutableState* null) #14
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkSurface5flushERK11GrFlushInfoPK28GrBackendSurfaceMutableState(%class.SkSurface*, %struct.GrFlushInfo* dereferenceable(48), %class.GrBackendSurfaceMutableState*) local_unnamed_addr #6 align 2 {
  %4 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %5 = bitcast %class.SkSurface* %0 to i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)***
  %6 = load i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)**, i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)*, i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)** %6, i64 17
  %8 = load i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)*, i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkSurface_Base* %4, i32 0, %struct.GrFlushInfo* dereferenceable(48) %1, %class.GrBackendSurfaceMutableState* %2) #14
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkSurface4waitEiPK18GrBackendSemaphoreb(%class.SkSurface*, i32, %class.GrBackendSemaphore*, i1 zeroext) local_unnamed_addr #6 align 2 {
  %5 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %6 = bitcast %class.SkSurface* %0 to i1 (%class.SkSurface_Base*, i32, %class.GrBackendSemaphore*, i1)***
  %7 = load i1 (%class.SkSurface_Base*, i32, %class.GrBackendSemaphore*, i1)**, i1 (%class.SkSurface_Base*, i32, %class.GrBackendSemaphore*, i1)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkSurface_Base*, i32, %class.GrBackendSemaphore*, i1)*, i1 (%class.SkSurface_Base*, i32, %class.GrBackendSemaphore*, i1)** %7, i64 18
  %9 = load i1 (%class.SkSurface_Base*, i32, %class.GrBackendSemaphore*, i1)*, i1 (%class.SkSurface_Base*, i32, %class.GrBackendSemaphore*, i1)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkSurface_Base* %5, i32 %1, %class.GrBackendSemaphore* %2, i1 zeroext %3) #14
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9SkSurface12characterizeEP25SkSurfaceCharacterization(%class.SkSurface*, %class.SkSurfaceCharacterization*) local_unnamed_addr #6 align 2 {
  %3 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %4 = bitcast %class.SkSurface* %0 to i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)***
  %5 = load i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)**, i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)*, i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)** %5, i64 19
  %7 = load i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)*, i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkSurface_Base* %3, %class.SkSurfaceCharacterization* %1) #14
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9SkSurface12isCompatibleERK25SkSurfaceCharacterization(%class.SkSurface*, %class.SkSurfaceCharacterization* dereferenceable(136)) local_unnamed_addr #6 align 2 {
  %3 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %4 = bitcast %class.SkSurface* %0 to i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)***
  %5 = load i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)**, i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)*, i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)** %5, i64 20
  %7 = load i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)*, i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkSurface_Base* %3, %class.SkSurfaceCharacterization* dereferenceable(136) %1) #14
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkSurface4drawE5sk_spIK21SkDeferredDisplayListEii(%class.SkSurface*, %class.sk_sp.106* nocapture, i32, i32) local_unnamed_addr #6 align 2 {
  %5 = alloca %class.sk_sp.106, align 8
  %6 = or i32 %3, %2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %28

8:                                                ; preds = %4
  %9 = bitcast %class.SkSurface* %0 to %class.SkSurface_Base*
  %10 = getelementptr inbounds %class.sk_sp.106, %class.sk_sp.106* %1, i64 0, i32 0
  %11 = bitcast %class.sk_sp.106* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store %class.SkDeferredDisplayList* null, %class.SkDeferredDisplayList** %10, align 8
  %13 = bitcast %class.sk_sp.106* %5 to i64*
  store i64 %12, i64* %13, align 8
  %14 = bitcast %class.SkSurface* %0 to i1 (%class.SkSurface_Base*, %class.sk_sp.106*, i64)***
  %15 = load i1 (%class.SkSurface_Base*, %class.sk_sp.106*, i64)**, i1 (%class.SkSurface_Base*, %class.sk_sp.106*, i64)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.SkSurface_Base*, %class.sk_sp.106*, i64)*, i1 (%class.SkSurface_Base*, %class.sk_sp.106*, i64)** %15, i64 21
  %17 = load i1 (%class.SkSurface_Base*, %class.sk_sp.106*, i64)*, i1 (%class.SkSurface_Base*, %class.sk_sp.106*, i64)** %16, align 8
  %18 = call zeroext i1 %17(%class.SkSurface_Base* %9, %class.sk_sp.106* nonnull %5, i64 0) #14
  %19 = getelementptr inbounds %class.sk_sp.106, %class.sk_sp.106* %5, i64 0, i32 0
  %20 = load %class.SkDeferredDisplayList*, %class.SkDeferredDisplayList** %19, align 8
  %21 = icmp eq %class.SkDeferredDisplayList* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %8
  %23 = getelementptr inbounds %class.SkDeferredDisplayList, %class.SkDeferredDisplayList* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  call void @_ZN21SkDeferredDisplayListD1Ev(%class.SkDeferredDisplayList* nonnull %20) #14
  %27 = bitcast %class.SkDeferredDisplayList* %20 to i8*
  call void @_ZdlPv(i8* %27) #15
  br label %28

28:                                               ; preds = %26, %22, %8, %4
  %29 = phi i1 [ false, %4 ], [ %18, %8 ], [ %18, %22 ], [ %18, %26 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface8MakeNullEii(%class.sk_sp.97* noalias nocapture sret, i32, i32) local_unnamed_addr #6 align 2 {
  %4 = icmp slt i32 %1, 1
  %5 = icmp slt i32 %2, 1
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %8, align 8
  br label %24

9:                                                ; preds = %3
  %10 = tail call i8* @_Znwm(i64 48) #15
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 4
  %13 = bitcast i8* %10 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %10, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 4, !alias.scope !46
  %16 = getelementptr inbounds i8, i8* %10, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 4, !alias.scope !46
  %18 = getelementptr inbounds i8, i8* %10, i64 20
  %19 = bitcast i8* %18 to i32*
  store i32 %1, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %10, i64 24
  %21 = bitcast i8* %20 to i32*
  store i32 %2, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %10, i64 28
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV13SkNullSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %23 = bitcast %class.sk_sp.97* %0 to i8**
  store i8* %10, i8** %23, align 8
  br label %24

24:                                               ; preds = %9, %7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #6 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #14
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkSurface_Base18onNewImageSnapshotEPK7SkIRect(%class.sk_sp.15* noalias sret, %class.SkSurface_Base*, %struct.SkIRect*) unnamed_addr #6 comdat align 2 {
  %4 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkSurface_Base9onDiscardEv(%class.SkSurface_Base*) unnamed_addr #6 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkSurface_Base26onRestoreBackingMutabilityEv(%class.SkSurface_Base*) unnamed_addr #6 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN14SkSurface_Base7onFlushEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState(%class.SkSurface_Base*, i32, %struct.GrFlushInfo* dereferenceable(48), %class.GrBackendSurfaceMutableState*) unnamed_addr #6 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN14SkSurface_Base6onWaitEiPK18GrBackendSemaphoreb(%class.SkSurface_Base*, i32, %class.GrBackendSemaphore*, i1 zeroext) unnamed_addr #6 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK14SkSurface_Base14onCharacterizeEP25SkSurfaceCharacterization(%class.SkSurface_Base*, %class.SkSurfaceCharacterization*) unnamed_addr #6 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK14SkSurface_Base14onIsCompatibleERK25SkSurfaceCharacterization(%class.SkSurface_Base*, %class.SkSurfaceCharacterization* dereferenceable(136)) unnamed_addr #6 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN14SkSurface_Base6onDrawE5sk_spIK21SkDeferredDisplayListE8SkIPoint(%class.SkSurface_Base*, %class.sk_sp.106*, i64) unnamed_addr #6 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #6 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkSurfaceD0Ev(%class.SkSurface*) unnamed_addr #10 comdat align 2 {
  %2 = bitcast %class.SkSurface* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSurface_BaseD2Ev(%class.SkSurface_Base* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV14SkSurface_Base, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  %5 = icmp eq %class.SkCanvas* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %4, i64 0, i32 9
  store %class.SkSurface_Base* null, %class.SkSurface_Base** %7, align 8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.SkSurface_Base, %class.SkSurface_Base* %0, i64 0, i32 2, i32 0
  %10 = load %class.SkImage*, %class.SkImage** %9, align 8
  %11 = icmp eq %class.SkImage* %10, null
  br i1 %11, label %30, label %12

12:                                               ; preds = %8
  %13 = bitcast %class.SkImage* %10 to %class.SkImage_Base*
  %14 = bitcast %class.SkImage* %10 to void (%class.SkImage_Base*)***
  %15 = load void (%class.SkImage_Base*)**, void (%class.SkImage_Base*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkImage_Base*)*, void (%class.SkImage_Base*)** %15, i64 13
  %17 = load void (%class.SkImage_Base*)*, void (%class.SkImage_Base*)** %16, align 8
  tail call void %17(%class.SkImage_Base* nonnull %13) #14
  %18 = load %class.SkImage*, %class.SkImage** %9, align 8
  %19 = icmp eq %class.SkImage* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %class.SkImage, %class.SkImage* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImage* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImage* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %8, %12, %20, %24
  %31 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %3, align 8
  %32 = icmp eq %class.SkCanvas* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %30
  %34 = bitcast %class.SkCanvas* %31 to void (%class.SkCanvas*)***
  %35 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %35, i64 1
  %37 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %36, align 8
  tail call void %37(%class.SkCanvas* nonnull %31) #14
  br label %38

38:                                               ; preds = %30, %33
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkNullSurfaceD0Ev(%class.SkNullSurface*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.SkNullSurface, %class.SkNullSurface* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV14SkSurface_Base, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkNullSurface, %class.SkNullSurface* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  %5 = icmp eq %class.SkCanvas* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %4, i64 0, i32 9
  store %class.SkSurface_Base* null, %class.SkSurface_Base** %7, align 8
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %class.SkNullSurface, %class.SkNullSurface* %0, i64 0, i32 0, i32 2, i32 0
  %10 = load %class.SkImage*, %class.SkImage** %9, align 8
  %11 = icmp eq %class.SkImage* %10, null
  br i1 %11, label %30, label %12

12:                                               ; preds = %8
  %13 = bitcast %class.SkImage* %10 to %class.SkImage_Base*
  %14 = bitcast %class.SkImage* %10 to void (%class.SkImage_Base*)***
  %15 = load void (%class.SkImage_Base*)**, void (%class.SkImage_Base*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkImage_Base*)*, void (%class.SkImage_Base*)** %15, i64 13
  %17 = load void (%class.SkImage_Base*)*, void (%class.SkImage_Base*)** %16, align 8
  tail call void %17(%class.SkImage_Base* nonnull %13) #14
  %18 = load %class.SkImage*, %class.SkImage** %9, align 8
  %19 = icmp eq %class.SkImage* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %class.SkImage, %class.SkImage* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImage* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImage* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %24, %20, %12, %8
  %31 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %3, align 8
  %32 = icmp eq %class.SkCanvas* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %30
  %34 = bitcast %class.SkCanvas* %31 to void (%class.SkCanvas*)***
  %35 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %35, i64 1
  %37 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %36, align 8
  tail call void %37(%class.SkCanvas* nonnull %31) #14
  br label %38

38:                                               ; preds = %30, %33
  %39 = bitcast %class.SkNullSurface* %0 to i8*
  tail call void @_ZdlPv(i8* %39) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkCanvas* @_ZN13SkNullSurface11onNewCanvasEv(%class.SkNullSurface*) unnamed_addr #6 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 3232) #15
  %3 = bitcast i8* %2 to %class.SkNoDrawCanvas*
  %4 = getelementptr inbounds %class.SkNullSurface, %class.SkNullSurface* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.SkNullSurface, %class.SkNullSurface* %0, i64 0, i32 0, i32 0, i32 3
  %7 = load i32, i32* %6, align 8
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* nonnull %3, i32 %5, i32 %7) #14
  %8 = bitcast i8* %2 to %class.SkCanvas*
  ret %class.SkCanvas* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkNullSurface12onNewSurfaceERK11SkImageInfo(%class.sk_sp.97* noalias sret, %class.SkNullSurface*, %struct.SkImageInfo* dereferenceable(24)) unnamed_addr #6 comdat align 2 {
  %4 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %5, 1
  %9 = icmp slt i32 %7, 1
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %12, align 8, !alias.scope !49
  br label %28

13:                                               ; preds = %3
  %14 = tail call i8* @_Znwm(i64 48) #15, !noalias !49
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to i32*
  store i32 1, i32* %16, align 4, !noalias !49
  %17 = bitcast i8* %14 to i32 (...)***
  %18 = getelementptr inbounds i8, i8* %14, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 4, !alias.scope !52, !noalias !49
  %20 = getelementptr inbounds i8, i8* %14, i64 16
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 4, !alias.scope !52, !noalias !49
  %22 = getelementptr inbounds i8, i8* %14, i64 20
  %23 = bitcast i8* %22 to i32*
  store i32 %5, i32* %23, align 4, !noalias !49
  %24 = getelementptr inbounds i8, i8* %14, i64 24
  %25 = bitcast i8* %24 to i32*
  store i32 %7, i32* %25, align 8, !noalias !49
  %26 = getelementptr inbounds i8, i8* %14, i64 28
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 20, i1 false) #14, !noalias !49
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV13SkNullSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8, !noalias !49
  %27 = bitcast %class.sk_sp.97* %0 to i8**
  store i8* %14, i8** %27, align 8, !alias.scope !49
  br label %28

28:                                               ; preds = %11, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkNullSurface18onNewImageSnapshotEPK7SkIRect(%class.sk_sp.15* noalias sret, %class.SkNullSurface*, %struct.SkIRect*) unnamed_addr #6 comdat align 2 {
  %4 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkNullSurface13onWritePixelsERK8SkPixmapii(%class.SkNullSurface*, %class.SkPixmap* dereferenceable(40), i32, i32) unnamed_addr #6 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkNullSurface6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkNullSurface*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) unnamed_addr #6 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkNullSurface13onCopyOnWriteEN9SkSurface17ContentChangeModeE(%class.SkNullSurface*, i32) unnamed_addr #6 comdat align 2 {
  ret void
}

declare void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas*, i32, i32) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN21SkDeferredDisplayListD1Ev(%class.SkDeferredDisplayList*) unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZL27SkSurfacePropsCopyOrDefaultPK14SkSurfaceProps: argument 0"}
!4 = distinct !{!4, !"_ZL27SkSurfacePropsCopyOrDefaultPK14SkSurfaceProps"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZL27SkSurfacePropsCopyOrDefaultPK14SkSurfaceProps: argument 0"}
!7 = distinct !{!7, !"_ZL27SkSurfacePropsCopyOrDefaultPK14SkSurfaceProps"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZL27SkSurfacePropsCopyOrDefaultPK14SkSurfaceProps: argument 0"}
!10 = distinct !{!10, !"_ZL27SkSurfacePropsCopyOrDefaultPK14SkSurfaceProps"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZL27SkSurfacePropsCopyOrDefaultPK14SkSurfaceProps: argument 0"}
!13 = distinct !{!13, !"_ZL27SkSurfacePropsCopyOrDefaultPK14SkSurfaceProps"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN14SkSurface_Base14refCachedImageEv: argument 0"}
!16 = distinct !{!16, !"_ZN14SkSurface_Base14refCachedImageEv"}
!17 = distinct !{!17, !18, !"_ZN9SkSurface17makeImageSnapshotEv: argument 0"}
!18 = distinct !{!18, !"_ZN9SkSurface17makeImageSnapshotEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN14SkSurface_Base14refCachedImageEv: argument 0"}
!21 = distinct !{!21, !"_ZN14SkSurface_Base14refCachedImageEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN9SkSurface9imageInfoEv: argument 0"}
!24 = distinct !{!24, !"_ZN9SkSurface9imageInfoEv"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!27 = distinct !{!27, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!28 = distinct !{!28, !29, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize: argument 0"}
!29 = distinct !{!29, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN14SkSurface_Base14refCachedImageEv: argument 0"}
!32 = distinct !{!32, !"_ZN14SkSurface_Base14refCachedImageEv"}
!33 = distinct !{!33, !34, !"_ZN9SkSurface17makeImageSnapshotEv: argument 0"}
!34 = distinct !{!34, !"_ZN9SkSurface17makeImageSnapshotEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN9SkSurface9imageInfoEv: argument 0"}
!37 = distinct !{!37, !"_ZN9SkSurface9imageInfoEv"}
!38 = !{!39, !41}
!39 = distinct !{!39, !40, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!40 = distinct !{!40, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!41 = distinct !{!41, !42, !"_ZNK11SkImageInfo6makeWHEii: argument 0"}
!42 = distinct !{!42, !"_ZNK11SkImageInfo6makeWHEii"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN9SkSurface11makeSurfaceERK11SkImageInfo: argument 0"}
!45 = distinct !{!45, !"_ZN9SkSurface11makeSurfaceERK11SkImageInfo"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZL27SkSurfacePropsCopyOrDefaultPK14SkSurfaceProps: argument 0"}
!48 = distinct !{!48, !"_ZL27SkSurfacePropsCopyOrDefaultPK14SkSurfaceProps"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN9SkSurface8MakeNullEii: argument 0"}
!51 = distinct !{!51, !"_ZN9SkSurface8MakeNullEii"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZL27SkSurfacePropsCopyOrDefaultPK14SkSurfaceProps: argument 0"}
!54 = distinct !{!54, !"_ZL27SkSurfacePropsCopyOrDefaultPK14SkSurfaceProps"}
