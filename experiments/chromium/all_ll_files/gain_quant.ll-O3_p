; ModuleID = '../../third_party/opus/src/silk/gain_quant.c'
source_filename = "../../third_party/opus/src/silk/gain_quant.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nounwind ssp uwtable
define hidden void @silk_gains_quant(i8* nocapture, i32* nocapture, i8* nocapture, i32, i32) local_unnamed_addr #0 {
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %96

7:                                                ; preds = %5
  %8 = zext i32 %4 to i64
  br label %9

9:                                                ; preds = %85, %7
  %10 = phi i64 [ 0, %7 ], [ %94, %85 ]
  %11 = getelementptr inbounds i32, i32* %1, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = tail call i32 @silk_lin2log(i32 %12) #3
  %14 = zext i32 %13 to i64
  %15 = shl i64 %14, 48
  %16 = add i64 %15, -588282701325271040
  %17 = ashr exact i64 %16, 48
  %18 = mul nsw i64 %17, 2251
  %19 = lshr i64 %18, 16
  %20 = trunc i64 %19 to i8
  %21 = getelementptr inbounds i8, i8* %0, i64 %10
  store i8 %20, i8* %21, align 1
  %22 = load i8, i8* %2, align 1
  %23 = icmp sgt i8 %22, %20
  br i1 %23, label %24, label %26

24:                                               ; preds = %9
  %25 = add nsw i8 %20, 1
  store i8 %25, i8* %21, align 1
  br label %26

26:                                               ; preds = %24, %9
  %27 = phi i8 [ %25, %24 ], [ %20, %9 ]
  %28 = icmp sgt i8 %27, 0
  %29 = select i1 %28, i8 %27, i8 0
  %30 = icmp slt i8 %29, 63
  %31 = select i1 %30, i8 %29, i8 63
  store i8 %31, i8* %21, align 1
  %32 = trunc i64 %10 to i32
  %33 = or i32 %32, %3
  %34 = icmp eq i32 %33, 0
  %35 = load i8, i8* %2, align 1
  br i1 %34, label %36, label %47

36:                                               ; preds = %26
  %37 = sext i8 %35 to i32
  %38 = add nsw i32 %37, -4
  %39 = icmp sgt i32 %38, 63
  %40 = zext i8 %31 to i32
  %41 = icmp sgt i32 %38, %40
  %42 = select i1 %41, i32 %38, i32 %40
  %43 = icmp slt i32 %38, %40
  %44 = select i1 %43, i32 %38, i32 63
  %45 = select i1 %39, i32 %44, i32 %42
  %46 = trunc i32 %45 to i8
  store i8 %46, i8* %21, align 1
  store i8 %46, i8* %2, align 1
  br label %85

47:                                               ; preds = %26
  %48 = sub i8 %31, %35
  store i8 %48, i8* %21, align 1
  %49 = load i8, i8* %2, align 1
  %50 = sext i8 %49 to i32
  %51 = add nsw i32 %50, 8
  %52 = sext i8 %48 to i32
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %54, label %61

54:                                               ; preds = %47
  %55 = sub nsw i32 504, %50
  %56 = add nsw i32 %52, 1
  %57 = add nsw i32 %56, %55
  %58 = lshr i32 %57, 1
  %59 = add nsw i32 %58, %51
  %60 = trunc i32 %59 to i8
  store i8 %60, i8* %21, align 1
  br label %61

61:                                               ; preds = %54, %47
  %62 = phi i8 [ %60, %54 ], [ %48, %47 ]
  %63 = icmp sgt i8 %62, -4
  %64 = select i1 %63, i8 %62, i8 -4
  %65 = icmp slt i8 %64, 36
  %66 = select i1 %65, i8 %64, i8 36
  store i8 %66, i8* %21, align 1
  %67 = sext i8 %66 to i32
  %68 = icmp slt i32 %51, %67
  br i1 %68, label %69, label %77

69:                                               ; preds = %61
  %70 = shl nsw i32 %67, 1
  %71 = sub nsw i32 %70, %51
  %72 = load i8, i8* %2, align 1
  %73 = trunc i32 %71 to i8
  %74 = add i8 %72, %73
  store i8 %74, i8* %2, align 1
  %75 = icmp slt i8 %74, 63
  %76 = select i1 %75, i8 %74, i8 63
  br label %80

77:                                               ; preds = %61
  %78 = load i8, i8* %2, align 1
  %79 = add i8 %78, %66
  br label %80

80:                                               ; preds = %77, %69
  %81 = phi i8 [ %79, %77 ], [ %76, %69 ]
  store i8 %81, i8* %2, align 1
  %82 = load i8, i8* %21, align 1
  %83 = add i8 %82, 4
  store i8 %83, i8* %21, align 1
  %84 = load i8, i8* %2, align 1
  br label %85

85:                                               ; preds = %80, %36
  %86 = phi i8 [ %84, %80 ], [ %46, %36 ]
  %87 = sext i8 %86 to i32
  %88 = mul nsw i32 %87, 1907825
  %89 = ashr i32 %88, 16
  %90 = icmp slt i32 %89, 1877
  %91 = select i1 %90, i32 %89, i32 1877
  %92 = add nsw i32 %91, 2090
  %93 = tail call i32 @silk_log2lin(i32 %92) #3
  store i32 %93, i32* %11, align 4
  %94 = add nuw nsw i64 %10, 1
  %95 = icmp eq i64 %94, %8
  br i1 %95, label %96, label %9

96:                                               ; preds = %85, %5
  ret void
}

declare i32 @silk_lin2log(i32) local_unnamed_addr #1

declare i32 @silk_log2lin(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @silk_gains_dequant(i32* nocapture, i8* nocapture readonly, i8* nocapture, i32, i32) local_unnamed_addr #0 {
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %54

7:                                                ; preds = %5
  %8 = zext i32 %4 to i64
  br label %9

9:                                                ; preds = %38, %7
  %10 = phi i64 [ 0, %7 ], [ %52, %38 ]
  %11 = trunc i64 %10 to i32
  %12 = or i32 %11, %3
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds i8, i8* %1, i64 %10
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  br i1 %13, label %17, label %24

17:                                               ; preds = %9
  %18 = load i8, i8* %2, align 1
  %19 = sext i8 %18 to i32
  %20 = add nsw i32 %19, -16
  %21 = icmp slt i32 %20, %16
  %22 = select i1 %21, i32 %16, i32 %20
  %23 = trunc i32 %22 to i8
  br label %38

24:                                               ; preds = %9
  %25 = add nsw i32 %16, -4
  %26 = load i8, i8* %2, align 1
  %27 = sext i8 %26 to i32
  %28 = add nsw i32 %27, 8
  %29 = icmp sgt i32 %25, %28
  br i1 %29, label %30, label %35

30:                                               ; preds = %24
  %31 = shl nsw i32 %25, 1
  %32 = sub nsw i32 %31, %28
  %33 = trunc i32 %32 to i8
  %34 = add i8 %26, %33
  br label %38

35:                                               ; preds = %24
  %36 = trunc i32 %25 to i8
  %37 = add i8 %26, %36
  br label %38

38:                                               ; preds = %30, %35, %17
  %39 = phi i8 [ %34, %30 ], [ %37, %35 ], [ %23, %17 ]
  %40 = icmp sgt i8 %39, 0
  %41 = select i1 %40, i8 %39, i8 0
  %42 = icmp slt i8 %41, 63
  %43 = select i1 %42, i8 %41, i8 63
  store i8 %43, i8* %2, align 1
  %44 = zext i8 %43 to i32
  %45 = mul nuw nsw i32 %44, 1907825
  %46 = lshr i32 %45, 16
  %47 = icmp ult i32 %46, 1877
  %48 = select i1 %47, i32 %46, i32 1877
  %49 = add nuw nsw i32 %48, 2090
  %50 = tail call i32 @silk_log2lin(i32 %49) #3
  %51 = getelementptr inbounds i32, i32* %0, i64 %10
  store i32 %50, i32* %51, align 4
  %52 = add nuw nsw i64 %10, 1
  %53 = icmp eq i64 %52, %8
  br i1 %53, label %54, label %9

54:                                               ; preds = %38, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @silk_gains_ID(i8* nocapture readonly, i32) local_unnamed_addr #2 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %58

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  %6 = add nsw i64 %5, -1
  %7 = and i64 %5, 3
  %8 = icmp ult i64 %6, 3
  br i1 %8, label %41, label %9

9:                                                ; preds = %4
  %10 = sub nsw i64 %5, %7
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i64 [ 0, %9 ], [ %38, %11 ]
  %13 = phi i32 [ 0, %9 ], [ %37, %11 ]
  %14 = phi i64 [ %10, %9 ], [ %39, %11 ]
  %15 = getelementptr inbounds i8, i8* %0, i64 %12
  %16 = load i8, i8* %15, align 1
  %17 = sext i8 %16 to i32
  %18 = shl i32 %13, 8
  %19 = add nsw i32 %18, %17
  %20 = or i64 %12, 1
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = shl i32 %19, 8
  %25 = add nsw i32 %24, %23
  %26 = or i64 %12, 2
  %27 = getelementptr inbounds i8, i8* %0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = shl i32 %25, 8
  %31 = add nsw i32 %30, %29
  %32 = or i64 %12, 3
  %33 = getelementptr inbounds i8, i8* %0, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = shl i32 %31, 8
  %37 = add nsw i32 %36, %35
  %38 = add nuw nsw i64 %12, 4
  %39 = add i64 %14, -4
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %11

41:                                               ; preds = %11, %4
  %42 = phi i32 [ undef, %4 ], [ %37, %11 ]
  %43 = phi i64 [ 0, %4 ], [ %38, %11 ]
  %44 = phi i32 [ 0, %4 ], [ %37, %11 ]
  %45 = icmp eq i64 %7, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %41, %46
  %47 = phi i64 [ %55, %46 ], [ %43, %41 ]
  %48 = phi i32 [ %54, %46 ], [ %44, %41 ]
  %49 = phi i64 [ %56, %46 ], [ %7, %41 ]
  %50 = getelementptr inbounds i8, i8* %0, i64 %47
  %51 = load i8, i8* %50, align 1
  %52 = sext i8 %51 to i32
  %53 = shl i32 %48, 8
  %54 = add nsw i32 %53, %52
  %55 = add nuw nsw i64 %47, 1
  %56 = add i64 %49, -1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %46, !llvm.loop !2

58:                                               ; preds = %41, %46, %2
  %59 = phi i32 [ 0, %2 ], [ %42, %41 ], [ %54, %46 ]
  ret i32 %59
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
