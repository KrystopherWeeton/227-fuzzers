; ModuleID = '../../chrome/services/media_gallery_util/public/mojom/media_parser_mojom_traits.cc'
source_filename = "../../chrome/services/media_gallery_util/public/mojom/media_parser_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.chrome::mojom::internal::AttachedImage_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.0" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.3", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.1"*, %"class.mojo::ScopedHandleBase.1"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.1" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.1"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.5" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.14, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.16", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.13", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.14 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15" }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i32 }
%"struct.metadata::AttachedImage" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN6chrome5mojom21AttachedImageDataViewEN8metadata13AttachedImageEE4ReadES3_PS5_(%"class.chrome::mojom::internal::AttachedImage_Data"*, %"class.mojo::Message"*, %"struct.metadata::AttachedImage"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.metadata::AttachedImage", %"struct.metadata::AttachedImage"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"class.chrome::mojom::internal::AttachedImage_Data", %"class.chrome::mojom::internal::AttachedImage_Data"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = bitcast %"struct.mojo::internal::Pointer"* %5 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %7
  br i1 %8, label %56, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = getelementptr inbounds i8, i8* %10, i64 4
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 1
  %16 = zext i32 %15 to i64
  %17 = tail call i1 @llvm.is.constant.i64(i64 %16) #4
  %18 = icmp ult i32 %15, 23
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %38

20:                                               ; preds = %11
  %21 = bitcast %"struct.metadata::AttachedImage"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.metadata::AttachedImage", %"struct.metadata::AttachedImage"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %16, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.metadata::AttachedImage", %"struct.metadata::AttachedImage"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  br label %32

29:                                               ; preds = %20
  %30 = trunc i32 %15 to i8
  store i8 %30, i8* %22, align 1
  %31 = bitcast %"struct.metadata::AttachedImage"* %2 to i8*
  br label %32

32:                                               ; preds = %29, %25
  %33 = phi i8* [ %28, %25 ], [ %31, %29 ]
  %34 = icmp eq i32 %15, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %12, i64 %16, i1 false) #4
  br label %36

36:                                               ; preds = %35, %32
  %37 = getelementptr inbounds i8, i8* %33, i64 %16
  store i8 0, i8* %37, align 1
  br label %41

38:                                               ; preds = %11
  %39 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %4, i8* %12, i64 %16) #4
  %40 = bitcast %"struct.metadata::AttachedImage"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %41

41:                                               ; preds = %38, %36
  %42 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %40, %38 ], [ %21, %36 ]
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"struct.metadata::AttachedImage", %"struct.metadata::AttachedImage"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = bitcast %"struct.metadata::AttachedImage"* %2 to i8*
  %49 = select i1 %45, i8* %47, i8* %48
  %50 = getelementptr inbounds %"struct.metadata::AttachedImage", %"struct.metadata::AttachedImage"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %44 to i64
  %53 = select i1 %45, i64 %51, i64 %52
  %54 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %49, i64 %53) #4
  br i1 %54, label %56, label %55

55:                                               ; preds = %41
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #4
  br label %56

56:                                               ; preds = %55, %41, %3
  %57 = getelementptr inbounds %"class.chrome::mojom::internal::AttachedImage_Data", %"class.chrome::mojom::internal::AttachedImage_Data"* %0, i64 0, i32 2
  %58 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %57, i64 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, 0
  %61 = bitcast %"struct.mojo::internal::Pointer.0"* %57 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 %59
  %63 = bitcast i8* %62 to %"class.mojo::internal::Array_Data"*
  %64 = select i1 %60, %"class.mojo::internal::Array_Data"* null, %"class.mojo::internal::Array_Data"* %63
  %65 = getelementptr inbounds %"struct.metadata::AttachedImage", %"struct.metadata::AttachedImage"* %2, i64 0, i32 1
  %66 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %64, i64 1
  %67 = bitcast %"class.mojo::internal::Array_Data"* %66 to i8*
  %68 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %64, i64 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 1
  %70 = zext i32 %69 to i64
  %71 = tail call i1 @llvm.is.constant.i64(i64 %70) #4
  %72 = icmp ult i32 %69, 23
  %73 = and i1 %72, %71
  br i1 %73, label %74, label %92

74:                                               ; preds = %56
  %75 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.metadata::AttachedImage", %"struct.metadata::AttachedImage"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %70, i64* %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  br label %86

83:                                               ; preds = %74
  %84 = trunc i32 %69 to i8
  store i8 %84, i8* %76, align 1
  %85 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  br label %86

86:                                               ; preds = %83, %79
  %87 = phi i8* [ %82, %79 ], [ %85, %83 ]
  %88 = icmp eq i32 %69, 0
  br i1 %88, label %90, label %89

89:                                               ; preds = %86
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %67, i64 %70, i1 false) #4
  br label %90

90:                                               ; preds = %89, %86
  %91 = getelementptr inbounds i8, i8* %87, i64 %70
  store i8 0, i8* %91, align 1
  br label %94

92:                                               ; preds = %56
  %93 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %65, i8* %67, i64 %70) #4
  br label %94

94:                                               ; preds = %92, %90
  ret i1 true
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
