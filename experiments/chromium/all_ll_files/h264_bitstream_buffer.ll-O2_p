; ModuleID = '../../media/filters/h264_bitstream_buffer.cc'
source_filename = "../../media/filters/h264_bitstream_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.media::H264BitstreamBuffer" = type { %"class.base::RefCountedThreadSafe", i64, i64, i64, i64, i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZZN7logging15CheckOpValueStrIN5media19H264BitstreamBufferUt_EEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [45 x i8] c"../../media/filters/h264_bitstream_buffer.cc\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"data_\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"Failed growing the buffer\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"num_bits <= kRegBitSize\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN5media19H264BitstreamBufferC1Ev = hidden unnamed_addr alias void (%"class.media::H264BitstreamBuffer"*), void (%"class.media::H264BitstreamBuffer"*)* @_ZN5media19H264BitstreamBufferC2Ev
@_ZN5media19H264BitstreamBufferD1Ev = hidden unnamed_addr alias void (%"class.media::H264BitstreamBuffer"*), void (%"class.media::H264BitstreamBuffer"*)* @_ZN5media19H264BitstreamBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19H264BitstreamBufferC2Ev(%"class.media::H264BitstreamBuffer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 5
  store i8* null, i8** %3, align 8
  tail call void @_ZN5media19H264BitstreamBuffer5ResetEv(%"class.media::H264BitstreamBuffer"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19H264BitstreamBuffer5ResetEv(%"class.media::H264BitstreamBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 5
  %4 = load i8*, i8** %3, align 8
  tail call void @free(i8* %4) #10
  %5 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 2
  %7 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  %8 = tail call i8* @malloc(i64 4096)
  store i8* %8, i8** %3, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %16

10:                                               ; preds = %1
  %11 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #10
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i64 25) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  %14 = load i64, i64* %5, align 8
  %15 = add i64 %14, 4096
  br label %16

16:                                               ; preds = %1, %10
  %17 = phi i64 [ 4096, %1 ], [ %15, %10 ]
  store i64 %17, i64* %5, align 8
  %18 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 1
  store i64 64, i64* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19H264BitstreamBufferD2Ev(%"class.media::H264BitstreamBuffer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 5
  %3 = load i8*, i8** %2, align 8
  tail call void @free(i8* %3) #10
  store i8* null, i8** %2, align 8
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19H264BitstreamBuffer4GrowEv(%"class.media::H264BitstreamBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 5
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 4096
  %8 = tail call i8* @realloc(i8* %4, i64 %7) #10
  store i8* %8, i8** %3, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #10
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i64 25) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %14

14:                                               ; preds = %1, %10
  %15 = load i64, i64* %5, align 8
  %16 = add i64 %15, 4096
  store i64 %16, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19H264BitstreamBuffer8FlushRegEv(%"class.media::H264BitstreamBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 64
  br i1 %5, label %42, label %6

6:                                                ; preds = %1
  %7 = sub i64 71, %4
  %8 = lshr i64 %7, 3
  %9 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, %4
  %12 = tail call i64 @llvm.bswap.i64(i64 %11) #10
  store i64 %12, i64* %9, align 8
  %13 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, %8
  %16 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %33

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 5
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %17, 4096
  %23 = tail call i8* @realloc(i8* %21, i64 %22) #10
  store i8* %23, i8** %20, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %19
  %26 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #10
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i64 25) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  br label %29

29:                                               ; preds = %19, %25
  %30 = load i64, i64* %16, align 8
  %31 = add i64 %30, 4096
  store i64 %31, i64* %16, align 8
  %32 = load i64, i64* %13, align 8
  br label %33

33:                                               ; preds = %29, %6
  %34 = phi i64 [ %32, %29 ], [ %14, %6 ]
  %35 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 5
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %34
  %38 = bitcast i64* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 8 %38, i64 %8, i1 false)
  %39 = load i64, i64* %13, align 8
  %40 = add i64 %39, %8
  store i64 %40, i64* %13, align 8
  %41 = bitcast i64* %3 to <2 x i64>*
  store <2 x i64> <i64 64, i64 0>, <2 x i64>* %41, align 8
  br label %42

42:                                               ; preds = %1, %33
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19H264BitstreamBuffer9AppendU64Emm(%"class.media::H264BitstreamBuffer"* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  store i32 64, i32* %6, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i64 %1, 64
  br i1 %12, label %13, label %23

13:                                               ; preds = %3
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #10
  %15 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %10, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN5media19H264BitstreamBufferUt_EEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %17, i8** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 64, %"class.logging::CheckOpResult"* nonnull %5) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  br label %25

23:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  %24 = icmp eq i64 %1, 0
  br i1 %24, label %53, label %25

25:                                               ; preds = %22, %23
  %26 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 2
  %28 = load i64, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %46
  %30 = phi i64 [ %28, %25 ], [ %51, %46 ]
  %31 = phi i64 [ %1, %25 ], [ %39, %46 ]
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  call void @_ZN5media19H264BitstreamBuffer8FlushRegEv(%"class.media::H264BitstreamBuffer"* %0)
  %34 = load i64, i64* %26, align 8
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi i64 [ %34, %33 ], [ %30, %29 ]
  %37 = icmp ugt i64 %31, %36
  %38 = select i1 %37, i64 %36, i64 %31
  %39 = sub i64 %31, %38
  %40 = lshr i64 %2, %39
  %41 = icmp ult i64 %38, 64
  br i1 %41, label %42, label %46

42:                                               ; preds = %35
  %43 = shl nsw i64 -1, %38
  %44 = xor i64 %43, -1
  %45 = and i64 %40, %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i64 [ %45, %42 ], [ %40, %35 ]
  %48 = load i64, i64* %27, align 8
  %49 = shl i64 %48, %38
  %50 = or i64 %49, %47
  store i64 %50, i64* %27, align 8
  %51 = sub i64 %36, %38
  store i64 %51, i64* %26, align 8
  %52 = icmp eq i64 %39, 0
  br i1 %52, label %53, label %29

53:                                               ; preds = %46, %23
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19H264BitstreamBuffer10AppendBoolEb(%"class.media::H264BitstreamBuffer"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  tail call void @_ZN5media19H264BitstreamBuffer8FlushRegEv(%"class.media::H264BitstreamBuffer"* %0)
  %7 = load i64, i64* %3, align 8
  br label %8

8:                                                ; preds = %6, %2
  %9 = phi i64 [ %7, %6 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = shl i64 %11, 1
  %13 = zext i1 %1 to i64
  %14 = or i64 %12, %13
  store i64 %14, i64* %10, align 8
  %15 = add i64 %9, -1
  store i64 %15, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19H264BitstreamBuffer8AppendSEEi(%"class.media::H264BitstreamBuffer"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, 0
  %4 = shl i32 %1, 1
  br i1 %3, label %5, label %13

5:                                                ; preds = %2
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %10, %7 ], [ %4, %5 ]
  %9 = phi i64 [ %11, %7 ], [ 0, %5 ]
  %10 = lshr i32 %8, 1
  %11 = add nuw nsw i64 %9, 1
  %12 = icmp ugt i32 %8, 3
  br i1 %12, label %7, label %22

13:                                               ; preds = %2
  %14 = sub i32 1, %4
  %15 = icmp eq i32 %4, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %13, %16
  %17 = phi i32 [ %19, %16 ], [ %14, %13 ]
  %18 = phi i64 [ %20, %16 ], [ 0, %13 ]
  %19 = lshr i32 %17, 1
  %20 = add nuw nsw i64 %18, 1
  %21 = icmp ugt i32 %17, 3
  br i1 %21, label %16, label %22

22:                                               ; preds = %16, %7, %13, %5
  %23 = phi i64 [ 0, %5 ], [ 0, %13 ], [ %11, %7 ], [ %20, %16 ]
  %24 = phi i32 [ %4, %5 ], [ %14, %13 ], [ %4, %7 ], [ %14, %16 ]
  tail call void @_ZN5media19H264BitstreamBuffer9AppendU64Emm(%"class.media::H264BitstreamBuffer"* %0, i64 %23, i64 0) #10
  %25 = add i64 %23, 1
  %26 = zext i32 %24 to i64
  tail call void @_ZN5media19H264BitstreamBuffer9AppendU64Emm(%"class.media::H264BitstreamBuffer"* %0, i64 %25, i64 %26) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19H264BitstreamBuffer8AppendUEEj(%"class.media::H264BitstreamBuffer"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = add i32 %1, 1
  %4 = icmp ugt i32 %3, 1
  br i1 %4, label %5, label %11

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %8, %5 ], [ %3, %2 ]
  %7 = phi i64 [ %9, %5 ], [ 0, %2 ]
  %8 = lshr i32 %6, 1
  %9 = add nuw nsw i64 %7, 1
  %10 = icmp ugt i32 %6, 3
  br i1 %10, label %5, label %11

11:                                               ; preds = %5, %2
  %12 = phi i64 [ 0, %2 ], [ %9, %5 ]
  tail call void @_ZN5media19H264BitstreamBuffer9AppendU64Emm(%"class.media::H264BitstreamBuffer"* %0, i64 %12, i64 0) #10
  %13 = add i64 %12, 1
  %14 = zext i32 %3 to i64
  tail call void @_ZN5media19H264BitstreamBuffer9AppendU64Emm(%"class.media::H264BitstreamBuffer"* %0, i64 %13, i64 %14) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19H264BitstreamBuffer9BeginNALUENS_8H264NALU4TypeEi(%"class.media::H264BitstreamBuffer"* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 2
  %6 = load i64, i64* %4, align 8
  br label %7

7:                                                ; preds = %24, %3
  %8 = phi i64 [ %6, %3 ], [ %29, %24 ]
  %9 = phi i64 [ 32, %3 ], [ %17, %24 ]
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  tail call void @_ZN5media19H264BitstreamBuffer8FlushRegEv(%"class.media::H264BitstreamBuffer"* %0) #10
  %12 = load i64, i64* %4, align 8
  br label %13

13:                                               ; preds = %11, %7
  %14 = phi i64 [ %12, %11 ], [ %8, %7 ]
  %15 = icmp ugt i64 %9, %14
  %16 = select i1 %15, i64 %14, i64 %9
  %17 = sub i64 %9, %16
  %18 = lshr i64 1, %17
  %19 = icmp ult i64 %16, 64
  br i1 %19, label %20, label %24

20:                                               ; preds = %13
  %21 = shl nsw i64 -1, %16
  %22 = xor i64 %21, -1
  %23 = and i64 %18, %22
  br label %24

24:                                               ; preds = %20, %13
  %25 = phi i64 [ %23, %20 ], [ %18, %13 ]
  %26 = load i64, i64* %5, align 8
  %27 = shl i64 %26, %16
  %28 = or i64 %27, %25
  store i64 %28, i64* %5, align 8
  %29 = sub i64 %14, %16
  store i64 %29, i64* %4, align 8
  %30 = icmp eq i64 %17, 0
  br i1 %30, label %31, label %7

31:                                               ; preds = %24, %39
  %32 = phi i64 [ %45, %39 ], [ %28, %24 ]
  %33 = phi i64 [ %46, %39 ], [ %29, %24 ]
  %34 = phi i64 [ %44, %39 ], [ 1, %24 ]
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  tail call void @_ZN5media19H264BitstreamBuffer8FlushRegEv(%"class.media::H264BitstreamBuffer"* %0) #10
  %37 = load i64, i64* %4, align 8
  %38 = load i64, i64* %5, align 8
  br label %39

39:                                               ; preds = %36, %31
  %40 = phi i64 [ %38, %36 ], [ %32, %31 ]
  %41 = phi i64 [ %37, %36 ], [ %33, %31 ]
  %42 = icmp ugt i64 %34, %41
  %43 = select i1 %42, i64 %41, i64 %34
  %44 = sub i64 %34, %43
  %45 = shl i64 %40, %43
  store i64 %45, i64* %5, align 8
  %46 = sub i64 %41, %43
  store i64 %46, i64* %4, align 8
  %47 = icmp eq i64 %44, 0
  br i1 %47, label %48, label %31

48:                                               ; preds = %39
  %49 = sext i32 %2 to i64
  br label %50

50:                                               ; preds = %67, %48
  %51 = phi i64 [ %46, %48 ], [ %72, %67 ]
  %52 = phi i64 [ 2, %48 ], [ %60, %67 ]
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  tail call void @_ZN5media19H264BitstreamBuffer8FlushRegEv(%"class.media::H264BitstreamBuffer"* %0) #10
  %55 = load i64, i64* %4, align 8
  br label %56

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %55, %54 ], [ %51, %50 ]
  %58 = icmp ugt i64 %52, %57
  %59 = select i1 %58, i64 %57, i64 %52
  %60 = sub i64 %52, %59
  %61 = lshr i64 %49, %60
  %62 = icmp ult i64 %59, 64
  br i1 %62, label %63, label %67

63:                                               ; preds = %56
  %64 = shl nsw i64 -1, %59
  %65 = xor i64 %64, -1
  %66 = and i64 %61, %65
  br label %67

67:                                               ; preds = %63, %56
  %68 = phi i64 [ %66, %63 ], [ %61, %56 ]
  %69 = load i64, i64* %5, align 8
  %70 = shl i64 %69, %59
  %71 = or i64 %70, %68
  store i64 %71, i64* %5, align 8
  %72 = sub i64 %57, %59
  store i64 %72, i64* %4, align 8
  %73 = icmp eq i64 %60, 0
  br i1 %73, label %74, label %50

74:                                               ; preds = %67
  %75 = zext i32 %1 to i64
  br label %76

76:                                               ; preds = %93, %74
  %77 = phi i64 [ %72, %74 ], [ %98, %93 ]
  %78 = phi i64 [ 5, %74 ], [ %86, %93 ]
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %76
  tail call void @_ZN5media19H264BitstreamBuffer8FlushRegEv(%"class.media::H264BitstreamBuffer"* %0) #10
  %81 = load i64, i64* %4, align 8
  br label %82

82:                                               ; preds = %80, %76
  %83 = phi i64 [ %81, %80 ], [ %77, %76 ]
  %84 = icmp ugt i64 %78, %83
  %85 = select i1 %84, i64 %83, i64 %78
  %86 = sub i64 %78, %85
  %87 = lshr i64 %75, %86
  %88 = icmp ult i64 %85, 64
  br i1 %88, label %89, label %93

89:                                               ; preds = %82
  %90 = shl nsw i64 -1, %85
  %91 = xor i64 %90, -1
  %92 = and i64 %87, %91
  br label %93

93:                                               ; preds = %89, %82
  %94 = phi i64 [ %92, %89 ], [ %87, %82 ]
  %95 = load i64, i64* %5, align 8
  %96 = shl i64 %95, %85
  %97 = or i64 %96, %94
  store i64 %97, i64* %5, align 8
  %98 = sub i64 %83, %85
  store i64 %98, i64* %4, align 8
  %99 = icmp eq i64 %86, 0
  br i1 %99, label %100, label %76

100:                                              ; preds = %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19H264BitstreamBuffer10FinishNALUEv(%"class.media::H264BitstreamBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 2
  %4 = load i64, i64* %2, align 8
  br label %5

5:                                                ; preds = %22, %1
  %6 = phi i64 [ %4, %1 ], [ %27, %22 ]
  %7 = phi i64 [ 1, %1 ], [ %15, %22 ]
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN5media19H264BitstreamBuffer8FlushRegEv(%"class.media::H264BitstreamBuffer"* %0) #10
  %10 = load i64, i64* %2, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = phi i64 [ %10, %9 ], [ %6, %5 ]
  %13 = icmp ugt i64 %7, %12
  %14 = select i1 %13, i64 %12, i64 %7
  %15 = sub i64 %7, %14
  %16 = lshr i64 1, %15
  %17 = icmp ult i64 %14, 64
  br i1 %17, label %18, label %22

18:                                               ; preds = %11
  %19 = shl nsw i64 -1, %14
  %20 = xor i64 %19, -1
  %21 = and i64 %16, %20
  br label %22

22:                                               ; preds = %18, %11
  %23 = phi i64 [ %21, %18 ], [ %16, %11 ]
  %24 = load i64, i64* %3, align 8
  %25 = shl i64 %24, %14
  %26 = or i64 %25, %23
  store i64 %26, i64* %3, align 8
  %27 = sub i64 %12, %14
  store i64 %27, i64* %2, align 8
  %28 = icmp eq i64 %15, 0
  br i1 %28, label %29, label %5

29:                                               ; preds = %22
  %30 = and i64 %27, 7
  tail call void @_ZN5media19H264BitstreamBuffer9AppendU64Emm(%"class.media::H264BitstreamBuffer"* %0, i64 %30, i64 0) #10
  %31 = load i64, i64* %2, align 8
  %32 = icmp eq i64 %31, 64
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @_ZN5media19H264BitstreamBuffer8FlushRegEv(%"class.media::H264BitstreamBuffer"* %0)
  br label %34

34:                                               ; preds = %29, %33
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5media19H264BitstreamBuffer13BytesInBufferEv(%"class.media::H264BitstreamBuffer"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK5media19H264BitstreamBuffer4dataEv(%"class.media::H264BitstreamBuffer"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.media::H264BitstreamBuffer", %"class.media::H264BitstreamBuffer"* %0, i64 0, i32 5
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIN5media19H264BitstreamBufferUt_EEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #1

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
