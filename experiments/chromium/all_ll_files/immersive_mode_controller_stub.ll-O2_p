; ModuleID = '../../chrome/browser/ui/views/frame/immersive_mode_controller_stub.cc'
source_filename = "../../chrome/browser/ui/views/frame/immersive_mode_controller_stub.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ImmersiveModeControllerStub = type { %class.ImmersiveModeController }
%class.ImmersiveModeController = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.BrowserView = type opaque
%"class.gfx::Size" = type opaque
%class.ImmersiveRevealedLock = type { i32 (...)** }
%"class.gfx::Rect" = type opaque
%"class.views::Widget" = type opaque
%"class.ImmersiveModeController::Observer" = type { i32 (...)** }

$_ZN27ImmersiveModeControllerStubD0Ev = comdat any

@_ZTV27ImmersiveModeControllerStub = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ImmersiveModeController*)* @_ZN23ImmersiveModeControllerD2Ev to i8*), i8* bitcast (void (%class.ImmersiveModeControllerStub*)* @_ZN27ImmersiveModeControllerStubD0Ev to i8*), i8* bitcast (void (%class.ImmersiveModeControllerStub*, %class.BrowserView*)* @_ZN27ImmersiveModeControllerStub4InitEP11BrowserView to i8*), i8* bitcast (void (%class.ImmersiveModeControllerStub*, i1)* @_ZN27ImmersiveModeControllerStub10SetEnabledEb to i8*), i8* bitcast (i1 (%class.ImmersiveModeControllerStub*)* @_ZNK27ImmersiveModeControllerStub9IsEnabledEv to i8*), i8* bitcast (i1 (%class.ImmersiveModeControllerStub*)* @_ZNK27ImmersiveModeControllerStub18ShouldHideTopViewsEv to i8*), i8* bitcast (i1 (%class.ImmersiveModeControllerStub*)* @_ZNK27ImmersiveModeControllerStub10IsRevealedEv to i8*), i8* bitcast (i32 (%class.ImmersiveModeControllerStub*, %"class.gfx::Size"*)* @_ZNK27ImmersiveModeControllerStub29GetTopContainerVerticalOffsetERKN3gfx4SizeE to i8*), i8* bitcast (%class.ImmersiveRevealedLock* (%class.ImmersiveModeControllerStub*, i32)* @_ZN27ImmersiveModeControllerStub15GetRevealedLockEN23ImmersiveModeController13AnimateRevealE to i8*), i8* bitcast (void (%class.ImmersiveModeControllerStub*, %"class.gfx::Rect"*)* @_ZN27ImmersiveModeControllerStub29OnFindBarVisibleBoundsChangedERKN3gfx4RectE to i8*), i8* bitcast (i1 (%class.ImmersiveModeControllerStub*)* @_ZN27ImmersiveModeControllerStub41ShouldStayImmersiveAfterExitingFullscreenEv to i8*), i8* bitcast (void (%class.ImmersiveModeControllerStub*, %"class.views::Widget"*, i1)* @_ZN27ImmersiveModeControllerStub25OnWidgetActivationChangedEPN5views6WidgetEb to i8*), i8* bitcast (void (%class.ImmersiveModeController*, %"class.ImmersiveModeController::Observer"*)* @_ZN23ImmersiveModeController11AddObserverEPNS_8ObserverE to i8*), i8* bitcast (void (%class.ImmersiveModeController*, %"class.ImmersiveModeController::Observer"*)* @_ZN23ImmersiveModeController14RemoveObserverEPNS_8ObserverE to i8*)] }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN27ImmersiveModeControllerStub4InitEP11BrowserView(%class.ImmersiveModeControllerStub* nocapture, %class.BrowserView* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN27ImmersiveModeControllerStub10SetEnabledEb(%class.ImmersiveModeControllerStub* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK27ImmersiveModeControllerStub9IsEnabledEv(%class.ImmersiveModeControllerStub* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK27ImmersiveModeControllerStub18ShouldHideTopViewsEv(%class.ImmersiveModeControllerStub* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK27ImmersiveModeControllerStub10IsRevealedEv(%class.ImmersiveModeControllerStub* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK27ImmersiveModeControllerStub29GetTopContainerVerticalOffsetERKN3gfx4SizeE(%class.ImmersiveModeControllerStub* nocapture readnone, %"class.gfx::Size"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.ImmersiveRevealedLock* @_ZN27ImmersiveModeControllerStub15GetRevealedLockEN23ImmersiveModeController13AnimateRevealE(%class.ImmersiveModeControllerStub* nocapture readnone, i32) unnamed_addr #0 align 2 {
  ret %class.ImmersiveRevealedLock* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN27ImmersiveModeControllerStub29OnFindBarVisibleBoundsChangedERKN3gfx4RectE(%class.ImmersiveModeControllerStub* nocapture, %"class.gfx::Rect"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN27ImmersiveModeControllerStub41ShouldStayImmersiveAfterExitingFullscreenEv(%class.ImmersiveModeControllerStub* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN27ImmersiveModeControllerStub25OnWidgetActivationChangedEPN5views6WidgetEb(%class.ImmersiveModeControllerStub* nocapture, %"class.views::Widget"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN23ImmersiveModeControllerD2Ev(%class.ImmersiveModeController*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27ImmersiveModeControllerStubD0Ev(%class.ImmersiveModeControllerStub*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.ImmersiveModeControllerStub, %class.ImmersiveModeControllerStub* %0, i64 0, i32 0
  tail call void @_ZN23ImmersiveModeControllerD2Ev(%class.ImmersiveModeController* %2) #5
  %3 = bitcast %class.ImmersiveModeControllerStub* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

declare void @_ZN23ImmersiveModeController11AddObserverEPNS_8ObserverE(%class.ImmersiveModeController*, %"class.ImmersiveModeController::Observer"*) unnamed_addr #3

declare void @_ZN23ImmersiveModeController14RemoveObserverEPNS_8ObserverE(%class.ImmersiveModeController*, %"class.ImmersiveModeController::Observer"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
