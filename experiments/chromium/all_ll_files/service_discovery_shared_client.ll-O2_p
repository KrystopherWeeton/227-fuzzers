; ModuleID = '../../chrome/browser/local_discovery/service_discovery_shared_client.cc'
source_filename = "../../chrome/browser/local_discovery/service_discovery_shared_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.local_discovery::ServiceDiscoverySharedClient" = type <{ %"class.local_discovery::ServiceDiscoveryClient", %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.local_discovery::ServiceDiscoveryClient" = type { i32 (...)** }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.local_discovery::ServiceDiscoveryClientMdns" = type { %"class.local_discovery::ServiceDiscoverySharedClient.base", %"class.network::NetworkConnectionTracker::NetworkConnectionObserver", %"class.base::ObserverList", %class.scoped_refptr.3, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.8", i32, i8, %"class.base::WeakPtrFactory" }
%"class.local_discovery::ServiceDiscoverySharedClient.base" = type <{ %"class.local_discovery::ServiceDiscoveryClient", %"class.base::RefCountedThreadSafe" }>
%"class.network::NetworkConnectionTracker::NetworkConnectionObserver" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.3 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.4" }>
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.net::MDnsClient"* }
%"class.net::MDnsClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.local_discovery::ServiceDiscoveryClient"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.15", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }

@_ZTVN15local_discovery28ServiceDiscoverySharedClientE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.local_discovery::ServiceDiscoverySharedClient"*)* @_ZN15local_discovery28ServiceDiscoverySharedClientD2Ev to i8*), i8* bitcast (void (%"class.local_discovery::ServiceDiscoverySharedClient"*)* @_ZN15local_discovery28ServiceDiscoverySharedClientD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN15local_discovery12_GLOBAL__N_126g_service_discovery_clientE = internal unnamed_addr global %"class.local_discovery::ServiceDiscoverySharedClient"* null, align 8

@_ZN15local_discovery28ServiceDiscoverySharedClientD1Ev = hidden unnamed_addr alias void (%"class.local_discovery::ServiceDiscoverySharedClient"*), void (%"class.local_discovery::ServiceDiscoverySharedClient"*)* @_ZN15local_discovery28ServiceDiscoverySharedClientD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15local_discovery28ServiceDiscoverySharedClientC2Ev(%"class.local_discovery::ServiceDiscoverySharedClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.local_discovery::ServiceDiscoverySharedClient", %"class.local_discovery::ServiceDiscoverySharedClient"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.local_discovery::ServiceDiscoverySharedClient", %"class.local_discovery::ServiceDiscoverySharedClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN15local_discovery28ServiceDiscoverySharedClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  store %"class.local_discovery::ServiceDiscoverySharedClient"* %0, %"class.local_discovery::ServiceDiscoverySharedClient"** @_ZN15local_discovery12_GLOBAL__N_126g_service_discovery_clientE, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15local_discovery28ServiceDiscoverySharedClientD2Ev(%"class.local_discovery::ServiceDiscoverySharedClient"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.local_discovery::ServiceDiscoverySharedClient", %"class.local_discovery::ServiceDiscoverySharedClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN15local_discovery28ServiceDiscoverySharedClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store %"class.local_discovery::ServiceDiscoverySharedClient"* null, %"class.local_discovery::ServiceDiscoverySharedClient"** @_ZN15local_discovery12_GLOBAL__N_126g_service_discovery_clientE, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN15local_discovery28ServiceDiscoverySharedClientD0Ev(%"class.local_discovery::ServiceDiscoverySharedClient"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.local_discovery::ServiceDiscoverySharedClient"* @_ZN15local_discovery28ServiceDiscoverySharedClient11GetInstanceEv() local_unnamed_addr #3 align 2 {
  %1 = load %"class.local_discovery::ServiceDiscoverySharedClient"*, %"class.local_discovery::ServiceDiscoverySharedClient"** @_ZN15local_discovery12_GLOBAL__N_126g_service_discovery_clientE, align 8
  %2 = icmp eq %"class.local_discovery::ServiceDiscoverySharedClient"* %1, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %0
  %4 = ptrtoint %"class.local_discovery::ServiceDiscoverySharedClient"* %1 to i64
  %5 = getelementptr inbounds %"class.local_discovery::ServiceDiscoverySharedClient", %"class.local_discovery::ServiceDiscoverySharedClient"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  br label %14

7:                                                ; preds = %0
  %8 = tail call i8* @_Znwm(i64 128) #7
  %9 = bitcast i8* %8 to %"class.local_discovery::ServiceDiscoveryClientMdns"*
  tail call void @_ZN15local_discovery26ServiceDiscoveryClientMdnsC1Ev(%"class.local_discovery::ServiceDiscoveryClientMdns"* nonnull %9) #8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i32*
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  %13 = ptrtoint i8* %8 to i64
  br label %14

14:                                               ; preds = %7, %3
  %15 = phi i64 [ %13, %7 ], [ %4, %3 ]
  %16 = inttoptr i64 %15 to %"class.local_discovery::ServiceDiscoverySharedClient"*
  ret %"class.local_discovery::ServiceDiscoverySharedClient"* %16
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN15local_discovery26ServiceDiscoveryClientMdnsC1Ev(%"class.local_discovery::ServiceDiscoveryClientMdns"*) unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
