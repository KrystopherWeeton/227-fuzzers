; ModuleID = '../../third_party/opus/src/silk/float/k2a_FLP.c'
source_filename = "../../third_party/opus/src/silk/float/k2a_FLP.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @silk_k2a_FLP(float* nocapture, float* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %66

5:                                                ; preds = %3
  %6 = zext i32 %2 to i64
  br label %7

7:                                                ; preds = %62, %5
  %8 = phi i64 [ 0, %5 ], [ %13, %62 ]
  %9 = add nuw i64 %8, 1
  %10 = lshr i64 %9, 1
  %11 = getelementptr inbounds float, float* %1, i64 %8
  %12 = load float, float* %11, align 4
  %13 = add nuw nsw i64 %8, 1
  %14 = trunc i64 %13 to i32
  %15 = icmp ult i32 %14, 2
  br i1 %15, label %62, label %16

16:                                               ; preds = %7
  %17 = and i64 %10, 1
  %18 = icmp eq i64 %10, 1
  br i1 %18, label %48, label %19

19:                                               ; preds = %16
  %20 = sub nsw i64 %10, %17
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i64 [ 0, %19 ], [ %45, %21 ]
  %23 = phi i64 [ %20, %19 ], [ %46, %21 ]
  %24 = getelementptr inbounds float, float* %0, i64 %22
  %25 = load float, float* %24, align 4
  %26 = xor i64 %22, -1
  %27 = add nsw i64 %8, %26
  %28 = getelementptr inbounds float, float* %0, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fmul float %12, %29
  %31 = fadd float %25, %30
  store float %31, float* %24, align 4
  %32 = fmul float %12, %25
  %33 = fadd float %29, %32
  store float %33, float* %28, align 4
  %34 = or i64 %22, 1
  %35 = getelementptr inbounds float, float* %0, i64 %34
  %36 = load float, float* %35, align 4
  %37 = sub nuw nsw i64 -2, %22
  %38 = add nsw i64 %8, %37
  %39 = getelementptr inbounds float, float* %0, i64 %38
  %40 = load float, float* %39, align 4
  %41 = fmul float %12, %40
  %42 = fadd float %36, %41
  store float %42, float* %35, align 4
  %43 = fmul float %12, %36
  %44 = fadd float %40, %43
  store float %44, float* %39, align 4
  %45 = add nuw nsw i64 %22, 2
  %46 = add i64 %23, -2
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %21

48:                                               ; preds = %21, %16
  %49 = phi i64 [ 0, %16 ], [ %45, %21 ]
  %50 = icmp eq i64 %17, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds float, float* %0, i64 %49
  %53 = load float, float* %52, align 4
  %54 = xor i64 %49, -1
  %55 = add nsw i64 %8, %54
  %56 = getelementptr inbounds float, float* %0, i64 %55
  %57 = load float, float* %56, align 4
  %58 = fmul float %12, %57
  %59 = fadd float %53, %58
  store float %59, float* %52, align 4
  %60 = fmul float %12, %53
  %61 = fadd float %57, %60
  store float %61, float* %56, align 4
  br label %62

62:                                               ; preds = %51, %48, %7
  %63 = fsub float -0.000000e+00, %12
  %64 = getelementptr inbounds float, float* %0, i64 %8
  store float %63, float* %64, align 4
  %65 = icmp eq i64 %13, %6
  br i1 %65, label %66, label %7

66:                                               ; preds = %62, %3
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
