; ModuleID = '../../chrome/browser/plugins/plugin_installer.cc'
source_filename = "../../chrome/browser/plugins/plugin_installer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.PluginInstaller = type { %"class.base::ObserverList", i32, [4 x i8], %"class.base::ObserverList.1" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.1" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.2", i64, i32, [4 x i8] }>
%"class.base::LinkedList.2" = type { %"class.base::LinkNode.3" }
%"class.base::LinkNode.3" = type { %"class.base::internal::LinkNodeBase" }
%class.PluginInstallerObserver = type { i32 (...)**, %class.PluginInstaller* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode.3", %"class.base::ObserverList.1"* }
%class.WeakPluginInstallerObserver = type { %class.PluginInstallerObserver }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GURL* }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"struct.content::OpenURLParams" = type { %class.GURL, %"struct.content::Referrer", %"class.absl::optional", i32, %"class.absl::optional.22", %class.scoped_refptr, %"class.std::__1::vector.32", %class.scoped_refptr.38, %"class.std::__1::basic_string", i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, %class.scoped_refptr.61, i8, %"class.std::__1::basic_string", i32, %"class.absl::optional.63" }
%"struct.content::Referrer" = type <{ %class.GURL, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.21 }
%union.anon.21 = type { %"class.util::TokenType" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.27" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%union.anon.31 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr = type { %"class.content::SiteInstance"* }
%"class.content::SiteInstance" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%class.scoped_refptr.38 = type { %"class.network::ResourceRequestBody"* }
%"class.network::ResourceRequestBody" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::vector.40", i64, i8, i8, [6 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.network::DataElement"*, %"class.network::DataElement"*, %"class.std::__1::__compressed_pair.56" }
%"class.network::DataElement" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.42" }
%"union.absl::variant_internal::DestructibleUnionImpl.42" = type { %"union.absl::variant_internal::DestructibleUnionImpl.50" }
%"union.absl::variant_internal::DestructibleUnionImpl.50" = type { %"union.absl::variant_internal::DestructibleUnionImpl.51" }
%"union.absl::variant_internal::DestructibleUnionImpl.51" = type { %"union.absl::variant_internal::DestructibleUnionImpl.54" }
%"union.absl::variant_internal::DestructibleUnionImpl.54" = type { %"class.network::DataElementFile" }
%"class.network::DataElementFile" = type { %"class.base::FilePath", i64, i64, %"class.base::Time" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.network::DataElement"* }
%class.scoped_refptr.61 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.62", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.62" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"struct.blink::Impression" }
%"struct.blink::Impression" = type { %"class.url::Origin", %"class.absl::optional.22", i64, %"class.absl::optional.68", i64 }
%"class.absl::optional.68" = type { %"class.absl::optional_internal::optional_data.69" }
%"class.absl::optional_internal::optional_data.69" = type { %"class.absl::optional_internal::optional_data_base.70" }
%"class.absl::optional_internal::optional_data_base.70" = type { %"class.absl::optional_internal::optional_data_dtor_base.71" }
%"class.absl::optional_internal::optional_data_dtor_base.71" = type { i8, %union.anon.72 }
%union.anon.72 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode.73", i64, i64 }
%"class.base::internal::WeakLinkNode.73" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }

@_ZN15PluginInstallerC1Ev = hidden unnamed_addr alias void (%class.PluginInstaller*), void (%class.PluginInstaller*)* @_ZN15PluginInstallerC2Ev
@_ZN15PluginInstallerD1Ev = hidden unnamed_addr alias void (%class.PluginInstaller*), void (%class.PluginInstaller*)* @_ZN15PluginInstallerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15PluginInstallerC2Ev(%class.PluginInstaller*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.PluginInstaller* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #8
  %3 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %3, %"class.base::internal::LinkNodeBase"* %3, %"class.base::internal::LinkNodeBase"* %3) #8
  %4 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 2
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3
  %8 = bitcast %"class.base::ObserverList.1"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #8
  %9 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %9, %"class.base::internal::LinkNodeBase"* %9, %"class.base::internal::LinkNodeBase"* %9) #8
  %10 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 2
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15PluginInstallerD2Ev(%class.PluginInstaller*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::LinkNodeBase"** %2 to %"class.base::LinkNode.3"**
  %4 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 1, i32 0
  %5 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %3, align 8
  %6 = icmp eq %"class.base::LinkNode.3"* %5, %4
  br i1 %6, label %19, label %7

7:                                                ; preds = %1, %16
  %8 = phi %"class.base::LinkNode.3"* [ %17, %16 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.base::LinkNode.3", %"class.base::LinkNode.3"* %8, i64 1
  %10 = bitcast %"class.base::LinkNode.3"* %9 to %"class.base::ObserverList.1"**
  %11 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %10, align 8
  %12 = icmp eq %"class.base::ObserverList.1"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  store %"class.base::ObserverList.1"* null, %"class.base::ObserverList.1"** %10, align 8
  %14 = getelementptr inbounds %"class.base::LinkNode.3", %"class.base::LinkNode.3"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %14) #8
  %15 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %3, align 8
  br label %16

16:                                               ; preds = %13, %7
  %17 = phi %"class.base::LinkNode.3"* [ %8, %7 ], [ %15, %13 ]
  %18 = icmp eq %"class.base::LinkNode.3"* %17, %4
  br i1 %18, label %19, label %7

19:                                               ; preds = %16, %1
  %20 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %20, align 8
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %21 to i64
  %25 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %26 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %30 = bitcast %"class.base::internal::LinkNodeBase"** %29 to %"class.base::LinkNode"**
  %31 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %30, align 8
  %33 = icmp eq %"class.base::LinkNode"* %32, %31
  br i1 %33, label %46, label %34

34:                                               ; preds = %28, %43
  %35 = phi %"class.base::LinkNode"* [ %44, %43 ], [ %32, %28 ]
  %36 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %35, i64 1
  %37 = bitcast %"class.base::LinkNode"* %36 to %"class.base::ObserverList"**
  %38 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %37, align 8
  %39 = icmp eq %"class.base::ObserverList"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %37, align 8
  %41 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %35, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %41) #8
  %42 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %30, align 8
  br label %43

43:                                               ; preds = %40, %34
  %44 = phi %"class.base::LinkNode"* [ %35, %34 ], [ %42, %40 ]
  %45 = icmp eq %"class.base::LinkNode"* %44, %31
  br i1 %45, label %46, label %34

46:                                               ; preds = %43, %28
  %47 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %47, align 8
  %49 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %48 to i64
  %52 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %48 to i8*
  tail call void @_ZdlPv(i8* %54) #9
  br label %55

55:                                               ; preds = %46, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15PluginInstaller11AddObserverEP23PluginInstallerObserver(%class.PluginInstaller*, %class.PluginInstallerObserver*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = icmp eq %class.PluginInstallerObserver* %1, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %8, align 8
  br label %28

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = bitcast %class.PluginInstallerObserver* %1 to i8*
  br i1 %15, label %25, label %17

17:                                               ; preds = %10, %22
  %18 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %23, %22 ], [ %12, %10 ]
  %19 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %18, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, %16
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %18, i64 1
  %24 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %23, %14
  br i1 %24, label %28, label %17

25:                                               ; preds = %17, %10
  %26 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %12, %10 ], [ %18, %17 ]
  %27 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %26, %14
  br i1 %27, label %28, label %101

28:                                               ; preds = %22, %7, %25
  %29 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %9, %7 ], [ %14, %25 ], [ %14, %22 ]
  %30 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %30, align 8
  %33 = ptrtoint %class.PluginInstallerObserver* %1 to i64
  %34 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %35, align 8
  %37 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %29, %36
  %38 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  br i1 %37, label %39, label %44

39:                                               ; preds = %28
  %40 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %29 to i64*
  store i64 %33, i64* %40, align 8
  %41 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %29, i64 1
  %42 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %41 to i64
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  store i64 %42, i64* %43, align 8
  br label %101

44:                                               ; preds = %28
  %45 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %29 to i64
  %46 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %47 = bitcast %class.PluginInstaller* %0 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %45, %48
  %50 = ashr exact i64 %49, 3
  %51 = add nsw i64 %50, 1
  %52 = icmp ugt i64 %51, 2305843009213693951
  br i1 %52, label %53, label %55

53:                                               ; preds = %44
  %54 = bitcast %class.PluginInstaller* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %54) #10
  unreachable

55:                                               ; preds = %44
  %56 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %35 to i64*
  %57 = sub i64 %38, %48
  %58 = ashr exact i64 %57, 3
  %59 = icmp ult i64 %58, 1152921504606846975
  br i1 %59, label %60, label %68

60:                                               ; preds = %55
  %61 = ashr exact i64 %57, 2
  %62 = icmp ult i64 %61, %51
  %63 = select i1 %62, i64 %51, i64 %61
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %60
  %66 = icmp ugt i64 %63, 2305843009213693951
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  tail call void @abort() #10
  unreachable

68:                                               ; preds = %65, %55
  %69 = phi i64 [ %63, %65 ], [ 2305843009213693951, %55 ]
  %70 = shl i64 %69, 3
  %71 = tail call i8* @_Znwm(i64 %70) #9
  %72 = bitcast i8* %71 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %73

73:                                               ; preds = %68, %60
  %74 = phi i64 [ %69, %68 ], [ 0, %60 ]
  %75 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %72, %68 ], [ null, %60 ]
  %76 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %75, i64 %50
  %77 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %75, i64 %74
  %78 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %77 to i64
  %79 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %76 to i64*
  store i64 %33, i64* %79, align 8
  %80 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %76, i64 1
  %81 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %80 to i64
  %82 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %82, align 8
  %84 = load i64, i64* %46, align 8
  %85 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %83 to i64
  %86 = sub i64 %84, %85
  %87 = ashr exact i64 %86, 3
  %88 = sub nsw i64 0, %87
  %89 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %76, i64 %88
  %90 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %89 to i64
  %91 = icmp sgt i64 %86, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %73
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %89 to i8*
  %94 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 %86, i1 false) #8
  %95 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %82, align 8
  br label %96

96:                                               ; preds = %92, %73
  %97 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %83, %73 ], [ %95, %92 ]
  store i64 %90, i64* %47, align 8
  store i64 %81, i64* %46, align 8
  store i64 %78, i64* %56, align 8
  %98 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %97 to i8*
  tail call void @_ZdlPv(i8* %100) #9
  br label %101

101:                                              ; preds = %99, %96, %39, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15PluginInstaller14RemoveObserverEP23PluginInstallerObserver(%class.PluginInstaller*, %class.PluginInstallerObserver* readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, -1
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %8, align 8
  %10 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8
  %12 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %9, %11
  %13 = bitcast %class.PluginInstallerObserver* %1 to i8*
  %14 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %11 to i64
  br i1 %12, label %23, label %15

15:                                               ; preds = %2, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %9, %2 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %13
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %11
  br i1 %22, label %52, label %15

23:                                               ; preds = %15, %2
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %9, %2 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %11
  br i1 %25, label %52, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %24, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, -1
  store i64 %33, i64* %31, align 8
  br label %34

34:                                               ; preds = %30, %26
  %35 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %36 = bitcast %"class.base::internal::LinkNodeBase"** %35 to %"class.base::LinkNode"**
  %37 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %36, align 8
  %38 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 1, i32 0
  %39 = icmp eq %"class.base::LinkNode"* %37, %38
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %24, i64 1
  %42 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %41 to i64
  %43 = sub i64 %14, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %24 to i8*
  %48 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %41 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 %43, i1 false) #8
  br label %49

49:                                               ; preds = %46, %40
  %50 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %24, i64 %44
  store %"class.base::internal::UncheckedObserverAdapter"* %50, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8
  br label %52

51:                                               ; preds = %34
  store i8* null, i8** %27, align 8
  br label %52

52:                                               ; preds = %20, %23, %49, %51
  %53 = load i32, i32* %5, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %389

55:                                               ; preds = %52
  %56 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3
  %57 = bitcast %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %57) #8
  %58 = getelementptr inbounds %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %60 = getelementptr inbounds %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %61 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %56, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 40, i1 false)
  %63 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %61, align 8, !noalias !2
  %64 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %65 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %64, align 8, !noalias !2
  %66 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %63, %65
  %67 = getelementptr inbounds %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %67) #8
  br i1 %66, label %68, label %70

68:                                               ; preds = %55
  %69 = bitcast %"class.base::ObserverList.1"** %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #8, !alias.scope !2
  br label %110

70:                                               ; preds = %55
  store %"class.base::ObserverList.1"* %56, %"class.base::ObserverList.1"** %58, align 8
  %71 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %67, %"class.base::internal::LinkNodeBase"* %71) #8
  store i64 0, i64* %59, align 8
  %72 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %64 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.base::ObserverList.1"* %56 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %77, %79
  %81 = ashr exact i64 %80, 3
  br label %82

82:                                               ; preds = %75, %70
  %83 = phi i64 [ %81, %75 ], [ -1, %70 ]
  store i64 %83, i64* %60, align 8
  %84 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %58, align 8
  %85 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %84, i64 0, i32 0, i32 0, i32 1
  %86 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.base::ObserverList.1"* %84 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %87, %89
  %91 = ashr exact i64 %90, 3
  %92 = icmp ult i64 %91, %83
  %93 = select i1 %92, i64 %91, i64 %83
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %110, label %95

95:                                               ; preds = %82
  %96 = inttoptr i64 %89 to %"class.base::internal::UncheckedObserverAdapter"*
  %97 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %84, i64 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %96, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %101, label %110

101:                                              ; preds = %95, %105
  %102 = phi i64 [ %103, %105 ], [ 0, %95 ]
  %103 = add nuw i64 %102, 1
  store i64 %103, i64* %59, align 8
  %104 = icmp ult i64 %103, %93
  br i1 %104, label %105, label %110

105:                                              ; preds = %101
  %106 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %97, align 8
  %107 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %106, i64 %103, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = icmp eq i8* %108, null
  br i1 %109, label %101, label %110

110:                                              ; preds = %105, %101, %95, %82, %68
  %111 = bitcast %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %111) #8
  %112 = getelementptr inbounds %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %113 = getelementptr inbounds %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %114 = getelementptr inbounds %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %115 = getelementptr inbounds %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.base::ObserverList<WeakPluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %115) #8
  %117 = bitcast %"class.base::ObserverList.1"** %112 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 24, i1 false) #8, !alias.scope !5
  %118 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %58, align 8
  br label %119

119:                                              ; preds = %359, %110
  %120 = phi %"class.base::ObserverList.1"* [ %118, %110 ], [ %357, %359 ]
  %121 = icmp eq %"class.base::ObserverList.1"* %120, null
  br i1 %121, label %137, label %122

122:                                              ; preds = %119
  %123 = load i64, i64* %59, align 8
  %124 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %120, i64 0, i32 0, i32 0, i32 1
  %125 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.base::ObserverList.1"* %120 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = sub i64 %126, %128
  %130 = ashr exact i64 %129, 3
  %131 = load i64, i64* %60, align 8
  %132 = icmp ult i64 %130, %131
  %133 = select i1 %132, i64 %130, i64 %131
  %134 = icmp eq i64 %123, %133
  br i1 %134, label %137, label %135

135:                                              ; preds = %122
  %136 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %112, align 8
  br label %153

137:                                              ; preds = %122, %119
  %138 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %112, align 8
  %139 = icmp eq %"class.base::ObserverList.1"* %138, null
  br i1 %139, label %253, label %140

140:                                              ; preds = %137
  %141 = load i64, i64* %113, align 8
  %142 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %138, i64 0, i32 0, i32 0, i32 1
  %143 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.base::ObserverList.1"* %138 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = sub i64 %144, %146
  %148 = ashr exact i64 %147, 3
  %149 = load i64, i64* %114, align 8
  %150 = icmp ult i64 %148, %149
  %151 = select i1 %150, i64 %148, i64 %149
  %152 = icmp eq i64 %141, %151
  br i1 %152, label %162, label %153

153:                                              ; preds = %140, %135
  %154 = phi %"class.base::ObserverList.1"* [ %136, %135 ], [ %138, %140 ]
  %155 = icmp eq %"class.base::ObserverList.1"* %120, %154
  %156 = load i64, i64* %59, align 8
  %157 = load i64, i64* %113, align 8
  %158 = icmp eq i64 %156, %157
  %159 = and i1 %155, %158
  br i1 %159, label %160, label %347

160:                                              ; preds = %153
  %161 = icmp eq %"class.base::ObserverList.1"* %120, null
  br i1 %161, label %253, label %162

162:                                              ; preds = %140, %160
  %163 = phi %"class.base::ObserverList.1"* [ %120, %160 ], [ %138, %140 ]
  %164 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %163, i64 0, i32 1
  %165 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %163, i64 0, i32 1, i32 0, i32 0, i32 1
  %166 = bitcast %"class.base::internal::LinkNodeBase"** %165 to %"class.base::LinkNode.3"**
  %167 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %166, align 8
  %168 = bitcast %"class.base::LinkedList.2"* %164 to %"class.base::LinkNode.3"**
  %169 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %168, align 8
  %170 = icmp eq %"class.base::LinkNode.3"* %167, %169
  br i1 %170, label %171, label %249

171:                                              ; preds = %162
  %172 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %163, i64 0, i32 0, i32 0, i32 0
  %173 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %172, align 8
  %174 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %163, i64 0, i32 0, i32 0, i32 1
  %175 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %174, align 8
  %176 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %173, %175
  br i1 %176, label %185, label %177

177:                                              ; preds = %171, %182
  %178 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %183, %182 ], [ %173, %171 ]
  %179 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %178, i64 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %185, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %178, i64 1
  %184 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %183, %175
  br i1 %184, label %249, label %177

185:                                              ; preds = %177, %171
  %186 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %173, %171 ], [ %178, %177 ]
  %187 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %186 to i64
  %188 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %186, %175
  br i1 %188, label %249, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %186, i64 1
  %191 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %190, %175
  br i1 %191, label %244, label %192

192:                                              ; preds = %189
  %193 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 -2, i32 0
  %194 = ptrtoint i8** %193 to i64
  %195 = sub i64 %194, %187
  %196 = lshr i64 %195, 3
  %197 = add nuw nsw i64 %196, 1
  %198 = and i64 %197, 3
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %218, label %200

200:                                              ; preds = %192, %213
  %201 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %213 ], [ %190, %192 ]
  %202 = phi i64 [ %214, %213 ], [ %187, %192 ]
  %203 = phi i64 [ %216, %213 ], [ %198, %192 ]
  %204 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %201, i64 0, i32 0
  %205 = load i8*, i8** %204, align 8
  %206 = icmp eq i8* %205, null
  br i1 %206, label %213, label %207

207:                                              ; preds = %200
  %208 = ptrtoint i8* %205 to i64
  %209 = inttoptr i64 %202 to %"class.base::internal::UncheckedObserverAdapter"*
  %210 = inttoptr i64 %202 to i64*
  store i64 %208, i64* %210, align 8
  %211 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %209, i64 1
  %212 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %211 to i64
  br label %213

213:                                              ; preds = %207, %200
  %214 = phi i64 [ %202, %200 ], [ %212, %207 ]
  %215 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %201, i64 1
  %216 = add i64 %203, -1
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %200, !llvm.loop !8

218:                                              ; preds = %213, %192
  %219 = phi i64 [ undef, %192 ], [ %214, %213 ]
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %190, %192 ], [ %215, %213 ]
  %221 = phi i64 [ %187, %192 ], [ %214, %213 ]
  %222 = icmp ult i64 %195, 24
  br i1 %222, label %240, label %223

223:                                              ; preds = %218, %450
  %224 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %452, %450 ], [ %220, %218 ]
  %225 = phi i64 [ %451, %450 ], [ %221, %218 ]
  %226 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 0, i32 0
  %227 = load i8*, i8** %226, align 8
  %228 = icmp eq i8* %227, null
  br i1 %228, label %235, label %229

229:                                              ; preds = %223
  %230 = ptrtoint i8* %227 to i64
  %231 = inttoptr i64 %225 to %"class.base::internal::UncheckedObserverAdapter"*
  %232 = inttoptr i64 %225 to i64*
  store i64 %230, i64* %232, align 8
  %233 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 1
  %234 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %233 to i64
  br label %235

235:                                              ; preds = %229, %223
  %236 = phi i64 [ %225, %223 ], [ %234, %229 ]
  %237 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 1, i32 0
  %238 = load i8*, i8** %237, align 8
  %239 = icmp eq i8* %238, null
  br i1 %239, label %428, label %422

240:                                              ; preds = %450, %218
  %241 = phi i64 [ %219, %218 ], [ %451, %450 ]
  %242 = inttoptr i64 %241 to %"class.base::internal::UncheckedObserverAdapter"*
  %243 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %174, align 8
  br label %244

244:                                              ; preds = %240, %189
  %245 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %175, %189 ], [ %243, %240 ]
  %246 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %186, %189 ], [ %242, %240 ]
  %247 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %246, %245
  br i1 %247, label %249, label %248

248:                                              ; preds = %244
  store %"class.base::internal::UncheckedObserverAdapter"* %246, %"class.base::internal::UncheckedObserverAdapter"** %174, align 8
  br label %249

249:                                              ; preds = %182, %248, %244, %185, %162
  %250 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %112, align 8
  %251 = icmp eq %"class.base::ObserverList.1"* %250, null
  br i1 %251, label %253, label %252

252:                                              ; preds = %249
  store %"class.base::ObserverList.1"* null, %"class.base::ObserverList.1"** %112, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %115) #8
  br label %253

253:                                              ; preds = %137, %160, %249, %252
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %111) #8
  %254 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %58, align 8
  %255 = icmp eq %"class.base::ObserverList.1"* %254, null
  br i1 %255, label %346, label %256

256:                                              ; preds = %253
  %257 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %254, i64 0, i32 1
  %258 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %254, i64 0, i32 1, i32 0, i32 0, i32 1
  %259 = bitcast %"class.base::internal::LinkNodeBase"** %258 to %"class.base::LinkNode.3"**
  %260 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %259, align 8
  %261 = bitcast %"class.base::LinkedList.2"* %257 to %"class.base::LinkNode.3"**
  %262 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %261, align 8
  %263 = icmp eq %"class.base::LinkNode.3"* %260, %262
  br i1 %263, label %264, label %342

264:                                              ; preds = %256
  %265 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %254, i64 0, i32 0, i32 0, i32 0
  %266 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %265, align 8
  %267 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %254, i64 0, i32 0, i32 0, i32 1
  %268 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %267, align 8
  %269 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %266, %268
  br i1 %269, label %278, label %270

270:                                              ; preds = %264, %275
  %271 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %276, %275 ], [ %266, %264 ]
  %272 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %271, i64 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = icmp eq i8* %273, null
  br i1 %274, label %278, label %275

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %271, i64 1
  %277 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %276, %268
  br i1 %277, label %342, label %270

278:                                              ; preds = %270, %264
  %279 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %266, %264 ], [ %271, %270 ]
  %280 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %279 to i64
  %281 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %279, %268
  br i1 %281, label %342, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %279, i64 1
  %284 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %283, %268
  br i1 %284, label %337, label %285

285:                                              ; preds = %282
  %286 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 -2, i32 0
  %287 = ptrtoint i8** %286 to i64
  %288 = sub i64 %287, %280
  %289 = lshr i64 %288, 3
  %290 = add nuw nsw i64 %289, 1
  %291 = and i64 %290, 3
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %311, label %293

293:                                              ; preds = %285, %306
  %294 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %308, %306 ], [ %283, %285 ]
  %295 = phi i64 [ %307, %306 ], [ %280, %285 ]
  %296 = phi i64 [ %309, %306 ], [ %291, %285 ]
  %297 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %294, i64 0, i32 0
  %298 = load i8*, i8** %297, align 8
  %299 = icmp eq i8* %298, null
  br i1 %299, label %306, label %300

300:                                              ; preds = %293
  %301 = ptrtoint i8* %298 to i64
  %302 = inttoptr i64 %295 to %"class.base::internal::UncheckedObserverAdapter"*
  %303 = inttoptr i64 %295 to i64*
  store i64 %301, i64* %303, align 8
  %304 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %302, i64 1
  %305 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %304 to i64
  br label %306

306:                                              ; preds = %300, %293
  %307 = phi i64 [ %295, %293 ], [ %305, %300 ]
  %308 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %294, i64 1
  %309 = add i64 %296, -1
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %311, label %293, !llvm.loop !10

311:                                              ; preds = %306, %285
  %312 = phi i64 [ undef, %285 ], [ %307, %306 ]
  %313 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %283, %285 ], [ %308, %306 ]
  %314 = phi i64 [ %280, %285 ], [ %307, %306 ]
  %315 = icmp ult i64 %288, 24
  br i1 %315, label %333, label %316

316:                                              ; preds = %311, %418
  %317 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %420, %418 ], [ %313, %311 ]
  %318 = phi i64 [ %419, %418 ], [ %314, %311 ]
  %319 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %317, i64 0, i32 0
  %320 = load i8*, i8** %319, align 8
  %321 = icmp eq i8* %320, null
  br i1 %321, label %328, label %322

322:                                              ; preds = %316
  %323 = ptrtoint i8* %320 to i64
  %324 = inttoptr i64 %318 to %"class.base::internal::UncheckedObserverAdapter"*
  %325 = inttoptr i64 %318 to i64*
  store i64 %323, i64* %325, align 8
  %326 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %324, i64 1
  %327 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %326 to i64
  br label %328

328:                                              ; preds = %322, %316
  %329 = phi i64 [ %318, %316 ], [ %327, %322 ]
  %330 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %317, i64 1, i32 0
  %331 = load i8*, i8** %330, align 8
  %332 = icmp eq i8* %331, null
  br i1 %332, label %396, label %390

333:                                              ; preds = %418, %311
  %334 = phi i64 [ %312, %311 ], [ %419, %418 ]
  %335 = inttoptr i64 %334 to %"class.base::internal::UncheckedObserverAdapter"*
  %336 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %267, align 8
  br label %337

337:                                              ; preds = %333, %282
  %338 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %268, %282 ], [ %336, %333 ]
  %339 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %279, %282 ], [ %335, %333 ]
  %340 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %339, %338
  br i1 %340, label %342, label %341

341:                                              ; preds = %337
  store %"class.base::internal::UncheckedObserverAdapter"* %339, %"class.base::internal::UncheckedObserverAdapter"** %267, align 8
  br label %342

342:                                              ; preds = %275, %341, %337, %278, %256
  %343 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %58, align 8
  %344 = icmp eq %"class.base::ObserverList.1"* %343, null
  br i1 %344, label %346, label %345

345:                                              ; preds = %342
  store %"class.base::ObserverList.1"* null, %"class.base::ObserverList.1"** %58, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %67) #8
  br label %346

346:                                              ; preds = %253, %342, %345
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %57) #8
  br label %389

347:                                              ; preds = %153
  %348 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %120, i64 0, i32 0, i32 0, i32 0
  %349 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %348, align 8
  %350 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 %156
  %351 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %350 to %class.WeakPluginInstallerObserver**
  %352 = load %class.WeakPluginInstallerObserver*, %class.WeakPluginInstallerObserver** %351, align 8
  %353 = bitcast %class.WeakPluginInstallerObserver* %352 to void (%class.WeakPluginInstallerObserver*)***
  %354 = load void (%class.WeakPluginInstallerObserver*)**, void (%class.WeakPluginInstallerObserver*)*** %353, align 8
  %355 = getelementptr inbounds void (%class.WeakPluginInstallerObserver*)*, void (%class.WeakPluginInstallerObserver*)** %354, i64 3
  %356 = load void (%class.WeakPluginInstallerObserver*)*, void (%class.WeakPluginInstallerObserver*)** %355, align 8
  call void %356(%class.WeakPluginInstallerObserver* %352) #8
  %357 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %58, align 8
  %358 = icmp eq %"class.base::ObserverList.1"* %357, null
  br i1 %358, label %359, label %360

359:                                              ; preds = %384, %380, %347, %360, %374
  br label %119

360:                                              ; preds = %347
  %361 = load i64, i64* %59, align 8
  %362 = add i64 %361, 1
  store i64 %362, i64* %59, align 8
  %363 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %357, i64 0, i32 0, i32 0, i32 1
  %364 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %363 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = bitcast %"class.base::ObserverList.1"* %357 to i64*
  %367 = load i64, i64* %366, align 8
  %368 = sub i64 %365, %367
  %369 = ashr exact i64 %368, 3
  %370 = load i64, i64* %60, align 8
  %371 = icmp ult i64 %369, %370
  %372 = select i1 %371, i64 %369, i64 %370
  %373 = icmp ult i64 %362, %372
  br i1 %373, label %374, label %359

374:                                              ; preds = %360
  %375 = inttoptr i64 %367 to %"class.base::internal::UncheckedObserverAdapter"*
  %376 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %357, i64 0, i32 0, i32 0, i32 0
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %375, i64 %362, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %380, label %359

380:                                              ; preds = %374, %384
  %381 = phi i64 [ %382, %384 ], [ %362, %374 ]
  %382 = add nuw i64 %381, 1
  store i64 %382, i64* %59, align 8
  %383 = icmp ult i64 %382, %372
  br i1 %383, label %384, label %359

384:                                              ; preds = %380
  %385 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %376, align 8
  %386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %385, i64 %382, i32 0
  %387 = load i8*, i8** %386, align 8
  %388 = icmp eq i8* %387, null
  br i1 %388, label %380, label %359

389:                                              ; preds = %346, %52
  ret void

390:                                              ; preds = %328
  %391 = ptrtoint i8* %331 to i64
  %392 = inttoptr i64 %329 to %"class.base::internal::UncheckedObserverAdapter"*
  %393 = inttoptr i64 %329 to i64*
  store i64 %391, i64* %393, align 8
  %394 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %392, i64 1
  %395 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %394 to i64
  br label %396

396:                                              ; preds = %390, %328
  %397 = phi i64 [ %329, %328 ], [ %395, %390 ]
  %398 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %317, i64 2, i32 0
  %399 = load i8*, i8** %398, align 8
  %400 = icmp eq i8* %399, null
  br i1 %400, label %407, label %401

401:                                              ; preds = %396
  %402 = ptrtoint i8* %399 to i64
  %403 = inttoptr i64 %397 to %"class.base::internal::UncheckedObserverAdapter"*
  %404 = inttoptr i64 %397 to i64*
  store i64 %402, i64* %404, align 8
  %405 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %403, i64 1
  %406 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %405 to i64
  br label %407

407:                                              ; preds = %401, %396
  %408 = phi i64 [ %397, %396 ], [ %406, %401 ]
  %409 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %317, i64 3, i32 0
  %410 = load i8*, i8** %409, align 8
  %411 = icmp eq i8* %410, null
  br i1 %411, label %418, label %412

412:                                              ; preds = %407
  %413 = ptrtoint i8* %410 to i64
  %414 = inttoptr i64 %408 to %"class.base::internal::UncheckedObserverAdapter"*
  %415 = inttoptr i64 %408 to i64*
  store i64 %413, i64* %415, align 8
  %416 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %414, i64 1
  %417 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %416 to i64
  br label %418

418:                                              ; preds = %412, %407
  %419 = phi i64 [ %408, %407 ], [ %417, %412 ]
  %420 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %317, i64 4
  %421 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %420, %268
  br i1 %421, label %333, label %316

422:                                              ; preds = %235
  %423 = ptrtoint i8* %238 to i64
  %424 = inttoptr i64 %236 to %"class.base::internal::UncheckedObserverAdapter"*
  %425 = inttoptr i64 %236 to i64*
  store i64 %423, i64* %425, align 8
  %426 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %424, i64 1
  %427 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %426 to i64
  br label %428

428:                                              ; preds = %422, %235
  %429 = phi i64 [ %236, %235 ], [ %427, %422 ]
  %430 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 2, i32 0
  %431 = load i8*, i8** %430, align 8
  %432 = icmp eq i8* %431, null
  br i1 %432, label %439, label %433

433:                                              ; preds = %428
  %434 = ptrtoint i8* %431 to i64
  %435 = inttoptr i64 %429 to %"class.base::internal::UncheckedObserverAdapter"*
  %436 = inttoptr i64 %429 to i64*
  store i64 %434, i64* %436, align 8
  %437 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %435, i64 1
  %438 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %437 to i64
  br label %439

439:                                              ; preds = %433, %428
  %440 = phi i64 [ %429, %428 ], [ %438, %433 ]
  %441 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 3, i32 0
  %442 = load i8*, i8** %441, align 8
  %443 = icmp eq i8* %442, null
  br i1 %443, label %450, label %444

444:                                              ; preds = %439
  %445 = ptrtoint i8* %442 to i64
  %446 = inttoptr i64 %440 to %"class.base::internal::UncheckedObserverAdapter"*
  %447 = inttoptr i64 %440 to i64*
  store i64 %445, i64* %447, align 8
  %448 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %446, i64 1
  %449 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %448 to i64
  br label %450

450:                                              ; preds = %444, %439
  %451 = phi i64 [ %440, %439 ], [ %449, %444 ]
  %452 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 4
  %453 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %452, %175
  br i1 %453, label %240, label %223
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15PluginInstaller15AddWeakObserverEP27WeakPluginInstallerObserver(%class.PluginInstaller*, %class.WeakPluginInstallerObserver*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3
  %4 = icmp eq %class.WeakPluginInstallerObserver* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %class.WeakPluginInstallerObserver* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %class.WeakPluginInstallerObserver* %1 to i64
  %32 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList.1"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList.1"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #10
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #10
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #9
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #8
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #9
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15PluginInstaller18RemoveWeakObserverEP27WeakPluginInstallerObserver(%class.PluginInstaller*, %class.WeakPluginInstallerObserver* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %class.WeakPluginInstallerObserver* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode.3"**
  %32 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %31, align 8
  %33 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 3, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode.3"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #8
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15PluginInstaller15OpenDownloadURLERK4GURLPN7content11WebContentsE(%class.PluginInstaller*, %class.GURL* dereferenceable(120), %"class.content::WebContents"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.content::OpenURLParams", align 8
  %5 = alloca %"struct.content::Referrer", align 8
  %6 = alloca %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = alloca %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %8 = getelementptr inbounds %"class.content::WebContents", %"class.content::WebContents"* %2, i64 0, i32 0
  %9 = bitcast %"struct.content::OpenURLParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 720, i8* nonnull %9) #8
  %10 = bitcast %"struct.content::Referrer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #8
  %11 = bitcast %"class.content::WebContents"* %2 to %class.GURL* (%"class.content::WebContents"*)***
  %12 = load %class.GURL* (%"class.content::WebContents"*)**, %class.GURL* (%"class.content::WebContents"*)*** %11, align 8
  %13 = getelementptr inbounds %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %12, i64 7
  %14 = load %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %13, align 8
  %15 = tail call dereferenceable(120) %class.GURL* %14(%"class.content::WebContents"* %2) #8
  %16 = getelementptr inbounds %"struct.content::Referrer", %"struct.content::Referrer"* %5, i64 0, i32 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %16, %class.GURL* dereferenceable(120) %15) #8
  %17 = getelementptr inbounds %"struct.content::Referrer", %"struct.content::Referrer"* %5, i64 0, i32 1
  store i32 1, i32* %17, align 8
  call void @_ZN7content13OpenURLParamsC1ERK4GURLRKNS_8ReferrerE21WindowOpenDispositionN2ui14PageTransitionEb(%"struct.content::OpenURLParams"* nonnull %4, %class.GURL* dereferenceable(120) %1, %"struct.content::Referrer"* nonnull dereferenceable(128) %5, i32 3, i32 1, i1 zeroext false) #8
  %18 = bitcast %"class.content::WebContents"* %2 to %"class.content::WebContents"* (%"class.content::PageNavigator"*, %"struct.content::OpenURLParams"*)***
  %19 = load %"class.content::WebContents"* (%"class.content::PageNavigator"*, %"struct.content::OpenURLParams"*)**, %"class.content::WebContents"* (%"class.content::PageNavigator"*, %"struct.content::OpenURLParams"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.content::WebContents"* (%"class.content::PageNavigator"*, %"struct.content::OpenURLParams"*)*, %"class.content::WebContents"* (%"class.content::PageNavigator"*, %"struct.content::OpenURLParams"*)** %19, i64 2
  %21 = load %"class.content::WebContents"* (%"class.content::PageNavigator"*, %"struct.content::OpenURLParams"*)*, %"class.content::WebContents"* (%"class.content::PageNavigator"*, %"struct.content::OpenURLParams"*)** %20, align 8
  %22 = call %"class.content::WebContents"* %21(%"class.content::PageNavigator"* %8, %"struct.content::OpenURLParams"* nonnull dereferenceable(720) %4) #8
  call void @_ZN7content13OpenURLParamsD1Ev(%"struct.content::OpenURLParams"* nonnull %4) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 720, i8* nonnull %9) #8
  %23 = bitcast %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #8
  %24 = getelementptr inbounds %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %27 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 40, i1 false)
  %29 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %27, align 8, !noalias !11
  %30 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %30, align 8, !noalias !11
  %32 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %29, %31
  %33 = getelementptr inbounds %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %33) #8
  br i1 %32, label %34, label %36

34:                                               ; preds = %3
  %35 = bitcast %"class.base::ObserverList"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #8, !alias.scope !11
  br label %77

36:                                               ; preds = %3
  %37 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0
  store %"class.base::ObserverList"* %37, %"class.base::ObserverList"** %24, align 8
  %38 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %33, %"class.base::internal::LinkNodeBase"* %38) #8
  store i64 0, i64* %25, align 8
  %39 = getelementptr inbounds %class.PluginInstaller, %class.PluginInstaller* %0, i64 0, i32 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %30 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %class.PluginInstaller* %0 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = ashr exact i64 %47, 3
  br label %49

49:                                               ; preds = %42, %36
  %50 = phi i64 [ %48, %42 ], [ -1, %36 ]
  store i64 %50, i64* %26, align 8
  %51 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %52 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %51, i64 0, i32 0, i32 0, i32 1
  %53 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.base::ObserverList"* %51 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = ashr exact i64 %57, 3
  %59 = icmp ult i64 %58, %50
  %60 = select i1 %59, i64 %58, i64 %50
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %77, label %62

62:                                               ; preds = %49
  %63 = inttoptr i64 %56 to %"class.base::internal::UncheckedObserverAdapter"*
  %64 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %51, i64 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %63, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %68, label %77

68:                                               ; preds = %62, %72
  %69 = phi i64 [ %70, %72 ], [ 0, %62 ]
  %70 = add nuw i64 %69, 1
  store i64 %70, i64* %25, align 8
  %71 = icmp ult i64 %70, %60
  br i1 %71, label %72, label %77

72:                                               ; preds = %68
  %73 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %64, align 8
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %70, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %68, label %77

77:                                               ; preds = %72, %68, %62, %49, %34
  %78 = bitcast %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %78) #8
  %79 = getelementptr inbounds %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 1
  %81 = getelementptr inbounds %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 2
  %82 = getelementptr inbounds %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.base::ObserverList<PluginInstallerObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %82) #8
  %84 = bitcast %"class.base::ObserverList"** %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #8, !alias.scope !14
  %85 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  br label %86

86:                                               ; preds = %326, %77
  %87 = phi %"class.base::ObserverList"* [ %85, %77 ], [ %324, %326 ]
  %88 = icmp eq %"class.base::ObserverList"* %87, null
  br i1 %88, label %104, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %25, align 8
  %91 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::ObserverList"* %87 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = load i64, i64* %26, align 8
  %99 = icmp ult i64 %97, %98
  %100 = select i1 %99, i64 %97, i64 %98
  %101 = icmp eq i64 %90, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %89
  %103 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %79, align 8
  br label %120

104:                                              ; preds = %89, %86
  %105 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %79, align 8
  %106 = icmp eq %"class.base::ObserverList"* %105, null
  br i1 %106, label %220, label %107

107:                                              ; preds = %104
  %108 = load i64, i64* %80, align 8
  %109 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %105, i64 0, i32 0, i32 0, i32 1
  %110 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.base::ObserverList"* %105 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 %111, %113
  %115 = ashr exact i64 %114, 3
  %116 = load i64, i64* %81, align 8
  %117 = icmp ult i64 %115, %116
  %118 = select i1 %117, i64 %115, i64 %116
  %119 = icmp eq i64 %108, %118
  br i1 %119, label %129, label %120

120:                                              ; preds = %107, %102
  %121 = phi %"class.base::ObserverList"* [ %103, %102 ], [ %105, %107 ]
  %122 = icmp eq %"class.base::ObserverList"* %87, %121
  %123 = load i64, i64* %25, align 8
  %124 = load i64, i64* %80, align 8
  %125 = icmp eq i64 %123, %124
  %126 = and i1 %122, %125
  br i1 %126, label %127, label %314

127:                                              ; preds = %120
  %128 = icmp eq %"class.base::ObserverList"* %87, null
  br i1 %128, label %220, label %129

129:                                              ; preds = %107, %127
  %130 = phi %"class.base::ObserverList"* [ %87, %127 ], [ %105, %107 ]
  %131 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %130, i64 0, i32 1
  %132 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %130, i64 0, i32 1, i32 0, i32 0, i32 1
  %133 = bitcast %"class.base::internal::LinkNodeBase"** %132 to %"class.base::LinkNode"**
  %134 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %133, align 8
  %135 = bitcast %"class.base::LinkedList"* %131 to %"class.base::LinkNode"**
  %136 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %135, align 8
  %137 = icmp eq %"class.base::LinkNode"* %134, %136
  br i1 %137, label %138, label %216

138:                                              ; preds = %129
  %139 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %130, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %139, align 8
  %141 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %130, i64 0, i32 0, i32 0, i32 1
  %142 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %141, align 8
  %143 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %140, %142
  br i1 %143, label %152, label %144

144:                                              ; preds = %138, %149
  %145 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %150, %149 ], [ %140, %138 ]
  %146 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %145, i64 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %152, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %145, i64 1
  %151 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %150, %142
  br i1 %151, label %216, label %144

152:                                              ; preds = %144, %138
  %153 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %140, %138 ], [ %145, %144 ]
  %154 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %153 to i64
  %155 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %153, %142
  br i1 %155, label %216, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %153, i64 1
  %158 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %157, %142
  br i1 %158, label %211, label %159

159:                                              ; preds = %156
  %160 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %142, i64 -2, i32 0
  %161 = ptrtoint i8** %160 to i64
  %162 = sub i64 %161, %154
  %163 = lshr i64 %162, 3
  %164 = add nuw nsw i64 %163, 1
  %165 = and i64 %164, 3
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %185, label %167

167:                                              ; preds = %159, %180
  %168 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %182, %180 ], [ %157, %159 ]
  %169 = phi i64 [ %181, %180 ], [ %154, %159 ]
  %170 = phi i64 [ %183, %180 ], [ %165, %159 ]
  %171 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %168, i64 0, i32 0
  %172 = load i8*, i8** %171, align 8
  %173 = icmp eq i8* %172, null
  br i1 %173, label %180, label %174

174:                                              ; preds = %167
  %175 = ptrtoint i8* %172 to i64
  %176 = inttoptr i64 %169 to %"class.base::internal::UncheckedObserverAdapter"*
  %177 = inttoptr i64 %169 to i64*
  store i64 %175, i64* %177, align 8
  %178 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %176, i64 1
  %179 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %178 to i64
  br label %180

180:                                              ; preds = %174, %167
  %181 = phi i64 [ %169, %167 ], [ %179, %174 ]
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %168, i64 1
  %183 = add i64 %170, -1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %167, !llvm.loop !17

185:                                              ; preds = %180, %159
  %186 = phi i64 [ undef, %159 ], [ %181, %180 ]
  %187 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %157, %159 ], [ %182, %180 ]
  %188 = phi i64 [ %154, %159 ], [ %181, %180 ]
  %189 = icmp ult i64 %162, 24
  br i1 %189, label %207, label %190

190:                                              ; preds = %185, %416
  %191 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %418, %416 ], [ %187, %185 ]
  %192 = phi i64 [ %417, %416 ], [ %188, %185 ]
  %193 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 0, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = icmp eq i8* %194, null
  br i1 %195, label %202, label %196

196:                                              ; preds = %190
  %197 = ptrtoint i8* %194 to i64
  %198 = inttoptr i64 %192 to %"class.base::internal::UncheckedObserverAdapter"*
  %199 = inttoptr i64 %192 to i64*
  store i64 %197, i64* %199, align 8
  %200 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 1
  %201 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %200 to i64
  br label %202

202:                                              ; preds = %196, %190
  %203 = phi i64 [ %192, %190 ], [ %201, %196 ]
  %204 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 1, i32 0
  %205 = load i8*, i8** %204, align 8
  %206 = icmp eq i8* %205, null
  br i1 %206, label %394, label %388

207:                                              ; preds = %416, %185
  %208 = phi i64 [ %186, %185 ], [ %417, %416 ]
  %209 = inttoptr i64 %208 to %"class.base::internal::UncheckedObserverAdapter"*
  %210 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %141, align 8
  br label %211

211:                                              ; preds = %207, %156
  %212 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %156 ], [ %210, %207 ]
  %213 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %153, %156 ], [ %209, %207 ]
  %214 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %213, %212
  br i1 %214, label %216, label %215

215:                                              ; preds = %211
  store %"class.base::internal::UncheckedObserverAdapter"* %213, %"class.base::internal::UncheckedObserverAdapter"** %141, align 8
  br label %216

216:                                              ; preds = %149, %215, %211, %152, %129
  %217 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %79, align 8
  %218 = icmp eq %"class.base::ObserverList"* %217, null
  br i1 %218, label %220, label %219

219:                                              ; preds = %216
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %79, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %82) #8
  br label %220

220:                                              ; preds = %104, %127, %216, %219
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %78) #8
  %221 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %222 = icmp eq %"class.base::ObserverList"* %221, null
  br i1 %222, label %313, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %221, i64 0, i32 1
  %225 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %221, i64 0, i32 1, i32 0, i32 0, i32 1
  %226 = bitcast %"class.base::internal::LinkNodeBase"** %225 to %"class.base::LinkNode"**
  %227 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %226, align 8
  %228 = bitcast %"class.base::LinkedList"* %224 to %"class.base::LinkNode"**
  %229 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %228, align 8
  %230 = icmp eq %"class.base::LinkNode"* %227, %229
  br i1 %230, label %231, label %309

231:                                              ; preds = %223
  %232 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %221, i64 0, i32 0, i32 0, i32 0
  %233 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %232, align 8
  %234 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %221, i64 0, i32 0, i32 0, i32 1
  %235 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %234, align 8
  %236 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %233, %235
  br i1 %236, label %245, label %237

237:                                              ; preds = %231, %242
  %238 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %243, %242 ], [ %233, %231 ]
  %239 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %238, i64 0, i32 0
  %240 = load i8*, i8** %239, align 8
  %241 = icmp eq i8* %240, null
  br i1 %241, label %245, label %242

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %238, i64 1
  %244 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %243, %235
  br i1 %244, label %309, label %237

245:                                              ; preds = %237, %231
  %246 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %233, %231 ], [ %238, %237 ]
  %247 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %246 to i64
  %248 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %246, %235
  br i1 %248, label %309, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 1
  %251 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %250, %235
  br i1 %251, label %304, label %252

252:                                              ; preds = %249
  %253 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %235, i64 -2, i32 0
  %254 = ptrtoint i8** %253 to i64
  %255 = sub i64 %254, %247
  %256 = lshr i64 %255, 3
  %257 = add nuw nsw i64 %256, 1
  %258 = and i64 %257, 3
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %278, label %260

260:                                              ; preds = %252, %273
  %261 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %275, %273 ], [ %250, %252 ]
  %262 = phi i64 [ %274, %273 ], [ %247, %252 ]
  %263 = phi i64 [ %276, %273 ], [ %258, %252 ]
  %264 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %261, i64 0, i32 0
  %265 = load i8*, i8** %264, align 8
  %266 = icmp eq i8* %265, null
  br i1 %266, label %273, label %267

267:                                              ; preds = %260
  %268 = ptrtoint i8* %265 to i64
  %269 = inttoptr i64 %262 to %"class.base::internal::UncheckedObserverAdapter"*
  %270 = inttoptr i64 %262 to i64*
  store i64 %268, i64* %270, align 8
  %271 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %269, i64 1
  %272 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %271 to i64
  br label %273

273:                                              ; preds = %267, %260
  %274 = phi i64 [ %262, %260 ], [ %272, %267 ]
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %261, i64 1
  %276 = add i64 %263, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %260, !llvm.loop !18

278:                                              ; preds = %273, %252
  %279 = phi i64 [ undef, %252 ], [ %274, %273 ]
  %280 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %250, %252 ], [ %275, %273 ]
  %281 = phi i64 [ %247, %252 ], [ %274, %273 ]
  %282 = icmp ult i64 %255, 24
  br i1 %282, label %300, label %283

283:                                              ; preds = %278, %384
  %284 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %386, %384 ], [ %280, %278 ]
  %285 = phi i64 [ %385, %384 ], [ %281, %278 ]
  %286 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %284, i64 0, i32 0
  %287 = load i8*, i8** %286, align 8
  %288 = icmp eq i8* %287, null
  br i1 %288, label %295, label %289

289:                                              ; preds = %283
  %290 = ptrtoint i8* %287 to i64
  %291 = inttoptr i64 %285 to %"class.base::internal::UncheckedObserverAdapter"*
  %292 = inttoptr i64 %285 to i64*
  store i64 %290, i64* %292, align 8
  %293 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 1
  %294 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %293 to i64
  br label %295

295:                                              ; preds = %289, %283
  %296 = phi i64 [ %285, %283 ], [ %294, %289 ]
  %297 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %284, i64 1, i32 0
  %298 = load i8*, i8** %297, align 8
  %299 = icmp eq i8* %298, null
  br i1 %299, label %362, label %356

300:                                              ; preds = %384, %278
  %301 = phi i64 [ %279, %278 ], [ %385, %384 ]
  %302 = inttoptr i64 %301 to %"class.base::internal::UncheckedObserverAdapter"*
  %303 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %234, align 8
  br label %304

304:                                              ; preds = %300, %249
  %305 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %249 ], [ %303, %300 ]
  %306 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %246, %249 ], [ %302, %300 ]
  %307 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %306, %305
  br i1 %307, label %309, label %308

308:                                              ; preds = %304
  store %"class.base::internal::UncheckedObserverAdapter"* %306, %"class.base::internal::UncheckedObserverAdapter"** %234, align 8
  br label %309

309:                                              ; preds = %242, %308, %304, %245, %223
  %310 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %311 = icmp eq %"class.base::ObserverList"* %310, null
  br i1 %311, label %313, label %312

312:                                              ; preds = %309
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %24, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %33) #8
  br label %313

313:                                              ; preds = %220, %309, %312
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #8
  ret void

314:                                              ; preds = %120
  %315 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 0
  %316 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %315, align 8
  %317 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %316, i64 %123
  %318 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %317 to %class.PluginInstallerObserver**
  %319 = load %class.PluginInstallerObserver*, %class.PluginInstallerObserver** %318, align 8
  %320 = bitcast %class.PluginInstallerObserver* %319 to void (%class.PluginInstallerObserver*)***
  %321 = load void (%class.PluginInstallerObserver*)**, void (%class.PluginInstallerObserver*)*** %320, align 8
  %322 = getelementptr inbounds void (%class.PluginInstallerObserver*)*, void (%class.PluginInstallerObserver*)** %321, i64 2
  %323 = load void (%class.PluginInstallerObserver*)*, void (%class.PluginInstallerObserver*)** %322, align 8
  call void %323(%class.PluginInstallerObserver* %319) #8
  %324 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %325 = icmp eq %"class.base::ObserverList"* %324, null
  br i1 %325, label %326, label %327

326:                                              ; preds = %351, %347, %314, %327, %341
  br label %86

327:                                              ; preds = %314
  %328 = load i64, i64* %25, align 8
  %329 = add i64 %328, 1
  store i64 %329, i64* %25, align 8
  %330 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %324, i64 0, i32 0, i32 0, i32 1
  %331 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %330 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = bitcast %"class.base::ObserverList"* %324 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = sub i64 %332, %334
  %336 = ashr exact i64 %335, 3
  %337 = load i64, i64* %26, align 8
  %338 = icmp ult i64 %336, %337
  %339 = select i1 %338, i64 %336, i64 %337
  %340 = icmp ult i64 %329, %339
  br i1 %340, label %341, label %326

341:                                              ; preds = %327
  %342 = inttoptr i64 %334 to %"class.base::internal::UncheckedObserverAdapter"*
  %343 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %324, i64 0, i32 0, i32 0, i32 0
  %344 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %342, i64 %329, i32 0
  %345 = load i8*, i8** %344, align 8
  %346 = icmp eq i8* %345, null
  br i1 %346, label %347, label %326

347:                                              ; preds = %341, %351
  %348 = phi i64 [ %349, %351 ], [ %329, %341 ]
  %349 = add nuw i64 %348, 1
  store i64 %349, i64* %25, align 8
  %350 = icmp ult i64 %349, %339
  br i1 %350, label %351, label %326

351:                                              ; preds = %347
  %352 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %343, align 8
  %353 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %352, i64 %349, i32 0
  %354 = load i8*, i8** %353, align 8
  %355 = icmp eq i8* %354, null
  br i1 %355, label %347, label %326

356:                                              ; preds = %295
  %357 = ptrtoint i8* %298 to i64
  %358 = inttoptr i64 %296 to %"class.base::internal::UncheckedObserverAdapter"*
  %359 = inttoptr i64 %296 to i64*
  store i64 %357, i64* %359, align 8
  %360 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %358, i64 1
  %361 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %360 to i64
  br label %362

362:                                              ; preds = %356, %295
  %363 = phi i64 [ %296, %295 ], [ %361, %356 ]
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %284, i64 2, i32 0
  %365 = load i8*, i8** %364, align 8
  %366 = icmp eq i8* %365, null
  br i1 %366, label %373, label %367

367:                                              ; preds = %362
  %368 = ptrtoint i8* %365 to i64
  %369 = inttoptr i64 %363 to %"class.base::internal::UncheckedObserverAdapter"*
  %370 = inttoptr i64 %363 to i64*
  store i64 %368, i64* %370, align 8
  %371 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %369, i64 1
  %372 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %371 to i64
  br label %373

373:                                              ; preds = %367, %362
  %374 = phi i64 [ %363, %362 ], [ %372, %367 ]
  %375 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %284, i64 3, i32 0
  %376 = load i8*, i8** %375, align 8
  %377 = icmp eq i8* %376, null
  br i1 %377, label %384, label %378

378:                                              ; preds = %373
  %379 = ptrtoint i8* %376 to i64
  %380 = inttoptr i64 %374 to %"class.base::internal::UncheckedObserverAdapter"*
  %381 = inttoptr i64 %374 to i64*
  store i64 %379, i64* %381, align 8
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %380, i64 1
  %383 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %382 to i64
  br label %384

384:                                              ; preds = %378, %373
  %385 = phi i64 [ %374, %373 ], [ %383, %378 ]
  %386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %284, i64 4
  %387 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %386, %235
  br i1 %387, label %300, label %283

388:                                              ; preds = %202
  %389 = ptrtoint i8* %205 to i64
  %390 = inttoptr i64 %203 to %"class.base::internal::UncheckedObserverAdapter"*
  %391 = inttoptr i64 %203 to i64*
  store i64 %389, i64* %391, align 8
  %392 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %390, i64 1
  %393 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %392 to i64
  br label %394

394:                                              ; preds = %388, %202
  %395 = phi i64 [ %203, %202 ], [ %393, %388 ]
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 2, i32 0
  %397 = load i8*, i8** %396, align 8
  %398 = icmp eq i8* %397, null
  br i1 %398, label %405, label %399

399:                                              ; preds = %394
  %400 = ptrtoint i8* %397 to i64
  %401 = inttoptr i64 %395 to %"class.base::internal::UncheckedObserverAdapter"*
  %402 = inttoptr i64 %395 to i64*
  store i64 %400, i64* %402, align 8
  %403 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %401, i64 1
  %404 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %403 to i64
  br label %405

405:                                              ; preds = %399, %394
  %406 = phi i64 [ %395, %394 ], [ %404, %399 ]
  %407 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 3, i32 0
  %408 = load i8*, i8** %407, align 8
  %409 = icmp eq i8* %408, null
  br i1 %409, label %416, label %410

410:                                              ; preds = %405
  %411 = ptrtoint i8* %408 to i64
  %412 = inttoptr i64 %406 to %"class.base::internal::UncheckedObserverAdapter"*
  %413 = inttoptr i64 %406 to i64*
  store i64 %411, i64* %413, align 8
  %414 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %412, i64 1
  %415 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %414 to i64
  br label %416

416:                                              ; preds = %410, %405
  %417 = phi i64 [ %406, %405 ], [ %415, %410 ]
  %418 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %191, i64 4
  %419 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %418, %142
  br i1 %419, label %207, label %190
}

declare void @_ZN7content13OpenURLParamsC1ERK4GURLRKNS_8ReferrerE21WindowOpenDispositionN2ui14PageTransitionEb(%"struct.content::OpenURLParams"*, %class.GURL* dereferenceable(120), %"struct.content::Referrer"* dereferenceable(128), i32, i32, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7content13OpenURLParamsD1Ev(%"struct.content::OpenURLParams"*) unnamed_addr #3

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base12ObserverListI27WeakPluginInstallerObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base12ObserverListI27WeakPluginInstallerObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListI27WeakPluginInstallerObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListI27WeakPluginInstallerObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base12ObserverListI23PluginInstallerObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base12ObserverListI23PluginInstallerObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK4base12ObserverListI23PluginInstallerObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4base12ObserverListI23PluginInstallerObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!17 = distinct !{!17, !9}
!18 = distinct !{!18, !9}
