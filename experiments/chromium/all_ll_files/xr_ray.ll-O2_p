; ModuleID = '../../third_party/blink/renderer/modules/xr/xr_ray.cc'
source_filename = "../../third_party/blink/renderer/modules/xr/xr_ray.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.13", i32, [4 x i8], %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.185", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.129", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i64 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist.95"* }
%"class.blink::Worklist.95" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::Worklist.102"* }
%"class.blink::Worklist.102" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.109", %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.123", [4 x i8] }>
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111", %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { i64 }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { float }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.132", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.152" }
%"class.WTF::VectorBuffer.152" = type { %"class.WTF::VectorBufferBase.153" }
%"class.WTF::VectorBufferBase.153" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.166" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.81"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.88"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.189" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.213" }
%"struct.std::__1::atomic.213" = type { %"struct.std::__1::__atomic_base.214" }
%"struct.std::__1::__atomic_base.214" = type { %"struct.std::__1::__atomic_base.215" }
%"struct.std::__1::__atomic_base.215" = type { %"struct.std::__1::__cxx_atomic_impl.216" }
%"struct.std::__1::__cxx_atomic_impl.216" = type { %"struct.std::__1::__cxx_atomic_base_impl.217" }
%"struct.std::__1::__cxx_atomic_base_impl.217" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::XRRay" = type { %"class.blink::ScriptWrappable", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.0", %"class.std::__1::unique_ptr" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DOMPointReadOnly"* }
%"class.blink::DOMPointReadOnly" = type { %"class.blink::ScriptWrappable", double, double, double, double }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.2" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::XRRigidTransform" = type { %"class.blink::ScriptWrappable", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.5", %"class.blink::Member.0", %"class.std::__1::unique_ptr" }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::XRRigidTransform"* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.8" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::TraceWrapperV8Reference.8" = type { %"class.v8::TracedReference.9" }
%"class.v8::TracedReference.9" = type { %"class.v8::BasicTracedReference.10" }
%"class.v8::BasicTracedReference.10" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::DOMPointInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, double, double, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::XRRayDirectionInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, double, double, double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.204, %"class.blink::Member.205", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.204 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.205" = type { %"class.blink::MemberBase.206" }
%"class.blink::MemberBase.206" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.207" }
%"class.blink::Persistent.207" = type { %"class.blink::PersistentBase.208" }
%"class.blink::PersistentBase.208" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink5XRRay18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_16DOMPointReadOnlyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink5XRRayE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::XRRay"*)* @_ZN5blink5XRRayD2Ev to i8*), i8* bitcast (void (%"class.blink::XRRay"*)* @_ZN5blink5XRRayD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::XRRay"*, %"class.blink::Visitor"*)* @_ZNK5blink5XRRay5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::XRRay"*)* @_ZNK5blink5XRRay18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, align 8
@_ZN5blinkL28kUnableToNormalizeZeroLengthE = internal constant [40 x i8] c"Unable to normalize vector of length 0.\00", align 16
@_ZN12_GLOBAL__N_129kInvalidWComponentInDirectionE = internal constant [47 x i8] c"Direction's `w` component must be set to 0.0f!\00", align 16
@_ZN12_GLOBAL__N_126kInvalidWComponentInOriginE = internal constant [44 x i8] c"Origin's `w` component must be set to 1.0f!\00", align 16
@_ZN5blink5XRRay18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink5XRRayC1Ev = hidden unnamed_addr alias void (%"class.blink::XRRay"*), void (%"class.blink::XRRay"*)* @_ZN5blink5XRRayC2Ev
@_ZN5blink5XRRayC1EPNS_16XRRigidTransformERNS_14ExceptionStateE = hidden unnamed_addr alias void (%"class.blink::XRRay"*, %"class.blink::XRRigidTransform"*, %"class.blink::ExceptionState"*), void (%"class.blink::XRRay"*, %"class.blink::XRRigidTransform"*, %"class.blink::ExceptionState"*)* @_ZN5blink5XRRayC2EPNS_16XRRigidTransformERNS_14ExceptionStateE
@_ZN5blink5XRRayC1EPNS_12DOMPointInitEPNS_18XRRayDirectionInitERNS_14ExceptionStateE = hidden unnamed_addr alias void (%"class.blink::XRRay"*, %"class.blink::DOMPointInit"*, %"class.blink::XRRayDirectionInit"*, %"class.blink::ExceptionState"*), void (%"class.blink::XRRay"*, %"class.blink::DOMPointInit"*, %"class.blink::XRRayDirectionInit"*, %"class.blink::ExceptionState"*)* @_ZN5blink5XRRayC2EPNS_12DOMPointInitEPNS_18XRRayDirectionInitERNS_14ExceptionStateE
@_ZN5blink5XRRayD1Ev = hidden unnamed_addr alias void (%"class.blink::XRRay"*), void (%"class.blink::XRRay"*)* @_ZN5blink5XRRayD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5XRRayC2Ev(%"class.blink::XRRay"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink5XRRayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 2
  %6 = bitcast %"class.blink::Member"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  %7 = tail call %"class.blink::DOMPointReadOnly"* @_ZN5blink16DOMPointReadOnly6CreateEdddd(double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00) #5
  %8 = ptrtoint %"class.blink::DOMPointReadOnly"* %7 to i64
  %9 = bitcast %"class.blink::Member"* %4 to i64*
  store atomic i64 %8, i64* %9 monotonic, align 8
  %10 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::DOMPointReadOnly"* %7 to i8*
  %14 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #5
  br label %15

15:                                               ; preds = %1, %12
  %16 = tail call %"class.blink::DOMPointReadOnly"* @_ZN5blink16DOMPointReadOnly6CreateEdddd(double 0.000000e+00, double 0.000000e+00, double -1.000000e+00, double 0.000000e+00) #5
  %17 = ptrtoint %"class.blink::DOMPointReadOnly"* %16 to i64
  %18 = bitcast %"class.blink::Member"* %5 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::DOMPointReadOnly"* %16 to i8*
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #5
  br label %24

24:                                               ; preds = %15, %21
  ret void
}

declare %"class.blink::DOMPointReadOnly"* @_ZN5blink16DOMPointReadOnly6CreateEdddd(double, double, double, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5XRRayC2EPNS_16XRRigidTransformERNS_14ExceptionStateE(%"class.blink::XRRay"* nocapture, %"class.blink::XRRigidTransform"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FloatPoint3D", align 4
  %5 = alloca %"class.blink::FloatPoint3D", align 4
  %6 = alloca %"class.blink::FloatPoint3D", align 4
  %7 = alloca %"class.blink::FloatPoint3D", align 4
  %8 = alloca %"class.blink::FloatPoint3D", align 4
  %9 = alloca %"class.blink::FloatPoint3D", align 4
  %10 = alloca %"class.blink::TransformationMatrix", align 8
  %11 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink5XRRayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.blink::DOMPointReadOnly"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false)
  %15 = tail call %"class.blink::DOMTypedArray"* @_ZN5blink16XRRigidTransform6matrixEv(%"class.blink::XRRigidTransform"* %1) #5
  %16 = bitcast %"class.blink::TransformationMatrix"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %16) #5
  call void @_ZN5blink37DOMFloat32ArrayToTransformationMatrixEPNS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEE(%"class.blink::TransformationMatrix"* nonnull sret %10, %"class.blink::DOMTypedArray"* %15) #5
  %17 = bitcast %"class.blink::FloatPoint3D"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17)
  %18 = bitcast %"class.blink::FloatPoint3D"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %18)
  %19 = bitcast %"class.blink::FloatPoint3D"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19) #5
  %20 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %4, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %20, align 4
  %21 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %21, align 4
  %22 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %4, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %22, align 4
  %23 = bitcast %"class.blink::FloatPoint3D"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #5
  %24 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %5, i64 0, i32 0
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %5, i64 0, i32 1
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %5, i64 0, i32 2
  store float 0.000000e+00, float* %26, align 4
  call void @_ZNK5blink20TransformationMatrix8MapPointERKNS_12FloatPoint3DE(%"class.blink::FloatPoint3D"* nonnull sret %4, %"class.blink::TransformationMatrix"* nonnull %10, %"class.blink::FloatPoint3D"* nonnull dereferenceable(12) %5) #5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #5
  %27 = bitcast %"class.blink::FloatPoint3D"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %27) #5
  %28 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %6, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %28, align 4
  %29 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %29, align 4
  %30 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %6, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %30, align 4
  %31 = bitcast %"class.blink::FloatPoint3D"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %31) #5
  %32 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %7, i64 0, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %7, i64 0, i32 1
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %7, i64 0, i32 2
  store float -1.000000e+00, float* %34, align 4
  call void @_ZNK5blink20TransformationMatrix8MapPointERKNS_12FloatPoint3DE(%"class.blink::FloatPoint3D"* nonnull sret %6, %"class.blink::TransformationMatrix"* nonnull %10, %"class.blink::FloatPoint3D"* nonnull dereferenceable(12) %7) #5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %31) #5
  %35 = load float, float* %20, align 4
  %36 = load float, float* %21, align 4
  %37 = load float, float* %22, align 4
  %38 = load float, float* %28, align 4
  %39 = fsub float %38, %35
  store float %39, float* %28, align 4
  %40 = load float, float* %29, align 4
  %41 = fsub float %40, %36
  store float %41, float* %29, align 4
  %42 = load float, float* %30, align 4
  %43 = fsub float %42, %37
  store float %43, float* %30, align 4
  %44 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %8, i64 0, i32 0
  store float %35, float* %44, align 4
  %45 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %8, i64 0, i32 1
  store float %36, float* %45, align 4
  %46 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %8, i64 0, i32 2
  store float %37, float* %46, align 4
  %47 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %9, i64 0, i32 0
  store float %39, float* %47, align 4
  %48 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %9, i64 0, i32 1
  store float %41, float* %48, align 4
  %49 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %9, i64 0, i32 2
  store float %43, float* %49, align 4
  call void @_ZN5blink5XRRay3SetENS_12FloatPoint3DES1_RNS_14ExceptionStateE(%"class.blink::XRRay"* %0, %"class.blink::FloatPoint3D"* nonnull %8, %"class.blink::FloatPoint3D"* nonnull %9, %"class.blink::ExceptionState"* dereferenceable(72) undef) #5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %27) #5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19) #5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %16) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::DOMTypedArray"* @_ZN5blink16XRRigidTransform6matrixEv(%"class.blink::XRRigidTransform"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5XRRay3SetERKNS_20TransformationMatrixERNS_14ExceptionStateE(%"class.blink::XRRay"* nocapture, %"class.blink::TransformationMatrix"* dereferenceable(128), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FloatPoint3D", align 4
  %5 = alloca %"class.blink::FloatPoint3D", align 4
  %6 = alloca %"class.blink::FloatPoint3D", align 4
  %7 = alloca %"class.blink::FloatPoint3D", align 4
  %8 = alloca %"class.blink::FloatPoint3D", align 4
  %9 = alloca %"class.blink::FloatPoint3D", align 4
  %10 = bitcast %"class.blink::FloatPoint3D"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #5
  %11 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %4, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  %12 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %12, align 4
  %13 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %4, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %13, align 4
  %14 = bitcast %"class.blink::FloatPoint3D"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #5
  %15 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %5, i64 0, i32 0
  store float 0.000000e+00, float* %15, align 4
  %16 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %5, i64 0, i32 1
  store float 0.000000e+00, float* %16, align 4
  %17 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %5, i64 0, i32 2
  store float 0.000000e+00, float* %17, align 4
  call void @_ZNK5blink20TransformationMatrix8MapPointERKNS_12FloatPoint3DE(%"class.blink::FloatPoint3D"* nonnull sret %4, %"class.blink::TransformationMatrix"* %1, %"class.blink::FloatPoint3D"* nonnull dereferenceable(12) %5) #5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #5
  %18 = bitcast %"class.blink::FloatPoint3D"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %18) #5
  %19 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %6, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %19, align 4
  %20 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %20, align 4
  %21 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %6, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %21, align 4
  %22 = bitcast %"class.blink::FloatPoint3D"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %22) #5
  %23 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %7, i64 0, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %7, i64 0, i32 1
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %7, i64 0, i32 2
  store float -1.000000e+00, float* %25, align 4
  call void @_ZNK5blink20TransformationMatrix8MapPointERKNS_12FloatPoint3DE(%"class.blink::FloatPoint3D"* nonnull sret %6, %"class.blink::TransformationMatrix"* %1, %"class.blink::FloatPoint3D"* nonnull dereferenceable(12) %7) #5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %22) #5
  %26 = load float, float* %11, align 4
  %27 = load float, float* %12, align 4
  %28 = load float, float* %13, align 4
  %29 = load float, float* %19, align 4
  %30 = fsub float %29, %26
  store float %30, float* %19, align 4
  %31 = load float, float* %20, align 4
  %32 = fsub float %31, %27
  store float %32, float* %20, align 4
  %33 = load float, float* %21, align 4
  %34 = fsub float %33, %28
  store float %34, float* %21, align 4
  %35 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %8, i64 0, i32 0
  store float %26, float* %35, align 4
  %36 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %8, i64 0, i32 1
  store float %27, float* %36, align 4
  %37 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %8, i64 0, i32 2
  store float %28, float* %37, align 4
  %38 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %9, i64 0, i32 0
  store float %30, float* %38, align 4
  %39 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %9, i64 0, i32 1
  store float %32, float* %39, align 4
  %40 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %9, i64 0, i32 2
  store float %34, float* %40, align 4
  call void @_ZN5blink5XRRay3SetENS_12FloatPoint3DES1_RNS_14ExceptionStateE(%"class.blink::XRRay"* %0, %"class.blink::FloatPoint3D"* nonnull %8, %"class.blink::FloatPoint3D"* nonnull %9, %"class.blink::ExceptionState"* dereferenceable(72) undef)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %18) #5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #5
  ret void
}

declare void @_ZN5blink37DOMFloat32ArrayToTransformationMatrixEPNS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEE(%"class.blink::TransformationMatrix"* sret, %"class.blink::DOMTypedArray"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5XRRayC2EPNS_12DOMPointInitEPNS_18XRRayDirectionInitERNS_14ExceptionStateE(%"class.blink::XRRay"* nocapture, %"class.blink::DOMPointInit"* nocapture readonly, %"class.blink::XRRayDirectionInit"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::FloatPoint3D", align 4
  %6 = alloca %"class.blink::FloatPoint3D", align 4
  %7 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink5XRRayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 6
  %11 = bitcast %"class.blink::DOMPointReadOnly"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false)
  %12 = load double, double* %10, align 8
  %13 = fptrunc double %12 to float
  %14 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 7
  %15 = load double, double* %14, align 8
  %16 = fptrunc double %15 to float
  %17 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 8
  %18 = load double, double* %17, align 8
  %19 = fptrunc double %18 to float
  %20 = getelementptr inbounds %"class.blink::XRRayDirectionInit", %"class.blink::XRRayDirectionInit"* %2, i64 0, i32 6
  %21 = load double, double* %20, align 8
  %22 = fptrunc double %21 to float
  %23 = getelementptr inbounds %"class.blink::XRRayDirectionInit", %"class.blink::XRRayDirectionInit"* %2, i64 0, i32 7
  %24 = bitcast double* %23 to <2 x double>*
  %25 = load <2 x double>, <2 x double>* %24, align 8
  %26 = fptrunc <2 x double> %25 to <2 x float>
  %27 = fmul float %22, %22
  %28 = fmul <2 x float> %26, %26
  %29 = extractelement <2 x float> %28, i32 0
  %30 = fadd float %27, %29
  %31 = extractelement <2 x float> %28, i32 1
  %32 = fadd float %30, %31
  %33 = tail call float @sqrtf(float %32) #5
  %34 = fcmp oeq float %33, 0.000000e+00
  br i1 %34, label %35, label %36

35:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_ZN5blinkL28kUnableToNormalizeZeroLengthE, i64 0, i64 0)) #5
  br label %55

36:                                               ; preds = %4
  %37 = getelementptr inbounds %"class.blink::XRRayDirectionInit", %"class.blink::XRRayDirectionInit"* %2, i64 0, i32 5
  %38 = load double, double* %37, align 8
  %39 = fcmp une double %38, 0.000000e+00
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @_ZN12_GLOBAL__N_129kInvalidWComponentInDirectionE, i64 0, i64 0)) #5
  br label %55

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 5
  %43 = load double, double* %42, align 8
  %44 = fcmp une double %43, 1.000000e+00
  br i1 %44, label %45, label %46

45:                                               ; preds = %41
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @_ZN12_GLOBAL__N_126kInvalidWComponentInOriginE, i64 0, i64 0)) #5
  br label %55

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %5, i64 0, i32 0
  store float %13, float* %47, align 4
  %48 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %5, i64 0, i32 1
  store float %16, float* %48, align 4
  %49 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %5, i64 0, i32 2
  store float %19, float* %49, align 4
  %50 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %6, i64 0, i32 0
  store float %22, float* %50, align 4
  %51 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %6, i64 0, i32 1
  %52 = extractelement <2 x float> %26, i32 0
  store float %52, float* %51, align 4
  %53 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %6, i64 0, i32 2
  %54 = extractelement <2 x float> %26, i32 1
  store float %54, float* %53, align 4
  call void @_ZN5blink5XRRay3SetENS_12FloatPoint3DES1_RNS_14ExceptionStateE(%"class.blink::XRRay"* %0, %"class.blink::FloatPoint3D"* nonnull %5, %"class.blink::FloatPoint3D"* nonnull %6, %"class.blink::ExceptionState"* dereferenceable(72) undef)
  br label %55

55:                                               ; preds = %46, %45, %40, %35
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5XRRay3SetENS_12FloatPoint3DES1_RNS_14ExceptionStateE(%"class.blink::XRRay"* nocapture, %"class.blink::FloatPoint3D"* nocapture readonly, %"class.blink::FloatPoint3D"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink12FloatPoint3D9NormalizeEv(%"class.blink::FloatPoint3D"* %2) #5
  %5 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fpext float %6 to double
  %8 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = fpext float %9 to double
  %11 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %1, i64 0, i32 2
  %12 = load float, float* %11, align 4
  %13 = fpext float %12 to double
  %14 = tail call %"class.blink::DOMPointReadOnly"* @_ZN5blink16DOMPointReadOnly6CreateEdddd(double %7, double %10, double %13, double 1.000000e+00) #5
  %15 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 1
  %16 = ptrtoint %"class.blink::DOMPointReadOnly"* %14 to i64
  %17 = bitcast %"class.blink::Member"* %15 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %4
  %21 = bitcast %"class.blink::DOMPointReadOnly"* %14 to i8*
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #5
  br label %23

23:                                               ; preds = %4, %20
  %24 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %2, i64 0, i32 0
  %25 = load float, float* %24, align 4
  %26 = fpext float %25 to double
  %27 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %2, i64 0, i32 1
  %28 = load float, float* %27, align 4
  %29 = fpext float %28 to double
  %30 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %2, i64 0, i32 2
  %31 = load float, float* %30, align 4
  %32 = fpext float %31 to double
  %33 = tail call %"class.blink::DOMPointReadOnly"* @_ZN5blink16DOMPointReadOnly6CreateEdddd(double %26, double %29, double %32, double 0.000000e+00) #5
  %34 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 2
  %35 = ptrtoint %"class.blink::DOMPointReadOnly"* %33 to i64
  %36 = bitcast %"class.blink::Member"* %34 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %23
  %40 = bitcast %"class.blink::DOMPointReadOnly"* %33 to i8*
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #5
  br label %42

42:                                               ; preds = %23, %39
  ret void
}

declare void @_ZNK5blink20TransformationMatrix8MapPointERKNS_12FloatPoint3DE(%"class.blink::FloatPoint3D"* sret, %"class.blink::TransformationMatrix"*, %"class.blink::FloatPoint3D"* dereferenceable(12)) local_unnamed_addr #1

declare void @_ZN5blink12FloatPoint3D9NormalizeEv(%"class.blink::FloatPoint3D"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRRay"* @_ZN5blink5XRRay6CreateEPNS_16XRRigidTransformERNS_14ExceptionStateE(%"class.blink::XRRigidTransform"*, %"class.blink::ExceptionState"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #5
  %4 = bitcast i8* %3 to %"class.blink::XRRay"*
  tail call void @_ZN5blink5XRRayC2EPNS_16XRRigidTransformERNS_14ExceptionStateE(%"class.blink::XRRay"* %4, %"class.blink::XRRigidTransform"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %1) #5
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, %"class.blink::XRRay"* %4, %"class.blink::XRRay"* null
  ret %"class.blink::XRRay"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRRay"* @_ZN5blink5XRRay6CreateEPNS_12DOMPointInitEPNS_18XRRayDirectionInitERNS_14ExceptionStateE(%"class.blink::DOMPointInit"*, %"class.blink::XRRayDirectionInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #5
  %5 = bitcast i8* %4 to %"class.blink::XRRay"*
  tail call void @_ZN5blink5XRRayC2EPNS_12DOMPointInitEPNS_18XRRayDirectionInitERNS_14ExceptionStateE(%"class.blink::XRRay"* %5, %"class.blink::DOMPointInit"* %0, %"class.blink::XRRayDirectionInit"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2) #5
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  %13 = select i1 %12, %"class.blink::XRRay"* %5, %"class.blink::XRRay"* null
  ret %"class.blink::XRRay"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5XRRayD2Ev(%"class.blink::XRRay"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink5XRRayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %3, align 8
  store %"class.blink::TransformationMatrix"* null, %"class.blink::TransformationMatrix"** %3, align 8
  %5 = icmp eq %"class.blink::TransformationMatrix"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  tail call void @free(i8* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5XRRayD0Ev(%"class.blink::XRRay"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink5XRRayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %3, align 8
  store %"class.blink::TransformationMatrix"* null, %"class.blink::TransformationMatrix"** %3, align 8
  %5 = icmp eq %"class.blink::TransformationMatrix"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  tail call void @free(i8* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMTypedArray"* @_ZN5blink5XRRay6matrixEv(%"class.blink::XRRay"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::TransformationMatrix", align 8
  %3 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %4, align 8
  %6 = icmp eq %"class.blink::DOMTypedArray"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %5, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to float**
  %16 = load float*, float** %15, align 8
  %17 = icmp eq float* %16, null
  br i1 %17, label %18, label %96

18:                                               ; preds = %1, %7, %13
  %19 = bitcast %"class.blink::TransformationMatrix"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %19) #5
  %20 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %2, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %20, align 8
  %21 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %2, i64 0, i32 0, i32 0, i64 0, i64 1
  %22 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %2, i64 0, i32 0, i32 0, i64 1, i64 1
  %23 = bitcast double* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #5
  store double 1.000000e+00, double* %22, align 8
  %24 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %2, i64 0, i32 0, i32 0, i64 1, i64 2
  %25 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %2, i64 0, i32 0, i32 0, i64 2, i64 2
  %26 = bitcast double* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #5
  store double 1.000000e+00, double* %25, align 8
  %27 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %2, i64 0, i32 0, i32 0, i64 2, i64 3
  %28 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %2, i64 0, i32 0, i32 0, i64 3, i64 3
  %29 = bitcast double* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #5
  store double 1.000000e+00, double* %28, align 8
  %30 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::DOMPointReadOnly"*, %"class.blink::DOMPointReadOnly"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %31, i64 0, i32 1
  %33 = bitcast double* %32 to <2 x double>*
  %34 = load <2 x double>, <2 x double>* %33, align 8
  %35 = fptrunc <2 x double> %34 to <2 x float>
  %36 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %31, i64 0, i32 3
  %37 = load double, double* %36, align 8
  %38 = fptrunc double %37 to float
  %39 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::DOMPointReadOnly"*, %"class.blink::DOMPointReadOnly"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %40, i64 0, i32 1
  %42 = load double, double* %41, align 8
  %43 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %40, i64 0, i32 2
  %44 = load double, double* %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMPointReadOnly", %"class.blink::DOMPointReadOnly"* %40, i64 0, i32 3
  %46 = load double, double* %45, align 8
  %47 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix11Translate3dEddd(%"class.blink::TransformationMatrix"* nonnull %2, double %42, double %44, double %46) #5
  %48 = fmul float %38, 0.000000e+00
  %49 = extractelement <2 x float> %35, i32 1
  %50 = fadd float %48, %49
  %51 = extractelement <2 x float> %35, i32 0
  %52 = fsub float -0.000000e+00, %51
  %53 = fsub float %52, %48
  %54 = fmul <2 x float> %35, zeroinitializer
  %55 = extractelement <2 x float> %54, i32 0
  %56 = extractelement <2 x float> %54, i32 1
  %57 = fsub float %56, %55
  %58 = fadd float %55, %56
  %59 = fsub float %58, %38
  %60 = fpext float %59 to double
  %61 = fcmp ogt double %60, 9.999000e-01
  br i1 %61, label %74, label %62

62:                                               ; preds = %18
  %63 = fcmp olt double %60, -9.999000e-01
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8Rotate3dEdddd(%"class.blink::TransformationMatrix"* nonnull %2, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, double 1.800000e+02) #5
  br label %74

66:                                               ; preds = %62
  %67 = fpext float %50 to double
  %68 = fpext float %53 to double
  %69 = fpext float %57 to double
  %70 = call float @acosf(float %59) #5
  %71 = fmul float %70, 0x404CA5DC00000000
  %72 = fpext float %71 to double
  %73 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8Rotate3dEdddd(%"class.blink::TransformationMatrix"* nonnull %2, double %67, double %68, double %69, double %72) #5
  br label %74

74:                                               ; preds = %64, %66, %18
  %75 = call %"class.blink::DOMTypedArray"* @_ZN5blink37transformationMatrixToDOMFloat32ArrayERKNS_20TransformationMatrixE(%"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %2) #5
  %76 = ptrtoint %"class.blink::DOMTypedArray"* %75 to i64
  %77 = bitcast %"class.blink::Member.0"* %3 to i64*
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %74
  %81 = bitcast %"class.blink::DOMTypedArray"* %75 to i8*
  %82 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #5
  br label %83

83:                                               ; preds = %74, %80
  %84 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 4
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %85, align 8
  %87 = icmp eq %"class.blink::TransformationMatrix"* %86, null
  br i1 %87, label %88, label %92

88:                                               ; preds = %83
  %89 = call noalias i8* @malloc(i64 128) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %19, i64 128, i1 false) #5
  %90 = ptrtoint i8* %89 to i64
  %91 = bitcast %"class.std::__1::unique_ptr"* %84 to i64*
  store i64 %90, i64* %91, align 8
  br label %94

92:                                               ; preds = %83
  %93 = bitcast %"class.blink::TransformationMatrix"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* nonnull align 8 %19, i64 128, i1 false) #5
  br label %94

94:                                               ; preds = %92, %88
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %19) #5
  %95 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %4, align 8
  br label %96

96:                                               ; preds = %13, %94
  %97 = phi %"class.blink::DOMTypedArray"* [ %5, %13 ], [ %95, %94 ]
  ret %"class.blink::DOMTypedArray"* %97
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix11Translate3dEddd(%"class.blink::TransformationMatrix"*, double, double, double) local_unnamed_addr #1

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8Rotate3dEdddd(%"class.blink::TransformationMatrix"*, double, double, double, double) local_unnamed_addr #1

declare %"class.blink::DOMTypedArray"* @_ZN5blink37transformationMatrixToDOMFloat32ArrayERKNS_20TransformationMatrixE(%"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5XRRay9RawMatrixEv(%"class.blink::TransformationMatrix"* noalias nocapture sret, %"class.blink::XRRay"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::DOMTypedArray"* @_ZN5blink5XRRay6matrixEv(%"class.blink::XRRay"* %1)
  %4 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::TransformationMatrix"** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.blink::TransformationMatrix"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %6, i64 128, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5XRRay5TraceEPNS_7VisitorE(%"class.blink::XRRay"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16DOMPointReadOnlyEE5TraceEPNS_7VisitorEPKv) #5
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16DOMPointReadOnlyEE5TraceEPNS_7VisitorEPKv) #5
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 3
  %26 = bitcast %"class.blink::Member.0"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEE5TraceEPNS_7VisitorEPKv) #5
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::XRRay", %"class.blink::XRRay"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %36, %"class.blink::Visitor"* %1) #5
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink5XRRay18GetWrapperTypeInfoEv(%"class.blink::XRRay"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink5XRRay18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare float @acosf(float) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #5
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #5
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #5
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #5
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #5
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #5
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %40, i8* %41) #5
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #5
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #5
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #5
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #5
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #5
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16DOMPointReadOnlyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv) #5
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
