; ModuleID = '../../media/capture/video/video_capture_feedback.cc'
source_filename = "../../media/capture/video/video_capture_feedback.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.media::VideoCaptureFeedback" = type { double, float, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Size"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [52 x i8] c"../../media/capture/video/video_capture_feedback.cc\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"Consumer mapped sizes count exceeds \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN5media20VideoCaptureFeedbackC1Ev = hidden unnamed_addr alias void (%"struct.media::VideoCaptureFeedback"*), void (%"struct.media::VideoCaptureFeedback"*)* @_ZN5media20VideoCaptureFeedbackC2Ev
@_ZN5media20VideoCaptureFeedbackC1ERKS0_ = hidden unnamed_addr alias void (%"struct.media::VideoCaptureFeedback"*, %"struct.media::VideoCaptureFeedback"*), void (%"struct.media::VideoCaptureFeedback"*, %"struct.media::VideoCaptureFeedback"*)* @_ZN5media20VideoCaptureFeedbackC2ERKS0_
@_ZN5media20VideoCaptureFeedbackC1Edfi = hidden unnamed_addr alias void (%"struct.media::VideoCaptureFeedback"*, double, float, i32), void (%"struct.media::VideoCaptureFeedback"*, double, float, i32)* @_ZN5media20VideoCaptureFeedbackC2Edfi
@_ZN5media20VideoCaptureFeedbackD1Ev = hidden unnamed_addr alias void (%"struct.media::VideoCaptureFeedback"*), void (%"struct.media::VideoCaptureFeedback"*)* @_ZN5media20VideoCaptureFeedbackD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media20VideoCaptureFeedbackC2Ev(%"struct.media::VideoCaptureFeedback"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 0
  store double -1.000000e+00, double* %2, align 8
  %3 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 1
  store float 0x7FF0000000000000, float* %3, align 8
  %4 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 2
  store i32 2147483647, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 3
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media20VideoCaptureFeedbackC2ERKS0_(%"struct.media::VideoCaptureFeedback"*, %"struct.media::VideoCaptureFeedback"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.media::VideoCaptureFeedback"* %0 to i8*
  %4 = bitcast %"struct.media::VideoCaptureFeedback"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 17, i1 false)
  %5 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %1, i64 0, i32 4
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %1, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast %"class.gfx::Size"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = icmp ugt i64 %14, 2305843009213693951
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #13
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #14
  %22 = bitcast i8* %21 to %"class.gfx::Size"*
  %23 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4, i32 0, i32 1
  %24 = bitcast %"class.gfx::Size"** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %22, i64 %14
  %27 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Size"* %26, %"class.gfx::Size"** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %29 = load %"class.gfx::Size"*, %"class.gfx::Size"** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast %"class.gfx::Size"** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint %"class.gfx::Size"* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 3
  %38 = bitcast %"class.gfx::Size"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %38, i64 %34, i1 false) #12
  %39 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %22, i64 %37
  %40 = ptrtoint %"class.gfx::Size"* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %2, %41
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media20VideoCaptureFeedbackC2Edfi(%"struct.media::VideoCaptureFeedback"* nocapture, double, float, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 0
  store double %1, double* %5, align 8
  %6 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 1
  store float %2, float* %6, align 8
  %7 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 2
  store i32 %3, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 3
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4
  %10 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media20VideoCaptureFeedbackD2Ev(%"struct.media::VideoCaptureFeedback"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.gfx::Size"*, %"class.gfx::Size"** %2, align 8
  %4 = icmp eq %"class.gfx::Size"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.gfx::Size"* %3 to i64
  %7 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"class.gfx::Size"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.gfx::Size"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media20VideoCaptureFeedback7CombineERKS0_(%"struct.media::VideoCaptureFeedback"*, %"struct.media::VideoCaptureFeedback"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %1, i64 0, i32 0
  %5 = load double, double* %4, align 8
  %6 = fcmp oge double %5, 0.000000e+00
  %7 = tail call double @llvm.fabs.f64(double %5) #15
  %8 = fcmp one double %7, 0x7FF0000000000000
  %9 = and i1 %6, %8
  br i1 %9, label %10, label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 0
  %12 = load double, double* %11, align 8
  %13 = tail call double @llvm.fabs.f64(double %12) #15
  %14 = fcmp ueq double %13, 0x7FF0000000000000
  %15 = fcmp olt double %12, %5
  %16 = or i1 %15, %14
  br i1 %16, label %17, label %19

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 0
  store double %5, double* %18, align 8
  br label %19

19:                                               ; preds = %10, %2, %17
  %20 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %1, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 1
  %27 = icmp sgt i32 %25, %21
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %23
  store i32 %21, i32* %24, align 4
  br label %30

30:                                               ; preds = %23, %29, %19
  %31 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %1, i64 0, i32 1
  %32 = load float, float* %31, align 8
  %33 = fcmp ult float %32, 0.000000e+00
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 1
  %36 = load float, float* %35, align 8
  %37 = fcmp olt float %36, 0.000000e+00
  %38 = fcmp ogt float %36, %32
  %39 = or i1 %37, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %34
  store float %32, float* %35, align 8
  br label %41

41:                                               ; preds = %34, %30, %40
  %42 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %1, i64 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 3
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = or i8 %45, %43
  store i8 %46, i8* %44, align 8
  %47 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %1, i64 0, i32 4, i32 0, i32 0
  %48 = load %"class.gfx::Size"*, %"class.gfx::Size"** %47, align 8
  %49 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %1, i64 0, i32 4, i32 0, i32 1
  %50 = load %"class.gfx::Size"*, %"class.gfx::Size"** %49, align 8
  %51 = icmp eq %"class.gfx::Size"* %48, %50
  br i1 %51, label %159, label %52

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %53, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4, i32 0, i32 1
  %56 = bitcast %"class.gfx::Size"** %55 to i64*
  %57 = bitcast %"class.std::__1::vector"* %53 to i64*
  %58 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"class.gfx::Size"** %58 to i64*
  br label %60

60:                                               ; preds = %52, %156
  %61 = phi %"class.gfx::Size"* [ %48, %52 ], [ %157, %156 ]
  %62 = load %"class.gfx::Size"*, %"class.gfx::Size"** %54, align 8
  %63 = load %"class.gfx::Size"*, %"class.gfx::Size"** %55, align 8
  %64 = icmp eq %"class.gfx::Size"* %62, %63
  %65 = ptrtoint %"class.gfx::Size"* %63 to i64
  %66 = ptrtoint %"class.gfx::Size"* %62 to i64
  br i1 %64, label %84, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %61, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  br label %72

72:                                               ; preds = %81, %67
  %73 = phi %"class.gfx::Size"* [ %62, %67 ], [ %82, %81 ]
  %74 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %69
  br i1 %76, label %77, label %81

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %73, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, %71
  br i1 %80, label %84, label %81

81:                                               ; preds = %77, %72
  %82 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %73, i64 1
  %83 = icmp eq %"class.gfx::Size"* %82, %63
  br i1 %83, label %87, label %72

84:                                               ; preds = %77, %60
  %85 = phi %"class.gfx::Size"* [ %62, %60 ], [ %73, %77 ]
  %86 = icmp eq %"class.gfx::Size"* %85, %63
  br i1 %86, label %87, label %156

87:                                               ; preds = %81, %84
  %88 = sub i64 %65, %66
  %89 = ashr exact i64 %88, 3
  %90 = icmp ugt i64 %89, 5
  br i1 %90, label %91, label %99

91:                                               ; preds = %87
  %92 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #12
  br i1 %92, label %93, label %159

93:                                               ; preds = %91
  %94 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %94) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 72, i32 1) #12
  %95 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %96 = bitcast %"class.std::__1::basic_ostringstream"* %95 to %"class.std::__1::basic_ostream"*
  %97 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %96, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i64 36) #12
  %98 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %97, i64 6) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %94) #12
  br label %159

99:                                               ; preds = %87
  %100 = load %"class.gfx::Size"*, %"class.gfx::Size"** %58, align 8
  %101 = icmp eq %"class.gfx::Size"* %63, %100
  br i1 %101, label %108, label %102

102:                                              ; preds = %99
  %103 = bitcast %"class.gfx::Size"* %61 to i64*
  %104 = bitcast %"class.gfx::Size"* %63 to i64*
  %105 = load i64, i64* %103, align 4
  store i64 %105, i64* %104, align 4
  %106 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %63, i64 1
  %107 = ptrtoint %"class.gfx::Size"* %106 to i64
  store i64 %107, i64* %56, align 8
  br label %156

108:                                              ; preds = %99
  %109 = ptrtoint %"class.gfx::Size"* %100 to i64
  %110 = add nuw nsw i64 %89, 1
  %111 = sub i64 %109, %66
  %112 = ashr exact i64 %111, 3
  %113 = icmp ult i64 %112, 1152921504606846975
  br i1 %113, label %114, label %122

114:                                              ; preds = %108
  %115 = ashr exact i64 %111, 2
  %116 = icmp ult i64 %115, %110
  %117 = select i1 %116, i64 %110, i64 %115
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %127, label %119

119:                                              ; preds = %114
  %120 = icmp ugt i64 %117, 2305843009213693951
  br i1 %120, label %121, label %122

121:                                              ; preds = %119
  tail call void @abort() #13
  unreachable

122:                                              ; preds = %119, %108
  %123 = phi i64 [ %117, %119 ], [ 2305843009213693951, %108 ]
  %124 = shl i64 %123, 3
  %125 = tail call i8* @_Znwm(i64 %124) #14
  %126 = bitcast i8* %125 to %"class.gfx::Size"*
  br label %127

127:                                              ; preds = %122, %114
  %128 = phi i64 [ %123, %122 ], [ 0, %114 ]
  %129 = phi %"class.gfx::Size"* [ %126, %122 ], [ null, %114 ]
  %130 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %129, i64 %89
  %131 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %129, i64 %128
  %132 = ptrtoint %"class.gfx::Size"* %131 to i64
  %133 = bitcast %"class.gfx::Size"* %61 to i64*
  %134 = bitcast %"class.gfx::Size"* %130 to i64*
  %135 = load i64, i64* %133, align 4
  store i64 %135, i64* %134, align 4
  %136 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %130, i64 1
  %137 = ptrtoint %"class.gfx::Size"* %136 to i64
  %138 = load %"class.gfx::Size"*, %"class.gfx::Size"** %54, align 8
  %139 = load i64, i64* %56, align 8
  %140 = ptrtoint %"class.gfx::Size"* %138 to i64
  %141 = sub i64 %139, %140
  %142 = ashr exact i64 %141, 3
  %143 = sub nsw i64 0, %142
  %144 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %130, i64 %143
  %145 = ptrtoint %"class.gfx::Size"* %144 to i64
  %146 = icmp sgt i64 %141, 0
  br i1 %146, label %147, label %151

147:                                              ; preds = %127
  %148 = bitcast %"class.gfx::Size"* %144 to i8*
  %149 = bitcast %"class.gfx::Size"* %138 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %141, i1 false) #12
  %150 = load %"class.gfx::Size"*, %"class.gfx::Size"** %54, align 8
  br label %151

151:                                              ; preds = %147, %127
  %152 = phi %"class.gfx::Size"* [ %138, %127 ], [ %150, %147 ]
  store i64 %145, i64* %57, align 8
  store i64 %137, i64* %56, align 8
  store i64 %132, i64* %59, align 8
  %153 = icmp eq %"class.gfx::Size"* %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %151
  %155 = bitcast %"class.gfx::Size"* %152 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %84, %102, %151, %154
  %157 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %61, i64 1
  %158 = icmp eq %"class.gfx::Size"* %157, %50
  br i1 %158, label %159, label %60

159:                                              ; preds = %156, %41, %91, %93
  %160 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4, i32 0, i32 0
  %161 = load %"class.gfx::Size"*, %"class.gfx::Size"** %160, align 8
  %162 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4, i32 0, i32 1
  %163 = load %"class.gfx::Size"*, %"class.gfx::Size"** %162, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEvT0_SD_T_"(%"class.gfx::Size"* %161, %"class.gfx::Size"* %163) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5media20VideoCaptureFeedback5EmptyEv(%"struct.media::VideoCaptureFeedback"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 1
  %3 = load float, float* %2, align 8
  %4 = tail call float @llvm.fabs.f32(float %3) #15
  %5 = fcmp ueq float %4, 0x7FF0000000000000
  br i1 %5, label %6, label %24

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 2147483647
  br i1 %9, label %10, label %24

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 0
  %12 = load double, double* %11, align 8
  %13 = fcmp olt double %12, 0.000000e+00
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4, i32 0, i32 0
  %20 = load %"class.gfx::Size"*, %"class.gfx::Size"** %19, align 8
  %21 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4, i32 0, i32 1
  %22 = load %"class.gfx::Size"*, %"class.gfx::Size"** %21, align 8
  %23 = icmp eq %"class.gfx::Size"* %20, %22
  br label %24

24:                                               ; preds = %1, %14, %18, %10, %6
  %25 = phi i1 [ false, %14 ], [ false, %10 ], [ false, %6 ], [ false, %1 ], [ %23, %18 ]
  ret i1 %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(48) %"struct.media::VideoCaptureFeedback"* @_ZN5media20VideoCaptureFeedback15WithUtilizationEf(%"struct.media::VideoCaptureFeedback"* returned, float) local_unnamed_addr #5 align 2 {
  %3 = fpext float %1 to double
  %4 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 0
  store double %3, double* %4, align 8
  ret %"struct.media::VideoCaptureFeedback"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(48) %"struct.media::VideoCaptureFeedback"* @_ZN5media20VideoCaptureFeedback16WithMaxFramerateEf(%"struct.media::VideoCaptureFeedback"* returned, float) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 1
  store float %1, float* %3, align 8
  ret %"struct.media::VideoCaptureFeedback"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(48) %"struct.media::VideoCaptureFeedback"* @_ZN5media20VideoCaptureFeedback13WithMaxPixelsEi(%"struct.media::VideoCaptureFeedback"* returned, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 2
  store i32 %1, i32* %3, align 4
  ret %"struct.media::VideoCaptureFeedback"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(48) %"struct.media::VideoCaptureFeedback"* @_ZN5media20VideoCaptureFeedback13RequireMappedEb(%"struct.media::VideoCaptureFeedback"* returned, i1 zeroext) local_unnamed_addr #5 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 3
  store i8 %3, i8* %4, align 8
  ret %"struct.media::VideoCaptureFeedback"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"struct.media::VideoCaptureFeedback"* @_ZN5media20VideoCaptureFeedback15WithMappedSizesENSt3__16vectorIN3gfx4SizeENS1_9allocatorIS4_EEEE(%"struct.media::VideoCaptureFeedback"* returned, %"class.std::__1::vector"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.gfx::Size"*, %"class.gfx::Size"** %4, align 8
  %6 = icmp eq %"class.gfx::Size"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = ptrtoint %"class.gfx::Size"* %5 to i64
  %9 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = bitcast %"class.gfx::Size"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %"class.gfx::Size"* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  %12 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast %"class.std::__1::vector"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %3 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %18 = bitcast %"class.gfx::Size"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4, i32 0, i32 1
  %21 = bitcast %"class.gfx::Size"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.gfx::Size"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.media::VideoCaptureFeedback", %"struct.media::VideoCaptureFeedback"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"class.gfx::Size"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #12
  tail call fastcc void @"_ZNSt3__16__sortIRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEvT0_SD_T_"(%"class.gfx::Size"* null, %"class.gfx::Size"* null) #12
  ret %"struct.media::VideoCaptureFeedback"* %0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEvT0_SD_T_"(%"class.gfx::Size"*, %"class.gfx::Size"*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %399, %2
  %4 = phi %"class.gfx::Size"* [ %1, %2 ], [ %377, %399 ]
  %5 = phi %"class.gfx::Size"* [ %0, %2 ], [ %20, %399 ]
  %6 = ptrtoint %"class.gfx::Size"* %4 to i64
  %7 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 -1
  %8 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 -1, i32 1
  %9 = bitcast %"class.gfx::Size"* %7 to i64*
  %10 = bitcast %"class.gfx::Size"* %7 to i64*
  %11 = bitcast %"class.gfx::Size"* %7 to i64*
  %12 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 -1, i32 1
  %13 = bitcast %"class.gfx::Size"* %7 to i64*
  %14 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 -1, i32 1
  %15 = bitcast %"class.gfx::Size"* %7 to i64*
  %16 = ptrtoint %"class.gfx::Size"* %4 to i64
  br label %17

17:                                               ; preds = %408, %3
  %18 = phi %"class.gfx::Size"* [ %5, %3 ], [ %409, %408 ]
  br label %19

19:                                               ; preds = %322, %17
  %20 = phi %"class.gfx::Size"* [ %18, %17 ], [ %311, %322 ]
  %21 = ptrtoint %"class.gfx::Size"* %20 to i64
  %22 = sub i64 %6, %21
  %23 = ashr exact i64 %22, 3
  switch i64 %23, label %120 [
    i64 0, label %412
    i64 1, label %412
    i64 2, label %24
    i64 3, label %36
    i64 4, label %77
    i64 5, label %82
  ]

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 -1, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %26, %28
  br i1 %29, label %30, label %412

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 -1
  %32 = bitcast %"class.gfx::Size"* %20 to i64*
  %33 = load i64, i64* %32, align 4
  %34 = bitcast %"class.gfx::Size"* %31 to i64*
  %35 = load i64, i64* %34, align 4
  store i64 %35, i64* %32, align 4
  store i64 %33, i64* %34, align 4
  br label %412

36:                                               ; preds = %19
  %37 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 1
  %38 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 -1
  %39 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 1, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %40, %42
  %44 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 -1, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, %40
  br i1 %43, label %61, label %47

47:                                               ; preds = %36
  br i1 %46, label %48, label %412

48:                                               ; preds = %47
  %49 = bitcast %"class.gfx::Size"* %37 to i64*
  %50 = load i64, i64* %49, align 4
  %51 = bitcast %"class.gfx::Size"* %38 to i64*
  %52 = load i64, i64* %51, align 4
  store i64 %52, i64* %49, align 4
  store i64 %50, i64* %51, align 4
  %53 = load i32, i32* %39, align 4
  %54 = load i32, i32* %41, align 4
  %55 = icmp sgt i32 %53, %54
  br i1 %55, label %56, label %412

56:                                               ; preds = %48
  %57 = bitcast %"class.gfx::Size"* %20 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 4
  %59 = shufflevector <2 x i64> %58, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %60 = bitcast %"class.gfx::Size"* %20 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %60, align 4
  br label %412

61:                                               ; preds = %36
  %62 = bitcast %"class.gfx::Size"* %20 to i64*
  %63 = load i64, i64* %62, align 4
  br i1 %46, label %64, label %67

64:                                               ; preds = %61
  %65 = bitcast %"class.gfx::Size"* %38 to i64*
  %66 = load i64, i64* %65, align 4
  store i64 %66, i64* %62, align 4
  store i64 %63, i64* %65, align 4
  br label %412

67:                                               ; preds = %61
  %68 = bitcast %"class.gfx::Size"* %37 to i64*
  %69 = load i64, i64* %68, align 4
  store i64 %69, i64* %62, align 4
  store i64 %63, i64* %68, align 4
  %70 = load i32, i32* %44, align 4
  %71 = lshr i64 %63, 32
  %72 = trunc i64 %71 to i32
  %73 = icmp sgt i32 %70, %72
  br i1 %73, label %74, label %412

74:                                               ; preds = %67
  %75 = bitcast %"class.gfx::Size"* %38 to i64*
  %76 = load i64, i64* %75, align 4
  store i64 %76, i64* %68, align 4
  store i64 %63, i64* %75, align 4
  br label %412

77:                                               ; preds = %19
  %78 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 1
  %79 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 2
  %80 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 -1
  %81 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEjT0_SD_SD_SD_T_"(%"class.gfx::Size"* %20, %"class.gfx::Size"* %78, %"class.gfx::Size"* %79, %"class.gfx::Size"* %80)
  br label %412

82:                                               ; preds = %19
  %83 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 1
  %84 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 2
  %85 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 3
  %86 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEjT0_SD_SD_SD_T_"(%"class.gfx::Size"* %20, %"class.gfx::Size"* %83, %"class.gfx::Size"* %84, %"class.gfx::Size"* %85) #12
  %87 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 -1, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 3, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp sgt i32 %88, %90
  br i1 %91, label %92, label %412

92:                                               ; preds = %82
  %93 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 -1
  %94 = bitcast %"class.gfx::Size"* %85 to i64*
  %95 = load i64, i64* %94, align 4
  %96 = bitcast %"class.gfx::Size"* %93 to i64*
  %97 = load i64, i64* %96, align 4
  store i64 %97, i64* %94, align 4
  store i64 %95, i64* %96, align 4
  %98 = load i32, i32* %89, align 4
  %99 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 2, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = icmp sgt i32 %98, %100
  br i1 %101, label %102, label %412

102:                                              ; preds = %92
  %103 = bitcast %"class.gfx::Size"* %84 to i64*
  %104 = load i64, i64* %103, align 4
  %105 = load i64, i64* %94, align 4
  store i64 %105, i64* %103, align 4
  store i64 %104, i64* %94, align 4
  %106 = lshr i64 %105, 32
  %107 = trunc i64 %106 to i32
  %108 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 1, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = icmp slt i32 %109, %107
  br i1 %110, label %111, label %412

111:                                              ; preds = %102
  %112 = bitcast %"class.gfx::Size"* %83 to i64*
  %113 = load i64, i64* %112, align 4
  store i64 %105, i64* %112, align 4
  store i64 %113, i64* %103, align 4
  %114 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = icmp slt i32 %115, %107
  br i1 %116, label %117, label %412

117:                                              ; preds = %111
  %118 = bitcast %"class.gfx::Size"* %20 to i64*
  %119 = load i64, i64* %118, align 4
  store i64 %105, i64* %118, align 4
  store i64 %119, i64* %112, align 4
  br label %412

120:                                              ; preds = %19
  %121 = icmp slt i64 %22, 248
  br i1 %121, label %122, label %194

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 2
  %124 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 1
  %125 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 1, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp sgt i32 %126, %128
  %130 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 2, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = icmp sgt i32 %131, %126
  br i1 %129, label %145, label %133

133:                                              ; preds = %122
  br i1 %132, label %134, label %160

134:                                              ; preds = %133
  %135 = bitcast %"class.gfx::Size"* %124 to i64*
  %136 = load i64, i64* %135, align 4
  %137 = bitcast %"class.gfx::Size"* %123 to i64*
  %138 = load i64, i64* %137, align 4
  store i64 %138, i64* %135, align 4
  store i64 %136, i64* %137, align 4
  %139 = lshr i64 %138, 32
  %140 = trunc i64 %139 to i32
  %141 = icmp slt i32 %128, %140
  br i1 %141, label %142, label %160

142:                                              ; preds = %134
  %143 = bitcast %"class.gfx::Size"* %20 to i64*
  %144 = load i64, i64* %143, align 4
  store i64 %138, i64* %143, align 4
  store i64 %144, i64* %135, align 4
  br label %160

145:                                              ; preds = %122
  %146 = bitcast %"class.gfx::Size"* %20 to i64*
  %147 = load i64, i64* %146, align 4
  br i1 %132, label %148, label %151

148:                                              ; preds = %145
  %149 = bitcast %"class.gfx::Size"* %123 to i64*
  %150 = load i64, i64* %149, align 4
  store i64 %150, i64* %146, align 4
  store i64 %147, i64* %149, align 4
  br label %160

151:                                              ; preds = %145
  %152 = bitcast %"class.gfx::Size"* %124 to i64*
  %153 = load i64, i64* %152, align 4
  store i64 %153, i64* %146, align 4
  store i64 %147, i64* %152, align 4
  %154 = lshr i64 %147, 32
  %155 = trunc i64 %154 to i32
  %156 = icmp sgt i32 %131, %155
  br i1 %156, label %157, label %160

157:                                              ; preds = %151
  %158 = bitcast %"class.gfx::Size"* %123 to i64*
  %159 = load i64, i64* %158, align 4
  store i64 %159, i64* %152, align 4
  store i64 %147, i64* %158, align 4
  br label %160

160:                                              ; preds = %157, %151, %148, %142, %134, %133
  %161 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 3
  %162 = icmp eq %"class.gfx::Size"* %161, %4
  br i1 %162, label %412, label %163

163:                                              ; preds = %160, %191
  %164 = phi %"class.gfx::Size"* [ %192, %191 ], [ %161, %160 ]
  %165 = phi %"class.gfx::Size"* [ %164, %191 ], [ %123, %160 ]
  %166 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %164, i64 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %165, i64 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = icmp sgt i32 %167, %169
  br i1 %170, label %171, label %191

171:                                              ; preds = %163
  %172 = bitcast %"class.gfx::Size"* %164 to i64*
  %173 = load i64, i64* %172, align 4
  %174 = lshr i64 %173, 32
  %175 = trunc i64 %174 to i32
  br label %176

176:                                              ; preds = %183, %171
  %177 = phi %"class.gfx::Size"* [ %164, %171 ], [ %178, %183 ]
  %178 = phi %"class.gfx::Size"* [ %165, %171 ], [ %184, %183 ]
  %179 = bitcast %"class.gfx::Size"* %178 to i64*
  %180 = bitcast %"class.gfx::Size"* %177 to i64*
  %181 = load i64, i64* %179, align 4
  store i64 %181, i64* %180, align 4
  %182 = icmp eq %"class.gfx::Size"* %178, %20
  br i1 %182, label %188, label %183

183:                                              ; preds = %176
  %184 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %178, i64 -1
  %185 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %178, i64 -1, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = icmp slt i32 %186, %175
  br i1 %187, label %176, label %188

188:                                              ; preds = %176, %183
  %189 = phi %"class.gfx::Size"* [ %178, %183 ], [ %20, %176 ]
  %190 = bitcast %"class.gfx::Size"* %189 to i64*
  store i64 %173, i64* %190, align 4
  br label %191

191:                                              ; preds = %188, %163
  %192 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %164, i64 1
  %193 = icmp eq %"class.gfx::Size"* %192, %4
  br i1 %193, label %412, label %163

194:                                              ; preds = %120
  %195 = icmp sgt i64 %22, 7992
  %196 = sdiv i64 %23, 2
  %197 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 %196
  br i1 %195, label %198, label %239

198:                                              ; preds = %194
  %199 = sdiv i64 %23, 4
  %200 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 %199
  %201 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %197, i64 %199
  %202 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEjT0_SD_SD_SD_T_"(%"class.gfx::Size"* %20, %"class.gfx::Size"* %200, %"class.gfx::Size"* %197, %"class.gfx::Size"* %201) #12
  %203 = load i32, i32* %12, align 4
  %204 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %201, i64 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = icmp sgt i32 %203, %205
  br i1 %206, label %207, label %273

207:                                              ; preds = %198
  %208 = bitcast %"class.gfx::Size"* %201 to i64*
  %209 = load i64, i64* %208, align 4
  %210 = load i64, i64* %13, align 4
  store i64 %210, i64* %208, align 4
  store i64 %209, i64* %13, align 4
  %211 = add i32 %202, 1
  %212 = load i32, i32* %204, align 4
  %213 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 %196, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = icmp sgt i32 %212, %214
  br i1 %215, label %216, label %273

216:                                              ; preds = %207
  %217 = bitcast %"class.gfx::Size"* %197 to i64*
  %218 = load i64, i64* %217, align 4
  %219 = load i64, i64* %208, align 4
  store i64 %219, i64* %217, align 4
  store i64 %218, i64* %208, align 4
  %220 = add i32 %202, 2
  %221 = load i32, i32* %213, align 4
  %222 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 %199, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp sgt i32 %221, %223
  br i1 %224, label %225, label %273

225:                                              ; preds = %216
  %226 = bitcast %"class.gfx::Size"* %200 to i64*
  %227 = load i64, i64* %226, align 4
  %228 = load i64, i64* %217, align 4
  store i64 %228, i64* %226, align 4
  store i64 %227, i64* %217, align 4
  %229 = add i32 %202, 3
  %230 = load i32, i32* %222, align 4
  %231 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = icmp sgt i32 %230, %232
  br i1 %233, label %234, label %273

234:                                              ; preds = %225
  %235 = bitcast %"class.gfx::Size"* %20 to i64*
  %236 = load i64, i64* %235, align 4
  %237 = load i64, i64* %226, align 4
  store i64 %237, i64* %235, align 4
  store i64 %236, i64* %226, align 4
  %238 = add i32 %202, 4
  br label %273

239:                                              ; preds = %194
  %240 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 %196, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 0, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = icmp sgt i32 %241, %243
  %245 = load i32, i32* %8, align 4
  %246 = icmp sgt i32 %245, %241
  br i1 %244, label %259, label %247

247:                                              ; preds = %239
  br i1 %246, label %248, label %273

248:                                              ; preds = %247
  %249 = bitcast %"class.gfx::Size"* %197 to i64*
  %250 = load i64, i64* %249, align 4
  %251 = load i64, i64* %9, align 4
  store i64 %251, i64* %249, align 4
  store i64 %250, i64* %9, align 4
  %252 = load i32, i32* %240, align 4
  %253 = load i32, i32* %242, align 4
  %254 = icmp sgt i32 %252, %253
  br i1 %254, label %255, label %273

255:                                              ; preds = %248
  %256 = bitcast %"class.gfx::Size"* %20 to i64*
  %257 = load i64, i64* %256, align 4
  %258 = load i64, i64* %249, align 4
  store i64 %258, i64* %256, align 4
  store i64 %257, i64* %249, align 4
  br label %273

259:                                              ; preds = %239
  %260 = bitcast %"class.gfx::Size"* %20 to i64*
  %261 = load i64, i64* %260, align 4
  br i1 %246, label %262, label %264

262:                                              ; preds = %259
  %263 = load i64, i64* %11, align 4
  store i64 %263, i64* %260, align 4
  store i64 %261, i64* %11, align 4
  br label %273

264:                                              ; preds = %259
  %265 = bitcast %"class.gfx::Size"* %197 to i64*
  %266 = load i64, i64* %265, align 4
  store i64 %266, i64* %260, align 4
  store i64 %261, i64* %265, align 4
  %267 = load i32, i32* %8, align 4
  %268 = lshr i64 %261, 32
  %269 = trunc i64 %268 to i32
  %270 = icmp sgt i32 %267, %269
  br i1 %270, label %271, label %273

271:                                              ; preds = %264
  %272 = load i64, i64* %10, align 4
  store i64 %272, i64* %265, align 4
  store i64 %261, i64* %10, align 4
  br label %273

273:                                              ; preds = %271, %264, %262, %255, %248, %247, %234, %225, %216, %207, %198
  %274 = phi i32 [ %238, %234 ], [ %229, %225 ], [ %220, %216 ], [ %211, %207 ], [ %202, %198 ], [ 1, %262 ], [ 0, %247 ], [ 2, %255 ], [ 1, %248 ], [ 2, %271 ], [ 1, %264 ]
  %275 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 0, i32 1
  %276 = load i32, i32* %275, align 4
  %277 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 %196, i32 1
  %278 = load i32, i32* %277, align 4
  %279 = icmp sgt i32 %276, %278
  br i1 %279, label %339, label %280

280:                                              ; preds = %273, %329
  %281 = phi %"class.gfx::Size"* [ %282, %329 ], [ %7, %273 ]
  %282 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %281, i64 -1
  %283 = icmp eq %"class.gfx::Size"* %20, %282
  br i1 %283, label %284, label %329

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 1
  %286 = load i32, i32* %14, align 4
  %287 = icmp sgt i32 %276, %286
  br i1 %287, label %303, label %288

288:                                              ; preds = %284
  %289 = icmp eq %"class.gfx::Size"* %285, %7
  br i1 %289, label %412, label %290

290:                                              ; preds = %288, %300
  %291 = phi %"class.gfx::Size"* [ %301, %300 ], [ %285, %288 ]
  %292 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %291, i64 0, i32 1
  %293 = load i32, i32* %292, align 4
  %294 = icmp sgt i32 %276, %293
  br i1 %294, label %295, label %300

295:                                              ; preds = %290
  %296 = bitcast %"class.gfx::Size"* %291 to i64*
  %297 = load i64, i64* %296, align 4
  %298 = load i64, i64* %15, align 4
  store i64 %298, i64* %296, align 4
  store i64 %297, i64* %15, align 4
  %299 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %291, i64 1
  br label %303

300:                                              ; preds = %290
  %301 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %291, i64 1
  %302 = icmp eq %"class.gfx::Size"* %301, %7
  br i1 %302, label %412, label %290

303:                                              ; preds = %295, %284
  %304 = phi %"class.gfx::Size"* [ %285, %284 ], [ %299, %295 ]
  %305 = icmp eq %"class.gfx::Size"* %304, %7
  br i1 %305, label %412, label %306

306:                                              ; preds = %303, %324
  %307 = phi %"class.gfx::Size"* [ %315, %324 ], [ %304, %303 ]
  %308 = phi %"class.gfx::Size"* [ %318, %324 ], [ %7, %303 ]
  %309 = load i32, i32* %275, align 4
  br label %310

310:                                              ; preds = %310, %306
  %311 = phi %"class.gfx::Size"* [ %307, %306 ], [ %315, %310 ]
  %312 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %311, i64 0, i32 1
  %313 = load i32, i32* %312, align 4
  %314 = icmp sgt i32 %309, %313
  %315 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %311, i64 1
  br i1 %314, label %316, label %310

316:                                              ; preds = %310, %316
  %317 = phi %"class.gfx::Size"* [ %318, %316 ], [ %308, %310 ]
  %318 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %317, i64 -1
  %319 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %317, i64 -1, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = icmp sgt i32 %309, %320
  br i1 %321, label %316, label %322

322:                                              ; preds = %316
  %323 = icmp ult %"class.gfx::Size"* %311, %318
  br i1 %323, label %324, label %19

324:                                              ; preds = %322
  %325 = bitcast %"class.gfx::Size"* %311 to i64*
  %326 = load i64, i64* %325, align 4
  %327 = bitcast %"class.gfx::Size"* %318 to i64*
  %328 = load i64, i64* %327, align 4
  store i64 %328, i64* %325, align 4
  store i64 %326, i64* %327, align 4
  br label %306

329:                                              ; preds = %280
  %330 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %281, i64 -1, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = icmp sgt i32 %331, %278
  br i1 %332, label %333, label %280

333:                                              ; preds = %329
  %334 = bitcast %"class.gfx::Size"* %20 to i64*
  %335 = load i64, i64* %334, align 4
  %336 = bitcast %"class.gfx::Size"* %282 to i64*
  %337 = load i64, i64* %336, align 4
  store i64 %337, i64* %334, align 4
  store i64 %335, i64* %336, align 4
  %338 = add i32 %274, 1
  br label %339

339:                                              ; preds = %273, %333
  %340 = phi i32 [ %338, %333 ], [ %274, %273 ]
  %341 = phi %"class.gfx::Size"* [ %282, %333 ], [ %7, %273 ]
  %342 = ptrtoint %"class.gfx::Size"* %20 to i64
  %343 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 1
  %344 = icmp ult %"class.gfx::Size"* %343, %341
  br i1 %344, label %345, label %374

345:                                              ; preds = %339, %366
  %346 = phi %"class.gfx::Size"* [ %373, %366 ], [ %197, %339 ]
  %347 = phi i32 [ %371, %366 ], [ %340, %339 ]
  %348 = phi %"class.gfx::Size"* [ %357, %366 ], [ %343, %339 ]
  %349 = phi %"class.gfx::Size"* [ %360, %366 ], [ %341, %339 ]
  %350 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %346, i64 0, i32 1
  %351 = load i32, i32* %350, align 4
  br label %352

352:                                              ; preds = %352, %345
  %353 = phi %"class.gfx::Size"* [ %348, %345 ], [ %357, %352 ]
  %354 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %353, i64 0, i32 1
  %355 = load i32, i32* %354, align 4
  %356 = icmp sgt i32 %355, %351
  %357 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %353, i64 1
  br i1 %356, label %352, label %358

358:                                              ; preds = %352, %358
  %359 = phi %"class.gfx::Size"* [ %360, %358 ], [ %349, %352 ]
  %360 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %359, i64 -1
  %361 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %359, i64 -1, i32 1
  %362 = load i32, i32* %361, align 4
  %363 = icmp sgt i32 %362, %351
  br i1 %363, label %364, label %358

364:                                              ; preds = %358
  %365 = icmp ugt %"class.gfx::Size"* %353, %360
  br i1 %365, label %374, label %366

366:                                              ; preds = %364
  %367 = bitcast %"class.gfx::Size"* %353 to i64*
  %368 = load i64, i64* %367, align 4
  %369 = bitcast %"class.gfx::Size"* %360 to i64*
  %370 = load i64, i64* %369, align 4
  store i64 %370, i64* %367, align 4
  store i64 %368, i64* %369, align 4
  %371 = add i32 %347, 1
  %372 = icmp eq %"class.gfx::Size"* %346, %353
  %373 = select i1 %372, %"class.gfx::Size"* %360, %"class.gfx::Size"* %346
  br label %345

374:                                              ; preds = %364, %339
  %375 = phi %"class.gfx::Size"* [ %197, %339 ], [ %346, %364 ]
  %376 = phi i32 [ %340, %339 ], [ %347, %364 ]
  %377 = phi %"class.gfx::Size"* [ %343, %339 ], [ %353, %364 ]
  %378 = icmp eq %"class.gfx::Size"* %377, %375
  br i1 %378, label %391, label %379

379:                                              ; preds = %374
  %380 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %375, i64 0, i32 1
  %381 = load i32, i32* %380, align 4
  %382 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %377, i64 0, i32 1
  %383 = load i32, i32* %382, align 4
  %384 = icmp sgt i32 %381, %383
  br i1 %384, label %385, label %391

385:                                              ; preds = %379
  %386 = bitcast %"class.gfx::Size"* %377 to i64*
  %387 = load i64, i64* %386, align 4
  %388 = bitcast %"class.gfx::Size"* %375 to i64*
  %389 = load i64, i64* %388, align 4
  store i64 %389, i64* %386, align 4
  store i64 %387, i64* %388, align 4
  %390 = add i32 %376, 1
  br label %391

391:                                              ; preds = %374, %385, %379
  %392 = phi i32 [ %390, %385 ], [ %376, %379 ], [ %376, %374 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %401

394:                                              ; preds = %391
  %395 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEbT0_SD_T_"(%"class.gfx::Size"* %20, %"class.gfx::Size"* %377)
  %396 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %377, i64 1
  %397 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEbT0_SD_T_"(%"class.gfx::Size"* %396, %"class.gfx::Size"* %4)
  br i1 %397, label %398, label %400

398:                                              ; preds = %394
  br i1 %395, label %412, label %399

399:                                              ; preds = %398, %410
  br label %3

400:                                              ; preds = %394
  br i1 %395, label %408, label %401

401:                                              ; preds = %400, %391
  %402 = ptrtoint %"class.gfx::Size"* %377 to i64
  %403 = sub i64 %402, %342
  %404 = sub i64 %16, %402
  %405 = icmp slt i64 %403, %404
  br i1 %405, label %406, label %410

406:                                              ; preds = %401
  tail call fastcc void @"_ZNSt3__16__sortIRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEvT0_SD_T_"(%"class.gfx::Size"* %20, %"class.gfx::Size"* %377)
  %407 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %377, i64 1
  br label %408

408:                                              ; preds = %406, %400
  %409 = phi %"class.gfx::Size"* [ %396, %400 ], [ %407, %406 ]
  br label %17

410:                                              ; preds = %401
  %411 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %377, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEvT0_SD_T_"(%"class.gfx::Size"* %411, %"class.gfx::Size"* %4)
  br label %399

412:                                              ; preds = %398, %303, %19, %19, %288, %300, %191, %160, %117, %111, %102, %92, %82, %74, %67, %64, %56, %48, %47, %24, %30, %77
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEjT0_SD_SD_SD_T_"(%"class.gfx::Size"* nocapture, %"class.gfx::Size"* nocapture, %"class.gfx::Size"* nocapture, %"class.gfx::Size"* nocapture) unnamed_addr #6 {
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %6, %8
  %10 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, %6
  br i1 %9, label %29, label %13

13:                                               ; preds = %4
  br i1 %12, label %14, label %47

14:                                               ; preds = %13
  %15 = bitcast %"class.gfx::Size"* %1 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = bitcast %"class.gfx::Size"* %2 to i64*
  %18 = load i64, i64* %17, align 4
  store i64 %18, i64* %15, align 4
  store i64 %16, i64* %17, align 4
  %19 = load i32, i32* %5, align 4
  %20 = load i32, i32* %7, align 4
  %21 = icmp sgt i32 %19, %20
  %22 = lshr i64 %16, 32
  %23 = trunc i64 %22 to i32
  br i1 %21, label %24, label %47

24:                                               ; preds = %14
  %25 = bitcast %"class.gfx::Size"* %0 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = load i64, i64* %15, align 4
  store i64 %27, i64* %25, align 4
  store i64 %26, i64* %15, align 4
  %28 = load i32, i32* %10, align 4
  br label %47

29:                                               ; preds = %4
  %30 = bitcast %"class.gfx::Size"* %0 to i64*
  %31 = load i64, i64* %30, align 4
  br i1 %12, label %32, label %37

32:                                               ; preds = %29
  %33 = bitcast %"class.gfx::Size"* %2 to i64*
  %34 = load i64, i64* %33, align 4
  store i64 %34, i64* %30, align 4
  store i64 %31, i64* %33, align 4
  %35 = lshr i64 %31, 32
  %36 = trunc i64 %35 to i32
  br label %47

37:                                               ; preds = %29
  %38 = bitcast %"class.gfx::Size"* %1 to i64*
  %39 = load i64, i64* %38, align 4
  store i64 %39, i64* %30, align 4
  store i64 %31, i64* %38, align 4
  %40 = load i32, i32* %10, align 4
  %41 = lshr i64 %31, 32
  %42 = trunc i64 %41 to i32
  %43 = icmp sgt i32 %40, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = bitcast %"class.gfx::Size"* %2 to i64*
  %46 = load i64, i64* %45, align 4
  store i64 %46, i64* %38, align 4
  store i64 %31, i64* %45, align 4
  br label %47

47:                                               ; preds = %13, %14, %24, %32, %37, %44
  %48 = phi i32 [ %36, %32 ], [ %11, %13 ], [ %28, %24 ], [ %23, %14 ], [ %42, %44 ], [ %40, %37 ]
  %49 = phi i32 [ 1, %32 ], [ 0, %13 ], [ 2, %24 ], [ 1, %14 ], [ 2, %44 ], [ 1, %37 ]
  %50 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %51, %48
  br i1 %52, label %53, label %75

53:                                               ; preds = %47
  %54 = bitcast %"class.gfx::Size"* %2 to i64*
  %55 = load i64, i64* %54, align 4
  %56 = bitcast %"class.gfx::Size"* %3 to i64*
  %57 = load i64, i64* %56, align 4
  store i64 %57, i64* %54, align 4
  store i64 %55, i64* %56, align 4
  %58 = add nuw nsw i32 %49, 1
  %59 = load i32, i32* %10, align 4
  %60 = load i32, i32* %5, align 4
  %61 = icmp sgt i32 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %53
  %63 = bitcast %"class.gfx::Size"* %1 to i64*
  %64 = load i64, i64* %63, align 4
  %65 = load i64, i64* %54, align 4
  store i64 %65, i64* %63, align 4
  store i64 %64, i64* %54, align 4
  %66 = add nuw nsw i32 %49, 2
  %67 = load i32, i32* %5, align 4
  %68 = load i32, i32* %7, align 4
  %69 = icmp sgt i32 %67, %68
  br i1 %69, label %70, label %75

70:                                               ; preds = %62
  %71 = bitcast %"class.gfx::Size"* %0 to i64*
  %72 = load i64, i64* %71, align 4
  %73 = load i64, i64* %63, align 4
  store i64 %73, i64* %71, align 4
  store i64 %72, i64* %63, align 4
  %74 = add nuw nsw i32 %49, 3
  br label %75

75:                                               ; preds = %53, %70, %62, %47
  %76 = phi i32 [ %74, %70 ], [ %66, %62 ], [ %58, %53 ], [ %49, %47 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEbT0_SD_T_"(%"class.gfx::Size"*, %"class.gfx::Size"*) unnamed_addr #0 {
  %3 = ptrtoint %"class.gfx::Size"* %1 to i64
  %4 = ptrtoint %"class.gfx::Size"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %103 [
    i64 0, label %182
    i64 1, label %182
    i64 2, label %7
    i64 3, label %19
    i64 4, label %60
    i64 5, label %65
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 -1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %9, %11
  br i1 %12, label %13, label %182

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 -1
  %15 = bitcast %"class.gfx::Size"* %0 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = bitcast %"class.gfx::Size"* %14 to i64*
  %18 = load i64, i64* %17, align 4
  store i64 %18, i64* %15, align 4
  store i64 %16, i64* %17, align 4
  br label %182

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 1
  %21 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 -1
  %22 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %23, %25
  %27 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 -1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, %23
  br i1 %26, label %44, label %30

30:                                               ; preds = %19
  br i1 %29, label %31, label %182

31:                                               ; preds = %30
  %32 = bitcast %"class.gfx::Size"* %20 to i64*
  %33 = load i64, i64* %32, align 4
  %34 = bitcast %"class.gfx::Size"* %21 to i64*
  %35 = load i64, i64* %34, align 4
  store i64 %35, i64* %32, align 4
  store i64 %33, i64* %34, align 4
  %36 = load i32, i32* %22, align 4
  %37 = load i32, i32* %24, align 4
  %38 = icmp sgt i32 %36, %37
  br i1 %38, label %39, label %182

39:                                               ; preds = %31
  %40 = bitcast %"class.gfx::Size"* %0 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 4
  %42 = shufflevector <2 x i64> %41, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %43 = bitcast %"class.gfx::Size"* %0 to <2 x i64>*
  store <2 x i64> %42, <2 x i64>* %43, align 4
  br label %182

44:                                               ; preds = %19
  %45 = bitcast %"class.gfx::Size"* %0 to i64*
  %46 = load i64, i64* %45, align 4
  br i1 %29, label %47, label %50

47:                                               ; preds = %44
  %48 = bitcast %"class.gfx::Size"* %21 to i64*
  %49 = load i64, i64* %48, align 4
  store i64 %49, i64* %45, align 4
  store i64 %46, i64* %48, align 4
  br label %182

50:                                               ; preds = %44
  %51 = bitcast %"class.gfx::Size"* %20 to i64*
  %52 = load i64, i64* %51, align 4
  store i64 %52, i64* %45, align 4
  store i64 %46, i64* %51, align 4
  %53 = load i32, i32* %27, align 4
  %54 = lshr i64 %46, 32
  %55 = trunc i64 %54 to i32
  %56 = icmp sgt i32 %53, %55
  br i1 %56, label %57, label %182

57:                                               ; preds = %50
  %58 = bitcast %"class.gfx::Size"* %21 to i64*
  %59 = load i64, i64* %58, align 4
  store i64 %59, i64* %51, align 4
  store i64 %46, i64* %58, align 4
  br label %182

60:                                               ; preds = %2
  %61 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 1
  %62 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 2
  %63 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 -1
  %64 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEjT0_SD_SD_SD_T_"(%"class.gfx::Size"* %0, %"class.gfx::Size"* %61, %"class.gfx::Size"* %62, %"class.gfx::Size"* %63)
  br label %182

65:                                               ; preds = %2
  %66 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 1
  %67 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 2
  %68 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 3
  %69 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5media12_GLOBAL__N_119SortSizesDescendingERNS_6vectorIN3gfx4SizeENS_9allocatorIS5_EEEEE3$_0PS5_EEjT0_SD_SD_SD_T_"(%"class.gfx::Size"* %0, %"class.gfx::Size"* %66, %"class.gfx::Size"* %67, %"class.gfx::Size"* %68) #12
  %70 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 -1, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 3, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %71, %73
  br i1 %74, label %75, label %182

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 -1
  %77 = bitcast %"class.gfx::Size"* %68 to i64*
  %78 = load i64, i64* %77, align 4
  %79 = bitcast %"class.gfx::Size"* %76 to i64*
  %80 = load i64, i64* %79, align 4
  store i64 %80, i64* %77, align 4
  store i64 %78, i64* %79, align 4
  %81 = load i32, i32* %72, align 4
  %82 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 2, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %81, %83
  br i1 %84, label %85, label %182

85:                                               ; preds = %75
  %86 = bitcast %"class.gfx::Size"* %67 to i64*
  %87 = load i64, i64* %86, align 4
  %88 = load i64, i64* %77, align 4
  store i64 %88, i64* %86, align 4
  store i64 %87, i64* %77, align 4
  %89 = lshr i64 %88, 32
  %90 = trunc i64 %89 to i32
  %91 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 1, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %92, %90
  br i1 %93, label %94, label %182

94:                                               ; preds = %85
  %95 = bitcast %"class.gfx::Size"* %66 to i64*
  %96 = load i64, i64* %95, align 4
  store i64 %88, i64* %95, align 4
  store i64 %96, i64* %86, align 4
  %97 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = icmp slt i32 %98, %90
  br i1 %99, label %100, label %182

100:                                              ; preds = %94
  %101 = bitcast %"class.gfx::Size"* %0 to i64*
  %102 = load i64, i64* %101, align 4
  store i64 %88, i64* %101, align 4
  store i64 %102, i64* %95, align 4
  br label %182

103:                                              ; preds = %2
  %104 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 2
  %105 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 1
  %106 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 1, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = icmp sgt i32 %107, %109
  %111 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 2, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = icmp sgt i32 %112, %107
  br i1 %110, label %126, label %114

114:                                              ; preds = %103
  br i1 %113, label %115, label %141

115:                                              ; preds = %114
  %116 = bitcast %"class.gfx::Size"* %105 to i64*
  %117 = load i64, i64* %116, align 4
  %118 = bitcast %"class.gfx::Size"* %104 to i64*
  %119 = load i64, i64* %118, align 4
  store i64 %119, i64* %116, align 4
  store i64 %117, i64* %118, align 4
  %120 = lshr i64 %119, 32
  %121 = trunc i64 %120 to i32
  %122 = icmp slt i32 %109, %121
  br i1 %122, label %123, label %141

123:                                              ; preds = %115
  %124 = bitcast %"class.gfx::Size"* %0 to i64*
  %125 = load i64, i64* %124, align 4
  store i64 %119, i64* %124, align 4
  store i64 %125, i64* %116, align 4
  br label %141

126:                                              ; preds = %103
  %127 = bitcast %"class.gfx::Size"* %0 to i64*
  %128 = load i64, i64* %127, align 4
  br i1 %113, label %129, label %132

129:                                              ; preds = %126
  %130 = bitcast %"class.gfx::Size"* %104 to i64*
  %131 = load i64, i64* %130, align 4
  store i64 %131, i64* %127, align 4
  store i64 %128, i64* %130, align 4
  br label %141

132:                                              ; preds = %126
  %133 = bitcast %"class.gfx::Size"* %105 to i64*
  %134 = load i64, i64* %133, align 4
  store i64 %134, i64* %127, align 4
  store i64 %128, i64* %133, align 4
  %135 = lshr i64 %128, 32
  %136 = trunc i64 %135 to i32
  %137 = icmp sgt i32 %112, %136
  br i1 %137, label %138, label %141

138:                                              ; preds = %132
  %139 = bitcast %"class.gfx::Size"* %104 to i64*
  %140 = load i64, i64* %139, align 4
  store i64 %140, i64* %133, align 4
  store i64 %128, i64* %139, align 4
  br label %141

141:                                              ; preds = %114, %115, %123, %129, %132, %138
  %142 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 3
  %143 = icmp eq %"class.gfx::Size"* %142, %1
  br i1 %143, label %182, label %144

144:                                              ; preds = %141, %175
  %145 = phi %"class.gfx::Size"* [ %177, %175 ], [ %142, %141 ]
  %146 = phi i32 [ %176, %175 ], [ 0, %141 ]
  %147 = phi %"class.gfx::Size"* [ %145, %175 ], [ %104, %141 ]
  %148 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %145, i64 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %147, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = icmp sgt i32 %149, %151
  br i1 %152, label %153, label %175

153:                                              ; preds = %144
  %154 = bitcast %"class.gfx::Size"* %145 to i64*
  %155 = load i64, i64* %154, align 4
  %156 = lshr i64 %155, 32
  %157 = trunc i64 %156 to i32
  br label %158

158:                                              ; preds = %165, %153
  %159 = phi %"class.gfx::Size"* [ %145, %153 ], [ %160, %165 ]
  %160 = phi %"class.gfx::Size"* [ %147, %153 ], [ %166, %165 ]
  %161 = bitcast %"class.gfx::Size"* %160 to i64*
  %162 = bitcast %"class.gfx::Size"* %159 to i64*
  %163 = load i64, i64* %161, align 4
  store i64 %163, i64* %162, align 4
  %164 = icmp eq %"class.gfx::Size"* %160, %0
  br i1 %164, label %170, label %165

165:                                              ; preds = %158
  %166 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %160, i64 -1
  %167 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %160, i64 -1, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = icmp slt i32 %168, %157
  br i1 %169, label %158, label %170

170:                                              ; preds = %158, %165
  %171 = phi %"class.gfx::Size"* [ %160, %165 ], [ %0, %158 ]
  %172 = bitcast %"class.gfx::Size"* %171 to i64*
  store i64 %155, i64* %172, align 4
  %173 = add i32 %146, 1
  %174 = icmp eq i32 %173, 8
  br i1 %174, label %179, label %175

175:                                              ; preds = %170, %144
  %176 = phi i32 [ %173, %170 ], [ %146, %144 ]
  %177 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %145, i64 1
  %178 = icmp eq %"class.gfx::Size"* %177, %1
  br i1 %178, label %182, label %144

179:                                              ; preds = %170
  %180 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %145, i64 1
  %181 = icmp eq %"class.gfx::Size"* %180, %1
  br label %182

182:                                              ; preds = %175, %179, %141, %100, %94, %85, %75, %65, %57, %50, %47, %39, %31, %30, %7, %13, %2, %2, %60
  %183 = phi i1 [ true, %60 ], [ true, %2 ], [ true, %2 ], [ true, %13 ], [ true, %7 ], [ true, %30 ], [ true, %31 ], [ true, %39 ], [ true, %47 ], [ true, %50 ], [ true, %57 ], [ true, %65 ], [ true, %75 ], [ true, %85 ], [ true, %94 ], [ true, %100 ], [ true, %141 ], [ %181, %179 ], [ true, %175 ]
  ret i1 %183
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
