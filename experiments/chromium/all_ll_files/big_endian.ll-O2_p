; ModuleID = '../../base/big_endian.cc'
source_filename = "../../base/big_endian.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::BigEndianReader" = type { i8*, i8* }
%"class.base::BigEndianWriter" = type { i8*, i8* }
%"class.base::BasicStringPiece" = type { i8*, i64 }

@_ZN4base15BigEndianReaderC1EPKcm = hidden unnamed_addr alias void (%"class.base::BigEndianReader"*, i8*, i64), void (%"class.base::BigEndianReader"*, i8*, i64)* @_ZN4base15BigEndianReaderC2EPKcm
@_ZN4base15BigEndianWriterC1EPcm = hidden unnamed_addr alias void (%"class.base::BigEndianWriter"*, i8*, i64), void (%"class.base::BigEndianWriter"*, i8*, i64)* @_ZN4base15BigEndianWriterC2EPcm

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base15BigEndianReaderC2EPKcm(%"class.base::BigEndianReader"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 1
  %6 = getelementptr inbounds i8, i8* %1, i64 %2
  store i8* %6, i8** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianReader4SkipEm(%"class.base::BigEndianReader"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::BigEndianReader"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = inttoptr i64 %7 to i8*
  %12 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 0
  %13 = getelementptr inbounds i8, i8* %11, i64 %1
  store i8* %13, i8** %12, align 8
  br label %14

14:                                               ; preds = %2, %10
  %15 = phi i1 [ true, %10 ], [ false, %2 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianReader9ReadBytesEPvm(%"class.base::BigEndianReader"* nocapture, i8* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.base::BigEndianReader"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = inttoptr i64 %8 to i8*
  %13 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %12, i64 %2, i1 false)
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %2
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %3, %11
  %17 = phi i1 [ true, %11 ], [ false, %3 ]
  ret i1 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianReader9ReadPieceEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEm(%"class.base::BigEndianReader"* nocapture, %"class.base::BasicStringPiece"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.base::BigEndianReader"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %17, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 0
  %13 = bitcast %"class.base::BasicStringPiece"* %1 to i64*
  store i64 %8, i64* %13, align 8
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  store i64 %2, i64* %14, align 8
  %15 = load i8*, i8** %12, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %2
  store i8* %16, i8** %12, align 8
  br label %17

17:                                               ; preds = %3, %11
  %18 = phi i1 [ true, %11 ], [ false, %3 ]
  ret i1 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianReader6ReadU8EPh(%"class.base::BigEndianReader"* nocapture, i8* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::BigEndianReader"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = inttoptr i64 %7 to i8*
  %11 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 0
  %12 = load i8, i8* %10, align 1
  store i8 %12, i8* %1, align 1
  %13 = load i8*, i8** %11, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 1
  store i8* %14, i8** %11, align 8
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ]
  ret i1 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nocapture, i16* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::BigEndianReader"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, 2
  %10 = inttoptr i64 %7 to i8*
  br i1 %9, label %22, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 0
  %13 = load i8, i8* %10, align 1
  %14 = zext i8 %13 to i16
  %15 = shl nuw i16 %14, 8
  %16 = getelementptr inbounds i8, i8* %10, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = or i16 %15, %18
  store i16 %19, i16* %1, align 2
  %20 = load i8*, i8** %12, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 2
  store i8* %21, i8** %12, align 8
  br label %22

22:                                               ; preds = %2, %11
  %23 = phi i1 [ true, %11 ], [ false, %2 ]
  ret i1 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianReader7ReadU32EPj(%"class.base::BigEndianReader"* nocapture, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::BigEndianReader"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, 4
  %10 = inttoptr i64 %7 to i8*
  br i1 %9, label %32, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 0
  %13 = load i8, i8* %10, align 1
  %14 = zext i8 %13 to i32
  %15 = shl nuw nsw i32 %14, 8
  %16 = getelementptr inbounds i8, i8* %10, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = or i32 %15, %18
  %20 = shl nuw nsw i32 %19, 8
  %21 = getelementptr inbounds i8, i8* %10, i64 2
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = or i32 %20, %23
  %25 = shl nuw i32 %24, 8
  %26 = getelementptr inbounds i8, i8* %10, i64 3
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = or i32 %25, %28
  store i32 %29, i32* %1, align 4
  %30 = load i8*, i8** %12, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 4
  store i8* %31, i8** %12, align 8
  br label %32

32:                                               ; preds = %2, %11
  %33 = phi i1 [ true, %11 ], [ false, %2 ]
  ret i1 %33
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianReader7ReadU64EPm(%"class.base::BigEndianReader"* nocapture, i64* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::BigEndianReader"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, 8
  %10 = inttoptr i64 %7 to i8*
  br i1 %9, label %52, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 0
  %13 = load i8, i8* %10, align 1
  %14 = zext i8 %13 to i64
  %15 = shl nuw nsw i64 %14, 8
  %16 = getelementptr inbounds i8, i8* %10, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i64
  %19 = or i64 %15, %18
  %20 = shl nuw nsw i64 %19, 8
  %21 = getelementptr inbounds i8, i8* %10, i64 2
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = or i64 %20, %23
  %25 = shl nuw nsw i64 %24, 8
  %26 = getelementptr inbounds i8, i8* %10, i64 3
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i64
  %29 = or i64 %25, %28
  %30 = shl i64 %29, 8
  %31 = getelementptr inbounds i8, i8* %10, i64 4
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = or i64 %30, %33
  %35 = shl i64 %34, 8
  %36 = getelementptr inbounds i8, i8* %10, i64 5
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = or i64 %35, %38
  %40 = shl i64 %39, 8
  %41 = getelementptr inbounds i8, i8* %10, i64 6
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = or i64 %40, %43
  %45 = shl i64 %44, 8
  %46 = getelementptr inbounds i8, i8* %10, i64 7
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = or i64 %45, %48
  store i64 %49, i64* %1, align 8
  %50 = load i8*, i8** %12, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 8
  store i8* %51, i8** %12, align 8
  br label %52

52:                                               ; preds = %2, %11
  %53 = phi i1 [ true, %11 ], [ false, %2 ]
  ret i1 %53
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianReader20ReadU8LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nocapture, %"class.base::BasicStringPiece"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::BigEndianReader"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  %9 = inttoptr i64 %7 to i8*
  br i1 %8, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 0
  %12 = load i8, i8* %9, align 1
  %13 = getelementptr inbounds i8, i8* %9, i64 1
  store i8* %13, i8** %11, align 8
  %14 = zext i8 %12 to i64
  %15 = ptrtoint i8* %13 to i64
  %16 = sub i64 %5, %15
  %17 = icmp ult i64 %16, %14
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  store i8* %9, i8** %11, align 8
  br label %23

19:                                               ; preds = %10
  %20 = getelementptr inbounds i8, i8* %13, i64 %14
  store i8* %20, i8** %11, align 8
  %21 = bitcast %"class.base::BasicStringPiece"* %1 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  store i64 %14, i64* %22, align 8
  br label %23

23:                                               ; preds = %2, %18, %19
  %24 = phi i1 [ true, %19 ], [ false, %18 ], [ false, %2 ]
  ret i1 %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nocapture, %"class.base::BasicStringPiece"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::BigEndianReader"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, 2
  %10 = inttoptr i64 %7 to i8*
  br i1 %9, label %29, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %0, i64 0, i32 0
  %13 = load i8, i8* %10, align 1
  %14 = zext i8 %13 to i64
  %15 = shl nuw nsw i64 %14, 8
  %16 = getelementptr inbounds i8, i8* %10, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i64
  %19 = or i64 %15, %18
  %20 = getelementptr inbounds i8, i8* %10, i64 2
  store i8* %20, i8** %12, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = sub i64 %5, %21
  %23 = icmp ult i64 %22, %19
  br i1 %23, label %24, label %25

24:                                               ; preds = %11
  store i8* %10, i8** %12, align 8
  br label %29

25:                                               ; preds = %11
  %26 = getelementptr inbounds i8, i8* %20, i64 %19
  store i8* %26, i8** %12, align 8
  %27 = bitcast %"class.base::BasicStringPiece"* %1 to i64*
  store i64 %21, i64* %27, align 8
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  store i64 %19, i64* %28, align 8
  br label %29

29:                                               ; preds = %2, %24, %25
  %30 = phi i1 [ true, %25 ], [ false, %24 ], [ false, %2 ]
  ret i1 %30
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base15BigEndianWriterC2EPcm(%"class.base::BigEndianWriter"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 1
  %6 = getelementptr inbounds i8, i8* %1, i64 %2
  store i8* %6, i8** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianWriter4SkipEm(%"class.base::BigEndianWriter"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::BigEndianWriter"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = inttoptr i64 %7 to i8*
  %12 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 0
  %13 = getelementptr inbounds i8, i8* %11, i64 %1
  store i8* %13, i8** %12, align 8
  br label %14

14:                                               ; preds = %2, %10
  %15 = phi i1 [ true, %10 ], [ false, %2 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianWriter10WriteBytesEPKvm(%"class.base::BigEndianWriter"* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.base::BigEndianWriter"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = inttoptr i64 %8 to i8*
  %13 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %1, i64 %2, i1 false)
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %2
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %3, %11
  %17 = phi i1 [ true, %11 ], [ false, %3 ]
  ret i1 %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianWriter7WriteU8Eh(%"class.base::BigEndianWriter"* nocapture, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::BigEndianWriter"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = inttoptr i64 %7 to i8*
  %11 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 0
  store i8 %1, i8* %10, align 1
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 1
  store i8* %13, i8** %11, align 8
  br label %14

14:                                               ; preds = %2, %9
  %15 = phi i1 [ true, %9 ], [ false, %2 ]
  ret i1 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* nocapture, i16 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::BigEndianWriter"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, 2
  %10 = inttoptr i64 %7 to i8*
  br i1 %9, label %19, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 0
  %13 = trunc i16 %1 to i8
  %14 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 %13, i8* %14, align 1
  %15 = lshr i16 %1, 8
  %16 = trunc i16 %15 to i8
  store i8 %16, i8* %10, align 1
  %17 = load i8*, i8** %12, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 2
  store i8* %18, i8** %12, align 8
  br label %19

19:                                               ; preds = %2, %11
  %20 = phi i1 [ true, %11 ], [ false, %2 ]
  ret i1 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianWriter8WriteU32Ej(%"class.base::BigEndianWriter"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::BigEndianWriter"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, 4
  %10 = inttoptr i64 %7 to i8*
  br i1 %9, label %25, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 0
  %13 = trunc i32 %1 to i8
  %14 = getelementptr inbounds i8, i8* %10, i64 3
  store i8 %13, i8* %14, align 1
  %15 = lshr i32 %1, 8
  %16 = trunc i32 %15 to i8
  %17 = getelementptr inbounds i8, i8* %10, i64 2
  store i8 %16, i8* %17, align 1
  %18 = lshr i32 %1, 16
  %19 = trunc i32 %18 to i8
  %20 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 %19, i8* %20, align 1
  %21 = lshr i32 %1, 24
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %10, align 1
  %23 = load i8*, i8** %12, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 4
  store i8* %24, i8** %12, align 8
  br label %25

25:                                               ; preds = %2, %11
  %26 = phi i1 [ true, %11 ], [ false, %2 ]
  ret i1 %26
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15BigEndianWriter8WriteU64Em(%"class.base::BigEndianWriter"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::BigEndianWriter"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, 8
  %10 = inttoptr i64 %7 to i8*
  br i1 %9, label %37, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %0, i64 0, i32 0
  %13 = trunc i64 %1 to i8
  %14 = getelementptr inbounds i8, i8* %10, i64 7
  store i8 %13, i8* %14, align 1
  %15 = lshr i64 %1, 8
  %16 = trunc i64 %15 to i8
  %17 = getelementptr inbounds i8, i8* %10, i64 6
  store i8 %16, i8* %17, align 1
  %18 = lshr i64 %1, 16
  %19 = trunc i64 %18 to i8
  %20 = getelementptr inbounds i8, i8* %10, i64 5
  store i8 %19, i8* %20, align 1
  %21 = lshr i64 %1, 24
  %22 = trunc i64 %21 to i8
  %23 = getelementptr inbounds i8, i8* %10, i64 4
  store i8 %22, i8* %23, align 1
  %24 = lshr i64 %1, 32
  %25 = trunc i64 %24 to i8
  %26 = getelementptr inbounds i8, i8* %10, i64 3
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %1, 40
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds i8, i8* %10, i64 2
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %1, 48
  %31 = trunc i64 %30 to i8
  %32 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 %31, i8* %32, align 1
  %33 = lshr i64 %1, 56
  %34 = trunc i64 %33 to i8
  store i8 %34, i8* %10, align 1
  %35 = load i8*, i8** %12, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 8
  store i8* %36, i8** %12, align 8
  br label %37

37:                                               ; preds = %2, %11
  %38 = phi i1 [ true, %11 ], [ false, %2 ]
  ret i1 %38
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
