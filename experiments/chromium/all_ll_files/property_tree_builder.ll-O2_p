; ModuleID = '../../cc/trees/property_tree_builder.cc'
source_filename = "../../cc/trees/property_tree_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::(anonymous namespace)::DataForRecursion" = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], %"class.gfx::Transform", i8* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"struct.base::StackAllocator<cc::ClipRectData, 3>::Source" = type { [72 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"*, %"class.std::__1::__compressed_pair.271" }
%"struct.cc::ClipRectData" = type { i32, %"struct.cc::ConditionalClip" }
%"struct.cc::ConditionalClip" = type { i8, %"class.gfx::RectF" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272", %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.cc::ClipRectData"* }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.base::StackAllocator" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%union.anon.278 = type { %"class.cc::ClipExpander" }
%"class.cc::ClipExpander" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.292" = type { %"class.std::__1::__vector_base.293" }
%"class.std::__1::__vector_base.293" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.294" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr", %class.scoped_refptr.9, %"class.std::__1::unique_ptr.10", i32, %"class.std::__1::unique_ptr.14", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", i32, %"class.std::__1::unique_ptr.32", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr.69, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.166", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr.340, %"class.base::flat_map.341", %"class.base::internal::flat_tree.351", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.382", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.408", %"class.std::__1::unordered_map.416", %"class.std::__1::vector.440", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.449", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.470", %"class.std::__1::vector.476", %"class.base::flat_map.484", %"class.base::WeakPtrFactory.494" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector", %class.scoped_refptr }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.3", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%class.scoped_refptr.9 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.cc::TaskRunnerProvider"* }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::RenderingStatsInstrumentation" = type opaque
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.38", %"class.std::__1::set" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.57, %class.scoped_refptr.58, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.59", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr.57 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.58 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.65 }
%class.scoped_refptr.65 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.base::TimeDelta" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::TaskGraphRunner" = type opaque
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%class.scoped_refptr.69 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.84", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.135" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.70", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %class.scoped_refptr.69*, %class.scoped_refptr.69*, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.scoped_refptr.69* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.77" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.79" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.std::__1::pair"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.102", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.109" }
%"class.cc::PictureLayer" = type <{ %"class.cc::Layer", %"struct.cc::PictureLayer::PictureLayerInputs", %"class.std::__1::unique_ptr.501", %"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker", %"class.cc::Region", i32, [4 x i8] }>
%"struct.cc::PictureLayer::PictureLayerInputs" = type <{ %"class.cc::ContentLayerClient"*, i8, i8, [6 x i8], %class.scoped_refptr.495, %"class.absl::optional.496", [4 x i8] }>
%"class.cc::ContentLayerClient" = type opaque
%class.scoped_refptr.495 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.496" = type { %"class.absl::optional_internal::optional_data.497" }
%"class.absl::optional_internal::optional_data.497" = type { %"class.absl::optional_internal::optional_data_base.498" }
%"class.absl::optional_internal::optional_data_base.498" = type { %"class.absl::optional_internal::optional_data_dtor_base.499" }
%"class.absl::optional_internal::optional_data_dtor_base.499" = type { i8, %union.anon.500 }
%union.anon.500 = type { %"class.gfx::Size" }
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.cc::RecordingSource"* }
%"class.cc::RecordingSource" = type opaque
%"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker" = type { %"class.base::trace_event::TraceScopedTrackableObject.base", [4 x i8] }
%"class.base::trace_event::TraceScopedTrackableObject.base" = type <{ i8*, i32 }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.87" }
%"class.std::__1::vector.87" = type { %"class.std::__1::__vector_base.88" }
%"class.std::__1::__vector_base.88" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.97" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.90", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.89, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.89 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.102" = type { %"class.absl::optional_internal::optional_data.103" }
%"class.absl::optional_internal::optional_data.103" = type { %"class.absl::optional_internal::optional_data_base.104" }
%"class.absl::optional_internal::optional_data_base.104" = type { %"class.absl::optional_internal::optional_data_dtor_base.105" }
%"class.absl::optional_internal::optional_data_dtor_base.105" = type { i8, %union.anon.106 }
%union.anon.106 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.108", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.108" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.viz::CopyOutputRequest"* }
%"class.viz::CopyOutputRequest" = type { i8, %"class.base::OnceCallback", %class.scoped_refptr.9, %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.absl::optional.114", %"class.absl::optional.119", %"class.absl::optional.119" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.absl::optional.114" = type { %"class.absl::optional_internal::optional_data.115" }
%"class.absl::optional_internal::optional_data.115" = type { %"class.absl::optional_internal::optional_data_base.116" }
%"class.absl::optional_internal::optional_data_base.116" = type { %"class.absl::optional_internal::optional_data_dtor_base.117" }
%"class.absl::optional_internal::optional_data_dtor_base.117" = type { i8, %union.anon.118 }
%union.anon.118 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.119" = type { %"class.absl::optional_internal::optional_data.120" }
%"class.absl::optional_internal::optional_data.120" = type { %"class.absl::optional_internal::optional_data_base.121" }
%"class.absl::optional_internal::optional_data_base.121" = type { %"class.absl::optional_internal::optional_data_dtor_base.122" }
%"class.absl::optional_internal::optional_data_dtor_base.122" = type { i8, %union.anon.123 }
%union.anon.123 = type { %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::unique_ptr.111"* }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.144", %"class.std::__1::vector.144", %"class.std::__1::vector.151" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.140 }
%union.anon.140 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { i8**, i8**, %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { i8** }
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.153" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.161" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.161" = type { %"class.absl::optional_internal::optional_data.162" }
%"class.absl::optional_internal::optional_data.162" = type { %"class.absl::optional_internal::optional_data_base.163" }
%"class.absl::optional_internal::optional_data_base.163" = type { %"class.absl::optional_internal::optional_data_dtor_base.164" }
%"class.absl::optional_internal::optional_data_dtor_base.164" = type { i8, %union.anon.165 }
%union.anon.165 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.172", %"class.base::flat_map.172", %"class.base::flat_map.172", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.172" = type { %"class.base::internal::flat_tree.173" }
%"class.base::internal::flat_tree.173" = type { %"class.std::__1::vector.174" }
%"class.std::__1::vector.174" = type { %"class.std::__1::__vector_base.175" }
%"class.std::__1::__vector_base.175" = type { %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"*, %"class.std::__1::__compressed_pair.177" }
%"struct.std::__1::pair.176" = type <{ %"struct.cc::ElementId", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::pair.176"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.189", %"class.std::__1::vector.196", %"class.std::__1::vector.203" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.182", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.184" }
%"struct.cc::TransformNode" = type { i32, i32, i32, %"struct.cc::ElementId", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.gfx::Vector2dF", %"class.gfx::Transform", i32, i32, i24, %"class.gfx::ScrollOffset", %"class.gfx::Vector2dF", float, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { i32*, i32*, %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { i32* }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.198" }
%"struct.cc::TransformCachedNodeData" = type { %"class.gfx::Transform", %"class.gfx::Transform", i8, [3 x i8] }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.205" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.210", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.245" }
%"class.cc::PropertyTree.210" = type { i32 (...)**, %"class.std::__1::vector.211", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.221" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.102", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.213" }
%"class.base::internal::flat_tree.213" = type { %"class.std::__1::vector.214" }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { i32*, i32*, %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { i32* }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.226", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.241", [4 x i8] }>
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228", %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { float }
%"class.std::__1::vector.245" = type { %"class.std::__1::__vector_base.246" }
%"class.std::__1::__vector_base.246" = type { %"class.std::__1::unique_ptr.247"*, %"class.std::__1::unique_ptr.247"*, %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.250" }
%"class.cc::LayerTreeImpl" = type opaque
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.std::__1::unique_ptr.247"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.264" }
%"class.cc::PropertyTree.264" = type { i32 (...)**, %"class.std::__1::vector.265", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.265" = type { %"class.std::__1::__vector_base.266" }
%"class.std::__1::__vector_base.266" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.279" }
%"struct.cc::ClipNode" = type <{ i32, i32, i32, %"class.gfx::RectF", [4 x i8], %"class.base::StackVector", %"class.gfx::RectF", %"class.absl::optional.274", i32, [4 x i8] }>
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.269" }
%"class.absl::optional.274" = type { %"class.absl::optional_internal::optional_data.275" }
%"class.absl::optional_internal::optional_data.275" = type { %"class.absl::optional_internal::optional_data_base.276" }
%"class.absl::optional_internal::optional_data_base.276" = type { %"class.absl::optional_internal::optional_data_dtor_base.277" }
%"class.absl::optional_internal::optional_data_dtor_base.277" = type { i8, %union.anon.278 }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.284", i32, %"class.base::flat_map.304", %"class.base::flat_map.314", %"class.base::WeakPtr.324" }
%"class.cc::PropertyTree.284" = type { i32 (...)**, %"class.std::__1::vector.285", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.285" = type { %"class.std::__1::__vector_base.286" }
%"class.std::__1::__vector_base.286" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.299" }
%"struct.cc::ScrollNode" = type <{ i32, i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8], %"class.gfx::Vector2dF", %"struct.cc::ElementId", i32, %"struct.cc::OverscrollBehavior", [4 x i8], %"class.absl::optional.287", i8, [7 x i8] }>
%"class.absl::optional.287" = type { %"class.absl::optional_internal::optional_data.288" }
%"class.absl::optional_internal::optional_data.288" = type { %"class.absl::optional_internal::optional_data_base.289" }
%"class.absl::optional_internal::optional_data_base.289" = type { %"class.absl::optional_internal::optional_data_dtor_base.290" }
%"class.absl::optional_internal::optional_data_dtor_base.290" = type { i8, %union.anon.291 }
%union.anon.291 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.292", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.304" = type { %"class.base::internal::flat_tree.305" }
%"class.base::internal::flat_tree.305" = type { %"class.std::__1::vector.306" }
%"class.std::__1::vector.306" = type { %"class.std::__1::__vector_base.307" }
%"class.std::__1::__vector_base.307" = type { %"struct.std::__1::pair.308"*, %"struct.std::__1::pair.308"*, %"class.std::__1::__compressed_pair.309" }
%"struct.std::__1::pair.308" = type opaque
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.std::__1::pair.308"* }
%"class.base::flat_map.314" = type { %"class.base::internal::flat_tree.315" }
%"class.base::internal::flat_tree.315" = type { %"class.std::__1::vector.316" }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"struct.std::__1::pair.318"*, %"struct.std::__1::pair.318"*, %"class.std::__1::__compressed_pair.319" }
%"struct.std::__1::pair.318" = type opaque
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::pair.318"* }
%"class.base::WeakPtr.324" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.325", %"class.std::__1::vector.332" }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.327" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.332" = type { %"class.std::__1::__vector_base.333" }
%"class.std::__1::__vector_base.333" = type { %"class.std::__1::vector.334"*, %"class.std::__1::vector.334"*, %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::vector.334" = type opaque
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::vector.334"* }
%class.scoped_refptr.340 = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.cc::HeadsUpDisplayLayer" = type opaque
%"class.base::flat_map.341" = type { %"class.base::internal::flat_tree.342" }
%"class.base::internal::flat_tree.342" = type { %"class.std::__1::vector.343" }
%"class.std::__1::vector.343" = type { %"class.std::__1::__vector_base.344" }
%"class.std::__1::__vector_base.344" = type { %"struct.std::__1::pair.345"*, %"struct.std::__1::pair.345"*, %"class.std::__1::__compressed_pair.346" }
%"struct.std::__1::pair.345" = type opaque
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"struct.std::__1::pair.345"* }
%"class.base::internal::flat_tree.351" = type { %"class.std::__1::vector.352" }
%"class.std::__1::vector.352" = type { %"class.std::__1::__vector_base.353" }
%"class.std::__1::__vector_base.353" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.359" }
%"class.std::__1::__hash_table.359" = type <{ %"class.std::__1::unique_ptr.360", %"class.std::__1::__compressed_pair.370", %"class.std::__1::__compressed_pair.375", %"class.std::__1::__compressed_pair.378", [4 x i8] }>
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362", %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"struct.std::__1::__hash_node_base.363"** }
%"struct.std::__1::__hash_node_base.363" = type { %"struct.std::__1::__hash_node_base.363"* }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.std::__1::__bucket_list_deallocator.365" }
%"class.std::__1::__bucket_list_deallocator.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"struct.std::__1::__hash_node_base.363" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"class.std::__1::unordered_map.382" = type { %"class.std::__1::__hash_table.383" }
%"class.std::__1::__hash_table.383" = type <{ %"class.std::__1::unique_ptr.384", %"class.std::__1::__compressed_pair.394", %"class.std::__1::__compressed_pair.399", %"class.std::__1::__compressed_pair.402", [4 x i8] }>
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386", %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.387"** }
%"struct.std::__1::__hash_node_base.387" = type { %"struct.std::__1::__hash_node_base.387"* }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.std::__1::__bucket_list_deallocator.389" }
%"class.std::__1::__bucket_list_deallocator.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.std::__1::__hash_node_base.387" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"struct.std::__1::pair.410"*, %"struct.std::__1::pair.410"*, %"class.std::__1::__compressed_pair.411" }
%"struct.std::__1::pair.410" = type opaque
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"struct.std::__1::pair.410"* }
%"class.std::__1::unordered_map.416" = type { %"class.std::__1::__hash_table.417" }
%"class.std::__1::__hash_table.417" = type <{ %"class.std::__1::unique_ptr.418", %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.433", %"class.std::__1::__compressed_pair.436", [4 x i8] }>
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420", %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"struct.std::__1::__hash_node_base.421"** }
%"struct.std::__1::__hash_node_base.421" = type { %"struct.std::__1::__hash_node_base.421"* }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.std::__1::__bucket_list_deallocator.423" }
%"class.std::__1::__bucket_list_deallocator.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"struct.std::__1::__hash_node_base.421" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.base::OnceCallback.442"*, %"class.base::OnceCallback.442"*, %"class.std::__1::__compressed_pair.443" }
%"class.base::OnceCallback.442" = type opaque
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.base::OnceCallback.442"* }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.448" }
%"class.base::OnceCallback.448" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.455", %"class.std::__1::vector.462" }
%"class.std::__1::vector.455" = type { %"class.std::__1::__vector_base.456" }
%"class.std::__1::__vector_base.456" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.457" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"class.std::__1::unique_ptr.464"*, %"class.std::__1::unique_ptr.464"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.509", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.509" = type { %"class.absl::optional_internal::optional_data.510" }
%"class.absl::optional_internal::optional_data.510" = type { %"class.absl::optional_internal::optional_data_base.511" }
%"class.absl::optional_internal::optional_data_base.511" = type { %"class.absl::optional_internal::optional_data_dtor_base.512" }
%"class.absl::optional_internal::optional_data_dtor_base.512" = type { i8, %union.anon.513 }
%union.anon.513 = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.std::__1::unique_ptr.464"* }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.476" = type { %"class.std::__1::__vector_base.477" }
%"class.std::__1::__vector_base.477" = type { %"class.std::__1::unique_ptr.478"*, %"class.std::__1::unique_ptr.478"*, %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::unique_ptr.478" = type opaque
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.std::__1::unique_ptr.478"* }
%"class.base::flat_map.484" = type { %"class.base::internal::flat_tree.485" }
%"class.base::internal::flat_tree.485" = type { %"class.std::__1::vector.486" }
%"class.std::__1::vector.486" = type { %"class.std::__1::__vector_base.487" }
%"class.std::__1::__vector_base.487" = type { %"struct.std::__1::pair.488"*, %"struct.std::__1::pair.488"*, %"class.std::__1::__compressed_pair.489" }
%"struct.std::__1::pair.488" = type opaque
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"struct.std::__1::pair.488"* }
%"class.base::WeakPtrFactory.494" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::(anonymous namespace)::PropertyTreeBuilderContext" = type { %"class.cc::LayerTreeHost"*, %"class.cc::Layer"*, %"class.cc::MutatorHost"*, %"class.cc::PropertyTrees"*, %"class.cc::TransformTree"*, %"class.cc::ClipTree"*, %"class.cc::EffectTree"*, %"class.cc::ScrollTree"* }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"*, %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.178", %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.std::__1::allocator.180"* }
%"class.std::__1::allocator.180" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE7emplaceIJS3_iEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN2cc9ElementIdEiEERNS_9allocatorIS4_EEE12emplace_backIJS3_iEEEvDpOT_ = comdat any

@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@__const._ZNK2cc12_GLOBAL__N_126PropertyTreeBuilderContext26BuildPropertyTreesInternalEPNS_5LayerERKNS0_16DataForRecursionE.data_for_children = private unnamed_addr constant %"struct.cc::(anonymous namespace)::DataForRecursion" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, i8* inttoptr (i64 -6148914691236517206 to i8*) }, align 8
@_ZN2cc5Layer18kNoRoundedCornersFE = external local_unnamed_addr constant %"class.gfx::RoundedCornersF", align 4
@__const._ZNK2cc12_GLOBAL__N_126PropertyTreeBuilderContext19AddClipNodeIfNeededERKNS0_16DataForRecursionEPNS_5LayerEbPS2_.node = private unnamed_addr constant <{ i32, i32, i32, %"class.gfx::RectF", [4 x i8], { { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", [4 x i8], %"class.base::StackAllocator", %"class.std::__1::vector.269" } }, %"class.gfx::RectF", { { { { i8, [3 x i8], %union.anon.278 } } } }, i32, [4 x i8] }> <{ i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA", { { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", [4 x i8], %"class.base::StackAllocator", %"class.std::__1::vector.269" } } { { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", [4 x i8], %"class.base::StackAllocator", %"class.std::__1::vector.269" } { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source" { [72 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", i8 -86, [3 x i8] c"\AA\AA\AA" }, [4 x i8] c"\AA\AA\AA\AA", %"class.base::StackAllocator" { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* inttoptr (i64 -6148914691236517206 to %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"*) }, %"class.std::__1::vector.269" { %"class.std::__1::__vector_base.270" { %"struct.cc::ClipRectData"* inttoptr (i64 -6148914691236517206 to %"struct.cc::ClipRectData"*), %"struct.cc::ClipRectData"* inttoptr (i64 -6148914691236517206 to %"struct.cc::ClipRectData"*), %"class.std::__1::__compressed_pair.271" { %"struct.std::__1::__compressed_pair_elem.272" { %"struct.cc::ClipRectData"* inttoptr (i64 -6148914691236517206 to %"struct.cc::ClipRectData"*) }, %"struct.std::__1::__compressed_pair_elem.273" { %"class.base::StackAllocator" { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* inttoptr (i64 -6148914691236517206 to %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"*) } } } } } } }, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, { { { { i8, [3 x i8], %union.anon.278 } } } } { { { { i8, [3 x i8], %union.anon.278 } } } { { { i8, [3 x i8], %union.anon.278 } } { { i8, [3 x i8], %union.anon.278 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.278 { %"class.cc::ClipExpander" { i32 -1431655766 } } } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZNK2cc12_GLOBAL__N_126PropertyTreeBuilderContext21AddScrollNodeIfNeededERKNS0_16DataForRecursionEPNS_5LayerEPS2_.node = private unnamed_addr constant <{ i32, i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8], %"class.gfx::Vector2dF", %"struct.cc::ElementId", i32, %"struct.cc::OverscrollBehavior", [4 x i8], { { { { i8, [7 x i8], { { { i8, [3 x i8], i32, i32 }, %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", [4 x i8], %"class.std::__1::vector.292", %"struct.cc::TargetSnapAreaElementIds" } } } } } }, i8, [7 x i8] }> <{ i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.cc::ElementId" { i64 -6148914691236517206 }, i32 -1431655766, %"struct.cc::OverscrollBehavior" { i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], { { { i8, [3 x i8], i32, i32 }, %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", [4 x i8], %"class.std::__1::vector.292", %"struct.cc::TargetSnapAreaElementIds" } } } } } } { { { { i8, [7 x i8], { { { i8, [3 x i8], i32, i32 }, %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", [4 x i8], %"class.std::__1::vector.292", %"struct.cc::TargetSnapAreaElementIds" } } } } } { { { i8, [7 x i8], { { { i8, [3 x i8], i32, i32 }, %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", [4 x i8], %"class.std::__1::vector.292", %"struct.cc::TargetSnapAreaElementIds" } } } } { { i8, [7 x i8], { { { i8, [3 x i8], i32, i32 }, %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", [4 x i8], %"class.std::__1::vector.292", %"struct.cc::TargetSnapAreaElementIds" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, [3 x i8], i32, i32 }, %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", [4 x i8], %"class.std::__1::vector.292", %"struct.cc::TargetSnapAreaElementIds" } } { { { i8, [3 x i8], i32, i32 }, %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", [4 x i8], %"class.std::__1::vector.292", %"struct.cc::TargetSnapAreaElementIds" } { { i8, [3 x i8], i32, i32 } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766 }, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, %"class.gfx::ScrollOffset" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::ScrollOffset" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector.292" { %"class.std::__1::__vector_base.293" { %"struct.cc::SnapAreaData"* inttoptr (i64 -6148914691236517206 to %"struct.cc::SnapAreaData"*), %"struct.cc::SnapAreaData"* inttoptr (i64 -6148914691236517206 to %"struct.cc::SnapAreaData"*), %"class.std::__1::__compressed_pair.294" { %"struct.std::__1::__compressed_pair_elem.295" { %"struct.cc::SnapAreaData"* inttoptr (i64 -6148914691236517206 to %"struct.cc::SnapAreaData"*) } } } }, %"struct.cc::TargetSnapAreaElementIds" { %"struct.cc::ElementId" { i64 -6148914691236517206 }, %"struct.cc::ElementId" { i64 -6148914691236517206 } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZN2cc5Layer18kIdentityTransformE = external constant { { [4 x [4 x float]], i8 } }, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19PropertyTreeBuilder18BuildPropertyTreesEPNS_13LayerTreeHostE(%"class.cc::LayerTreeHost"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.gfx::Transform", align 4
  %3 = alloca %"struct.cc::(anonymous namespace)::DataForRecursion", align 8
  %4 = alloca %"struct.cc::ClipNode", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", align 8
  %7 = bitcast %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %6, i64 0, i32 0
  store %"class.cc::LayerTreeHost"* %0, %"class.cc::LayerTreeHost"** %8, align 8
  %9 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 29, i32 0
  %11 = bitcast %"class.cc::Layer"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.cc::Layer"** %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %6, i64 0, i32 2
  %15 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 71
  %16 = bitcast %"class.cc::MutatorHost"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.cc::MutatorHost"** %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %6, i64 0, i32 3
  %20 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60
  store %"class.cc::PropertyTrees"* %20, %"class.cc::PropertyTrees"** %19, align 8
  %21 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %6, i64 0, i32 4
  %22 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3
  store %"class.cc::TransformTree"* %22, %"class.cc::TransformTree"** %21, align 8
  %23 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %6, i64 0, i32 5
  %24 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 5
  store %"class.cc::ClipTree"* %24, %"class.cc::ClipTree"** %23, align 8
  %25 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %6, i64 0, i32 6
  %26 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 4
  store %"class.cc::EffectTree"* %26, %"class.cc::EffectTree"** %25, align 8
  %27 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %6, i64 0, i32 7
  %28 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 6
  store %"class.cc::ScrollTree"* %28, %"class.cc::ScrollTree"** %27, align 8
  %29 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 11
  store i8 1, i8* %29, align 8
  %30 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 12
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 70
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  %34 = inttoptr i64 %12 to %"class.cc::Layer"*
  %35 = getelementptr inbounds %"class.cc::ClipTree", %"class.cc::ClipTree"* %24, i64 0, i32 0
  br i1 %33, label %38, label %36

36:                                               ; preds = %1
  %37 = tail call fastcc zeroext i1 @_ZN2cc12_GLOBAL__N_136UpdateSubtreeHasCopyRequestRecursiveEPNS_5LayerE(%"class.cc::Layer"* %34) #9
  br label %38

38:                                               ; preds = %36, %1
  %39 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 7
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %71

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 52
  %44 = bitcast %"class.gfx::Rect"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 52, i32 1
  %47 = bitcast %"class.gfx::Size"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %45 to i32
  %50 = lshr i64 %45, 32
  %51 = trunc i64 %50 to i32
  %52 = sitofp i32 %49 to float
  %53 = sitofp i32 %51 to float
  %54 = trunc i64 %48 to i32
  %55 = lshr i64 %48, 32
  %56 = trunc i64 %55 to i32
  %57 = insertelement <2 x float> undef, float %52, i32 0
  %58 = insertelement <2 x float> %57, float %53, i32 1
  %59 = icmp sgt i32 %54, 0
  %60 = select i1 %59, i32 %54, i32 0
  %61 = sitofp i32 %60 to float
  %62 = insertelement <2 x float> undef, float %61, i32 0
  %63 = icmp sgt i32 %56, 0
  %64 = select i1 %63, i32 %56, i32 0
  %65 = sitofp i32 %64 to float
  %66 = insertelement <2 x float> %62, float %65, i32 1
  tail call void @_ZN2cc8ClipTree15SetViewportClipEN3gfx5RectFE(%"class.cc::ClipTree"* %24, <2 x float> %58, <2 x float> %66) #9
  %67 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 35
  %68 = load float, float* %67, align 8
  %69 = bitcast %"class.gfx::Transform"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %69) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %69, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #9
  %70 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %2, i64 0, i32 0, i32 1
  store i8 0, i8* %70, align 4
  call void @_ZN2cc13TransformTree24SetRootScaleAndTransformEfRKN3gfx9TransformE(%"class.cc::TransformTree"* %22, float %68, %"class.gfx::Transform"* nonnull dereferenceable(68) %2) #9
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %69) #9
  br label %125

71:                                               ; preds = %38
  %72 = bitcast %"struct.cc::(anonymous namespace)::DataForRecursion"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %72) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* align 8 bitcast (%"struct.cc::(anonymous namespace)::DataForRecursion"* @__const._ZNK2cc12_GLOBAL__N_126PropertyTreeBuilderContext26BuildPropertyTreesInternalEPNS_5LayerERKNS0_16DataForRecursionE.data_for_children to i8*), i64 104, i1 false) #9
  %73 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %3, i64 0, i32 11
  %74 = bitcast %"class.gfx::Transform"* %73 to i8*
  %75 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %3, i64 0, i32 11, i32 0, i32 1
  %76 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %3, i64 0, i32 0
  store i32 -1, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %3, i64 0, i32 1
  %78 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %3, i64 0, i32 2
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 0, i32 -1, i32 -1>, <4 x i32>* %79, align 8
  %80 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %3, i64 0, i32 6
  store i32 -1, i32* %80, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* nonnull align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #9
  store i8 0, i8* %75, align 4
  %81 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %3, i64 0, i32 8
  store i8 1, i8* %81, align 8
  %82 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %3, i64 0, i32 9
  store i8 0, i8* %82, align 1
  %83 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 49
  %84 = load i32, i32* %83, align 8
  %85 = icmp ult i32 %84, -16777216
  %86 = or i32 %84, -16777216
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %3, i64 0, i32 7
  store i32 %87, i32* %88, align 4
  tail call void @_ZN2cc13PropertyTrees5clearEv(%"class.cc::PropertyTrees"* %20) #9
  %89 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 35
  %90 = bitcast float* %89 to i32*
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3, i32 2
  %93 = bitcast float* %92 to i32*
  store i32 %91, i32* %93, align 4
  %94 = bitcast %"struct.cc::ClipNode"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %94) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %94, i8* align 8 bitcast (<{ i32, i32, i32, %"class.gfx::RectF", [4 x i8], { { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", [4 x i8], %"class.base::StackAllocator", %"class.std::__1::vector.269" } }, %"class.gfx::RectF", { { { { i8, [3 x i8], %union.anon.278 } } } }, i32, [4 x i8] }>* @__const._ZNK2cc12_GLOBAL__N_126PropertyTreeBuilderContext19AddClipNodeIfNeededERKNS0_16DataForRecursionEPNS_5LayerEbPS2_.node to i8*), i64 184, i1 false) #9
  call void @_ZN2cc8ClipNodeC1Ev(%"struct.cc::ClipNode"* nonnull %4) #9
  %95 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %4, i64 0, i32 2
  store i32 0, i32* %95, align 8
  %96 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 52
  %97 = bitcast %"class.gfx::Rect"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 52, i32 1
  %100 = bitcast %"class.gfx::Size"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = trunc i64 %98 to i32
  %103 = lshr i64 %98, 32
  %104 = trunc i64 %103 to i32
  %105 = sitofp i32 %102 to float
  %106 = sitofp i32 %104 to float
  %107 = trunc i64 %101 to i32
  %108 = lshr i64 %101, 32
  %109 = trunc i64 %108 to i32
  %110 = icmp sgt i32 %107, 0
  %111 = select i1 %110, i32 %107, i32 0
  %112 = sitofp i32 %111 to float
  %113 = icmp sgt i32 %109, 0
  %114 = select i1 %113, i32 %109, i32 0
  %115 = sitofp i32 %114 to float
  %116 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %4, i64 0, i32 3, i32 0, i32 0
  store float %105, float* %116, align 4
  %117 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %4, i64 0, i32 3, i32 0, i32 1
  store float %106, float* %117, align 4
  %118 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %4, i64 0, i32 3, i32 1, i32 0
  store float %112, float* %118, align 4
  %119 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %4, i64 0, i32 3, i32 1, i32 1
  store float %115, float* %119, align 4
  %120 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %4, i64 0, i32 8
  store i32 0, i32* %120, align 8
  %121 = call i32 @_ZN2cc12PropertyTreeINS_8ClipNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.264"* %35, %"struct.cc::ClipNode"* nonnull dereferenceable(184) %4, i32 0) #9
  store i32 %121, i32* %77, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  store i8 -86, i8* %5, align 1
  %122 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %3, i64 0, i32 12
  store i8* %5, i8** %122, align 8
  call fastcc void @_ZNK2cc12_GLOBAL__N_126PropertyTreeBuilderContext26BuildPropertyTreesInternalEPNS_5LayerERKNS0_16DataForRecursionE(%"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* nonnull %6, %"class.cc::Layer"* %34, %"struct.cc::(anonymous namespace)::DataForRecursion"* nonnull dereferenceable(112) %3) #9
  store i8 0, i8* %39, align 8
  call void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* %22, i1 zeroext false) #9
  %123 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 5, i32 0, i32 2
  store i8 1, i8* %123, align 8
  %124 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 4, i32 0, i32 2
  store i8 1, i8* %124, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %94) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %72) #9
  br label %125

125:                                              ; preds = %42, %71
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #9
  call void @_ZN2cc13PropertyTrees15ResetCachedDataEv(%"class.cc::PropertyTrees"* %20) #9
  call void @_ZN2cc13LayerTreeHost17SetHasCopyRequestEb(%"class.cc::LayerTreeHost"* %0, i1 zeroext false) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2cc13PropertyTrees15ResetCachedDataEv(%"class.cc::PropertyTrees"*) local_unnamed_addr #2

declare void @_ZN2cc13LayerTreeHost17SetHasCopyRequestEb(%"class.cc::LayerTreeHost"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2cc12_GLOBAL__N_136UpdateSubtreeHasCopyRequestRecursiveEPNS_5LayerE(%"class.cc::Layer"*) unnamed_addr #3 {
  %2 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %2, align 8
  %4 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %3, i64 0, i32 19, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %3, i64 0, i32 19, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"** %8, align 8
  %10 = icmp ne %"class.std::__1::unique_ptr.111"* %7, %9
  %11 = zext i1 %10 to i8
  br label %12

12:                                               ; preds = %5, %1
  %13 = phi i8 [ 0, %1 ], [ %11, %5 ]
  %14 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %15 = load %class.scoped_refptr.69*, %class.scoped_refptr.69** %14, align 8
  %16 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %17 = load %class.scoped_refptr.69*, %class.scoped_refptr.69** %16, align 8
  %18 = icmp eq %class.scoped_refptr.69* %15, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %23, %12
  %20 = phi i8 [ %13, %12 ], [ %30, %23 ]
  %21 = and i8 %20, 1
  %22 = icmp ne i8 %21, 0
  tail call void @_ZN2cc5Layer24SetSubtreeHasCopyRequestEb(%"class.cc::Layer"* %0, i1 zeroext %22) #9
  ret i1 %22

23:                                               ; preds = %12, %23
  %24 = phi i8 [ %30, %23 ], [ %13, %12 ]
  %25 = phi %class.scoped_refptr.69* [ %31, %23 ], [ %15, %12 ]
  %26 = getelementptr inbounds %class.scoped_refptr.69, %class.scoped_refptr.69* %25, i64 0, i32 0
  %27 = load %"class.cc::Layer"*, %"class.cc::Layer"** %26, align 8
  %28 = tail call fastcc zeroext i1 @_ZN2cc12_GLOBAL__N_136UpdateSubtreeHasCopyRequestRecursiveEPNS_5LayerE(%"class.cc::Layer"* %27)
  %29 = zext i1 %28 to i8
  %30 = or i8 %24, %29
  %31 = getelementptr inbounds %class.scoped_refptr.69, %class.scoped_refptr.69* %25, i64 1
  %32 = icmp eq %class.scoped_refptr.69* %31, %17
  br i1 %32, label %19, label %23
}

declare void @_ZN2cc8ClipTree15SetViewportClipEN3gfx5RectFE(%"class.cc::ClipTree"*, <2 x float>, <2 x float>) local_unnamed_addr #2

declare void @_ZN2cc13TransformTree24SetRootScaleAndTransformEfRKN3gfx9TransformE(%"class.cc::TransformTree"*, float, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2cc13PropertyTrees5clearEv(%"class.cc::PropertyTrees"*) local_unnamed_addr #2

declare void @_ZN2cc8ClipNodeC1Ev(%"struct.cc::ClipNode"*) unnamed_addr #2

declare i32 @_ZN2cc12PropertyTreeINS_8ClipNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.264"*, %"struct.cc::ClipNode"* dereferenceable(184), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNK2cc12_GLOBAL__N_126PropertyTreeBuilderContext26BuildPropertyTreesInternalEPNS_5LayerERKNS0_16DataForRecursionE(%"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* nocapture readonly, %"class.cc::Layer"*, %"struct.cc::(anonymous namespace)::DataForRecursion"* nocapture readonly dereferenceable(112)) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"struct.cc::ScrollNode", align 8
  %6 = alloca %"struct.cc::ElementId", align 8
  %7 = alloca <2 x float>, align 8
  %8 = alloca %"class.cc::FilterOperations", align 8
  %9 = alloca %"struct.cc::ClipNode", align 8
  %10 = alloca <2 x float>, align 8
  %11 = alloca %"class.cc::ClipExpander", align 4
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca <2 x float>, align 8
  %17 = alloca <2 x float>, align 8
  %18 = alloca %"struct.cc::TransformNode", align 8
  %19 = alloca %"struct.cc::ElementId", align 8
  %20 = alloca %"class.gfx::Transform", align 4
  %21 = alloca <2 x float>, align 8
  %22 = alloca i32, align 4
  %23 = alloca %"class.cc::FilterOperations", align 8
  %24 = alloca %"class.cc::FilterOperations", align 8
  %25 = alloca %"class.gfx::Transform", align 4
  %26 = alloca %"struct.cc::EffectNode", align 8
  %27 = alloca %"class.cc::FilterOperations", align 8
  %28 = alloca %"class.cc::FilterOperations", align 8
  %29 = alloca [55 x i8], align 1
  %30 = alloca %"class.gfx::MaskFilterInfo", align 4
  %31 = alloca %"struct.cc::ElementId", align 8
  %32 = alloca %"class.std::__1::vector.109", align 8
  %33 = alloca %"struct.cc::(anonymous namespace)::DataForRecursion", align 8
  %34 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %0, i64 0, i32 3
  %35 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %34, align 8
  %36 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %35, i64 0, i32 10
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 12
  store i32 %37, i32* %38, align 4
  %39 = bitcast %"struct.cc::(anonymous namespace)::DataForRecursion"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %39) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 bitcast (%"struct.cc::(anonymous namespace)::DataForRecursion"* @__const._ZNK2cc12_GLOBAL__N_126PropertyTreeBuilderContext26BuildPropertyTreesInternalEPNS_5LayerERKNS0_16DataForRecursionE.data_for_children to i8*), i64 112, i1 false)
  %40 = bitcast %"struct.cc::(anonymous namespace)::DataForRecursion"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 %40, i64 34, i1 false) #9
  %41 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 11
  %42 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 11
  %43 = bitcast %"class.gfx::Transform"* %41 to i8*
  %44 = bitcast %"class.gfx::Transform"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %44, i64 68, i1 false) #9
  %45 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 12
  %46 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 12
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast i8** %45 to i64*
  store i64 %48, i64* %49, align 8
  %50 = inttoptr i64 %48 to i8*
  store i8 0, i8* %50, align 1
  %51 = bitcast %"class.gfx::Transform"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %51)
  %52 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 3
  %53 = load %"class.cc::Layer"*, %"class.cc::Layer"** %52, align 8
  %54 = icmp eq %"class.cc::Layer"* %53, null
  %55 = tail call float @_ZNK2cc5Layer16EffectiveOpacityEv(%"class.cc::Layer"* %1) #9
  %56 = fcmp une float %55, 1.000000e+00
  %57 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %0, i64 0, i32 2
  %58 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %57, align 8
  %59 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 5, i32 9, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = tail call i32 @_ZNK2cc5Layer26GetElementTypeForAnimationEv(%"class.cc::Layer"* %1) #9
  %62 = bitcast %"class.cc::MutatorHost"* %58 to i1 (%"class.cc::MutatorHost"*, i64, i32)***
  %63 = load i1 (%"class.cc::MutatorHost"*, i64, i32)**, i1 (%"class.cc::MutatorHost"*, i64, i32)*** %62, align 8
  %64 = getelementptr inbounds i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %63, i64 29
  %65 = load i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.cc::MutatorHost"* %58, i64 %60, i32 %61) #9
  br i1 %66, label %73, label %67

67:                                               ; preds = %3
  %68 = bitcast %"class.cc::Layer"* %1 to i1 (%"class.cc::Layer"*)***
  %69 = load i1 (%"class.cc::Layer"*)**, i1 (%"class.cc::Layer"*)*** %68, align 8
  %70 = getelementptr inbounds i1 (%"class.cc::Layer"*)*, i1 (%"class.cc::Layer"*)** %69, i64 13
  %71 = load i1 (%"class.cc::Layer"*)*, i1 (%"class.cc::Layer"*)** %70, align 8
  %72 = tail call zeroext i1 %71(%"class.cc::Layer"* %1) #9
  br label %73

73:                                               ; preds = %67, %3
  %74 = phi i1 [ true, %3 ], [ %72, %67 ]
  %75 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %57, align 8
  %76 = load i64, i64* %59, align 8
  %77 = tail call i32 @_ZNK2cc5Layer26GetElementTypeForAnimationEv(%"class.cc::Layer"* %1) #9
  %78 = bitcast %"class.cc::MutatorHost"* %75 to i1 (%"class.cc::MutatorHost"*, i64, i32)***
  %79 = load i1 (%"class.cc::MutatorHost"*, i64, i32)**, i1 (%"class.cc::MutatorHost"*, i64, i32)*** %78, align 8
  %80 = getelementptr inbounds i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %79, i64 27
  %81 = load i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %80, align 8
  %82 = tail call zeroext i1 %81(%"class.cc::MutatorHost"* %75, i64 %76, i32 %77) #9
  %83 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %57, align 8
  %84 = load i64, i64* %59, align 8
  %85 = bitcast %"class.cc::MutatorHost"* %83 to i1 (%"class.cc::MutatorHost"*, i64)***
  %86 = load i1 (%"class.cc::MutatorHost"*, i64)**, i1 (%"class.cc::MutatorHost"*, i64)*** %85, align 8
  %87 = getelementptr inbounds i1 (%"class.cc::MutatorHost"*, i64)*, i1 (%"class.cc::MutatorHost"*, i64)** %86, i64 32
  %88 = load i1 (%"class.cc::MutatorHost"*, i64)*, i1 (%"class.cc::MutatorHost"*, i64)** %87, align 8
  %89 = tail call zeroext i1 %88(%"class.cc::MutatorHost"* %83, i64 %84) #9
  %90 = zext i1 %89 to i8
  %91 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 8
  %92 = load i8, i8* %91, align 8, !range !2
  %93 = and i8 %92, %90
  store i8 %93, i8* %91, align 8
  %94 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %95 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %96 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %95, null
  %97 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %95, i64 0, i32 6
  %98 = select i1 %96, %"class.gfx::Transform"* bitcast ({ { [4 x [4 x float]], i8 } }* @_ZN2cc5Layer18kIdentityTransformE to %"class.gfx::Transform"*), %"class.gfx::Transform"* %97
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* %41, %"class.gfx::Transform"* dereferenceable(68) %98) #9
  %99 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %57, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 %43, i64 68, i1 false) #9
  %100 = load i8, i8* %91, align 8, !range !2
  %101 = icmp ne i8 %100, 0
  %102 = call zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"* nonnull %25) #9
  %103 = and i1 %102, %101
  %104 = load %"class.cc::Layer"*, %"class.cc::Layer"** %52, align 8
  %105 = icmp eq %"class.cc::Layer"* %104, null
  br i1 %105, label %265, label %106

106:                                              ; preds = %73
  %107 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %108 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %107, null
  br i1 %108, label %121, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %107, i64 0, i32 1
  %111 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %110, align 8
  %112 = icmp eq %"class.cc::PictureLayer"* %111, null
  br i1 %112, label %113, label %265

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %107, i64 0, i32 4
  %115 = load i8, i8* %114, align 8
  %116 = and i8 %115, 16
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %265

118:                                              ; preds = %113
  %119 = bitcast %"class.cc::FilterOperations"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #9
  %120 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %107, i64 0, i32 10
  call void @_ZN2cc16FilterOperationsC1ERKS0_(%"class.cc::FilterOperations"* nonnull %23, %"class.cc::FilterOperations"* dereferenceable(24) %120) #9
  br label %123

121:                                              ; preds = %106
  %122 = bitcast %"class.cc::FilterOperations"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #9
  call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* nonnull %23) #9
  br label %123

123:                                              ; preds = %121, %118
  %124 = phi i8* [ %119, %118 ], [ %122, %121 ]
  %125 = call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* nonnull %23) #9
  call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #9
  br i1 %125, label %126, label %265

126:                                              ; preds = %123
  %127 = bitcast %"class.cc::FilterOperations"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #9
  %128 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8, !noalias !3
  %129 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %128, i64 0, i32 11
  call void @_ZN2cc16FilterOperationsC1ERKS0_(%"class.cc::FilterOperations"* nonnull %24, %"class.cc::FilterOperations"* dereferenceable(24) %131) #9
  br label %133

132:                                              ; preds = %126
  call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* nonnull %24) #9
  br label %133

133:                                              ; preds = %132, %130
  %134 = call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* nonnull %24) #9
  call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* nonnull %24) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #9
  br i1 %134, label %135, label %265

135:                                              ; preds = %133
  %136 = load i64, i64* %59, align 8
  %137 = call i32 @_ZNK2cc5Layer26GetElementTypeForAnimationEv(%"class.cc::Layer"* %1) #9
  %138 = bitcast %"class.cc::MutatorHost"* %99 to i1 (%"class.cc::MutatorHost"*, i64, i32)***
  %139 = load i1 (%"class.cc::MutatorHost"*, i64, i32)**, i1 (%"class.cc::MutatorHost"*, i64, i32)*** %138, align 8
  %140 = getelementptr inbounds i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %139, i64 27
  %141 = load i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %140, align 8
  %142 = call zeroext i1 %141(%"class.cc::MutatorHost"* %99, i64 %136, i32 %137) #9
  br i1 %142, label %265, label %143

143:                                              ; preds = %135
  %144 = call i32 @_ZNK2cc5Layer29NumDescendantsThatDrawContentEv(%"class.cc::Layer"* %1) #9
  %145 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %146 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %145, null
  br i1 %146, label %152, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %145, i64 0, i32 4
  %149 = load i8, i8* %148, align 8
  %150 = and i8 %149, 2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %175

152:                                              ; preds = %147, %143
  %153 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %145, i64 0, i32 17
  %154 = select i1 %146, %"class.gfx::RoundedCornersF"* @_ZN2cc5Layer18kNoRoundedCornersFE, %"class.gfx::RoundedCornersF"* %153
  %155 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %154, i64 0, i32 0
  %156 = load float, float* %155, align 4
  %157 = fcmp oeq float %156, 0.000000e+00
  br i1 %157, label %158, label %170

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %154, i64 0, i32 1
  %160 = load float, float* %159, align 4
  %161 = fcmp oeq float %160, 0.000000e+00
  br i1 %161, label %162, label %170

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %154, i64 0, i32 2
  %164 = load float, float* %163, align 4
  %165 = fcmp oeq float %164, 0.000000e+00
  br i1 %165, label %166, label %170

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %154, i64 0, i32 3
  %168 = load float, float* %167, align 4
  %169 = fcmp une float %168, 0.000000e+00
  br label %170

170:                                              ; preds = %166, %162, %158, %152
  %171 = phi i1 [ true, %162 ], [ true, %158 ], [ true, %152 ], [ %169, %166 ]
  %172 = icmp sgt i32 %144, 1
  %173 = and i1 %172, %171
  br i1 %173, label %265, label %174

174:                                              ; preds = %170
  br i1 %146, label %188, label %175

175:                                              ; preds = %174, %147
  %176 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %145, i64 0, i32 3
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, 3
  br i1 %178, label %179, label %265

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %145, i64 0, i32 4
  %181 = load i8, i8* %180, align 8
  %182 = and i8 %181, 1
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %184, label %216

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %145, i64 0, i32 1
  %186 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %185, align 8
  %187 = icmp eq %"class.cc::PictureLayer"* %186, null
  br i1 %187, label %188, label %216

188:                                              ; preds = %184, %174
  %189 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %145, i64 0, i32 17
  %190 = select i1 %146, %"class.gfx::RoundedCornersF"* @_ZN2cc5Layer18kNoRoundedCornersFE, %"class.gfx::RoundedCornersF"* %189
  %191 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %190, i64 0, i32 0
  %192 = load float, float* %191, align 4
  %193 = fcmp oeq float %192, 0.000000e+00
  br i1 %193, label %194, label %216

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %190, i64 0, i32 1
  %196 = load float, float* %195, align 4
  %197 = fcmp oeq float %196, 0.000000e+00
  br i1 %197, label %198, label %216

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %190, i64 0, i32 2
  %200 = load float, float* %199, align 4
  %201 = fcmp oeq float %200, 0.000000e+00
  br i1 %201, label %202, label %216

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %190, i64 0, i32 3
  %204 = load float, float* %203, align 4
  %205 = fcmp une float %204, 0.000000e+00
  %206 = or i1 %146, %205
  br i1 %206, label %215, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %145, i64 0, i32 0, i32 1
  %209 = bitcast %"class.gfx::Size"* %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = trunc i64 %210 to i32
  %212 = icmp ne i32 %211, 0
  %213 = icmp ugt i64 %210, 4294967295
  %214 = and i1 %213, %212
  br i1 %214, label %216, label %220

215:                                              ; preds = %202
  br i1 %205, label %216, label %220

216:                                              ; preds = %215, %207, %198, %194, %188, %184, %179
  %217 = xor i1 %103, true
  %218 = icmp sgt i32 %144, 0
  %219 = and i1 %218, %217
  br i1 %219, label %265, label %220

220:                                              ; preds = %216, %215, %207
  %221 = icmp sgt i32 %144, 0
  br i1 %221, label %222, label %226

222:                                              ; preds = %220
  %223 = call zeroext i1 @_ZNK2cc5Layer12DrawsContentEv(%"class.cc::Layer"* %1) #9
  %224 = icmp ne i32 %144, 1
  %225 = or i1 %224, %223
  br label %226

226:                                              ; preds = %222, %220
  %227 = phi i1 [ false, %220 ], [ %225, %222 ]
  %228 = call float @_ZNK2cc5Layer16EffectiveOpacityEv(%"class.cc::Layer"* %1) #9
  %229 = fcmp une float %228, 1.000000e+00
  br i1 %229, label %238, label %230

230:                                              ; preds = %226
  %231 = load i64, i64* %59, align 8
  %232 = call i32 @_ZNK2cc5Layer26GetElementTypeForAnimationEv(%"class.cc::Layer"* %1) #9
  %233 = load i1 (%"class.cc::MutatorHost"*, i64, i32)**, i1 (%"class.cc::MutatorHost"*, i64, i32)*** %138, align 8
  %234 = getelementptr inbounds i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %233, i64 29
  %235 = load i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %234, align 8
  %236 = call zeroext i1 %235(%"class.cc::MutatorHost"* %99, i64 %231, i32 %232) #9
  %237 = and i1 %227, %236
  br i1 %237, label %265, label %239

238:                                              ; preds = %226
  br i1 %227, label %265, label %239

239:                                              ; preds = %238, %230
  %240 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 15
  %241 = load i16, i16* %240, align 1
  %242 = and i16 %241, 8
  %243 = icmp eq i16 %242, 0
  br i1 %243, label %244, label %265

244:                                              ; preds = %239
  %245 = and i16 %241, 4
  %246 = icmp eq i16 %245, 0
  br i1 %246, label %247, label %265

247:                                              ; preds = %244
  %248 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %249 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %248, null
  br i1 %249, label %265, label %250

250:                                              ; preds = %247
  %251 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %248, i64 0, i32 19, i32 0, i32 0
  %252 = load %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"** %251, align 8
  %253 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %248, i64 0, i32 19, i32 0, i32 1
  %254 = load %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"** %253, align 8
  %255 = icmp eq %"class.std::__1::unique_ptr.111"* %252, %254
  br i1 %255, label %256, label %265

256:                                              ; preds = %250
  %257 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %248, i64 0, i32 14
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %265

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %248, i64 0, i32 8, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = icmp eq i32 %262, 0
  %264 = select i1 %263, i8 0, i8 20
  br label %265

265:                                              ; preds = %260, %256, %250, %247, %244, %239, %238, %230, %216, %175, %170, %135, %133, %123, %113, %109, %73
  %266 = phi i8 [ %264, %260 ], [ 1, %73 ], [ 15, %109 ], [ 16, %113 ], [ 8, %123 ], [ 10, %133 ], [ 9, %135 ], [ 12, %170 ], [ 4, %175 ], [ 14, %216 ], [ 6, %230 ], [ 6, %238 ], [ 22, %239 ], [ 17, %244 ], [ 18, %250 ], [ 19, %256 ], [ 0, %247 ]
  %267 = icmp ne i8 %266, 0
  %268 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 9
  %269 = load i8, i8* %268, align 1, !range !2
  %270 = icmp eq i8 %269, 0
  br i1 %270, label %271, label %285

271:                                              ; preds = %265
  %272 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %57, align 8
  %273 = load i64, i64* %59, align 8
  %274 = bitcast %"class.cc::MutatorHost"* %272 to i1 (%"class.cc::MutatorHost"*, i64)***
  %275 = load i1 (%"class.cc::MutatorHost"*, i64)**, i1 (%"class.cc::MutatorHost"*, i64)*** %274, align 8
  %276 = getelementptr inbounds i1 (%"class.cc::MutatorHost"*, i64)*, i1 (%"class.cc::MutatorHost"*, i64)** %275, i64 32
  %277 = load i1 (%"class.cc::MutatorHost"*, i64)*, i1 (%"class.cc::MutatorHost"*, i64)** %276, align 8
  %278 = call zeroext i1 %277(%"class.cc::MutatorHost"* %272, i64 %273) #9
  br i1 %278, label %279, label %285

279:                                              ; preds = %271
  %280 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %281 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %280, null
  %282 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %280, i64 0, i32 6
  %283 = select i1 %281, %"class.gfx::Transform"* bitcast ({ { [4 x [4 x float]], i8 } }* @_ZN2cc5Layer18kIdentityTransformE to %"class.gfx::Transform"*), %"class.gfx::Transform"* %282
  %284 = call zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"* %283) #9
  br i1 %284, label %324, label %285

285:                                              ; preds = %279, %271, %265
  %286 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %287 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %286, null
  br i1 %287, label %297, label %288

288:                                              ; preds = %285
  %289 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %286, i64 0, i32 4
  %290 = load i8, i8* %289, align 8
  %291 = and i8 %290, 1
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %293, label %347

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %286, i64 0, i32 1
  %295 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %294, align 8
  %296 = icmp eq %"class.cc::PictureLayer"* %295, null
  br i1 %296, label %297, label %347

297:                                              ; preds = %293, %285
  %298 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %286, i64 0, i32 17
  %299 = select i1 %287, %"class.gfx::RoundedCornersF"* @_ZN2cc5Layer18kNoRoundedCornersFE, %"class.gfx::RoundedCornersF"* %298
  %300 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %299, i64 0, i32 0
  %301 = load float, float* %300, align 4
  %302 = fcmp oeq float %301, 0.000000e+00
  br i1 %302, label %303, label %347

303:                                              ; preds = %297
  %304 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %299, i64 0, i32 1
  %305 = load float, float* %304, align 4
  %306 = fcmp oeq float %305, 0.000000e+00
  br i1 %306, label %307, label %347

307:                                              ; preds = %303
  %308 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %299, i64 0, i32 2
  %309 = load float, float* %308, align 4
  %310 = fcmp oeq float %309, 0.000000e+00
  br i1 %310, label %311, label %347

311:                                              ; preds = %307
  %312 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %299, i64 0, i32 3
  %313 = load float, float* %312, align 4
  %314 = fcmp une float %313, 0.000000e+00
  %315 = or i1 %287, %314
  br i1 %315, label %324, label %316

316:                                              ; preds = %311
  %317 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %286, i64 0, i32 0, i32 1
  %318 = bitcast %"class.gfx::Size"* %317 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = trunc i64 %319 to i32
  %321 = icmp ne i32 %320, 0
  %322 = icmp ugt i64 %319, 4294967295
  %323 = and i1 %322, %321
  br label %324

324:                                              ; preds = %316, %311, %279
  %325 = phi i1 [ false, %279 ], [ %323, %316 ], [ %314, %311 ]
  %326 = or i1 %54, %56
  %327 = or i1 %326, %74
  %328 = or i1 %327, %82
  %329 = or i1 %328, %325
  %330 = or i1 %267, %329
  br i1 %330, label %347, label %331

331:                                              ; preds = %324
  %332 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %333 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %332, null
  %334 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %332, i64 0, i32 17
  %335 = select i1 %333, %"class.gfx::RoundedCornersF"* @_ZN2cc5Layer18kNoRoundedCornersFE, %"class.gfx::RoundedCornersF"* %334
  %336 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %335, i64 0, i32 0
  %337 = load float, float* %336, align 4
  %338 = fcmp oeq float %337, 0.000000e+00
  br i1 %338, label %339, label %347

339:                                              ; preds = %331
  %340 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %335, i64 0, i32 1
  %341 = load float, float* %340, align 4
  %342 = fcmp oeq float %341, 0.000000e+00
  br i1 %342, label %343, label %347

343:                                              ; preds = %339
  %344 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %335, i64 0, i32 2
  %345 = load float, float* %344, align 4
  %346 = fcmp oeq float %345, 0.000000e+00
  br i1 %346, label %350, label %347

347:                                              ; preds = %343, %339, %331, %324, %307, %303, %297, %293, %288
  %348 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 2
  %349 = load i32, i32* %348, align 8
  br label %358

350:                                              ; preds = %343
  %351 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %335, i64 0, i32 3
  %352 = load float, float* %351, align 4
  %353 = fcmp une float %352, 0.000000e+00
  %354 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 2
  %355 = load i32, i32* %354, align 8
  br i1 %353, label %358, label %356

356:                                              ; preds = %350
  call void @_ZN2cc5Layer18SetEffectTreeIndexEi(%"class.cc::Layer"* %1, i32 %355) #9
  %357 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 2
  store i32 %355, i32* %357, align 8
  br label %818

358:                                              ; preds = %350, %347
  %359 = phi i32 [ %349, %347 ], [ %355, %350 ]
  %360 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %0, i64 0, i32 6
  %361 = load %"class.cc::EffectTree"*, %"class.cc::EffectTree"** %360, align 8
  %362 = bitcast %"struct.cc::EffectNode"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %362) #9
  call void @_ZN2cc10EffectNodeC1Ev(%"struct.cc::EffectNode"* nonnull %26) #9
  %363 = call i32 @_ZN2cc10EffectTree6InsertERKNS_10EffectNodeEi(%"class.cc::EffectTree"* %361, %"struct.cc::EffectNode"* nonnull dereferenceable(288) %26, i32 %359) #9
  call void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %362) #9
  %364 = bitcast %"class.cc::EffectTree"** %360 to %"class.cc::PropertyTree.210"**
  %365 = load %"class.cc::PropertyTree.210"*, %"class.cc::PropertyTree.210"** %364, align 8
  %366 = getelementptr inbounds %"class.cc::PropertyTree.210", %"class.cc::PropertyTree.210"* %365, i64 0, i32 1
  %367 = getelementptr inbounds %"class.cc::PropertyTree.210", %"class.cc::PropertyTree.210"* %365, i64 0, i32 1, i32 0, i32 1
  %368 = bitcast %"struct.cc::EffectNode"** %367 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = bitcast %"class.std::__1::vector.211"* %366 to i64*
  %371 = load i64, i64* %370, align 8
  %372 = icmp eq i64 %369, %371
  %373 = inttoptr i64 %369 to %"struct.cc::EffectNode"*
  %374 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %373, i64 -1
  %375 = select i1 %372, %"struct.cc::EffectNode"* null, %"struct.cc::EffectNode"* %374
  %376 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 5, i32 3
  %377 = load i32, i32* %376, align 8
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 2
  store i64 %378, i64* %379, align 8
  %380 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %381 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %380, null
  br i1 %381, label %385, label %382

382:                                              ; preds = %358
  %383 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %380, i64 0, i32 2
  %384 = load float, float* %383, align 8
  br label %385

385:                                              ; preds = %382, %358
  %386 = phi float [ %384, %382 ], [ 1.000000e+00, %358 ]
  %387 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 3
  store float %386, float* %387, align 8
  %388 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %389 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %388, null
  br i1 %389, label %393, label %390

390:                                              ; preds = %385
  %391 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %388, i64 0, i32 3
  %392 = load i32, i32* %391, align 4
  br label %393

393:                                              ; preds = %390, %385
  %394 = phi i32 [ %392, %390 ], [ 3, %385 ]
  %395 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 12
  store i32 %394, i32* %395, align 4
  %396 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %397 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %396, null
  br i1 %397, label %398, label %400

398:                                              ; preds = %393
  %399 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 14, i32 0
  store i32 0, i32* %399, align 8
  br label %414

400:                                              ; preds = %393
  %401 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %396, i64 0, i32 8, i32 0
  %402 = load i32, i32* %401, align 4
  %403 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 14, i32 0
  store i32 %402, i32* %403, align 8
  %404 = icmp eq i32 %402, 0
  br i1 %404, label %414, label %405

405:                                              ; preds = %400
  %406 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 5, i32 2
  %407 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %0, i64 0, i32 0
  %408 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %407, align 8
  %409 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %408, i64 0, i32 35
  %410 = load float, float* %409, align 8
  %411 = call i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8) %406, float %410) #9
  %412 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 15
  %413 = bitcast %"class.gfx::Size"* %412 to i64*
  store i64 %411, i64* %413, align 4
  br label %414

414:                                              ; preds = %405, %400, %398
  %415 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 15
  %416 = load i16, i16* %415, align 1
  %417 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 16
  %418 = bitcast [3 x i8]* %417 to i24*
  %419 = lshr i16 %416, 2
  %420 = and i16 %419, 1
  %421 = zext i16 %420 to i24
  %422 = load i24, i24* %418, align 4
  %423 = and i24 %422, -2
  %424 = or i24 %423, %421
  store i24 %424, i24* %418, align 4
  %425 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %426 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %425, null
  br i1 %426, label %433, label %427

427:                                              ; preds = %414
  %428 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %425, i64 0, i32 19, i32 0, i32 0
  %429 = load %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"** %428, align 8
  %430 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %425, i64 0, i32 19, i32 0, i32 1
  %431 = load %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"** %430, align 8
  %432 = icmp ne %"class.std::__1::unique_ptr.111"* %429, %431
  br label %433

433:                                              ; preds = %427, %414
  %434 = phi i1 [ false, %414 ], [ %432, %427 ]
  %435 = zext i1 %434 to i24
  %436 = shl nuw nsw i24 %435, 1
  %437 = and i24 %424, -3
  %438 = or i24 %436, %437
  store i24 %438, i24* %418, align 4
  %439 = bitcast %"class.cc::FilterOperations"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %439) #9
  %440 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8, !noalias !6
  %441 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %440, null
  br i1 %441, label %444, label %442

442:                                              ; preds = %433
  %443 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %440, i64 0, i32 10
  call void @_ZN2cc16FilterOperationsC1ERKS0_(%"class.cc::FilterOperations"* nonnull %27, %"class.cc::FilterOperations"* dereferenceable(24) %443) #9
  br label %445

444:                                              ; preds = %433
  call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* nonnull %27) #9
  br label %445

445:                                              ; preds = %444, %442
  %446 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 5
  %447 = call dereferenceable(24) %"class.cc::FilterOperations"* @_ZN2cc16FilterOperationsaSEOS0_(%"class.cc::FilterOperations"* %446, %"class.cc::FilterOperations"* nonnull dereferenceable(24) %27) #9
  call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %439) #9
  %448 = bitcast %"class.cc::FilterOperations"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %448) #9
  %449 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8, !noalias !9
  %450 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %449, i64 0, i32 11
  call void @_ZN2cc16FilterOperationsC1ERKS0_(%"class.cc::FilterOperations"* nonnull %28, %"class.cc::FilterOperations"* dereferenceable(24) %452) #9
  br label %454

453:                                              ; preds = %445
  call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* nonnull %28) #9
  br label %454

454:                                              ; preds = %453, %451
  %455 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 6
  %456 = call dereferenceable(24) %"class.cc::FilterOperations"* @_ZN2cc16FilterOperationsaSEOS0_(%"class.cc::FilterOperations"* %455, %"class.cc::FilterOperations"* nonnull dereferenceable(24) %28) #9
  call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* nonnull %28) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %448) #9
  %457 = getelementptr inbounds [55 x i8], [55 x i8]* %29, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 55, i8* nonnull %457)
  %458 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8, !noalias !12
  %459 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %458, null
  br i1 %459, label %465, label %460

460:                                              ; preds = %454
  %461 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %458, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %462 = load i8, i8* %461, align 8
  %463 = bitcast %"struct.cc::Layer::LayerTreeInputs"* %458 to i8*
  %464 = getelementptr inbounds i8, i8* %463, i64 185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %457, i8* align 1 %464, i64 55, i1 false) #9
  br label %467

465:                                              ; preds = %454
  %466 = getelementptr inbounds [55 x i8], [55 x i8]* %29, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* align 1 %466, i8 0, i64 52, i1 false), !alias.scope !12
  br label %467

467:                                              ; preds = %465, %460
  %468 = phi i8 [ 0, %465 ], [ %462, %460 ]
  %469 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 %468, i8* %469, align 8
  %470 = bitcast %"struct.cc::EffectNode"* %375 to i8*
  %471 = getelementptr inbounds i8, i8* %470, i64 73
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %471, i8* nonnull align 1 %457, i64 55, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 55, i8* nonnull %457)
  %472 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %473 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %472, null
  br i1 %473, label %477, label %474

474:                                              ; preds = %467
  %475 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %472, i64 0, i32 13
  %476 = load float, float* %475, align 8
  br label %477

477:                                              ; preds = %474, %467
  %478 = phi float [ %476, %474 ], [ 1.000000e+00, %467 ]
  %479 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 8
  store float %478, float* %479, align 8
  %480 = call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* %455) #9
  br i1 %480, label %499, label %481

481:                                              ; preds = %477
  %482 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %483 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %482, null
  br i1 %483, label %507, label %484

484:                                              ; preds = %481
  %485 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %482, i64 0, i32 1
  %486 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %485, align 8
  %487 = icmp eq %"class.cc::PictureLayer"* %486, null
  br i1 %487, label %499, label %488

488:                                              ; preds = %484
  %489 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %486, i64 0, i32 0, i32 5, i32 9, i32 0
  %490 = load i64, i64* %489, align 8
  %491 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 10, i32 0
  store i64 %490, i64* %491, align 8
  %492 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %493 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %492, null
  br i1 %493, label %497, label %494

494:                                              ; preds = %488
  %495 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %492, i64 0, i32 1
  %496 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %495, align 8
  br label %497

497:                                              ; preds = %494, %488
  %498 = phi %"class.cc::PictureLayer"* [ %496, %494 ], [ null, %488 ]
  call void @_ZN2cc12PictureLayer23SetIsBackdropFilterMaskEb(%"class.cc::PictureLayer"* %498, i1 zeroext true) #9
  br label %499

499:                                              ; preds = %497, %484, %477
  %500 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %501 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %500, null
  br i1 %501, label %507, label %502

502:                                              ; preds = %499
  %503 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %500, i64 0, i32 4
  %504 = load i8, i8* %503, align 8
  %505 = and i8 %504, 16
  %506 = icmp ne i8 %505, 0
  br label %507

507:                                              ; preds = %502, %499, %481
  %508 = phi i1 [ false, %499 ], [ %506, %502 ], [ false, %481 ]
  %509 = zext i1 %508 to i24
  %510 = load i24, i24* %418, align 4
  %511 = shl nuw nsw i24 %509, 4
  %512 = and i24 %510, -1297
  %513 = zext i1 %74 to i24
  %514 = shl nuw nsw i24 %513, 10
  %515 = zext i1 %82 to i24
  %516 = shl nuw nsw i24 %515, 8
  %517 = or i24 %516, %514
  %518 = or i24 %517, %511
  %519 = or i24 %518, %512
  store i24 %519, i24* %418, align 4
  %520 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %521 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %520, null
  br i1 %521, label %527, label %522

522:                                              ; preds = %507
  %523 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %520, i64 0, i32 4
  %524 = load i8, i8* %523, align 8
  %525 = and i8 %524, 32
  %526 = icmp ne i8 %525, 0
  br label %527

527:                                              ; preds = %522, %507
  %528 = phi i1 [ false, %507 ], [ %526, %522 ]
  %529 = zext i1 %528 to i24
  %530 = shl nuw nsw i24 %529, 7
  %531 = and i24 %519, -129
  %532 = or i24 %530, %531
  store i24 %532, i24* %418, align 4
  %533 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %57, align 8
  %534 = load i64, i64* %59, align 8
  %535 = call i32 @_ZNK2cc5Layer26GetElementTypeForAnimationEv(%"class.cc::Layer"* %1) #9
  %536 = bitcast %"class.cc::MutatorHost"* %533 to i1 (%"class.cc::MutatorHost"*, i64, i32)***
  %537 = load i1 (%"class.cc::MutatorHost"*, i64, i32)**, i1 (%"class.cc::MutatorHost"*, i64, i32)*** %536, align 8
  %538 = getelementptr inbounds i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %537, i64 25
  %539 = load i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %538, align 8
  %540 = call zeroext i1 %539(%"class.cc::MutatorHost"* %533, i64 %534, i32 %535) #9
  %541 = zext i1 %540 to i24
  %542 = load i24, i24* %418, align 4
  %543 = shl nuw nsw i24 %541, 13
  %544 = and i24 %542, -8193
  %545 = or i24 %544, %543
  store i24 %545, i24* %418, align 4
  %546 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %57, align 8
  %547 = load i64, i64* %59, align 8
  %548 = call i32 @_ZNK2cc5Layer26GetElementTypeForAnimationEv(%"class.cc::Layer"* %1) #9
  %549 = bitcast %"class.cc::MutatorHost"* %546 to i1 (%"class.cc::MutatorHost"*, i64, i32)***
  %550 = load i1 (%"class.cc::MutatorHost"*, i64, i32)**, i1 (%"class.cc::MutatorHost"*, i64, i32)*** %549, align 8
  %551 = getelementptr inbounds i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %550, i64 23
  %552 = load i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %551, align 8
  %553 = call zeroext i1 %552(%"class.cc::MutatorHost"* %546, i64 %547, i32 %548) #9
  %554 = zext i1 %553 to i24
  %555 = load i24, i24* %418, align 4
  %556 = shl nuw nsw i24 %554, 11
  %557 = and i24 %555, -2049
  %558 = or i24 %557, %556
  store i24 %558, i24* %418, align 4
  %559 = load i16, i16* %415, align 1
  %560 = lshr i16 %559, 4
  %561 = shl i16 %560, 15
  %562 = zext i16 %561 to i24
  %563 = and i24 %558, -32769
  %564 = or i24 %563, %562
  store i24 %564, i24* %418, align 4
  %565 = call zeroext i1 @_ZNK2cc5Layer21SubtreeHasCopyRequestEv(%"class.cc::Layer"* %1) #9
  %566 = zext i1 %565 to i24
  %567 = load i24, i24* %418, align 4
  %568 = shl nuw nsw i24 %566, 16
  %569 = and i24 %567, -65537
  %570 = or i24 %569, %568
  store i24 %570, i24* %418, align 4
  %571 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 17
  store i8 %266, i8* %571, align 1
  %572 = load i16, i16* %415, align 1
  %573 = and i16 %572, 4
  %574 = icmp eq i16 %573, 0
  %575 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 4
  %576 = load i32, i32* %575, align 8
  %577 = select i1 %574, i32 %576, i32 %363
  %578 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 21
  store i32 %577, i32* %578, align 4
  %579 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %580 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %579, null
  br i1 %580, label %581, label %584

581:                                              ; preds = %527
  %582 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 5
  %583 = load i32, i32* %582, align 4
  br label %593

584:                                              ; preds = %527
  %585 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %579, i64 0, i32 19, i32 0, i32 0
  %586 = load %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"** %585, align 8
  %587 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %579, i64 0, i32 19, i32 0, i32 1
  %588 = load %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"** %587, align 8
  %589 = icmp eq %"class.std::__1::unique_ptr.111"* %586, %588
  %590 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 5
  %591 = load i32, i32* %590, align 4
  %592 = select i1 %589, i32 %591, i32 %363
  br label %593

593:                                              ; preds = %584, %581
  %594 = phi i32 [ %583, %581 ], [ %592, %584 ]
  %595 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 22
  store i32 %594, i32* %595, align 8
  %596 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %597 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %596, null
  br i1 %597, label %598, label %601

598:                                              ; preds = %593
  %599 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 6
  %600 = load i32, i32* %599, align 8
  br label %608

601:                                              ; preds = %593
  %602 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %596, i64 0, i32 8, i32 0
  %603 = load i32, i32* %602, align 4
  %604 = icmp eq i32 %603, 0
  %605 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 6
  %606 = load i32, i32* %605, align 8
  %607 = select i1 %604, i32 %606, i32 %363
  br label %608

608:                                              ; preds = %601, %598
  %609 = phi i32 [ %600, %598 ], [ %607, %601 ]
  %610 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 23
  store i32 %609, i32* %610, align 4
  %611 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %612 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %611, null
  %613 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %611, i64 0, i32 17
  %614 = select i1 %612, %"class.gfx::RoundedCornersF"* @_ZN2cc5Layer18kNoRoundedCornersFE, %"class.gfx::RoundedCornersF"* %613
  %615 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %614, i64 0, i32 0
  %616 = load float, float* %615, align 4
  %617 = fcmp oeq float %616, 0.000000e+00
  br i1 %617, label %618, label %630

618:                                              ; preds = %608
  %619 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %614, i64 0, i32 1
  %620 = load float, float* %619, align 4
  %621 = fcmp oeq float %620, 0.000000e+00
  br i1 %621, label %622, label %630

622:                                              ; preds = %618
  %623 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %614, i64 0, i32 2
  %624 = load float, float* %623, align 4
  %625 = fcmp oeq float %624, 0.000000e+00
  br i1 %625, label %626, label %630

626:                                              ; preds = %622
  %627 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %614, i64 0, i32 3
  %628 = load float, float* %627, align 4
  %629 = fcmp une float %628, 0.000000e+00
  br i1 %629, label %630, label %668

630:                                              ; preds = %626, %622, %618, %608
  %631 = bitcast %"class.gfx::MaskFilterInfo"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %631) #9
  %632 = call { <2 x float>, <2 x float> } @_ZN2cc5Layer17EffectiveClipRectEv(%"class.cc::Layer"* %1) #9
  %633 = extractvalue { <2 x float>, <2 x float> } %632, 0
  %634 = extractvalue { <2 x float>, <2 x float> } %632, 1
  %635 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %636 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %635, null
  %637 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %635, i64 0, i32 17
  %638 = select i1 %636, %"class.gfx::RoundedCornersF"* @_ZN2cc5Layer18kNoRoundedCornersFE, %"class.gfx::RoundedCornersF"* %637
  %639 = getelementptr inbounds %"class.gfx::MaskFilterInfo", %"class.gfx::MaskFilterInfo"* %30, i64 0, i32 0
  %640 = extractelement <2 x float> %633, i32 0
  %641 = extractelement <2 x float> %633, i32 1
  %642 = extractelement <2 x float> %634, i32 0
  %643 = extractelement <2 x float> %634, i32 1
  %644 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %638, i64 0, i32 0
  %645 = load float, float* %644, align 4
  %646 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %638, i64 0, i32 1
  %647 = load float, float* %646, align 4
  %648 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %638, i64 0, i32 2
  %649 = load float, float* %648, align 4
  %650 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %638, i64 0, i32 3
  %651 = load float, float* %650, align 4
  call void @_ZN3gfx6RRectFC2Effffffffffff(%"class.gfx::RRectF"* nonnull %639, float %640, float %641, float %642, float %643, float %645, float %645, float %647, float %647, float %649, float %649, float %651, float %651) #9
  %652 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 11
  %653 = bitcast %"class.gfx::MaskFilterInfo"* %652 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %653, i8* nonnull align 4 %631, i64 52, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %631) #9
  %654 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %655 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %654, null
  br i1 %655, label %663, label %656

656:                                              ; preds = %630
  %657 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %654, i64 0, i32 4
  %658 = load i8, i8* %657, align 8
  %659 = lshr i8 %658, 1
  %660 = and i8 %659, 1
  %661 = zext i8 %660 to i24
  %662 = shl nuw nsw i24 %661, 17
  br label %663

663:                                              ; preds = %656, %630
  %664 = phi i24 [ 0, %630 ], [ %662, %656 ]
  %665 = load i24, i24* %418, align 4
  %666 = and i24 %665, -131073
  %667 = or i24 %666, %664
  store i24 %667, i24* %418, align 4
  br label %668

668:                                              ; preds = %663, %626
  br i1 %54, label %707, label %669

669:                                              ; preds = %668
  br i1 %267, label %690, label %670

670:                                              ; preds = %669
  %671 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %672 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %671, null
  %673 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %671, i64 0, i32 17
  %674 = select i1 %672, %"class.gfx::RoundedCornersF"* @_ZN2cc5Layer18kNoRoundedCornersFE, %"class.gfx::RoundedCornersF"* %673
  %675 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %674, i64 0, i32 0
  %676 = load float, float* %675, align 4
  %677 = fcmp oeq float %676, 0.000000e+00
  br i1 %677, label %678, label %690

678:                                              ; preds = %670
  %679 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %674, i64 0, i32 1
  %680 = load float, float* %679, align 4
  %681 = fcmp oeq float %680, 0.000000e+00
  br i1 %681, label %682, label %690

682:                                              ; preds = %678
  %683 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %674, i64 0, i32 2
  %684 = load float, float* %683, align 4
  %685 = fcmp oeq float %684, 0.000000e+00
  br i1 %685, label %686, label %690

686:                                              ; preds = %682
  %687 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %674, i64 0, i32 3
  %688 = load float, float* %687, align 4
  %689 = fcmp une float %688, 0.000000e+00
  br i1 %689, label %690, label %704

690:                                              ; preds = %686, %682, %678, %670, %669
  %691 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %0, i64 0, i32 4
  %692 = bitcast %"class.cc::TransformTree"** %691 to %"class.cc::PropertyTree"**
  %693 = load %"class.cc::PropertyTree"*, %"class.cc::PropertyTree"** %692, align 8
  %694 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %693, i64 0, i32 1
  %695 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %693, i64 0, i32 1, i32 0, i32 1
  %696 = bitcast %"struct.cc::TransformNode"** %695 to i64*
  %697 = load i64, i64* %696, align 8
  %698 = bitcast %"class.std::__1::vector.182"* %694 to i64*
  %699 = load i64, i64* %698, align 8
  %700 = sub i64 %697, %699
  %701 = sdiv exact i64 %700, 224
  %702 = trunc i64 %701 to i32
  %703 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 18
  store i32 %702, i32* %703, align 8
  br label %704

704:                                              ; preds = %690, %686
  %705 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 1
  %706 = load i32, i32* %705, align 4
  br label %709

707:                                              ; preds = %668
  %708 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 18
  store i32 0, i32* %708, align 8
  br label %709

709:                                              ; preds = %707, %704
  %710 = phi i32 [ 1, %707 ], [ %706, %704 ]
  %711 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %375, i64 0, i32 19
  store i32 %710, i32* %711, align 4
  %712 = load i32, i32* %578, align 4
  %713 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 4
  store i32 %712, i32* %713, align 8
  %714 = load i32, i32* %595, align 8
  %715 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 5
  store i32 %714, i32* %715, align 4
  %716 = load i32, i32* %610, align 4
  %717 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 6
  store i32 %716, i32* %717, align 8
  %718 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 2
  store i32 %363, i32* %718, align 8
  call void @_ZN2cc5Layer18SetEffectTreeIndexEi(%"class.cc::Layer"* %1, i32 %363) #9
  %719 = load i64, i64* %59, align 8
  %720 = icmp eq i64 %719, 0
  br i1 %720, label %764, label %721

721:                                              ; preds = %709
  %722 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %34, align 8
  %723 = bitcast %"struct.cc::ElementId"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %723) #9
  %724 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %31, i64 0, i32 0
  store i64 %719, i64* %724, align 8
  %725 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %722, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %726 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %725, align 8
  %727 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %722, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %728 = bitcast %"struct.std::__1::pair.176"** %727 to i64*
  %729 = load i64, i64* %728, align 8
  %730 = ptrtoint %"struct.std::__1::pair.176"* %726 to i64
  %731 = sub i64 %729, %730
  %732 = icmp eq i64 %731, 0
  %733 = inttoptr i64 %729 to %"struct.std::__1::pair.176"*
  br i1 %732, label %750, label %734

734:                                              ; preds = %721
  %735 = ashr exact i64 %731, 4
  br label %736

736:                                              ; preds = %736, %734
  %737 = phi %"struct.std::__1::pair.176"* [ %726, %734 ], [ %748, %736 ]
  %738 = phi i64 [ %735, %734 ], [ %747, %736 ]
  %739 = lshr i64 %738, 1
  %740 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %737, i64 %739
  %741 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %740, i64 0, i32 0, i32 0
  %742 = load i64, i64* %741, align 8
  %743 = icmp ult i64 %742, %719
  %744 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %740, i64 1
  %745 = xor i64 %739, -1
  %746 = add i64 %738, %745
  %747 = select i1 %743, i64 %746, i64 %739
  %748 = select i1 %743, %"struct.std::__1::pair.176"* %744, %"struct.std::__1::pair.176"* %737
  %749 = icmp eq i64 %747, 0
  br i1 %749, label %750, label %736

750:                                              ; preds = %736, %721
  %751 = phi %"struct.std::__1::pair.176"* [ %726, %721 ], [ %748, %736 ]
  %752 = icmp eq %"struct.std::__1::pair.176"* %751, %733
  br i1 %752, label %757, label %753

753:                                              ; preds = %750
  %754 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %751, i64 0, i32 0, i32 0
  %755 = load i64, i64* %754, align 8
  %756 = icmp ult i64 %719, %755
  br i1 %756, label %757, label %761

757:                                              ; preds = %753, %750
  %758 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %758) #9
  store i32 0, i32* %22, align 4
  %759 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %722, i64 0, i32 0, i32 0, i32 0
  %760 = call %"struct.std::__1::pair.176"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE7emplaceIJS3_iEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.174"* %759, %"struct.std::__1::pair.176"* %751, %"struct.cc::ElementId"* nonnull dereferenceable(8) %31, i32* nonnull dereferenceable(4) %22) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %758) #9
  br label %761

761:                                              ; preds = %757, %753
  %762 = phi %"struct.std::__1::pair.176"* [ %760, %757 ], [ %751, %753 ]
  %763 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %762, i64 0, i32 1
  store i32 %363, i32* %763, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %723) #9
  br label %764

764:                                              ; preds = %761, %709
  %765 = bitcast %"class.std::__1::vector.109"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %765) #9
  %766 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %32, i64 0, i32 0, i32 0
  %767 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %32, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %765, i8 0, i64 24, i1 false) #9
  call void @_ZN2cc5Layer16TakeCopyRequestsEPNSt3__16vectorINS1_10unique_ptrIN3viz17CopyOutputRequestENS1_14default_deleteIS5_EEEENS1_9allocatorIS8_EEEE(%"class.cc::Layer"* %1, %"class.std::__1::vector.109"* nonnull %32) #9
  %768 = load %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"** %766, align 8
  %769 = load %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"** %767, align 8
  %770 = icmp eq %"class.std::__1::unique_ptr.111"* %768, %769
  br i1 %770, label %785, label %787

771:                                              ; preds = %787
  %772 = load %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"** %766, align 8
  %773 = load %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"** %767, align 8
  %774 = icmp eq %"class.std::__1::unique_ptr.111"* %773, %772
  br i1 %774, label %785, label %775

775:                                              ; preds = %771, %783
  %776 = phi %"class.std::__1::unique_ptr.111"* [ %777, %783 ], [ %773, %771 ]
  %777 = getelementptr inbounds %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.111"* %776, i64 -1
  %778 = getelementptr inbounds %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.111"* %777, i64 0, i32 0, i32 0, i32 0
  %779 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %778, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %778, align 8
  %780 = icmp eq %"class.viz::CopyOutputRequest"* %779, null
  br i1 %780, label %783, label %781

781:                                              ; preds = %775
  call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %779) #9
  %782 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %779, i64 0, i32 0
  call void @_ZdlPv(i8* %782) #10
  br label %783

783:                                              ; preds = %781, %775
  %784 = icmp eq %"class.std::__1::unique_ptr.111"* %777, %772
  br i1 %784, label %785, label %775

785:                                              ; preds = %783, %771, %764
  %786 = phi %"class.std::__1::unique_ptr.111"* [ %772, %771 ], [ %768, %764 ], [ %772, %783 ]
  store %"class.std::__1::unique_ptr.111"* %786, %"class.std::__1::unique_ptr.111"** %767, align 8
  br i1 %267, label %794, label %796

787:                                              ; preds = %764, %787
  %788 = phi %"class.std::__1::unique_ptr.111"* [ %792, %787 ], [ %768, %764 ]
  %789 = load %"class.cc::EffectTree"*, %"class.cc::EffectTree"** %360, align 8
  %790 = getelementptr inbounds %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.111"* %788, i64 0, i32 0, i32 0, i32 0
  %791 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %790, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %790, align 8
  call void @_ZN2cc10EffectTree14AddCopyRequestEiNSt3__110unique_ptrIN3viz17CopyOutputRequestENS1_14default_deleteIS4_EEEE(%"class.cc::EffectTree"* %789, i32 %363, %"class.viz::CopyOutputRequest"* %791) #9
  %792 = getelementptr inbounds %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.111"* %788, i64 1
  %793 = icmp eq %"class.std::__1::unique_ptr.111"* %792, %769
  br i1 %793, label %771, label %787

794:                                              ; preds = %785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* nonnull align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #9
  %795 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 11, i32 0, i32 1
  store i8 0, i8* %795, align 4
  store i8 1, i8* %91, align 8
  br label %796

796:                                              ; preds = %794, %785
  %797 = load %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"** %766, align 8
  %798 = icmp eq %"class.std::__1::unique_ptr.111"* %797, null
  br i1 %798, label %817, label %799

799:                                              ; preds = %796
  %800 = bitcast %"class.std::__1::unique_ptr.111"* %797 to i8*
  %801 = icmp eq %"class.std::__1::unique_ptr.111"* %786, %797
  br i1 %801, label %815, label %802

802:                                              ; preds = %799, %810
  %803 = phi %"class.std::__1::unique_ptr.111"* [ %804, %810 ], [ %786, %799 ]
  %804 = getelementptr inbounds %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.111"* %803, i64 -1
  %805 = getelementptr inbounds %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.111"* %804, i64 0, i32 0, i32 0, i32 0
  %806 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %805, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %805, align 8
  %807 = icmp eq %"class.viz::CopyOutputRequest"* %806, null
  br i1 %807, label %810, label %808

808:                                              ; preds = %802
  call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %806) #9
  %809 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %806, i64 0, i32 0
  call void @_ZdlPv(i8* %809) #10
  br label %810

810:                                              ; preds = %808, %802
  %811 = icmp eq %"class.std::__1::unique_ptr.111"* %804, %797
  br i1 %811, label %812, label %802

812:                                              ; preds = %810
  %813 = bitcast %"class.std::__1::vector.109"* %32 to i8**
  %814 = load i8*, i8** %813, align 8
  br label %815

815:                                              ; preds = %812, %799
  %816 = phi i8* [ %814, %812 ], [ %800, %799 ]
  store %"class.std::__1::unique_ptr.111"* %797, %"class.std::__1::unique_ptr.111"** %767, align 8
  call void @_ZdlPv(i8* %816) #10
  br label %817

817:                                              ; preds = %815, %796
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %765) #9
  br label %818

818:                                              ; preds = %356, %817
  %819 = phi i1 [ %267, %817 ], [ false, %356 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %51)
  %820 = bitcast <2 x float>* %16 to %"class.gfx::Vector2dF"*
  %821 = bitcast <2 x float>* %17 to %"class.gfx::Vector2dF"*
  %822 = bitcast <2 x float>* %21 to %"class.gfx::Vector2dF"*
  %823 = load %"class.cc::Layer"*, %"class.cc::Layer"** %52, align 8
  %824 = icmp eq %"class.cc::Layer"* %823, null
  %825 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %826 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %825, null
  br i1 %826, label %832, label %827

827:                                              ; preds = %818
  %828 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %825, i64 0, i32 4
  %829 = load i8, i8* %828, align 8
  %830 = and i8 %829, 64
  %831 = icmp eq i8 %830, 0
  br i1 %831, label %832, label %839

832:                                              ; preds = %827, %818
  %833 = bitcast %"class.cc::Layer"* %1 to i1 (%"class.cc::Layer"*)***
  %834 = load i1 (%"class.cc::Layer"*)**, i1 (%"class.cc::Layer"*)*** %833, align 8
  %835 = getelementptr inbounds i1 (%"class.cc::Layer"*)*, i1 (%"class.cc::Layer"*)** %834, i64 11
  %836 = load i1 (%"class.cc::Layer"*)*, i1 (%"class.cc::Layer"*)** %835, align 8
  %837 = call zeroext i1 %836(%"class.cc::Layer"* %1) #9
  %838 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  br label %839

839:                                              ; preds = %832, %827
  %840 = phi %"struct.cc::Layer::LayerTreeInputs"* [ %825, %827 ], [ %838, %832 ]
  %841 = phi i32 [ 512, %827 ], [ 0, %832 ]
  %842 = phi i1 [ true, %827 ], [ %837, %832 ]
  %843 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %840, null
  %844 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %840, i64 0, i32 6
  %845 = select i1 %843, %"class.gfx::Transform"* bitcast ({ { [4 x [4 x float]], i8 } }* @_ZN2cc5Layer18kIdentityTransformE to %"class.gfx::Transform"*), %"class.gfx::Transform"* %844
  %846 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %845, i64 0, i32 0, i32 1
  %847 = load i8, i8* %846, align 4
  %848 = icmp ult i8 %847, 2
  br i1 %848, label %849, label %853

849:                                              ; preds = %839
  %850 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %845, i64 0, i32 0, i32 0, i64 3, i64 2
  %851 = load float, float* %850, align 4
  %852 = fcmp une float %851, 0.000000e+00
  br label %853

853:                                              ; preds = %849, %839
  %854 = phi i1 [ true, %839 ], [ %852, %849 ]
  %855 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %57, align 8
  %856 = load i64, i64* %59, align 8
  %857 = call i32 @_ZNK2cc5Layer26GetElementTypeForAnimationEv(%"class.cc::Layer"* %1) #9
  %858 = bitcast %"class.cc::MutatorHost"* %855 to i1 (%"class.cc::MutatorHost"*, i64, i32)***
  %859 = load i1 (%"class.cc::MutatorHost"*, i64, i32)**, i1 (%"class.cc::MutatorHost"*, i64, i32)*** %858, align 8
  %860 = getelementptr inbounds i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %859, i64 30
  %861 = load i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %860, align 8
  %862 = call zeroext i1 %861(%"class.cc::MutatorHost"* %855, i64 %856, i32 %857) #9
  %863 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %57, align 8
  %864 = load i64, i64* %59, align 8
  %865 = bitcast %"class.cc::MutatorHost"* %863 to i1 (%"class.cc::MutatorHost"*, i64, i32)***
  %866 = load i1 (%"class.cc::MutatorHost"*, i64, i32)**, i1 (%"class.cc::MutatorHost"*, i64, i32)*** %865, align 8
  %867 = getelementptr inbounds i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %866, i64 31
  %868 = load i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %867, align 8
  %869 = call zeroext i1 %868(%"class.cc::MutatorHost"* %863, i64 %864, i32 0) #9
  %870 = or i1 %824, %842
  %871 = or i1 %870, %854
  %872 = or i1 %871, %869
  %873 = or i1 %819, %872
  br i1 %873, label %894, label %874

874:                                              ; preds = %853
  %875 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %876 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %875, null
  %877 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %875, i64 0, i32 17
  %878 = select i1 %876, %"class.gfx::RoundedCornersF"* @_ZN2cc5Layer18kNoRoundedCornersFE, %"class.gfx::RoundedCornersF"* %877
  %879 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %878, i64 0, i32 0
  %880 = load float, float* %879, align 4
  %881 = fcmp oeq float %880, 0.000000e+00
  br i1 %881, label %882, label %894

882:                                              ; preds = %874
  %883 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %878, i64 0, i32 1
  %884 = load float, float* %883, align 4
  %885 = fcmp oeq float %884, 0.000000e+00
  br i1 %885, label %886, label %894

886:                                              ; preds = %882
  %887 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %878, i64 0, i32 2
  %888 = load float, float* %887, align 4
  %889 = fcmp oeq float %888, 0.000000e+00
  br i1 %889, label %890, label %894

890:                                              ; preds = %886
  %891 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %878, i64 0, i32 3
  %892 = load float, float* %891, align 4
  %893 = fcmp une float %892, 0.000000e+00
  br label %894

894:                                              ; preds = %890, %886, %882, %874, %853
  %895 = phi i1 [ true, %853 ], [ true, %886 ], [ true, %882 ], [ true, %874 ], [ %893, %890 ]
  br i1 %824, label %903, label %896

896:                                              ; preds = %894
  %897 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 0
  %898 = load i32, i32* %897, align 8
  %899 = load %"class.cc::Layer"*, %"class.cc::Layer"** %52, align 8
  %900 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %899, i64 0, i32 13
  %901 = bitcast %"class.gfx::Vector2dF"* %900 to i64*
  %902 = load i64, i64* %901, align 8
  br label %903

903:                                              ; preds = %896, %894
  %904 = phi i64 [ 0, %894 ], [ %902, %896 ]
  %905 = phi i32 [ 0, %894 ], [ %898, %896 ]
  br i1 %895, label %930, label %906

906:                                              ; preds = %903
  %907 = bitcast <2 x float>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %907) #9
  %908 = getelementptr inbounds <2 x float>, <2 x float>* %16, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %908, align 8
  %909 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %820, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %909, align 4
  %910 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %911 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %910, null
  br i1 %911, label %916, label %912

912:                                              ; preds = %906
  %913 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %910, i64 0, i32 5
  %914 = bitcast %"class.gfx::PointF"* %913 to i64*
  %915 = load i64, i64* %914, align 4
  br label %916

916:                                              ; preds = %912, %906
  %917 = phi i64 [ %915, %912 ], [ 0, %906 ]
  %918 = bitcast <2 x float>* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %918) #9
  %919 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %910, i64 0, i32 6
  %920 = select i1 %911, %"class.gfx::Transform"* bitcast ({ { [4 x [4 x float]], i8 } }* @_ZN2cc5Layer18kIdentityTransformE to %"class.gfx::Transform"*), %"class.gfx::Transform"* %919
  %921 = call <2 x float> @_ZNK3gfx9Transform15To2dTranslationEv(%"class.gfx::Transform"* %920) #9
  store <2 x float> %921, <2 x float>* %17, align 8
  %922 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %922) #9
  %923 = bitcast i64* %12 to %"class.gfx::Vector2dF"*
  store i64 %917, i64* %12, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %923, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %821) #9
  %924 = load i64, i64* %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %922) #9
  %925 = bitcast <2 x float>* %16 to i64*
  store i64 %924, i64* %925, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %918) #9
  %926 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %926) #9
  %927 = bitcast i64* %13 to %"class.gfx::Vector2dF"*
  store i64 %904, i64* %13, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %927, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %820) #9
  %928 = bitcast i64* %13 to <2 x float>*
  %929 = load <2 x float>, <2 x float>* %928, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %926) #9
  call void @_ZN2cc5Layer26SetOffsetToTransformParentEN3gfx9Vector2dFE(%"class.cc::Layer"* %1, <2 x float> %929) #9
  call void @_ZN2cc5Layer21SetTransformTreeIndexEi(%"class.cc::Layer"* %1, i32 %905) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %907) #9
  br label %1093

930:                                              ; preds = %903
  %931 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %0, i64 0, i32 4
  %932 = load %"class.cc::TransformTree"*, %"class.cc::TransformTree"** %931, align 8
  %933 = bitcast %"struct.cc::TransformNode"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %933) #9
  call void @_ZN2cc13TransformNodeC1Ev(%"struct.cc::TransformNode"* nonnull %18) #9
  %934 = call i32 @_ZN2cc13TransformTree6InsertERKNS_13TransformNodeEi(%"class.cc::TransformTree"* %932, %"struct.cc::TransformNode"* nonnull dereferenceable(224) %18, i32 %905) #9
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %933) #9
  %935 = bitcast %"class.cc::TransformTree"** %931 to %"class.cc::PropertyTree"**
  %936 = load %"class.cc::PropertyTree"*, %"class.cc::PropertyTree"** %935, align 8
  %937 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %936, i64 0, i32 1
  %938 = getelementptr inbounds %"class.cc::PropertyTree", %"class.cc::PropertyTree"* %936, i64 0, i32 1, i32 0, i32 1
  %939 = bitcast %"struct.cc::TransformNode"** %938 to i64*
  %940 = load i64, i64* %939, align 8
  %941 = bitcast %"class.std::__1::vector.182"* %937 to i64*
  %942 = load i64, i64* %941, align 8
  %943 = icmp eq i64 %940, %942
  %944 = inttoptr i64 %940 to %"struct.cc::TransformNode"*
  %945 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %944, i64 -1
  %946 = select i1 %943, %"struct.cc::TransformNode"* null, %"struct.cc::TransformNode"* %945
  %947 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %946, i64 0, i32 0
  %948 = load i32, i32* %947, align 8
  call void @_ZN2cc5Layer21SetTransformTreeIndexEi(%"class.cc::Layer"* %1, i32 %948) #9
  %949 = load i32, i32* %947, align 8
  %950 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 0
  store i32 %949, i32* %950, align 8
  %951 = load i64, i64* %59, align 8
  %952 = icmp eq i64 %951, 0
  br i1 %952, label %1000, label %953

953:                                              ; preds = %930
  %954 = load i32, i32* %947, align 8
  %955 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %34, align 8
  %956 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %955, i64 0, i32 2
  %957 = bitcast %"struct.cc::ElementId"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %957) #9
  %958 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %19, i64 0, i32 0
  store i64 %951, i64* %958, align 8
  %959 = getelementptr inbounds %"class.base::flat_map.172", %"class.base::flat_map.172"* %956, i64 0, i32 0, i32 0, i32 0, i32 0
  %960 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %959, align 8
  %961 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %955, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %962 = bitcast %"struct.std::__1::pair.176"** %961 to i64*
  %963 = load i64, i64* %962, align 8
  %964 = ptrtoint %"struct.std::__1::pair.176"* %960 to i64
  %965 = sub i64 %963, %964
  %966 = icmp eq i64 %965, 0
  %967 = inttoptr i64 %963 to %"struct.std::__1::pair.176"*
  br i1 %966, label %984, label %968

968:                                              ; preds = %953
  %969 = ashr exact i64 %965, 4
  br label %970

970:                                              ; preds = %970, %968
  %971 = phi %"struct.std::__1::pair.176"* [ %960, %968 ], [ %982, %970 ]
  %972 = phi i64 [ %969, %968 ], [ %981, %970 ]
  %973 = lshr i64 %972, 1
  %974 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %971, i64 %973
  %975 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %974, i64 0, i32 0, i32 0
  %976 = load i64, i64* %975, align 8
  %977 = icmp ult i64 %976, %951
  %978 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %974, i64 1
  %979 = xor i64 %973, -1
  %980 = add i64 %972, %979
  %981 = select i1 %977, i64 %980, i64 %973
  %982 = select i1 %977, %"struct.std::__1::pair.176"* %978, %"struct.std::__1::pair.176"* %971
  %983 = icmp eq i64 %981, 0
  br i1 %983, label %984, label %970

984:                                              ; preds = %970, %953
  %985 = phi %"struct.std::__1::pair.176"* [ %960, %953 ], [ %982, %970 ]
  %986 = icmp eq %"struct.std::__1::pair.176"* %985, %967
  br i1 %986, label %991, label %987

987:                                              ; preds = %984
  %988 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %985, i64 0, i32 0, i32 0
  %989 = load i64, i64* %988, align 8
  %990 = icmp ult i64 %951, %989
  br i1 %990, label %991, label %995

991:                                              ; preds = %987, %984
  %992 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %992) #9
  store i32 0, i32* %14, align 4
  %993 = getelementptr inbounds %"class.base::flat_map.172", %"class.base::flat_map.172"* %956, i64 0, i32 0, i32 0
  %994 = call %"struct.std::__1::pair.176"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE7emplaceIJS3_iEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.174"* %993, %"struct.std::__1::pair.176"* %985, %"struct.cc::ElementId"* nonnull dereferenceable(8) %19, i32* nonnull dereferenceable(4) %14) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %992) #9
  br label %995

995:                                              ; preds = %991, %987
  %996 = phi %"struct.std::__1::pair.176"* [ %994, %991 ], [ %985, %987 ]
  %997 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %996, i64 0, i32 1
  store i32 %954, i32* %997, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %957) #9
  %998 = load i64, i64* %59, align 8
  %999 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %946, i64 0, i32 3, i32 0
  store i64 %998, i64* %999, align 8
  br label %1000

1000:                                             ; preds = %995, %930
  %1001 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %946, i64 0, i32 10
  %1002 = bitcast i24* %1001 to i32*
  %1003 = load i32, i32* %1002, align 4
  %1004 = and i32 %1003, -1537
  %1005 = zext i1 %842 to i32
  %1006 = shl nuw nsw i32 %1005, 10
  %1007 = or i32 %1006, %841
  %1008 = or i32 %1007, %1004
  store i32 %1008, i32* %1002, align 4
  br i1 %824, label %1009, label %1015

1009:                                             ; preds = %1000
  %1010 = load %"class.cc::TransformTree"*, %"class.cc::TransformTree"** %931, align 8
  %1011 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %1010, i64 0, i32 2
  %1012 = load float, float* %1011, align 4
  %1013 = bitcast %"class.gfx::Transform"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %1013) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1013, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #9
  %1014 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %20, i64 0, i32 0, i32 1
  store i8 0, i8* %1014, align 4
  call void @_ZN2cc13TransformTree24SetRootScaleAndTransformEfRKN3gfx9TransformE(%"class.cc::TransformTree"* %1010, float %1012, %"class.gfx::Transform"* nonnull dereferenceable(68) %20) #9
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %1013) #9
  br label %1051

1015:                                             ; preds = %1000
  %1016 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %1017 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %1016, null
  %1018 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1016, i64 0, i32 6
  %1019 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %946, i64 0, i32 4
  %1020 = bitcast %"class.gfx::Transform"* %1019 to i8*
  %1021 = bitcast %"class.gfx::Transform"* %1018 to i8*
  %1022 = select i1 %1017, i8* bitcast ({ { [4 x [4 x float]], i8 } }* @_ZN2cc5Layer18kIdentityTransformE to i8*), i8* %1021
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1020, i8* align 4 %1022, i64 68, i1 false) #9
  %1023 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %1024 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %1023, null
  br i1 %1024, label %1031, label %1025

1025:                                             ; preds = %1015
  %1026 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1023, i64 0, i32 7
  %1027 = bitcast %"class.gfx::Point3F"* %1026 to <2 x float>*
  %1028 = load <2 x float>, <2 x float>* %1027, align 8
  %1029 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1023, i64 0, i32 7, i32 2
  %1030 = load float, float* %1029, align 8
  br label %1031

1031:                                             ; preds = %1025, %1015
  %1032 = phi float [ %1030, %1025 ], [ 0.000000e+00, %1015 ]
  %1033 = phi <2 x float> [ %1028, %1025 ], [ zeroinitializer, %1015 ]
  %1034 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %946, i64 0, i32 5
  %1035 = bitcast %"class.gfx::Point3F"* %1034 to <2 x float>*
  store <2 x float> %1033, <2 x float>* %1035, align 4
  %1036 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %946, i64 0, i32 5, i32 2
  store float %1032, float* %1036, align 4
  %1037 = bitcast <2 x float>* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1037) #9
  %1038 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %1039 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %1038, null
  br i1 %1039, label %1044, label %1040

1040:                                             ; preds = %1031
  %1041 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1038, i64 0, i32 5
  %1042 = bitcast %"class.gfx::PointF"* %1041 to <2 x float>*
  %1043 = load <2 x float>, <2 x float>* %1042, align 4
  br label %1044

1044:                                             ; preds = %1040, %1031
  %1045 = phi <2 x float> [ %1043, %1040 ], [ zeroinitializer, %1031 ]
  store <2 x float> %1045, <2 x float>* %21, align 8
  %1046 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1046) #9
  %1047 = bitcast i64* %15 to %"class.gfx::Vector2dF"*
  store i64 %904, i64* %15, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %1047, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %822) #9
  %1048 = load i64, i64* %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1046) #9
  %1049 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %946, i64 0, i32 6
  %1050 = bitcast %"class.gfx::Vector2dF"* %1049 to i64*
  store i64 %1048, i64* %1050, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1037) #9
  br label %1051

1051:                                             ; preds = %1044, %1009
  %1052 = zext i1 %862 to i32
  %1053 = load i32, i32* %1002, align 4
  %1054 = shl nuw nsw i32 %1052, 4
  %1055 = and i32 %1053, -17
  %1056 = or i32 %1055, %1054
  store i32 %1056, i32* %1002, align 4
  %1057 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %57, align 8
  %1058 = load i64, i64* %59, align 8
  %1059 = call i32 @_ZNK2cc5Layer26GetElementTypeForAnimationEv(%"class.cc::Layer"* %1) #9
  %1060 = bitcast %"class.cc::MutatorHost"* %1057 to i1 (%"class.cc::MutatorHost"*, i64, i32)***
  %1061 = load i1 (%"class.cc::MutatorHost"*, i64, i32)**, i1 (%"class.cc::MutatorHost"*, i64, i32)*** %1060, align 8
  %1062 = getelementptr inbounds i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %1061, i64 26
  %1063 = load i1 (%"class.cc::MutatorHost"*, i64, i32)*, i1 (%"class.cc::MutatorHost"*, i64, i32)** %1062, align 8
  %1064 = call zeroext i1 %1063(%"class.cc::MutatorHost"* %1057, i64 %1058, i32 %1059) #9
  %1065 = zext i1 %1064 to i32
  %1066 = load i32, i32* %1002, align 4
  %1067 = shl nuw nsw i32 %1065, 5
  %1068 = and i32 %1066, -33
  %1069 = or i32 %1068, %1067
  store i32 %1069, i32* %1002, align 4
  %1070 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %57, align 8
  %1071 = load i64, i64* %59, align 8
  %1072 = call i32 @_ZNK2cc5Layer26GetElementTypeForAnimationEv(%"class.cc::Layer"* %1) #9
  %1073 = bitcast %"class.cc::MutatorHost"* %1070 to float (%"class.cc::MutatorHost"*, i64, i32)***
  %1074 = load float (%"class.cc::MutatorHost"*, i64, i32)**, float (%"class.cc::MutatorHost"*, i64, i32)*** %1073, align 8
  %1075 = getelementptr inbounds float (%"class.cc::MutatorHost"*, i64, i32)*, float (%"class.cc::MutatorHost"*, i64, i32)** %1074, i64 33
  %1076 = load float (%"class.cc::MutatorHost"*, i64, i32)*, float (%"class.cc::MutatorHost"*, i64, i32)** %1075, align 8
  %1077 = call float %1076(%"class.cc::MutatorHost"* %1070, i64 %1071, i32 %1072) #9
  %1078 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %946, i64 0, i32 13
  store float %1077, float* %1078, align 8
  %1079 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %1080 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %1079, null
  br i1 %1080, label %1085, label %1081

1081:                                             ; preds = %1051
  %1082 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1079, i64 0, i32 15
  %1083 = bitcast %"class.gfx::ScrollOffset"* %1082 to <2 x float>*
  %1084 = load <2 x float>, <2 x float>* %1083, align 8
  br label %1085

1085:                                             ; preds = %1081, %1051
  %1086 = phi <2 x float> [ %1084, %1081 ], [ zeroinitializer, %1051 ]
  %1087 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %946, i64 0, i32 11
  %1088 = bitcast %"class.gfx::ScrollOffset"* %1087 to <2 x float>*
  store <2 x float> %1086, <2 x float>* %1088, align 8
  %1089 = load i32, i32* %1002, align 4
  %1090 = or i32 %1089, 1
  store i32 %1090, i32* %1002, align 4
  %1091 = load %"class.cc::TransformTree"*, %"class.cc::TransformTree"** %931, align 8
  %1092 = load i32, i32* %947, align 8
  call void @_ZN2cc13TransformTree16UpdateTransformsEi(%"class.cc::TransformTree"* %1091, i32 %1092) #9
  call void @_ZN2cc5Layer26SetOffsetToTransformParentEN3gfx9Vector2dFE(%"class.cc::Layer"* %1, <2 x float> zeroinitializer) #9
  br label %1093

1093:                                             ; preds = %916, %1085
  %1094 = phi i1 [ true, %1085 ], [ false, %916 ]
  %1095 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 15
  %1096 = zext i1 %1094 to i16
  %1097 = load i16, i16* %1095, align 1
  %1098 = shl nuw nsw i16 %1096, 6
  %1099 = and i16 %1097, -65
  %1100 = or i16 %1099, %1098
  store i16 %1100, i16* %1095, align 1
  %1101 = bitcast <2 x float>* %10 to %"class.gfx::Vector2dF"*
  %1102 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 1
  %1103 = load i32, i32* %1102, align 4
  %1104 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %1105 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %1104, null
  br i1 %1105, label %1115, label %1106

1106:                                             ; preds = %1093
  %1107 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1104, i64 0, i32 4
  %1108 = load i8, i8* %1107, align 8
  %1109 = and i8 %1108, 1
  %1110 = icmp eq i8 %1109, 0
  br i1 %1110, label %1111, label %1152

1111:                                             ; preds = %1106
  %1112 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1104, i64 0, i32 1
  %1113 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %1112, align 8
  %1114 = icmp eq %"class.cc::PictureLayer"* %1113, null
  br i1 %1114, label %1115, label %1152

1115:                                             ; preds = %1111, %1093
  %1116 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1104, i64 0, i32 17
  %1117 = select i1 %1105, %"class.gfx::RoundedCornersF"* @_ZN2cc5Layer18kNoRoundedCornersFE, %"class.gfx::RoundedCornersF"* %1116
  %1118 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %1117, i64 0, i32 0
  %1119 = load float, float* %1118, align 4
  %1120 = fcmp oeq float %1119, 0.000000e+00
  br i1 %1120, label %1121, label %1152

1121:                                             ; preds = %1115
  %1122 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %1117, i64 0, i32 1
  %1123 = load float, float* %1122, align 4
  %1124 = fcmp oeq float %1123, 0.000000e+00
  br i1 %1124, label %1125, label %1152

1125:                                             ; preds = %1121
  %1126 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %1117, i64 0, i32 2
  %1127 = load float, float* %1126, align 4
  %1128 = fcmp oeq float %1127, 0.000000e+00
  br i1 %1128, label %1129, label %1152

1129:                                             ; preds = %1125
  %1130 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %1117, i64 0, i32 3
  %1131 = load float, float* %1130, align 4
  %1132 = fcmp une float %1131, 0.000000e+00
  %1133 = or i1 %1105, %1132
  br i1 %1133, label %1142, label %1134

1134:                                             ; preds = %1129
  %1135 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1104, i64 0, i32 0, i32 1
  %1136 = bitcast %"class.gfx::Size"* %1135 to i64*
  %1137 = load i64, i64* %1136, align 8
  %1138 = trunc i64 %1137 to i32
  %1139 = icmp ne i32 %1138, 0
  %1140 = icmp ugt i64 %1137, 4294967295
  %1141 = and i1 %1140, %1139
  br i1 %1141, label %1152, label %1143

1142:                                             ; preds = %1129
  br i1 %1132, label %1152, label %1143

1143:                                             ; preds = %1142, %1134
  %1144 = bitcast %"class.cc::FilterOperations"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1144) #9
  br i1 %1105, label %1147, label %1145

1145:                                             ; preds = %1143
  %1146 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1104, i64 0, i32 10
  call void @_ZN2cc16FilterOperationsC1ERKS0_(%"class.cc::FilterOperations"* nonnull %8, %"class.cc::FilterOperations"* dereferenceable(24) %1146) #9
  br label %1148

1147:                                             ; preds = %1143
  call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* nonnull %8) #9
  br label %1148

1148:                                             ; preds = %1147, %1145
  %1149 = call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* nonnull %8) #9
  call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1144) #9
  br i1 %1149, label %1152, label %1150

1150:                                             ; preds = %1148
  %1151 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 1
  store i32 %1103, i32* %1151, align 4
  br label %1193

1152:                                             ; preds = %1148, %1142, %1134, %1125, %1121, %1115, %1111, %1106
  %1153 = phi i1 [ false, %1148 ], [ true, %1134 ], [ true, %1142 ], [ true, %1111 ], [ true, %1106 ], [ true, %1125 ], [ true, %1121 ], [ true, %1115 ]
  %1154 = bitcast %"struct.cc::ClipNode"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %1154) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1154, i8* align 8 bitcast (<{ i32, i32, i32, %"class.gfx::RectF", [4 x i8], { { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", [4 x i8], %"class.base::StackAllocator", %"class.std::__1::vector.269" } }, %"class.gfx::RectF", { { { { i8, [3 x i8], %union.anon.278 } } } }, i32, [4 x i8] }>* @__const._ZNK2cc12_GLOBAL__N_126PropertyTreeBuilderContext19AddClipNodeIfNeededERKNS0_16DataForRecursionEPNS_5LayerEbPS2_.node to i8*), i64 184, i1 false) #9
  call void @_ZN2cc8ClipNodeC1Ev(%"struct.cc::ClipNode"* nonnull %9) #9
  %1155 = call { <2 x float>, <2 x float> } @_ZN2cc5Layer17EffectiveClipRectEv(%"class.cc::Layer"* %1) #9
  %1156 = extractvalue { <2 x float>, <2 x float> } %1155, 0
  %1157 = extractvalue { <2 x float>, <2 x float> } %1155, 1
  %1158 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %9, i64 0, i32 3
  %1159 = bitcast %"class.gfx::RectF"* %1158 to <2 x float>*
  store <2 x float> %1156, <2 x float>* %1159, align 4
  %1160 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %9, i64 0, i32 3, i32 1
  %1161 = bitcast %"class.gfx::SizeF"* %1160 to <2 x float>*
  store <2 x float> %1157, <2 x float>* %1161, align 4
  %1162 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1162) #9
  %1163 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 13
  %1164 = bitcast %"class.gfx::Vector2dF"* %1163 to i64*
  %1165 = load i64, i64* %1164, align 8
  %1166 = bitcast <2 x float>* %10 to i64*
  store i64 %1165, i64* %1166, align 8
  call void @_ZN3gfx5RectFpLERKNS_9Vector2dFE(%"class.gfx::RectF"* %1158, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %1101) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1162) #9
  %1167 = select i1 %1094, %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, %"struct.cc::(anonymous namespace)::DataForRecursion"* %2
  %1168 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %1167, i64 0, i32 0
  %1169 = load i32, i32* %1168, align 8
  %1170 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %9, i64 0, i32 8
  store i32 %1169, i32* %1170, align 8
  %1171 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %9, i64 0, i32 2
  br i1 %1153, label %1172, label %1173

1172:                                             ; preds = %1152
  store i32 0, i32* %1171, align 8
  br label %1186

1173:                                             ; preds = %1152
  store i32 1, i32* %1171, align 8
  %1174 = bitcast %"class.cc::ClipExpander"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1174) #9
  %1175 = call i32 @_ZNK2cc5Layer17effect_tree_indexEv(%"class.cc::Layer"* %1) #9
  call void @_ZN2cc12ClipExpanderC1Ei(%"class.cc::ClipExpander"* nonnull %11, i32 %1175) #9
  %1176 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %9, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %1177 = load i8, i8* %1176, align 8, !range !2
  %1178 = icmp eq i8 %1177, 0
  br i1 %1178, label %1183, label %1179

1179:                                             ; preds = %1173
  %1180 = getelementptr inbounds %"class.cc::ClipExpander", %"class.cc::ClipExpander"* %11, i64 0, i32 0
  %1181 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %9, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1182 = load i32, i32* %1180, align 4
  store i32 %1182, i32* %1181, align 4
  br label %1185

1183:                                             ; preds = %1173
  %1184 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %9, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN2cc12ClipExpanderC1ERKS0_(%"class.cc::ClipExpander"* %1184, %"class.cc::ClipExpander"* nonnull dereferenceable(4) %11) #9
  store i8 1, i8* %1176, align 8
  br label %1185

1185:                                             ; preds = %1183, %1179
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1174) #9
  br label %1186

1186:                                             ; preds = %1185, %1172
  %1187 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %0, i64 0, i32 5
  %1188 = bitcast %"class.cc::ClipTree"** %1187 to %"class.cc::PropertyTree.264"**
  %1189 = load %"class.cc::PropertyTree.264"*, %"class.cc::PropertyTree.264"** %1188, align 8
  %1190 = call i32 @_ZN2cc12PropertyTreeINS_8ClipNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.264"* %1189, %"struct.cc::ClipNode"* nonnull dereferenceable(184) %9, i32 %1103) #9
  %1191 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 1
  store i32 %1190, i32* %1191, align 4
  call void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %1154) #9
  %1192 = load i32, i32* %1191, align 4
  br label %1193

1193:                                             ; preds = %1150, %1186
  %1194 = phi i32 [ %1192, %1186 ], [ %1103, %1150 ]
  %1195 = phi i16 [ 128, %1186 ], [ 0, %1150 ]
  %1196 = load i16, i16* %1095, align 1
  %1197 = and i16 %1196, -129
  %1198 = or i16 %1197, %1195
  store i16 %1198, i16* %1095, align 1
  call void @_ZN2cc5Layer16SetClipTreeIndexEi(%"class.cc::Layer"* %1, i32 %1194) #9
  %1199 = bitcast <2 x float>* %7 to %"class.gfx::ScrollOffset"*
  %1200 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 3
  %1201 = load i32, i32* %1200, align 4
  %1202 = load %"class.cc::Layer"*, %"class.cc::Layer"** %52, align 8
  %1203 = icmp eq %"class.cc::Layer"* %1202, null
  %1204 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %1205 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %1204, null
  br i1 %1205, label %1211, label %1206

1206:                                             ; preds = %1193
  %1207 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1204, i64 0, i32 4
  %1208 = load i8, i8* %1207, align 8
  %1209 = and i8 %1208, 64
  %1210 = icmp ne i8 %1209, 0
  br label %1211

1211:                                             ; preds = %1206, %1193
  %1212 = phi i1 [ false, %1193 ], [ %1210, %1206 ]
  %1213 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 5, i32 6
  %1214 = call zeroext i1 @_ZNK2cc6Region7IsEmptyEv(%"class.cc::Region"* %1213) #9
  %1215 = xor i1 %1214, true
  %1216 = or i1 %1212, %1215
  %1217 = or i1 %1203, %1216
  br i1 %1217, label %1220, label %1218

1218:                                             ; preds = %1211
  %1219 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 3
  store i32 %1201, i32* %1219, align 4
  br label %1339

1220:                                             ; preds = %1211
  %1221 = zext i1 %1212 to i8
  %1222 = bitcast %"struct.cc::ScrollNode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %1222) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1222, i8* align 8 bitcast (<{ i32, i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8], %"class.gfx::Vector2dF", %"struct.cc::ElementId", i32, %"struct.cc::OverscrollBehavior", [4 x i8], { { { { i8, [7 x i8], { { { i8, [3 x i8], i32, i32 }, %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", [4 x i8], %"class.std::__1::vector.292", %"struct.cc::TargetSnapAreaElementIds" } } } } } }, i8, [7 x i8] }>* @__const._ZNK2cc12_GLOBAL__N_126PropertyTreeBuilderContext21AddScrollNodeIfNeededERKNS0_16DataForRecursionEPNS_5LayerEPS2_.node to i8*), i64 168, i1 false) #9
  call void @_ZN2cc10ScrollNodeC1Ev(%"struct.cc::ScrollNode"* nonnull %5) #9
  %1223 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %5, i64 0, i32 5
  %1224 = load i8, i8* %1223, align 4
  %1225 = and i8 %1224, -2
  %1226 = or i8 %1225, %1221
  store i8 %1226, i8* %1223, align 4
  %1227 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 5, i32 2
  %1228 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %5, i64 0, i32 4
  %1229 = bitcast %"class.gfx::Size"* %1227 to i64*
  %1230 = bitcast %"class.gfx::Size"* %1228 to i64*
  %1231 = load i64, i64* %1229, align 4
  store i64 %1231, i64* %1230, align 4
  %1232 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %1233 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %1232, null
  br i1 %1233, label %1240, label %1234

1234:                                             ; preds = %1220
  %1235 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1232, i64 0, i32 16
  %1236 = bitcast %"class.gfx::Size"* %1235 to i64*
  %1237 = load i64, i64* %1236, align 8
  %1238 = and i64 %1237, -4294967296
  %1239 = and i64 %1237, 4294967295
  br label %1240

1240:                                             ; preds = %1234, %1220
  %1241 = phi i64 [ %1238, %1234 ], [ 0, %1220 ]
  %1242 = phi i64 [ %1239, %1234 ], [ 0, %1220 ]
  %1243 = or i64 %1242, %1241
  %1244 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %5, i64 0, i32 3
  %1245 = bitcast %"class.gfx::Size"* %1244 to i64*
  store i64 %1243, i64* %1245, align 4
  %1246 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 13
  %1247 = bitcast %"class.gfx::Vector2dF"* %1246 to i64*
  %1248 = load i64, i64* %1247, align 8
  %1249 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %5, i64 0, i32 7
  %1250 = bitcast %"class.gfx::Vector2dF"* %1249 to i64*
  store i64 %1248, i64* %1250, align 8
  %1251 = call zeroext i1 @_ZNK2cc5Layer27GetUserScrollableHorizontalEv(%"class.cc::Layer"* %1) #9
  %1252 = zext i1 %1251 to i8
  %1253 = load i8, i8* %1223, align 4
  %1254 = shl nuw nsw i8 %1252, 6
  %1255 = and i8 %1253, -65
  %1256 = or i8 %1255, %1254
  store i8 %1256, i8* %1223, align 4
  %1257 = call zeroext i1 @_ZNK2cc5Layer25GetUserScrollableVerticalEv(%"class.cc::Layer"* %1) #9
  %1258 = zext i1 %1257 to i8
  %1259 = load i8, i8* %1223, align 4
  %1260 = shl nuw i8 %1258, 7
  %1261 = and i8 %1259, 127
  %1262 = or i8 %1261, %1260
  store i8 %1262, i8* %1223, align 4
  %1263 = load i64, i64* %59, align 8
  %1264 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %5, i64 0, i32 8, i32 0
  store i64 %1263, i64* %1264, align 8
  %1265 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 0
  %1266 = load i32, i32* %1265, align 8
  %1267 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %5, i64 0, i32 9
  store i32 %1266, i32* %1267, align 8
  %1268 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %5, i64 0, i32 13
  %1269 = load i8, i8* %1268, align 8
  %1270 = or i8 %1269, 1
  store i8 %1270, i8* %1268, align 8
  %1271 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %0, i64 0, i32 7
  %1272 = bitcast %"class.cc::ScrollTree"** %1271 to %"class.cc::PropertyTree.284"**
  %1273 = load %"class.cc::PropertyTree.284"*, %"class.cc::PropertyTree.284"** %1272, align 8
  %1274 = call i32 @_ZN2cc12PropertyTreeINS_10ScrollNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.284"* %1273, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %5, i32 %1201) #9
  %1275 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 3
  store i32 %1274, i32* %1275, align 4
  %1276 = load i64, i64* %59, align 8
  %1277 = icmp eq i64 %1276, 0
  br i1 %1277, label %1322, label %1278

1278:                                             ; preds = %1240
  %1279 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %34, align 8
  %1280 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1279, i64 0, i32 1
  %1281 = bitcast %"struct.cc::ElementId"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1281) #9
  %1282 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %6, i64 0, i32 0
  store i64 %1276, i64* %1282, align 8
  %1283 = getelementptr inbounds %"class.base::flat_map.172", %"class.base::flat_map.172"* %1280, i64 0, i32 0, i32 0, i32 0, i32 0
  %1284 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %1283, align 8
  %1285 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1279, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1286 = bitcast %"struct.std::__1::pair.176"** %1285 to i64*
  %1287 = load i64, i64* %1286, align 8
  %1288 = ptrtoint %"struct.std::__1::pair.176"* %1284 to i64
  %1289 = sub i64 %1287, %1288
  %1290 = icmp eq i64 %1289, 0
  %1291 = inttoptr i64 %1287 to %"struct.std::__1::pair.176"*
  br i1 %1290, label %1308, label %1292

1292:                                             ; preds = %1278
  %1293 = ashr exact i64 %1289, 4
  br label %1294

1294:                                             ; preds = %1294, %1292
  %1295 = phi %"struct.std::__1::pair.176"* [ %1284, %1292 ], [ %1306, %1294 ]
  %1296 = phi i64 [ %1293, %1292 ], [ %1305, %1294 ]
  %1297 = lshr i64 %1296, 1
  %1298 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %1295, i64 %1297
  %1299 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %1298, i64 0, i32 0, i32 0
  %1300 = load i64, i64* %1299, align 8
  %1301 = icmp ult i64 %1300, %1276
  %1302 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %1298, i64 1
  %1303 = xor i64 %1297, -1
  %1304 = add i64 %1296, %1303
  %1305 = select i1 %1301, i64 %1304, i64 %1297
  %1306 = select i1 %1301, %"struct.std::__1::pair.176"* %1302, %"struct.std::__1::pair.176"* %1295
  %1307 = icmp eq i64 %1305, 0
  br i1 %1307, label %1308, label %1294

1308:                                             ; preds = %1294, %1278
  %1309 = phi %"struct.std::__1::pair.176"* [ %1284, %1278 ], [ %1306, %1294 ]
  %1310 = icmp eq %"struct.std::__1::pair.176"* %1309, %1291
  br i1 %1310, label %1315, label %1311

1311:                                             ; preds = %1308
  %1312 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %1309, i64 0, i32 0, i32 0
  %1313 = load i64, i64* %1312, align 8
  %1314 = icmp ult i64 %1276, %1313
  br i1 %1314, label %1315, label %1319

1315:                                             ; preds = %1311, %1308
  %1316 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1316) #9
  store i32 0, i32* %4, align 4
  %1317 = getelementptr inbounds %"class.base::flat_map.172", %"class.base::flat_map.172"* %1280, i64 0, i32 0, i32 0
  %1318 = call %"struct.std::__1::pair.176"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE7emplaceIJS3_iEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.174"* %1317, %"struct.std::__1::pair.176"* %1309, %"struct.cc::ElementId"* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1316) #9
  br label %1319

1319:                                             ; preds = %1315, %1311
  %1320 = phi %"struct.std::__1::pair.176"* [ %1318, %1315 ], [ %1309, %1311 ]
  %1321 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %1320, i64 0, i32 1
  store i32 %1274, i32* %1321, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1281) #9
  br label %1322

1322:                                             ; preds = %1319, %1240
  %1323 = load i8, i8* %1223, align 4
  %1324 = and i8 %1323, 1
  %1325 = icmp eq i8 %1324, 0
  br i1 %1325, label %1338, label %1326

1326:                                             ; preds = %1322
  %1327 = load %"class.cc::ScrollTree"*, %"class.cc::ScrollTree"** %1271, align 8
  %1328 = load i64, i64* %59, align 8
  %1329 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1329) #9
  %1330 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %1331 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %1330, null
  br i1 %1331, label %1336, label %1332

1332:                                             ; preds = %1326
  %1333 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1330, i64 0, i32 15
  %1334 = bitcast %"class.gfx::ScrollOffset"* %1333 to <2 x float>*
  %1335 = load <2 x float>, <2 x float>* %1334, align 8
  br label %1336

1336:                                             ; preds = %1332, %1326
  %1337 = phi <2 x float> [ %1335, %1332 ], [ zeroinitializer, %1326 ]
  store <2 x float> %1337, <2 x float>* %7, align 8
  call void @_ZN2cc10ScrollTree19SetBaseScrollOffsetENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"* %1327, i64 %1328, %"class.gfx::ScrollOffset"* nonnull dereferenceable(8) %1199) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1329) #9
  br label %1338

1338:                                             ; preds = %1336, %1322
  call void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %1222) #9
  br label %1339

1339:                                             ; preds = %1218, %1338
  %1340 = phi i32 [ %1274, %1338 ], [ %1201, %1218 ]
  call void @_ZN2cc5Layer18SetScrollTreeIndexEi(%"class.cc::Layer"* %1, i32 %1340) #9
  %1341 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 5, i32 5
  %1342 = load i32, i32* %1341, align 8
  %1343 = icmp ugt i32 %1342, -16777217
  %1344 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 7
  %1345 = load i32, i32* %1344, align 4
  %1346 = select i1 %1343, i32 %1342, i32 %1345
  %1347 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 7
  store i32 %1346, i32* %1347, align 4
  call void @_ZN2cc5Layer28SetSafeOpaqueBackgroundColorEj(%"class.cc::Layer"* %1, i32 %1346) #9
  %1348 = load i8, i8* %268, align 1, !range !2
  %1349 = icmp eq i8 %1348, 0
  br i1 %1349, label %1350, label %1364

1350:                                             ; preds = %1339
  %1351 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %57, align 8
  %1352 = load i64, i64* %59, align 8
  %1353 = bitcast %"class.cc::MutatorHost"* %1351 to i1 (%"class.cc::MutatorHost"*, i64)***
  %1354 = load i1 (%"class.cc::MutatorHost"*, i64)**, i1 (%"class.cc::MutatorHost"*, i64)*** %1353, align 8
  %1355 = getelementptr inbounds i1 (%"class.cc::MutatorHost"*, i64)*, i1 (%"class.cc::MutatorHost"*, i64)** %1354, i64 32
  %1356 = load i1 (%"class.cc::MutatorHost"*, i64)*, i1 (%"class.cc::MutatorHost"*, i64)** %1355, align 8
  %1357 = call zeroext i1 %1356(%"class.cc::MutatorHost"* %1351, i64 %1352) #9
  br i1 %1357, label %1358, label %1364

1358:                                             ; preds = %1350
  %1359 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %1360 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %1359, null
  %1361 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1359, i64 0, i32 6
  %1362 = select i1 %1360, %"class.gfx::Transform"* bitcast ({ { [4 x [4 x float]], i8 } }* @_ZN2cc5Layer18kIdentityTransformE to %"class.gfx::Transform"*), %"class.gfx::Transform"* %1361
  %1363 = call zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"* %1362) #9
  br i1 %1363, label %1407, label %1364

1364:                                             ; preds = %1358, %1350, %1339
  %1365 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %94, align 8
  %1366 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %1365, null
  br i1 %1366, label %1376, label %1367

1367:                                             ; preds = %1364
  %1368 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1365, i64 0, i32 4
  %1369 = load i8, i8* %1368, align 8
  %1370 = and i8 %1369, 1
  %1371 = icmp eq i8 %1370, 0
  br i1 %1371, label %1372, label %1403

1372:                                             ; preds = %1367
  %1373 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1365, i64 0, i32 1
  %1374 = load %"class.cc::PictureLayer"*, %"class.cc::PictureLayer"** %1373, align 8
  %1375 = icmp eq %"class.cc::PictureLayer"* %1374, null
  br i1 %1375, label %1376, label %1403

1376:                                             ; preds = %1372, %1364
  %1377 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1365, i64 0, i32 17
  %1378 = select i1 %1366, %"class.gfx::RoundedCornersF"* @_ZN2cc5Layer18kNoRoundedCornersFE, %"class.gfx::RoundedCornersF"* %1377
  %1379 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %1378, i64 0, i32 0
  %1380 = load float, float* %1379, align 4
  %1381 = fcmp oeq float %1380, 0.000000e+00
  br i1 %1381, label %1382, label %1403

1382:                                             ; preds = %1376
  %1383 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %1378, i64 0, i32 1
  %1384 = load float, float* %1383, align 4
  %1385 = fcmp oeq float %1384, 0.000000e+00
  br i1 %1385, label %1386, label %1403

1386:                                             ; preds = %1382
  %1387 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %1378, i64 0, i32 2
  %1388 = load float, float* %1387, align 4
  %1389 = fcmp oeq float %1388, 0.000000e+00
  br i1 %1389, label %1390, label %1403

1390:                                             ; preds = %1386
  %1391 = getelementptr inbounds %"class.gfx::RoundedCornersF", %"class.gfx::RoundedCornersF"* %1378, i64 0, i32 3
  %1392 = load float, float* %1391, align 4
  %1393 = fcmp une float %1392, 0.000000e+00
  %1394 = or i1 %1366, %1393
  br i1 %1394, label %1403, label %1395

1395:                                             ; preds = %1390
  %1396 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %1365, i64 0, i32 0, i32 1
  %1397 = bitcast %"class.gfx::Size"* %1396 to i64*
  %1398 = load i64, i64* %1397, align 8
  %1399 = trunc i64 %1398 to i32
  %1400 = icmp ne i32 %1399, 0
  %1401 = icmp ugt i64 %1398, 4294967295
  %1402 = and i1 %1401, %1400
  br label %1403

1403:                                             ; preds = %1367, %1372, %1376, %1382, %1386, %1390, %1395
  %1404 = phi i1 [ %1402, %1395 ], [ %1393, %1390 ], [ true, %1372 ], [ true, %1367 ], [ true, %1386 ], [ true, %1382 ], [ true, %1376 ]
  %1405 = xor i1 %1404, true
  %1406 = zext i1 %1405 to i8
  br label %1407

1407:                                             ; preds = %1358, %1403
  %1408 = phi i8 [ 1, %1358 ], [ %1406, %1403 ]
  %1409 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 9
  store i8 %1408, i8* %1409, align 1
  %1410 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %1411 = load %class.scoped_refptr.69*, %class.scoped_refptr.69** %1410, align 8
  %1412 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %1413 = load %class.scoped_refptr.69*, %class.scoped_refptr.69** %1412, align 8
  %1414 = icmp eq %class.scoped_refptr.69* %1411, %1413
  br i1 %1414, label %1415, label %1454

1415:                                             ; preds = %1463, %1407
  %1416 = phi i1 [ false, %1407 ], [ %1471, %1463 ]
  %1417 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %2, i64 0, i32 2
  %1418 = load i32, i32* %1417, align 8
  %1419 = getelementptr inbounds %"struct.cc::(anonymous namespace)::DataForRecursion", %"struct.cc::(anonymous namespace)::DataForRecursion"* %33, i64 0, i32 2
  %1420 = load i32, i32* %1419, align 8
  %1421 = icmp eq i32 %1420, %1418
  br i1 %1421, label %1450, label %1422

1422:                                             ; preds = %1415
  %1423 = icmp sgt i32 %1420, -1
  br i1 %1423, label %1424, label %1432

1424:                                             ; preds = %1422
  %1425 = getelementptr inbounds %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext", %"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %0, i64 0, i32 6
  %1426 = bitcast %"class.cc::EffectTree"** %1425 to %"class.cc::PropertyTree.210"**
  %1427 = load %"class.cc::PropertyTree.210"*, %"class.cc::PropertyTree.210"** %1426, align 8
  %1428 = sext i32 %1420 to i64
  %1429 = getelementptr inbounds %"class.cc::PropertyTree.210", %"class.cc::PropertyTree.210"* %1427, i64 0, i32 1, i32 0, i32 0
  %1430 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %1429, align 8
  %1431 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1430, i64 %1428
  br label %1432

1432:                                             ; preds = %1424, %1422
  %1433 = phi %"struct.cc::EffectNode"* [ %1431, %1424 ], [ null, %1422 ]
  %1434 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1433, i64 0, i32 11, i32 0
  %1435 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %1434) #9
  %1436 = icmp eq i32 %1435, 0
  br i1 %1436, label %1443, label %1437

1437:                                             ; preds = %1432
  %1438 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %1434) #9
  %1439 = icmp ne i32 %1438, 1
  %1440 = and i1 %1416, %1439
  br i1 %1440, label %1441, label %1443

1441:                                             ; preds = %1437
  %1442 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1433, i64 0, i32 17
  store i8 12, i8* %1442, align 1
  br label %1443

1443:                                             ; preds = %1441, %1437, %1432
  %1444 = phi i1 [ %1439, %1437 ], [ true, %1441 ], [ false, %1432 ]
  br i1 %1416, label %1445, label %1449

1445:                                             ; preds = %1443
  %1446 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1433, i64 0, i32 17
  %1447 = load i8, i8* %1446, align 1
  %1448 = icmp eq i8 %1447, 0
  br i1 %1448, label %1450, label %1449

1449:                                             ; preds = %1445, %1443
  br label %1450

1450:                                             ; preds = %1415, %1445, %1449
  %1451 = phi i1 [ true, %1445 ], [ %1444, %1449 ], [ %1416, %1415 ]
  %1452 = zext i1 %1451 to i8
  %1453 = load i8*, i8** %45, align 8
  store i8 %1452, i8* %1453, align 1
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %39) #9
  ret void

1454:                                             ; preds = %1407, %1463
  %1455 = phi i1 [ %1471, %1463 ], [ false, %1407 ]
  %1456 = phi %class.scoped_refptr.69* [ %1472, %1463 ], [ %1411, %1407 ]
  %1457 = load i16, i16* %1095, align 1
  %1458 = and i16 %1457, 16
  %1459 = icmp eq i16 %1458, 0
  br i1 %1459, label %1463, label %1460

1460:                                             ; preds = %1454
  %1461 = getelementptr inbounds %class.scoped_refptr.69, %class.scoped_refptr.69* %1456, i64 0, i32 0
  %1462 = load %"class.cc::Layer"*, %"class.cc::Layer"** %1461, align 8
  call void @_ZN2cc5Layer25SetSubtreePropertyChangedEv(%"class.cc::Layer"* %1462) #9
  br label %1463

1463:                                             ; preds = %1454, %1460
  %1464 = getelementptr inbounds %class.scoped_refptr.69, %class.scoped_refptr.69* %1456, i64 0, i32 0
  %1465 = load %"class.cc::Layer"*, %"class.cc::Layer"** %1464, align 8
  call fastcc void @_ZNK2cc12_GLOBAL__N_126PropertyTreeBuilderContext26BuildPropertyTreesInternalEPNS_5LayerERKNS0_16DataForRecursionE(%"class.cc::(anonymous namespace)::PropertyTreeBuilderContext"* %0, %"class.cc::Layer"* %1465, %"struct.cc::(anonymous namespace)::DataForRecursion"* nonnull dereferenceable(112) %33)
  %1466 = load i8*, i8** %45, align 8
  %1467 = load i8, i8* %1466, align 1, !range !2
  %1468 = zext i8 %1467 to i32
  %1469 = zext i1 %1455 to i32
  %1470 = or i32 %1468, %1469
  %1471 = icmp ne i32 %1470, 0
  %1472 = getelementptr inbounds %class.scoped_refptr.69, %class.scoped_refptr.69* %1456, i64 1
  %1473 = icmp eq %class.scoped_refptr.69* %1472, %1413
  br i1 %1473, label %1415, label %1454
}

declare void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc8ClipNodeD1Ev(%"struct.cc::ClipNode"*) unnamed_addr #4

declare void @_ZN2cc5Layer24SetSubtreeHasCopyRequestEb(%"class.cc::Layer"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"*) local_unnamed_addr #2

declare void @_ZN2cc5Layer25SetSubtreePropertyChangedEv(%"class.cc::Layer"*) local_unnamed_addr #2

declare float @_ZNK2cc5Layer16EffectiveOpacityEv(%"class.cc::Layer"*) local_unnamed_addr #2

declare void @_ZN2cc5Layer18SetEffectTreeIndexEi(%"class.cc::Layer"*, i32) local_unnamed_addr #2

declare i32 @_ZN2cc10EffectTree6InsertERKNS_10EffectNodeEi(%"class.cc::EffectTree"*, %"struct.cc::EffectNode"* dereferenceable(288), i32) local_unnamed_addr #2

declare void @_ZN2cc10EffectNodeC1Ev(%"struct.cc::EffectNode"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc10EffectNodeD1Ev(%"struct.cc::EffectNode"*) unnamed_addr #4

declare i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8), float) local_unnamed_addr #2

declare dereferenceable(24) %"class.cc::FilterOperations"* @_ZN2cc16FilterOperationsaSEOS0_(%"class.cc::FilterOperations"*, %"class.cc::FilterOperations"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"*) unnamed_addr #4

declare zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"*) local_unnamed_addr #2

declare void @_ZN2cc12PictureLayer23SetIsBackdropFilterMaskEb(%"class.cc::PictureLayer"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer21SubtreeHasCopyRequestEv(%"class.cc::Layer"*) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN2cc5Layer17EffectiveClipRectEv(%"class.cc::Layer"*) local_unnamed_addr #2

declare void @_ZN2cc5Layer16TakeCopyRequestsEPNSt3__16vectorINS1_10unique_ptrIN3viz17CopyOutputRequestENS1_14default_deleteIS5_EEEENS1_9allocatorIS8_EEEE(%"class.cc::Layer"*, %"class.std::__1::vector.109"*) local_unnamed_addr #2

declare void @_ZN2cc10EffectTree14AddCopyRequestEiNSt3__110unique_ptrIN3viz17CopyOutputRequestENS1_14default_deleteIS4_EEEE(%"class.cc::EffectTree"*, i32, %"class.viz::CopyOutputRequest"*) local_unnamed_addr #2

declare i32 @_ZNK2cc5Layer26GetElementTypeForAnimationEv(%"class.cc::Layer"*) local_unnamed_addr #2

declare void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

declare i32 @_ZNK2cc5Layer29NumDescendantsThatDrawContentEv(%"class.cc::Layer"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer12DrawsContentEv(%"class.cc::Layer"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2cc16FilterOperationsC1ERKS0_(%"class.cc::FilterOperations"*, %"class.cc::FilterOperations"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"*) unnamed_addr #2

declare void @_ZN3gfx6RRectFC2Effffffffffff(%"class.gfx::RRectF"*, float, float, float, float, float, float, float, float, float, float, float, float) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.176"* @_ZNSt3__16vectorINS_4pairIN2cc9ElementIdEiEENS_9allocatorIS4_EEE7emplaceIJS3_iEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.174"*, %"struct.std::__1::pair.176"*, %"struct.cc::ElementId"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.176"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.174", %"class.std::__1::vector.174"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.174", %"class.std::__1::vector.174"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.174", %"class.std::__1::vector.174"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.176"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.176"* %9 to i64
  %14 = ptrtoint %"struct.std::__1::pair.176"* %11 to i64
  br i1 %12, label %15, label %145

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair.176"* %9, %1
  %17 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %2, i64 0, i32 0
  br i1 %16, label %18, label %26

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %1, i64 0, i32 0, i32 0
  %20 = load i64, i64* %17, align 8
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %1, i64 0, i32 1
  %22 = load i32, i32* %3, align 4
  store i32 %22, i32* %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %1, i64 1
  %24 = ptrtoint %"struct.std::__1::pair.176"* %23 to i64
  %25 = bitcast %"struct.std::__1::pair.176"** %8 to i64*
  store i64 %24, i64* %25, align 8
  br label %296

26:                                               ; preds = %15
  %27 = load i64, i64* %17, align 8
  %28 = load i32, i32* %3, align 4
  %29 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %1, i64 1
  %30 = ptrtoint %"struct.std::__1::pair.176"* %29 to i64
  %31 = sub i64 %13, %30
  %32 = ashr exact i64 %31, 4
  %33 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %1, i64 %32
  %34 = bitcast %"struct.std::__1::pair.176"** %8 to i64*
  %35 = icmp ult %"struct.std::__1::pair.176"* %33, %9
  br i1 %35, label %36, label %65

36:                                               ; preds = %26
  %37 = sub nsw i64 0, %32
  %38 = getelementptr %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %9, i64 %37, i32 0, i32 0
  %39 = bitcast i64* %38 to i8*
  %40 = xor i64 %5, -1
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = lshr i64 %42, 4
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 3
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %36, %47
  %48 = phi %"struct.std::__1::pair.176"* [ %54, %47 ], [ %9, %36 ]
  %49 = phi %"struct.std::__1::pair.176"* [ %53, %47 ], [ %33, %36 ]
  %50 = phi i64 [ %55, %47 ], [ %45, %36 ]
  %51 = bitcast %"struct.std::__1::pair.176"* %48 to i8*
  %52 = bitcast %"struct.std::__1::pair.176"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 16, i1 false) #9
  %53 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %49, i64 1
  %54 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %48, i64 1
  %55 = add i64 %50, -1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %47, !llvm.loop !15

57:                                               ; preds = %47, %36
  %58 = phi %"struct.std::__1::pair.176"* [ %9, %36 ], [ %54, %47 ]
  %59 = phi %"struct.std::__1::pair.176"* [ %33, %36 ], [ %53, %47 ]
  %60 = phi %"struct.std::__1::pair.176"* [ undef, %36 ], [ %54, %47 ]
  %61 = icmp ult i8* %41, inttoptr (i64 48 to i8*)
  br i1 %61, label %62, label %122

62:                                               ; preds = %122, %57
  %63 = phi %"struct.std::__1::pair.176"* [ %60, %57 ], [ %140, %122 ]
  %64 = ptrtoint %"struct.std::__1::pair.176"* %63 to i64
  br label %65

65:                                               ; preds = %62, %26
  %66 = phi i64 [ %64, %62 ], [ %13, %26 ]
  store i64 %66, i64* %34, align 8
  %67 = icmp eq i64 %31, 0
  br i1 %67, label %142, label %68

68:                                               ; preds = %65
  %69 = add i64 %31, -16
  %70 = lshr i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %88, label %74

74:                                               ; preds = %68, %74
  %75 = phi %"struct.std::__1::pair.176"* [ %79, %74 ], [ %9, %68 ]
  %76 = phi %"struct.std::__1::pair.176"* [ %78, %74 ], [ %33, %68 ]
  %77 = phi i64 [ %86, %74 ], [ %72, %68 ]
  %78 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %76, i64 -1
  %79 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %75, i64 -1
  %80 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %78, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %79, i64 0, i32 0, i32 0
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %76, i64 -1, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %75, i64 -1, i32 1
  store i32 %84, i32* %85, align 8
  %86 = add i64 %77, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %74, !llvm.loop !17

88:                                               ; preds = %74, %68
  %89 = phi %"struct.std::__1::pair.176"* [ %9, %68 ], [ %79, %74 ]
  %90 = phi %"struct.std::__1::pair.176"* [ %33, %68 ], [ %78, %74 ]
  %91 = icmp ult i64 %69, 48
  br i1 %91, label %142, label %92

92:                                               ; preds = %88, %92
  %93 = phi %"struct.std::__1::pair.176"* [ %114, %92 ], [ %89, %88 ]
  %94 = phi %"struct.std::__1::pair.176"* [ %113, %92 ], [ %90, %88 ]
  %95 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %94, i64 -1, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %93, i64 -1, i32 0, i32 0
  %97 = load i64, i64* %95, align 8
  store i64 %97, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %94, i64 -1, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %93, i64 -1, i32 1
  store i32 %99, i32* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %94, i64 -2, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %93, i64 -2, i32 0, i32 0
  %103 = load i64, i64* %101, align 8
  store i64 %103, i64* %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %94, i64 -2, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %93, i64 -2, i32 1
  store i32 %105, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %94, i64 -3, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %93, i64 -3, i32 0, i32 0
  %109 = load i64, i64* %107, align 8
  store i64 %109, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %94, i64 -3, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %93, i64 -3, i32 1
  store i32 %111, i32* %112, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %94, i64 -4
  %114 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %93, i64 -4
  %115 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %113, i64 0, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %114, i64 0, i32 0, i32 0
  %117 = load i64, i64* %115, align 8
  store i64 %117, i64* %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %94, i64 -4, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %93, i64 -4, i32 1
  store i32 %119, i32* %120, align 8
  %121 = icmp eq %"struct.std::__1::pair.176"* %113, %1
  br i1 %121, label %142, label %92

122:                                              ; preds = %57, %122
  %123 = phi %"struct.std::__1::pair.176"* [ %140, %122 ], [ %58, %57 ]
  %124 = phi %"struct.std::__1::pair.176"* [ %139, %122 ], [ %59, %57 ]
  %125 = bitcast %"struct.std::__1::pair.176"* %123 to i8*
  %126 = bitcast %"struct.std::__1::pair.176"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #9
  %127 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %124, i64 1
  %128 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %123, i64 1
  %129 = bitcast %"struct.std::__1::pair.176"* %128 to i8*
  %130 = bitcast %"struct.std::__1::pair.176"* %127 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 16, i1 false) #9
  %131 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %124, i64 2
  %132 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %123, i64 2
  %133 = bitcast %"struct.std::__1::pair.176"* %132 to i8*
  %134 = bitcast %"struct.std::__1::pair.176"* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 16, i1 false) #9
  %135 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %124, i64 3
  %136 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %123, i64 3
  %137 = bitcast %"struct.std::__1::pair.176"* %136 to i8*
  %138 = bitcast %"struct.std::__1::pair.176"* %135 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 16, i1 false) #9
  %139 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %124, i64 4
  %140 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %123, i64 4
  %141 = icmp ult %"struct.std::__1::pair.176"* %139, %9
  br i1 %141, label %122, label %62

142:                                              ; preds = %88, %92, %65
  %143 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %1, i64 0, i32 0, i32 0
  store i64 %27, i64* %143, align 8
  %144 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %1, i64 0, i32 1
  store i32 %28, i32* %144, align 8
  br label %296

145:                                              ; preds = %4
  %146 = getelementptr inbounds %"class.std::__1::vector.174", %"class.std::__1::vector.174"* %0, i64 0, i32 0, i32 2
  %147 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %147) #9
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 0
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 1
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 2
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 1, i32 0
  %153 = bitcast %"struct.std::__1::pair.176"** %8 to i64*
  %154 = bitcast %"class.std::__1::vector.174"* %0 to i64*
  %155 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 -86, i64 40, i1 false)
  %156 = load i64, i64* %154, align 8
  %157 = sub i64 %13, %156
  %158 = ashr exact i64 %157, 4
  %159 = add nsw i64 %158, 1
  %160 = icmp ugt i64 %159, 1152921504606846975
  br i1 %160, label %161, label %163

161:                                              ; preds = %145
  %162 = bitcast %"class.std::__1::vector.174"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %162) #11
  unreachable

163:                                              ; preds = %145
  %164 = bitcast %"struct.std::__1::pair.176"** %10 to i64*
  %165 = sub i64 %14, %156
  %166 = ashr exact i64 %165, 4
  %167 = icmp ult i64 %166, 576460752303423487
  br i1 %167, label %172, label %168

168:                                              ; preds = %163
  %169 = sub i64 %5, %156
  %170 = ashr exact i64 %169, 4
  store %"struct.std::__1::pair.176"* null, %"struct.std::__1::pair.176"** %151, align 8
  %171 = bitcast %"class.std::__1::allocator.180"** %152 to %"class.std::__1::__compressed_pair.177"**
  store %"class.std::__1::__compressed_pair.177"* %146, %"class.std::__1::__compressed_pair.177"** %171, align 8
  br label %183

172:                                              ; preds = %163
  %173 = ashr exact i64 %165, 3
  %174 = icmp ult i64 %173, %159
  %175 = select i1 %174, i64 %159, i64 %173
  %176 = sub i64 %5, %156
  %177 = ashr exact i64 %176, 4
  store %"struct.std::__1::pair.176"* null, %"struct.std::__1::pair.176"** %151, align 8
  %178 = bitcast %"class.std::__1::allocator.180"** %152 to %"class.std::__1::__compressed_pair.177"**
  store %"class.std::__1::__compressed_pair.177"* %146, %"class.std::__1::__compressed_pair.177"** %178, align 8
  %179 = icmp eq i64 %175, 0
  br i1 %179, label %189, label %180

180:                                              ; preds = %172
  %181 = icmp ugt i64 %175, 1152921504606846975
  br i1 %181, label %182, label %183

182:                                              ; preds = %180
  tail call void @abort() #11
  unreachable

183:                                              ; preds = %168, %180
  %184 = phi i64 [ 1152921504606846975, %168 ], [ %175, %180 ]
  %185 = phi i64 [ %170, %168 ], [ %177, %180 ]
  %186 = shl i64 %184, 4
  %187 = tail call i8* @_Znwm(i64 %186) #10
  %188 = bitcast i8* %187 to %"struct.std::__1::pair.176"*
  br label %189

189:                                              ; preds = %172, %183
  %190 = phi i64 [ %185, %183 ], [ %177, %172 ]
  %191 = phi i64 [ %184, %183 ], [ 0, %172 ]
  %192 = phi %"struct.std::__1::pair.176"* [ %188, %183 ], [ null, %172 ]
  store %"struct.std::__1::pair.176"* %192, %"struct.std::__1::pair.176"** %148, align 8
  %193 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %192, i64 %190
  store %"struct.std::__1::pair.176"* %193, %"struct.std::__1::pair.176"** %150, align 8
  store %"struct.std::__1::pair.176"* %193, %"struct.std::__1::pair.176"** %149, align 8
  %194 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %192, i64 %191
  store %"struct.std::__1::pair.176"* %194, %"struct.std::__1::pair.176"** %151, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN2cc9ElementIdEiEERNS_9allocatorIS4_EEE12emplace_backIJS3_iEEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %6, %"struct.cc::ElementId"* dereferenceable(8) %2, i32* dereferenceable(4) %3)
  %195 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %149, align 8
  %196 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %7, align 8
  %197 = ptrtoint %"struct.std::__1::pair.176"* %196 to i64
  %198 = sub i64 %5, %197
  %199 = ashr exact i64 %198, 4
  %200 = sub nsw i64 0, %199
  %201 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %195, i64 %200
  store %"struct.std::__1::pair.176"* %201, %"struct.std::__1::pair.176"** %149, align 8
  %202 = icmp sgt i64 %198, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %189
  %204 = bitcast %"struct.std::__1::pair.176"* %201 to i8*
  %205 = bitcast %"struct.std::__1::pair.176"* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* align 8 %205, i64 %198, i1 false) #9
  br label %206

206:                                              ; preds = %203, %189
  %207 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %8, align 8
  %208 = icmp eq %"struct.std::__1::pair.176"* %207, %1
  br i1 %208, label %209, label %213

209:                                              ; preds = %206
  %210 = ptrtoint %"struct.std::__1::pair.176"* %207 to i64
  %211 = bitcast %"struct.std::__1::pair.176"** %150 to i64*
  %212 = load i64, i64* %211, align 8
  br label %270

213:                                              ; preds = %206
  %214 = bitcast %"struct.std::__1::pair.176"** %150 to i8**
  %215 = load i8*, i8** %214, align 8
  %216 = getelementptr %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %207, i64 -1, i32 0, i32 0
  %217 = ptrtoint i64* %216 to i64
  %218 = sub i64 %217, %5
  %219 = lshr i64 %218, 4
  %220 = add nuw nsw i64 %219, 1
  %221 = and i64 %220, 3
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %236, label %223

223:                                              ; preds = %213, %223
  %224 = phi i8* [ %231, %223 ], [ %215, %213 ]
  %225 = phi %"struct.std::__1::pair.176"* [ %228, %223 ], [ %1, %213 ]
  %226 = phi i64 [ %232, %223 ], [ %221, %213 ]
  %227 = bitcast %"struct.std::__1::pair.176"* %225 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %224, i8* align 8 %227, i64 16, i1 false) #9
  %228 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %225, i64 1
  %229 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %150, align 8
  %230 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %229, i64 1
  store %"struct.std::__1::pair.176"* %230, %"struct.std::__1::pair.176"** %150, align 8
  %231 = bitcast %"struct.std::__1::pair.176"* %230 to i8*
  %232 = add i64 %226, -1
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %223, !llvm.loop !18

234:                                              ; preds = %223
  %235 = bitcast %"struct.std::__1::pair.176"* %230 to i8*
  br label %236

236:                                              ; preds = %213, %234
  %237 = phi %"struct.std::__1::pair.176"* [ undef, %213 ], [ %230, %234 ]
  %238 = phi i8* [ %215, %213 ], [ %235, %234 ]
  %239 = phi %"struct.std::__1::pair.176"* [ %1, %213 ], [ %228, %234 ]
  %240 = icmp ult i64 %218, 48
  br i1 %240, label %265, label %241

241:                                              ; preds = %236, %241
  %242 = phi i8* [ %264, %241 ], [ %238, %236 ]
  %243 = phi %"struct.std::__1::pair.176"* [ %260, %241 ], [ %239, %236 ]
  %244 = bitcast %"struct.std::__1::pair.176"* %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %244, i64 16, i1 false) #9
  %245 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %243, i64 1
  %246 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %150, align 8
  %247 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %246, i64 1
  store %"struct.std::__1::pair.176"* %247, %"struct.std::__1::pair.176"** %150, align 8
  %248 = bitcast %"struct.std::__1::pair.176"* %247 to i8*
  %249 = bitcast %"struct.std::__1::pair.176"* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %248, i8* align 8 %249, i64 16, i1 false) #9
  %250 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %243, i64 2
  %251 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %150, align 8
  %252 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %251, i64 1
  store %"struct.std::__1::pair.176"* %252, %"struct.std::__1::pair.176"** %150, align 8
  %253 = bitcast %"struct.std::__1::pair.176"* %252 to i8*
  %254 = bitcast %"struct.std::__1::pair.176"* %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %253, i8* align 8 %254, i64 16, i1 false) #9
  %255 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %243, i64 3
  %256 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %150, align 8
  %257 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %256, i64 1
  store %"struct.std::__1::pair.176"* %257, %"struct.std::__1::pair.176"** %150, align 8
  %258 = bitcast %"struct.std::__1::pair.176"* %257 to i8*
  %259 = bitcast %"struct.std::__1::pair.176"* %255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %258, i8* align 8 %259, i64 16, i1 false) #9
  %260 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %243, i64 4
  %261 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %150, align 8
  %262 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %261, i64 1
  store %"struct.std::__1::pair.176"* %262, %"struct.std::__1::pair.176"** %150, align 8
  %263 = icmp eq %"struct.std::__1::pair.176"* %260, %207
  %264 = bitcast %"struct.std::__1::pair.176"* %262 to i8*
  br i1 %263, label %265, label %241

265:                                              ; preds = %241, %236
  %266 = phi %"struct.std::__1::pair.176"* [ %237, %236 ], [ %262, %241 ]
  %267 = ptrtoint %"struct.std::__1::pair.176"* %266 to i64
  %268 = load i64, i64* %153, align 8
  %269 = bitcast %"struct.std::__1::pair.176"** %150 to i64*
  br label %270

270:                                              ; preds = %209, %265
  %271 = phi i64* [ %211, %209 ], [ %269, %265 ]
  %272 = phi i64 [ %212, %209 ], [ %267, %265 ]
  %273 = phi i64 [ %210, %209 ], [ %268, %265 ]
  %274 = load i64, i64* %154, align 8
  %275 = bitcast %"struct.std::__1::pair.176"** %149 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %154, align 8
  store i64 %274, i64* %275, align 8
  store i64 %272, i64* %153, align 8
  store i64 %273, i64* %271, align 8
  %277 = load i64, i64* %164, align 8
  %278 = bitcast %"struct.std::__1::pair.176"** %151 to i64*
  %279 = load i64, i64* %278, align 8
  store i64 %279, i64* %164, align 8
  store i64 %277, i64* %278, align 8
  %280 = bitcast %"struct.std::__1::__split_buffer"* %6 to i64*
  store i64 %274, i64* %280, align 8
  %281 = inttoptr i64 %274 to %"struct.std::__1::pair.176"*
  %282 = inttoptr i64 %273 to %"struct.std::__1::pair.176"*
  %283 = icmp eq %"struct.std::__1::pair.176"* %282, %281
  br i1 %283, label %291, label %284

284:                                              ; preds = %270
  %285 = getelementptr %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %282, i64 -1, i32 0, i32 0
  %286 = ptrtoint i64* %285 to i64
  %287 = sub i64 %286, %274
  %288 = lshr i64 %287, 4
  %289 = xor i64 %288, -1
  %290 = getelementptr %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %282, i64 %289
  store %"struct.std::__1::pair.176"* %290, %"struct.std::__1::pair.176"** %150, align 8
  br label %291

291:                                              ; preds = %284, %270
  %292 = icmp eq i64 %274, 0
  br i1 %292, label %295, label %293

293:                                              ; preds = %291
  %294 = inttoptr i64 %274 to i8*
  call void @_ZdlPv(i8* %294) #10
  br label %295

295:                                              ; preds = %291, %293
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %147) #9
  br label %296

296:                                              ; preds = %18, %142, %295
  %297 = phi %"struct.std::__1::pair.176"* [ %1, %18 ], [ %1, %142 ], [ %195, %295 ]
  ret %"struct.std::__1::pair.176"* %297
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN2cc9ElementIdEiEERNS_9allocatorIS4_EEE12emplace_backIJS3_iEEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"struct.cc::ElementId"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.176"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.176"* %7 to i64
  br i1 %8, label %10, label %174

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.176"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.176"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.176"* %15 to i64
  br i1 %16, label %18, label %90

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.176"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.176"* %12, %5
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %5, i64 -1, i32 0, i32 0
  %28 = ptrtoint i64* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.176"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.176"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %36, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %35, i64 0, i32 0, i32 0
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %36, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %35, i64 0, i32 1
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !19

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair.176"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair.176"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair.176"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair.176"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair.176"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %55, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %54, i64 0, i32 0, i32 0
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %55, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %54, i64 0, i32 1
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %55, i64 1, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %54, i64 1, i32 0, i32 0
  %64 = load i64, i64* %62, align 8
  store i64 %64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %55, i64 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %54, i64 1, i32 1
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %55, i64 2, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %54, i64 2, i32 0, i32 0
  %70 = load i64, i64* %68, align 8
  store i64 %70, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %55, i64 2, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %54, i64 2, i32 1
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %55, i64 3, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %54, i64 3, i32 0, i32 0
  %76 = load i64, i64* %74, align 8
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %55, i64 3, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %54, i64 3, i32 1
  store i32 %78, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair.176"* %80, %5
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair.176"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair.176"* [ %5, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair.176"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair.176"* %88, %"struct.std::__1::pair.176"** %4, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %87, i64 %23
  store %"struct.std::__1::pair.176"* %89, %"struct.std::__1::pair.176"** %11, align 8
  br label %174

90:                                               ; preds = %10
  %91 = bitcast %"struct.std::__1::pair.176"** %6 to i64*
  %92 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %93 = sub i64 %9, %17
  %94 = ashr exact i64 %93, 3
  %95 = icmp eq i64 %93, 0
  %96 = select i1 %95, i64 1, i64 %94
  %97 = icmp ugt i64 %96, 1152921504606846975
  br i1 %97, label %98, label %99

98:                                               ; preds = %90
  tail call void @abort() #11
  unreachable

99:                                               ; preds = %90
  %100 = lshr i64 %96, 2
  %101 = shl i64 %96, 4
  %102 = tail call i8* @_Znwm(i64 %101) #10
  %103 = bitcast i8* %102 to %"struct.std::__1::pair.176"*
  %104 = ptrtoint i8* %102 to i64
  %105 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %103, i64 %100
  %106 = ptrtoint %"struct.std::__1::pair.176"* %105 to i64
  %107 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %103, i64 %96
  %108 = ptrtoint %"struct.std::__1::pair.176"* %107 to i64
  %109 = ptrtoint %"struct.std::__1::pair.176"* %5 to i64
  %110 = sub i64 %109, %13
  %111 = ashr exact i64 %110, 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %105, i64 %111
  %113 = icmp eq i64 %110, 0
  br i1 %113, label %164, label %114

114:                                              ; preds = %99
  %115 = add i64 %110, -16
  %116 = lshr i64 %115, 4
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 3
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %134, label %120

120:                                              ; preds = %114, %120
  %121 = phi %"struct.std::__1::pair.176"* [ %127, %120 ], [ %105, %114 ]
  %122 = phi i64 [ %128, %120 ], [ %106, %114 ]
  %123 = phi %"struct.std::__1::pair.176"* [ %129, %120 ], [ %12, %114 ]
  %124 = phi i64 [ %130, %120 ], [ %118, %114 ]
  %125 = inttoptr i64 %122 to i8*
  %126 = bitcast %"struct.std::__1::pair.176"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #9
  %127 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %121, i64 1
  %128 = ptrtoint %"struct.std::__1::pair.176"* %127 to i64
  %129 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %123, i64 1
  %130 = add i64 %124, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !20

132:                                              ; preds = %120
  %133 = ptrtoint %"struct.std::__1::pair.176"* %127 to i64
  br label %134

134:                                              ; preds = %114, %132
  %135 = phi %"struct.std::__1::pair.176"* [ %105, %114 ], [ %127, %132 ]
  %136 = phi i64 [ %106, %114 ], [ %133, %132 ]
  %137 = phi %"struct.std::__1::pair.176"* [ %12, %114 ], [ %129, %132 ]
  %138 = icmp ult i64 %115, 48
  br i1 %138, label %161, label %139

139:                                              ; preds = %134, %139
  %140 = phi %"struct.std::__1::pair.176"* [ %157, %139 ], [ %135, %134 ]
  %141 = phi i64 [ %158, %139 ], [ %136, %134 ]
  %142 = phi %"struct.std::__1::pair.176"* [ %159, %139 ], [ %137, %134 ]
  %143 = inttoptr i64 %141 to i8*
  %144 = bitcast %"struct.std::__1::pair.176"* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 16, i1 false) #9
  %145 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %140, i64 1
  %146 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %142, i64 1
  %147 = bitcast %"struct.std::__1::pair.176"* %145 to i8*
  %148 = bitcast %"struct.std::__1::pair.176"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 16, i1 false) #9
  %149 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %140, i64 2
  %150 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %142, i64 2
  %151 = bitcast %"struct.std::__1::pair.176"* %149 to i8*
  %152 = bitcast %"struct.std::__1::pair.176"* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 16, i1 false) #9
  %153 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %140, i64 3
  %154 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %142, i64 3
  %155 = bitcast %"struct.std::__1::pair.176"* %153 to i8*
  %156 = bitcast %"struct.std::__1::pair.176"* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 16, i1 false) #9
  %157 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %140, i64 4
  %158 = ptrtoint %"struct.std::__1::pair.176"* %157 to i64
  %159 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %142, i64 4
  %160 = icmp eq %"struct.std::__1::pair.176"* %112, %157
  br i1 %160, label %161, label %139

161:                                              ; preds = %139, %134
  %162 = ptrtoint %"struct.std::__1::pair.176"* %112 to i64
  %163 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %14, align 8
  br label %164

164:                                              ; preds = %99, %161
  %165 = phi %"struct.std::__1::pair.176"* [ %163, %161 ], [ %15, %99 ]
  %166 = phi i64 [ %162, %161 ], [ %106, %99 ]
  store i64 %104, i64* %92, align 8
  %167 = bitcast %"struct.std::__1::pair.176"** %11 to i64*
  store i64 %106, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::pair.176"** %4 to i64*
  store i64 %166, i64* %168, align 8
  store i64 %108, i64* %91, align 8
  %169 = icmp eq %"struct.std::__1::pair.176"* %165, null
  %170 = inttoptr i64 %166 to %"struct.std::__1::pair.176"*
  br i1 %169, label %174, label %171

171:                                              ; preds = %164
  %172 = bitcast %"struct.std::__1::pair.176"* %165 to i8*
  tail call void @_ZdlPv(i8* %172) #10
  %173 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %4, align 8
  br label %174

174:                                              ; preds = %171, %164, %86, %3
  %175 = phi %"struct.std::__1::pair.176"* [ %173, %171 ], [ %170, %164 ], [ %88, %86 ], [ %5, %3 ]
  %176 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 0, i32 0
  %177 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %175, i64 0, i32 0, i32 0
  %178 = load i64, i64* %176, align 8
  store i64 %178, i64* %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %175, i64 0, i32 1
  %180 = load i32, i32* %2, align 4
  store i32 %180, i32* %179, align 8
  %181 = load %"struct.std::__1::pair.176"*, %"struct.std::__1::pair.176"** %4, align 8
  %182 = getelementptr inbounds %"struct.std::__1::pair.176", %"struct.std::__1::pair.176"* %181, i64 1
  store %"struct.std::__1::pair.176"* %182, %"struct.std::__1::pair.176"** %4, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"*) unnamed_addr #4

declare <2 x float> @_ZNK3gfx9Transform15To2dTranslationEv(%"class.gfx::Transform"*) local_unnamed_addr #2

declare void @_ZN2cc5Layer26SetOffsetToTransformParentEN3gfx9Vector2dFE(%"class.cc::Layer"*, <2 x float>) local_unnamed_addr #2

declare void @_ZN2cc5Layer21SetTransformTreeIndexEi(%"class.cc::Layer"*, i32) local_unnamed_addr #2

declare i32 @_ZN2cc13TransformTree6InsertERKNS_13TransformNodeEi(%"class.cc::TransformTree"*, %"struct.cc::TransformNode"* dereferenceable(224), i32) local_unnamed_addr #2

declare void @_ZN2cc13TransformNodeC1Ev(%"struct.cc::TransformNode"*) unnamed_addr #2

declare void @_ZN2cc13TransformTree16UpdateTransformsEi(%"class.cc::TransformTree"*, i32) local_unnamed_addr #2

declare void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"*) local_unnamed_addr #2

declare void @_ZN3gfx5RectFpLERKNS_9Vector2dFE(%"class.gfx::RectF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZNK2cc5Layer17effect_tree_indexEv(%"class.cc::Layer"*) local_unnamed_addr #2

declare void @_ZN2cc12ClipExpanderC1Ei(%"class.cc::ClipExpander"*, i32) unnamed_addr #2

declare void @_ZN2cc5Layer16SetClipTreeIndexEi(%"class.cc::Layer"*, i32) local_unnamed_addr #2

declare void @_ZN2cc12ClipExpanderC1ERKS0_(%"class.cc::ClipExpander"*, %"class.cc::ClipExpander"* dereferenceable(4)) unnamed_addr #2

declare zeroext i1 @_ZNK2cc6Region7IsEmptyEv(%"class.cc::Region"*) local_unnamed_addr #2

declare void @_ZN2cc10ScrollNodeC1Ev(%"struct.cc::ScrollNode"*) unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer27GetUserScrollableHorizontalEv(%"class.cc::Layer"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer25GetUserScrollableVerticalEv(%"class.cc::Layer"*) local_unnamed_addr #2

declare i32 @_ZN2cc12PropertyTreeINS_10ScrollNodeEE6InsertERKS1_i(%"class.cc::PropertyTree.284"*, %"struct.cc::ScrollNode"* dereferenceable(168), i32) local_unnamed_addr #2

declare void @_ZN2cc10ScrollTree19SetBaseScrollOffsetENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"*, i64, %"class.gfx::ScrollOffset"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc10ScrollNodeD1Ev(%"struct.cc::ScrollNode"*) unnamed_addr #4

declare void @_ZN2cc5Layer18SetScrollTreeIndexEi(%"class.cc::Layer"*, i32) local_unnamed_addr #2

declare void @_ZN2cc5Layer28SetSafeOpaqueBackgroundColorEj(%"class.cc::Layer"*, i32) local_unnamed_addr #2

declare i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK2cc5Layer16backdrop_filtersEv: argument 0"}
!5 = distinct !{!5, !"_ZNK2cc5Layer16backdrop_filtersEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK2cc5Layer7filtersEv: argument 0"}
!8 = distinct !{!8, !"_ZNK2cc5Layer7filtersEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK2cc5Layer16backdrop_filtersEv: argument 0"}
!11 = distinct !{!11, !"_ZNK2cc5Layer16backdrop_filtersEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK2cc5Layer22backdrop_filter_boundsEv: argument 0"}
!14 = distinct !{!14, !"_ZNK2cc5Layer22backdrop_filter_boundsEv"}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !16}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !16}
!20 = distinct !{!20, !16}
